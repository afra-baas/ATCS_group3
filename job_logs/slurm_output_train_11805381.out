****Start Time: 2023-05-22_21-01-43
Loading model huggyllama/llama-7b
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:35<00:35, 35.04s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:47<00:00, 21.74s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:47<00:00, 23.73s/it]
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Model huggyllama/llama-7b loaded
pad token added
Available device is cuda
Model device: cuda:0
----------- 42 en huggyllama/llama-7b SA active 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 29.23it/s]100%|██████████| 3/3 [00:00<00:00, 29.13it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0873],
        [0.1053],
        [0.0359],
        [0.0448],
        [0.0718],
        [0.0833],
        [0.0541],
        [0.0768],
        [0.0511],
        [0.0600],
        [0.0421],
        [0.2084],
        [0.0791],
        [0.0890],
        [0.1416],
        [0.0402]], device='cuda:0', dtype=torch.float16)/tensor([[0.0873, 0.1053, 0.0359, 0.0448, 0.0718, 0.0833, 0.0541, 0.0768, 0.0511,
         0.0600, 0.0421, 0.2084, 0.0791, 0.0890, 0.1416, 0.0402]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0190],
        [0.0361],
        [0.0413],
        [0.0699],
        [0.0707],
        [0.0690],
        [0.0706],
        [0.0627],
        [0.0130],
        [0.0582],
        [0.0971],
        [0.0503],
        [0.0889],
        [0.0761],
        [0.1472],
        [0.0775]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0361, 0.0413, 0.0699, 0.0707, 0.0690, 0.0706, 0.0627, 0.0130,
         0.0582, 0.0971, 0.0503, 0.0889, 0.0761, 0.1472, 0.0775]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0873, 0.0190],
        [0.1053, 0.0361],
        [0.0359, 0.0413],
        [0.0448, 0.0699],
        [0.0718, 0.0707],
        [0.0833, 0.0690],
        [0.0541, 0.0706],
        [0.0768, 0.0627],
        [0.0511, 0.0130],
        [0.0600, 0.0582],
        [0.0421, 0.0971],
        [0.2084, 0.0503],
        [0.0791, 0.0889],
        [0.0890, 0.0761],
        [0.1416, 0.1472],
        [0.0402, 0.0775]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0489],
        [0.0763],
        [0.0622],
        [0.1085],
        [0.1083],
        [0.0585],
        [0.0594],
        [0.0851],
        [0.0549],
        [0.0787],
        [0.0414],
        [0.0696],
        [0.0826],
        [0.1276],
        [0.0453],
        [0.1077]], device='cuda:0', dtype=torch.float16)/tensor([[0.0489, 0.0763, 0.0622, 0.1085, 0.1083, 0.0585, 0.0594, 0.0851, 0.0549,
         0.0787, 0.0414, 0.0696, 0.0826, 0.1276, 0.0453, 0.1077]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0188],
        [0.0831],
        [0.0837],
        [0.0643],
        [0.1652],
        [0.0157],
        [0.0857],
        [0.0927],
        [0.0153],
        [0.0247],
        [0.0298],
        [0.0432],
        [0.0707],
        [0.0386],
        [0.0391],
        [0.0806]], device='cuda:0', dtype=torch.float16)/tensor([[0.0188, 0.0831, 0.0837, 0.0643, 0.1652, 0.0157, 0.0857, 0.0927, 0.0153,
         0.0247, 0.0298, 0.0432, 0.0707, 0.0386, 0.0391, 0.0806]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0489, 0.0188],
        [0.0763, 0.0831],
        [0.0622, 0.0837],
        [0.1085, 0.0643],
        [0.1083, 0.1652],
        [0.0585, 0.0157],
        [0.0594, 0.0857],
        [0.0851, 0.0927],
        [0.0549, 0.0153],
        [0.0787, 0.0247],
        [0.0414, 0.0298],
        [0.0696, 0.0432],
        [0.0826, 0.0707],
        [0.1276, 0.0386],
        [0.0453, 0.0391],
        [0.1077, 0.0806]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0732],
        [0.0460],
        [0.1595],
        [0.0750],
        [0.0803],
        [0.0829],
        [0.2067],
        [0.0889],
        [0.0712],
        [0.1277],
        [0.0573],
        [0.0688],
        [0.0883],
        [0.0729],
        [0.1285],
        [0.0824]], device='cuda:0', dtype=torch.float16)/tensor([[0.0732, 0.0460, 0.1595, 0.0750, 0.0803, 0.0829, 0.2067, 0.0889, 0.0712,
         0.1277, 0.0573, 0.0688, 0.0883, 0.0729, 0.1285, 0.0824]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0041],
        [0.1020],
        [0.0397],
        [0.1040],
        [0.0754],
        [0.0836],
        [0.0547],
        [0.0259],
        [0.0089],
        [0.0191],
        [0.0144],
        [0.0147],
        [0.0163],
        [0.0106],
        [0.0444],
        [0.0488]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.1020, 0.0397, 0.1040, 0.0754, 0.0836, 0.0547, 0.0259, 0.0089,
         0.0191, 0.0144, 0.0147, 0.0163, 0.0106, 0.0444, 0.0488]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0732, 0.0041],
        [0.0460, 0.1020],
        [0.1595, 0.0397],
        [0.0750, 0.1040],
        [0.0803, 0.0754],
        [0.0829, 0.0836],
        [0.2067, 0.0547],
        [0.0889, 0.0259],
        [0.0712, 0.0089],
        [0.1277, 0.0191],
        [0.0573, 0.0144],
        [0.0688, 0.0147],
        [0.0883, 0.0163],
        [0.0729, 0.0106],
        [0.1285, 0.0444],
        [0.0824, 0.0488]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0676],
        [0.0773],
        [0.0560],
        [0.0502],
        [0.0670],
        [0.0989],
        [0.0733],
        [0.0910],
        [0.0728],
        [0.0995],
        [0.0467],
        [0.1081],
        [0.0528],
        [0.0854],
        [0.0445],
        [0.0603]], device='cuda:0', dtype=torch.float16)/tensor([[0.0676, 0.0773, 0.0560, 0.0502, 0.0670, 0.0989, 0.0733, 0.0910, 0.0728,
         0.0995, 0.0467, 0.1081, 0.0528, 0.0854, 0.0445, 0.0603]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0211],
        [0.0395],
        [0.0137],
        [0.0033],
        [0.0654],
        [0.0370],
        [0.0532],
        [0.0420],
        [0.0443],
        [0.0191],
        [0.1156],
        [0.0278],
        [0.0331],
        [0.0867],
        [0.0679],
        [0.0485]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0395, 0.0137, 0.0033, 0.0654, 0.0370, 0.0532, 0.0420, 0.0443,
         0.0191, 0.1156, 0.0278, 0.0331, 0.0867, 0.0679, 0.0485]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0676, 0.0211],
        [0.0773, 0.0395],
        [0.0560, 0.0137],
        [0.0502, 0.0033],
        [0.0670, 0.0654],
        [0.0989, 0.0370],
        [0.0733, 0.0532],
        [0.0910, 0.0420],
        [0.0728, 0.0443],
        [0.0995, 0.0191],
        [0.0467, 0.1156],
        [0.1081, 0.0278],
        [0.0528, 0.0331],
        [0.0854, 0.0867],
        [0.0445, 0.0679],
        [0.0603, 0.0485]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1093],
        [0.0676],
        [0.0574],
        [0.0489],
        [0.0617],
        [0.0558],
        [0.1033],
        [0.0688],
        [0.0591],
        [0.1016],
        [0.1520],
        [0.1136],
        [0.1018],
        [0.0530],
        [0.0405],
        [0.1377]], device='cuda:0', dtype=torch.float16)/tensor([[0.1093, 0.0676, 0.0574, 0.0489, 0.0617, 0.0558, 0.1033, 0.0688, 0.0591,
         0.1016, 0.1520, 0.1136, 0.1018, 0.0530, 0.0405, 0.1377]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0701],
        [0.0327],
        [0.0656],
        [0.0576],
        [0.0527],
        [0.0374],
        [0.0338],
        [0.0077],
        [0.0551],
        [0.0255],
        [0.0669],
        [0.0627],
        [0.0278],
        [0.0703],
        [0.0768],
        [0.1525]], device='cuda:0', dtype=torch.float16)/tensor([[0.0701, 0.0327, 0.0656, 0.0576, 0.0527, 0.0374, 0.0338, 0.0077, 0.0551,
         0.0255, 0.0669, 0.0627, 0.0278, 0.0703, 0.0768, 0.1525]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1093, 0.0701],
        [0.0676, 0.0327],
        [0.0574, 0.0656],
        [0.0489, 0.0576],
        [0.0617, 0.0527],
        [0.0558, 0.0374],
        [0.1033, 0.0338],
        [0.0688, 0.0077],
        [0.0591, 0.0551],
        [0.1016, 0.0255],
        [0.1520, 0.0669],
        [0.1136, 0.0627],
        [0.1018, 0.0278],
        [0.0530, 0.0703],
        [0.0405, 0.0768],
        [0.1377, 0.1525]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1259],
        [0.1198],
        [0.0671],
        [0.0658],
        [0.1107],
        [0.0670],
        [0.0303],
        [0.0737],
        [0.0795],
        [0.3157],
        [0.0562],
        [0.0825],
        [0.0876],
        [0.0701],
        [0.0845],
        [0.0558]], device='cuda:0', dtype=torch.float16)/tensor([[0.1259, 0.1198, 0.0671, 0.0658, 0.1107, 0.0670, 0.0303, 0.0737, 0.0795,
         0.3157, 0.0562, 0.0825, 0.0876, 0.0701, 0.0845, 0.0558]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0375],
        [0.0293],
        [0.1039],
        [0.0182],
        [0.0162],
        [0.0735],
        [0.0575],
        [0.0305],
        [0.0364],
        [0.0727],
        [0.0173],
        [0.0613],
        [0.0911],
        [0.0489],
        [0.0268],
        [0.0103]], device='cuda:0', dtype=torch.float16)/tensor([[0.0375, 0.0293, 0.1039, 0.0182, 0.0162, 0.0735, 0.0575, 0.0305, 0.0364,
         0.0727, 0.0173, 0.0613, 0.0911, 0.0489, 0.0268, 0.0103]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1259, 0.0375],
        [0.1198, 0.0293],
        [0.0671, 0.1039],
        [0.0658, 0.0182],
        [0.1107, 0.0162],
        [0.0670, 0.0735],
        [0.0303, 0.0575],
        [0.0737, 0.0305],
        [0.0795, 0.0364],
        [0.3157, 0.0727],
        [0.0562, 0.0173],
        [0.0825, 0.0613],
        [0.0876, 0.0911],
        [0.0701, 0.0489],
        [0.0845, 0.0268],
        [0.0558, 0.0103]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0285],
        [0.0596],
        [0.0588],
        [0.1322],
        [0.0888],
        [0.1070],
        [0.0920],
        [0.1199],
        [0.0933],
        [0.0625],
        [0.0604],
        [0.0784],
        [0.0559],
        [0.0706],
        [0.1254],
        [0.0875]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0596, 0.0588, 0.1322, 0.0888, 0.1070, 0.0920, 0.1199, 0.0933,
         0.0625, 0.0604, 0.0784, 0.0559, 0.0706, 0.1254, 0.0875]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0138],
        [0.0406],
        [0.0612],
        [0.0158],
        [0.0211],
        [0.0279],
        [0.0219],
        [0.0197],
        [0.0315],
        [0.0605],
        [0.0279],
        [0.0345],
        [0.0826],
        [0.0712],
        [0.0343],
        [0.0686]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0406, 0.0612, 0.0158, 0.0211, 0.0279, 0.0219, 0.0197, 0.0315,
         0.0605, 0.0279, 0.0345, 0.0826, 0.0712, 0.0343, 0.0686]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0285, 0.0138],
        [0.0596, 0.0406],
        [0.0588, 0.0612],
        [0.1322, 0.0158],
        [0.0888, 0.0211],
        [0.1070, 0.0279],
        [0.0920, 0.0219],
        [0.1199, 0.0197],
        [0.0933, 0.0315],
        [0.0625, 0.0605],
        [0.0604, 0.0279],
        [0.0784, 0.0345],
        [0.0559, 0.0826],
        [0.0706, 0.0712],
        [0.1254, 0.0343],
        [0.0875, 0.0686]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0419],
        [0.0393],
        [0.1150],
        [0.0959],
        [0.1151],
        [0.0937],
        [0.0968],
        [0.0654],
        [0.0356],
        [0.0489],
        [0.1130],
        [0.0673],
        [0.1155],
        [0.0916],
        [0.0822],
        [0.1122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0419, 0.0393, 0.1150, 0.0959, 0.1151, 0.0937, 0.0968, 0.0654, 0.0356,
         0.0489, 0.1130, 0.0673, 0.1155, 0.0916, 0.0822, 0.1122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0030],
        [0.0189],
        [0.0249],
        [0.0530],
        [0.0548],
        [0.0222],
        [0.0280],
        [0.0141],
        [0.0502],
        [0.0879],
        [0.0239],
        [0.1050],
        [0.0292],
        [0.1055],
        [0.0089],
        [0.0771]], device='cuda:0', dtype=torch.float16)/tensor([[0.0030, 0.0189, 0.0249, 0.0530, 0.0548, 0.0222, 0.0280, 0.0141, 0.0502,
         0.0879, 0.0239, 0.1050, 0.0292, 0.1055, 0.0089, 0.0771]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0419, 0.0030],
        [0.0393, 0.0189],
        [0.1150, 0.0249],
        [0.0959, 0.0530],
        [0.1151, 0.0548],
        [0.0937, 0.0222],
        [0.0968, 0.0280],
        [0.0654, 0.0141],
        [0.0356, 0.0502],
        [0.0489, 0.0879],
        [0.1130, 0.0239],
        [0.0673, 0.1050],
        [0.1155, 0.0292],
        [0.0916, 0.1055],
        [0.0822, 0.0089],
        [0.1122, 0.0771]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0601],
        [0.0504],
        [0.0845],
        [0.1284],
        [0.0974],
        [0.0750],
        [0.0684],
        [0.2109],
        [0.0559],
        [0.0508],
        [0.0517],
        [0.1356],
        [0.0933],
        [0.0494],
        [0.0989],
        [0.0942]], device='cuda:0', dtype=torch.float16)/tensor([[0.0601, 0.0504, 0.0845, 0.1284, 0.0974, 0.0750, 0.0684, 0.2109, 0.0559,
         0.0508, 0.0517, 0.1356, 0.0933, 0.0494, 0.0989, 0.0942]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0714],
        [0.0092],
        [0.0090],
        [0.0570],
        [0.0350],
        [0.0548],
        [0.0205],
        [0.0375],
        [0.0385],
        [0.0392],
        [0.0729],
        [0.1598],
        [0.0249],
        [0.0370],
        [0.0288],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0714, 0.0092, 0.0090, 0.0570, 0.0350, 0.0548, 0.0205, 0.0375, 0.0385,
         0.0392, 0.0729, 0.1598, 0.0249, 0.0370, 0.0288, 0.0313]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0601, 0.0714],
        [0.0504, 0.0092],
        [0.0845, 0.0090],
        [0.1284, 0.0570],
        [0.0974, 0.0350],
        [0.0750, 0.0548],
        [0.0684, 0.0205],
        [0.2109, 0.0375],
        [0.0559, 0.0385],
        [0.0508, 0.0392],
        [0.0517, 0.0729],
        [0.1356, 0.1598],
        [0.0933, 0.0249],
        [0.0494, 0.0370],
        [0.0989, 0.0288],
        [0.0942, 0.0313]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0905],
        [0.1031],
        [0.0478],
        [0.1328],
        [0.0839],
        [0.0938],
        [0.0777],
        [0.0797],
        [0.0593],
        [0.0809],
        [0.0584],
        [0.0716],
        [0.0938],
        [0.0538],
        [0.1154],
        [0.0768]], device='cuda:0', dtype=torch.float16)/tensor([[0.0905, 0.1031, 0.0478, 0.1328, 0.0839, 0.0938, 0.0777, 0.0797, 0.0593,
         0.0809, 0.0584, 0.0716, 0.0938, 0.0538, 0.1154, 0.0768]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0231],
        [0.0875],
        [0.0558],
        [0.0202],
        [0.0180],
        [0.0601],
        [0.1429],
        [0.0269],
        [0.0424],
        [0.0687],
        [0.0617],
        [0.0234],
        [0.0273],
        [0.0105],
        [0.0248],
        [0.0744]], device='cuda:0', dtype=torch.float16)/tensor([[0.0231, 0.0875, 0.0558, 0.0202, 0.0180, 0.0601, 0.1429, 0.0269, 0.0424,
         0.0687, 0.0617, 0.0234, 0.0273, 0.0105, 0.0248, 0.0744]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0905, 0.0231],
        [0.1031, 0.0875],
        [0.0478, 0.0558],
        [0.1328, 0.0202],
        [0.0839, 0.0180],
        [0.0938, 0.0601],
        [0.0777, 0.1429],
        [0.0797, 0.0269],
        [0.0593, 0.0424],
        [0.0809, 0.0687],
        [0.0584, 0.0617],
        [0.0716, 0.0234],
        [0.0938, 0.0273],
        [0.0538, 0.0105],
        [0.1154, 0.0248],
        [0.0768, 0.0744]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1613],
        [0.0591],
        [0.0511],
        [0.1176],
        [0.0970],
        [0.1533],
        [0.0752],
        [0.0679],
        [0.0587],
        [0.1032],
        [0.1289],
        [0.0974],
        [0.1240],
        [0.0684],
        [0.0653],
        [0.0692]], device='cuda:0', dtype=torch.float16)/tensor([[0.1613, 0.0591, 0.0511, 0.1176, 0.0970, 0.1533, 0.0752, 0.0679, 0.0587,
         0.1032, 0.1289, 0.0974, 0.1240, 0.0684, 0.0653, 0.0692]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0480],
        [0.0378],
        [0.0584],
        [0.0185],
        [0.0265],
        [0.1464],
        [0.0169],
        [0.0387],
        [0.0909],
        [0.1433],
        [0.0339],
        [0.0237],
        [0.0135],
        [0.0658],
        [0.0865],
        [0.0170]], device='cuda:0', dtype=torch.float16)/tensor([[0.0480, 0.0378, 0.0584, 0.0185, 0.0265, 0.1464, 0.0169, 0.0387, 0.0909,
         0.1433, 0.0339, 0.0237, 0.0135, 0.0658, 0.0865, 0.0170]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1613, 0.0480],
        [0.0591, 0.0378],
        [0.0511, 0.0584],
        [0.1176, 0.0185],
        [0.0970, 0.0265],
        [0.1533, 0.1464],
        [0.0752, 0.0169],
        [0.0679, 0.0387],
        [0.0587, 0.0909],
        [0.1032, 0.1433],
        [0.1289, 0.0339],
        [0.0974, 0.0237],
        [0.1240, 0.0135],
        [0.0684, 0.0658],
        [0.0653, 0.0865],
        [0.0692, 0.0170]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0839],
        [0.0500],
        [0.0572],
        [0.0726],
        [0.0684],
        [0.0687],
        [0.1732],
        [0.0871],
        [0.0557],
        [0.1140],
        [0.0912],
        [0.0207],
        [0.0544],
        [0.0352],
        [0.0785],
        [0.0844]], device='cuda:0', dtype=torch.float16)/tensor([[0.0839, 0.0500, 0.0572, 0.0726, 0.0684, 0.0687, 0.1732, 0.0871, 0.0557,
         0.1140, 0.0912, 0.0207, 0.0544, 0.0352, 0.0785, 0.0844]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0168],
        [0.0428],
        [0.0183],
        [0.0243],
        [0.0781],
        [0.0676],
        [0.0474],
        [0.0178],
        [0.0473],
        [0.0461],
        [0.0408],
        [0.0063],
        [0.0132],
        [0.0272],
        [0.0216],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0168, 0.0428, 0.0183, 0.0243, 0.0781, 0.0676, 0.0474, 0.0178, 0.0473,
         0.0461, 0.0408, 0.0063, 0.0132, 0.0272, 0.0216, 0.0238]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0839, 0.0168],
        [0.0500, 0.0428],
        [0.0572, 0.0183],
        [0.0726, 0.0243],
        [0.0684, 0.0781],
        [0.0687, 0.0676],
        [0.1732, 0.0474],
        [0.0871, 0.0178],
        [0.0557, 0.0473],
        [0.1140, 0.0461],
        [0.0912, 0.0408],
        [0.0207, 0.0063],
        [0.0544, 0.0132],
        [0.0352, 0.0272],
        [0.0785, 0.0216],
        [0.0844, 0.0238]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0294],
        [0.0555],
        [0.0881],
        [0.0732],
        [0.0758],
        [0.0684],
        [0.0455],
        [0.0406]], device='cuda:0', dtype=torch.float16)/tensor([[0.0294, 0.0555, 0.0881, 0.0732, 0.0758, 0.0684, 0.0455, 0.0406]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0658],
        [0.1166],
        [0.0119],
        [0.0057],
        [0.0517],
        [0.0800],
        [0.0672],
        [0.0815]], device='cuda:0', dtype=torch.float16)/tensor([[0.0658, 0.1166, 0.0119, 0.0057, 0.0517, 0.0800, 0.0672, 0.0815]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0294, 0.0658],
        [0.0555, 0.1166],
        [0.0881, 0.0119],
        [0.0732, 0.0057],
        [0.0758, 0.0517],
        [0.0684, 0.0800],
        [0.0455, 0.0672],
        [0.0406, 0.0815]], device='cuda:0')
acc:  0.75
Time taken to execute the en SA task with prompt type active, variation 0 and batchsize 16: 0:03:32.989943
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b SA active 1 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 180.80it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0995],
        [0.1487],
        [0.1345],
        [0.1272],
        [0.1129],
        [0.0936],
        [0.1274],
        [0.0663],
        [0.0649],
        [0.1119],
        [0.1115],
        [0.0828],
        [0.0821],
        [0.1814],
        [0.0675],
        [0.1019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0995, 0.1487, 0.1345, 0.1272, 0.1129, 0.0936, 0.1274, 0.0663, 0.0649,
         0.1119, 0.1115, 0.0828, 0.0821, 0.1814, 0.0675, 0.1019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0800],
        [0.0373],
        [0.0518],
        [0.0426],
        [0.0367],
        [0.0358],
        [0.0257],
        [0.0281],
        [0.0432],
        [0.0336],
        [0.0483],
        [0.0714],
        [0.0406],
        [0.0424],
        [0.0413],
        [0.0529]], device='cuda:0', dtype=torch.float16)/tensor([[0.0800, 0.0373, 0.0518, 0.0426, 0.0367, 0.0358, 0.0257, 0.0281, 0.0432,
         0.0336, 0.0483, 0.0714, 0.0406, 0.0424, 0.0413, 0.0529]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0995, 0.0800],
        [0.1487, 0.0373],
        [0.1345, 0.0518],
        [0.1272, 0.0426],
        [0.1129, 0.0367],
        [0.0936, 0.0358],
        [0.1274, 0.0257],
        [0.0663, 0.0281],
        [0.0649, 0.0432],
        [0.1119, 0.0336],
        [0.1115, 0.0483],
        [0.0828, 0.0714],
        [0.0821, 0.0406],
        [0.1814, 0.0424],
        [0.0675, 0.0413],
        [0.1019, 0.0529]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1234],
        [0.1445],
        [0.1179],
        [0.0962],
        [0.0668],
        [0.1311],
        [0.1008],
        [0.0926],
        [0.0935],
        [0.0526],
        [0.1285],
        [0.0767],
        [0.0779],
        [0.0629],
        [0.0647],
        [0.0656]], device='cuda:0', dtype=torch.float16)/tensor([[0.1234, 0.1445, 0.1179, 0.0962, 0.0668, 0.1311, 0.1008, 0.0926, 0.0935,
         0.0526, 0.1285, 0.0767, 0.0779, 0.0629, 0.0647, 0.0656]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0450],
        [0.0933],
        [0.0472],
        [0.0552],
        [0.0226],
        [0.0426],
        [0.0869],
        [0.0598],
        [0.0396],
        [0.0514],
        [0.0836],
        [0.0676],
        [0.0829],
        [0.0624],
        [0.0170],
        [0.0250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0450, 0.0933, 0.0472, 0.0552, 0.0226, 0.0426, 0.0869, 0.0598, 0.0396,
         0.0514, 0.0836, 0.0676, 0.0829, 0.0624, 0.0170, 0.0250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1234, 0.0450],
        [0.1445, 0.0933],
        [0.1179, 0.0472],
        [0.0962, 0.0552],
        [0.0668, 0.0226],
        [0.1311, 0.0426],
        [0.1008, 0.0869],
        [0.0926, 0.0598],
        [0.0935, 0.0396],
        [0.0526, 0.0514],
        [0.1285, 0.0836],
        [0.0767, 0.0676],
        [0.0779, 0.0829],
        [0.0629, 0.0624],
        [0.0647, 0.0170],
        [0.0656, 0.0250]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1688],
        [0.1772],
        [0.0880],
        [0.0956],
        [0.0625],
        [0.1084],
        [0.1373],
        [0.0919],
        [0.0893],
        [0.1105],
        [0.0548],
        [0.1451],
        [0.0945],
        [0.0970],
        [0.0988],
        [0.0854]], device='cuda:0', dtype=torch.float16)/tensor([[0.1688, 0.1772, 0.0880, 0.0956, 0.0625, 0.1084, 0.1373, 0.0919, 0.0893,
         0.1105, 0.0548, 0.1451, 0.0945, 0.0970, 0.0988, 0.0854]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.1514],
        [0.1218],
        [0.0624],
        [0.0520],
        [0.0433],
        [0.0695],
        [0.1250],
        [0.1002],
        [0.0505],
        [0.0742],
        [0.0444],
        [0.0718],
        [0.0518],
        [0.0912],
        [0.0878],
        [0.0587]], device='cuda:0', dtype=torch.float16)/tensor([[0.1514, 0.1218, 0.0624, 0.0520, 0.0433, 0.0695, 0.1250, 0.1002, 0.0505,
         0.0742, 0.0444, 0.0718, 0.0518, 0.0912, 0.0878, 0.0587]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1688, 0.1514],
        [0.1772, 0.1218],
        [0.0880, 0.0624],
        [0.0956, 0.0520],
        [0.0625, 0.0433],
        [0.1084, 0.0695],
        [0.1373, 0.1250],
        [0.0919, 0.1002],
        [0.0893, 0.0505],
        [0.1105, 0.0742],
        [0.0548, 0.0444],
        [0.1451, 0.0718],
        [0.0945, 0.0518],
        [0.0970, 0.0912],
        [0.0988, 0.0878],
        [0.0854, 0.0587]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1812],
        [0.1228],
        [0.1219],
        [0.0837],
        [0.0912],
        [0.1054],
        [0.1355],
        [0.1097],
        [0.1957],
        [0.0838],
        [0.1149],
        [0.0749],
        [0.0596],
        [0.1092],
        [0.1018],
        [0.1069]], device='cuda:0', dtype=torch.float16)/tensor([[0.1812, 0.1228, 0.1219, 0.0837, 0.0912, 0.1054, 0.1355, 0.1097, 0.1957,
         0.0838, 0.1149, 0.0749, 0.0596, 0.1092, 0.1018, 0.1069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0271],
        [0.0431],
        [0.0642],
        [0.0831],
        [0.0329],
        [0.1071],
        [0.0309],
        [0.0410],
        [0.0472],
        [0.0372],
        [0.0681],
        [0.0535],
        [0.0596],
        [0.0571],
        [0.0492],
        [0.0224]], device='cuda:0', dtype=torch.float16)/tensor([[0.0271, 0.0431, 0.0642, 0.0831, 0.0329, 0.1071, 0.0309, 0.0410, 0.0472,
         0.0372, 0.0681, 0.0535, 0.0596, 0.0571, 0.0492, 0.0224]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1812, 0.0271],
        [0.1228, 0.0431],
        [0.1219, 0.0642],
        [0.0837, 0.0831],
        [0.0912, 0.0329],
        [0.1054, 0.1071],
        [0.1355, 0.0309],
        [0.1097, 0.0410],
        [0.1957, 0.0472],
        [0.0838, 0.0372],
        [0.1149, 0.0681],
        [0.0749, 0.0535],
        [0.0596, 0.0596],
        [0.1092, 0.0571],
        [0.1018, 0.0492],
        [0.1069, 0.0224]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0664],
        [0.0800],
        [0.0600],
        [0.0891],
        [0.0968],
        [0.1000],
        [0.1300],
        [0.2632],
        [0.0901],
        [0.0637],
        [0.0869],
        [0.0650],
        [0.0888],
        [0.0796],
        [0.0858],
        [0.1255]], device='cuda:0', dtype=torch.float16)/tensor([[0.0664, 0.0800, 0.0600, 0.0891, 0.0968, 0.1000, 0.1300, 0.2632, 0.0901,
         0.0637, 0.0869, 0.0650, 0.0888, 0.0796, 0.0858, 0.1255]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0442],
        [0.0214],
        [0.0429],
        [0.0811],
        [0.0784],
        [0.0640],
        [0.0563],
        [0.0923],
        [0.0724],
        [0.0275],
        [0.0484],
        [0.0291],
        [0.0615],
        [0.0629],
        [0.0418],
        [0.0593]], device='cuda:0', dtype=torch.float16)/tensor([[0.0442, 0.0214, 0.0429, 0.0811, 0.0784, 0.0640, 0.0563, 0.0923, 0.0724,
         0.0275, 0.0484, 0.0291, 0.0615, 0.0629, 0.0418, 0.0593]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0664, 0.0442],
        [0.0800, 0.0214],
        [0.0600, 0.0429],
        [0.0891, 0.0811],
        [0.0968, 0.0784],
        [0.1000, 0.0640],
        [0.1300, 0.0563],
        [0.2632, 0.0923],
        [0.0901, 0.0724],
        [0.0637, 0.0275],
        [0.0869, 0.0484],
        [0.0650, 0.0291],
        [0.0888, 0.0615],
        [0.0796, 0.0629],
        [0.0858, 0.0418],
        [0.1255, 0.0593]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1135],
        [0.1134],
        [0.0972],
        [0.0997],
        [0.1700],
        [0.1506],
        [0.1559],
        [0.0683],
        [0.0747],
        [0.1367],
        [0.0829],
        [0.1057],
        [0.1187],
        [0.0886],
        [0.1147],
        [0.0935]], device='cuda:0', dtype=torch.float16)/tensor([[0.1135, 0.1134, 0.0972, 0.0997, 0.1700, 0.1506, 0.1559, 0.0683, 0.0747,
         0.1367, 0.0829, 0.1057, 0.1187, 0.0886, 0.1147, 0.0935]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0363],
        [0.0444],
        [0.0825],
        [0.0270],
        [0.0322],
        [0.0712],
        [0.1282],
        [0.0444],
        [0.0685],
        [0.0451],
        [0.0210],
        [0.0374],
        [0.1169],
        [0.0489],
        [0.0490],
        [0.0328]], device='cuda:0', dtype=torch.float16)/tensor([[0.0363, 0.0444, 0.0825, 0.0270, 0.0322, 0.0712, 0.1282, 0.0444, 0.0685,
         0.0451, 0.0210, 0.0374, 0.1169, 0.0489, 0.0490, 0.0328]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1135, 0.0363],
        [0.1134, 0.0444],
        [0.0972, 0.0825],
        [0.0997, 0.0270],
        [0.1700, 0.0322],
        [0.1506, 0.0712],
        [0.1559, 0.1282],
        [0.0683, 0.0444],
        [0.0747, 0.0685],
        [0.1367, 0.0451],
        [0.0829, 0.0210],
        [0.1057, 0.0374],
        [0.1187, 0.1169],
        [0.0886, 0.0489],
        [0.1147, 0.0490],
        [0.0935, 0.0328]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0533],
        [0.1241],
        [0.0988],
        [0.0963],
        [0.0662],
        [0.0660],
        [0.0988],
        [0.0965],
        [0.0873],
        [0.0858],
        [0.1145],
        [0.1101],
        [0.1433],
        [0.0972],
        [0.0941],
        [0.0635]], device='cuda:0', dtype=torch.float16)/tensor([[0.0533, 0.1241, 0.0988, 0.0963, 0.0662, 0.0660, 0.0988, 0.0965, 0.0873,
         0.0858, 0.1145, 0.1101, 0.1433, 0.0972, 0.0941, 0.0635]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0264],
        [0.0542],
        [0.0943],
        [0.0612],
        [0.0667],
        [0.0417],
        [0.0207],
        [0.0623],
        [0.0820],
        [0.0274],
        [0.0520],
        [0.0642],
        [0.0688],
        [0.0278],
        [0.0792],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0264, 0.0542, 0.0943, 0.0612, 0.0667, 0.0417, 0.0207, 0.0623, 0.0820,
         0.0274, 0.0520, 0.0642, 0.0688, 0.0278, 0.0792, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0533, 0.0264],
        [0.1241, 0.0542],
        [0.0988, 0.0943],
        [0.0963, 0.0612],
        [0.0662, 0.0667],
        [0.0660, 0.0417],
        [0.0988, 0.0207],
        [0.0965, 0.0623],
        [0.0873, 0.0820],
        [0.0858, 0.0274],
        [0.1145, 0.0520],
        [0.1101, 0.0642],
        [0.1433, 0.0688],
        [0.0972, 0.0278],
        [0.0941, 0.0792],
        [0.0635, 0.0195]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0610],
        [0.1379],
        [0.0870],
        [0.1283],
        [0.0930],
        [0.0811],
        [0.2109],
        [0.0956],
        [0.0545],
        [0.0900],
        [0.0841],
        [0.0686],
        [0.0482],
        [0.0784],
        [0.0895],
        [0.1132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0610, 0.1379, 0.0870, 0.1283, 0.0930, 0.0811, 0.2109, 0.0956, 0.0545,
         0.0900, 0.0841, 0.0686, 0.0482, 0.0784, 0.0895, 0.1132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0206],
        [0.0343],
        [0.0333],
        [0.0420],
        [0.0582],
        [0.0721],
        [0.0525],
        [0.0251],
        [0.0255],
        [0.0533],
        [0.0450],
        [0.0635],
        [0.0103],
        [0.0367],
        [0.0137],
        [0.0348]], device='cuda:0', dtype=torch.float16)/tensor([[0.0206, 0.0343, 0.0333, 0.0420, 0.0582, 0.0721, 0.0525, 0.0251, 0.0255,
         0.0533, 0.0450, 0.0635, 0.0103, 0.0367, 0.0137, 0.0348]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0610, 0.0206],
        [0.1379, 0.0343],
        [0.0870, 0.0333],
        [0.1283, 0.0420],
        [0.0930, 0.0582],
        [0.0811, 0.0721],
        [0.2109, 0.0525],
        [0.0956, 0.0251],
        [0.0545, 0.0255],
        [0.0900, 0.0533],
        [0.0841, 0.0450],
        [0.0686, 0.0635],
        [0.0482, 0.0103],
        [0.0784, 0.0367],
        [0.0895, 0.0137],
        [0.1132, 0.0348]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0834],
        [0.0863],
        [0.1070],
        [0.1006],
        [0.0840],
        [0.0901],
        [0.0286],
        [0.0811],
        [0.0790],
        [0.1081],
        [0.1191],
        [0.1107],
        [0.1404],
        [0.1036],
        [0.0963],
        [0.0901]], device='cuda:0', dtype=torch.float16)/tensor([[0.0834, 0.0863, 0.1070, 0.1006, 0.0840, 0.0901, 0.0286, 0.0811, 0.0790,
         0.1081, 0.1191, 0.1107, 0.1404, 0.1036, 0.0963, 0.0901]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0796],
        [0.0579],
        [0.0266],
        [0.0821],
        [0.0605],
        [0.0551],
        [0.0183],
        [0.0392],
        [0.0343],
        [0.0338],
        [0.0734],
        [0.0503],
        [0.0723],
        [0.0795],
        [0.0303],
        [0.0493]], device='cuda:0', dtype=torch.float16)/tensor([[0.0796, 0.0579, 0.0266, 0.0821, 0.0605, 0.0551, 0.0183, 0.0392, 0.0343,
         0.0338, 0.0734, 0.0503, 0.0723, 0.0795, 0.0303, 0.0493]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0834, 0.0796],
        [0.0863, 0.0579],
        [0.1070, 0.0266],
        [0.1006, 0.0821],
        [0.0840, 0.0605],
        [0.0901, 0.0551],
        [0.0286, 0.0183],
        [0.0811, 0.0392],
        [0.0790, 0.0343],
        [0.1081, 0.0338],
        [0.1191, 0.0734],
        [0.1107, 0.0503],
        [0.1404, 0.0723],
        [0.1036, 0.0795],
        [0.0963, 0.0303],
        [0.0901, 0.0493]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1244],
        [0.0729],
        [0.1161],
        [0.0961],
        [0.0563],
        [0.1450],
        [0.1799],
        [0.0992],
        [0.1311],
        [0.0980],
        [0.1157],
        [0.0849],
        [0.0568],
        [0.1439],
        [0.0719],
        [0.1302]], device='cuda:0', dtype=torch.float16)/tensor([[0.1244, 0.0729, 0.1161, 0.0961, 0.0563, 0.1450, 0.1799, 0.0992, 0.1311,
         0.0980, 0.1157, 0.0849, 0.0568, 0.1439, 0.0719, 0.1302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0903],
        [0.0268],
        [0.0632],
        [0.0234],
        [0.0412],
        [0.0624],
        [0.1109],
        [0.0692],
        [0.0475],
        [0.0328],
        [0.0391],
        [0.0282],
        [0.0184],
        [0.0339],
        [0.0457],
        [0.0692]], device='cuda:0', dtype=torch.float16)/tensor([[0.0903, 0.0268, 0.0632, 0.0234, 0.0412, 0.0624, 0.1109, 0.0692, 0.0475,
         0.0328, 0.0391, 0.0282, 0.0184, 0.0339, 0.0457, 0.0692]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1244, 0.0903],
        [0.0729, 0.0268],
        [0.1161, 0.0632],
        [0.0961, 0.0234],
        [0.0563, 0.0412],
        [0.1450, 0.0624],
        [0.1799, 0.1109],
        [0.0992, 0.0692],
        [0.1311, 0.0475],
        [0.0980, 0.0328],
        [0.1157, 0.0391],
        [0.0849, 0.0282],
        [0.0568, 0.0184],
        [0.1439, 0.0339],
        [0.0719, 0.0457],
        [0.1302, 0.0692]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0836],
        [0.0763],
        [0.0864],
        [0.0835],
        [0.0705],
        [0.0622],
        [0.1355],
        [0.1160],
        [0.1163],
        [0.1095],
        [0.0840],
        [0.1025],
        [0.0864],
        [0.0773],
        [0.1691],
        [0.0467]], device='cuda:0', dtype=torch.float16)/tensor([[0.0836, 0.0763, 0.0864, 0.0835, 0.0705, 0.0622, 0.1355, 0.1160, 0.1163,
         0.1095, 0.0840, 0.1025, 0.0864, 0.0773, 0.1691, 0.0467]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0651],
        [0.0231],
        [0.0684],
        [0.0362],
        [0.0263],
        [0.0103],
        [0.0457],
        [0.1160],
        [0.0378],
        [0.0222],
        [0.0316],
        [0.0532],
        [0.0190],
        [0.0570],
        [0.0511],
        [0.0505]], device='cuda:0', dtype=torch.float16)/tensor([[0.0651, 0.0231, 0.0684, 0.0362, 0.0263, 0.0103, 0.0457, 0.1160, 0.0378,
         0.0222, 0.0316, 0.0532, 0.0190, 0.0570, 0.0511, 0.0505]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0836, 0.0651],
        [0.0763, 0.0231],
        [0.0864, 0.0684],
        [0.0835, 0.0362],
        [0.0705, 0.0263],
        [0.0622, 0.0103],
        [0.1355, 0.0457],
        [0.1160, 0.1160],
        [0.1163, 0.0378],
        [0.1095, 0.0222],
        [0.0840, 0.0316],
        [0.1025, 0.0532],
        [0.0864, 0.0190],
        [0.0773, 0.0570],
        [0.1691, 0.0511],
        [0.0467, 0.0505]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1126],
        [0.1339],
        [0.0889],
        [0.0657],
        [0.0331],
        [0.0873],
        [0.0986],
        [0.1302],
        [0.0721],
        [0.1208],
        [0.2023],
        [0.0789],
        [0.0498],
        [0.0883],
        [0.1093],
        [0.0839]], device='cuda:0', dtype=torch.float16)/tensor([[0.1126, 0.1339, 0.0889, 0.0657, 0.0331, 0.0873, 0.0986, 0.1302, 0.0721,
         0.1208, 0.2023, 0.0789, 0.0498, 0.0883, 0.1093, 0.0839]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0756],
        [0.0408],
        [0.0377],
        [0.0294],
        [0.0106],
        [0.0712],
        [0.0905],
        [0.0635],
        [0.0181],
        [0.0308],
        [0.0699],
        [0.0233],
        [0.0639],
        [0.0869],
        [0.0352],
        [0.0272]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0408, 0.0377, 0.0294, 0.0106, 0.0712, 0.0905, 0.0635, 0.0181,
         0.0308, 0.0699, 0.0233, 0.0639, 0.0869, 0.0352, 0.0272]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1126, 0.0756],
        [0.1339, 0.0408],
        [0.0889, 0.0377],
        [0.0657, 0.0294],
        [0.0331, 0.0106],
        [0.0873, 0.0712],
        [0.0986, 0.0905],
        [0.1302, 0.0635],
        [0.0721, 0.0181],
        [0.1208, 0.0308],
        [0.2023, 0.0699],
        [0.0789, 0.0233],
        [0.0498, 0.0639],
        [0.0883, 0.0869],
        [0.1093, 0.0352],
        [0.0839, 0.0272]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1169],
        [0.0583],
        [0.1018],
        [0.0878],
        [0.0783],
        [0.0970],
        [0.2234],
        [0.0790]], device='cuda:0', dtype=torch.float16)/tensor([[0.1169, 0.0583, 0.1018, 0.0878, 0.0783, 0.0970, 0.2234, 0.0790]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0579],
        [0.0569],
        [0.0383],
        [0.1191],
        [0.0591],
        [0.0292],
        [0.0565],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0579, 0.0569, 0.0383, 0.1191, 0.0591, 0.0292, 0.0565, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1169, 0.0579],
        [0.0583, 0.0569],
        [0.1018, 0.0383],
        [0.0878, 0.1191],
        [0.0783, 0.0591],
        [0.0970, 0.0292],
        [0.2234, 0.0565],
        [0.0790, 0.0256]], device='cuda:0')
acc:  0.535
Time taken to execute the en SA task with prompt type active, variation 1 and batchsize 16: 0:03:34.022009
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b SA active 2 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 329.76it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1355],
        [0.1418],
        [0.1448],
        [0.1238],
        [0.1722],
        [0.1141],
        [0.1249],
        [0.1582],
        [0.1383],
        [0.1429],
        [0.0906],
        [0.1208],
        [0.1024],
        [0.1877],
        [0.0790],
        [0.1619]], device='cuda:0', dtype=torch.float16)/tensor([[0.1355, 0.1418, 0.1448, 0.1238, 0.1722, 0.1141, 0.1249, 0.1582, 0.1383,
         0.1429, 0.0906, 0.1208, 0.1024, 0.1877, 0.0790, 0.1619]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0176],
        [0.0231],
        [0.0283],
        [0.0096],
        [0.0381],
        [0.0178],
        [0.0467],
        [0.0258],
        [0.0258],
        [0.0742],
        [0.0428],
        [0.0120],
        [0.0407],
        [0.0268],
        [0.0300],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0231, 0.0283, 0.0096, 0.0381, 0.0178, 0.0467, 0.0258, 0.0258,
         0.0742, 0.0428, 0.0120, 0.0407, 0.0268, 0.0300, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1355, 0.0176],
        [0.1418, 0.0231],
        [0.1448, 0.0283],
        [0.1238, 0.0096],
        [0.1722, 0.0381],
        [0.1141, 0.0178],
        [0.1249, 0.0467],
        [0.1582, 0.0258],
        [0.1383, 0.0258],
        [0.1429, 0.0742],
        [0.0906, 0.0428],
        [0.1208, 0.0120],
        [0.1024, 0.0407],
        [0.1877, 0.0268],
        [0.0790, 0.0300],
        [0.1619, 0.0123]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1126],
        [0.1782],
        [0.1462],
        [0.1687],
        [0.1621],
        [0.1830],
        [0.1444],
        [0.1051],
        [0.1499],
        [0.1923],
        [0.0708],
        [0.1151],
        [0.1227],
        [0.1176],
        [0.0982],
        [0.1646]], device='cuda:0', dtype=torch.float16)/tensor([[0.1126, 0.1782, 0.1462, 0.1687, 0.1621, 0.1830, 0.1444, 0.1051, 0.1499,
         0.1923, 0.0708, 0.1151, 0.1227, 0.1176, 0.0982, 0.1646]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0458],
        [0.0193],
        [0.0221],
        [0.0370],
        [0.0452],
        [0.0192],
        [0.0207],
        [0.0494],
        [0.0295],
        [0.0596],
        [0.0491],
        [0.0462],
        [0.0582],
        [0.0724],
        [0.0361]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0458, 0.0193, 0.0221, 0.0370, 0.0452, 0.0192, 0.0207, 0.0494,
         0.0295, 0.0596, 0.0491, 0.0462, 0.0582, 0.0724, 0.0361]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1126, 0.0212],
        [0.1782, 0.0458],
        [0.1462, 0.0193],
        [0.1687, 0.0221],
        [0.1621, 0.0370],
        [0.1830, 0.0452],
        [0.1444, 0.0192],
        [0.1051, 0.0207],
        [0.1499, 0.0494],
        [0.1923, 0.0295],
        [0.0708, 0.0596],
        [0.1151, 0.0491],
        [0.1227, 0.0462],
        [0.1176, 0.0582],
        [0.0982, 0.0724],
        [0.1646, 0.0361]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1041],
        [0.1711],
        [0.1593],
        [0.1832],
        [0.2388],
        [0.1357],
        [0.1261],
        [0.1727],
        [0.1214],
        [0.1302],
        [0.1248],
        [0.1676],
        [0.1646],
        [0.1425],
        [0.1425],
        [0.1658]], device='cuda:0', dtype=torch.float16)/tensor([[0.1041, 0.1711, 0.1593, 0.1832, 0.2388, 0.1357, 0.1261, 0.1727, 0.1214,
         0.1302, 0.1248, 0.1676, 0.1646, 0.1425, 0.1425, 0.1658]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0627],
        [0.0138],
        [0.0505],
        [0.0172],
        [0.0851],
        [0.0527],
        [0.0087],
        [0.0286],
        [0.0198],
        [0.0551],
        [0.0130],
        [0.0289],
        [0.0356],
        [0.0190],
        [0.0428],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0627, 0.0138, 0.0505, 0.0172, 0.0851, 0.0527, 0.0087, 0.0286, 0.0198,
         0.0551, 0.0130, 0.0289, 0.0356, 0.0190, 0.0428, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1041, 0.0627],
        [0.1711, 0.0138],
        [0.1593, 0.0505],
        [0.1832, 0.0172],
        [0.2388, 0.0851],
        [0.1357, 0.0527],
        [0.1261, 0.0087],
        [0.1727, 0.0286],
        [0.1214, 0.0198],
        [0.1302, 0.0551],
        [0.1248, 0.0130],
        [0.1676, 0.0289],
        [0.1646, 0.0356],
        [0.1425, 0.0190],
        [0.1425, 0.0428],
        [0.1658, 0.0189]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1519],
        [0.1108],
        [0.1396],
        [0.1506],
        [0.1234],
        [0.1201],
        [0.0615],
        [0.0858],
        [0.1394],
        [0.1368],
        [0.1127],
        [0.1609],
        [0.2098],
        [0.1443],
        [0.1965],
        [0.1753]], device='cuda:0', dtype=torch.float16)/tensor([[0.1519, 0.1108, 0.1396, 0.1506, 0.1234, 0.1201, 0.0615, 0.0858, 0.1394,
         0.1368, 0.1127, 0.1609, 0.2098, 0.1443, 0.1965, 0.1753]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0252],
        [0.0374],
        [0.0148],
        [0.0181],
        [0.0514],
        [0.0541],
        [0.0183],
        [0.0550],
        [0.0509],
        [0.0210],
        [0.0142],
        [0.0433],
        [0.0265],
        [0.0377],
        [0.0217],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0252, 0.0374, 0.0148, 0.0181, 0.0514, 0.0541, 0.0183, 0.0550, 0.0509,
         0.0210, 0.0142, 0.0433, 0.0265, 0.0377, 0.0217, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1519, 0.0252],
        [0.1108, 0.0374],
        [0.1396, 0.0148],
        [0.1506, 0.0181],
        [0.1234, 0.0514],
        [0.1201, 0.0541],
        [0.0615, 0.0183],
        [0.0858, 0.0550],
        [0.1394, 0.0509],
        [0.1368, 0.0210],
        [0.1127, 0.0142],
        [0.1609, 0.0433],
        [0.2098, 0.0265],
        [0.1443, 0.0377],
        [0.1965, 0.0217],
        [0.1753, 0.0208]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0668],
        [0.1420],
        [0.1515],
        [0.1091],
        [0.1201],
        [0.0792],
        [0.2034],
        [0.1509],
        [0.1748],
        [0.2469],
        [0.1489],
        [0.0867],
        [0.1411],
        [0.1501],
        [0.1326],
        [0.1176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0668, 0.1420, 0.1515, 0.1091, 0.1201, 0.0792, 0.2034, 0.1509, 0.1748,
         0.2469, 0.1489, 0.0867, 0.1411, 0.1501, 0.1326, 0.1176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0695],
        [0.0359],
        [0.0545],
        [0.0315],
        [0.0170],
        [0.0562],
        [0.0340],
        [0.0186],
        [0.0224],
        [0.0867],
        [0.0119],
        [0.0327],
        [0.0120],
        [0.0626],
        [0.0300],
        [0.0221]], device='cuda:0', dtype=torch.float16)/tensor([[0.0695, 0.0359, 0.0545, 0.0315, 0.0170, 0.0562, 0.0340, 0.0186, 0.0224,
         0.0867, 0.0119, 0.0327, 0.0120, 0.0626, 0.0300, 0.0221]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0668, 0.0695],
        [0.1420, 0.0359],
        [0.1515, 0.0545],
        [0.1091, 0.0315],
        [0.1201, 0.0170],
        [0.0792, 0.0562],
        [0.2034, 0.0340],
        [0.1509, 0.0186],
        [0.1748, 0.0224],
        [0.2469, 0.0867],
        [0.1489, 0.0119],
        [0.0867, 0.0327],
        [0.1411, 0.0120],
        [0.1501, 0.0626],
        [0.1326, 0.0300],
        [0.1176, 0.0221]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1023],
        [0.0856],
        [0.1382],
        [0.0717],
        [0.2993],
        [0.1846],
        [0.1276],
        [0.1180],
        [0.1785],
        [0.1072],
        [0.0773],
        [0.1399],
        [0.1497],
        [0.1503],
        [0.1159],
        [0.1356]], device='cuda:0', dtype=torch.float16)/tensor([[0.1023, 0.0856, 0.1382, 0.0717, 0.2993, 0.1846, 0.1276, 0.1180, 0.1785,
         0.1072, 0.0773, 0.1399, 0.1497, 0.1503, 0.1159, 0.1356]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0714],
        [0.0420],
        [0.0294],
        [0.0558],
        [0.0442],
        [0.0266],
        [0.0222],
        [0.0657],
        [0.0315],
        [0.0374],
        [0.0462],
        [0.0527],
        [0.0180],
        [0.0484],
        [0.0145],
        [0.0574]], device='cuda:0', dtype=torch.float16)/tensor([[0.0714, 0.0420, 0.0294, 0.0558, 0.0442, 0.0266, 0.0222, 0.0657, 0.0315,
         0.0374, 0.0462, 0.0527, 0.0180, 0.0484, 0.0145, 0.0574]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1023, 0.0714],
        [0.0856, 0.0420],
        [0.1382, 0.0294],
        [0.0717, 0.0558],
        [0.2993, 0.0442],
        [0.1846, 0.0266],
        [0.1276, 0.0222],
        [0.1180, 0.0657],
        [0.1785, 0.0315],
        [0.1072, 0.0374],
        [0.0773, 0.0462],
        [0.1399, 0.0527],
        [0.1497, 0.0180],
        [0.1503, 0.0484],
        [0.1159, 0.0145],
        [0.1356, 0.0574]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1074],
        [0.1166],
        [0.1536],
        [0.1265],
        [0.2208],
        [0.1581],
        [0.2279],
        [0.1006],
        [0.1305],
        [0.1538],
        [0.1071],
        [0.1592],
        [0.1089],
        [0.1803],
        [0.1248],
        [0.1052]], device='cuda:0', dtype=torch.float16)/tensor([[0.1074, 0.1166, 0.1536, 0.1265, 0.2208, 0.1581, 0.2279, 0.1006, 0.1305,
         0.1538, 0.1071, 0.1592, 0.1089, 0.1803, 0.1248, 0.1052]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0323],
        [0.0432],
        [0.0278],
        [0.0322],
        [0.0728],
        [0.0254],
        [0.0746],
        [0.0142],
        [0.0141],
        [0.0265],
        [0.0108],
        [0.0250],
        [0.0310],
        [0.0334],
        [0.0248],
        [0.0090]], device='cuda:0', dtype=torch.float16)/tensor([[0.0323, 0.0432, 0.0278, 0.0322, 0.0728, 0.0254, 0.0746, 0.0142, 0.0141,
         0.0265, 0.0108, 0.0250, 0.0310, 0.0334, 0.0248, 0.0090]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1074, 0.0323],
        [0.1166, 0.0432],
        [0.1536, 0.0278],
        [0.1265, 0.0322],
        [0.2208, 0.0728],
        [0.1581, 0.0254],
        [0.2279, 0.0746],
        [0.1006, 0.0142],
        [0.1305, 0.0141],
        [0.1538, 0.0265],
        [0.1071, 0.0108],
        [0.1592, 0.0250],
        [0.1089, 0.0310],
        [0.1803, 0.0334],
        [0.1248, 0.0248],
        [0.1052, 0.0090]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1423],
        [0.1178],
        [0.1547],
        [0.1378],
        [0.1544],
        [0.1274],
        [0.2311],
        [0.3826],
        [0.1710],
        [0.1188],
        [0.1697],
        [0.1427],
        [0.1647],
        [0.1176],
        [0.1388],
        [0.1140]], device='cuda:0', dtype=torch.float16)/tensor([[0.1423, 0.1178, 0.1547, 0.1378, 0.1544, 0.1274, 0.2311, 0.3826, 0.1710,
         0.1188, 0.1697, 0.1427, 0.1647, 0.1176, 0.1388, 0.1140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0259],
        [0.0726],
        [0.0252],
        [0.0239],
        [0.0513],
        [0.0523],
        [0.0232],
        [0.0436],
        [0.0158],
        [0.0368],
        [0.0501],
        [0.0489],
        [0.0436],
        [0.0461],
        [0.0170],
        [0.0269]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0726, 0.0252, 0.0239, 0.0513, 0.0523, 0.0232, 0.0436, 0.0158,
         0.0368, 0.0501, 0.0489, 0.0436, 0.0461, 0.0170, 0.0269]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1423, 0.0259],
        [0.1178, 0.0726],
        [0.1547, 0.0252],
        [0.1378, 0.0239],
        [0.1544, 0.0513],
        [0.1274, 0.0523],
        [0.2311, 0.0232],
        [0.3826, 0.0436],
        [0.1710, 0.0158],
        [0.1188, 0.0368],
        [0.1697, 0.0501],
        [0.1427, 0.0489],
        [0.1647, 0.0436],
        [0.1176, 0.0461],
        [0.1388, 0.0170],
        [0.1140, 0.0269]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1316],
        [0.1058],
        [0.1865],
        [0.1022],
        [0.1483],
        [0.1654],
        [0.1554],
        [0.0863],
        [0.1476],
        [0.1072],
        [0.0813],
        [0.1093],
        [0.1769],
        [0.1542],
        [0.1056],
        [0.1140]], device='cuda:0', dtype=torch.float16)/tensor([[0.1316, 0.1058, 0.1865, 0.1022, 0.1483, 0.1654, 0.1554, 0.0863, 0.1476,
         0.1072, 0.0813, 0.1093, 0.1769, 0.1542, 0.1056, 0.1140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0540],
        [0.0217],
        [0.0219],
        [0.0620],
        [0.0679],
        [0.0399],
        [0.0186],
        [0.0411],
        [0.0655],
        [0.0156],
        [0.0537],
        [0.0448],
        [0.0410],
        [0.0449],
        [0.0458],
        [0.0490]], device='cuda:0', dtype=torch.float16)/tensor([[0.0540, 0.0217, 0.0219, 0.0620, 0.0679, 0.0399, 0.0186, 0.0411, 0.0655,
         0.0156, 0.0537, 0.0448, 0.0410, 0.0449, 0.0458, 0.0490]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1316, 0.0540],
        [0.1058, 0.0217],
        [0.1865, 0.0219],
        [0.1022, 0.0620],
        [0.1483, 0.0679],
        [0.1654, 0.0399],
        [0.1554, 0.0186],
        [0.0863, 0.0411],
        [0.1476, 0.0655],
        [0.1072, 0.0156],
        [0.0813, 0.0537],
        [0.1093, 0.0448],
        [0.1769, 0.0410],
        [0.1542, 0.0449],
        [0.1056, 0.0458],
        [0.1140, 0.0490]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1433],
        [0.1746],
        [0.1466],
        [0.2306],
        [0.1725],
        [0.1426],
        [0.1091],
        [0.1313],
        [0.1553],
        [0.0891],
        [0.1918],
        [0.0838],
        [0.1547],
        [0.1251],
        [0.1570],
        [0.1115]], device='cuda:0', dtype=torch.float16)/tensor([[0.1433, 0.1746, 0.1466, 0.2306, 0.1725, 0.1426, 0.1091, 0.1313, 0.1553,
         0.0891, 0.1918, 0.0838, 0.1547, 0.1251, 0.1570, 0.1115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0335],
        [0.0283],
        [0.0170],
        [0.0186],
        [0.0198],
        [0.0203],
        [0.0238],
        [0.0450],
        [0.0159],
        [0.0213],
        [0.0421],
        [0.0120],
        [0.0211],
        [0.0413],
        [0.0183],
        [0.0401]], device='cuda:0', dtype=torch.float16)/tensor([[0.0335, 0.0283, 0.0170, 0.0186, 0.0198, 0.0203, 0.0238, 0.0450, 0.0159,
         0.0213, 0.0421, 0.0120, 0.0211, 0.0413, 0.0183, 0.0401]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1433, 0.0335],
        [0.1746, 0.0283],
        [0.1466, 0.0170],
        [0.2306, 0.0186],
        [0.1725, 0.0198],
        [0.1426, 0.0203],
        [0.1091, 0.0238],
        [0.1313, 0.0450],
        [0.1553, 0.0159],
        [0.0891, 0.0213],
        [0.1918, 0.0421],
        [0.0838, 0.0120],
        [0.1547, 0.0211],
        [0.1251, 0.0413],
        [0.1570, 0.0183],
        [0.1115, 0.0401]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1464],
        [0.1635],
        [0.1066],
        [0.2688],
        [0.1655],
        [0.1700],
        [0.0654],
        [0.0556],
        [0.1958],
        [0.1354],
        [0.1248],
        [0.1400],
        [0.1294],
        [0.1010],
        [0.1941],
        [0.1602]], device='cuda:0', dtype=torch.float16)/tensor([[0.1464, 0.1635, 0.1066, 0.2688, 0.1655, 0.1700, 0.0654, 0.0556, 0.1958,
         0.1354, 0.1248, 0.1400, 0.1294, 0.1010, 0.1941, 0.1602]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0286],
        [0.0286],
        [0.0455],
        [0.0270],
        [0.0363],
        [0.0237],
        [0.0271],
        [0.0182],
        [0.0230],
        [0.0490],
        [0.0728],
        [0.0395],
        [0.0330],
        [0.0196],
        [0.0255],
        [0.0111]], device='cuda:0', dtype=torch.float16)/tensor([[0.0286, 0.0286, 0.0455, 0.0270, 0.0363, 0.0237, 0.0271, 0.0182, 0.0230,
         0.0490, 0.0728, 0.0395, 0.0330, 0.0196, 0.0255, 0.0111]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1464, 0.0286],
        [0.1635, 0.0286],
        [0.1066, 0.0455],
        [0.2688, 0.0270],
        [0.1655, 0.0363],
        [0.1700, 0.0237],
        [0.0654, 0.0271],
        [0.0556, 0.0182],
        [0.1958, 0.0230],
        [0.1354, 0.0490],
        [0.1248, 0.0728],
        [0.1400, 0.0395],
        [0.1294, 0.0330],
        [0.1010, 0.0196],
        [0.1941, 0.0255],
        [0.1602, 0.0111]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0704],
        [0.0949],
        [0.2379],
        [0.1394],
        [0.1186],
        [0.1263],
        [0.1704],
        [0.1742],
        [0.1072],
        [0.1453],
        [0.0961],
        [0.0856],
        [0.1458],
        [0.0988],
        [0.1573],
        [0.1243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0704, 0.0949, 0.2379, 0.1394, 0.1186, 0.1263, 0.1704, 0.1742, 0.1072,
         0.1453, 0.0961, 0.0856, 0.1458, 0.0988, 0.1573, 0.1243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0491],
        [0.0357],
        [0.0790],
        [0.0152],
        [0.0263],
        [0.0335],
        [0.0218],
        [0.0298],
        [0.0522],
        [0.0158],
        [0.0468],
        [0.0575],
        [0.0398],
        [0.0399],
        [0.0173],
        [0.0583]], device='cuda:0', dtype=torch.float16)/tensor([[0.0491, 0.0357, 0.0790, 0.0152, 0.0263, 0.0335, 0.0218, 0.0298, 0.0522,
         0.0158, 0.0468, 0.0575, 0.0398, 0.0399, 0.0173, 0.0583]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0704, 0.0491],
        [0.0949, 0.0357],
        [0.2379, 0.0790],
        [0.1394, 0.0152],
        [0.1186, 0.0263],
        [0.1263, 0.0335],
        [0.1704, 0.0218],
        [0.1742, 0.0298],
        [0.1072, 0.0522],
        [0.1453, 0.0158],
        [0.0961, 0.0468],
        [0.0856, 0.0575],
        [0.1458, 0.0398],
        [0.0988, 0.0399],
        [0.1573, 0.0173],
        [0.1243, 0.0583]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1123],
        [0.0901],
        [0.1043],
        [0.1467],
        [0.1431],
        [0.1580],
        [0.1266],
        [0.1350]], device='cuda:0', dtype=torch.float16)/tensor([[0.1123, 0.0901, 0.1043, 0.1467, 0.1431, 0.1580, 0.1266, 0.1350]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0671],
        [0.0232],
        [0.0308],
        [0.0245],
        [0.0152],
        [0.0175],
        [0.0296],
        [0.0512]], device='cuda:0', dtype=torch.float16)/tensor([[0.0671, 0.0232, 0.0308, 0.0245, 0.0152, 0.0175, 0.0296, 0.0512]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1123, 0.0671],
        [0.0901, 0.0232],
        [0.1043, 0.0308],
        [0.1467, 0.0245],
        [0.1431, 0.0152],
        [0.1580, 0.0175],
        [0.1266, 0.0296],
        [0.1350, 0.0512]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type active, variation 2 and batchsize 16: 0:03:31.319112
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b SA active 3 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 305.40it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0680],
        [0.0548],
        [0.0295],
        [0.0620],
        [0.0609],
        [0.0414],
        [0.0627],
        [0.0540],
        [0.1013],
        [0.0558],
        [0.0538],
        [0.1469],
        [0.1134],
        [0.0786],
        [0.0438],
        [0.0773]], device='cuda:0', dtype=torch.float16)/tensor([[0.0680, 0.0548, 0.0295, 0.0620, 0.0609, 0.0414, 0.0627, 0.0540, 0.1013,
         0.0558, 0.0538, 0.1469, 0.1134, 0.0786, 0.0438, 0.0773]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0439],
        [0.0291],
        [0.0267],
        [0.0219],
        [0.0240],
        [0.0162],
        [0.0401],
        [0.0202],
        [0.0314],
        [0.0058],
        [0.0177],
        [0.0926],
        [0.0911],
        [0.0164],
        [0.0374],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0439, 0.0291, 0.0267, 0.0219, 0.0240, 0.0162, 0.0401, 0.0202, 0.0314,
         0.0058, 0.0177, 0.0926, 0.0911, 0.0164, 0.0374, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0680, 0.0439],
        [0.0548, 0.0291],
        [0.0295, 0.0267],
        [0.0620, 0.0219],
        [0.0609, 0.0240],
        [0.0414, 0.0162],
        [0.0627, 0.0401],
        [0.0540, 0.0202],
        [0.1013, 0.0314],
        [0.0558, 0.0058],
        [0.0538, 0.0177],
        [0.1469, 0.0926],
        [0.1134, 0.0911],
        [0.0786, 0.0164],
        [0.0438, 0.0374],
        [0.0773, 0.0136]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0675],
        [0.0235],
        [0.0372],
        [0.0609],
        [0.0441],
        [0.0234],
        [0.0538],
        [0.0910],
        [0.0586],
        [0.0420],
        [0.0643],
        [0.0607],
        [0.0556],
        [0.0525],
        [0.0761],
        [0.0602]], device='cuda:0', dtype=torch.float16)/tensor([[0.0675, 0.0235, 0.0372, 0.0609, 0.0441, 0.0234, 0.0538, 0.0910, 0.0586,
         0.0420, 0.0643, 0.0607, 0.0556, 0.0525, 0.0761, 0.0602]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0180],
        [0.0102],
        [0.0228],
        [0.0453],
        [0.0328],
        [0.0134],
        [0.0397],
        [0.0420],
        [0.0501],
        [0.0282],
        [0.0233],
        [0.0191],
        [0.0282],
        [0.0146],
        [0.0395],
        [0.0138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0102, 0.0228, 0.0453, 0.0328, 0.0134, 0.0397, 0.0420, 0.0501,
         0.0282, 0.0233, 0.0191, 0.0282, 0.0146, 0.0395, 0.0138]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0675, 0.0180],
        [0.0235, 0.0102],
        [0.0372, 0.0228],
        [0.0609, 0.0453],
        [0.0441, 0.0328],
        [0.0234, 0.0134],
        [0.0538, 0.0397],
        [0.0910, 0.0420],
        [0.0586, 0.0501],
        [0.0420, 0.0282],
        [0.0643, 0.0233],
        [0.0607, 0.0191],
        [0.0556, 0.0282],
        [0.0525, 0.0146],
        [0.0761, 0.0395],
        [0.0602, 0.0138]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0453],
        [0.0499],
        [0.0363],
        [0.0874],
        [0.1158],
        [0.0497],
        [0.0557],
        [0.0509],
        [0.0699],
        [0.0536],
        [0.0277],
        [0.0659],
        [0.0730],
        [0.0548],
        [0.0508],
        [0.0749]], device='cuda:0', dtype=torch.float16)/tensor([[0.0453, 0.0499, 0.0363, 0.0874, 0.1158, 0.0497, 0.0557, 0.0509, 0.0699,
         0.0536, 0.0277, 0.0659, 0.0730, 0.0548, 0.0508, 0.0749]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0118],
        [0.0518],
        [0.0278],
        [0.0271],
        [0.0790],
        [0.0384],
        [0.0480],
        [0.0240],
        [0.0141],
        [0.0174],
        [0.0211],
        [0.0264],
        [0.0230],
        [0.0172],
        [0.0437],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0118, 0.0518, 0.0278, 0.0271, 0.0790, 0.0384, 0.0480, 0.0240, 0.0141,
         0.0174, 0.0211, 0.0264, 0.0230, 0.0172, 0.0437, 0.0142]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0453, 0.0118],
        [0.0499, 0.0518],
        [0.0363, 0.0278],
        [0.0874, 0.0271],
        [0.1158, 0.0790],
        [0.0497, 0.0384],
        [0.0557, 0.0480],
        [0.0509, 0.0240],
        [0.0699, 0.0141],
        [0.0536, 0.0174],
        [0.0277, 0.0211],
        [0.0659, 0.0264],
        [0.0730, 0.0230],
        [0.0548, 0.0172],
        [0.0508, 0.0437],
        [0.0749, 0.0142]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0942],
        [0.0628],
        [0.1378],
        [0.0587],
        [0.0753],
        [0.0437],
        [0.0468],
        [0.0518],
        [0.0426],
        [0.0693],
        [0.0544],
        [0.0398],
        [0.0766],
        [0.0570],
        [0.0951],
        [0.0464]], device='cuda:0', dtype=torch.float16)/tensor([[0.0942, 0.0628, 0.1378, 0.0587, 0.0753, 0.0437, 0.0468, 0.0518, 0.0426,
         0.0693, 0.0544, 0.0398, 0.0766, 0.0570, 0.0951, 0.0464]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0209],
        [0.0297],
        [0.0315],
        [0.0443],
        [0.0193],
        [0.0319],
        [0.0619],
        [0.0147],
        [0.0312],
        [0.0332],
        [0.0105],
        [0.0255],
        [0.0340],
        [0.0411],
        [0.0228],
        [0.0312]], device='cuda:0', dtype=torch.float16)/tensor([[0.0209, 0.0297, 0.0315, 0.0443, 0.0193, 0.0319, 0.0619, 0.0147, 0.0312,
         0.0332, 0.0105, 0.0255, 0.0340, 0.0411, 0.0228, 0.0312]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0942, 0.0209],
        [0.0628, 0.0297],
        [0.1378, 0.0315],
        [0.0587, 0.0443],
        [0.0753, 0.0193],
        [0.0437, 0.0319],
        [0.0468, 0.0619],
        [0.0518, 0.0147],
        [0.0426, 0.0312],
        [0.0693, 0.0332],
        [0.0544, 0.0105],
        [0.0398, 0.0255],
        [0.0766, 0.0340],
        [0.0570, 0.0411],
        [0.0951, 0.0228],
        [0.0464, 0.0312]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0667],
        [0.0280],
        [0.0869],
        [0.0842],
        [0.0642],
        [0.0356],
        [0.0816],
        [0.0704],
        [0.0582],
        [0.0515],
        [0.0457],
        [0.0955],
        [0.0710],
        [0.0478],
        [0.0557],
        [0.0595]], device='cuda:0', dtype=torch.float16)/tensor([[0.0667, 0.0280, 0.0869, 0.0842, 0.0642, 0.0356, 0.0816, 0.0704, 0.0582,
         0.0515, 0.0457, 0.0955, 0.0710, 0.0478, 0.0557, 0.0595]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0344],
        [0.0345],
        [0.0267],
        [0.0227],
        [0.0145],
        [0.0413],
        [0.0185],
        [0.0188],
        [0.0530],
        [0.0462],
        [0.0358],
        [0.0195],
        [0.0197],
        [0.0192],
        [0.0170],
        [0.0493]], device='cuda:0', dtype=torch.float16)/tensor([[0.0344, 0.0345, 0.0267, 0.0227, 0.0145, 0.0413, 0.0185, 0.0188, 0.0530,
         0.0462, 0.0358, 0.0195, 0.0197, 0.0192, 0.0170, 0.0493]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0667, 0.0344],
        [0.0280, 0.0345],
        [0.0869, 0.0267],
        [0.0842, 0.0227],
        [0.0642, 0.0145],
        [0.0356, 0.0413],
        [0.0816, 0.0185],
        [0.0704, 0.0188],
        [0.0582, 0.0530],
        [0.0515, 0.0462],
        [0.0457, 0.0358],
        [0.0955, 0.0195],
        [0.0710, 0.0197],
        [0.0478, 0.0192],
        [0.0557, 0.0170],
        [0.0595, 0.0493]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0460],
        [0.0722],
        [0.0474],
        [0.0583],
        [0.0493],
        [0.0754],
        [0.0674],
        [0.1082],
        [0.0508],
        [0.0471],
        [0.0578],
        [0.0734],
        [0.1627],
        [0.1086],
        [0.1243],
        [0.0742]], device='cuda:0', dtype=torch.float16)/tensor([[0.0460, 0.0722, 0.0474, 0.0583, 0.0493, 0.0754, 0.0674, 0.1082, 0.0508,
         0.0471, 0.0578, 0.0734, 0.1627, 0.1086, 0.1243, 0.0742]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0460],
        [0.0673],
        [0.0125],
        [0.0259],
        [0.0160],
        [0.0239],
        [0.0086],
        [0.0883],
        [0.0249],
        [0.0129],
        [0.0526],
        [0.0176],
        [0.0384],
        [0.0794],
        [0.0332],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0460, 0.0673, 0.0125, 0.0259, 0.0160, 0.0239, 0.0086, 0.0883, 0.0249,
         0.0129, 0.0526, 0.0176, 0.0384, 0.0794, 0.0332, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0460, 0.0460],
        [0.0722, 0.0673],
        [0.0474, 0.0125],
        [0.0583, 0.0259],
        [0.0493, 0.0160],
        [0.0754, 0.0239],
        [0.0674, 0.0086],
        [0.1082, 0.0883],
        [0.0508, 0.0249],
        [0.0471, 0.0129],
        [0.0578, 0.0526],
        [0.0734, 0.0176],
        [0.1627, 0.0384],
        [0.1086, 0.0794],
        [0.1243, 0.0332],
        [0.0742, 0.0118]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0746],
        [0.0746],
        [0.0753],
        [0.0720],
        [0.0664],
        [0.0577],
        [0.0413],
        [0.0729],
        [0.1035],
        [0.0511],
        [0.1240],
        [0.0623],
        [0.0545],
        [0.0799],
        [0.0853],
        [0.0739]], device='cuda:0', dtype=torch.float16)/tensor([[0.0746, 0.0746, 0.0753, 0.0720, 0.0664, 0.0577, 0.0413, 0.0729, 0.1035,
         0.0511, 0.1240, 0.0623, 0.0545, 0.0799, 0.0853, 0.0739]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0164],
        [0.0279],
        [0.0376],
        [0.0340],
        [0.0148],
        [0.0114],
        [0.0131],
        [0.0210],
        [0.0180],
        [0.0377],
        [0.0513],
        [0.0163],
        [0.0287],
        [0.0212],
        [0.0385],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0164, 0.0279, 0.0376, 0.0340, 0.0148, 0.0114, 0.0131, 0.0210, 0.0180,
         0.0377, 0.0513, 0.0163, 0.0287, 0.0212, 0.0385, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0746, 0.0164],
        [0.0746, 0.0279],
        [0.0753, 0.0376],
        [0.0720, 0.0340],
        [0.0664, 0.0148],
        [0.0577, 0.0114],
        [0.0413, 0.0131],
        [0.0729, 0.0210],
        [0.1035, 0.0180],
        [0.0511, 0.0377],
        [0.1240, 0.0513],
        [0.0623, 0.0163],
        [0.0545, 0.0287],
        [0.0799, 0.0212],
        [0.0853, 0.0385],
        [0.0739, 0.0231]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0439],
        [0.2507],
        [0.0498],
        [0.0448],
        [0.1554],
        [0.0541],
        [0.0461],
        [0.0552],
        [0.0732],
        [0.0462],
        [0.0404],
        [0.0694],
        [0.0593],
        [0.0721],
        [0.1021],
        [0.0656]], device='cuda:0', dtype=torch.float16)/tensor([[0.0439, 0.2507, 0.0498, 0.0448, 0.1554, 0.0541, 0.0461, 0.0552, 0.0732,
         0.0462, 0.0404, 0.0694, 0.0593, 0.0721, 0.1021, 0.0656]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0396],
        [0.0600],
        [0.0370],
        [0.0396],
        [0.0432],
        [0.0349],
        [0.0351],
        [0.0239],
        [0.0247],
        [0.0148],
        [0.0330],
        [0.0366],
        [0.0160],
        [0.0211],
        [0.0152],
        [0.0383]], device='cuda:0', dtype=torch.float16)/tensor([[0.0396, 0.0600, 0.0370, 0.0396, 0.0432, 0.0349, 0.0351, 0.0239, 0.0247,
         0.0148, 0.0330, 0.0366, 0.0160, 0.0211, 0.0152, 0.0383]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0439, 0.0396],
        [0.2507, 0.0600],
        [0.0498, 0.0370],
        [0.0448, 0.0396],
        [0.1554, 0.0432],
        [0.0541, 0.0349],
        [0.0461, 0.0351],
        [0.0552, 0.0239],
        [0.0732, 0.0247],
        [0.0462, 0.0148],
        [0.0404, 0.0330],
        [0.0694, 0.0366],
        [0.0593, 0.0160],
        [0.0721, 0.0211],
        [0.1021, 0.0152],
        [0.0656, 0.0383]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0582],
        [0.0727],
        [0.0506],
        [0.0610],
        [0.0482],
        [0.0523],
        [0.0421],
        [0.0571],
        [0.0912],
        [0.0582],
        [0.0776],
        [0.0406],
        [0.0475],
        [0.0687],
        [0.0579],
        [0.0796]], device='cuda:0', dtype=torch.float16)/tensor([[0.0582, 0.0727, 0.0506, 0.0610, 0.0482, 0.0523, 0.0421, 0.0571, 0.0912,
         0.0582, 0.0776, 0.0406, 0.0475, 0.0687, 0.0579, 0.0796]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0225],
        [0.0391],
        [0.0339],
        [0.0311],
        [0.0401],
        [0.0369],
        [0.0336],
        [0.0421],
        [0.0334],
        [0.0226],
        [0.0062],
        [0.0290],
        [0.0345],
        [0.0216],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0225, 0.0391, 0.0339, 0.0311, 0.0401, 0.0369, 0.0336, 0.0421,
         0.0334, 0.0226, 0.0062, 0.0290, 0.0345, 0.0216, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0582, 0.0133],
        [0.0727, 0.0225],
        [0.0506, 0.0391],
        [0.0610, 0.0339],
        [0.0482, 0.0311],
        [0.0523, 0.0401],
        [0.0421, 0.0369],
        [0.0571, 0.0336],
        [0.0912, 0.0421],
        [0.0582, 0.0334],
        [0.0776, 0.0226],
        [0.0406, 0.0062],
        [0.0475, 0.0290],
        [0.0687, 0.0345],
        [0.0579, 0.0216],
        [0.0796, 0.0243]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0544],
        [0.0349],
        [0.0338],
        [0.0602],
        [0.0506],
        [0.0796],
        [0.0327],
        [0.0498],
        [0.0934],
        [0.0529],
        [0.0605],
        [0.0692],
        [0.0417],
        [0.0489],
        [0.0655],
        [0.0617]], device='cuda:0', dtype=torch.float16)/tensor([[0.0544, 0.0349, 0.0338, 0.0602, 0.0506, 0.0796, 0.0327, 0.0498, 0.0934,
         0.0529, 0.0605, 0.0692, 0.0417, 0.0489, 0.0655, 0.0617]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0149],
        [0.0322],
        [0.0427],
        [0.0527],
        [0.0189],
        [0.0260],
        [0.0181],
        [0.0334],
        [0.0357],
        [0.0408],
        [0.0314],
        [0.0200],
        [0.0298],
        [0.0428],
        [0.0258],
        [0.0441]], device='cuda:0', dtype=torch.float16)/tensor([[0.0149, 0.0322, 0.0427, 0.0527, 0.0189, 0.0260, 0.0181, 0.0334, 0.0357,
         0.0408, 0.0314, 0.0200, 0.0298, 0.0428, 0.0258, 0.0441]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0544, 0.0149],
        [0.0349, 0.0322],
        [0.0338, 0.0427],
        [0.0602, 0.0527],
        [0.0506, 0.0189],
        [0.0796, 0.0260],
        [0.0327, 0.0181],
        [0.0498, 0.0334],
        [0.0934, 0.0357],
        [0.0529, 0.0408],
        [0.0605, 0.0314],
        [0.0692, 0.0200],
        [0.0417, 0.0298],
        [0.0489, 0.0428],
        [0.0655, 0.0258],
        [0.0617, 0.0441]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0623],
        [0.0546],
        [0.0521],
        [0.0627],
        [0.0641],
        [0.0430],
        [0.0347],
        [0.0618],
        [0.0790],
        [0.0611],
        [0.0460],
        [0.1273],
        [0.0530],
        [0.0548],
        [0.0669],
        [0.0473]], device='cuda:0', dtype=torch.float16)/tensor([[0.0623, 0.0546, 0.0521, 0.0627, 0.0641, 0.0430, 0.0347, 0.0618, 0.0790,
         0.0611, 0.0460, 0.1273, 0.0530, 0.0548, 0.0669, 0.0473]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0384],
        [0.0148],
        [0.0161],
        [0.0301],
        [0.0362],
        [0.0320],
        [0.0316],
        [0.0108],
        [0.0233],
        [0.0137],
        [0.0127],
        [0.0322],
        [0.0093],
        [0.0434],
        [0.0177],
        [0.0545]], device='cuda:0', dtype=torch.float16)/tensor([[0.0384, 0.0148, 0.0161, 0.0301, 0.0362, 0.0320, 0.0316, 0.0108, 0.0233,
         0.0137, 0.0127, 0.0322, 0.0093, 0.0434, 0.0177, 0.0545]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0623, 0.0384],
        [0.0546, 0.0148],
        [0.0521, 0.0161],
        [0.0627, 0.0301],
        [0.0641, 0.0362],
        [0.0430, 0.0320],
        [0.0347, 0.0316],
        [0.0618, 0.0108],
        [0.0790, 0.0233],
        [0.0611, 0.0137],
        [0.0460, 0.0127],
        [0.1273, 0.0322],
        [0.0530, 0.0093],
        [0.0548, 0.0434],
        [0.0669, 0.0177],
        [0.0473, 0.0545]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0445],
        [0.0697],
        [0.0794],
        [0.0673],
        [0.0679],
        [0.1100],
        [0.0630],
        [0.0318],
        [0.0515],
        [0.0327],
        [0.0648],
        [0.0446],
        [0.0432],
        [0.0645],
        [0.0553],
        [0.0479]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0697, 0.0794, 0.0673, 0.0679, 0.1100, 0.0630, 0.0318, 0.0515,
         0.0327, 0.0648, 0.0446, 0.0432, 0.0645, 0.0553, 0.0479]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0432],
        [0.0084],
        [0.0224],
        [0.0217],
        [0.0422],
        [0.0305],
        [0.0114],
        [0.0067],
        [0.0275],
        [0.0054],
        [0.0262],
        [0.0223],
        [0.0235],
        [0.0152],
        [0.0357],
        [0.0578]], device='cuda:0', dtype=torch.float16)/tensor([[0.0432, 0.0084, 0.0224, 0.0217, 0.0422, 0.0305, 0.0114, 0.0067, 0.0275,
         0.0054, 0.0262, 0.0223, 0.0235, 0.0152, 0.0357, 0.0578]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0445, 0.0432],
        [0.0697, 0.0084],
        [0.0794, 0.0224],
        [0.0673, 0.0217],
        [0.0679, 0.0422],
        [0.1100, 0.0305],
        [0.0630, 0.0114],
        [0.0318, 0.0067],
        [0.0515, 0.0275],
        [0.0327, 0.0054],
        [0.0648, 0.0262],
        [0.0446, 0.0223],
        [0.0432, 0.0235],
        [0.0645, 0.0152],
        [0.0553, 0.0357],
        [0.0479, 0.0578]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0610],
        [0.0728],
        [0.0639],
        [0.0526],
        [0.0639],
        [0.0422],
        [0.0792],
        [0.0665]], device='cuda:0', dtype=torch.float16)/tensor([[0.0610, 0.0728, 0.0639, 0.0526, 0.0639, 0.0422, 0.0792, 0.0665]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0439],
        [0.0489],
        [0.0200],
        [0.0450],
        [0.0381],
        [0.0262],
        [0.1033],
        [0.0429]], device='cuda:0', dtype=torch.float16)/tensor([[0.0439, 0.0489, 0.0200, 0.0450, 0.0381, 0.0262, 0.1033, 0.0429]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0610, 0.0439],
        [0.0728, 0.0489],
        [0.0639, 0.0200],
        [0.0526, 0.0450],
        [0.0639, 0.0381],
        [0.0422, 0.0262],
        [0.0792, 0.1033],
        [0.0665, 0.0429]], device='cuda:0')
acc:  0.54
Time taken to execute the en SA task with prompt type active, variation 3 and batchsize 16: 0:03:33.267343
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b SA active 4 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 180.21it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0641],
        [0.0493],
        [0.0303],
        [0.0381],
        [0.0274],
        [0.0931],
        [0.0295],
        [0.1650],
        [0.0274],
        [0.0271],
        [0.0461],
        [0.0358],
        [0.0391],
        [0.1422],
        [0.0356],
        [0.0414]], device='cuda:0', dtype=torch.float16)/tensor([[0.0641, 0.0493, 0.0303, 0.0381, 0.0274, 0.0931, 0.0295, 0.1650, 0.0274,
         0.0271, 0.0461, 0.0358, 0.0391, 0.1422, 0.0356, 0.0414]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0383],
        [0.0173],
        [0.0009],
        [0.0751],
        [0.0180],
        [0.0063],
        [0.0033],
        [0.0115],
        [0.0341],
        [0.0447],
        [0.0203],
        [0.0266],
        [0.0288],
        [0.0140],
        [0.0280],
        [0.0383]], device='cuda:0', dtype=torch.float16)/tensor([[0.0383, 0.0173, 0.0009, 0.0751, 0.0180, 0.0063, 0.0033, 0.0115, 0.0341,
         0.0447, 0.0203, 0.0266, 0.0288, 0.0140, 0.0280, 0.0383]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0641, 0.0383],
        [0.0493, 0.0173],
        [0.0303, 0.0009],
        [0.0381, 0.0751],
        [0.0274, 0.0180],
        [0.0931, 0.0063],
        [0.0295, 0.0033],
        [0.1650, 0.0115],
        [0.0274, 0.0341],
        [0.0271, 0.0447],
        [0.0461, 0.0203],
        [0.0358, 0.0266],
        [0.0391, 0.0288],
        [0.1422, 0.0140],
        [0.0356, 0.0280],
        [0.0414, 0.0383]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0331],
        [0.0346],
        [0.0387],
        [0.0656],
        [0.0823],
        [0.0354],
        [0.0391],
        [0.0443],
        [0.0398],
        [0.0486],
        [0.0412],
        [0.0273],
        [0.0769],
        [0.0661],
        [0.0915],
        [0.1270]], device='cuda:0', dtype=torch.float16)/tensor([[0.0331, 0.0346, 0.0387, 0.0656, 0.0823, 0.0354, 0.0391, 0.0443, 0.0398,
         0.0486, 0.0412, 0.0273, 0.0769, 0.0661, 0.0915, 0.1270]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0285],
        [0.0222],
        [0.0179],
        [0.0265],
        [0.0215],
        [0.0125],
        [0.0403],
        [0.0205],
        [0.0052],
        [0.0327],
        [0.0443],
        [0.0305],
        [0.0063],
        [0.0081],
        [0.1473],
        [0.0695]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0222, 0.0179, 0.0265, 0.0215, 0.0125, 0.0403, 0.0205, 0.0052,
         0.0327, 0.0443, 0.0305, 0.0063, 0.0081, 0.1473, 0.0695]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0331, 0.0285],
        [0.0346, 0.0222],
        [0.0387, 0.0179],
        [0.0656, 0.0265],
        [0.0823, 0.0215],
        [0.0354, 0.0125],
        [0.0391, 0.0403],
        [0.0443, 0.0205],
        [0.0398, 0.0052],
        [0.0486, 0.0327],
        [0.0412, 0.0443],
        [0.0273, 0.0305],
        [0.0769, 0.0063],
        [0.0661, 0.0081],
        [0.0915, 0.1473],
        [0.1270, 0.0695]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0642],
        [0.1179],
        [0.0285],
        [0.0249],
        [0.0560],
        [0.0627],
        [0.0500],
        [0.0154],
        [0.0108],
        [0.0641],
        [0.0467],
        [0.0660],
        [0.3572],
        [0.0451],
        [0.0704],
        [0.0446]], device='cuda:0', dtype=torch.float16)/tensor([[0.0642, 0.1179, 0.0285, 0.0249, 0.0560, 0.0627, 0.0500, 0.0154, 0.0108,
         0.0641, 0.0467, 0.0660, 0.3572, 0.0451, 0.0704, 0.0446]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0051],
        [0.0583],
        [0.0004],
        [0.0289],
        [0.0043],
        [0.0045],
        [0.0015],
        [0.0426],
        [0.0290],
        [0.0296],
        [0.0186],
        [0.0045],
        [0.0137],
        [0.0066],
        [0.0024],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0051, 0.0583, 0.0004, 0.0289, 0.0043, 0.0045, 0.0015, 0.0426, 0.0290,
         0.0296, 0.0186, 0.0045, 0.0137, 0.0066, 0.0024, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0642, 0.0051],
        [0.1179, 0.0583],
        [0.0285, 0.0004],
        [0.0249, 0.0289],
        [0.0560, 0.0043],
        [0.0627, 0.0045],
        [0.0500, 0.0015],
        [0.0154, 0.0426],
        [0.0108, 0.0290],
        [0.0641, 0.0296],
        [0.0467, 0.0186],
        [0.0660, 0.0045],
        [0.3572, 0.0137],
        [0.0451, 0.0066],
        [0.0704, 0.0024],
        [0.0446, 0.0025]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0369],
        [0.0805],
        [0.1080],
        [0.0480],
        [0.0432],
        [0.0413],
        [0.0555],
        [0.1663],
        [0.0216],
        [0.0542],
        [0.0338],
        [0.0446],
        [0.0648],
        [0.0485],
        [0.0193],
        [0.0218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0369, 0.0805, 0.1080, 0.0480, 0.0432, 0.0413, 0.0555, 0.1663, 0.0216,
         0.0542, 0.0338, 0.0446, 0.0648, 0.0485, 0.0193, 0.0218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0020],
        [0.0728],
        [0.0172],
        [0.0284],
        [0.0363],
        [0.0038],
        [0.0010],
        [0.0106],
        [0.0279],
        [0.0161],
        [0.0296],
        [0.0034],
        [0.0363],
        [0.0060],
        [0.0115],
        [0.0005]], device='cuda:0', dtype=torch.float16)/tensor([[0.0020, 0.0728, 0.0172, 0.0284, 0.0363, 0.0038, 0.0010, 0.0106, 0.0279,
         0.0161, 0.0296, 0.0034, 0.0363, 0.0060, 0.0115, 0.0005]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0369, 0.0020],
        [0.0805, 0.0728],
        [0.1080, 0.0172],
        [0.0480, 0.0284],
        [0.0432, 0.0363],
        [0.0413, 0.0038],
        [0.0555, 0.0010],
        [0.1663, 0.0106],
        [0.0216, 0.0279],
        [0.0542, 0.0161],
        [0.0338, 0.0296],
        [0.0446, 0.0034],
        [0.0648, 0.0363],
        [0.0485, 0.0060],
        [0.0193, 0.0115],
        [0.0218, 0.0005]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0567],
        [0.0536],
        [0.0344],
        [0.0315],
        [0.0722],
        [0.0599],
        [0.0515],
        [0.0634],
        [0.0473],
        [0.0167],
        [0.0285],
        [0.0437],
        [0.0358],
        [0.0187],
        [0.1165],
        [0.0606]], device='cuda:0', dtype=torch.float16)/tensor([[0.0567, 0.0536, 0.0344, 0.0315, 0.0722, 0.0599, 0.0515, 0.0634, 0.0473,
         0.0167, 0.0285, 0.0437, 0.0358, 0.0187, 0.1165, 0.0606]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.0082],
        [0.0217],
        [0.0139],
        [0.0058],
        [0.0021],
        [0.0067],
        [0.0183],
        [0.0052],
        [0.0356],
        [0.0215],
        [0.0028],
        [0.0228],
        [0.0288],
        [0.0103],
        [0.0245]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0082, 0.0217, 0.0139, 0.0058, 0.0021, 0.0067, 0.0183, 0.0052,
         0.0356, 0.0215, 0.0028, 0.0228, 0.0288, 0.0103, 0.0245]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0567, 0.0053],
        [0.0536, 0.0082],
        [0.0344, 0.0217],
        [0.0315, 0.0139],
        [0.0722, 0.0058],
        [0.0599, 0.0021],
        [0.0515, 0.0067],
        [0.0634, 0.0183],
        [0.0473, 0.0052],
        [0.0167, 0.0356],
        [0.0285, 0.0215],
        [0.0437, 0.0028],
        [0.0358, 0.0228],
        [0.0187, 0.0288],
        [0.1165, 0.0103],
        [0.0606, 0.0245]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0371],
        [0.0300],
        [0.0936],
        [0.0148],
        [0.0738],
        [0.0720],
        [0.0495],
        [0.1164],
        [0.0576],
        [0.0648],
        [0.0472],
        [0.0536],
        [0.0540],
        [0.0616],
        [0.0414],
        [0.0617]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0300, 0.0936, 0.0148, 0.0738, 0.0720, 0.0495, 0.1164, 0.0576,
         0.0648, 0.0472, 0.0536, 0.0540, 0.0616, 0.0414, 0.0617]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0220],
        [0.0267],
        [0.0092],
        [0.0287],
        [0.0044],
        [0.0060],
        [0.0101],
        [0.0668],
        [0.0044],
        [0.0288],
        [0.0427],
        [0.0101],
        [0.0137],
        [0.0105],
        [0.0020],
        [0.0236]], device='cuda:0', dtype=torch.float16)/tensor([[0.0220, 0.0267, 0.0092, 0.0287, 0.0044, 0.0060, 0.0101, 0.0668, 0.0044,
         0.0288, 0.0427, 0.0101, 0.0137, 0.0105, 0.0020, 0.0236]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0371, 0.0220],
        [0.0300, 0.0267],
        [0.0936, 0.0092],
        [0.0148, 0.0287],
        [0.0738, 0.0044],
        [0.0720, 0.0060],
        [0.0495, 0.0101],
        [0.1164, 0.0668],
        [0.0576, 0.0044],
        [0.0648, 0.0288],
        [0.0472, 0.0427],
        [0.0536, 0.0101],
        [0.0540, 0.0137],
        [0.0616, 0.0105],
        [0.0414, 0.0020],
        [0.0617, 0.0236]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0427],
        [0.0554],
        [0.0588],
        [0.0438],
        [0.0512],
        [0.0376],
        [0.0092],
        [0.0926],
        [0.0549],
        [0.0299],
        [0.0423],
        [0.0311],
        [0.0312],
        [0.0271],
        [0.0474],
        [0.0371]], device='cuda:0', dtype=torch.float16)/tensor([[0.0427, 0.0554, 0.0588, 0.0438, 0.0512, 0.0376, 0.0092, 0.0926, 0.0549,
         0.0299, 0.0423, 0.0311, 0.0312, 0.0271, 0.0474, 0.0371]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0267],
        [0.0049],
        [0.0020],
        [0.0264],
        [0.0389],
        [0.0447],
        [0.0091],
        [0.0116],
        [0.0019],
        [0.0254],
        [0.0398],
        [0.0283],
        [0.0039],
        [0.0228],
        [0.0050],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0049, 0.0020, 0.0264, 0.0389, 0.0447, 0.0091, 0.0116, 0.0019,
         0.0254, 0.0398, 0.0283, 0.0039, 0.0228, 0.0050, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0427, 0.0267],
        [0.0554, 0.0049],
        [0.0588, 0.0020],
        [0.0438, 0.0264],
        [0.0512, 0.0389],
        [0.0376, 0.0447],
        [0.0092, 0.0091],
        [0.0926, 0.0116],
        [0.0549, 0.0019],
        [0.0299, 0.0254],
        [0.0423, 0.0398],
        [0.0311, 0.0283],
        [0.0312, 0.0039],
        [0.0271, 0.0228],
        [0.0474, 0.0050],
        [0.0371, 0.0261]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0768],
        [0.0808],
        [0.0251],
        [0.0775],
        [0.0674],
        [0.0128],
        [0.0249],
        [0.0230],
        [0.0803],
        [0.0385],
        [0.0592],
        [0.0832],
        [0.0543],
        [0.0613],
        [0.0403],
        [0.0867]], device='cuda:0', dtype=torch.float16)/tensor([[0.0768, 0.0808, 0.0251, 0.0775, 0.0674, 0.0128, 0.0249, 0.0230, 0.0803,
         0.0385, 0.0592, 0.0832, 0.0543, 0.0613, 0.0403, 0.0867]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0037],
        [0.0097],
        [0.0240],
        [0.0082],
        [0.0061],
        [0.0284],
        [0.0472],
        [0.0324],
        [0.0074],
        [0.0256],
        [0.0141],
        [0.0087],
        [0.0281],
        [0.0065],
        [0.0007],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0037, 0.0097, 0.0240, 0.0082, 0.0061, 0.0284, 0.0472, 0.0324, 0.0074,
         0.0256, 0.0141, 0.0087, 0.0281, 0.0065, 0.0007, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0768, 0.0037],
        [0.0808, 0.0097],
        [0.0251, 0.0240],
        [0.0775, 0.0082],
        [0.0674, 0.0061],
        [0.0128, 0.0284],
        [0.0249, 0.0472],
        [0.0230, 0.0324],
        [0.0803, 0.0074],
        [0.0385, 0.0256],
        [0.0592, 0.0141],
        [0.0832, 0.0087],
        [0.0543, 0.0281],
        [0.0613, 0.0065],
        [0.0403, 0.0007],
        [0.0867, 0.0351]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0590],
        [0.0346],
        [0.0787],
        [0.0330],
        [0.0169],
        [0.0539],
        [0.0449],
        [0.0483],
        [0.0596],
        [0.0740],
        [0.0825],
        [0.0867],
        [0.0406],
        [0.0850],
        [0.0311],
        [0.0175]], device='cuda:0', dtype=torch.float16)/tensor([[0.0590, 0.0346, 0.0787, 0.0330, 0.0169, 0.0539, 0.0449, 0.0483, 0.0596,
         0.0740, 0.0825, 0.0867, 0.0406, 0.0850, 0.0311, 0.0175]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0058],
        [0.0009],
        [0.0260],
        [0.0004],
        [0.0236],
        [0.0275],
        [0.0260],
        [0.0024],
        [0.0022],
        [0.0065],
        [0.0032],
        [0.0206],
        [0.0014],
        [0.0085],
        [0.0045],
        [0.0003]], device='cuda:0', dtype=torch.float16)/tensor([[0.0058, 0.0009, 0.0260, 0.0004, 0.0236, 0.0275, 0.0260, 0.0024, 0.0022,
         0.0065, 0.0032, 0.0206, 0.0014, 0.0085, 0.0045, 0.0003]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0590, 0.0058],
        [0.0346, 0.0009],
        [0.0787, 0.0260],
        [0.0330, 0.0004],
        [0.0169, 0.0236],
        [0.0539, 0.0275],
        [0.0449, 0.0260],
        [0.0483, 0.0024],
        [0.0596, 0.0022],
        [0.0740, 0.0065],
        [0.0825, 0.0032],
        [0.0867, 0.0206],
        [0.0406, 0.0014],
        [0.0850, 0.0085],
        [0.0311, 0.0045],
        [0.0175, 0.0003]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0737],
        [0.0731],
        [0.0914],
        [0.0745],
        [0.0477],
        [0.0517],
        [0.0561],
        [0.0567],
        [0.1288],
        [0.0399],
        [0.0392],
        [0.0538],
        [0.0770],
        [0.0544],
        [0.0446],
        [0.0344]], device='cuda:0', dtype=torch.float16)/tensor([[0.0737, 0.0731, 0.0914, 0.0745, 0.0477, 0.0517, 0.0561, 0.0567, 0.1288,
         0.0399, 0.0392, 0.0538, 0.0770, 0.0544, 0.0446, 0.0344]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0065],
        [0.0149],
        [0.0075],
        [0.0056],
        [0.0163],
        [0.0457],
        [0.0351],
        [0.0055],
        [0.0132],
        [0.0537],
        [0.0151],
        [0.0012],
        [0.0043],
        [0.0178],
        [0.0337],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0065, 0.0149, 0.0075, 0.0056, 0.0163, 0.0457, 0.0351, 0.0055, 0.0132,
         0.0537, 0.0151, 0.0012, 0.0043, 0.0178, 0.0337, 0.0238]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0737, 0.0065],
        [0.0731, 0.0149],
        [0.0914, 0.0075],
        [0.0745, 0.0056],
        [0.0477, 0.0163],
        [0.0517, 0.0457],
        [0.0561, 0.0351],
        [0.0567, 0.0055],
        [0.1288, 0.0132],
        [0.0399, 0.0537],
        [0.0392, 0.0151],
        [0.0538, 0.0012],
        [0.0770, 0.0043],
        [0.0544, 0.0178],
        [0.0446, 0.0337],
        [0.0344, 0.0238]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0282],
        [0.0275],
        [0.0600],
        [0.0420],
        [0.0398],
        [0.0510],
        [0.0554],
        [0.0342],
        [0.0652],
        [0.0437],
        [0.0422],
        [0.0643],
        [0.0913],
        [0.0635],
        [0.0848],
        [0.0384]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0275, 0.0600, 0.0420, 0.0398, 0.0510, 0.0554, 0.0342, 0.0652,
         0.0437, 0.0422, 0.0643, 0.0913, 0.0635, 0.0848, 0.0384]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0365],
        [0.0293],
        [0.0258],
        [0.0225],
        [0.0392],
        [0.0074],
        [0.0145],
        [0.0103],
        [0.0054],
        [0.0017],
        [0.0074],
        [0.0039],
        [0.0034],
        [0.0123],
        [0.0130],
        [0.0316]], device='cuda:0', dtype=torch.float16)/tensor([[0.0365, 0.0293, 0.0258, 0.0225, 0.0392, 0.0074, 0.0145, 0.0103, 0.0054,
         0.0017, 0.0074, 0.0039, 0.0034, 0.0123, 0.0130, 0.0316]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0282, 0.0365],
        [0.0275, 0.0293],
        [0.0600, 0.0258],
        [0.0420, 0.0225],
        [0.0398, 0.0392],
        [0.0510, 0.0074],
        [0.0554, 0.0145],
        [0.0342, 0.0103],
        [0.0652, 0.0054],
        [0.0437, 0.0017],
        [0.0422, 0.0074],
        [0.0643, 0.0039],
        [0.0913, 0.0034],
        [0.0635, 0.0123],
        [0.0848, 0.0130],
        [0.0384, 0.0316]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0258],
        [0.0272],
        [0.0400],
        [0.0728],
        [0.0479],
        [0.0152],
        [0.0231],
        [0.0511],
        [0.0307],
        [0.0325],
        [0.0383],
        [0.0675],
        [0.0570],
        [0.0461],
        [0.0354],
        [0.0667]], device='cuda:0', dtype=torch.float16)/tensor([[0.0258, 0.0272, 0.0400, 0.0728, 0.0479, 0.0152, 0.0231, 0.0511, 0.0307,
         0.0325, 0.0383, 0.0675, 0.0570, 0.0461, 0.0354, 0.0667]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0332],
        [0.0384],
        [0.0055],
        [0.0076],
        [0.0147],
        [0.0450],
        [0.0215],
        [0.0063],
        [0.0005],
        [0.0227],
        [0.0028],
        [0.0089],
        [0.0029],
        [0.0223],
        [0.0139],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0332, 0.0384, 0.0055, 0.0076, 0.0147, 0.0450, 0.0215, 0.0063, 0.0005,
         0.0227, 0.0028, 0.0089, 0.0029, 0.0223, 0.0139, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0258, 0.0332],
        [0.0272, 0.0384],
        [0.0400, 0.0055],
        [0.0728, 0.0076],
        [0.0479, 0.0147],
        [0.0152, 0.0450],
        [0.0231, 0.0215],
        [0.0511, 0.0063],
        [0.0307, 0.0005],
        [0.0325, 0.0227],
        [0.0383, 0.0028],
        [0.0675, 0.0089],
        [0.0570, 0.0029],
        [0.0461, 0.0223],
        [0.0354, 0.0139],
        [0.0667, 0.0094]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0235],
        [0.0438],
        [0.0410],
        [0.0298],
        [0.0774],
        [0.0597],
        [0.0435],
        [0.0751]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0438, 0.0410, 0.0298, 0.0774, 0.0597, 0.0435, 0.0751]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0293],
        [0.0018],
        [0.0070],
        [0.0310],
        [0.0056],
        [0.0035],
        [0.0177],
        [0.0255]], device='cuda:0', dtype=torch.float16)/tensor([[0.0293, 0.0018, 0.0070, 0.0310, 0.0056, 0.0035, 0.0177, 0.0255]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0235, 0.0293],
        [0.0438, 0.0018],
        [0.0410, 0.0070],
        [0.0298, 0.0310],
        [0.0774, 0.0056],
        [0.0597, 0.0035],
        [0.0435, 0.0177],
        [0.0751, 0.0255]], device='cuda:0')
acc:  0.635
Time taken to execute the en SA task with prompt type active, variation 4 and batchsize 16: 0:03:33.989928
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b SA active 5 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 309.78it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1268],
        [0.0900],
        [0.1372],
        [0.0583],
        [0.1039],
        [0.1019],
        [0.0646],
        [0.0740],
        [0.1362],
        [0.1194],
        [0.1460],
        [0.1122],
        [0.0948],
        [0.1046],
        [0.1378],
        [0.1156]], device='cuda:0', dtype=torch.float16)/tensor([[0.1268, 0.0900, 0.1372, 0.0583, 0.1039, 0.1019, 0.0646, 0.0740, 0.1362,
         0.1194, 0.1460, 0.1122, 0.0948, 0.1046, 0.1378, 0.1156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0226],
        [0.0285],
        [0.0478],
        [0.0085],
        [0.0616],
        [0.0227],
        [0.0383],
        [0.0311],
        [0.0974],
        [0.0714],
        [0.0813],
        [0.0224],
        [0.0524],
        [0.0686],
        [0.0607],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0285, 0.0478, 0.0085, 0.0616, 0.0227, 0.0383, 0.0311, 0.0974,
         0.0714, 0.0813, 0.0224, 0.0524, 0.0686, 0.0607, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1268, 0.0226],
        [0.0900, 0.0285],
        [0.1372, 0.0478],
        [0.0583, 0.0085],
        [0.1039, 0.0616],
        [0.1019, 0.0227],
        [0.0646, 0.0383],
        [0.0740, 0.0311],
        [0.1362, 0.0974],
        [0.1194, 0.0714],
        [0.1460, 0.0813],
        [0.1122, 0.0224],
        [0.0948, 0.0524],
        [0.1046, 0.0686],
        [0.1378, 0.0607],
        [0.1156, 0.0381]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0665],
        [0.1219],
        [0.1455],
        [0.0983],
        [0.1095],
        [0.1356],
        [0.1783],
        [0.1182],
        [0.1844],
        [0.0900],
        [0.0676],
        [0.1121],
        [0.0997],
        [0.1316],
        [0.1439],
        [0.1191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0665, 0.1219, 0.1455, 0.0983, 0.1095, 0.1356, 0.1783, 0.1182, 0.1844,
         0.0900, 0.0676, 0.1121, 0.0997, 0.1316, 0.1439, 0.1191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0578],
        [0.0323],
        [0.0395],
        [0.0195],
        [0.0314],
        [0.0503],
        [0.0737],
        [0.0306],
        [0.0618],
        [0.0285],
        [0.0139],
        [0.0482],
        [0.0206],
        [0.0346],
        [0.0384],
        [0.0793]], device='cuda:0', dtype=torch.float16)/tensor([[0.0578, 0.0323, 0.0395, 0.0195, 0.0314, 0.0503, 0.0737, 0.0306, 0.0618,
         0.0285, 0.0139, 0.0482, 0.0206, 0.0346, 0.0384, 0.0793]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0665, 0.0578],
        [0.1219, 0.0323],
        [0.1455, 0.0395],
        [0.0983, 0.0195],
        [0.1095, 0.0314],
        [0.1356, 0.0503],
        [0.1783, 0.0737],
        [0.1182, 0.0306],
        [0.1844, 0.0618],
        [0.0900, 0.0285],
        [0.0676, 0.0139],
        [0.1121, 0.0482],
        [0.0997, 0.0206],
        [0.1316, 0.0346],
        [0.1439, 0.0384],
        [0.1191, 0.0793]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1219],
        [0.1133],
        [0.0868],
        [0.1041],
        [0.1393],
        [0.1532],
        [0.0972],
        [0.0997],
        [0.0971],
        [0.1116],
        [0.0698],
        [0.1250],
        [0.1176],
        [0.3479],
        [0.1165],
        [0.1370]], device='cuda:0', dtype=torch.float16)/tensor([[0.1219, 0.1133, 0.0868, 0.1041, 0.1393, 0.1532, 0.0972, 0.0997, 0.0971,
         0.1116, 0.0698, 0.1250, 0.1176, 0.3479, 0.1165, 0.1370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0299],
        [0.0391],
        [0.0282],
        [0.0392],
        [0.0396],
        [0.0331],
        [0.0459],
        [0.0286],
        [0.0598],
        [0.0461],
        [0.0238],
        [0.0226],
        [0.0482],
        [0.0664],
        [0.0266],
        [0.0637]], device='cuda:0', dtype=torch.float16)/tensor([[0.0299, 0.0391, 0.0282, 0.0392, 0.0396, 0.0331, 0.0459, 0.0286, 0.0598,
         0.0461, 0.0238, 0.0226, 0.0482, 0.0664, 0.0266, 0.0637]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1219, 0.0299],
        [0.1133, 0.0391],
        [0.0868, 0.0282],
        [0.1041, 0.0392],
        [0.1393, 0.0396],
        [0.1532, 0.0331],
        [0.0972, 0.0459],
        [0.0997, 0.0286],
        [0.0971, 0.0598],
        [0.1116, 0.0461],
        [0.0698, 0.0238],
        [0.1250, 0.0226],
        [0.1176, 0.0482],
        [0.3479, 0.0664],
        [0.1165, 0.0266],
        [0.1370, 0.0637]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.2123],
        [0.1047],
        [0.1203],
        [0.0911],
        [0.0739],
        [0.1006],
        [0.0749],
        [0.1562],
        [0.1025],
        [0.0824],
        [0.1372],
        [0.0919],
        [0.1175],
        [0.0991],
        [0.1439],
        [0.1146]], device='cuda:0', dtype=torch.float16)/tensor([[0.2123, 0.1047, 0.1203, 0.0911, 0.0739, 0.1006, 0.0749, 0.1562, 0.1025,
         0.0824, 0.1372, 0.0919, 0.1175, 0.0991, 0.1439, 0.1146]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0885],
        [0.0337],
        [0.0268],
        [0.0179],
        [0.0201],
        [0.0578],
        [0.0291],
        [0.0484],
        [0.0656],
        [0.0389],
        [0.0347],
        [0.0492],
        [0.0432],
        [0.0420],
        [0.0425],
        [0.0396]], device='cuda:0', dtype=torch.float16)/tensor([[0.0885, 0.0337, 0.0268, 0.0179, 0.0201, 0.0578, 0.0291, 0.0484, 0.0656,
         0.0389, 0.0347, 0.0492, 0.0432, 0.0420, 0.0425, 0.0396]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.2123, 0.0885],
        [0.1047, 0.0337],
        [0.1203, 0.0268],
        [0.0911, 0.0179],
        [0.0739, 0.0201],
        [0.1006, 0.0578],
        [0.0749, 0.0291],
        [0.1562, 0.0484],
        [0.1025, 0.0656],
        [0.0824, 0.0389],
        [0.1372, 0.0347],
        [0.0919, 0.0492],
        [0.1175, 0.0432],
        [0.0991, 0.0420],
        [0.1439, 0.0425],
        [0.1146, 0.0396]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1088],
        [0.1191],
        [0.1902],
        [0.0886],
        [0.1591],
        [0.1175],
        [0.0858],
        [0.1407],
        [0.0878],
        [0.1034],
        [0.1373],
        [0.1215],
        [0.1033],
        [0.0998],
        [0.0953],
        [0.0983]], device='cuda:0', dtype=torch.float16)/tensor([[0.1088, 0.1191, 0.1902, 0.0886, 0.1591, 0.1175, 0.0858, 0.1407, 0.0878,
         0.1034, 0.1373, 0.1215, 0.1033, 0.0998, 0.0953, 0.0983]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0394],
        [0.0195],
        [0.0775],
        [0.0272],
        [0.0415],
        [0.0151],
        [0.0207],
        [0.0334],
        [0.0549],
        [0.0234],
        [0.0501],
        [0.0665],
        [0.0154],
        [0.0254],
        [0.0388],
        [0.0345]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0195, 0.0775, 0.0272, 0.0415, 0.0151, 0.0207, 0.0334, 0.0549,
         0.0234, 0.0501, 0.0665, 0.0154, 0.0254, 0.0388, 0.0345]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1088, 0.0394],
        [0.1191, 0.0195],
        [0.1902, 0.0775],
        [0.0886, 0.0272],
        [0.1591, 0.0415],
        [0.1175, 0.0151],
        [0.0858, 0.0207],
        [0.1407, 0.0334],
        [0.0878, 0.0549],
        [0.1034, 0.0234],
        [0.1373, 0.0501],
        [0.1215, 0.0665],
        [0.1033, 0.0154],
        [0.0998, 0.0254],
        [0.0953, 0.0388],
        [0.0983, 0.0345]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0683],
        [0.0712],
        [0.1214],
        [0.1221],
        [0.1218],
        [0.2522],
        [0.0895],
        [0.0867],
        [0.1095],
        [0.0944],
        [0.1646],
        [0.1663],
        [0.1095],
        [0.1254],
        [0.1091],
        [0.0943]], device='cuda:0', dtype=torch.float16)/tensor([[0.0683, 0.0712, 0.1214, 0.1221, 0.1218, 0.2522, 0.0895, 0.0867, 0.1095,
         0.0944, 0.1646, 0.1663, 0.1095, 0.1254, 0.1091, 0.0943]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0368],
        [0.0190],
        [0.0327],
        [0.0399],
        [0.0205],
        [0.0964],
        [0.0431],
        [0.0479],
        [0.0493],
        [0.0165],
        [0.0314],
        [0.0317],
        [0.0334],
        [0.0322],
        [0.0424],
        [0.0452]], device='cuda:0', dtype=torch.float16)/tensor([[0.0368, 0.0190, 0.0327, 0.0399, 0.0205, 0.0964, 0.0431, 0.0479, 0.0493,
         0.0165, 0.0314, 0.0317, 0.0334, 0.0322, 0.0424, 0.0452]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0683, 0.0368],
        [0.0712, 0.0190],
        [0.1214, 0.0327],
        [0.1221, 0.0399],
        [0.1218, 0.0205],
        [0.2522, 0.0964],
        [0.0895, 0.0431],
        [0.0867, 0.0479],
        [0.1095, 0.0493],
        [0.0944, 0.0165],
        [0.1646, 0.0314],
        [0.1663, 0.0317],
        [0.1095, 0.0334],
        [0.1254, 0.0322],
        [0.1091, 0.0424],
        [0.0943, 0.0452]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1193],
        [0.1133],
        [0.0506],
        [0.0728],
        [0.1070],
        [0.1843],
        [0.1194],
        [0.1218],
        [0.0934],
        [0.0834],
        [0.1102],
        [0.1191],
        [0.0772],
        [0.1696],
        [0.1626],
        [0.0734]], device='cuda:0', dtype=torch.float16)/tensor([[0.1193, 0.1133, 0.0506, 0.0728, 0.1070, 0.1843, 0.1194, 0.1218, 0.0934,
         0.0834, 0.1102, 0.1191, 0.0772, 0.1696, 0.1626, 0.0734]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0467],
        [0.0211],
        [0.0189],
        [0.0102],
        [0.0534],
        [0.0473],
        [0.0282],
        [0.0257],
        [0.0642],
        [0.0665],
        [0.0658],
        [0.0276],
        [0.0602],
        [0.0486],
        [0.0941],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0467, 0.0211, 0.0189, 0.0102, 0.0534, 0.0473, 0.0282, 0.0257, 0.0642,
         0.0665, 0.0658, 0.0276, 0.0602, 0.0486, 0.0941, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1193, 0.0467],
        [0.1133, 0.0211],
        [0.0506, 0.0189],
        [0.0728, 0.0102],
        [0.1070, 0.0534],
        [0.1843, 0.0473],
        [0.1194, 0.0282],
        [0.1218, 0.0257],
        [0.0934, 0.0642],
        [0.0834, 0.0665],
        [0.1102, 0.0658],
        [0.1191, 0.0276],
        [0.0772, 0.0602],
        [0.1696, 0.0486],
        [0.1626, 0.0941],
        [0.0734, 0.0177]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0918],
        [0.1154],
        [0.0741],
        [0.1024],
        [0.0874],
        [0.0981],
        [0.1073],
        [0.1026],
        [0.1349],
        [0.0786],
        [0.1593],
        [0.1098],
        [0.1135],
        [0.0849],
        [0.1373],
        [0.0966]], device='cuda:0', dtype=torch.float16)/tensor([[0.0918, 0.1154, 0.0741, 0.1024, 0.0874, 0.0981, 0.1073, 0.1026, 0.1349,
         0.0786, 0.1593, 0.1098, 0.1135, 0.0849, 0.1373, 0.0966]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0215],
        [0.0278],
        [0.0284],
        [0.0307],
        [0.0453],
        [0.0387],
        [0.0420],
        [0.0396],
        [0.0455],
        [0.0177],
        [0.0439],
        [0.0284],
        [0.0424],
        [0.0368],
        [0.0275],
        [0.0428]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0278, 0.0284, 0.0307, 0.0453, 0.0387, 0.0420, 0.0396, 0.0455,
         0.0177, 0.0439, 0.0284, 0.0424, 0.0368, 0.0275, 0.0428]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0918, 0.0215],
        [0.1154, 0.0278],
        [0.0741, 0.0284],
        [0.1024, 0.0307],
        [0.0874, 0.0453],
        [0.0981, 0.0387],
        [0.1073, 0.0420],
        [0.1026, 0.0396],
        [0.1349, 0.0455],
        [0.0786, 0.0177],
        [0.1593, 0.0439],
        [0.1098, 0.0284],
        [0.1135, 0.0424],
        [0.0849, 0.0368],
        [0.1373, 0.0275],
        [0.0966, 0.0428]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0841],
        [0.1061],
        [0.1013],
        [0.0916],
        [0.1001],
        [0.0899],
        [0.0898],
        [0.1199],
        [0.0981],
        [0.0712],
        [0.1292],
        [0.1130],
        [0.1450],
        [0.1517],
        [0.1323],
        [0.0964]], device='cuda:0', dtype=torch.float16)/tensor([[0.0841, 0.1061, 0.1013, 0.0916, 0.1001, 0.0899, 0.0898, 0.1199, 0.0981,
         0.0712, 0.1292, 0.1130, 0.1450, 0.1517, 0.1323, 0.0964]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0353],
        [0.0228],
        [0.0266],
        [0.0179],
        [0.0274],
        [0.0470],
        [0.0532],
        [0.0536],
        [0.0256],
        [0.0347],
        [0.0490],
        [0.0464],
        [0.0329],
        [0.0294],
        [0.0391],
        [0.0255]], device='cuda:0', dtype=torch.float16)/tensor([[0.0353, 0.0228, 0.0266, 0.0179, 0.0274, 0.0470, 0.0532, 0.0536, 0.0256,
         0.0347, 0.0490, 0.0464, 0.0329, 0.0294, 0.0391, 0.0255]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0841, 0.0353],
        [0.1061, 0.0228],
        [0.1013, 0.0266],
        [0.0916, 0.0179],
        [0.1001, 0.0274],
        [0.0899, 0.0470],
        [0.0898, 0.0532],
        [0.1199, 0.0536],
        [0.0981, 0.0256],
        [0.0712, 0.0347],
        [0.1292, 0.0490],
        [0.1130, 0.0464],
        [0.1450, 0.0329],
        [0.1517, 0.0294],
        [0.1323, 0.0391],
        [0.0964, 0.0255]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1307],
        [0.1078],
        [0.1227],
        [0.1238],
        [0.0861],
        [0.0865],
        [0.1074],
        [0.1193],
        [0.0581],
        [0.1335],
        [0.1220],
        [0.0701],
        [0.1296],
        [0.1434],
        [0.0762],
        [0.1606]], device='cuda:0', dtype=torch.float16)/tensor([[0.1307, 0.1078, 0.1227, 0.1238, 0.0861, 0.0865, 0.1074, 0.1193, 0.0581,
         0.1335, 0.1220, 0.0701, 0.1296, 0.1434, 0.0762, 0.1606]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0278],
        [0.0479],
        [0.0500],
        [0.0202],
        [0.0198],
        [0.0296],
        [0.0492],
        [0.0260],
        [0.0551],
        [0.0574],
        [0.0418],
        [0.0168],
        [0.0571],
        [0.0220],
        [0.0157],
        [0.0464]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0479, 0.0500, 0.0202, 0.0198, 0.0296, 0.0492, 0.0260, 0.0551,
         0.0574, 0.0418, 0.0168, 0.0571, 0.0220, 0.0157, 0.0464]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1307, 0.0278],
        [0.1078, 0.0479],
        [0.1227, 0.0500],
        [0.1238, 0.0202],
        [0.0861, 0.0198],
        [0.0865, 0.0296],
        [0.1074, 0.0492],
        [0.1193, 0.0260],
        [0.0581, 0.0551],
        [0.1335, 0.0574],
        [0.1220, 0.0418],
        [0.0701, 0.0168],
        [0.1296, 0.0571],
        [0.1434, 0.0220],
        [0.0762, 0.0157],
        [0.1606, 0.0464]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0983],
        [0.1483],
        [0.0953],
        [0.0968],
        [0.0763],
        [0.1172],
        [0.1653],
        [0.0938],
        [0.2433],
        [0.1097],
        [0.1116],
        [0.1271],
        [0.0880],
        [0.1003],
        [0.1055],
        [0.0956]], device='cuda:0', dtype=torch.float16)/tensor([[0.0983, 0.1483, 0.0953, 0.0968, 0.0763, 0.1172, 0.1653, 0.0938, 0.2433,
         0.1097, 0.1116, 0.1271, 0.0880, 0.1003, 0.1055, 0.0956]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0475],
        [0.0181],
        [0.0334],
        [0.0107],
        [0.0623],
        [0.0934],
        [0.0289],
        [0.0260],
        [0.0630],
        [0.0498],
        [0.0480],
        [0.0339],
        [0.0158],
        [0.0209],
        [0.0420],
        [0.0196]], device='cuda:0', dtype=torch.float16)/tensor([[0.0475, 0.0181, 0.0334, 0.0107, 0.0623, 0.0934, 0.0289, 0.0260, 0.0630,
         0.0498, 0.0480, 0.0339, 0.0158, 0.0209, 0.0420, 0.0196]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0983, 0.0475],
        [0.1483, 0.0181],
        [0.0953, 0.0334],
        [0.0968, 0.0107],
        [0.0763, 0.0623],
        [0.1172, 0.0934],
        [0.1653, 0.0289],
        [0.0938, 0.0260],
        [0.2433, 0.0630],
        [0.1097, 0.0498],
        [0.1116, 0.0480],
        [0.1271, 0.0339],
        [0.0880, 0.0158],
        [0.1003, 0.0209],
        [0.1055, 0.0420],
        [0.0956, 0.0196]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0994],
        [0.1224],
        [0.1439],
        [0.0920],
        [0.0885],
        [0.2018],
        [0.0856],
        [0.0851],
        [0.1072],
        [0.1476],
        [0.1177],
        [0.0813],
        [0.1075],
        [0.1604],
        [0.0788],
        [0.1123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0994, 0.1224, 0.1439, 0.0920, 0.0885, 0.2018, 0.0856, 0.0851, 0.1072,
         0.1476, 0.1177, 0.0813, 0.1075, 0.1604, 0.0788, 0.1123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0589],
        [0.0569],
        [0.0345],
        [0.0504],
        [0.0508],
        [0.0356],
        [0.0265],
        [0.0118],
        [0.0230],
        [0.0526],
        [0.0269],
        [0.0158],
        [0.0240],
        [0.0372],
        [0.0501],
        [0.0312]], device='cuda:0', dtype=torch.float16)/tensor([[0.0589, 0.0569, 0.0345, 0.0504, 0.0508, 0.0356, 0.0265, 0.0118, 0.0230,
         0.0526, 0.0269, 0.0158, 0.0240, 0.0372, 0.0501, 0.0312]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0994, 0.0589],
        [0.1224, 0.0569],
        [0.1439, 0.0345],
        [0.0920, 0.0504],
        [0.0885, 0.0508],
        [0.2018, 0.0356],
        [0.0856, 0.0265],
        [0.0851, 0.0118],
        [0.1072, 0.0230],
        [0.1476, 0.0526],
        [0.1177, 0.0269],
        [0.0813, 0.0158],
        [0.1075, 0.0240],
        [0.1604, 0.0372],
        [0.0788, 0.0501],
        [0.1123, 0.0312]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1287],
        [0.1466],
        [0.0711],
        [0.1154],
        [0.1443],
        [0.1128],
        [0.1121],
        [0.2285]], device='cuda:0', dtype=torch.float16)/tensor([[0.1287, 0.1466, 0.0711, 0.1154, 0.1443, 0.1128, 0.1121, 0.2285]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0352],
        [0.0427],
        [0.0176],
        [0.0226],
        [0.0848],
        [0.0558],
        [0.0277],
        [0.1140]], device='cuda:0', dtype=torch.float16)/tensor([[0.0352, 0.0427, 0.0176, 0.0226, 0.0848, 0.0558, 0.0277, 0.1140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1287, 0.0352],
        [0.1466, 0.0427],
        [0.0711, 0.0176],
        [0.1154, 0.0226],
        [0.1443, 0.0848],
        [0.1128, 0.0558],
        [0.1121, 0.0277],
        [0.2285, 0.1140]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type active, variation 5 and batchsize 16: 0:03:32.438278
path ['42', 'en', 'llama', 'SA', 'active', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA passive 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 309.50it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0740],
        [0.1073],
        [0.0514],
        [0.0988],
        [0.1084],
        [0.0651],
        [0.0481],
        [0.0915],
        [0.0725],
        [0.0814],
        [0.0350],
        [0.0661],
        [0.0856],
        [0.0815],
        [0.1036],
        [0.0494]], device='cuda:0', dtype=torch.float16)/tensor([[0.0740, 0.1073, 0.0514, 0.0988, 0.1084, 0.0651, 0.0481, 0.0915, 0.0725,
         0.0814, 0.0350, 0.0661, 0.0856, 0.0815, 0.1036, 0.0494]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0272],
        [0.0621],
        [0.0543],
        [0.0546],
        [0.0594],
        [0.0667],
        [0.0410],
        [0.0937],
        [0.0267],
        [0.0268],
        [0.0323],
        [0.0325],
        [0.0593],
        [0.0376],
        [0.1427],
        [0.0391]], device='cuda:0', dtype=torch.float16)/tensor([[0.0272, 0.0621, 0.0543, 0.0546, 0.0594, 0.0667, 0.0410, 0.0937, 0.0267,
         0.0268, 0.0323, 0.0325, 0.0593, 0.0376, 0.1427, 0.0391]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0740, 0.0272],
        [0.1073, 0.0621],
        [0.0514, 0.0543],
        [0.0988, 0.0546],
        [0.1084, 0.0594],
        [0.0651, 0.0667],
        [0.0481, 0.0410],
        [0.0915, 0.0937],
        [0.0725, 0.0267],
        [0.0814, 0.0268],
        [0.0350, 0.0323],
        [0.0661, 0.0325],
        [0.0856, 0.0593],
        [0.0815, 0.0376],
        [0.1036, 0.1427],
        [0.0494, 0.0391]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0864],
        [0.0640],
        [0.0761],
        [0.0577],
        [0.1008],
        [0.0425],
        [0.0599],
        [0.0605],
        [0.0576],
        [0.0460],
        [0.0567],
        [0.0529],
        [0.0718],
        [0.0592],
        [0.0565],
        [0.0565]], device='cuda:0', dtype=torch.float16)/tensor([[0.0864, 0.0640, 0.0761, 0.0577, 0.1008, 0.0425, 0.0599, 0.0605, 0.0576,
         0.0460, 0.0567, 0.0529, 0.0718, 0.0592, 0.0565, 0.0565]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0306],
        [0.0284],
        [0.0767],
        [0.0457],
        [0.0338],
        [0.0089],
        [0.0289],
        [0.0211],
        [0.0723],
        [0.0724],
        [0.0972],
        [0.0399],
        [0.0319],
        [0.0565],
        [0.0241],
        [0.0635]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0284, 0.0767, 0.0457, 0.0338, 0.0089, 0.0289, 0.0211, 0.0723,
         0.0724, 0.0972, 0.0399, 0.0319, 0.0565, 0.0241, 0.0635]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0864, 0.0306],
        [0.0640, 0.0284],
        [0.0761, 0.0767],
        [0.0577, 0.0457],
        [0.1008, 0.0338],
        [0.0425, 0.0089],
        [0.0599, 0.0289],
        [0.0605, 0.0211],
        [0.0576, 0.0723],
        [0.0460, 0.0724],
        [0.0567, 0.0972],
        [0.0529, 0.0399],
        [0.0718, 0.0319],
        [0.0592, 0.0565],
        [0.0565, 0.0241],
        [0.0565, 0.0635]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0832],
        [0.0458],
        [0.0500],
        [0.0529],
        [0.0668],
        [0.1054],
        [0.0535],
        [0.0815],
        [0.0505],
        [0.0820],
        [0.0595],
        [0.1185],
        [0.0931],
        [0.1041],
        [0.0339],
        [0.0937]], device='cuda:0', dtype=torch.float16)/tensor([[0.0832, 0.0458, 0.0500, 0.0529, 0.0668, 0.1054, 0.0535, 0.0815, 0.0505,
         0.0820, 0.0595, 0.1185, 0.0931, 0.1041, 0.0339, 0.0937]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0470],
        [0.0365],
        [0.0652],
        [0.0885],
        [0.1163],
        [0.0707],
        [0.0094],
        [0.0731],
        [0.0432],
        [0.0446],
        [0.0776],
        [0.1498],
        [0.0471],
        [0.0386],
        [0.0191],
        [0.0314]], device='cuda:0', dtype=torch.float16)/tensor([[0.0470, 0.0365, 0.0652, 0.0885, 0.1163, 0.0707, 0.0094, 0.0731, 0.0432,
         0.0446, 0.0776, 0.1498, 0.0471, 0.0386, 0.0191, 0.0314]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0832, 0.0470],
        [0.0458, 0.0365],
        [0.0500, 0.0652],
        [0.0529, 0.0885],
        [0.0668, 0.1163],
        [0.1054, 0.0707],
        [0.0535, 0.0094],
        [0.0815, 0.0731],
        [0.0505, 0.0432],
        [0.0820, 0.0446],
        [0.0595, 0.0776],
        [0.1185, 0.1498],
        [0.0931, 0.0471],
        [0.1041, 0.0386],
        [0.0339, 0.0191],
        [0.0937, 0.0314]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0424],
        [0.0656],
        [0.0589],
        [0.0959],
        [0.0639],
        [0.0820],
        [0.0875],
        [0.0691],
        [0.0618],
        [0.0982],
        [0.0937],
        [0.0300],
        [0.0623],
        [0.0612],
        [0.0380],
        [0.0953]], device='cuda:0', dtype=torch.float16)/tensor([[0.0424, 0.0656, 0.0589, 0.0959, 0.0639, 0.0820, 0.0875, 0.0691, 0.0618,
         0.0982, 0.0937, 0.0300, 0.0623, 0.0612, 0.0380, 0.0953]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0287],
        [0.0358],
        [0.0694],
        [0.0254],
        [0.0560],
        [0.0342],
        [0.0855],
        [0.0619],
        [0.0318],
        [0.0406],
        [0.0471],
        [0.0179],
        [0.0220],
        [0.0167],
        [0.0392],
        [0.0502]], device='cuda:0', dtype=torch.float16)/tensor([[0.0287, 0.0358, 0.0694, 0.0254, 0.0560, 0.0342, 0.0855, 0.0619, 0.0318,
         0.0406, 0.0471, 0.0179, 0.0220, 0.0167, 0.0392, 0.0502]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0424, 0.0287],
        [0.0656, 0.0358],
        [0.0589, 0.0694],
        [0.0959, 0.0254],
        [0.0639, 0.0560],
        [0.0820, 0.0342],
        [0.0875, 0.0855],
        [0.0691, 0.0619],
        [0.0618, 0.0318],
        [0.0982, 0.0406],
        [0.0937, 0.0471],
        [0.0300, 0.0179],
        [0.0623, 0.0220],
        [0.0612, 0.0167],
        [0.0380, 0.0392],
        [0.0953, 0.0502]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0767],
        [0.0692],
        [0.0834],
        [0.0549],
        [0.0383],
        [0.0821],
        [0.0702],
        [0.0899],
        [0.1142],
        [0.0767],
        [0.0956],
        [0.0619],
        [0.0564],
        [0.0649],
        [0.0822],
        [0.0716]], device='cuda:0', dtype=torch.float16)/tensor([[0.0767, 0.0692, 0.0834, 0.0549, 0.0383, 0.0821, 0.0702, 0.0899, 0.1142,
         0.0767, 0.0956, 0.0619, 0.0564, 0.0649, 0.0822, 0.0716]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0423],
        [0.0842],
        [0.0802],
        [0.0492],
        [0.0584],
        [0.0334],
        [0.0573],
        [0.1146],
        [0.0430],
        [0.0398],
        [0.0448],
        [0.0372],
        [0.0629],
        [0.0326],
        [0.0960],
        [0.0360]], device='cuda:0', dtype=torch.float16)/tensor([[0.0423, 0.0842, 0.0802, 0.0492, 0.0584, 0.0334, 0.0573, 0.1146, 0.0430,
         0.0398, 0.0448, 0.0372, 0.0629, 0.0326, 0.0960, 0.0360]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0767, 0.0423],
        [0.0692, 0.0842],
        [0.0834, 0.0802],
        [0.0549, 0.0492],
        [0.0383, 0.0584],
        [0.0821, 0.0334],
        [0.0702, 0.0573],
        [0.0899, 0.1146],
        [0.1142, 0.0430],
        [0.0767, 0.0398],
        [0.0956, 0.0448],
        [0.0619, 0.0372],
        [0.0564, 0.0629],
        [0.0649, 0.0326],
        [0.0822, 0.0960],
        [0.0716, 0.0360]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0789],
        [0.0511],
        [0.0902],
        [0.0458],
        [0.0892],
        [0.0702],
        [0.0743],
        [0.1658],
        [0.0547],
        [0.0781],
        [0.0787],
        [0.0956],
        [0.0927],
        [0.1348],
        [0.0748],
        [0.0969]], device='cuda:0', dtype=torch.float16)/tensor([[0.0789, 0.0511, 0.0902, 0.0458, 0.0892, 0.0702, 0.0743, 0.1658, 0.0547,
         0.0781, 0.0787, 0.0956, 0.0927, 0.1348, 0.0748, 0.0969]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0302],
        [0.0239],
        [0.0802],
        [0.0461],
        [0.0529],
        [0.0547],
        [0.0444],
        [0.0777],
        [0.0692],
        [0.0411],
        [0.0197],
        [0.0386],
        [0.0330],
        [0.0553],
        [0.0391],
        [0.0911]], device='cuda:0', dtype=torch.float16)/tensor([[0.0302, 0.0239, 0.0802, 0.0461, 0.0529, 0.0547, 0.0444, 0.0777, 0.0692,
         0.0411, 0.0197, 0.0386, 0.0330, 0.0553, 0.0391, 0.0911]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0789, 0.0302],
        [0.0511, 0.0239],
        [0.0902, 0.0802],
        [0.0458, 0.0461],
        [0.0892, 0.0529],
        [0.0702, 0.0547],
        [0.0743, 0.0444],
        [0.1658, 0.0777],
        [0.0547, 0.0692],
        [0.0781, 0.0411],
        [0.0787, 0.0197],
        [0.0956, 0.0386],
        [0.0927, 0.0330],
        [0.1348, 0.0553],
        [0.0748, 0.0391],
        [0.0969, 0.0911]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0640],
        [0.0457],
        [0.0707],
        [0.0668],
        [0.0528],
        [0.0642],
        [0.1072],
        [0.0649],
        [0.0621],
        [0.0763],
        [0.1063],
        [0.1123],
        [0.0483],
        [0.0306],
        [0.0641],
        [0.0769]], device='cuda:0', dtype=torch.float16)/tensor([[0.0640, 0.0457, 0.0707, 0.0668, 0.0528, 0.0642, 0.1072, 0.0649, 0.0621,
         0.0763, 0.1063, 0.1123, 0.0483, 0.0306, 0.0641, 0.0769]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.1233],
        [0.0161],
        [0.0258],
        [0.0281],
        [0.0727],
        [0.0728],
        [0.0539],
        [0.0107],
        [0.0760],
        [0.0793],
        [0.0394],
        [0.0526],
        [0.0626],
        [0.0155],
        [0.0434],
        [0.0751]], device='cuda:0', dtype=torch.float16)/tensor([[0.1233, 0.0161, 0.0258, 0.0281, 0.0727, 0.0728, 0.0539, 0.0107, 0.0760,
         0.0793, 0.0394, 0.0526, 0.0626, 0.0155, 0.0434, 0.0751]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0640, 0.1233],
        [0.0457, 0.0161],
        [0.0707, 0.0258],
        [0.0668, 0.0281],
        [0.0528, 0.0727],
        [0.0642, 0.0728],
        [0.1072, 0.0539],
        [0.0649, 0.0107],
        [0.0621, 0.0760],
        [0.0763, 0.0793],
        [0.1063, 0.0394],
        [0.1123, 0.0526],
        [0.0483, 0.0626],
        [0.0306, 0.0155],
        [0.0641, 0.0434],
        [0.0769, 0.0751]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1005],
        [0.0825],
        [0.0656],
        [0.0500],
        [0.0888],
        [0.0746],
        [0.0424],
        [0.0977],
        [0.0690],
        [0.1119],
        [0.0577],
        [0.0914],
        [0.0574],
        [0.0710],
        [0.1438],
        [0.0608]], device='cuda:0', dtype=torch.float16)/tensor([[0.1005, 0.0825, 0.0656, 0.0500, 0.0888, 0.0746, 0.0424, 0.0977, 0.0690,
         0.1119, 0.0577, 0.0914, 0.0574, 0.0710, 0.1438, 0.0608]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0254],
        [0.0554],
        [0.0749],
        [0.0432],
        [0.0587],
        [0.1192],
        [0.0191],
        [0.0849],
        [0.0533],
        [0.0328],
        [0.0204],
        [0.0674],
        [0.0849],
        [0.0683],
        [0.1427],
        [0.0934]], device='cuda:0', dtype=torch.float16)/tensor([[0.0254, 0.0554, 0.0749, 0.0432, 0.0587, 0.1192, 0.0191, 0.0849, 0.0533,
         0.0328, 0.0204, 0.0674, 0.0849, 0.0683, 0.1427, 0.0934]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1005, 0.0254],
        [0.0825, 0.0554],
        [0.0656, 0.0749],
        [0.0500, 0.0432],
        [0.0888, 0.0587],
        [0.0746, 0.1192],
        [0.0424, 0.0191],
        [0.0977, 0.0849],
        [0.0690, 0.0533],
        [0.1119, 0.0328],
        [0.0577, 0.0204],
        [0.0914, 0.0674],
        [0.0574, 0.0849],
        [0.0710, 0.0683],
        [0.1438, 0.1427],
        [0.0608, 0.0934]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0580],
        [0.0375],
        [0.0999],
        [0.0471],
        [0.0918],
        [0.0482],
        [0.0535],
        [0.1132],
        [0.0845],
        [0.0922],
        [0.0713],
        [0.1148],
        [0.0690],
        [0.0938],
        [0.0854],
        [0.0820]], device='cuda:0', dtype=torch.float16)/tensor([[0.0580, 0.0375, 0.0999, 0.0471, 0.0918, 0.0482, 0.0535, 0.1132, 0.0845,
         0.0922, 0.0713, 0.1148, 0.0690, 0.0938, 0.0854, 0.0820]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0643],
        [0.0309],
        [0.0365],
        [0.0457],
        [0.0280],
        [0.0576],
        [0.0382],
        [0.0687],
        [0.0885],
        [0.0435],
        [0.0385],
        [0.0501],
        [0.0299],
        [0.0692],
        [0.0350],
        [0.0378]], device='cuda:0', dtype=torch.float16)/tensor([[0.0643, 0.0309, 0.0365, 0.0457, 0.0280, 0.0576, 0.0382, 0.0687, 0.0885,
         0.0435, 0.0385, 0.0501, 0.0299, 0.0692, 0.0350, 0.0378]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0580, 0.0643],
        [0.0375, 0.0309],
        [0.0999, 0.0365],
        [0.0471, 0.0457],
        [0.0918, 0.0280],
        [0.0482, 0.0576],
        [0.0535, 0.0382],
        [0.1132, 0.0687],
        [0.0845, 0.0885],
        [0.0922, 0.0435],
        [0.0713, 0.0385],
        [0.1148, 0.0501],
        [0.0690, 0.0299],
        [0.0938, 0.0692],
        [0.0854, 0.0350],
        [0.0820, 0.0378]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1010],
        [0.0779],
        [0.0586],
        [0.0490],
        [0.1016],
        [0.0696],
        [0.0792],
        [0.0748],
        [0.1094],
        [0.0744],
        [0.0906],
        [0.1062],
        [0.0712],
        [0.1393],
        [0.0522],
        [0.0432]], device='cuda:0', dtype=torch.float16)/tensor([[0.1010, 0.0779, 0.0586, 0.0490, 0.1016, 0.0696, 0.0792, 0.0748, 0.1094,
         0.0744, 0.0906, 0.1062, 0.0712, 0.1393, 0.0522, 0.0432]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0492],
        [0.0829],
        [0.0619],
        [0.0224],
        [0.0641],
        [0.0746],
        [0.0811],
        [0.0170],
        [0.1542],
        [0.0589],
        [0.0346],
        [0.0526],
        [0.0546],
        [0.0757],
        [0.0151],
        [0.0418]], device='cuda:0', dtype=torch.float16)/tensor([[0.0492, 0.0829, 0.0619, 0.0224, 0.0641, 0.0746, 0.0811, 0.0170, 0.1542,
         0.0589, 0.0346, 0.0526, 0.0546, 0.0757, 0.0151, 0.0418]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1010, 0.0492],
        [0.0779, 0.0829],
        [0.0586, 0.0619],
        [0.0490, 0.0224],
        [0.1016, 0.0641],
        [0.0696, 0.0746],
        [0.0792, 0.0811],
        [0.0748, 0.0170],
        [0.1094, 0.1542],
        [0.0744, 0.0589],
        [0.0906, 0.0346],
        [0.1062, 0.0526],
        [0.0712, 0.0546],
        [0.1393, 0.0757],
        [0.0522, 0.0151],
        [0.0432, 0.0418]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0480],
        [0.0955],
        [0.0676],
        [0.0879],
        [0.1479],
        [0.0690],
        [0.0664],
        [0.0742],
        [0.1984],
        [0.0908],
        [0.1378],
        [0.0437],
        [0.0992],
        [0.1512],
        [0.1510],
        [0.1510]], device='cuda:0', dtype=torch.float16)/tensor([[0.0480, 0.0955, 0.0676, 0.0879, 0.1479, 0.0690, 0.0664, 0.0742, 0.1984,
         0.0908, 0.1378, 0.0437, 0.0992, 0.1512, 0.1510, 0.1510]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0786],
        [0.0473],
        [0.0302],
        [0.0638],
        [0.1503],
        [0.0680],
        [0.0741],
        [0.0218],
        [0.0634],
        [0.0789],
        [0.1389],
        [0.0557],
        [0.0544],
        [0.0548],
        [0.0615],
        [0.0610]], device='cuda:0', dtype=torch.float16)/tensor([[0.0786, 0.0473, 0.0302, 0.0638, 0.1503, 0.0680, 0.0741, 0.0218, 0.0634,
         0.0789, 0.1389, 0.0557, 0.0544, 0.0548, 0.0615, 0.0610]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0480, 0.0786],
        [0.0955, 0.0473],
        [0.0676, 0.0302],
        [0.0879, 0.0638],
        [0.1479, 0.1503],
        [0.0690, 0.0680],
        [0.0664, 0.0741],
        [0.0742, 0.0218],
        [0.1984, 0.0634],
        [0.0908, 0.0789],
        [0.1378, 0.1389],
        [0.0437, 0.0557],
        [0.0992, 0.0544],
        [0.1512, 0.0548],
        [0.1510, 0.0615],
        [0.1510, 0.0610]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0327],
        [0.0734],
        [0.0497],
        [0.0812],
        [0.0679],
        [0.0585],
        [0.1243],
        [0.0610],
        [0.0693],
        [0.0837],
        [0.0446],
        [0.0718],
        [0.0701],
        [0.0805],
        [0.0545],
        [0.0999]], device='cuda:0', dtype=torch.float16)/tensor([[0.0327, 0.0734, 0.0497, 0.0812, 0.0679, 0.0585, 0.1243, 0.0610, 0.0693,
         0.0837, 0.0446, 0.0718, 0.0701, 0.0805, 0.0545, 0.0999]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0453],
        [0.0740],
        [0.0168],
        [0.0386],
        [0.0740],
        [0.0421],
        [0.0247],
        [0.0874],
        [0.1151],
        [0.0316],
        [0.0350],
        [0.0723],
        [0.0342],
        [0.0202],
        [0.0214],
        [0.0676]], device='cuda:0', dtype=torch.float16)/tensor([[0.0453, 0.0740, 0.0168, 0.0386, 0.0740, 0.0421, 0.0247, 0.0874, 0.1151,
         0.0316, 0.0350, 0.0723, 0.0342, 0.0202, 0.0214, 0.0676]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0327, 0.0453],
        [0.0734, 0.0740],
        [0.0497, 0.0168],
        [0.0812, 0.0386],
        [0.0679, 0.0740],
        [0.0585, 0.0421],
        [0.1243, 0.0247],
        [0.0610, 0.0874],
        [0.0693, 0.1151],
        [0.0837, 0.0316],
        [0.0446, 0.0350],
        [0.0718, 0.0723],
        [0.0701, 0.0342],
        [0.0805, 0.0202],
        [0.0545, 0.0214],
        [0.0999, 0.0676]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0508],
        [0.0482],
        [0.1163],
        [0.0401],
        [0.0209],
        [0.0646],
        [0.2028],
        [0.0705]], device='cuda:0', dtype=torch.float16)/tensor([[0.0508, 0.0482, 0.1163, 0.0401, 0.0209, 0.0646, 0.2028, 0.0705]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0233],
        [0.0680],
        [0.0898],
        [0.0544],
        [0.0130],
        [0.0368],
        [0.0872],
        [0.0492]], device='cuda:0', dtype=torch.float16)/tensor([[0.0233, 0.0680, 0.0898, 0.0544, 0.0130, 0.0368, 0.0872, 0.0492]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0508, 0.0233],
        [0.0482, 0.0680],
        [0.1163, 0.0898],
        [0.0401, 0.0544],
        [0.0209, 0.0130],
        [0.0646, 0.0368],
        [0.2028, 0.0872],
        [0.0705, 0.0492]], device='cuda:0')
acc:  0.77
Time taken to execute the en SA task with prompt type passive, variation 0 and batchsize 16: 0:03:33.787169
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b SA passive 1 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 316.48it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0436],
        [0.0684],
        [0.0539],
        [0.0829],
        [0.0965],
        [0.0357],
        [0.0880],
        [0.0742],
        [0.0598],
        [0.0509],
        [0.0693],
        [0.0687],
        [0.0688],
        [0.0463],
        [0.0605],
        [0.0848]], device='cuda:0', dtype=torch.float16)/tensor([[0.0436, 0.0684, 0.0539, 0.0829, 0.0965, 0.0357, 0.0880, 0.0742, 0.0598,
         0.0509, 0.0693, 0.0687, 0.0688, 0.0463, 0.0605, 0.0848]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0246],
        [0.0706],
        [0.0180],
        [0.0503],
        [0.0438],
        [0.0223],
        [0.0446],
        [0.0322],
        [0.0361],
        [0.0367],
        [0.0536],
        [0.0458],
        [0.0330],
        [0.0169],
        [0.0569],
        [0.0400]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0706, 0.0180, 0.0503, 0.0438, 0.0223, 0.0446, 0.0322, 0.0361,
         0.0367, 0.0536, 0.0458, 0.0330, 0.0169, 0.0569, 0.0400]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0436, 0.0246],
        [0.0684, 0.0706],
        [0.0539, 0.0180],
        [0.0829, 0.0503],
        [0.0965, 0.0438],
        [0.0357, 0.0223],
        [0.0880, 0.0446],
        [0.0742, 0.0322],
        [0.0598, 0.0361],
        [0.0509, 0.0367],
        [0.0693, 0.0536],
        [0.0687, 0.0458],
        [0.0688, 0.0330],
        [0.0463, 0.0169],
        [0.0605, 0.0569],
        [0.0848, 0.0400]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0591],
        [0.0772],
        [0.0427],
        [0.0743],
        [0.1180],
        [0.0584],
        [0.0638],
        [0.0670],
        [0.0588],
        [0.1076],
        [0.0609],
        [0.0442],
        [0.0696],
        [0.0226],
        [0.0771],
        [0.0574]], device='cuda:0', dtype=torch.float16)/tensor([[0.0591, 0.0772, 0.0427, 0.0743, 0.1180, 0.0584, 0.0638, 0.0670, 0.0588,
         0.1076, 0.0609, 0.0442, 0.0696, 0.0226, 0.0771, 0.0574]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0302],
        [0.0298],
        [0.0226],
        [0.0646],
        [0.1033],
        [0.0259],
        [0.0319],
        [0.0322],
        [0.0433],
        [0.0313],
        [0.0493],
        [0.0378],
        [0.0326],
        [0.0093],
        [0.0279],
        [0.0436]], device='cuda:0', dtype=torch.float16)/tensor([[0.0302, 0.0298, 0.0226, 0.0646, 0.1033, 0.0259, 0.0319, 0.0322, 0.0433,
         0.0313, 0.0493, 0.0378, 0.0326, 0.0093, 0.0279, 0.0436]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0591, 0.0302],
        [0.0772, 0.0298],
        [0.0427, 0.0226],
        [0.0743, 0.0646],
        [0.1180, 0.1033],
        [0.0584, 0.0259],
        [0.0638, 0.0319],
        [0.0670, 0.0322],
        [0.0588, 0.0433],
        [0.1076, 0.0313],
        [0.0609, 0.0493],
        [0.0442, 0.0378],
        [0.0696, 0.0326],
        [0.0226, 0.0093],
        [0.0771, 0.0279],
        [0.0574, 0.0436]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0421],
        [0.0437],
        [0.0780],
        [0.0950],
        [0.1675],
        [0.0570],
        [0.0464],
        [0.0723],
        [0.0884],
        [0.0649],
        [0.0615],
        [0.0668],
        [0.0704],
        [0.0659],
        [0.0883],
        [0.0519]], device='cuda:0', dtype=torch.float16)/tensor([[0.0421, 0.0437, 0.0780, 0.0950, 0.1675, 0.0570, 0.0464, 0.0723, 0.0884,
         0.0649, 0.0615, 0.0668, 0.0704, 0.0659, 0.0883, 0.0519]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0235],
        [0.0177],
        [0.0584],
        [0.0728],
        [0.0548],
        [0.0427],
        [0.0190],
        [0.0684],
        [0.0366],
        [0.0252],
        [0.0214],
        [0.0584],
        [0.0579],
        [0.0233],
        [0.0320],
        [0.0454]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0177, 0.0584, 0.0728, 0.0548, 0.0427, 0.0190, 0.0684, 0.0366,
         0.0252, 0.0214, 0.0584, 0.0579, 0.0233, 0.0320, 0.0454]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0421, 0.0235],
        [0.0437, 0.0177],
        [0.0780, 0.0584],
        [0.0950, 0.0728],
        [0.1675, 0.0548],
        [0.0570, 0.0427],
        [0.0464, 0.0190],
        [0.0723, 0.0684],
        [0.0884, 0.0366],
        [0.0649, 0.0252],
        [0.0615, 0.0214],
        [0.0668, 0.0584],
        [0.0704, 0.0579],
        [0.0659, 0.0233],
        [0.0883, 0.0320],
        [0.0519, 0.0454]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0534],
        [0.0340],
        [0.0846],
        [0.0729],
        [0.0637],
        [0.0598],
        [0.0417],
        [0.1018],
        [0.1367],
        [0.0875],
        [0.0622],
        [0.0760],
        [0.0386],
        [0.0578],
        [0.0576],
        [0.1346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0534, 0.0340, 0.0846, 0.0729, 0.0637, 0.0598, 0.0417, 0.1018, 0.1367,
         0.0875, 0.0622, 0.0760, 0.0386, 0.0578, 0.0576, 0.1346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0406],
        [0.0374],
        [0.0629],
        [0.0329],
        [0.0231],
        [0.0511],
        [0.0230],
        [0.0623],
        [0.1116],
        [0.0312],
        [0.0544],
        [0.0271],
        [0.0320],
        [0.0302],
        [0.0246],
        [0.0454]], device='cuda:0', dtype=torch.float16)/tensor([[0.0406, 0.0374, 0.0629, 0.0329, 0.0231, 0.0511, 0.0230, 0.0623, 0.1116,
         0.0312, 0.0544, 0.0271, 0.0320, 0.0302, 0.0246, 0.0454]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0534, 0.0406],
        [0.0340, 0.0374],
        [0.0846, 0.0629],
        [0.0729, 0.0329],
        [0.0637, 0.0231],
        [0.0598, 0.0511],
        [0.0417, 0.0230],
        [0.1018, 0.0623],
        [0.1367, 0.1116],
        [0.0875, 0.0312],
        [0.0622, 0.0544],
        [0.0760, 0.0271],
        [0.0386, 0.0320],
        [0.0578, 0.0302],
        [0.0576, 0.0246],
        [0.1346, 0.0454]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0516],
        [0.1068],
        [0.0798],
        [0.0736],
        [0.0629],
        [0.0777],
        [0.0585],
        [0.1456],
        [0.0609],
        [0.0534],
        [0.0673],
        [0.0890],
        [0.0981],
        [0.0452],
        [0.1016],
        [0.0591]], device='cuda:0', dtype=torch.float16)/tensor([[0.0516, 0.1068, 0.0798, 0.0736, 0.0629, 0.0777, 0.0585, 0.1456, 0.0609,
         0.0534, 0.0673, 0.0890, 0.0981, 0.0452, 0.1016, 0.0591]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0301],
        [0.0632],
        [0.0330],
        [0.0271],
        [0.0274],
        [0.0243],
        [0.0529],
        [0.0598],
        [0.0069],
        [0.0374],
        [0.0618],
        [0.0519],
        [0.0634],
        [0.0538],
        [0.0293],
        [0.0670]], device='cuda:0', dtype=torch.float16)/tensor([[0.0301, 0.0632, 0.0330, 0.0271, 0.0274, 0.0243, 0.0529, 0.0598, 0.0069,
         0.0374, 0.0618, 0.0519, 0.0634, 0.0538, 0.0293, 0.0670]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0516, 0.0301],
        [0.1068, 0.0632],
        [0.0798, 0.0330],
        [0.0736, 0.0271],
        [0.0629, 0.0274],
        [0.0777, 0.0243],
        [0.0585, 0.0529],
        [0.1456, 0.0598],
        [0.0609, 0.0069],
        [0.0534, 0.0374],
        [0.0673, 0.0618],
        [0.0890, 0.0519],
        [0.0981, 0.0634],
        [0.0452, 0.0538],
        [0.1016, 0.0293],
        [0.0591, 0.0670]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0562],
        [0.0496],
        [0.0543],
        [0.0468],
        [0.0545],
        [0.0654],
        [0.0775],
        [0.0486],
        [0.0517],
        [0.0764],
        [0.0410],
        [0.0484],
        [0.0848],
        [0.0705],
        [0.0446],
        [0.0410]], device='cuda:0', dtype=torch.float16)/tensor([[0.0562, 0.0496, 0.0543, 0.0468, 0.0545, 0.0654, 0.0775, 0.0486, 0.0517,
         0.0764, 0.0410, 0.0484, 0.0848, 0.0705, 0.0446, 0.0410]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0545],
        [0.0389],
        [0.0420],
        [0.0140],
        [0.0459],
        [0.0490],
        [0.0781],
        [0.0106],
        [0.0212],
        [0.0309],
        [0.0236],
        [0.0168],
        [0.0404],
        [0.0589],
        [0.0215],
        [0.0252]], device='cuda:0', dtype=torch.float16)/tensor([[0.0545, 0.0389, 0.0420, 0.0140, 0.0459, 0.0490, 0.0781, 0.0106, 0.0212,
         0.0309, 0.0236, 0.0168, 0.0404, 0.0589, 0.0215, 0.0252]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0562, 0.0545],
        [0.0496, 0.0389],
        [0.0543, 0.0420],
        [0.0468, 0.0140],
        [0.0545, 0.0459],
        [0.0654, 0.0490],
        [0.0775, 0.0781],
        [0.0486, 0.0106],
        [0.0517, 0.0212],
        [0.0764, 0.0309],
        [0.0410, 0.0236],
        [0.0484, 0.0168],
        [0.0848, 0.0404],
        [0.0705, 0.0589],
        [0.0446, 0.0215],
        [0.0410, 0.0252]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0638],
        [0.0579],
        [0.0970],
        [0.1429],
        [0.1019],
        [0.0873],
        [0.0746],
        [0.0521],
        [0.0767],
        [0.1117],
        [0.0793],
        [0.0859],
        [0.0569],
        [0.0432],
        [0.0517],
        [0.0710]], device='cuda:0', dtype=torch.float16)/tensor([[0.0638, 0.0579, 0.0970, 0.1429, 0.1019, 0.0873, 0.0746, 0.0521, 0.0767,
         0.1117, 0.0793, 0.0859, 0.0569, 0.0432, 0.0517, 0.0710]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0227],
        [0.0145],
        [0.0476],
        [0.0555],
        [0.0995],
        [0.0429],
        [0.0252],
        [0.0339],
        [0.0340],
        [0.0856],
        [0.0375],
        [0.0723],
        [0.0314],
        [0.0196],
        [0.0381],
        [0.0710]], device='cuda:0', dtype=torch.float16)/tensor([[0.0227, 0.0145, 0.0476, 0.0555, 0.0995, 0.0429, 0.0252, 0.0339, 0.0340,
         0.0856, 0.0375, 0.0723, 0.0314, 0.0196, 0.0381, 0.0710]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0638, 0.0227],
        [0.0579, 0.0145],
        [0.0970, 0.0476],
        [0.1429, 0.0555],
        [0.1019, 0.0995],
        [0.0873, 0.0429],
        [0.0746, 0.0252],
        [0.0521, 0.0339],
        [0.0767, 0.0340],
        [0.1117, 0.0856],
        [0.0793, 0.0375],
        [0.0859, 0.0723],
        [0.0569, 0.0314],
        [0.0432, 0.0196],
        [0.0517, 0.0381],
        [0.0710, 0.0710]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0379],
        [0.0653],
        [0.0603],
        [0.0982],
        [0.0674],
        [0.0538],
        [0.0411],
        [0.0637],
        [0.0822],
        [0.0714],
        [0.0811],
        [0.0784],
        [0.0723],
        [0.0696],
        [0.0325],
        [0.0783]], device='cuda:0', dtype=torch.float16)/tensor([[0.0379, 0.0653, 0.0603, 0.0982, 0.0674, 0.0538, 0.0411, 0.0637, 0.0822,
         0.0714, 0.0811, 0.0784, 0.0723, 0.0696, 0.0325, 0.0783]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0394],
        [0.0456],
        [0.0594],
        [0.0471],
        [0.0279],
        [0.0509],
        [0.0181],
        [0.0441],
        [0.0815],
        [0.0332],
        [0.0544],
        [0.0365],
        [0.0212],
        [0.0393],
        [0.0093],
        [0.0406]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0456, 0.0594, 0.0471, 0.0279, 0.0509, 0.0181, 0.0441, 0.0815,
         0.0332, 0.0544, 0.0365, 0.0212, 0.0393, 0.0093, 0.0406]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0379, 0.0394],
        [0.0653, 0.0456],
        [0.0603, 0.0594],
        [0.0982, 0.0471],
        [0.0674, 0.0279],
        [0.0538, 0.0509],
        [0.0411, 0.0181],
        [0.0637, 0.0441],
        [0.0822, 0.0815],
        [0.0714, 0.0332],
        [0.0811, 0.0544],
        [0.0784, 0.0365],
        [0.0723, 0.0212],
        [0.0696, 0.0393],
        [0.0325, 0.0093],
        [0.0783, 0.0406]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0676],
        [0.0950],
        [0.0982],
        [0.0649],
        [0.1481],
        [0.1094],
        [0.1071],
        [0.0909],
        [0.0529],
        [0.0928],
        [0.0947],
        [0.0806],
        [0.0619],
        [0.0459],
        [0.0876],
        [0.0574]], device='cuda:0', dtype=torch.float16)/tensor([[0.0676, 0.0950, 0.0982, 0.0649, 0.1481, 0.1094, 0.1071, 0.0909, 0.0529,
         0.0928, 0.0947, 0.0806, 0.0619, 0.0459, 0.0876, 0.0574]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0587],
        [0.0422],
        [0.0403],
        [0.0342],
        [0.0492],
        [0.0533],
        [0.0591],
        [0.0356],
        [0.0516],
        [0.0513],
        [0.0507],
        [0.0550],
        [0.0106],
        [0.0122],
        [0.0646],
        [0.0472]], device='cuda:0', dtype=torch.float16)/tensor([[0.0587, 0.0422, 0.0403, 0.0342, 0.0492, 0.0533, 0.0591, 0.0356, 0.0516,
         0.0513, 0.0507, 0.0550, 0.0106, 0.0122, 0.0646, 0.0472]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0676, 0.0587],
        [0.0950, 0.0422],
        [0.0982, 0.0403],
        [0.0649, 0.0342],
        [0.1481, 0.0492],
        [0.1094, 0.0533],
        [0.1071, 0.0591],
        [0.0909, 0.0356],
        [0.0529, 0.0516],
        [0.0928, 0.0513],
        [0.0947, 0.0507],
        [0.0806, 0.0550],
        [0.0619, 0.0106],
        [0.0459, 0.0122],
        [0.0876, 0.0646],
        [0.0574, 0.0472]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0772],
        [0.0583],
        [0.0825],
        [0.0503],
        [0.0526],
        [0.0768],
        [0.0588],
        [0.0781],
        [0.1276],
        [0.0759],
        [0.0658],
        [0.0718],
        [0.0692],
        [0.0856],
        [0.0765],
        [0.0437]], device='cuda:0', dtype=torch.float16)/tensor([[0.0772, 0.0583, 0.0825, 0.0503, 0.0526, 0.0768, 0.0588, 0.0781, 0.1276,
         0.0759, 0.0658, 0.0718, 0.0692, 0.0856, 0.0765, 0.0437]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0250],
        [0.0531],
        [0.0679],
        [0.0142],
        [0.0180],
        [0.0225],
        [0.0389],
        [0.0576],
        [0.0469],
        [0.0486],
        [0.0576],
        [0.0670],
        [0.0312],
        [0.0431],
        [0.0316],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0250, 0.0531, 0.0679, 0.0142, 0.0180, 0.0225, 0.0389, 0.0576, 0.0469,
         0.0486, 0.0576, 0.0670, 0.0312, 0.0431, 0.0316, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0772, 0.0250],
        [0.0583, 0.0531],
        [0.0825, 0.0679],
        [0.0503, 0.0142],
        [0.0526, 0.0180],
        [0.0768, 0.0225],
        [0.0588, 0.0389],
        [0.0781, 0.0576],
        [0.1276, 0.0469],
        [0.0759, 0.0486],
        [0.0658, 0.0576],
        [0.0718, 0.0670],
        [0.0692, 0.0312],
        [0.0856, 0.0431],
        [0.0765, 0.0316],
        [0.0437, 0.0211]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0874],
        [0.0641],
        [0.0467],
        [0.0955],
        [0.0591],
        [0.1024],
        [0.0571],
        [0.0459],
        [0.0645],
        [0.1132],
        [0.0814],
        [0.0490],
        [0.1000],
        [0.0597],
        [0.0462],
        [0.0380]], device='cuda:0', dtype=torch.float16)/tensor([[0.0874, 0.0641, 0.0467, 0.0955, 0.0591, 0.1024, 0.0571, 0.0459, 0.0645,
         0.1132, 0.0814, 0.0490, 0.1000, 0.0597, 0.0462, 0.0380]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0239],
        [0.0469],
        [0.0442],
        [0.0417],
        [0.0600],
        [0.0583],
        [0.0294],
        [0.0233],
        [0.0471],
        [0.1293],
        [0.0334],
        [0.0259],
        [0.0575],
        [0.0340],
        [0.0282],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0239, 0.0469, 0.0442, 0.0417, 0.0600, 0.0583, 0.0294, 0.0233, 0.0471,
         0.1293, 0.0334, 0.0259, 0.0575, 0.0340, 0.0282, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0874, 0.0239],
        [0.0641, 0.0469],
        [0.0467, 0.0442],
        [0.0955, 0.0417],
        [0.0591, 0.0600],
        [0.1024, 0.0583],
        [0.0571, 0.0294],
        [0.0459, 0.0233],
        [0.0645, 0.0471],
        [0.1132, 0.1293],
        [0.0814, 0.0334],
        [0.0490, 0.0259],
        [0.1000, 0.0575],
        [0.0597, 0.0340],
        [0.0462, 0.0282],
        [0.0380, 0.0118]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0916],
        [0.0674],
        [0.0551],
        [0.0524],
        [0.0717],
        [0.0739],
        [0.0627],
        [0.0594],
        [0.0681],
        [0.0845],
        [0.0878],
        [0.0820],
        [0.0815],
        [0.0746],
        [0.0757],
        [0.0508]], device='cuda:0', dtype=torch.float16)/tensor([[0.0916, 0.0674, 0.0551, 0.0524, 0.0717, 0.0739, 0.0627, 0.0594, 0.0681,
         0.0845, 0.0878, 0.0820, 0.0815, 0.0746, 0.0757, 0.0508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0339],
        [0.0775],
        [0.0302],
        [0.0358],
        [0.0170],
        [0.0352],
        [0.0489],
        [0.0159],
        [0.0616],
        [0.0533],
        [0.0657],
        [0.0378],
        [0.0578],
        [0.0290],
        [0.0318],
        [0.0452]], device='cuda:0', dtype=torch.float16)/tensor([[0.0339, 0.0775, 0.0302, 0.0358, 0.0170, 0.0352, 0.0489, 0.0159, 0.0616,
         0.0533, 0.0657, 0.0378, 0.0578, 0.0290, 0.0318, 0.0452]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0916, 0.0339],
        [0.0674, 0.0775],
        [0.0551, 0.0302],
        [0.0524, 0.0358],
        [0.0717, 0.0170],
        [0.0739, 0.0352],
        [0.0627, 0.0489],
        [0.0594, 0.0159],
        [0.0681, 0.0616],
        [0.0845, 0.0533],
        [0.0878, 0.0657],
        [0.0820, 0.0378],
        [0.0815, 0.0578],
        [0.0746, 0.0290],
        [0.0757, 0.0318],
        [0.0508, 0.0452]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0522],
        [0.0934],
        [0.0821],
        [0.0212],
        [0.0459],
        [0.1101],
        [0.0802],
        [0.0873]], device='cuda:0', dtype=torch.float16)/tensor([[0.0522, 0.0934, 0.0821, 0.0212, 0.0459, 0.1101, 0.0802, 0.0873]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0410],
        [0.0455],
        [0.0334],
        [0.0111],
        [0.0349],
        [0.0917],
        [0.0293],
        [0.0394]], device='cuda:0', dtype=torch.float16)/tensor([[0.0410, 0.0455, 0.0334, 0.0111, 0.0349, 0.0917, 0.0293, 0.0394]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0522, 0.0410],
        [0.0934, 0.0455],
        [0.0821, 0.0334],
        [0.0212, 0.0111],
        [0.0459, 0.0349],
        [0.1101, 0.0917],
        [0.0802, 0.0293],
        [0.0873, 0.0394]], device='cuda:0')
acc:  0.545
Time taken to execute the en SA task with prompt type passive, variation 1 and batchsize 16: 0:03:35.373749
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b SA passive 2 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 303.44it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1147],
        [0.1208],
        [0.1169],
        [0.0826],
        [0.0911],
        [0.1777],
        [0.1494],
        [0.1196],
        [0.1094],
        [0.2086],
        [0.1344],
        [0.2234],
        [0.1522],
        [0.0881],
        [0.1354],
        [0.1117]], device='cuda:0', dtype=torch.float16)/tensor([[0.1147, 0.1208, 0.1169, 0.0826, 0.0911, 0.1777, 0.1494, 0.1196, 0.1094,
         0.2086, 0.1344, 0.2234, 0.1522, 0.0881, 0.1354, 0.1117]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0344],
        [0.0311],
        [0.0715],
        [0.0770],
        [0.0271],
        [0.0624],
        [0.0775],
        [0.0413],
        [0.0375],
        [0.1134],
        [0.0314],
        [0.1224],
        [0.0938],
        [0.0766],
        [0.0861],
        [0.0191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0344, 0.0311, 0.0715, 0.0770, 0.0271, 0.0624, 0.0775, 0.0413, 0.0375,
         0.1134, 0.0314, 0.1224, 0.0938, 0.0766, 0.0861, 0.0191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1147, 0.0344],
        [0.1208, 0.0311],
        [0.1169, 0.0715],
        [0.0826, 0.0770],
        [0.0911, 0.0271],
        [0.1777, 0.0624],
        [0.1494, 0.0775],
        [0.1196, 0.0413],
        [0.1094, 0.0375],
        [0.2086, 0.1134],
        [0.1344, 0.0314],
        [0.2234, 0.1224],
        [0.1522, 0.0938],
        [0.0881, 0.0766],
        [0.1354, 0.0861],
        [0.1117, 0.0191]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1155],
        [0.1431],
        [0.1240],
        [0.3147],
        [0.1436],
        [0.0977],
        [0.1078],
        [0.1183],
        [0.1000],
        [0.1126],
        [0.1405],
        [0.1161],
        [0.1469],
        [0.1170],
        [0.0930],
        [0.1368]], device='cuda:0', dtype=torch.float16)/tensor([[0.1155, 0.1431, 0.1240, 0.3147, 0.1436, 0.0977, 0.1078, 0.1183, 0.1000,
         0.1126, 0.1405, 0.1161, 0.1469, 0.1170, 0.0930, 0.1368]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0509],
        [0.0797],
        [0.0959],
        [0.0665],
        [0.0751],
        [0.0203],
        [0.0311],
        [0.0921],
        [0.0253],
        [0.0283],
        [0.0358],
        [0.0371],
        [0.0343],
        [0.0335],
        [0.0718],
        [0.0657]], device='cuda:0', dtype=torch.float16)/tensor([[0.0509, 0.0797, 0.0959, 0.0665, 0.0751, 0.0203, 0.0311, 0.0921, 0.0253,
         0.0283, 0.0358, 0.0371, 0.0343, 0.0335, 0.0718, 0.0657]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1155, 0.0509],
        [0.1431, 0.0797],
        [0.1240, 0.0959],
        [0.3147, 0.0665],
        [0.1436, 0.0751],
        [0.0977, 0.0203],
        [0.1078, 0.0311],
        [0.1183, 0.0921],
        [0.1000, 0.0253],
        [0.1126, 0.0283],
        [0.1405, 0.0358],
        [0.1161, 0.0371],
        [0.1469, 0.0343],
        [0.1170, 0.0335],
        [0.0930, 0.0718],
        [0.1368, 0.0657]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1182],
        [0.1338],
        [0.1464],
        [0.1054],
        [0.1320],
        [0.1255],
        [0.1152],
        [0.1351],
        [0.0947],
        [0.1412],
        [0.0930],
        [0.1456],
        [0.1587],
        [0.1388],
        [0.1438],
        [0.0912]], device='cuda:0', dtype=torch.float16)/tensor([[0.1182, 0.1338, 0.1464, 0.1054, 0.1320, 0.1255, 0.1152, 0.1351, 0.0947,
         0.1412, 0.0930, 0.1456, 0.1587, 0.1388, 0.1438, 0.0912]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0285],
        [0.0325],
        [0.0403],
        [0.0765],
        [0.0471],
        [0.0579],
        [0.0682],
        [0.0384],
        [0.0843],
        [0.0333],
        [0.0277],
        [0.0484],
        [0.0863],
        [0.0767],
        [0.0402],
        [0.0699]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0325, 0.0403, 0.0765, 0.0471, 0.0579, 0.0682, 0.0384, 0.0843,
         0.0333, 0.0277, 0.0484, 0.0863, 0.0767, 0.0402, 0.0699]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1182, 0.0285],
        [0.1338, 0.0325],
        [0.1464, 0.0403],
        [0.1054, 0.0765],
        [0.1320, 0.0471],
        [0.1255, 0.0579],
        [0.1152, 0.0682],
        [0.1351, 0.0384],
        [0.0947, 0.0843],
        [0.1412, 0.0333],
        [0.0930, 0.0277],
        [0.1456, 0.0484],
        [0.1587, 0.0863],
        [0.1388, 0.0767],
        [0.1438, 0.0402],
        [0.0912, 0.0699]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1473],
        [0.2225],
        [0.0764],
        [0.1439],
        [0.1318],
        [0.1105],
        [0.1307],
        [0.1466],
        [0.1149],
        [0.1119],
        [0.1427],
        [0.1624],
        [0.1558],
        [0.1372],
        [0.1642],
        [0.1403]], device='cuda:0', dtype=torch.float16)/tensor([[0.1473, 0.2225, 0.0764, 0.1439, 0.1318, 0.1105, 0.1307, 0.1466, 0.1149,
         0.1119, 0.1427, 0.1624, 0.1558, 0.1372, 0.1642, 0.1403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0237],
        [0.0643],
        [0.0696],
        [0.1005],
        [0.0399],
        [0.0822],
        [0.0294],
        [0.0667],
        [0.0319],
        [0.0311],
        [0.0435],
        [0.0602],
        [0.0644],
        [0.0406],
        [0.0399],
        [0.0717]], device='cuda:0', dtype=torch.float16)/tensor([[0.0237, 0.0643, 0.0696, 0.1005, 0.0399, 0.0822, 0.0294, 0.0667, 0.0319,
         0.0311, 0.0435, 0.0602, 0.0644, 0.0406, 0.0399, 0.0717]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1473, 0.0237],
        [0.2225, 0.0643],
        [0.0764, 0.0696],
        [0.1439, 0.1005],
        [0.1318, 0.0399],
        [0.1105, 0.0822],
        [0.1307, 0.0294],
        [0.1466, 0.0667],
        [0.1149, 0.0319],
        [0.1119, 0.0311],
        [0.1427, 0.0435],
        [0.1624, 0.0602],
        [0.1558, 0.0644],
        [0.1372, 0.0406],
        [0.1642, 0.0399],
        [0.1403, 0.0717]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0926],
        [0.0835],
        [0.0959],
        [0.1948],
        [0.1074],
        [0.0873],
        [0.0956],
        [0.0914],
        [0.1210],
        [0.0909],
        [0.1846],
        [0.0944],
        [0.1530],
        [0.1202],
        [0.0848],
        [0.1328]], device='cuda:0', dtype=torch.float16)/tensor([[0.0926, 0.0835, 0.0959, 0.1948, 0.1074, 0.0873, 0.0956, 0.0914, 0.1210,
         0.0909, 0.1846, 0.0944, 0.1530, 0.1202, 0.0848, 0.1328]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0612],
        [0.0436],
        [0.0522],
        [0.1075],
        [0.0448],
        [0.0347],
        [0.0612],
        [0.0412],
        [0.0173],
        [0.0241],
        [0.0321],
        [0.0146],
        [0.0418],
        [0.0375],
        [0.0822],
        [0.0292]], device='cuda:0', dtype=torch.float16)/tensor([[0.0612, 0.0436, 0.0522, 0.1075, 0.0448, 0.0347, 0.0612, 0.0412, 0.0173,
         0.0241, 0.0321, 0.0146, 0.0418, 0.0375, 0.0822, 0.0292]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0926, 0.0612],
        [0.0835, 0.0436],
        [0.0959, 0.0522],
        [0.1948, 0.1075],
        [0.1074, 0.0448],
        [0.0873, 0.0347],
        [0.0956, 0.0612],
        [0.0914, 0.0412],
        [0.1210, 0.0173],
        [0.0909, 0.0241],
        [0.1846, 0.0321],
        [0.0944, 0.0146],
        [0.1530, 0.0418],
        [0.1202, 0.0375],
        [0.0848, 0.0822],
        [0.1328, 0.0292]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1313],
        [0.1831],
        [0.2113],
        [0.2063],
        [0.1387],
        [0.1321],
        [0.1077],
        [0.1841],
        [0.1448],
        [0.0980],
        [0.1124],
        [0.1115],
        [0.1196],
        [0.1401],
        [0.0903],
        [0.0938]], device='cuda:0', dtype=torch.float16)/tensor([[0.1313, 0.1831, 0.2113, 0.2063, 0.1387, 0.1321, 0.1077, 0.1841, 0.1448,
         0.0980, 0.1124, 0.1115, 0.1196, 0.1401, 0.0903, 0.0938]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0868],
        [0.0390],
        [0.0453],
        [0.0555],
        [0.0382],
        [0.1069],
        [0.0285],
        [0.0368],
        [0.0706],
        [0.0541],
        [0.0227],
        [0.0159],
        [0.0574],
        [0.0622],
        [0.0265],
        [0.0295]], device='cuda:0', dtype=torch.float16)/tensor([[0.0868, 0.0390, 0.0453, 0.0555, 0.0382, 0.1069, 0.0285, 0.0368, 0.0706,
         0.0541, 0.0227, 0.0159, 0.0574, 0.0622, 0.0265, 0.0295]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1313, 0.0868],
        [0.1831, 0.0390],
        [0.2113, 0.0453],
        [0.2063, 0.0555],
        [0.1387, 0.0382],
        [0.1321, 0.1069],
        [0.1077, 0.0285],
        [0.1841, 0.0368],
        [0.1448, 0.0706],
        [0.0980, 0.0541],
        [0.1124, 0.0227],
        [0.1115, 0.0159],
        [0.1196, 0.0574],
        [0.1401, 0.0622],
        [0.0903, 0.0265],
        [0.0938, 0.0295]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1127],
        [0.1197],
        [0.1370],
        [0.1345],
        [0.2109],
        [0.1019],
        [0.0792],
        [0.2332],
        [0.1163],
        [0.0757],
        [0.1079],
        [0.1257],
        [0.1400],
        [0.1619],
        [0.1201],
        [0.1034]], device='cuda:0', dtype=torch.float16)/tensor([[0.1127, 0.1197, 0.1370, 0.1345, 0.2109, 0.1019, 0.0792, 0.2332, 0.1163,
         0.0757, 0.1079, 0.1257, 0.1400, 0.1619, 0.1201, 0.1034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0637],
        [0.0616],
        [0.0541],
        [0.0376],
        [0.0415],
        [0.0303],
        [0.0205],
        [0.0504],
        [0.0463],
        [0.0349],
        [0.0510],
        [0.0806],
        [0.0296],
        [0.0654],
        [0.0627],
        [0.0308]], device='cuda:0', dtype=torch.float16)/tensor([[0.0637, 0.0616, 0.0541, 0.0376, 0.0415, 0.0303, 0.0205, 0.0504, 0.0463,
         0.0349, 0.0510, 0.0806, 0.0296, 0.0654, 0.0627, 0.0308]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1127, 0.0637],
        [0.1197, 0.0616],
        [0.1370, 0.0541],
        [0.1345, 0.0376],
        [0.2109, 0.0415],
        [0.1019, 0.0303],
        [0.0792, 0.0205],
        [0.2332, 0.0504],
        [0.1163, 0.0463],
        [0.0757, 0.0349],
        [0.1079, 0.0510],
        [0.1257, 0.0806],
        [0.1400, 0.0296],
        [0.1619, 0.0654],
        [0.1201, 0.0627],
        [0.1034, 0.0308]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1288],
        [0.1361],
        [0.1148],
        [0.1364],
        [0.1270],
        [0.0792],
        [0.1658],
        [0.1465],
        [0.1964],
        [0.1324],
        [0.0979],
        [0.2390],
        [0.0684],
        [0.1578],
        [0.1082],
        [0.1035]], device='cuda:0', dtype=torch.float16)/tensor([[0.1288, 0.1361, 0.1148, 0.1364, 0.1270, 0.0792, 0.1658, 0.1465, 0.1964,
         0.1324, 0.0979, 0.2390, 0.0684, 0.1578, 0.1082, 0.1035]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0706],
        [0.0375],
        [0.0410],
        [0.0742],
        [0.0439],
        [0.1135],
        [0.0300],
        [0.0426],
        [0.0435],
        [0.0803],
        [0.0589],
        [0.0550],
        [0.0402],
        [0.0384],
        [0.0688],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0706, 0.0375, 0.0410, 0.0742, 0.0439, 0.1135, 0.0300, 0.0426, 0.0435,
         0.0803, 0.0589, 0.0550, 0.0402, 0.0384, 0.0688, 0.0313]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1288, 0.0706],
        [0.1361, 0.0375],
        [0.1148, 0.0410],
        [0.1364, 0.0742],
        [0.1270, 0.0439],
        [0.0792, 0.1135],
        [0.1658, 0.0300],
        [0.1465, 0.0426],
        [0.1964, 0.0435],
        [0.1324, 0.0803],
        [0.0979, 0.0589],
        [0.2390, 0.0550],
        [0.0684, 0.0402],
        [0.1578, 0.0384],
        [0.1082, 0.0688],
        [0.1035, 0.0313]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1307],
        [0.0797],
        [0.1461],
        [0.0655],
        [0.1299],
        [0.1006],
        [0.1411],
        [0.0447],
        [0.0841],
        [0.0977],
        [0.1276],
        [0.0976],
        [0.1213],
        [0.1807],
        [0.1410],
        [0.1438]], device='cuda:0', dtype=torch.float16)/tensor([[0.1307, 0.0797, 0.1461, 0.0655, 0.1299, 0.1006, 0.1411, 0.0447, 0.0841,
         0.0977, 0.1276, 0.0976, 0.1213, 0.1807, 0.1410, 0.1438]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0751],
        [0.0597],
        [0.0337],
        [0.0307],
        [0.0344],
        [0.0930],
        [0.0437],
        [0.0138],
        [0.0491],
        [0.0703],
        [0.0274],
        [0.0251],
        [0.0233],
        [0.0286],
        [0.0407],
        [0.0306]], device='cuda:0', dtype=torch.float16)/tensor([[0.0751, 0.0597, 0.0337, 0.0307, 0.0344, 0.0930, 0.0437, 0.0138, 0.0491,
         0.0703, 0.0274, 0.0251, 0.0233, 0.0286, 0.0407, 0.0306]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1307, 0.0751],
        [0.0797, 0.0597],
        [0.1461, 0.0337],
        [0.0655, 0.0307],
        [0.1299, 0.0344],
        [0.1006, 0.0930],
        [0.1411, 0.0437],
        [0.0447, 0.0138],
        [0.0841, 0.0491],
        [0.0977, 0.0703],
        [0.1276, 0.0274],
        [0.0976, 0.0251],
        [0.1213, 0.0233],
        [0.1807, 0.0286],
        [0.1410, 0.0407],
        [0.1438, 0.0306]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1163],
        [0.0718],
        [0.1205],
        [0.1225],
        [0.1416],
        [0.1196],
        [0.1152],
        [0.1327],
        [0.0833],
        [0.1355],
        [0.1273],
        [0.0794],
        [0.1329],
        [0.1385],
        [0.1022],
        [0.0891]], device='cuda:0', dtype=torch.float16)/tensor([[0.1163, 0.0718, 0.1205, 0.1225, 0.1416, 0.1196, 0.1152, 0.1327, 0.0833,
         0.1355, 0.1273, 0.0794, 0.1329, 0.1385, 0.1022, 0.0891]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0541],
        [0.0807],
        [0.0697],
        [0.0556],
        [0.0446],
        [0.0784],
        [0.0607],
        [0.0395],
        [0.0482],
        [0.0476],
        [0.0903],
        [0.0643],
        [0.0360],
        [0.0376],
        [0.0665],
        [0.0688]], device='cuda:0', dtype=torch.float16)/tensor([[0.0541, 0.0807, 0.0697, 0.0556, 0.0446, 0.0784, 0.0607, 0.0395, 0.0482,
         0.0476, 0.0903, 0.0643, 0.0360, 0.0376, 0.0665, 0.0688]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1163, 0.0541],
        [0.0718, 0.0807],
        [0.1205, 0.0697],
        [0.1225, 0.0556],
        [0.1416, 0.0446],
        [0.1196, 0.0784],
        [0.1152, 0.0607],
        [0.1327, 0.0395],
        [0.0833, 0.0482],
        [0.1355, 0.0476],
        [0.1273, 0.0903],
        [0.0794, 0.0643],
        [0.1329, 0.0360],
        [0.1385, 0.0376],
        [0.1022, 0.0665],
        [0.0891, 0.0688]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1593],
        [0.1312],
        [0.1236],
        [0.1030],
        [0.1022],
        [0.0967],
        [0.1078],
        [0.1061],
        [0.0851],
        [0.1272],
        [0.1119],
        [0.1127],
        [0.1302],
        [0.1135],
        [0.0850],
        [0.1144]], device='cuda:0', dtype=torch.float16)/tensor([[0.1593, 0.1312, 0.1236, 0.1030, 0.1022, 0.0967, 0.1078, 0.1061, 0.0851,
         0.1272, 0.1119, 0.1127, 0.1302, 0.1135, 0.0850, 0.1144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0690],
        [0.0703],
        [0.0210],
        [0.0766],
        [0.0142],
        [0.0498],
        [0.0639],
        [0.0347],
        [0.0225],
        [0.0742],
        [0.1084],
        [0.0383],
        [0.0861],
        [0.1018],
        [0.0584],
        [0.0637]], device='cuda:0', dtype=torch.float16)/tensor([[0.0690, 0.0703, 0.0210, 0.0766, 0.0142, 0.0498, 0.0639, 0.0347, 0.0225,
         0.0742, 0.1084, 0.0383, 0.0861, 0.1018, 0.0584, 0.0637]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1593, 0.0690],
        [0.1312, 0.0703],
        [0.1236, 0.0210],
        [0.1030, 0.0766],
        [0.1022, 0.0142],
        [0.0967, 0.0498],
        [0.1078, 0.0639],
        [0.1061, 0.0347],
        [0.0851, 0.0225],
        [0.1272, 0.0742],
        [0.1119, 0.1084],
        [0.1127, 0.0383],
        [0.1302, 0.0861],
        [0.1135, 0.1018],
        [0.0850, 0.0584],
        [0.1144, 0.0637]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0768],
        [0.0966],
        [0.1109],
        [0.0784],
        [0.1294],
        [0.1996],
        [0.1334],
        [0.0742],
        [0.1558],
        [0.1304],
        [0.1205],
        [0.1067],
        [0.1836],
        [0.0544],
        [0.0775],
        [0.1122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0768, 0.0966, 0.1109, 0.0784, 0.1294, 0.1996, 0.1334, 0.0742, 0.1558,
         0.1304, 0.1205, 0.1067, 0.1836, 0.0544, 0.0775, 0.1122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0608],
        [0.0533],
        [0.0870],
        [0.0511],
        [0.0351],
        [0.1077],
        [0.0423],
        [0.0475],
        [0.0423],
        [0.0213],
        [0.0423],
        [0.0455],
        [0.0419],
        [0.0302],
        [0.0341],
        [0.0660]], device='cuda:0', dtype=torch.float16)/tensor([[0.0608, 0.0533, 0.0870, 0.0511, 0.0351, 0.1077, 0.0423, 0.0475, 0.0423,
         0.0213, 0.0423, 0.0455, 0.0419, 0.0302, 0.0341, 0.0660]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0768, 0.0608],
        [0.0966, 0.0533],
        [0.1109, 0.0870],
        [0.0784, 0.0511],
        [0.1294, 0.0351],
        [0.1996, 0.1077],
        [0.1334, 0.0423],
        [0.0742, 0.0475],
        [0.1558, 0.0423],
        [0.1304, 0.0213],
        [0.1205, 0.0423],
        [0.1067, 0.0455],
        [0.1836, 0.0419],
        [0.0544, 0.0302],
        [0.0775, 0.0341],
        [0.1122, 0.0660]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1279],
        [0.1929],
        [0.1389],
        [0.1870],
        [0.1186],
        [0.0684],
        [0.1368],
        [0.1099]], device='cuda:0', dtype=torch.float16)/tensor([[0.1279, 0.1929, 0.1389, 0.1870, 0.1186, 0.0684, 0.1368, 0.1099]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0517],
        [0.1134],
        [0.0202],
        [0.0588],
        [0.0616],
        [0.0648],
        [0.0272],
        [0.0414]], device='cuda:0', dtype=torch.float16)/tensor([[0.0517, 0.1134, 0.0202, 0.0588, 0.0616, 0.0648, 0.0272, 0.0414]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1279, 0.0517],
        [0.1929, 0.1134],
        [0.1389, 0.0202],
        [0.1870, 0.0588],
        [0.1186, 0.0616],
        [0.0684, 0.0648],
        [0.1368, 0.0272],
        [0.1099, 0.0414]], device='cuda:0')
acc:  0.51
Time taken to execute the en SA task with prompt type passive, variation 2 and batchsize 16: 0:03:33.211890
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b SA passive 3 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 313.27it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0590],
        [0.0413],
        [0.1643],
        [0.0844],
        [0.0979],
        [0.0878],
        [0.0758],
        [0.1128],
        [0.0323],
        [0.0383],
        [0.0756],
        [0.0514],
        [0.1725],
        [0.0567],
        [0.0788],
        [0.0704]], device='cuda:0', dtype=torch.float16)/tensor([[0.0590, 0.0413, 0.1643, 0.0844, 0.0979, 0.0878, 0.0758, 0.1128, 0.0323,
         0.0383, 0.0756, 0.0514, 0.1725, 0.0567, 0.0788, 0.0704]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0163],
        [0.0327],
        [0.0873],
        [0.0220],
        [0.0504],
        [0.0445],
        [0.0471],
        [0.0445],
        [0.0064],
        [0.0192],
        [0.0283],
        [0.0337],
        [0.0379],
        [0.0131],
        [0.0209],
        [0.0185]], device='cuda:0', dtype=torch.float16)/tensor([[0.0163, 0.0327, 0.0873, 0.0220, 0.0504, 0.0445, 0.0471, 0.0445, 0.0064,
         0.0192, 0.0283, 0.0337, 0.0379, 0.0131, 0.0209, 0.0185]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0590, 0.0163],
        [0.0413, 0.0327],
        [0.1643, 0.0873],
        [0.0844, 0.0220],
        [0.0979, 0.0504],
        [0.0878, 0.0445],
        [0.0758, 0.0471],
        [0.1128, 0.0445],
        [0.0323, 0.0064],
        [0.0383, 0.0192],
        [0.0756, 0.0283],
        [0.0514, 0.0337],
        [0.1725, 0.0379],
        [0.0567, 0.0131],
        [0.0788, 0.0209],
        [0.0704, 0.0185]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1367],
        [0.0721],
        [0.0824],
        [0.0748],
        [0.0677],
        [0.1112],
        [0.0693],
        [0.0856],
        [0.0848],
        [0.0670],
        [0.0663],
        [0.0847],
        [0.0602],
        [0.0795],
        [0.0681],
        [0.0681]], device='cuda:0', dtype=torch.float16)/tensor([[0.1367, 0.0721, 0.0824, 0.0748, 0.0677, 0.1112, 0.0693, 0.0856, 0.0848,
         0.0670, 0.0663, 0.0847, 0.0602, 0.0795, 0.0681, 0.0681]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0351],
        [0.0389],
        [0.0231],
        [0.0697],
        [0.0150],
        [0.0501],
        [0.0527],
        [0.0626],
        [0.0232],
        [0.0493],
        [0.0513],
        [0.0262],
        [0.0129],
        [0.0262],
        [0.0592],
        [0.0385]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0389, 0.0231, 0.0697, 0.0150, 0.0501, 0.0527, 0.0626, 0.0232,
         0.0493, 0.0513, 0.0262, 0.0129, 0.0262, 0.0592, 0.0385]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1367, 0.0351],
        [0.0721, 0.0389],
        [0.0824, 0.0231],
        [0.0748, 0.0697],
        [0.0677, 0.0150],
        [0.1112, 0.0501],
        [0.0693, 0.0527],
        [0.0856, 0.0626],
        [0.0848, 0.0232],
        [0.0670, 0.0493],
        [0.0663, 0.0513],
        [0.0847, 0.0262],
        [0.0602, 0.0129],
        [0.0795, 0.0262],
        [0.0681, 0.0592],
        [0.0681, 0.0385]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0521],
        [0.1149],
        [0.0726],
        [0.0895],
        [0.0765],
        [0.1023],
        [0.0495],
        [0.0698],
        [0.1119],
        [0.0543],
        [0.0757],
        [0.0640],
        [0.1241],
        [0.0859],
        [0.0676],
        [0.0773]], device='cuda:0', dtype=torch.float16)/tensor([[0.0521, 0.1149, 0.0726, 0.0895, 0.0765, 0.1023, 0.0495, 0.0698, 0.1119,
         0.0543, 0.0757, 0.0640, 0.1241, 0.0859, 0.0676, 0.0773]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0396],
        [0.0356],
        [0.0362],
        [0.0376],
        [0.0246],
        [0.0483],
        [0.0522],
        [0.0362],
        [0.0366],
        [0.0322],
        [0.0372],
        [0.0097],
        [0.0385],
        [0.0216],
        [0.0188],
        [0.0280]], device='cuda:0', dtype=torch.float16)/tensor([[0.0396, 0.0356, 0.0362, 0.0376, 0.0246, 0.0483, 0.0522, 0.0362, 0.0366,
         0.0322, 0.0372, 0.0097, 0.0385, 0.0216, 0.0188, 0.0280]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0521, 0.0396],
        [0.1149, 0.0356],
        [0.0726, 0.0362],
        [0.0895, 0.0376],
        [0.0765, 0.0246],
        [0.1023, 0.0483],
        [0.0495, 0.0522],
        [0.0698, 0.0362],
        [0.1119, 0.0366],
        [0.0543, 0.0322],
        [0.0757, 0.0372],
        [0.0640, 0.0097],
        [0.1241, 0.0385],
        [0.0859, 0.0216],
        [0.0676, 0.0188],
        [0.0773, 0.0280]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0743],
        [0.0681],
        [0.0632],
        [0.0590],
        [0.1014],
        [0.0883],
        [0.1603],
        [0.0858],
        [0.0912],
        [0.0789],
        [0.0552],
        [0.1236],
        [0.0922],
        [0.0667],
        [0.0503],
        [0.0660]], device='cuda:0', dtype=torch.float16)/tensor([[0.0743, 0.0681, 0.0632, 0.0590, 0.1014, 0.0883, 0.1603, 0.0858, 0.0912,
         0.0789, 0.0552, 0.1236, 0.0922, 0.0667, 0.0503, 0.0660]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0335],
        [0.0183],
        [0.0405],
        [0.0210],
        [0.0288],
        [0.0280],
        [0.1102],
        [0.0157],
        [0.0243],
        [0.0564],
        [0.0374],
        [0.0536],
        [0.0268],
        [0.0303],
        [0.0441],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0335, 0.0183, 0.0405, 0.0210, 0.0288, 0.0280, 0.1102, 0.0157, 0.0243,
         0.0564, 0.0374, 0.0536, 0.0268, 0.0303, 0.0441, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0743, 0.0335],
        [0.0681, 0.0183],
        [0.0632, 0.0405],
        [0.0590, 0.0210],
        [0.1014, 0.0288],
        [0.0883, 0.0280],
        [0.1603, 0.1102],
        [0.0858, 0.0157],
        [0.0912, 0.0243],
        [0.0789, 0.0564],
        [0.0552, 0.0374],
        [0.1236, 0.0536],
        [0.0922, 0.0268],
        [0.0667, 0.0303],
        [0.0503, 0.0441],
        [0.0660, 0.0256]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1130],
        [0.0786],
        [0.0509],
        [0.0777],
        [0.0869],
        [0.1100],
        [0.0790],
        [0.0656],
        [0.1466],
        [0.0559],
        [0.0928],
        [0.0751],
        [0.0696],
        [0.1230],
        [0.0711],
        [0.1072]], device='cuda:0', dtype=torch.float16)/tensor([[0.1130, 0.0786, 0.0509, 0.0777, 0.0869, 0.1100, 0.0790, 0.0656, 0.1466,
         0.0559, 0.0928, 0.0751, 0.0696, 0.1230, 0.0711, 0.1072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0546],
        [0.0187],
        [0.0198],
        [0.0250],
        [0.0182],
        [0.0558],
        [0.0454],
        [0.0385],
        [0.0883],
        [0.0316],
        [0.0347],
        [0.0504],
        [0.0172],
        [0.0212],
        [0.0508],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0546, 0.0187, 0.0198, 0.0250, 0.0182, 0.0558, 0.0454, 0.0385, 0.0883,
         0.0316, 0.0347, 0.0504, 0.0172, 0.0212, 0.0508, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1130, 0.0546],
        [0.0786, 0.0187],
        [0.0509, 0.0198],
        [0.0777, 0.0250],
        [0.0869, 0.0182],
        [0.1100, 0.0558],
        [0.0790, 0.0454],
        [0.0656, 0.0385],
        [0.1466, 0.0883],
        [0.0559, 0.0316],
        [0.0928, 0.0347],
        [0.0751, 0.0504],
        [0.0696, 0.0172],
        [0.1230, 0.0212],
        [0.0711, 0.0508],
        [0.1072, 0.0179]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0569],
        [0.0648],
        [0.0797],
        [0.0677],
        [0.0927],
        [0.0644],
        [0.0541],
        [0.0739],
        [0.0918],
        [0.0689],
        [0.1003],
        [0.0388],
        [0.0544],
        [0.0664],
        [0.0977],
        [0.0384]], device='cuda:0', dtype=torch.float16)/tensor([[0.0569, 0.0648, 0.0797, 0.0677, 0.0927, 0.0644, 0.0541, 0.0739, 0.0918,
         0.0689, 0.1003, 0.0388, 0.0544, 0.0664, 0.0977, 0.0384]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0163],
        [0.0324],
        [0.0351],
        [0.0512],
        [0.0319],
        [0.0173],
        [0.0207],
        [0.0424],
        [0.0151],
        [0.0396],
        [0.0206],
        [0.0380],
        [0.0290],
        [0.0284],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0163, 0.0324, 0.0351, 0.0512, 0.0319, 0.0173, 0.0207, 0.0424,
         0.0151, 0.0396, 0.0206, 0.0380, 0.0290, 0.0284, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0569, 0.0062],
        [0.0648, 0.0163],
        [0.0797, 0.0324],
        [0.0677, 0.0351],
        [0.0927, 0.0512],
        [0.0644, 0.0319],
        [0.0541, 0.0173],
        [0.0739, 0.0207],
        [0.0918, 0.0424],
        [0.0689, 0.0151],
        [0.1003, 0.0396],
        [0.0388, 0.0206],
        [0.0544, 0.0380],
        [0.0664, 0.0290],
        [0.0977, 0.0284],
        [0.0384, 0.0048]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1506],
        [0.0872],
        [0.0973],
        [0.0884],
        [0.0764],
        [0.0738],
        [0.0517],
        [0.0613],
        [0.0905],
        [0.0549],
        [0.0748],
        [0.0659],
        [0.0802],
        [0.2756],
        [0.0470],
        [0.0376]], device='cuda:0', dtype=torch.float16)/tensor([[0.1506, 0.0872, 0.0973, 0.0884, 0.0764, 0.0738, 0.0517, 0.0613, 0.0905,
         0.0549, 0.0748, 0.0659, 0.0802, 0.2756, 0.0470, 0.0376]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0328],
        [0.0449],
        [0.0453],
        [0.0632],
        [0.0609],
        [0.0398],
        [0.0292],
        [0.0562],
        [0.0503],
        [0.0178],
        [0.0391],
        [0.0217],
        [0.0206],
        [0.0697],
        [0.0140],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0328, 0.0449, 0.0453, 0.0632, 0.0609, 0.0398, 0.0292, 0.0562, 0.0503,
         0.0178, 0.0391, 0.0217, 0.0206, 0.0697, 0.0140, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1506, 0.0328],
        [0.0872, 0.0449],
        [0.0973, 0.0453],
        [0.0884, 0.0632],
        [0.0764, 0.0609],
        [0.0738, 0.0398],
        [0.0517, 0.0292],
        [0.0613, 0.0562],
        [0.0905, 0.0503],
        [0.0549, 0.0178],
        [0.0748, 0.0391],
        [0.0659, 0.0217],
        [0.0802, 0.0206],
        [0.2756, 0.0697],
        [0.0470, 0.0140],
        [0.0376, 0.0051]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0947],
        [0.1036],
        [0.0877],
        [0.0749],
        [0.0884],
        [0.0968],
        [0.0690],
        [0.0917],
        [0.0784],
        [0.0597],
        [0.0676],
        [0.0575],
        [0.0538],
        [0.0476],
        [0.0864],
        [0.0581]], device='cuda:0', dtype=torch.float16)/tensor([[0.0947, 0.1036, 0.0877, 0.0749, 0.0884, 0.0968, 0.0690, 0.0917, 0.0784,
         0.0597, 0.0676, 0.0575, 0.0538, 0.0476, 0.0864, 0.0581]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0273],
        [0.0464],
        [0.0200],
        [0.0767],
        [0.0584],
        [0.0454],
        [0.0071],
        [0.0531],
        [0.0132],
        [0.0221],
        [0.0188],
        [0.0126],
        [0.0514],
        [0.0226],
        [0.0266],
        [0.0367]], device='cuda:0', dtype=torch.float16)/tensor([[0.0273, 0.0464, 0.0200, 0.0767, 0.0584, 0.0454, 0.0071, 0.0531, 0.0132,
         0.0221, 0.0188, 0.0126, 0.0514, 0.0226, 0.0266, 0.0367]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0947, 0.0273],
        [0.1036, 0.0464],
        [0.0877, 0.0200],
        [0.0749, 0.0767],
        [0.0884, 0.0584],
        [0.0968, 0.0454],
        [0.0690, 0.0071],
        [0.0917, 0.0531],
        [0.0784, 0.0132],
        [0.0597, 0.0221],
        [0.0676, 0.0188],
        [0.0575, 0.0126],
        [0.0538, 0.0514],
        [0.0476, 0.0226],
        [0.0864, 0.0266],
        [0.0581, 0.0367]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0721],
        [0.0577],
        [0.0553],
        [0.0844],
        [0.0624],
        [0.1050],
        [0.0745],
        [0.0632],
        [0.0712],
        [0.0669],
        [0.0849],
        [0.0659],
        [0.0740],
        [0.0748],
        [0.0774],
        [0.1024]], device='cuda:0', dtype=torch.float16)/tensor([[0.0721, 0.0577, 0.0553, 0.0844, 0.0624, 0.1050, 0.0745, 0.0632, 0.0712,
         0.0669, 0.0849, 0.0659, 0.0740, 0.0748, 0.0774, 0.1024]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0101],
        [0.0415],
        [0.0138],
        [0.0504],
        [0.0248],
        [0.0268],
        [0.0274],
        [0.0156],
        [0.0412],
        [0.0222],
        [0.0259],
        [0.0248],
        [0.0418],
        [0.0214],
        [0.0366],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0415, 0.0138, 0.0504, 0.0248, 0.0268, 0.0274, 0.0156, 0.0412,
         0.0222, 0.0259, 0.0248, 0.0418, 0.0214, 0.0366, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0721, 0.0101],
        [0.0577, 0.0415],
        [0.0553, 0.0138],
        [0.0844, 0.0504],
        [0.0624, 0.0248],
        [0.1050, 0.0268],
        [0.0745, 0.0274],
        [0.0632, 0.0156],
        [0.0712, 0.0412],
        [0.0669, 0.0222],
        [0.0849, 0.0259],
        [0.0659, 0.0248],
        [0.0740, 0.0418],
        [0.0748, 0.0214],
        [0.0774, 0.0366],
        [0.1024, 0.0351]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0954],
        [0.0598],
        [0.0870],
        [0.0792],
        [0.0735],
        [0.0825],
        [0.0643],
        [0.0588],
        [0.1010],
        [0.0912],
        [0.0668],
        [0.0990],
        [0.0643],
        [0.0670],
        [0.0811],
        [0.0943]], device='cuda:0', dtype=torch.float16)/tensor([[0.0954, 0.0598, 0.0870, 0.0792, 0.0735, 0.0825, 0.0643, 0.0588, 0.1010,
         0.0912, 0.0668, 0.0990, 0.0643, 0.0670, 0.0811, 0.0943]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0280],
        [0.0455],
        [0.0291],
        [0.0448],
        [0.0193],
        [0.0558],
        [0.0372],
        [0.0115],
        [0.0196],
        [0.0280],
        [0.0374],
        [0.0269],
        [0.0292],
        [0.0286],
        [0.0408],
        [0.0489]], device='cuda:0', dtype=torch.float16)/tensor([[0.0280, 0.0455, 0.0291, 0.0448, 0.0193, 0.0558, 0.0372, 0.0115, 0.0196,
         0.0280, 0.0374, 0.0269, 0.0292, 0.0286, 0.0408, 0.0489]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0954, 0.0280],
        [0.0598, 0.0455],
        [0.0870, 0.0291],
        [0.0792, 0.0448],
        [0.0735, 0.0193],
        [0.0825, 0.0558],
        [0.0643, 0.0372],
        [0.0588, 0.0115],
        [0.1010, 0.0196],
        [0.0912, 0.0280],
        [0.0668, 0.0374],
        [0.0990, 0.0269],
        [0.0643, 0.0292],
        [0.0670, 0.0286],
        [0.0811, 0.0408],
        [0.0943, 0.0489]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1382],
        [0.0755],
        [0.0822],
        [0.0828],
        [0.0477],
        [0.0867],
        [0.0911],
        [0.0941],
        [0.0269],
        [0.0643],
        [0.0740],
        [0.0756],
        [0.0587],
        [0.1770],
        [0.0899],
        [0.0956]], device='cuda:0', dtype=torch.float16)/tensor([[0.1382, 0.0755, 0.0822, 0.0828, 0.0477, 0.0867, 0.0911, 0.0941, 0.0269,
         0.0643, 0.0740, 0.0756, 0.0587, 0.1770, 0.0899, 0.0956]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0358],
        [0.0451],
        [0.0192],
        [0.0162],
        [0.0108],
        [0.0262],
        [0.0327],
        [0.0480],
        [0.0121],
        [0.0295],
        [0.0119],
        [0.0190],
        [0.0376],
        [0.0786],
        [0.0176],
        [0.0259]], device='cuda:0', dtype=torch.float16)/tensor([[0.0358, 0.0451, 0.0192, 0.0162, 0.0108, 0.0262, 0.0327, 0.0480, 0.0121,
         0.0295, 0.0119, 0.0190, 0.0376, 0.0786, 0.0176, 0.0259]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1382, 0.0358],
        [0.0755, 0.0451],
        [0.0822, 0.0192],
        [0.0828, 0.0162],
        [0.0477, 0.0108],
        [0.0867, 0.0262],
        [0.0911, 0.0327],
        [0.0941, 0.0480],
        [0.0269, 0.0121],
        [0.0643, 0.0295],
        [0.0740, 0.0119],
        [0.0756, 0.0190],
        [0.0587, 0.0376],
        [0.1770, 0.0786],
        [0.0899, 0.0176],
        [0.0956, 0.0259]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0573],
        [0.0612],
        [0.0840],
        [0.0880],
        [0.0565],
        [0.0959],
        [0.0940],
        [0.0759],
        [0.1281],
        [0.0764],
        [0.0892],
        [0.0594],
        [0.1076],
        [0.0881],
        [0.0706],
        [0.0644]], device='cuda:0', dtype=torch.float16)/tensor([[0.0573, 0.0612, 0.0840, 0.0880, 0.0565, 0.0959, 0.0940, 0.0759, 0.1281,
         0.0764, 0.0892, 0.0594, 0.1076, 0.0881, 0.0706, 0.0644]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0490],
        [0.0149],
        [0.0235],
        [0.0195],
        [0.0109],
        [0.0457],
        [0.0430],
        [0.0479],
        [0.0286],
        [0.0331],
        [0.0632],
        [0.0117],
        [0.0321],
        [0.0295],
        [0.0460],
        [0.0342]], device='cuda:0', dtype=torch.float16)/tensor([[0.0490, 0.0149, 0.0235, 0.0195, 0.0109, 0.0457, 0.0430, 0.0479, 0.0286,
         0.0331, 0.0632, 0.0117, 0.0321, 0.0295, 0.0460, 0.0342]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0573, 0.0490],
        [0.0612, 0.0149],
        [0.0840, 0.0235],
        [0.0880, 0.0195],
        [0.0565, 0.0109],
        [0.0959, 0.0457],
        [0.0940, 0.0430],
        [0.0759, 0.0479],
        [0.1281, 0.0286],
        [0.0764, 0.0331],
        [0.0892, 0.0632],
        [0.0594, 0.0117],
        [0.1076, 0.0321],
        [0.0881, 0.0295],
        [0.0706, 0.0460],
        [0.0644, 0.0342]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1005],
        [0.1139],
        [0.0806],
        [0.0823],
        [0.0516],
        [0.0216],
        [0.0493],
        [0.1565]], device='cuda:0', dtype=torch.float16)/tensor([[0.1005, 0.1139, 0.0806, 0.0823, 0.0516, 0.0216, 0.0493, 0.1565]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.1094],
        [0.0840],
        [0.0202],
        [0.0755],
        [0.0215],
        [0.0098],
        [0.0080],
        [0.0524]], device='cuda:0', dtype=torch.float16)/tensor([[0.1094, 0.0840, 0.0202, 0.0755, 0.0215, 0.0098, 0.0080, 0.0524]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1005, 0.1094],
        [0.1139, 0.0840],
        [0.0806, 0.0202],
        [0.0823, 0.0755],
        [0.0516, 0.0215],
        [0.0216, 0.0098],
        [0.0493, 0.0080],
        [0.1565, 0.0524]], device='cuda:0')
acc:  0.515
Time taken to execute the en SA task with prompt type passive, variation 3 and batchsize 16: 0:03:35.098521
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b SA passive 4 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 309.90it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0652],
        [0.0721],
        [0.0583],
        [0.0494],
        [0.0870],
        [0.0875],
        [0.0814],
        [0.0917],
        [0.0686],
        [0.0417],
        [0.0983],
        [0.0686],
        [0.0662],
        [0.1135],
        [0.0618],
        [0.0234]], device='cuda:0', dtype=torch.float16)/tensor([[0.0652, 0.0721, 0.0583, 0.0494, 0.0870, 0.0875, 0.0814, 0.0917, 0.0686,
         0.0417, 0.0983, 0.0686, 0.0662, 0.1135, 0.0618, 0.0234]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0405],
        [0.0167],
        [0.0305],
        [0.0324],
        [0.0202],
        [0.0241],
        [0.0207],
        [0.0469],
        [0.0155],
        [0.0308],
        [0.0282],
        [0.0342],
        [0.0180],
        [0.0844],
        [0.0283],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0405, 0.0167, 0.0305, 0.0324, 0.0202, 0.0241, 0.0207, 0.0469, 0.0155,
         0.0308, 0.0282, 0.0342, 0.0180, 0.0844, 0.0283, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0652, 0.0405],
        [0.0721, 0.0167],
        [0.0583, 0.0305],
        [0.0494, 0.0324],
        [0.0870, 0.0202],
        [0.0875, 0.0241],
        [0.0814, 0.0207],
        [0.0917, 0.0469],
        [0.0686, 0.0155],
        [0.0417, 0.0308],
        [0.0983, 0.0282],
        [0.0686, 0.0342],
        [0.0662, 0.0180],
        [0.1135, 0.0844],
        [0.0618, 0.0283],
        [0.0234, 0.0127]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0584],
        [0.0892],
        [0.0609],
        [0.1058],
        [0.0978],
        [0.0473],
        [0.0592],
        [0.0753],
        [0.0461],
        [0.0995],
        [0.0642],
        [0.0995],
        [0.0582],
        [0.1639],
        [0.1026],
        [0.0852]], device='cuda:0', dtype=torch.float16)/tensor([[0.0584, 0.0892, 0.0609, 0.1058, 0.0978, 0.0473, 0.0592, 0.0753, 0.0461,
         0.0995, 0.0642, 0.0995, 0.0582, 0.1639, 0.1026, 0.0852]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0207],
        [0.0428],
        [0.0190],
        [0.0132],
        [0.0405],
        [0.0201],
        [0.0290],
        [0.0185],
        [0.0306],
        [0.0231],
        [0.0268],
        [0.0109],
        [0.0580],
        [0.0231],
        [0.0145]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0207, 0.0428, 0.0190, 0.0132, 0.0405, 0.0201, 0.0290, 0.0185,
         0.0306, 0.0231, 0.0268, 0.0109, 0.0580, 0.0231, 0.0145]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0584, 0.0133],
        [0.0892, 0.0207],
        [0.0609, 0.0428],
        [0.1058, 0.0190],
        [0.0978, 0.0132],
        [0.0473, 0.0405],
        [0.0592, 0.0201],
        [0.0753, 0.0290],
        [0.0461, 0.0185],
        [0.0995, 0.0306],
        [0.0642, 0.0231],
        [0.0995, 0.0268],
        [0.0582, 0.0109],
        [0.1639, 0.0580],
        [0.1026, 0.0231],
        [0.0852, 0.0145]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0706],
        [0.0707],
        [0.0862],
        [0.0564],
        [0.0549],
        [0.1002],
        [0.0825],
        [0.0359],
        [0.1020],
        [0.0417],
        [0.0760],
        [0.0706],
        [0.0680],
        [0.0660],
        [0.0886],
        [0.0656]], device='cuda:0', dtype=torch.float16)/tensor([[0.0706, 0.0707, 0.0862, 0.0564, 0.0549, 0.1002, 0.0825, 0.0359, 0.1020,
         0.0417, 0.0760, 0.0706, 0.0680, 0.0660, 0.0886, 0.0656]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0264],
        [0.0106],
        [0.0451],
        [0.0356],
        [0.0431],
        [0.0231],
        [0.0278],
        [0.0223],
        [0.0260],
        [0.0234],
        [0.0291],
        [0.0084],
        [0.0385],
        [0.0305],
        [0.0272],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0264, 0.0106, 0.0451, 0.0356, 0.0431, 0.0231, 0.0278, 0.0223, 0.0260,
         0.0234, 0.0291, 0.0084, 0.0385, 0.0305, 0.0272, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0706, 0.0264],
        [0.0707, 0.0106],
        [0.0862, 0.0451],
        [0.0564, 0.0356],
        [0.0549, 0.0431],
        [0.1002, 0.0231],
        [0.0825, 0.0278],
        [0.0359, 0.0223],
        [0.1020, 0.0260],
        [0.0417, 0.0234],
        [0.0760, 0.0291],
        [0.0706, 0.0084],
        [0.0680, 0.0385],
        [0.0660, 0.0305],
        [0.0886, 0.0272],
        [0.0656, 0.0192]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1135],
        [0.0618],
        [0.0804],
        [0.0808],
        [0.0638],
        [0.0712],
        [0.1044],
        [0.0928],
        [0.0517],
        [0.0722],
        [0.0544],
        [0.0741],
        [0.0501],
        [0.0620],
        [0.0767],
        [0.0891]], device='cuda:0', dtype=torch.float16)/tensor([[0.1135, 0.0618, 0.0804, 0.0808, 0.0638, 0.0712, 0.1044, 0.0928, 0.0517,
         0.0722, 0.0544, 0.0741, 0.0501, 0.0620, 0.0767, 0.0891]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0266],
        [0.0227],
        [0.0289],
        [0.0267],
        [0.0295],
        [0.0215],
        [0.0244],
        [0.0147],
        [0.0329],
        [0.0156],
        [0.0271],
        [0.0385],
        [0.0311],
        [0.0197],
        [0.0433],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0266, 0.0227, 0.0289, 0.0267, 0.0295, 0.0215, 0.0244, 0.0147, 0.0329,
         0.0156, 0.0271, 0.0385, 0.0311, 0.0197, 0.0433, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1135, 0.0266],
        [0.0618, 0.0227],
        [0.0804, 0.0289],
        [0.0808, 0.0267],
        [0.0638, 0.0295],
        [0.0712, 0.0215],
        [0.1044, 0.0244],
        [0.0928, 0.0147],
        [0.0517, 0.0329],
        [0.0722, 0.0156],
        [0.0544, 0.0271],
        [0.0741, 0.0385],
        [0.0501, 0.0311],
        [0.0620, 0.0197],
        [0.0767, 0.0433],
        [0.0891, 0.0341]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1261],
        [0.0527],
        [0.1093],
        [0.0477],
        [0.0401],
        [0.0381],
        [0.0659],
        [0.0763],
        [0.0634],
        [0.0578],
        [0.0526],
        [0.0533],
        [0.0237],
        [0.0606],
        [0.0595],
        [0.0802]], device='cuda:0', dtype=torch.float16)/tensor([[0.1261, 0.0527, 0.1093, 0.0477, 0.0401, 0.0381, 0.0659, 0.0763, 0.0634,
         0.0578, 0.0526, 0.0533, 0.0237, 0.0606, 0.0595, 0.0802]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0168],
        [0.0166],
        [0.0264],
        [0.0405],
        [0.0045],
        [0.0083],
        [0.0339],
        [0.0418],
        [0.0206],
        [0.0269],
        [0.0350],
        [0.0073],
        [0.0082],
        [0.0385],
        [0.0175],
        [0.0327]], device='cuda:0', dtype=torch.float16)/tensor([[0.0168, 0.0166, 0.0264, 0.0405, 0.0045, 0.0083, 0.0339, 0.0418, 0.0206,
         0.0269, 0.0350, 0.0073, 0.0082, 0.0385, 0.0175, 0.0327]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1261, 0.0168],
        [0.0527, 0.0166],
        [0.1093, 0.0264],
        [0.0477, 0.0405],
        [0.0401, 0.0045],
        [0.0381, 0.0083],
        [0.0659, 0.0339],
        [0.0763, 0.0418],
        [0.0634, 0.0206],
        [0.0578, 0.0269],
        [0.0526, 0.0350],
        [0.0533, 0.0073],
        [0.0237, 0.0082],
        [0.0606, 0.0385],
        [0.0595, 0.0175],
        [0.0802, 0.0327]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0817],
        [0.0525],
        [0.0873],
        [0.0847],
        [0.0793],
        [0.0799],
        [0.0654],
        [0.0894],
        [0.0924],
        [0.0537],
        [0.0885],
        [0.0716],
        [0.0917],
        [0.0808],
        [0.0487],
        [0.0793]], device='cuda:0', dtype=torch.float16)/tensor([[0.0817, 0.0525, 0.0873, 0.0847, 0.0793, 0.0799, 0.0654, 0.0894, 0.0924,
         0.0537, 0.0885, 0.0716, 0.0917, 0.0808, 0.0487, 0.0793]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0383],
        [0.0369],
        [0.0352],
        [0.0329],
        [0.0180],
        [0.0113],
        [0.0442],
        [0.0497],
        [0.0307],
        [0.0331],
        [0.0186],
        [0.0411],
        [0.0211],
        [0.0293],
        [0.0195],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0383, 0.0369, 0.0352, 0.0329, 0.0180, 0.0113, 0.0442, 0.0497, 0.0307,
         0.0331, 0.0186, 0.0411, 0.0211, 0.0293, 0.0195, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0817, 0.0383],
        [0.0525, 0.0369],
        [0.0873, 0.0352],
        [0.0847, 0.0329],
        [0.0793, 0.0180],
        [0.0799, 0.0113],
        [0.0654, 0.0442],
        [0.0894, 0.0497],
        [0.0924, 0.0307],
        [0.0537, 0.0331],
        [0.0885, 0.0186],
        [0.0716, 0.0411],
        [0.0917, 0.0211],
        [0.0808, 0.0293],
        [0.0487, 0.0195],
        [0.0793, 0.0172]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0727],
        [0.0798],
        [0.0648],
        [0.0539],
        [0.0853],
        [0.0522],
        [0.0715],
        [0.0524],
        [0.0847],
        [0.0924],
        [0.0963],
        [0.1213],
        [0.0856],
        [0.0986],
        [0.1587],
        [0.0598]], device='cuda:0', dtype=torch.float16)/tensor([[0.0727, 0.0798, 0.0648, 0.0539, 0.0853, 0.0522, 0.0715, 0.0524, 0.0847,
         0.0924, 0.0963, 0.1213, 0.0856, 0.0986, 0.1587, 0.0598]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0278],
        [0.0205],
        [0.0331],
        [0.0450],
        [0.0176],
        [0.0189],
        [0.0178],
        [0.0219],
        [0.0235],
        [0.0343],
        [0.0133],
        [0.0840],
        [0.0380],
        [0.0229],
        [0.0380],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0205, 0.0331, 0.0450, 0.0176, 0.0189, 0.0178, 0.0219, 0.0235,
         0.0343, 0.0133, 0.0840, 0.0380, 0.0229, 0.0380, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0727, 0.0278],
        [0.0798, 0.0205],
        [0.0648, 0.0331],
        [0.0539, 0.0450],
        [0.0853, 0.0176],
        [0.0522, 0.0189],
        [0.0715, 0.0178],
        [0.0524, 0.0219],
        [0.0847, 0.0235],
        [0.0924, 0.0343],
        [0.0963, 0.0133],
        [0.1213, 0.0840],
        [0.0856, 0.0380],
        [0.0986, 0.0229],
        [0.1587, 0.0380],
        [0.0598, 0.0303]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1086],
        [0.0775],
        [0.0730],
        [0.0593],
        [0.1013],
        [0.0566],
        [0.1316],
        [0.0690],
        [0.0557],
        [0.0568],
        [0.0628],
        [0.0753],
        [0.2267],
        [0.0740],
        [0.0864],
        [0.1263]], device='cuda:0', dtype=torch.float16)/tensor([[0.1086, 0.0775, 0.0730, 0.0593, 0.1013, 0.0566, 0.1316, 0.0690, 0.0557,
         0.0568, 0.0628, 0.0753, 0.2267, 0.0740, 0.0864, 0.1263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0309],
        [0.0205],
        [0.0314],
        [0.0345],
        [0.0435],
        [0.0310],
        [0.0255],
        [0.0399],
        [0.0284],
        [0.0390],
        [0.0378],
        [0.0388],
        [0.0676],
        [0.0095],
        [0.0222],
        [0.0300]], device='cuda:0', dtype=torch.float16)/tensor([[0.0309, 0.0205, 0.0314, 0.0345, 0.0435, 0.0310, 0.0255, 0.0399, 0.0284,
         0.0390, 0.0378, 0.0388, 0.0676, 0.0095, 0.0222, 0.0300]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1086, 0.0309],
        [0.0775, 0.0205],
        [0.0730, 0.0314],
        [0.0593, 0.0345],
        [0.1013, 0.0435],
        [0.0566, 0.0310],
        [0.1316, 0.0255],
        [0.0690, 0.0399],
        [0.0557, 0.0284],
        [0.0568, 0.0390],
        [0.0628, 0.0378],
        [0.0753, 0.0388],
        [0.2267, 0.0676],
        [0.0740, 0.0095],
        [0.0864, 0.0222],
        [0.1263, 0.0300]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0909],
        [0.0464],
        [0.0793],
        [0.0814],
        [0.0424],
        [0.1259],
        [0.0520],
        [0.0793],
        [0.0791],
        [0.0991],
        [0.1133],
        [0.1132],
        [0.0468],
        [0.0892],
        [0.0655],
        [0.0646]], device='cuda:0', dtype=torch.float16)/tensor([[0.0909, 0.0464, 0.0793, 0.0814, 0.0424, 0.1259, 0.0520, 0.0793, 0.0791,
         0.0991, 0.1133, 0.1132, 0.0468, 0.0892, 0.0655, 0.0646]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0337],
        [0.0299],
        [0.0188],
        [0.0203],
        [0.0200],
        [0.0262],
        [0.0144],
        [0.0219],
        [0.0192],
        [0.0295],
        [0.0232],
        [0.0223],
        [0.0243],
        [0.0248],
        [0.0530],
        [0.0289]], device='cuda:0', dtype=torch.float16)/tensor([[0.0337, 0.0299, 0.0188, 0.0203, 0.0200, 0.0262, 0.0144, 0.0219, 0.0192,
         0.0295, 0.0232, 0.0223, 0.0243, 0.0248, 0.0530, 0.0289]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0909, 0.0337],
        [0.0464, 0.0299],
        [0.0793, 0.0188],
        [0.0814, 0.0203],
        [0.0424, 0.0200],
        [0.1259, 0.0262],
        [0.0520, 0.0144],
        [0.0793, 0.0219],
        [0.0791, 0.0192],
        [0.0991, 0.0295],
        [0.1133, 0.0232],
        [0.1132, 0.0223],
        [0.0468, 0.0243],
        [0.0892, 0.0248],
        [0.0655, 0.0530],
        [0.0646, 0.0289]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0488],
        [0.0806],
        [0.0554],
        [0.0984],
        [0.0629],
        [0.0631],
        [0.0617],
        [0.0507],
        [0.0751],
        [0.0522],
        [0.1023],
        [0.1053],
        [0.0621],
        [0.0984],
        [0.0908],
        [0.0998]], device='cuda:0', dtype=torch.float16)/tensor([[0.0488, 0.0806, 0.0554, 0.0984, 0.0629, 0.0631, 0.0617, 0.0507, 0.0751,
         0.0522, 0.1023, 0.1053, 0.0621, 0.0984, 0.0908, 0.0998]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0079],
        [0.0187],
        [0.0508],
        [0.0401],
        [0.0286],
        [0.0185],
        [0.0191],
        [0.0049],
        [0.0459],
        [0.0314],
        [0.0522],
        [0.0399],
        [0.0458],
        [0.0380],
        [0.0250],
        [0.0258]], device='cuda:0', dtype=torch.float16)/tensor([[0.0079, 0.0187, 0.0508, 0.0401, 0.0286, 0.0185, 0.0191, 0.0049, 0.0459,
         0.0314, 0.0522, 0.0399, 0.0458, 0.0380, 0.0250, 0.0258]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0488, 0.0079],
        [0.0806, 0.0187],
        [0.0554, 0.0508],
        [0.0984, 0.0401],
        [0.0629, 0.0286],
        [0.0631, 0.0185],
        [0.0617, 0.0191],
        [0.0507, 0.0049],
        [0.0751, 0.0459],
        [0.0522, 0.0314],
        [0.1023, 0.0522],
        [0.1053, 0.0399],
        [0.0621, 0.0458],
        [0.0984, 0.0380],
        [0.0908, 0.0250],
        [0.0998, 0.0258]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1231],
        [0.0646],
        [0.0872],
        [0.0823],
        [0.1382],
        [0.0592],
        [0.0503],
        [0.0563],
        [0.0540],
        [0.1091],
        [0.0615],
        [0.1267],
        [0.0784],
        [0.0583],
        [0.0497],
        [0.1074]], device='cuda:0', dtype=torch.float16)/tensor([[0.1231, 0.0646, 0.0872, 0.0823, 0.1382, 0.0592, 0.0503, 0.0563, 0.0540,
         0.1091, 0.0615, 0.1267, 0.0784, 0.0583, 0.0497, 0.1074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0228],
        [0.0377],
        [0.0355],
        [0.0184],
        [0.0590],
        [0.0105],
        [0.0308],
        [0.0175],
        [0.0308],
        [0.0229],
        [0.0348],
        [0.0431],
        [0.0241],
        [0.0356],
        [0.0175],
        [0.0523]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0377, 0.0355, 0.0184, 0.0590, 0.0105, 0.0308, 0.0175, 0.0308,
         0.0229, 0.0348, 0.0431, 0.0241, 0.0356, 0.0175, 0.0523]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1231, 0.0228],
        [0.0646, 0.0377],
        [0.0872, 0.0355],
        [0.0823, 0.0184],
        [0.1382, 0.0590],
        [0.0592, 0.0105],
        [0.0503, 0.0308],
        [0.0563, 0.0175],
        [0.0540, 0.0308],
        [0.1091, 0.0229],
        [0.0615, 0.0348],
        [0.1267, 0.0431],
        [0.0784, 0.0241],
        [0.0583, 0.0356],
        [0.0497, 0.0175],
        [0.1074, 0.0523]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0681],
        [0.0696],
        [0.0574],
        [0.0895],
        [0.1300],
        [0.0664],
        [0.0826],
        [0.0839],
        [0.0518],
        [0.1175],
        [0.0693],
        [0.0970],
        [0.1073],
        [0.0720],
        [0.0929],
        [0.0985]], device='cuda:0', dtype=torch.float16)/tensor([[0.0681, 0.0696, 0.0574, 0.0895, 0.1300, 0.0664, 0.0826, 0.0839, 0.0518,
         0.1175, 0.0693, 0.0970, 0.1073, 0.0720, 0.0929, 0.0985]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0436],
        [0.0419],
        [0.0483],
        [0.0126],
        [0.0252],
        [0.0339],
        [0.0123],
        [0.0244],
        [0.0374],
        [0.0690],
        [0.0155],
        [0.0371],
        [0.0417],
        [0.0198],
        [0.0563],
        [0.0182]], device='cuda:0', dtype=torch.float16)/tensor([[0.0436, 0.0419, 0.0483, 0.0126, 0.0252, 0.0339, 0.0123, 0.0244, 0.0374,
         0.0690, 0.0155, 0.0371, 0.0417, 0.0198, 0.0563, 0.0182]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0681, 0.0436],
        [0.0696, 0.0419],
        [0.0574, 0.0483],
        [0.0895, 0.0126],
        [0.1300, 0.0252],
        [0.0664, 0.0339],
        [0.0826, 0.0123],
        [0.0839, 0.0244],
        [0.0518, 0.0374],
        [0.1175, 0.0690],
        [0.0693, 0.0155],
        [0.0970, 0.0371],
        [0.1073, 0.0417],
        [0.0720, 0.0198],
        [0.0929, 0.0563],
        [0.0985, 0.0182]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0506],
        [0.1492],
        [0.0784],
        [0.0565],
        [0.0866],
        [0.0696],
        [0.0972],
        [0.1138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0506, 0.1492, 0.0784, 0.0565, 0.0866, 0.0696, 0.0972, 0.1138]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0075],
        [0.0798],
        [0.0479],
        [0.0113],
        [0.0302],
        [0.0416],
        [0.0333],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0075, 0.0798, 0.0479, 0.0113, 0.0302, 0.0416, 0.0333, 0.0237]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0506, 0.0075],
        [0.1492, 0.0798],
        [0.0784, 0.0479],
        [0.0565, 0.0113],
        [0.0866, 0.0302],
        [0.0696, 0.0416],
        [0.0972, 0.0333],
        [0.1138, 0.0237]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type passive, variation 4 and batchsize 16: 0:03:33.214351
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b SA passive 5 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 228.81it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0850],
        [0.0562],
        [0.0586],
        [0.0673],
        [0.1815],
        [0.1312],
        [0.0758],
        [0.0719],
        [0.0923],
        [0.0415],
        [0.0673],
        [0.1304],
        [0.0535],
        [0.1005],
        [0.3105],
        [0.0510]], device='cuda:0', dtype=torch.float16)/tensor([[0.0850, 0.0562, 0.0586, 0.0673, 0.1815, 0.1312, 0.0758, 0.0719, 0.0923,
         0.0415, 0.0673, 0.1304, 0.0535, 0.1005, 0.3105, 0.0510]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0267],
        [0.0251],
        [0.0268],
        [0.0301],
        [0.0710],
        [0.0450],
        [0.0154],
        [0.0241],
        [0.0134],
        [0.0294],
        [0.0271],
        [0.0230],
        [0.0080],
        [0.0406],
        [0.0561],
        [0.0218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0251, 0.0268, 0.0301, 0.0710, 0.0450, 0.0154, 0.0241, 0.0134,
         0.0294, 0.0271, 0.0230, 0.0080, 0.0406, 0.0561, 0.0218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0850, 0.0267],
        [0.0562, 0.0251],
        [0.0586, 0.0268],
        [0.0673, 0.0301],
        [0.1815, 0.0710],
        [0.1312, 0.0450],
        [0.0758, 0.0154],
        [0.0719, 0.0241],
        [0.0923, 0.0134],
        [0.0415, 0.0294],
        [0.0673, 0.0271],
        [0.1304, 0.0230],
        [0.0535, 0.0080],
        [0.1005, 0.0406],
        [0.3105, 0.0561],
        [0.0510, 0.0218]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1045],
        [0.0604],
        [0.0544],
        [0.0982],
        [0.0704],
        [0.0706],
        [0.0437],
        [0.0831],
        [0.0539],
        [0.1000],
        [0.0518],
        [0.0912],
        [0.0696],
        [0.0734],
        [0.0891],
        [0.0662]], device='cuda:0', dtype=torch.float16)/tensor([[0.1045, 0.0604, 0.0544, 0.0982, 0.0704, 0.0706, 0.0437, 0.0831, 0.0539,
         0.1000, 0.0518, 0.0912, 0.0696, 0.0734, 0.0891, 0.0662]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0167],
        [0.0186],
        [0.0351],
        [0.0422],
        [0.0185],
        [0.0122],
        [0.0155],
        [0.0303],
        [0.0071],
        [0.0263],
        [0.0208],
        [0.0249],
        [0.0204],
        [0.0107],
        [0.0240],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0167, 0.0186, 0.0351, 0.0422, 0.0185, 0.0122, 0.0155, 0.0303, 0.0071,
         0.0263, 0.0208, 0.0249, 0.0204, 0.0107, 0.0240, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1045, 0.0167],
        [0.0604, 0.0186],
        [0.0544, 0.0351],
        [0.0982, 0.0422],
        [0.0704, 0.0185],
        [0.0706, 0.0122],
        [0.0437, 0.0155],
        [0.0831, 0.0303],
        [0.0539, 0.0071],
        [0.1000, 0.0263],
        [0.0518, 0.0208],
        [0.0912, 0.0249],
        [0.0696, 0.0204],
        [0.0734, 0.0107],
        [0.0891, 0.0240],
        [0.0662, 0.0060]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0607],
        [0.0498],
        [0.0811],
        [0.0712],
        [0.0853],
        [0.0486],
        [0.0487],
        [0.0564],
        [0.0354],
        [0.0631],
        [0.0429],
        [0.0605],
        [0.0472],
        [0.0761],
        [0.0731],
        [0.0522]], device='cuda:0', dtype=torch.float16)/tensor([[0.0607, 0.0498, 0.0811, 0.0712, 0.0853, 0.0486, 0.0487, 0.0564, 0.0354,
         0.0631, 0.0429, 0.0605, 0.0472, 0.0761, 0.0731, 0.0522]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0147],
        [0.0192],
        [0.0308],
        [0.0163],
        [0.0153],
        [0.0081],
        [0.0243],
        [0.0171],
        [0.0132],
        [0.0383],
        [0.0119],
        [0.0256],
        [0.0211],
        [0.0243],
        [0.0171],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0192, 0.0308, 0.0163, 0.0153, 0.0081, 0.0243, 0.0171, 0.0132,
         0.0383, 0.0119, 0.0256, 0.0211, 0.0243, 0.0171, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0607, 0.0147],
        [0.0498, 0.0192],
        [0.0811, 0.0308],
        [0.0712, 0.0163],
        [0.0853, 0.0153],
        [0.0486, 0.0081],
        [0.0487, 0.0243],
        [0.0564, 0.0171],
        [0.0354, 0.0132],
        [0.0631, 0.0383],
        [0.0429, 0.0119],
        [0.0605, 0.0256],
        [0.0472, 0.0211],
        [0.0761, 0.0243],
        [0.0731, 0.0171],
        [0.0522, 0.0115]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0933],
        [0.0626],
        [0.0703],
        [0.0673],
        [0.0608],
        [0.0563],
        [0.0417],
        [0.0884],
        [0.0646],
        [0.0495],
        [0.1158],
        [0.0663],
        [0.0499],
        [0.1521],
        [0.0704],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0933, 0.0626, 0.0703, 0.0673, 0.0608, 0.0563, 0.0417, 0.0884, 0.0646,
         0.0495, 0.1158, 0.0663, 0.0499, 0.1521, 0.0704, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0245],
        [0.0186],
        [0.0188],
        [0.0135],
        [0.0139],
        [0.0233],
        [0.0352],
        [0.0374],
        [0.0220],
        [0.0159],
        [0.0479],
        [0.0126],
        [0.0257],
        [0.0685],
        [0.0195],
        [0.0190]], device='cuda:0', dtype=torch.float16)/tensor([[0.0245, 0.0186, 0.0188, 0.0135, 0.0139, 0.0233, 0.0352, 0.0374, 0.0220,
         0.0159, 0.0479, 0.0126, 0.0257, 0.0685, 0.0195, 0.0190]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0933, 0.0245],
        [0.0626, 0.0186],
        [0.0703, 0.0188],
        [0.0673, 0.0135],
        [0.0608, 0.0139],
        [0.0563, 0.0233],
        [0.0417, 0.0352],
        [0.0884, 0.0374],
        [0.0646, 0.0220],
        [0.0495, 0.0159],
        [0.1158, 0.0479],
        [0.0663, 0.0126],
        [0.0499, 0.0257],
        [0.1521, 0.0685],
        [0.0704, 0.0195],
        [0.0419, 0.0190]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0515],
        [0.0526],
        [0.0588],
        [0.0684],
        [0.0795],
        [0.0721],
        [0.0659],
        [0.0671],
        [0.0649],
        [0.0653],
        [0.0505],
        [0.0551],
        [0.0615],
        [0.0652],
        [0.0441],
        [0.0559]], device='cuda:0', dtype=torch.float16)/tensor([[0.0515, 0.0526, 0.0588, 0.0684, 0.0795, 0.0721, 0.0659, 0.0671, 0.0649,
         0.0653, 0.0505, 0.0551, 0.0615, 0.0652, 0.0441, 0.0559]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0229],
        [0.0203],
        [0.0282],
        [0.0184],
        [0.0224],
        [0.0223],
        [0.0311],
        [0.0151],
        [0.0342],
        [0.0126],
        [0.0262],
        [0.0150],
        [0.0117],
        [0.0154],
        [0.0057],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0229, 0.0203, 0.0282, 0.0184, 0.0224, 0.0223, 0.0311, 0.0151, 0.0342,
         0.0126, 0.0262, 0.0150, 0.0117, 0.0154, 0.0057, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0515, 0.0229],
        [0.0526, 0.0203],
        [0.0588, 0.0282],
        [0.0684, 0.0184],
        [0.0795, 0.0224],
        [0.0721, 0.0223],
        [0.0659, 0.0311],
        [0.0671, 0.0151],
        [0.0649, 0.0342],
        [0.0653, 0.0126],
        [0.0505, 0.0262],
        [0.0551, 0.0150],
        [0.0615, 0.0117],
        [0.0652, 0.0154],
        [0.0441, 0.0057],
        [0.0559, 0.0184]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0629],
        [0.0748],
        [0.0402],
        [0.0651],
        [0.0955],
        [0.0302],
        [0.0592],
        [0.0994],
        [0.2048],
        [0.0764],
        [0.0987],
        [0.0481],
        [0.0848],
        [0.1006],
        [0.0609],
        [0.0538]], device='cuda:0', dtype=torch.float16)/tensor([[0.0629, 0.0748, 0.0402, 0.0651, 0.0955, 0.0302, 0.0592, 0.0994, 0.2048,
         0.0764, 0.0987, 0.0481, 0.0848, 0.1006, 0.0609, 0.0538]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0334],
        [0.0243],
        [0.0064],
        [0.0267],
        [0.0240],
        [0.0069],
        [0.0153],
        [0.0152],
        [0.0847],
        [0.0110],
        [0.0365],
        [0.0102],
        [0.0132],
        [0.0223],
        [0.0158],
        [0.0219]], device='cuda:0', dtype=torch.float16)/tensor([[0.0334, 0.0243, 0.0064, 0.0267, 0.0240, 0.0069, 0.0153, 0.0152, 0.0847,
         0.0110, 0.0365, 0.0102, 0.0132, 0.0223, 0.0158, 0.0219]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0629, 0.0334],
        [0.0748, 0.0243],
        [0.0402, 0.0064],
        [0.0651, 0.0267],
        [0.0955, 0.0240],
        [0.0302, 0.0069],
        [0.0592, 0.0153],
        [0.0994, 0.0152],
        [0.2048, 0.0847],
        [0.0764, 0.0110],
        [0.0987, 0.0365],
        [0.0481, 0.0102],
        [0.0848, 0.0132],
        [0.1006, 0.0223],
        [0.0609, 0.0158],
        [0.0538, 0.0219]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0748],
        [0.0661],
        [0.0683],
        [0.0619],
        [0.0565],
        [0.0657],
        [0.0851],
        [0.0663],
        [0.0510],
        [0.0795],
        [0.0482],
        [0.0848],
        [0.0739],
        [0.0569],
        [0.0983],
        [0.0808]], device='cuda:0', dtype=torch.float16)/tensor([[0.0748, 0.0661, 0.0683, 0.0619, 0.0565, 0.0657, 0.0851, 0.0663, 0.0510,
         0.0795, 0.0482, 0.0848, 0.0739, 0.0569, 0.0983, 0.0808]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0353],
        [0.0135],
        [0.0196],
        [0.0138],
        [0.0183],
        [0.0296],
        [0.0316],
        [0.0274],
        [0.0114],
        [0.0435],
        [0.0148],
        [0.0329],
        [0.0280],
        [0.0239],
        [0.0171],
        [0.0167]], device='cuda:0', dtype=torch.float16)/tensor([[0.0353, 0.0135, 0.0196, 0.0138, 0.0183, 0.0296, 0.0316, 0.0274, 0.0114,
         0.0435, 0.0148, 0.0329, 0.0280, 0.0239, 0.0171, 0.0167]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0748, 0.0353],
        [0.0661, 0.0135],
        [0.0683, 0.0196],
        [0.0619, 0.0138],
        [0.0565, 0.0183],
        [0.0657, 0.0296],
        [0.0851, 0.0316],
        [0.0663, 0.0274],
        [0.0510, 0.0114],
        [0.0795, 0.0435],
        [0.0482, 0.0148],
        [0.0848, 0.0329],
        [0.0739, 0.0280],
        [0.0569, 0.0239],
        [0.0983, 0.0171],
        [0.0808, 0.0167]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0994],
        [0.0925],
        [0.0712],
        [0.0710],
        [0.0681],
        [0.0632],
        [0.0453],
        [0.0387],
        [0.0621],
        [0.0716],
        [0.0805],
        [0.0963],
        [0.0522],
        [0.0801],
        [0.0814],
        [0.0530]], device='cuda:0', dtype=torch.float16)/tensor([[0.0994, 0.0925, 0.0712, 0.0710, 0.0681, 0.0632, 0.0453, 0.0387, 0.0621,
         0.0716, 0.0805, 0.0963, 0.0522, 0.0801, 0.0814, 0.0530]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0366],
        [0.0225],
        [0.0156],
        [0.0274],
        [0.0475],
        [0.0156],
        [0.0324],
        [0.0096],
        [0.0182],
        [0.0228],
        [0.0160],
        [0.0215],
        [0.0108],
        [0.0133],
        [0.0111],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0366, 0.0225, 0.0156, 0.0274, 0.0475, 0.0156, 0.0324, 0.0096, 0.0182,
         0.0228, 0.0160, 0.0215, 0.0108, 0.0133, 0.0111, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0994, 0.0366],
        [0.0925, 0.0225],
        [0.0712, 0.0156],
        [0.0710, 0.0274],
        [0.0681, 0.0475],
        [0.0632, 0.0156],
        [0.0453, 0.0324],
        [0.0387, 0.0096],
        [0.0621, 0.0182],
        [0.0716, 0.0228],
        [0.0805, 0.0160],
        [0.0963, 0.0215],
        [0.0522, 0.0108],
        [0.0801, 0.0133],
        [0.0814, 0.0111],
        [0.0530, 0.0114]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0850],
        [0.0610],
        [0.0807],
        [0.0603],
        [0.0975],
        [0.0988],
        [0.0592],
        [0.0654],
        [0.0449],
        [0.1084],
        [0.0925],
        [0.0590],
        [0.0427],
        [0.0605],
        [0.0547],
        [0.0747]], device='cuda:0', dtype=torch.float16)/tensor([[0.0850, 0.0610, 0.0807, 0.0603, 0.0975, 0.0988, 0.0592, 0.0654, 0.0449,
         0.1084, 0.0925, 0.0590, 0.0427, 0.0605, 0.0547, 0.0747]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0346],
        [0.0319],
        [0.0350],
        [0.0113],
        [0.0204],
        [0.0921],
        [0.0236],
        [0.0107],
        [0.0283],
        [0.0139],
        [0.0253],
        [0.0242],
        [0.0061],
        [0.0175],
        [0.0235],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0319, 0.0350, 0.0113, 0.0204, 0.0921, 0.0236, 0.0107, 0.0283,
         0.0139, 0.0253, 0.0242, 0.0061, 0.0175, 0.0235, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0850, 0.0346],
        [0.0610, 0.0319],
        [0.0807, 0.0350],
        [0.0603, 0.0113],
        [0.0975, 0.0204],
        [0.0988, 0.0921],
        [0.0592, 0.0236],
        [0.0654, 0.0107],
        [0.0449, 0.0283],
        [0.1084, 0.0139],
        [0.0925, 0.0253],
        [0.0590, 0.0242],
        [0.0427, 0.0061],
        [0.0605, 0.0175],
        [0.0547, 0.0235],
        [0.0747, 0.0302]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0467],
        [0.0516],
        [0.0697],
        [0.0887],
        [0.0483],
        [0.0988],
        [0.0609],
        [0.0657],
        [0.0455],
        [0.0728],
        [0.0360],
        [0.0727],
        [0.0384],
        [0.0850],
        [0.0611],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0467, 0.0516, 0.0697, 0.0887, 0.0483, 0.0988, 0.0609, 0.0657, 0.0455,
         0.0728, 0.0360, 0.0727, 0.0384, 0.0850, 0.0611, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0195],
        [0.0286],
        [0.0332],
        [0.0339],
        [0.0055],
        [0.0222],
        [0.0276],
        [0.0217],
        [0.0073],
        [0.0197],
        [0.0052],
        [0.0207],
        [0.0050],
        [0.0214],
        [0.0215],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0286, 0.0332, 0.0339, 0.0055, 0.0222, 0.0276, 0.0217, 0.0073,
         0.0197, 0.0052, 0.0207, 0.0050, 0.0214, 0.0215, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0467, 0.0195],
        [0.0516, 0.0286],
        [0.0697, 0.0332],
        [0.0887, 0.0339],
        [0.0483, 0.0055],
        [0.0988, 0.0222],
        [0.0609, 0.0276],
        [0.0657, 0.0217],
        [0.0455, 0.0073],
        [0.0728, 0.0197],
        [0.0360, 0.0052],
        [0.0727, 0.0207],
        [0.0384, 0.0050],
        [0.0850, 0.0214],
        [0.0611, 0.0215],
        [0.0217, 0.0092]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0897],
        [0.0566],
        [0.0584],
        [0.0520],
        [0.1193],
        [0.0900],
        [0.0945],
        [0.0444],
        [0.0693],
        [0.1611],
        [0.0777],
        [0.0900],
        [0.0442],
        [0.0810],
        [0.0604],
        [0.0659]], device='cuda:0', dtype=torch.float16)/tensor([[0.0897, 0.0566, 0.0584, 0.0520, 0.1193, 0.0900, 0.0945, 0.0444, 0.0693,
         0.1611, 0.0777, 0.0900, 0.0442, 0.0810, 0.0604, 0.0659]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0195],
        [0.0247],
        [0.0276],
        [0.0103],
        [0.0467],
        [0.0154],
        [0.0340],
        [0.0191],
        [0.0192],
        [0.0565],
        [0.0400],
        [0.0129],
        [0.0161],
        [0.0215],
        [0.0159],
        [0.0090]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0247, 0.0276, 0.0103, 0.0467, 0.0154, 0.0340, 0.0191, 0.0192,
         0.0565, 0.0400, 0.0129, 0.0161, 0.0215, 0.0159, 0.0090]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0897, 0.0195],
        [0.0566, 0.0247],
        [0.0584, 0.0276],
        [0.0520, 0.0103],
        [0.1193, 0.0467],
        [0.0900, 0.0154],
        [0.0945, 0.0340],
        [0.0444, 0.0191],
        [0.0693, 0.0192],
        [0.1611, 0.0565],
        [0.0777, 0.0400],
        [0.0900, 0.0129],
        [0.0442, 0.0161],
        [0.0810, 0.0215],
        [0.0604, 0.0159],
        [0.0659, 0.0090]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0732],
        [0.0834],
        [0.0722],
        [0.0430],
        [0.0504],
        [0.0771],
        [0.0618],
        [0.0845],
        [0.0822],
        [0.0614],
        [0.1416],
        [0.0971],
        [0.0715],
        [0.0565],
        [0.1910],
        [0.0815]], device='cuda:0', dtype=torch.float16)/tensor([[0.0732, 0.0834, 0.0722, 0.0430, 0.0504, 0.0771, 0.0618, 0.0845, 0.0822,
         0.0614, 0.1416, 0.0971, 0.0715, 0.0565, 0.1910, 0.0815]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0269],
        [0.0151],
        [0.0363],
        [0.0373],
        [0.0188],
        [0.0324],
        [0.0216],
        [0.0201],
        [0.0151],
        [0.0111],
        [0.0283],
        [0.0160],
        [0.0307],
        [0.0118],
        [0.0574],
        [0.0221]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0151, 0.0363, 0.0373, 0.0188, 0.0324, 0.0216, 0.0201, 0.0151,
         0.0111, 0.0283, 0.0160, 0.0307, 0.0118, 0.0574, 0.0221]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0732, 0.0269],
        [0.0834, 0.0151],
        [0.0722, 0.0363],
        [0.0430, 0.0373],
        [0.0504, 0.0188],
        [0.0771, 0.0324],
        [0.0618, 0.0216],
        [0.0845, 0.0201],
        [0.0822, 0.0151],
        [0.0614, 0.0111],
        [0.1416, 0.0283],
        [0.0971, 0.0160],
        [0.0715, 0.0307],
        [0.0565, 0.0118],
        [0.1910, 0.0574],
        [0.0815, 0.0221]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0709],
        [0.0873],
        [0.0421],
        [0.0361],
        [0.0348],
        [0.0821],
        [0.0483],
        [0.0359]], device='cuda:0', dtype=torch.float16)/tensor([[0.0709, 0.0873, 0.0421, 0.0361, 0.0348, 0.0821, 0.0483, 0.0359]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0237],
        [0.0180],
        [0.0059],
        [0.0258],
        [0.0376],
        [0.0233],
        [0.0100],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0237, 0.0180, 0.0059, 0.0258, 0.0376, 0.0233, 0.0100, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0709, 0.0237],
        [0.0873, 0.0180],
        [0.0421, 0.0059],
        [0.0361, 0.0258],
        [0.0348, 0.0376],
        [0.0821, 0.0233],
        [0.0483, 0.0100],
        [0.0359, 0.0051]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type passive, variation 5 and batchsize 16: 0:03:33.918519
path ['42', 'en', 'llama', 'SA', 'passive', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA auxiliary 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 314.38it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1720],
        [0.1030],
        [0.1088],
        [0.0730],
        [0.0555],
        [0.0445],
        [0.0584],
        [0.0844],
        [0.0997],
        [0.0731],
        [0.1356],
        [0.0206],
        [0.0874],
        [0.0596],
        [0.0406],
        [0.0884]], device='cuda:0', dtype=torch.float16)/tensor([[0.1720, 0.1030, 0.1088, 0.0730, 0.0555, 0.0445, 0.0584, 0.0844, 0.0997,
         0.0731, 0.1356, 0.0206, 0.0874, 0.0596, 0.0406, 0.0884]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0470],
        [0.0334],
        [0.0279],
        [0.0106],
        [0.0103],
        [0.0695],
        [0.0157],
        [0.0268],
        [0.0190],
        [0.0057],
        [0.1598],
        [0.0063],
        [0.0189],
        [0.0406],
        [0.0815],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0470, 0.0334, 0.0279, 0.0106, 0.0103, 0.0695, 0.0157, 0.0268, 0.0190,
         0.0057, 0.1598, 0.0063, 0.0189, 0.0406, 0.0815, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1720, 0.0470],
        [0.1030, 0.0334],
        [0.1088, 0.0279],
        [0.0730, 0.0106],
        [0.0555, 0.0103],
        [0.0445, 0.0695],
        [0.0584, 0.0157],
        [0.0844, 0.0268],
        [0.0997, 0.0190],
        [0.0731, 0.0057],
        [0.1356, 0.1598],
        [0.0206, 0.0063],
        [0.0874, 0.0189],
        [0.0596, 0.0406],
        [0.0406, 0.0815],
        [0.0884, 0.0118]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0285],
        [0.0671],
        [0.0514],
        [0.0511],
        [0.2070],
        [0.1163],
        [0.0704],
        [0.0591],
        [0.0853],
        [0.1627],
        [0.0460],
        [0.0541],
        [0.1248],
        [0.1198],
        [0.0402],
        [0.0822]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0671, 0.0514, 0.0511, 0.2070, 0.1163, 0.0704, 0.0591, 0.0853,
         0.1627, 0.0460, 0.0541, 0.1248, 0.1198, 0.0402, 0.0822]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0139],
        [0.0210],
        [0.0587],
        [0.0130],
        [0.0549],
        [0.0248],
        [0.0491],
        [0.0551],
        [0.0867],
        [0.0481],
        [0.1020],
        [0.0706],
        [0.0375],
        [0.0197],
        [0.0775],
        [0.0487]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0210, 0.0587, 0.0130, 0.0549, 0.0248, 0.0491, 0.0551, 0.0867,
         0.0481, 0.1020, 0.0706, 0.0375, 0.0197, 0.0775, 0.0487]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0285, 0.0139],
        [0.0671, 0.0210],
        [0.0514, 0.0587],
        [0.0511, 0.0130],
        [0.2070, 0.0549],
        [0.1163, 0.0248],
        [0.0704, 0.0491],
        [0.0591, 0.0551],
        [0.0853, 0.0867],
        [0.1627, 0.0481],
        [0.0460, 0.1020],
        [0.0541, 0.0706],
        [0.1248, 0.0375],
        [0.1198, 0.0197],
        [0.0402, 0.0775],
        [0.0822, 0.0487]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0692],
        [0.0530],
        [0.0443],
        [0.0667],
        [0.0551],
        [0.0935],
        [0.1093],
        [0.0831],
        [0.0605],
        [0.0968],
        [0.0558],
        [0.0749],
        [0.1111],
        [0.0589],
        [0.0649],
        [0.0770]], device='cuda:0', dtype=torch.float16)/tensor([[0.0692, 0.0530, 0.0443, 0.0667, 0.0551, 0.0935, 0.1093, 0.0831, 0.0605,
         0.0968, 0.0558, 0.0749, 0.1111, 0.0589, 0.0649, 0.0770]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0169],
        [0.0329],
        [0.0675],
        [0.1042],
        [0.1167],
        [0.0222],
        [0.0700],
        [0.0694],
        [0.0279],
        [0.0280],
        [0.0374],
        [0.0168],
        [0.0164],
        [0.0912],
        [0.0867],
        [0.1438]], device='cuda:0', dtype=torch.float16)/tensor([[0.0169, 0.0329, 0.0675, 0.1042, 0.1167, 0.0222, 0.0700, 0.0694, 0.0279,
         0.0280, 0.0374, 0.0168, 0.0164, 0.0912, 0.0867, 0.1438]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0692, 0.0169],
        [0.0530, 0.0329],
        [0.0443, 0.0675],
        [0.0667, 0.1042],
        [0.0551, 0.1167],
        [0.0935, 0.0222],
        [0.1093, 0.0700],
        [0.0831, 0.0694],
        [0.0605, 0.0279],
        [0.0968, 0.0280],
        [0.0558, 0.0374],
        [0.0749, 0.0168],
        [0.1111, 0.0164],
        [0.0589, 0.0912],
        [0.0649, 0.0867],
        [0.0770, 0.1438]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1140],
        [0.0395],
        [0.0593],
        [0.0892],
        [0.0892],
        [0.1421],
        [0.0493],
        [0.0502],
        [0.0871],
        [0.0688],
        [0.0883],
        [0.0794],
        [0.0560],
        [0.0730],
        [0.0833],
        [0.0758]], device='cuda:0', dtype=torch.float16)/tensor([[0.1140, 0.0395, 0.0593, 0.0892, 0.0892, 0.1421, 0.0493, 0.0502, 0.0871,
         0.0688, 0.0883, 0.0794, 0.0560, 0.0730, 0.0833, 0.0758]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0461],
        [0.0189],
        [0.0383],
        [0.0764],
        [0.0210],
        [0.1466],
        [0.0370],
        [0.0394],
        [0.0178],
        [0.0077],
        [0.0163],
        [0.0363],
        [0.0827],
        [0.0446],
        [0.0179],
        [0.0521]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0189, 0.0383, 0.0764, 0.0210, 0.1466, 0.0370, 0.0394, 0.0178,
         0.0077, 0.0163, 0.0363, 0.0827, 0.0446, 0.0179, 0.0521]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1140, 0.0461],
        [0.0395, 0.0189],
        [0.0593, 0.0383],
        [0.0892, 0.0764],
        [0.0892, 0.0210],
        [0.1421, 0.1466],
        [0.0493, 0.0370],
        [0.0502, 0.0394],
        [0.0871, 0.0178],
        [0.0688, 0.0077],
        [0.0883, 0.0163],
        [0.0794, 0.0363],
        [0.0560, 0.0827],
        [0.0730, 0.0446],
        [0.0833, 0.0179],
        [0.0758, 0.0521]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1274],
        [0.1135],
        [0.0471],
        [0.0991],
        [0.3152],
        [0.0767],
        [0.0670],
        [0.0759],
        [0.0701],
        [0.0453],
        [0.0569],
        [0.0454],
        [0.0681],
        [0.0829],
        [0.1045],
        [0.0712]], device='cuda:0', dtype=torch.float16)/tensor([[0.1274, 0.1135, 0.0471, 0.0991, 0.3152, 0.0767, 0.0670, 0.0759, 0.0701,
         0.0453, 0.0569, 0.0454, 0.0681, 0.0829, 0.1045, 0.0712]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0385],
        [0.0627],
        [0.1167],
        [0.0286],
        [0.0725],
        [0.0626],
        [0.1053],
        [0.0827],
        [0.0432],
        [0.0670],
        [0.0660],
        [0.0391],
        [0.0388],
        [0.0836],
        [0.0361],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0385, 0.0627, 0.1167, 0.0286, 0.0725, 0.0626, 0.1053, 0.0827, 0.0432,
         0.0670, 0.0660, 0.0391, 0.0388, 0.0836, 0.0361, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1274, 0.0385],
        [0.1135, 0.0627],
        [0.0471, 0.1167],
        [0.0991, 0.0286],
        [0.3152, 0.0725],
        [0.0767, 0.0626],
        [0.0670, 0.1053],
        [0.0759, 0.0827],
        [0.0701, 0.0432],
        [0.0453, 0.0670],
        [0.0569, 0.0660],
        [0.0454, 0.0391],
        [0.0681, 0.0388],
        [0.0829, 0.0836],
        [0.1045, 0.0361],
        [0.0712, 0.0089]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0934],
        [0.1133],
        [0.1017],
        [0.0731],
        [0.1184],
        [0.0784],
        [0.0594],
        [0.0488],
        [0.1029],
        [0.0502],
        [0.0599],
        [0.0359],
        [0.0964],
        [0.0771],
        [0.0760],
        [0.0490]], device='cuda:0', dtype=torch.float16)/tensor([[0.0934, 0.1133, 0.1017, 0.0731, 0.1184, 0.0784, 0.0594, 0.0488, 0.1029,
         0.0502, 0.0599, 0.0359, 0.0964, 0.0771, 0.0760, 0.0490]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0249],
        [0.0239],
        [0.0254],
        [0.0041],
        [0.0184],
        [0.0247],
        [0.0428],
        [0.0575],
        [0.1428],
        [0.0033],
        [0.0581],
        [0.0413],
        [0.0533],
        [0.0748],
        [0.1047],
        [0.0881]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0239, 0.0254, 0.0041, 0.0184, 0.0247, 0.0428, 0.0575, 0.1428,
         0.0033, 0.0581, 0.0413, 0.0533, 0.0748, 0.1047, 0.0881]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0934, 0.0249],
        [0.1133, 0.0239],
        [0.1017, 0.0254],
        [0.0731, 0.0041],
        [0.1184, 0.0184],
        [0.0784, 0.0247],
        [0.0594, 0.0428],
        [0.0488, 0.0575],
        [0.1029, 0.1428],
        [0.0502, 0.0033],
        [0.0599, 0.0581],
        [0.0359, 0.0413],
        [0.0964, 0.0533],
        [0.0771, 0.0748],
        [0.0760, 0.1047],
        [0.0490, 0.0881]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0976],
        [0.1296],
        [0.1155],
        [0.0965],
        [0.0682],
        [0.0910],
        [0.0712],
        [0.0705],
        [0.0515],
        [0.0911],
        [0.0813],
        [0.0753],
        [0.0354],
        [0.0617],
        [0.0670],
        [0.0818]], device='cuda:0', dtype=torch.float16)/tensor([[0.0976, 0.1296, 0.1155, 0.0965, 0.0682, 0.0910, 0.0712, 0.0705, 0.0515,
         0.0911, 0.0813, 0.0753, 0.0354, 0.0617, 0.0670, 0.0818]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0348],
        [0.0338],
        [0.0294],
        [0.0235],
        [0.0779],
        [0.0407],
        [0.0235],
        [0.0717],
        [0.0726],
        [0.0424],
        [0.0764],
        [0.0547],
        [0.0273],
        [0.0528],
        [0.0736],
        [0.0705]], device='cuda:0', dtype=torch.float16)/tensor([[0.0348, 0.0338, 0.0294, 0.0235, 0.0779, 0.0407, 0.0235, 0.0717, 0.0726,
         0.0424, 0.0764, 0.0547, 0.0273, 0.0528, 0.0736, 0.0705]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0976, 0.0348],
        [0.1296, 0.0338],
        [0.1155, 0.0294],
        [0.0965, 0.0235],
        [0.0682, 0.0779],
        [0.0910, 0.0407],
        [0.0712, 0.0235],
        [0.0705, 0.0717],
        [0.0515, 0.0726],
        [0.0911, 0.0424],
        [0.0813, 0.0764],
        [0.0753, 0.0547],
        [0.0354, 0.0273],
        [0.0617, 0.0528],
        [0.0670, 0.0736],
        [0.0818, 0.0705]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1277],
        [0.1020],
        [0.1085],
        [0.2084],
        [0.1534],
        [0.0872],
        [0.0733],
        [0.0779],
        [0.0547],
        [0.1030],
        [0.0794],
        [0.0925],
        [0.0851],
        [0.0938],
        [0.0622],
        [0.0729]], device='cuda:0', dtype=torch.float16)/tensor([[0.1277, 0.1020, 0.1085, 0.2084, 0.1534, 0.0872, 0.0733, 0.0779, 0.0547,
         0.1030, 0.0794, 0.0925, 0.0851, 0.0938, 0.0622, 0.0729]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0441],
        [0.0277],
        [0.0643],
        [0.0503],
        [0.1476],
        [0.0914],
        [0.0303],
        [0.0215],
        [0.0131],
        [0.0875],
        [0.0268],
        [0.0220],
        [0.0927],
        [0.0314],
        [0.0837],
        [0.0534]], device='cuda:0', dtype=torch.float16)/tensor([[0.0441, 0.0277, 0.0643, 0.0503, 0.1476, 0.0914, 0.0303, 0.0215, 0.0131,
         0.0875, 0.0268, 0.0220, 0.0927, 0.0314, 0.0837, 0.0534]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1277, 0.0441],
        [0.1020, 0.0277],
        [0.1085, 0.0643],
        [0.2084, 0.0503],
        [0.1534, 0.1476],
        [0.0872, 0.0914],
        [0.0733, 0.0303],
        [0.0779, 0.0215],
        [0.0547, 0.0131],
        [0.1030, 0.0875],
        [0.0794, 0.0268],
        [0.0925, 0.0220],
        [0.0851, 0.0927],
        [0.0938, 0.0314],
        [0.0622, 0.0837],
        [0.0729, 0.0534]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0723],
        [0.0881],
        [0.0942],
        [0.1381],
        [0.0422],
        [0.0478],
        [0.0543],
        [0.1522],
        [0.0413],
        [0.1322],
        [0.0685],
        [0.0561],
        [0.2113],
        [0.0892],
        [0.0422],
        [0.0845]], device='cuda:0', dtype=torch.float16)/tensor([[0.0723, 0.0881, 0.0942, 0.1381, 0.0422, 0.0478, 0.0543, 0.1522, 0.0413,
         0.1322, 0.0685, 0.0561, 0.2113, 0.0892, 0.0422, 0.0845]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0244],
        [0.0692],
        [0.0274],
        [0.1528],
        [0.0966],
        [0.0558],
        [0.0105],
        [0.0670],
        [0.0297],
        [0.0157],
        [0.0670],
        [0.0385],
        [0.0376],
        [0.0260],
        [0.0030],
        [0.0090]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0692, 0.0274, 0.1528, 0.0966, 0.0558, 0.0105, 0.0670, 0.0297,
         0.0157, 0.0670, 0.0385, 0.0376, 0.0260, 0.0030, 0.0090]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0723, 0.0244],
        [0.0881, 0.0692],
        [0.0942, 0.0274],
        [0.1381, 0.1528],
        [0.0422, 0.0966],
        [0.0478, 0.0558],
        [0.0543, 0.0105],
        [0.1522, 0.0670],
        [0.0413, 0.0297],
        [0.1322, 0.0157],
        [0.0685, 0.0670],
        [0.0561, 0.0385],
        [0.2113, 0.0376],
        [0.0892, 0.0260],
        [0.0422, 0.0030],
        [0.0845, 0.0090]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0823],
        [0.0914],
        [0.0834],
        [0.0682],
        [0.0568],
        [0.0848],
        [0.0783],
        [0.1240],
        [0.0670],
        [0.1068],
        [0.0682],
        [0.0720],
        [0.0587],
        [0.0805],
        [0.0493],
        [0.0404]], device='cuda:0', dtype=torch.float16)/tensor([[0.0823, 0.0914, 0.0834, 0.0682, 0.0568, 0.0848, 0.0783, 0.1240, 0.0670,
         0.1068, 0.0682, 0.0720, 0.0587, 0.0805, 0.0493, 0.0404]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0612],
        [0.1052],
        [0.0168],
        [0.0656],
        [0.0144],
        [0.0237],
        [0.0881],
        [0.0135],
        [0.0654],
        [0.0279],
        [0.0798],
        [0.0703],
        [0.0620],
        [0.0688],
        [0.0190],
        [0.0767]], device='cuda:0', dtype=torch.float16)/tensor([[0.0612, 0.1052, 0.0168, 0.0656, 0.0144, 0.0237, 0.0881, 0.0135, 0.0654,
         0.0279, 0.0798, 0.0703, 0.0620, 0.0688, 0.0190, 0.0767]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0823, 0.0612],
        [0.0914, 0.1052],
        [0.0834, 0.0168],
        [0.0682, 0.0656],
        [0.0568, 0.0144],
        [0.0848, 0.0237],
        [0.0783, 0.0881],
        [0.1240, 0.0135],
        [0.0670, 0.0654],
        [0.1068, 0.0279],
        [0.0682, 0.0798],
        [0.0720, 0.0703],
        [0.0587, 0.0620],
        [0.0805, 0.0688],
        [0.0493, 0.0190],
        [0.0404, 0.0767]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1331],
        [0.1127],
        [0.0598],
        [0.0508],
        [0.0681],
        [0.0501],
        [0.0572],
        [0.1075],
        [0.0592],
        [0.0788],
        [0.0562],
        [0.0603],
        [0.0557],
        [0.0947],
        [0.1084],
        [0.1283]], device='cuda:0', dtype=torch.float16)/tensor([[0.1331, 0.1127, 0.0598, 0.0508, 0.0681, 0.0501, 0.0572, 0.1075, 0.0592,
         0.0788, 0.0562, 0.0603, 0.0557, 0.0947, 0.1084, 0.1283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0201],
        [0.0768],
        [0.0710],
        [0.0092],
        [0.0204],
        [0.0432],
        [0.0184],
        [0.0812],
        [0.0611],
        [0.0347],
        [0.0173],
        [0.0485],
        [0.0137],
        [0.0597],
        [0.1639],
        [0.0574]], device='cuda:0', dtype=torch.float16)/tensor([[0.0201, 0.0768, 0.0710, 0.0092, 0.0204, 0.0432, 0.0184, 0.0812, 0.0611,
         0.0347, 0.0173, 0.0485, 0.0137, 0.0597, 0.1639, 0.0574]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1331, 0.0201],
        [0.1127, 0.0768],
        [0.0598, 0.0710],
        [0.0508, 0.0092],
        [0.0681, 0.0204],
        [0.0501, 0.0432],
        [0.0572, 0.0184],
        [0.1075, 0.0812],
        [0.0592, 0.0611],
        [0.0788, 0.0347],
        [0.0562, 0.0173],
        [0.0603, 0.0485],
        [0.0557, 0.0137],
        [0.0947, 0.0597],
        [0.1084, 0.1639],
        [0.1283, 0.0574]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0673],
        [0.0653],
        [0.1260],
        [0.1603],
        [0.1277],
        [0.0966],
        [0.0947],
        [0.0548],
        [0.0820],
        [0.0695],
        [0.0628],
        [0.1151],
        [0.0303],
        [0.0294],
        [0.0594],
        [0.0773]], device='cuda:0', dtype=torch.float16)/tensor([[0.0673, 0.0653, 0.1260, 0.1603, 0.1277, 0.0966, 0.0947, 0.0548, 0.0820,
         0.0695, 0.0628, 0.1151, 0.0303, 0.0294, 0.0594, 0.0773]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0328],
        [0.0141],
        [0.0339],
        [0.0396],
        [0.0191],
        [0.0267],
        [0.0312],
        [0.0153],
        [0.0089],
        [0.0147],
        [0.0604],
        [0.0247],
        [0.0574],
        [0.0652],
        [0.0864],
        [0.0395]], device='cuda:0', dtype=torch.float16)/tensor([[0.0328, 0.0141, 0.0339, 0.0396, 0.0191, 0.0267, 0.0312, 0.0153, 0.0089,
         0.0147, 0.0604, 0.0247, 0.0574, 0.0652, 0.0864, 0.0395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0673, 0.0328],
        [0.0653, 0.0141],
        [0.1260, 0.0339],
        [0.1603, 0.0396],
        [0.1277, 0.0191],
        [0.0966, 0.0267],
        [0.0947, 0.0312],
        [0.0548, 0.0153],
        [0.0820, 0.0089],
        [0.0695, 0.0147],
        [0.0628, 0.0604],
        [0.1151, 0.0247],
        [0.0303, 0.0574],
        [0.0294, 0.0652],
        [0.0594, 0.0864],
        [0.0773, 0.0395]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1202],
        [0.0996],
        [0.0905],
        [0.0653],
        [0.1154],
        [0.0356],
        [0.0559],
        [0.0533]], device='cuda:0', dtype=torch.float16)/tensor([[0.1202, 0.0996, 0.0905, 0.0653, 0.1154, 0.0356, 0.0559, 0.0533]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0292],
        [0.0369],
        [0.0232],
        [0.0181],
        [0.0549],
        [0.0507],
        [0.0474],
        [0.0700]], device='cuda:0', dtype=torch.float16)/tensor([[0.0292, 0.0369, 0.0232, 0.0181, 0.0549, 0.0507, 0.0474, 0.0700]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1202, 0.0292],
        [0.0996, 0.0369],
        [0.0905, 0.0232],
        [0.0653, 0.0181],
        [0.1154, 0.0549],
        [0.0356, 0.0507],
        [0.0559, 0.0474],
        [0.0533, 0.0700]], device='cuda:0')
acc:  0.75
Time taken to execute the en SA task with prompt type auxiliary, variation 0 and batchsize 16: 0:03:34.754048
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b SA auxiliary 1 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 314.58it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1407],
        [0.0742],
        [0.0884],
        [0.0671],
        [0.0639],
        [0.1235],
        [0.0414],
        [0.0819],
        [0.0526],
        [0.0839],
        [0.1060],
        [0.0588],
        [0.0597],
        [0.1487],
        [0.0604],
        [0.0523]], device='cuda:0', dtype=torch.float16)/tensor([[0.1407, 0.0742, 0.0884, 0.0671, 0.0639, 0.1235, 0.0414, 0.0819, 0.0526,
         0.0839, 0.1060, 0.0588, 0.0597, 0.1487, 0.0604, 0.0523]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0526],
        [0.0064],
        [0.0668],
        [0.0607],
        [0.0808],
        [0.0540],
        [0.1163],
        [0.0092],
        [0.0592],
        [0.0432],
        [0.0323],
        [0.0265],
        [0.0726],
        [0.0573],
        [0.0486],
        [0.0544]], device='cuda:0', dtype=torch.float16)/tensor([[0.0526, 0.0064, 0.0668, 0.0607, 0.0808, 0.0540, 0.1163, 0.0092, 0.0592,
         0.0432, 0.0323, 0.0265, 0.0726, 0.0573, 0.0486, 0.0544]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1407, 0.0526],
        [0.0742, 0.0064],
        [0.0884, 0.0668],
        [0.0671, 0.0607],
        [0.0639, 0.0808],
        [0.1235, 0.0540],
        [0.0414, 0.1163],
        [0.0819, 0.0092],
        [0.0526, 0.0592],
        [0.0839, 0.0432],
        [0.1060, 0.0323],
        [0.0588, 0.0265],
        [0.0597, 0.0726],
        [0.1487, 0.0573],
        [0.0604, 0.0486],
        [0.0523, 0.0544]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0563],
        [0.0367],
        [0.0266],
        [0.0799],
        [0.0628],
        [0.0734],
        [0.0490],
        [0.0654],
        [0.0980],
        [0.0617],
        [0.0963],
        [0.0587],
        [0.1042],
        [0.0562],
        [0.0558],
        [0.0591]], device='cuda:0', dtype=torch.float16)/tensor([[0.0563, 0.0367, 0.0266, 0.0799, 0.0628, 0.0734, 0.0490, 0.0654, 0.0980,
         0.0617, 0.0963, 0.0587, 0.1042, 0.0562, 0.0558, 0.0591]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0652],
        [0.0235],
        [0.0529],
        [0.0389],
        [0.0669],
        [0.0202],
        [0.0789],
        [0.0376],
        [0.0272],
        [0.0948],
        [0.0424],
        [0.0367],
        [0.0204],
        [0.0668],
        [0.0800],
        [0.0665]], device='cuda:0', dtype=torch.float16)/tensor([[0.0652, 0.0235, 0.0529, 0.0389, 0.0669, 0.0202, 0.0789, 0.0376, 0.0272,
         0.0948, 0.0424, 0.0367, 0.0204, 0.0668, 0.0800, 0.0665]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0563, 0.0652],
        [0.0367, 0.0235],
        [0.0266, 0.0529],
        [0.0799, 0.0389],
        [0.0628, 0.0669],
        [0.0734, 0.0202],
        [0.0490, 0.0789],
        [0.0654, 0.0376],
        [0.0980, 0.0272],
        [0.0617, 0.0948],
        [0.0963, 0.0424],
        [0.0587, 0.0367],
        [0.1042, 0.0204],
        [0.0562, 0.0668],
        [0.0558, 0.0800],
        [0.0591, 0.0665]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0472],
        [0.0582],
        [0.0770],
        [0.0605],
        [0.0699],
        [0.1235],
        [0.1099],
        [0.1595],
        [0.0861],
        [0.0618],
        [0.0474],
        [0.0554],
        [0.0662],
        [0.1467],
        [0.0598],
        [0.0776]], device='cuda:0', dtype=torch.float16)/tensor([[0.0472, 0.0582, 0.0770, 0.0605, 0.0699, 0.1235, 0.1099, 0.1595, 0.0861,
         0.0618, 0.0474, 0.0554, 0.0662, 0.1467, 0.0598, 0.0776]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0924],
        [0.0713],
        [0.0264],
        [0.0302],
        [0.0941],
        [0.0427],
        [0.0218],
        [0.1633],
        [0.0828],
        [0.0558],
        [0.0489],
        [0.0800],
        [0.0863],
        [0.1503],
        [0.0812],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0924, 0.0713, 0.0264, 0.0302, 0.0941, 0.0427, 0.0218, 0.1633, 0.0828,
         0.0558, 0.0489, 0.0800, 0.0863, 0.1503, 0.0812, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0472, 0.0924],
        [0.0582, 0.0713],
        [0.0770, 0.0264],
        [0.0605, 0.0302],
        [0.0699, 0.0941],
        [0.1235, 0.0427],
        [0.1099, 0.0218],
        [0.1595, 0.1633],
        [0.0861, 0.0828],
        [0.0618, 0.0558],
        [0.0474, 0.0489],
        [0.0554, 0.0800],
        [0.0662, 0.0863],
        [0.1467, 0.1503],
        [0.0598, 0.0812],
        [0.0776, 0.0168]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0930],
        [0.0462],
        [0.0405],
        [0.1350],
        [0.0688],
        [0.0667],
        [0.0544],
        [0.0992],
        [0.1227],
        [0.0648],
        [0.0568],
        [0.0757],
        [0.0909],
        [0.0840],
        [0.0631],
        [0.0867]], device='cuda:0', dtype=torch.float16)/tensor([[0.0930, 0.0462, 0.0405, 0.1350, 0.0688, 0.0667, 0.0544, 0.0992, 0.1227,
         0.0648, 0.0568, 0.0757, 0.0909, 0.0840, 0.0631, 0.0867]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0314],
        [0.0721],
        [0.0728],
        [0.0222],
        [0.1170],
        [0.0823],
        [0.0307],
        [0.0417],
        [0.0366],
        [0.1136],
        [0.0730],
        [0.0449],
        [0.0343],
        [0.0162],
        [0.0357],
        [0.0342]], device='cuda:0', dtype=torch.float16)/tensor([[0.0314, 0.0721, 0.0728, 0.0222, 0.1170, 0.0823, 0.0307, 0.0417, 0.0366,
         0.1136, 0.0730, 0.0449, 0.0343, 0.0162, 0.0357, 0.0342]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0930, 0.0314],
        [0.0462, 0.0721],
        [0.0405, 0.0728],
        [0.1350, 0.0222],
        [0.0688, 0.1170],
        [0.0667, 0.0823],
        [0.0544, 0.0307],
        [0.0992, 0.0417],
        [0.1227, 0.0366],
        [0.0648, 0.1136],
        [0.0568, 0.0730],
        [0.0757, 0.0449],
        [0.0909, 0.0343],
        [0.0840, 0.0162],
        [0.0631, 0.0357],
        [0.0867, 0.0342]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0513],
        [0.0939],
        [0.0933],
        [0.0745],
        [0.0946],
        [0.0673],
        [0.1196],
        [0.0661],
        [0.0792],
        [0.0392],
        [0.0921],
        [0.1192],
        [0.0569],
        [0.0710],
        [0.0608],
        [0.0911]], device='cuda:0', dtype=torch.float16)/tensor([[0.0513, 0.0939, 0.0933, 0.0745, 0.0946, 0.0673, 0.1196, 0.0661, 0.0792,
         0.0392, 0.0921, 0.1192, 0.0569, 0.0710, 0.0608, 0.0911]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0753],
        [0.0385],
        [0.0296],
        [0.0986],
        [0.0251],
        [0.0524],
        [0.0660],
        [0.0458],
        [0.0349],
        [0.0511],
        [0.0757],
        [0.0892],
        [0.0197],
        [0.0843],
        [0.0060],
        [0.0548]], device='cuda:0', dtype=torch.float16)/tensor([[0.0753, 0.0385, 0.0296, 0.0986, 0.0251, 0.0524, 0.0660, 0.0458, 0.0349,
         0.0511, 0.0757, 0.0892, 0.0197, 0.0843, 0.0060, 0.0548]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0513, 0.0753],
        [0.0939, 0.0385],
        [0.0933, 0.0296],
        [0.0745, 0.0986],
        [0.0946, 0.0251],
        [0.0673, 0.0524],
        [0.1196, 0.0660],
        [0.0661, 0.0458],
        [0.0792, 0.0349],
        [0.0392, 0.0511],
        [0.0921, 0.0757],
        [0.1192, 0.0892],
        [0.0569, 0.0197],
        [0.0710, 0.0843],
        [0.0608, 0.0060],
        [0.0911, 0.0548]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0774],
        [0.1471],
        [0.1215],
        [0.0561],
        [0.0348],
        [0.0727],
        [0.0617],
        [0.2107],
        [0.0333],
        [0.1194],
        [0.0844],
        [0.0618],
        [0.0488],
        [0.0335],
        [0.0465],
        [0.0605]], device='cuda:0', dtype=torch.float16)/tensor([[0.0774, 0.1471, 0.1215, 0.0561, 0.0348, 0.0727, 0.0617, 0.2107, 0.0333,
         0.1194, 0.0844, 0.0618, 0.0488, 0.0335, 0.0465, 0.0605]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0863],
        [0.1654],
        [0.0592],
        [0.0911],
        [0.0351],
        [0.0780],
        [0.0466],
        [0.0920],
        [0.0525],
        [0.0300],
        [0.0667],
        [0.0387],
        [0.1265],
        [0.0294],
        [0.0720],
        [0.0426]], device='cuda:0', dtype=torch.float16)/tensor([[0.0863, 0.1654, 0.0592, 0.0911, 0.0351, 0.0780, 0.0466, 0.0920, 0.0525,
         0.0300, 0.0667, 0.0387, 0.1265, 0.0294, 0.0720, 0.0426]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0774, 0.0863],
        [0.1471, 0.1654],
        [0.1215, 0.0592],
        [0.0561, 0.0911],
        [0.0348, 0.0351],
        [0.0727, 0.0780],
        [0.0617, 0.0466],
        [0.2107, 0.0920],
        [0.0333, 0.0525],
        [0.1194, 0.0300],
        [0.0844, 0.0667],
        [0.0618, 0.0387],
        [0.0488, 0.1265],
        [0.0335, 0.0294],
        [0.0465, 0.0720],
        [0.0605, 0.0426]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0487],
        [0.0536],
        [0.0515],
        [0.0997],
        [0.0302],
        [0.0671],
        [0.0641],
        [0.0730],
        [0.0623],
        [0.0464],
        [0.0326],
        [0.0823],
        [0.0915],
        [0.0551],
        [0.0432],
        [0.1022]], device='cuda:0', dtype=torch.float16)/tensor([[0.0487, 0.0536, 0.0515, 0.0997, 0.0302, 0.0671, 0.0641, 0.0730, 0.0623,
         0.0464, 0.0326, 0.0823, 0.0915, 0.0551, 0.0432, 0.1022]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0602],
        [0.0566],
        [0.0321],
        [0.0384],
        [0.0030],
        [0.0459],
        [0.0759],
        [0.0407],
        [0.1202],
        [0.0191],
        [0.0205],
        [0.0199],
        [0.0654],
        [0.0735],
        [0.0426]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0602, 0.0566, 0.0321, 0.0384, 0.0030, 0.0459, 0.0759, 0.0407,
         0.1202, 0.0191, 0.0205, 0.0199, 0.0654, 0.0735, 0.0426]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0487, 0.0080],
        [0.0536, 0.0602],
        [0.0515, 0.0566],
        [0.0997, 0.0321],
        [0.0302, 0.0384],
        [0.0671, 0.0030],
        [0.0641, 0.0459],
        [0.0730, 0.0759],
        [0.0623, 0.0407],
        [0.0464, 0.1202],
        [0.0326, 0.0191],
        [0.0823, 0.0205],
        [0.0915, 0.0199],
        [0.0551, 0.0654],
        [0.0432, 0.0735],
        [0.1022, 0.0426]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0816],
        [0.0615],
        [0.0603],
        [0.0795],
        [0.0973],
        [0.0757],
        [0.0562],
        [0.0529],
        [0.0729],
        [0.1302],
        [0.0403],
        [0.0459],
        [0.0728],
        [0.0660],
        [0.0695],
        [0.0602]], device='cuda:0', dtype=torch.float16)/tensor([[0.0816, 0.0615, 0.0603, 0.0795, 0.0973, 0.0757, 0.0562, 0.0529, 0.0729,
         0.1302, 0.0403, 0.0459, 0.0728, 0.0660, 0.0695, 0.0602]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0261],
        [0.0429],
        [0.0594],
        [0.0154],
        [0.0740],
        [0.0349],
        [0.0637],
        [0.0193],
        [0.0406],
        [0.0230],
        [0.0713],
        [0.0544],
        [0.1414],
        [0.1006],
        [0.1173],
        [0.0726]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0429, 0.0594, 0.0154, 0.0740, 0.0349, 0.0637, 0.0193, 0.0406,
         0.0230, 0.0713, 0.0544, 0.1414, 0.1006, 0.1173, 0.0726]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0816, 0.0261],
        [0.0615, 0.0429],
        [0.0603, 0.0594],
        [0.0795, 0.0154],
        [0.0973, 0.0740],
        [0.0757, 0.0349],
        [0.0562, 0.0637],
        [0.0529, 0.0193],
        [0.0729, 0.0406],
        [0.1302, 0.0230],
        [0.0403, 0.0713],
        [0.0459, 0.0544],
        [0.0728, 0.1414],
        [0.0660, 0.1006],
        [0.0695, 0.1173],
        [0.0602, 0.0726]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0804],
        [0.0937],
        [0.0555],
        [0.0417],
        [0.0592],
        [0.0979],
        [0.0610],
        [0.0789],
        [0.0636],
        [0.0833],
        [0.0300],
        [0.0504],
        [0.0417],
        [0.0836],
        [0.0535],
        [0.0819]], device='cuda:0', dtype=torch.float16)/tensor([[0.0804, 0.0937, 0.0555, 0.0417, 0.0592, 0.0979, 0.0610, 0.0789, 0.0636,
         0.0833, 0.0300, 0.0504, 0.0417, 0.0836, 0.0535, 0.0819]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0289],
        [0.0327],
        [0.0660],
        [0.0986],
        [0.0518],
        [0.0292],
        [0.0432],
        [0.0400],
        [0.0773],
        [0.0826],
        [0.0129],
        [0.1050],
        [0.0569],
        [0.0398],
        [0.0803],
        [0.0207]], device='cuda:0', dtype=torch.float16)/tensor([[0.0289, 0.0327, 0.0660, 0.0986, 0.0518, 0.0292, 0.0432, 0.0400, 0.0773,
         0.0826, 0.0129, 0.1050, 0.0569, 0.0398, 0.0803, 0.0207]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0804, 0.0289],
        [0.0937, 0.0327],
        [0.0555, 0.0660],
        [0.0417, 0.0986],
        [0.0592, 0.0518],
        [0.0979, 0.0292],
        [0.0610, 0.0432],
        [0.0789, 0.0400],
        [0.0636, 0.0773],
        [0.0833, 0.0826],
        [0.0300, 0.0129],
        [0.0504, 0.1050],
        [0.0417, 0.0569],
        [0.0836, 0.0398],
        [0.0535, 0.0803],
        [0.0819, 0.0207]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0426],
        [0.1002],
        [0.0532],
        [0.1077],
        [0.0851],
        [0.1118],
        [0.0640],
        [0.0533],
        [0.1377],
        [0.0673],
        [0.0504],
        [0.0683],
        [0.0991],
        [0.0412],
        [0.0950],
        [0.0549]], device='cuda:0', dtype=torch.float16)/tensor([[0.0426, 0.1002, 0.0532, 0.1077, 0.0851, 0.1118, 0.0640, 0.0533, 0.1377,
         0.0673, 0.0504, 0.0683, 0.0991, 0.0412, 0.0950, 0.0549]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0530],
        [0.0524],
        [0.0355],
        [0.0279],
        [0.0512],
        [0.1541],
        [0.0861],
        [0.0618],
        [0.0298],
        [0.0496],
        [0.0318],
        [0.0236],
        [0.0359],
        [0.0439],
        [0.0907],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0530, 0.0524, 0.0355, 0.0279, 0.0512, 0.1541, 0.0861, 0.0618, 0.0298,
         0.0496, 0.0318, 0.0236, 0.0359, 0.0439, 0.0907, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0426, 0.0530],
        [0.1002, 0.0524],
        [0.0532, 0.0355],
        [0.1077, 0.0279],
        [0.0851, 0.0512],
        [0.1118, 0.1541],
        [0.0640, 0.0861],
        [0.0533, 0.0618],
        [0.1377, 0.0298],
        [0.0673, 0.0496],
        [0.0504, 0.0318],
        [0.0683, 0.0236],
        [0.0991, 0.0359],
        [0.0412, 0.0439],
        [0.0950, 0.0907],
        [0.0549, 0.0303]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0577],
        [0.1199],
        [0.1697],
        [0.0717],
        [0.0501],
        [0.0812],
        [0.0500],
        [0.1344],
        [0.0381],
        [0.0887],
        [0.0396],
        [0.0870],
        [0.4612],
        [0.0615],
        [0.1168],
        [0.0847]], device='cuda:0', dtype=torch.float16)/tensor([[0.0577, 0.1199, 0.1697, 0.0717, 0.0501, 0.0812, 0.0500, 0.1344, 0.0381,
         0.0887, 0.0396, 0.0870, 0.4612, 0.0615, 0.1168, 0.0847]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0801],
        [0.0134],
        [0.0542],
        [0.0572],
        [0.0207],
        [0.0143],
        [0.0688],
        [0.0324],
        [0.1002],
        [0.0297],
        [0.0971],
        [0.0683],
        [0.0659],
        [0.0809],
        [0.0518],
        [0.0443]], device='cuda:0', dtype=torch.float16)/tensor([[0.0801, 0.0134, 0.0542, 0.0572, 0.0207, 0.0143, 0.0688, 0.0324, 0.1002,
         0.0297, 0.0971, 0.0683, 0.0659, 0.0809, 0.0518, 0.0443]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0577, 0.0801],
        [0.1199, 0.0134],
        [0.1697, 0.0542],
        [0.0717, 0.0572],
        [0.0501, 0.0207],
        [0.0812, 0.0143],
        [0.0500, 0.0688],
        [0.1344, 0.0324],
        [0.0381, 0.1002],
        [0.0887, 0.0297],
        [0.0396, 0.0971],
        [0.0870, 0.0683],
        [0.4612, 0.0659],
        [0.0615, 0.0809],
        [0.1168, 0.0518],
        [0.0847, 0.0443]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0850],
        [0.0709],
        [0.1710],
        [0.0578],
        [0.0391],
        [0.0978],
        [0.0735],
        [0.0786],
        [0.0458],
        [0.0586],
        [0.0588],
        [0.1527],
        [0.0967],
        [0.0534],
        [0.0890],
        [0.0851]], device='cuda:0', dtype=torch.float16)/tensor([[0.0850, 0.0709, 0.1710, 0.0578, 0.0391, 0.0978, 0.0735, 0.0786, 0.0458,
         0.0586, 0.0588, 0.1527, 0.0967, 0.0534, 0.0890, 0.0851]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0481],
        [0.0374],
        [0.0568],
        [0.0681],
        [0.0675],
        [0.0444],
        [0.0297],
        [0.0161],
        [0.0299],
        [0.0546],
        [0.0124],
        [0.0598],
        [0.0461],
        [0.0880],
        [0.0182],
        [0.0533]], device='cuda:0', dtype=torch.float16)/tensor([[0.0481, 0.0374, 0.0568, 0.0681, 0.0675, 0.0444, 0.0297, 0.0161, 0.0299,
         0.0546, 0.0124, 0.0598, 0.0461, 0.0880, 0.0182, 0.0533]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0850, 0.0481],
        [0.0709, 0.0374],
        [0.1710, 0.0568],
        [0.0578, 0.0681],
        [0.0391, 0.0675],
        [0.0978, 0.0444],
        [0.0735, 0.0297],
        [0.0786, 0.0161],
        [0.0458, 0.0299],
        [0.0586, 0.0546],
        [0.0588, 0.0124],
        [0.1527, 0.0598],
        [0.0967, 0.0461],
        [0.0534, 0.0880],
        [0.0890, 0.0182],
        [0.0851, 0.0533]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0569],
        [0.0506],
        [0.0647],
        [0.0593],
        [0.0677],
        [0.0599],
        [0.0565],
        [0.0695]], device='cuda:0', dtype=torch.float16)/tensor([[0.0569, 0.0506, 0.0647, 0.0593, 0.0677, 0.0599, 0.0565, 0.0695]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0961],
        [0.0394],
        [0.0354],
        [0.0333],
        [0.0174],
        [0.0558],
        [0.0413],
        [0.0950]], device='cuda:0', dtype=torch.float16)/tensor([[0.0961, 0.0394, 0.0354, 0.0333, 0.0174, 0.0558, 0.0413, 0.0950]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0569, 0.0961],
        [0.0506, 0.0394],
        [0.0647, 0.0354],
        [0.0593, 0.0333],
        [0.0677, 0.0174],
        [0.0599, 0.0558],
        [0.0565, 0.0413],
        [0.0695, 0.0950]], device='cuda:0')
acc:  0.855
Time taken to execute the en SA task with prompt type auxiliary, variation 1 and batchsize 16: 0:03:35.421577
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b SA auxiliary 2 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 312.64it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1096],
        [0.1064],
        [0.1630],
        [0.1288],
        [0.0795],
        [0.1385],
        [0.3845],
        [0.1260],
        [0.1174],
        [0.1378],
        [0.1267],
        [0.0884],
        [0.1744],
        [0.1471],
        [0.0655],
        [0.1058]], device='cuda:0', dtype=torch.float16)/tensor([[0.1096, 0.1064, 0.1630, 0.1288, 0.0795, 0.1385, 0.3845, 0.1260, 0.1174,
         0.1378, 0.1267, 0.0884, 0.1744, 0.1471, 0.0655, 0.1058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0314],
        [0.0454],
        [0.0124],
        [0.0331],
        [0.0302],
        [0.0240],
        [0.0435],
        [0.0334],
        [0.0463],
        [0.0293],
        [0.0087],
        [0.0213],
        [0.0296],
        [0.0399],
        [0.0269],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0314, 0.0454, 0.0124, 0.0331, 0.0302, 0.0240, 0.0435, 0.0334, 0.0463,
         0.0293, 0.0087, 0.0213, 0.0296, 0.0399, 0.0269, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1096, 0.0314],
        [0.1064, 0.0454],
        [0.1630, 0.0124],
        [0.1288, 0.0331],
        [0.0795, 0.0302],
        [0.1385, 0.0240],
        [0.3845, 0.0435],
        [0.1260, 0.0334],
        [0.1174, 0.0463],
        [0.1378, 0.0293],
        [0.1267, 0.0087],
        [0.0884, 0.0213],
        [0.1744, 0.0296],
        [0.1471, 0.0399],
        [0.0655, 0.0269],
        [0.1058, 0.0217]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1043],
        [0.1241],
        [0.1431],
        [0.1497],
        [0.1467],
        [0.1580],
        [0.0667],
        [0.1508],
        [0.1508],
        [0.1442],
        [0.1549],
        [0.1415],
        [0.1841],
        [0.1832],
        [0.1230],
        [0.1191]], device='cuda:0', dtype=torch.float16)/tensor([[0.1043, 0.1241, 0.1431, 0.1497, 0.1467, 0.1580, 0.0667, 0.1508, 0.1508,
         0.1442, 0.1549, 0.1415, 0.1841, 0.1832, 0.1230, 0.1191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0308],
        [0.0582],
        [0.0152],
        [0.0490],
        [0.0245],
        [0.0175],
        [0.0694],
        [0.0187],
        [0.0179],
        [0.0748],
        [0.0253],
        [0.0489],
        [0.0265],
        [0.0173],
        [0.0517],
        [0.0537]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0582, 0.0152, 0.0490, 0.0245, 0.0175, 0.0694, 0.0187, 0.0179,
         0.0748, 0.0253, 0.0489, 0.0265, 0.0173, 0.0517, 0.0537]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1043, 0.0308],
        [0.1241, 0.0582],
        [0.1431, 0.0152],
        [0.1497, 0.0490],
        [0.1467, 0.0245],
        [0.1580, 0.0175],
        [0.0667, 0.0694],
        [0.1508, 0.0187],
        [0.1508, 0.0179],
        [0.1442, 0.0748],
        [0.1549, 0.0253],
        [0.1415, 0.0489],
        [0.1841, 0.0265],
        [0.1832, 0.0173],
        [0.1230, 0.0517],
        [0.1191, 0.0537]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1212],
        [0.0964],
        [0.1008],
        [0.0613],
        [0.1705],
        [0.0708],
        [0.1042],
        [0.1550],
        [0.1393],
        [0.1926],
        [0.1243],
        [0.1130],
        [0.1420],
        [0.1625],
        [0.1155],
        [0.1025]], device='cuda:0', dtype=torch.float16)/tensor([[0.1212, 0.0964, 0.1008, 0.0613, 0.1705, 0.0708, 0.1042, 0.1550, 0.1393,
         0.1926, 0.1243, 0.1130, 0.1420, 0.1625, 0.1155, 0.1025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0199],
        [0.0470],
        [0.0141],
        [0.0184],
        [0.0217],
        [0.0596],
        [0.0627],
        [0.0213],
        [0.0153],
        [0.0420],
        [0.0247],
        [0.0211],
        [0.0260],
        [0.0371],
        [0.0493],
        [0.0622]], device='cuda:0', dtype=torch.float16)/tensor([[0.0199, 0.0470, 0.0141, 0.0184, 0.0217, 0.0596, 0.0627, 0.0213, 0.0153,
         0.0420, 0.0247, 0.0211, 0.0260, 0.0371, 0.0493, 0.0622]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1212, 0.0199],
        [0.0964, 0.0470],
        [0.1008, 0.0141],
        [0.0613, 0.0184],
        [0.1705, 0.0217],
        [0.0708, 0.0596],
        [0.1042, 0.0627],
        [0.1550, 0.0213],
        [0.1393, 0.0153],
        [0.1926, 0.0420],
        [0.1243, 0.0247],
        [0.1130, 0.0211],
        [0.1420, 0.0260],
        [0.1625, 0.0371],
        [0.1155, 0.0493],
        [0.1025, 0.0622]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1051],
        [0.1525],
        [0.2690],
        [0.1140],
        [0.1141],
        [0.1576],
        [0.1348],
        [0.1360],
        [0.1504],
        [0.1675],
        [0.1659],
        [0.1073],
        [0.1587],
        [0.1396],
        [0.1119],
        [0.1915]], device='cuda:0', dtype=torch.float16)/tensor([[0.1051, 0.1525, 0.2690, 0.1140, 0.1141, 0.1576, 0.1348, 0.1360, 0.1504,
         0.1675, 0.1659, 0.1073, 0.1587, 0.1396, 0.1119, 0.1915]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0090],
        [0.0253],
        [0.0269],
        [0.0490],
        [0.0178],
        [0.0257],
        [0.0532],
        [0.0178],
        [0.0627],
        [0.0289],
        [0.0364],
        [0.0374],
        [0.0434],
        [0.0394],
        [0.0141],
        [0.0294]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0253, 0.0269, 0.0490, 0.0178, 0.0257, 0.0532, 0.0178, 0.0627,
         0.0289, 0.0364, 0.0374, 0.0434, 0.0394, 0.0141, 0.0294]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1051, 0.0090],
        [0.1525, 0.0253],
        [0.2690, 0.0269],
        [0.1140, 0.0490],
        [0.1141, 0.0178],
        [0.1576, 0.0257],
        [0.1348, 0.0532],
        [0.1360, 0.0178],
        [0.1504, 0.0627],
        [0.1675, 0.0289],
        [0.1659, 0.0364],
        [0.1073, 0.0374],
        [0.1587, 0.0434],
        [0.1396, 0.0394],
        [0.1119, 0.0141],
        [0.1915, 0.0294]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1324],
        [0.1254],
        [0.1483],
        [0.1431],
        [0.1271],
        [0.0865],
        [0.1029],
        [0.0914],
        [0.1711],
        [0.1694],
        [0.1302],
        [0.1427],
        [0.1635],
        [0.1248],
        [0.1261],
        [0.1024]], device='cuda:0', dtype=torch.float16)/tensor([[0.1324, 0.1254, 0.1483, 0.1431, 0.1271, 0.0865, 0.1029, 0.0914, 0.1711,
         0.1694, 0.1302, 0.1427, 0.1635, 0.1248, 0.1261, 0.1024]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0544],
        [0.0468],
        [0.0679],
        [0.0334],
        [0.0526],
        [0.0326],
        [0.0406],
        [0.0428],
        [0.0138],
        [0.0501],
        [0.0551],
        [0.0358],
        [0.0437],
        [0.0130],
        [0.0324],
        [0.0715]], device='cuda:0', dtype=torch.float16)/tensor([[0.0544, 0.0468, 0.0679, 0.0334, 0.0526, 0.0326, 0.0406, 0.0428, 0.0138,
         0.0501, 0.0551, 0.0358, 0.0437, 0.0130, 0.0324, 0.0715]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1324, 0.0544],
        [0.1254, 0.0468],
        [0.1483, 0.0679],
        [0.1431, 0.0334],
        [0.1271, 0.0526],
        [0.0865, 0.0326],
        [0.1029, 0.0406],
        [0.0914, 0.0428],
        [0.1711, 0.0138],
        [0.1694, 0.0501],
        [0.1302, 0.0551],
        [0.1427, 0.0358],
        [0.1635, 0.0437],
        [0.1248, 0.0130],
        [0.1261, 0.0324],
        [0.1024, 0.0715]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1553],
        [0.0948],
        [0.1656],
        [0.1122],
        [0.1418],
        [0.1257],
        [0.1088],
        [0.1569],
        [0.1586],
        [0.1571],
        [0.1053],
        [0.1453],
        [0.1761],
        [0.1602],
        [0.2313],
        [0.1074]], device='cuda:0', dtype=torch.float16)/tensor([[0.1553, 0.0948, 0.1656, 0.1122, 0.1418, 0.1257, 0.1088, 0.1569, 0.1586,
         0.1571, 0.1053, 0.1453, 0.1761, 0.1602, 0.2313, 0.1074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0508],
        [0.0360],
        [0.0356],
        [0.0670],
        [0.0190],
        [0.0294],
        [0.0239],
        [0.0183],
        [0.0249],
        [0.0255],
        [0.0460],
        [0.0193],
        [0.0409],
        [0.0111],
        [0.0233],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0508, 0.0360, 0.0356, 0.0670, 0.0190, 0.0294, 0.0239, 0.0183, 0.0249,
         0.0255, 0.0460, 0.0193, 0.0409, 0.0111, 0.0233, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1553, 0.0508],
        [0.0948, 0.0360],
        [0.1656, 0.0356],
        [0.1122, 0.0670],
        [0.1418, 0.0190],
        [0.1257, 0.0294],
        [0.1088, 0.0239],
        [0.1569, 0.0183],
        [0.1586, 0.0249],
        [0.1571, 0.0255],
        [0.1053, 0.0460],
        [0.1453, 0.0193],
        [0.1761, 0.0409],
        [0.1602, 0.0111],
        [0.2313, 0.0233],
        [0.1074, 0.0155]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1881],
        [0.1824],
        [0.1389],
        [0.0838],
        [0.2379],
        [0.1753],
        [0.1693],
        [0.1183],
        [0.1191],
        [0.1443],
        [0.1655],
        [0.2301],
        [0.2363],
        [0.0703],
        [0.1160],
        [0.1890]], device='cuda:0', dtype=torch.float16)/tensor([[0.1881, 0.1824, 0.1389, 0.0838, 0.2379, 0.1753, 0.1693, 0.1183, 0.1191,
         0.1443, 0.1655, 0.2301, 0.2363, 0.0703, 0.1160, 0.1890]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0219],
        [0.0447],
        [0.0259],
        [0.0119],
        [0.0848],
        [0.0208],
        [0.0220],
        [0.0262],
        [0.0367],
        [0.0377],
        [0.0361],
        [0.0186],
        [0.0786],
        [0.0491],
        [0.0145],
        [0.0268]], device='cuda:0', dtype=torch.float16)/tensor([[0.0219, 0.0447, 0.0259, 0.0119, 0.0848, 0.0208, 0.0220, 0.0262, 0.0367,
         0.0377, 0.0361, 0.0186, 0.0786, 0.0491, 0.0145, 0.0268]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1881, 0.0219],
        [0.1824, 0.0447],
        [0.1389, 0.0259],
        [0.0838, 0.0119],
        [0.2379, 0.0848],
        [0.1753, 0.0208],
        [0.1693, 0.0220],
        [0.1183, 0.0262],
        [0.1191, 0.0367],
        [0.1443, 0.0377],
        [0.1655, 0.0361],
        [0.2301, 0.0186],
        [0.2363, 0.0786],
        [0.0703, 0.0491],
        [0.1160, 0.0145],
        [0.1890, 0.0268]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1171],
        [0.2036],
        [0.1205],
        [0.1796],
        [0.1514],
        [0.0858],
        [0.1652],
        [0.1260],
        [0.1425],
        [0.1227],
        [0.1100],
        [0.0769],
        [0.1239],
        [0.1532],
        [0.1958],
        [0.1461]], device='cuda:0', dtype=torch.float16)/tensor([[0.1171, 0.2036, 0.1205, 0.1796, 0.1514, 0.0858, 0.1652, 0.1260, 0.1425,
         0.1227, 0.1100, 0.0769, 0.1239, 0.1532, 0.1958, 0.1461]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0431],
        [0.0340],
        [0.0170],
        [0.0335],
        [0.0544],
        [0.0550],
        [0.0190],
        [0.0409],
        [0.0428],
        [0.0462],
        [0.0310],
        [0.0463],
        [0.0096],
        [0.0277],
        [0.0230],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0431, 0.0340, 0.0170, 0.0335, 0.0544, 0.0550, 0.0190, 0.0409, 0.0428,
         0.0462, 0.0310, 0.0463, 0.0096, 0.0277, 0.0230, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1171, 0.0431],
        [0.2036, 0.0340],
        [0.1205, 0.0170],
        [0.1796, 0.0335],
        [0.1514, 0.0544],
        [0.0858, 0.0550],
        [0.1652, 0.0190],
        [0.1260, 0.0409],
        [0.1425, 0.0428],
        [0.1227, 0.0462],
        [0.1100, 0.0310],
        [0.0769, 0.0463],
        [0.1239, 0.0096],
        [0.1532, 0.0277],
        [0.1958, 0.0230],
        [0.1461, 0.0169]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1401],
        [0.1440],
        [0.1186],
        [0.1285],
        [0.1355],
        [0.1144],
        [0.1016],
        [0.1584],
        [0.1107],
        [0.0867],
        [0.1174],
        [0.1538],
        [0.0717],
        [0.2279],
        [0.1354],
        [0.1305]], device='cuda:0', dtype=torch.float16)/tensor([[0.1401, 0.1440, 0.1186, 0.1285, 0.1355, 0.1144, 0.1016, 0.1584, 0.1107,
         0.0867, 0.1174, 0.1538, 0.0717, 0.2279, 0.1354, 0.1305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0511],
        [0.0192],
        [0.0731],
        [0.0220],
        [0.0491],
        [0.0267],
        [0.0195],
        [0.0506],
        [0.0377],
        [0.0413],
        [0.0222],
        [0.0265],
        [0.0554],
        [0.0746],
        [0.0573],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0511, 0.0192, 0.0731, 0.0220, 0.0491, 0.0267, 0.0195, 0.0506, 0.0377,
         0.0413, 0.0222, 0.0265, 0.0554, 0.0746, 0.0573, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1401, 0.0511],
        [0.1440, 0.0192],
        [0.1186, 0.0731],
        [0.1285, 0.0220],
        [0.1355, 0.0491],
        [0.1144, 0.0267],
        [0.1016, 0.0195],
        [0.1584, 0.0506],
        [0.1107, 0.0377],
        [0.0867, 0.0413],
        [0.1174, 0.0222],
        [0.1538, 0.0265],
        [0.0717, 0.0554],
        [0.2279, 0.0746],
        [0.1354, 0.0573],
        [0.1305, 0.0141]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1071],
        [0.1359],
        [0.1071],
        [0.1694],
        [0.0817],
        [0.0851],
        [0.1251],
        [0.1726],
        [0.1426],
        [0.1718],
        [0.0971],
        [0.1779],
        [0.1935],
        [0.1094],
        [0.1483],
        [0.1709]], device='cuda:0', dtype=torch.float16)/tensor([[0.1071, 0.1359, 0.1071, 0.1694, 0.0817, 0.0851, 0.1251, 0.1726, 0.1426,
         0.1718, 0.0971, 0.1779, 0.1935, 0.1094, 0.1483, 0.1709]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0526],
        [0.0511],
        [0.0324],
        [0.0238],
        [0.0540],
        [0.0418],
        [0.0724],
        [0.0379],
        [0.0202],
        [0.0287],
        [0.0721],
        [0.0461],
        [0.0254],
        [0.0452],
        [0.0119],
        [0.0158]], device='cuda:0', dtype=torch.float16)/tensor([[0.0526, 0.0511, 0.0324, 0.0238, 0.0540, 0.0418, 0.0724, 0.0379, 0.0202,
         0.0287, 0.0721, 0.0461, 0.0254, 0.0452, 0.0119, 0.0158]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1071, 0.0526],
        [0.1359, 0.0511],
        [0.1071, 0.0324],
        [0.1694, 0.0238],
        [0.0817, 0.0540],
        [0.0851, 0.0418],
        [0.1251, 0.0724],
        [0.1726, 0.0379],
        [0.1426, 0.0202],
        [0.1718, 0.0287],
        [0.0971, 0.0721],
        [0.1779, 0.0461],
        [0.1935, 0.0254],
        [0.1094, 0.0452],
        [0.1483, 0.0119],
        [0.1709, 0.0158]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0798],
        [0.1394],
        [0.0560],
        [0.1383],
        [0.1554],
        [0.1311],
        [0.1449],
        [0.1071],
        [0.1167],
        [0.1721],
        [0.1465],
        [0.0995],
        [0.1326],
        [0.1736],
        [0.2087],
        [0.1366]], device='cuda:0', dtype=torch.float16)/tensor([[0.0798, 0.1394, 0.0560, 0.1383, 0.1554, 0.1311, 0.1449, 0.1071, 0.1167,
         0.1721, 0.1465, 0.0995, 0.1326, 0.1736, 0.2087, 0.1366]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0561],
        [0.0149],
        [0.0182],
        [0.0170],
        [0.0186],
        [0.0450],
        [0.0283],
        [0.0108],
        [0.0655],
        [0.0199],
        [0.0286],
        [0.0399],
        [0.0300],
        [0.0283],
        [0.0265],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0561, 0.0149, 0.0182, 0.0170, 0.0186, 0.0450, 0.0283, 0.0108, 0.0655,
         0.0199, 0.0286, 0.0399, 0.0300, 0.0283, 0.0265, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0798, 0.0561],
        [0.1394, 0.0149],
        [0.0560, 0.0182],
        [0.1383, 0.0170],
        [0.1554, 0.0186],
        [0.1311, 0.0450],
        [0.1449, 0.0283],
        [0.1071, 0.0108],
        [0.1167, 0.0655],
        [0.1721, 0.0199],
        [0.1465, 0.0286],
        [0.0995, 0.0399],
        [0.1326, 0.0300],
        [0.1736, 0.0283],
        [0.2087, 0.0265],
        [0.1366, 0.0211]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1418],
        [0.0902],
        [0.1752],
        [0.0862],
        [0.1547],
        [0.2455],
        [0.1964],
        [0.1501],
        [0.1111],
        [0.2217],
        [0.1560],
        [0.1646],
        [0.1470],
        [0.1539],
        [0.1044],
        [0.1401]], device='cuda:0', dtype=torch.float16)/tensor([[0.1418, 0.0902, 0.1752, 0.0862, 0.1547, 0.2455, 0.1964, 0.1501, 0.1111,
         0.2217, 0.1560, 0.1646, 0.1470, 0.1539, 0.1044, 0.1401]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0231],
        [0.0233],
        [0.0223],
        [0.0574],
        [0.0158],
        [0.0862],
        [0.0215],
        [0.0484],
        [0.0399],
        [0.0731],
        [0.0172],
        [0.0397],
        [0.0652],
        [0.0452],
        [0.0206],
        [0.0528]], device='cuda:0', dtype=torch.float16)/tensor([[0.0231, 0.0233, 0.0223, 0.0574, 0.0158, 0.0862, 0.0215, 0.0484, 0.0399,
         0.0731, 0.0172, 0.0397, 0.0652, 0.0452, 0.0206, 0.0528]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1418, 0.0231],
        [0.0902, 0.0233],
        [0.1752, 0.0223],
        [0.0862, 0.0574],
        [0.1547, 0.0158],
        [0.2455, 0.0862],
        [0.1964, 0.0215],
        [0.1501, 0.0484],
        [0.1111, 0.0399],
        [0.2217, 0.0731],
        [0.1560, 0.0172],
        [0.1646, 0.0397],
        [0.1470, 0.0652],
        [0.1539, 0.0452],
        [0.1044, 0.0206],
        [0.1401, 0.0528]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1174],
        [0.1420],
        [0.1449],
        [0.1208],
        [0.1494],
        [0.1633],
        [0.1797],
        [0.2996]], device='cuda:0', dtype=torch.float16)/tensor([[0.1174, 0.1420, 0.1449, 0.1208, 0.1494, 0.1633, 0.1797, 0.2996]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0581],
        [0.0120],
        [0.0159],
        [0.0120],
        [0.0181],
        [0.0288],
        [0.0315],
        [0.0438]], device='cuda:0', dtype=torch.float16)/tensor([[0.0581, 0.0120, 0.0159, 0.0120, 0.0181, 0.0288, 0.0315, 0.0438]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1174, 0.0581],
        [0.1420, 0.0120],
        [0.1449, 0.0159],
        [0.1208, 0.0120],
        [0.1494, 0.0181],
        [0.1633, 0.0288],
        [0.1797, 0.0315],
        [0.2996, 0.0438]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type auxiliary, variation 2 and batchsize 16: 0:03:32.987390
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b SA auxiliary 3 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 326.43it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0629],
        [0.0452],
        [0.0506],
        [0.0457],
        [0.0560],
        [0.0561],
        [0.0345],
        [0.0188],
        [0.1213],
        [0.0256],
        [0.0492],
        [0.0713],
        [0.0823],
        [0.0352],
        [0.0530],
        [0.0794]], device='cuda:0', dtype=torch.float16)/tensor([[0.0629, 0.0452, 0.0506, 0.0457, 0.0560, 0.0561, 0.0345, 0.0188, 0.1213,
         0.0256, 0.0492, 0.0713, 0.0823, 0.0352, 0.0530, 0.0794]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0457],
        [0.0279],
        [0.0109],
        [0.0410],
        [0.0089],
        [0.0188],
        [0.0239],
        [0.0549],
        [0.0649],
        [0.0505],
        [0.0243],
        [0.0054],
        [0.0106],
        [0.0016],
        [0.0069],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0457, 0.0279, 0.0109, 0.0410, 0.0089, 0.0188, 0.0239, 0.0549, 0.0649,
         0.0505, 0.0243, 0.0054, 0.0106, 0.0016, 0.0069, 0.0088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0629, 0.0457],
        [0.0452, 0.0279],
        [0.0506, 0.0109],
        [0.0457, 0.0410],
        [0.0560, 0.0089],
        [0.0561, 0.0188],
        [0.0345, 0.0239],
        [0.0188, 0.0549],
        [0.1213, 0.0649],
        [0.0256, 0.0505],
        [0.0492, 0.0243],
        [0.0713, 0.0054],
        [0.0823, 0.0106],
        [0.0352, 0.0016],
        [0.0530, 0.0069],
        [0.0794, 0.0088]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0600],
        [0.0259],
        [0.0380],
        [0.1076],
        [0.0264],
        [0.0811],
        [0.0731],
        [0.0911],
        [0.0582],
        [0.0692],
        [0.1581],
        [0.0807],
        [0.0635],
        [0.0708],
        [0.0844],
        [0.0842]], device='cuda:0', dtype=torch.float16)/tensor([[0.0600, 0.0259, 0.0380, 0.1076, 0.0264, 0.0811, 0.0731, 0.0911, 0.0582,
         0.0692, 0.1581, 0.0807, 0.0635, 0.0708, 0.0844, 0.0842]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0069],
        [0.0349],
        [0.0245],
        [0.0080],
        [0.0707],
        [0.0088],
        [0.0060],
        [0.0178],
        [0.0367],
        [0.0081],
        [0.0202],
        [0.0096],
        [0.0022],
        [0.0064],
        [0.0558],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0349, 0.0245, 0.0080, 0.0707, 0.0088, 0.0060, 0.0178, 0.0367,
         0.0081, 0.0202, 0.0096, 0.0022, 0.0064, 0.0558, 0.0152]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0600, 0.0069],
        [0.0259, 0.0349],
        [0.0380, 0.0245],
        [0.1076, 0.0080],
        [0.0264, 0.0707],
        [0.0811, 0.0088],
        [0.0731, 0.0060],
        [0.0911, 0.0178],
        [0.0582, 0.0367],
        [0.0692, 0.0081],
        [0.1581, 0.0202],
        [0.0807, 0.0096],
        [0.0635, 0.0022],
        [0.0708, 0.0064],
        [0.0844, 0.0558],
        [0.0842, 0.0152]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0339],
        [0.0882],
        [0.0393],
        [0.0684],
        [0.0295],
        [0.0396],
        [0.0604],
        [0.0746],
        [0.0468],
        [0.0865],
        [0.0590],
        [0.0590],
        [0.0409],
        [0.0392],
        [0.0611],
        [0.0757]], device='cuda:0', dtype=torch.float16)/tensor([[0.0339, 0.0882, 0.0393, 0.0684, 0.0295, 0.0396, 0.0604, 0.0746, 0.0468,
         0.0865, 0.0590, 0.0590, 0.0409, 0.0392, 0.0611, 0.0757]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0290],
        [0.0079],
        [0.0309],
        [0.0193],
        [0.0140],
        [0.0409],
        [0.0052],
        [0.0056],
        [0.0289],
        [0.0114],
        [0.0063],
        [0.0320],
        [0.0880],
        [0.0427],
        [0.0055],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0290, 0.0079, 0.0309, 0.0193, 0.0140, 0.0409, 0.0052, 0.0056, 0.0289,
         0.0114, 0.0063, 0.0320, 0.0880, 0.0427, 0.0055, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0339, 0.0290],
        [0.0882, 0.0079],
        [0.0393, 0.0309],
        [0.0684, 0.0193],
        [0.0295, 0.0140],
        [0.0396, 0.0409],
        [0.0604, 0.0052],
        [0.0746, 0.0056],
        [0.0468, 0.0289],
        [0.0865, 0.0114],
        [0.0590, 0.0063],
        [0.0590, 0.0320],
        [0.0409, 0.0880],
        [0.0392, 0.0427],
        [0.0611, 0.0055],
        [0.0757, 0.0066]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1174],
        [0.0670],
        [0.0540],
        [0.0396],
        [0.0803],
        [0.0706],
        [0.0945],
        [0.0283],
        [0.0660],
        [0.0502],
        [0.0417],
        [0.0398],
        [0.0583],
        [0.0789],
        [0.0768],
        [0.0549]], device='cuda:0', dtype=torch.float16)/tensor([[0.1174, 0.0670, 0.0540, 0.0396, 0.0803, 0.0706, 0.0945, 0.0283, 0.0660,
         0.0502, 0.0417, 0.0398, 0.0583, 0.0789, 0.0768, 0.0549]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.1069],
        [0.0055],
        [0.0136],
        [0.0384],
        [0.0087],
        [0.0067],
        [0.0123],
        [0.0390],
        [0.0087],
        [0.0634],
        [0.0163],
        [0.0216],
        [0.0259],
        [0.0059],
        [0.0168],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.1069, 0.0055, 0.0136, 0.0384, 0.0087, 0.0067, 0.0123, 0.0390, 0.0087,
         0.0634, 0.0163, 0.0216, 0.0259, 0.0059, 0.0168, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1174, 0.1069],
        [0.0670, 0.0055],
        [0.0540, 0.0136],
        [0.0396, 0.0384],
        [0.0803, 0.0087],
        [0.0706, 0.0067],
        [0.0945, 0.0123],
        [0.0283, 0.0390],
        [0.0660, 0.0087],
        [0.0502, 0.0634],
        [0.0417, 0.0163],
        [0.0398, 0.0216],
        [0.0583, 0.0259],
        [0.0789, 0.0059],
        [0.0768, 0.0168],
        [0.0549, 0.0060]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0382],
        [0.0221],
        [0.0548],
        [0.0421],
        [0.0581],
        [0.1188],
        [0.0389],
        [0.0746],
        [0.0587],
        [0.0485],
        [0.0618],
        [0.0574],
        [0.0339],
        [0.0434],
        [0.0451],
        [0.0471]], device='cuda:0', dtype=torch.float16)/tensor([[0.0382, 0.0221, 0.0548, 0.0421, 0.0581, 0.1188, 0.0389, 0.0746, 0.0587,
         0.0485, 0.0618, 0.0574, 0.0339, 0.0434, 0.0451, 0.0471]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0436],
        [0.0350],
        [0.0061],
        [0.0315],
        [0.0037],
        [0.0570],
        [0.0549],
        [0.0085],
        [0.0072],
        [0.0411],
        [0.0021],
        [0.0070],
        [0.0443],
        [0.0257],
        [0.0374],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0436, 0.0350, 0.0061, 0.0315, 0.0037, 0.0570, 0.0549, 0.0085, 0.0072,
         0.0411, 0.0021, 0.0070, 0.0443, 0.0257, 0.0374, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0382, 0.0436],
        [0.0221, 0.0350],
        [0.0548, 0.0061],
        [0.0421, 0.0315],
        [0.0581, 0.0037],
        [0.1188, 0.0570],
        [0.0389, 0.0549],
        [0.0746, 0.0085],
        [0.0587, 0.0072],
        [0.0485, 0.0411],
        [0.0618, 0.0021],
        [0.0574, 0.0070],
        [0.0339, 0.0443],
        [0.0434, 0.0257],
        [0.0451, 0.0374],
        [0.0471, 0.0168]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0682],
        [0.1116],
        [0.0548],
        [0.0267],
        [0.0268],
        [0.0464],
        [0.0694],
        [0.0610],
        [0.0630],
        [0.0699],
        [0.0793],
        [0.0347],
        [0.0579],
        [0.0826],
        [0.0367],
        [0.0262]], device='cuda:0', dtype=torch.float16)/tensor([[0.0682, 0.1116, 0.0548, 0.0267, 0.0268, 0.0464, 0.0694, 0.0610, 0.0630,
         0.0699, 0.0793, 0.0347, 0.0579, 0.0826, 0.0367, 0.0262]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0308],
        [0.0177],
        [0.0061],
        [0.0380],
        [0.0409],
        [0.0350],
        [0.0088],
        [0.0135],
        [0.0216],
        [0.0338],
        [0.0041],
        [0.0509],
        [0.0128],
        [0.0084],
        [0.0339],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0177, 0.0061, 0.0380, 0.0409, 0.0350, 0.0088, 0.0135, 0.0216,
         0.0338, 0.0041, 0.0509, 0.0128, 0.0084, 0.0339, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0682, 0.0308],
        [0.1116, 0.0177],
        [0.0548, 0.0061],
        [0.0267, 0.0380],
        [0.0268, 0.0409],
        [0.0464, 0.0350],
        [0.0694, 0.0088],
        [0.0610, 0.0135],
        [0.0630, 0.0216],
        [0.0699, 0.0338],
        [0.0793, 0.0041],
        [0.0347, 0.0509],
        [0.0579, 0.0128],
        [0.0826, 0.0084],
        [0.0367, 0.0339],
        [0.0262, 0.0161]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0850],
        [0.0737],
        [0.0716],
        [0.0533],
        [0.0637],
        [0.0193],
        [0.0906],
        [0.0894],
        [0.0297],
        [0.0606],
        [0.0570],
        [0.0638],
        [0.0540],
        [0.0847],
        [0.0377],
        [0.1072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0850, 0.0737, 0.0716, 0.0533, 0.0637, 0.0193, 0.0906, 0.0894, 0.0297,
         0.0606, 0.0570, 0.0638, 0.0540, 0.0847, 0.0377, 0.1072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0111],
        [0.0033],
        [0.0065],
        [0.0341],
        [0.0104],
        [0.0525],
        [0.0128],
        [0.0099],
        [0.0381],
        [0.0506],
        [0.0280],
        [0.0039],
        [0.0371],
        [0.0189],
        [0.0073],
        [0.1187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0033, 0.0065, 0.0341, 0.0104, 0.0525, 0.0128, 0.0099, 0.0381,
         0.0506, 0.0280, 0.0039, 0.0371, 0.0189, 0.0073, 0.1187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0850, 0.0111],
        [0.0737, 0.0033],
        [0.0716, 0.0065],
        [0.0533, 0.0341],
        [0.0637, 0.0104],
        [0.0193, 0.0525],
        [0.0906, 0.0128],
        [0.0894, 0.0099],
        [0.0297, 0.0381],
        [0.0606, 0.0506],
        [0.0570, 0.0280],
        [0.0638, 0.0039],
        [0.0540, 0.0371],
        [0.0847, 0.0189],
        [0.0377, 0.0073],
        [0.1072, 0.1187]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0513],
        [0.0749],
        [0.0589],
        [0.0582],
        [0.0516],
        [0.0331],
        [0.0704],
        [0.0689],
        [0.0609],
        [0.0740],
        [0.0818],
        [0.0284],
        [0.0338],
        [0.0623],
        [0.0793],
        [0.0348]], device='cuda:0', dtype=torch.float16)/tensor([[0.0513, 0.0749, 0.0589, 0.0582, 0.0516, 0.0331, 0.0704, 0.0689, 0.0609,
         0.0740, 0.0818, 0.0284, 0.0338, 0.0623, 0.0793, 0.0348]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0290],
        [0.0325],
        [0.0352],
        [0.0059],
        [0.0123],
        [0.0628],
        [0.0069],
        [0.0079],
        [0.0323],
        [0.0088],
        [0.0079],
        [0.0388],
        [0.0414],
        [0.0585],
        [0.0062],
        [0.0228]], device='cuda:0', dtype=torch.float16)/tensor([[0.0290, 0.0325, 0.0352, 0.0059, 0.0123, 0.0628, 0.0069, 0.0079, 0.0323,
         0.0088, 0.0079, 0.0388, 0.0414, 0.0585, 0.0062, 0.0228]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0513, 0.0290],
        [0.0749, 0.0325],
        [0.0589, 0.0352],
        [0.0582, 0.0059],
        [0.0516, 0.0123],
        [0.0331, 0.0628],
        [0.0704, 0.0069],
        [0.0689, 0.0079],
        [0.0609, 0.0323],
        [0.0740, 0.0088],
        [0.0818, 0.0079],
        [0.0284, 0.0388],
        [0.0338, 0.0414],
        [0.0623, 0.0585],
        [0.0793, 0.0062],
        [0.0348, 0.0228]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0410],
        [0.0480],
        [0.0407],
        [0.0719],
        [0.0569],
        [0.0815],
        [0.0475],
        [0.0326],
        [0.0598],
        [0.0335],
        [0.0863],
        [0.0526],
        [0.0761],
        [0.0529],
        [0.0601],
        [0.0520]], device='cuda:0', dtype=torch.float16)/tensor([[0.0410, 0.0480, 0.0407, 0.0719, 0.0569, 0.0815, 0.0475, 0.0326, 0.0598,
         0.0335, 0.0863, 0.0526, 0.0761, 0.0529, 0.0601, 0.0520]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0300],
        [0.0028],
        [0.0410],
        [0.0094],
        [0.0076],
        [0.0087],
        [0.0129],
        [0.0478],
        [0.0129],
        [0.0356],
        [0.0199],
        [0.0416],
        [0.0116],
        [0.0512],
        [0.0433],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0300, 0.0028, 0.0410, 0.0094, 0.0076, 0.0087, 0.0129, 0.0478, 0.0129,
         0.0356, 0.0199, 0.0416, 0.0116, 0.0512, 0.0433, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0410, 0.0300],
        [0.0480, 0.0028],
        [0.0407, 0.0410],
        [0.0719, 0.0094],
        [0.0569, 0.0076],
        [0.0815, 0.0087],
        [0.0475, 0.0129],
        [0.0326, 0.0478],
        [0.0598, 0.0129],
        [0.0335, 0.0356],
        [0.0863, 0.0199],
        [0.0526, 0.0416],
        [0.0761, 0.0116],
        [0.0529, 0.0512],
        [0.0601, 0.0433],
        [0.0520, 0.0060]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0490],
        [0.0735],
        [0.1368],
        [0.0260],
        [0.0346],
        [0.0662],
        [0.0887],
        [0.0486],
        [0.0587],
        [0.0648],
        [0.0464],
        [0.0505],
        [0.0320],
        [0.0550],
        [0.0721],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0490, 0.0735, 0.1368, 0.0260, 0.0346, 0.0662, 0.0887, 0.0486, 0.0587,
         0.0648, 0.0464, 0.0505, 0.0320, 0.0550, 0.0721, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0033],
        [0.0076],
        [0.0129],
        [0.0568],
        [0.0371],
        [0.0114],
        [0.0059],
        [0.0039],
        [0.0224],
        [0.0116],
        [0.0479],
        [0.0016],
        [0.0287],
        [0.0099],
        [0.0091],
        [0.0387]], device='cuda:0', dtype=torch.float16)/tensor([[0.0033, 0.0076, 0.0129, 0.0568, 0.0371, 0.0114, 0.0059, 0.0039, 0.0224,
         0.0116, 0.0479, 0.0016, 0.0287, 0.0099, 0.0091, 0.0387]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0490, 0.0033],
        [0.0735, 0.0076],
        [0.1368, 0.0129],
        [0.0260, 0.0568],
        [0.0346, 0.0371],
        [0.0662, 0.0114],
        [0.0887, 0.0059],
        [0.0486, 0.0039],
        [0.0587, 0.0224],
        [0.0648, 0.0116],
        [0.0464, 0.0479],
        [0.0505, 0.0016],
        [0.0320, 0.0287],
        [0.0550, 0.0099],
        [0.0721, 0.0091],
        [0.0210, 0.0387]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0634],
        [0.0673],
        [0.0634],
        [0.0653],
        [0.0783],
        [0.0601],
        [0.0224],
        [0.0770],
        [0.0491],
        [0.0523],
        [0.0483],
        [0.0366],
        [0.0512],
        [0.0464],
        [0.0148],
        [0.0533]], device='cuda:0', dtype=torch.float16)/tensor([[0.0634, 0.0673, 0.0634, 0.0653, 0.0783, 0.0601, 0.0224, 0.0770, 0.0491,
         0.0523, 0.0483, 0.0366, 0.0512, 0.0464, 0.0148, 0.0533]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0373],
        [0.0075],
        [0.0217],
        [0.0142],
        [0.0058],
        [0.0042],
        [0.0426],
        [0.0057],
        [0.0354],
        [0.0033],
        [0.0182],
        [0.0936],
        [0.0347],
        [0.0056],
        [0.0173],
        [0.0240]], device='cuda:0', dtype=torch.float16)/tensor([[0.0373, 0.0075, 0.0217, 0.0142, 0.0058, 0.0042, 0.0426, 0.0057, 0.0354,
         0.0033, 0.0182, 0.0936, 0.0347, 0.0056, 0.0173, 0.0240]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0634, 0.0373],
        [0.0673, 0.0075],
        [0.0634, 0.0217],
        [0.0653, 0.0142],
        [0.0783, 0.0058],
        [0.0601, 0.0042],
        [0.0224, 0.0426],
        [0.0770, 0.0057],
        [0.0491, 0.0354],
        [0.0523, 0.0033],
        [0.0483, 0.0182],
        [0.0366, 0.0936],
        [0.0512, 0.0347],
        [0.0464, 0.0056],
        [0.0148, 0.0173],
        [0.0533, 0.0240]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0950],
        [0.0432],
        [0.0309],
        [0.0782],
        [0.0666],
        [0.3086],
        [0.0531],
        [0.0498],
        [0.0481],
        [0.0703],
        [0.0820],
        [0.0440],
        [0.0551],
        [0.0908],
        [0.0523],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0950, 0.0432, 0.0309, 0.0782, 0.0666, 0.3086, 0.0531, 0.0498, 0.0481,
         0.0703, 0.0820, 0.0440, 0.0551, 0.0908, 0.0523, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0277],
        [0.0510],
        [0.0045],
        [0.0100],
        [0.0187],
        [0.0015],
        [0.0024],
        [0.0082],
        [0.0307],
        [0.0182],
        [0.0025],
        [0.0342],
        [0.0117],
        [0.0161],
        [0.0455]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0277, 0.0510, 0.0045, 0.0100, 0.0187, 0.0015, 0.0024, 0.0082,
         0.0307, 0.0182, 0.0025, 0.0342, 0.0117, 0.0161, 0.0455]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0950, 0.0160],
        [0.0432, 0.0277],
        [0.0309, 0.0510],
        [0.0782, 0.0045],
        [0.0666, 0.0100],
        [0.3086, 0.0187],
        [0.0531, 0.0015],
        [0.0498, 0.0024],
        [0.0481, 0.0082],
        [0.0703, 0.0307],
        [0.0820, 0.0182],
        [0.0440, 0.0025],
        [0.0551, 0.0342],
        [0.0908, 0.0117],
        [0.0523, 0.0161],
        [0.0192, 0.0455]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0748],
        [0.0728],
        [0.0439],
        [0.0939],
        [0.0986],
        [0.0559],
        [0.0676],
        [0.0535]], device='cuda:0', dtype=torch.float16)/tensor([[0.0748, 0.0728, 0.0439, 0.0939, 0.0986, 0.0559, 0.0676, 0.0535]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0259],
        [0.0051],
        [0.0551],
        [0.0051],
        [0.0096],
        [0.0034],
        [0.0080],
        [0.0346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0051, 0.0551, 0.0051, 0.0096, 0.0034, 0.0080, 0.0346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0748, 0.0259],
        [0.0728, 0.0051],
        [0.0439, 0.0551],
        [0.0939, 0.0051],
        [0.0986, 0.0096],
        [0.0559, 0.0034],
        [0.0676, 0.0080],
        [0.0535, 0.0346]], device='cuda:0')
acc:  0.675
Time taken to execute the en SA task with prompt type auxiliary, variation 3 and batchsize 16: 0:03:33.489329
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b SA auxiliary 4 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 318.35it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1254],
        [0.1442],
        [0.0858],
        [0.1205],
        [0.1263],
        [0.1174],
        [0.1112],
        [0.0897],
        [0.0985],
        [0.2285],
        [0.0775],
        [0.1271],
        [0.1842],
        [0.0706],
        [0.0838],
        [0.1210]], device='cuda:0', dtype=torch.float16)/tensor([[0.1254, 0.1442, 0.0858, 0.1205, 0.1263, 0.1174, 0.1112, 0.0897, 0.0985,
         0.2285, 0.0775, 0.1271, 0.1842, 0.0706, 0.0838, 0.1210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0322],
        [0.0426],
        [0.0205],
        [0.0709],
        [0.0225],
        [0.0486],
        [0.0478],
        [0.0472],
        [0.0417],
        [0.1140],
        [0.0604],
        [0.0339],
        [0.0607],
        [0.0168],
        [0.0355],
        [0.0268]], device='cuda:0', dtype=torch.float16)/tensor([[0.0322, 0.0426, 0.0205, 0.0709, 0.0225, 0.0486, 0.0478, 0.0472, 0.0417,
         0.1140, 0.0604, 0.0339, 0.0607, 0.0168, 0.0355, 0.0268]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1254, 0.0322],
        [0.1442, 0.0426],
        [0.0858, 0.0205],
        [0.1205, 0.0709],
        [0.1263, 0.0225],
        [0.1174, 0.0486],
        [0.1112, 0.0478],
        [0.0897, 0.0472],
        [0.0985, 0.0417],
        [0.2285, 0.1140],
        [0.0775, 0.0604],
        [0.1271, 0.0339],
        [0.1842, 0.0607],
        [0.0706, 0.0168],
        [0.0838, 0.0355],
        [0.1210, 0.0268]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0981],
        [0.0995],
        [0.1515],
        [0.1154],
        [0.1593],
        [0.1089],
        [0.1331],
        [0.1219],
        [0.0950],
        [0.1172],
        [0.1853],
        [0.1031],
        [0.1138],
        [0.1427],
        [0.0737],
        [0.1091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0981, 0.0995, 0.1515, 0.1154, 0.1593, 0.1089, 0.1331, 0.1219, 0.0950,
         0.1172, 0.1853, 0.1031, 0.1138, 0.1427, 0.0737, 0.1091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0256],
        [0.0590],
        [0.0294],
        [0.0278],
        [0.0439],
        [0.0423],
        [0.0572],
        [0.0296],
        [0.0336],
        [0.0431],
        [0.0472],
        [0.0234],
        [0.0210],
        [0.0219],
        [0.0177],
        [0.0389]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0590, 0.0294, 0.0278, 0.0439, 0.0423, 0.0572, 0.0296, 0.0336,
         0.0431, 0.0472, 0.0234, 0.0210, 0.0219, 0.0177, 0.0389]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0981, 0.0256],
        [0.0995, 0.0590],
        [0.1515, 0.0294],
        [0.1154, 0.0278],
        [0.1593, 0.0439],
        [0.1089, 0.0423],
        [0.1331, 0.0572],
        [0.1219, 0.0296],
        [0.0950, 0.0336],
        [0.1172, 0.0431],
        [0.1853, 0.0472],
        [0.1031, 0.0234],
        [0.1138, 0.0210],
        [0.1427, 0.0219],
        [0.0737, 0.0177],
        [0.1091, 0.0389]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1694],
        [0.0997],
        [0.1197],
        [0.0784],
        [0.1354],
        [0.1139],
        [0.2117],
        [0.0877],
        [0.1028],
        [0.1207],
        [0.0712],
        [0.0932],
        [0.2412],
        [0.1614],
        [0.1052],
        [0.0852]], device='cuda:0', dtype=torch.float16)/tensor([[0.1694, 0.0997, 0.1197, 0.0784, 0.1354, 0.1139, 0.2117, 0.0877, 0.1028,
         0.1207, 0.0712, 0.0932, 0.2412, 0.1614, 0.1052, 0.0852]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0486],
        [0.0275],
        [0.0278],
        [0.0176],
        [0.0453],
        [0.0394],
        [0.0883],
        [0.0156],
        [0.0396],
        [0.0662],
        [0.0189],
        [0.0645],
        [0.0629],
        [0.0466],
        [0.0422],
        [0.0198]], device='cuda:0', dtype=torch.float16)/tensor([[0.0486, 0.0275, 0.0278, 0.0176, 0.0453, 0.0394, 0.0883, 0.0156, 0.0396,
         0.0662, 0.0189, 0.0645, 0.0629, 0.0466, 0.0422, 0.0198]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1694, 0.0486],
        [0.0997, 0.0275],
        [0.1197, 0.0278],
        [0.0784, 0.0176],
        [0.1354, 0.0453],
        [0.1139, 0.0394],
        [0.2117, 0.0883],
        [0.0877, 0.0156],
        [0.1028, 0.0396],
        [0.1207, 0.0662],
        [0.0712, 0.0189],
        [0.0932, 0.0645],
        [0.2412, 0.0629],
        [0.1614, 0.0466],
        [0.1052, 0.0422],
        [0.0852, 0.0198]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1523],
        [0.1154],
        [0.1129],
        [0.1177],
        [0.1372],
        [0.0966],
        [0.1074],
        [0.0873],
        [0.0826],
        [0.0833],
        [0.1603],
        [0.0964],
        [0.0767],
        [0.1222],
        [0.1097],
        [0.0508]], device='cuda:0', dtype=torch.float16)/tensor([[0.1523, 0.1154, 0.1129, 0.1177, 0.1372, 0.0966, 0.1074, 0.0873, 0.0826,
         0.0833, 0.1603, 0.0964, 0.0767, 0.1222, 0.1097, 0.0508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0330],
        [0.0226],
        [0.0559],
        [0.0271],
        [0.0478],
        [0.0460],
        [0.0424],
        [0.0284],
        [0.0390],
        [0.0664],
        [0.0375],
        [0.0255],
        [0.0158],
        [0.0258],
        [0.0335],
        [0.0191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0330, 0.0226, 0.0559, 0.0271, 0.0478, 0.0460, 0.0424, 0.0284, 0.0390,
         0.0664, 0.0375, 0.0255, 0.0158, 0.0258, 0.0335, 0.0191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1523, 0.0330],
        [0.1154, 0.0226],
        [0.1129, 0.0559],
        [0.1177, 0.0271],
        [0.1372, 0.0478],
        [0.0966, 0.0460],
        [0.1074, 0.0424],
        [0.0873, 0.0284],
        [0.0826, 0.0390],
        [0.0833, 0.0664],
        [0.1603, 0.0375],
        [0.0964, 0.0255],
        [0.0767, 0.0158],
        [0.1222, 0.0258],
        [0.1097, 0.0335],
        [0.0508, 0.0191]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1179],
        [0.1175],
        [0.0947],
        [0.1292],
        [0.0942],
        [0.1003],
        [0.1231],
        [0.1199],
        [0.1226],
        [0.1224],
        [0.0875],
        [0.1373],
        [0.0916],
        [0.1373],
        [0.0584],
        [0.1315]], device='cuda:0', dtype=torch.float16)/tensor([[0.1179, 0.1175, 0.0947, 0.1292, 0.0942, 0.1003, 0.1231, 0.1199, 0.1226,
         0.1224, 0.0875, 0.1373, 0.0916, 0.1373, 0.0584, 0.1315]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0150],
        [0.0306],
        [0.0523],
        [0.0490],
        [0.0452],
        [0.0285],
        [0.0573],
        [0.0536],
        [0.0206],
        [0.0330],
        [0.0454],
        [0.0275],
        [0.0179],
        [0.0501],
        [0.0085],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0306, 0.0523, 0.0490, 0.0452, 0.0285, 0.0573, 0.0536, 0.0206,
         0.0330, 0.0454, 0.0275, 0.0179, 0.0501, 0.0085, 0.0349]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1179, 0.0150],
        [0.1175, 0.0306],
        [0.0947, 0.0523],
        [0.1292, 0.0490],
        [0.0942, 0.0452],
        [0.1003, 0.0285],
        [0.1231, 0.0573],
        [0.1199, 0.0536],
        [0.1226, 0.0206],
        [0.1224, 0.0330],
        [0.0875, 0.0454],
        [0.1373, 0.0275],
        [0.0916, 0.0179],
        [0.1373, 0.0501],
        [0.0584, 0.0085],
        [0.1315, 0.0349]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1285],
        [0.0794],
        [0.0899],
        [0.1467],
        [0.1011],
        [0.0753],
        [0.0983],
        [0.1031],
        [0.1191],
        [0.1248],
        [0.1006],
        [0.1382],
        [0.1407],
        [0.1123],
        [0.1443],
        [0.0980]], device='cuda:0', dtype=torch.float16)/tensor([[0.1285, 0.0794, 0.0899, 0.1467, 0.1011, 0.0753, 0.0983, 0.1031, 0.1191,
         0.1248, 0.1006, 0.1382, 0.1407, 0.1123, 0.1443, 0.0980]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0351],
        [0.0501],
        [0.0283],
        [0.0430],
        [0.0585],
        [0.0290],
        [0.0345],
        [0.0153],
        [0.0467],
        [0.0226],
        [0.0209],
        [0.0604],
        [0.0332],
        [0.0483],
        [0.0848],
        [0.0599]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0501, 0.0283, 0.0430, 0.0585, 0.0290, 0.0345, 0.0153, 0.0467,
         0.0226, 0.0209, 0.0604, 0.0332, 0.0483, 0.0848, 0.0599]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1285, 0.0351],
        [0.0794, 0.0501],
        [0.0899, 0.0283],
        [0.1467, 0.0430],
        [0.1011, 0.0585],
        [0.0753, 0.0290],
        [0.0983, 0.0345],
        [0.1031, 0.0153],
        [0.1191, 0.0467],
        [0.1248, 0.0226],
        [0.1006, 0.0209],
        [0.1382, 0.0604],
        [0.1407, 0.0332],
        [0.1123, 0.0483],
        [0.1443, 0.0848],
        [0.0980, 0.0599]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1365],
        [0.0896],
        [0.1127],
        [0.1466],
        [0.1078],
        [0.1577],
        [0.1132],
        [0.1225],
        [0.1364],
        [0.0905],
        [0.1562],
        [0.0679],
        [0.1073],
        [0.0998],
        [0.1646],
        [0.0886]], device='cuda:0', dtype=torch.float16)/tensor([[0.1365, 0.0896, 0.1127, 0.1466, 0.1078, 0.1577, 0.1132, 0.1225, 0.1364,
         0.0905, 0.1562, 0.0679, 0.1073, 0.0998, 0.1646, 0.0886]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0640],
        [0.0531],
        [0.0224],
        [0.0810],
        [0.0498],
        [0.0411],
        [0.0461],
        [0.0495],
        [0.0967],
        [0.0289],
        [0.0484],
        [0.0366],
        [0.0232],
        [0.0208],
        [0.0288],
        [0.0509]], device='cuda:0', dtype=torch.float16)/tensor([[0.0640, 0.0531, 0.0224, 0.0810, 0.0498, 0.0411, 0.0461, 0.0495, 0.0967,
         0.0289, 0.0484, 0.0366, 0.0232, 0.0208, 0.0288, 0.0509]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1365, 0.0640],
        [0.0896, 0.0531],
        [0.1127, 0.0224],
        [0.1466, 0.0810],
        [0.1078, 0.0498],
        [0.1577, 0.0411],
        [0.1132, 0.0461],
        [0.1225, 0.0495],
        [0.1364, 0.0967],
        [0.0905, 0.0289],
        [0.1562, 0.0484],
        [0.0679, 0.0366],
        [0.1073, 0.0232],
        [0.0998, 0.0208],
        [0.1646, 0.0288],
        [0.0886, 0.0509]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1317],
        [0.1472],
        [0.0983],
        [0.1078],
        [0.1097],
        [0.1222],
        [0.0850],
        [0.0938],
        [0.1794],
        [0.1654],
        [0.0740],
        [0.1055],
        [0.1099],
        [0.0857],
        [0.1098],
        [0.0950]], device='cuda:0', dtype=torch.float16)/tensor([[0.1317, 0.1472, 0.0983, 0.1078, 0.1097, 0.1222, 0.0850, 0.0938, 0.1794,
         0.1654, 0.0740, 0.1055, 0.1099, 0.0857, 0.1098, 0.0950]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0389],
        [0.0525],
        [0.0475],
        [0.0240],
        [0.0498],
        [0.0400],
        [0.0118],
        [0.0167],
        [0.0737],
        [0.0313],
        [0.0283],
        [0.0230],
        [0.0284],
        [0.0296],
        [0.0315],
        [0.0390]], device='cuda:0', dtype=torch.float16)/tensor([[0.0389, 0.0525, 0.0475, 0.0240, 0.0498, 0.0400, 0.0118, 0.0167, 0.0737,
         0.0313, 0.0283, 0.0230, 0.0284, 0.0296, 0.0315, 0.0390]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1317, 0.0389],
        [0.1472, 0.0525],
        [0.0983, 0.0475],
        [0.1078, 0.0240],
        [0.1097, 0.0498],
        [0.1222, 0.0400],
        [0.0850, 0.0118],
        [0.0938, 0.0167],
        [0.1794, 0.0737],
        [0.1654, 0.0313],
        [0.0740, 0.0283],
        [0.1055, 0.0230],
        [0.1099, 0.0284],
        [0.0857, 0.0296],
        [0.1098, 0.0315],
        [0.0950, 0.0390]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1162],
        [0.1125],
        [0.0715],
        [0.0864],
        [0.2517],
        [0.0713],
        [0.0983],
        [0.0982],
        [0.1315],
        [0.1158],
        [0.0847],
        [0.0921],
        [0.1356],
        [0.1131],
        [0.1014],
        [0.1433]], device='cuda:0', dtype=torch.float16)/tensor([[0.1162, 0.1125, 0.0715, 0.0864, 0.2517, 0.0713, 0.0983, 0.0982, 0.1315,
         0.1158, 0.0847, 0.0921, 0.1356, 0.1131, 0.1014, 0.1433]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0266],
        [0.0276],
        [0.0345],
        [0.0477],
        [0.0955],
        [0.0176],
        [0.0195],
        [0.0388],
        [0.0278],
        [0.0382],
        [0.0367],
        [0.0489],
        [0.0503],
        [0.0423],
        [0.0265],
        [0.0343]], device='cuda:0', dtype=torch.float16)/tensor([[0.0266, 0.0276, 0.0345, 0.0477, 0.0955, 0.0176, 0.0195, 0.0388, 0.0278,
         0.0382, 0.0367, 0.0489, 0.0503, 0.0423, 0.0265, 0.0343]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1162, 0.0266],
        [0.1125, 0.0276],
        [0.0715, 0.0345],
        [0.0864, 0.0477],
        [0.2517, 0.0955],
        [0.0713, 0.0176],
        [0.0983, 0.0195],
        [0.0982, 0.0388],
        [0.1315, 0.0278],
        [0.1158, 0.0382],
        [0.0847, 0.0367],
        [0.0921, 0.0489],
        [0.1356, 0.0503],
        [0.1131, 0.0423],
        [0.1014, 0.0265],
        [0.1433, 0.0343]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1439],
        [0.0646],
        [0.1895],
        [0.1051],
        [0.0875],
        [0.1174],
        [0.1462],
        [0.0735],
        [0.1121],
        [0.0759],
        [0.0898],
        [0.2024],
        [0.1191],
        [0.1194],
        [0.0580],
        [0.0941]], device='cuda:0', dtype=torch.float16)/tensor([[0.1439, 0.0646, 0.1895, 0.1051, 0.0875, 0.1174, 0.1462, 0.0735, 0.1121,
         0.0759, 0.0898, 0.2024, 0.1191, 0.1194, 0.0580, 0.0941]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0384],
        [0.0383],
        [0.0771],
        [0.0339],
        [0.0548],
        [0.0936],
        [0.0329],
        [0.0199],
        [0.0311],
        [0.0619],
        [0.0431],
        [0.0354],
        [0.0793],
        [0.0282],
        [0.0553],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0384, 0.0383, 0.0771, 0.0339, 0.0548, 0.0936, 0.0329, 0.0199, 0.0311,
         0.0619, 0.0431, 0.0354, 0.0793, 0.0282, 0.0553, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1439, 0.0384],
        [0.0646, 0.0383],
        [0.1895, 0.0771],
        [0.1051, 0.0339],
        [0.0875, 0.0548],
        [0.1174, 0.0936],
        [0.1462, 0.0329],
        [0.0735, 0.0199],
        [0.1121, 0.0311],
        [0.0759, 0.0619],
        [0.0898, 0.0431],
        [0.2024, 0.0354],
        [0.1191, 0.0793],
        [0.1194, 0.0282],
        [0.0580, 0.0553],
        [0.0941, 0.0261]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1289],
        [0.0924],
        [0.1377],
        [0.1237],
        [0.0745],
        [0.0700],
        [0.1028],
        [0.0854],
        [0.1663],
        [0.1215],
        [0.0812],
        [0.1028],
        [0.1076],
        [0.0995],
        [0.1098],
        [0.1021]], device='cuda:0', dtype=torch.float16)/tensor([[0.1289, 0.0924, 0.1377, 0.1237, 0.0745, 0.0700, 0.1028, 0.0854, 0.1663,
         0.1215, 0.0812, 0.1028, 0.1076, 0.0995, 0.1098, 0.1021]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0576],
        [0.0502],
        [0.0351],
        [0.0202],
        [0.0313],
        [0.0238],
        [0.0309],
        [0.0264],
        [0.0317],
        [0.0417],
        [0.0157],
        [0.0659],
        [0.0478],
        [0.0256],
        [0.0656],
        [0.0226]], device='cuda:0', dtype=torch.float16)/tensor([[0.0576, 0.0502, 0.0351, 0.0202, 0.0313, 0.0238, 0.0309, 0.0264, 0.0317,
         0.0417, 0.0157, 0.0659, 0.0478, 0.0256, 0.0656, 0.0226]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1289, 0.0576],
        [0.0924, 0.0502],
        [0.1377, 0.0351],
        [0.1237, 0.0202],
        [0.0745, 0.0313],
        [0.0700, 0.0238],
        [0.1028, 0.0309],
        [0.0854, 0.0264],
        [0.1663, 0.0317],
        [0.1215, 0.0417],
        [0.0812, 0.0157],
        [0.1028, 0.0659],
        [0.1076, 0.0478],
        [0.0995, 0.0256],
        [0.1098, 0.0656],
        [0.1021, 0.0226]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1620],
        [0.1184],
        [0.1039],
        [0.1195],
        [0.1450],
        [0.1099],
        [0.0959],
        [0.0669],
        [0.1383],
        [0.0957],
        [0.1224],
        [0.0909],
        [0.1040],
        [0.0968],
        [0.0680],
        [0.1478]], device='cuda:0', dtype=torch.float16)/tensor([[0.1620, 0.1184, 0.1039, 0.1195, 0.1450, 0.1099, 0.0959, 0.0669, 0.1383,
         0.0957, 0.1224, 0.0909, 0.1040, 0.0968, 0.0680, 0.1478]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0938],
        [0.0260],
        [0.0616],
        [0.0194],
        [0.0396],
        [0.0496],
        [0.0429],
        [0.0581],
        [0.0393],
        [0.0196],
        [0.0322],
        [0.0180],
        [0.0395],
        [0.0107],
        [0.0140],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0938, 0.0260, 0.0616, 0.0194, 0.0396, 0.0496, 0.0429, 0.0581, 0.0393,
         0.0196, 0.0322, 0.0180, 0.0395, 0.0107, 0.0140, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1620, 0.0938],
        [0.1184, 0.0260],
        [0.1039, 0.0616],
        [0.1195, 0.0194],
        [0.1450, 0.0396],
        [0.1099, 0.0496],
        [0.0959, 0.0429],
        [0.0669, 0.0581],
        [0.1383, 0.0393],
        [0.0957, 0.0196],
        [0.1224, 0.0322],
        [0.0909, 0.0180],
        [0.1040, 0.0395],
        [0.0968, 0.0107],
        [0.0680, 0.0140],
        [0.1478, 0.0184]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0919],
        [0.1070],
        [0.3467],
        [0.1130],
        [0.1124],
        [0.0886],
        [0.1044],
        [0.0733]], device='cuda:0', dtype=torch.float16)/tensor([[0.0919, 0.1070, 0.3467, 0.1130, 0.1124, 0.0886, 0.1044, 0.0733]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0215],
        [0.0534],
        [0.0667],
        [0.0391],
        [0.0465],
        [0.0272],
        [0.0684],
        [0.0102]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0534, 0.0667, 0.0391, 0.0465, 0.0272, 0.0684, 0.0102]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0919, 0.0215],
        [0.1070, 0.0534],
        [0.3467, 0.0667],
        [0.1130, 0.0391],
        [0.1124, 0.0465],
        [0.0886, 0.0272],
        [0.1044, 0.0684],
        [0.0733, 0.0102]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type auxiliary, variation 4 and batchsize 16: 0:03:34.376360
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b SA auxiliary 5 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 310.25it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0685],
        [0.1082],
        [0.0749],
        [0.0949],
        [0.0970],
        [0.0704],
        [0.1089],
        [0.0931],
        [0.1193],
        [0.1095],
        [0.0823],
        [0.1327],
        [0.1929],
        [0.0796],
        [0.1694],
        [0.0832]], device='cuda:0', dtype=torch.float16)/tensor([[0.0685, 0.1082, 0.0749, 0.0949, 0.0970, 0.0704, 0.1089, 0.0931, 0.1193,
         0.1095, 0.0823, 0.1327, 0.1929, 0.0796, 0.1694, 0.0832]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0353],
        [0.0224],
        [0.0174],
        [0.0576],
        [0.0428],
        [0.0051],
        [0.0247],
        [0.0300],
        [0.0299],
        [0.0482],
        [0.0091],
        [0.0090],
        [0.0333],
        [0.0353],
        [0.0820],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0353, 0.0224, 0.0174, 0.0576, 0.0428, 0.0051, 0.0247, 0.0300, 0.0299,
         0.0482, 0.0091, 0.0090, 0.0333, 0.0353, 0.0820, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0685, 0.0353],
        [0.1082, 0.0224],
        [0.0749, 0.0174],
        [0.0949, 0.0576],
        [0.0970, 0.0428],
        [0.0704, 0.0051],
        [0.1089, 0.0247],
        [0.0931, 0.0300],
        [0.1193, 0.0299],
        [0.1095, 0.0482],
        [0.0823, 0.0091],
        [0.1327, 0.0090],
        [0.1929, 0.0333],
        [0.0796, 0.0353],
        [0.1694, 0.0820],
        [0.0832, 0.0309]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1001],
        [0.1043],
        [0.0687],
        [0.0908],
        [0.1074],
        [0.0923],
        [0.0740],
        [0.0854],
        [0.0894],
        [0.1016],
        [0.0790],
        [0.0953],
        [0.0629],
        [0.0575],
        [0.3208],
        [0.0903]], device='cuda:0', dtype=torch.float16)/tensor([[0.1001, 0.1043, 0.0687, 0.0908, 0.1074, 0.0923, 0.0740, 0.0854, 0.0894,
         0.1016, 0.0790, 0.0953, 0.0629, 0.0575, 0.3208, 0.0903]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0515],
        [0.0428],
        [0.0630],
        [0.0342],
        [0.0434],
        [0.0601],
        [0.0196],
        [0.0312],
        [0.0309],
        [0.0548],
        [0.0174],
        [0.0197],
        [0.0329],
        [0.0488],
        [0.0462],
        [0.0338]], device='cuda:0', dtype=torch.float16)/tensor([[0.0515, 0.0428, 0.0630, 0.0342, 0.0434, 0.0601, 0.0196, 0.0312, 0.0309,
         0.0548, 0.0174, 0.0197, 0.0329, 0.0488, 0.0462, 0.0338]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1001, 0.0515],
        [0.1043, 0.0428],
        [0.0687, 0.0630],
        [0.0908, 0.0342],
        [0.1074, 0.0434],
        [0.0923, 0.0601],
        [0.0740, 0.0196],
        [0.0854, 0.0312],
        [0.0894, 0.0309],
        [0.1016, 0.0548],
        [0.0790, 0.0174],
        [0.0953, 0.0197],
        [0.0629, 0.0329],
        [0.0575, 0.0488],
        [0.3208, 0.0462],
        [0.0903, 0.0338]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1019],
        [0.1179],
        [0.0728],
        [0.0870],
        [0.0735],
        [0.1127],
        [0.0839],
        [0.0671],
        [0.1246],
        [0.0889],
        [0.1885],
        [0.0819],
        [0.0668],
        [0.0651],
        [0.1133],
        [0.0938]], device='cuda:0', dtype=torch.float16)/tensor([[0.1019, 0.1179, 0.0728, 0.0870, 0.0735, 0.1127, 0.0839, 0.0671, 0.1246,
         0.0889, 0.1885, 0.0819, 0.0668, 0.0651, 0.1133, 0.0938]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0240],
        [0.0351],
        [0.0389],
        [0.0190],
        [0.0118],
        [0.0352],
        [0.0147],
        [0.0359],
        [0.0278],
        [0.0182],
        [0.0804],
        [0.0060],
        [0.0167],
        [0.0119],
        [0.0243],
        [0.0510]], device='cuda:0', dtype=torch.float16)/tensor([[0.0240, 0.0351, 0.0389, 0.0190, 0.0118, 0.0352, 0.0147, 0.0359, 0.0278,
         0.0182, 0.0804, 0.0060, 0.0167, 0.0119, 0.0243, 0.0510]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1019, 0.0240],
        [0.1179, 0.0351],
        [0.0728, 0.0389],
        [0.0870, 0.0190],
        [0.0735, 0.0118],
        [0.1127, 0.0352],
        [0.0839, 0.0147],
        [0.0671, 0.0359],
        [0.1246, 0.0278],
        [0.0889, 0.0182],
        [0.1885, 0.0804],
        [0.0819, 0.0060],
        [0.0668, 0.0167],
        [0.0651, 0.0119],
        [0.1133, 0.0243],
        [0.0938, 0.0510]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0504],
        [0.0721],
        [0.0439],
        [0.1204],
        [0.1108],
        [0.1015],
        [0.0534],
        [0.0601],
        [0.0612],
        [0.0831],
        [0.0678],
        [0.0630],
        [0.0679],
        [0.1094],
        [0.1074],
        [0.1461]], device='cuda:0', dtype=torch.float16)/tensor([[0.0504, 0.0721, 0.0439, 0.1204, 0.1108, 0.1015, 0.0534, 0.0601, 0.0612,
         0.0831, 0.0678, 0.0630, 0.0679, 0.1094, 0.1074, 0.1461]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0372],
        [0.0289],
        [0.0041],
        [0.0376],
        [0.0257],
        [0.0194],
        [0.0193],
        [0.0071],
        [0.0232],
        [0.0617],
        [0.0383],
        [0.0487],
        [0.0453],
        [0.0246],
        [0.0276],
        [0.0352]], device='cuda:0', dtype=torch.float16)/tensor([[0.0372, 0.0289, 0.0041, 0.0376, 0.0257, 0.0194, 0.0193, 0.0071, 0.0232,
         0.0617, 0.0383, 0.0487, 0.0453, 0.0246, 0.0276, 0.0352]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0504, 0.0372],
        [0.0721, 0.0289],
        [0.0439, 0.0041],
        [0.1204, 0.0376],
        [0.1108, 0.0257],
        [0.1015, 0.0194],
        [0.0534, 0.0193],
        [0.0601, 0.0071],
        [0.0612, 0.0232],
        [0.0831, 0.0617],
        [0.0678, 0.0383],
        [0.0630, 0.0487],
        [0.0679, 0.0453],
        [0.1094, 0.0246],
        [0.1074, 0.0276],
        [0.1461, 0.0352]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0963],
        [0.1041],
        [0.1004],
        [0.0918],
        [0.1113],
        [0.0914],
        [0.0880],
        [0.0752],
        [0.0548],
        [0.0603],
        [0.2159],
        [0.0825],
        [0.0916],
        [0.0887],
        [0.0577],
        [0.1056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0963, 0.1041, 0.1004, 0.0918, 0.1113, 0.0914, 0.0880, 0.0752, 0.0548,
         0.0603, 0.2159, 0.0825, 0.0916, 0.0887, 0.0577, 0.1056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0223],
        [0.0085],
        [0.0177],
        [0.0157],
        [0.0173],
        [0.0196],
        [0.0568],
        [0.0121],
        [0.0092],
        [0.0184],
        [0.0425],
        [0.0481],
        [0.0356],
        [0.0422],
        [0.0134],
        [0.0947]], device='cuda:0', dtype=torch.float16)/tensor([[0.0223, 0.0085, 0.0177, 0.0157, 0.0173, 0.0196, 0.0568, 0.0121, 0.0092,
         0.0184, 0.0425, 0.0481, 0.0356, 0.0422, 0.0134, 0.0947]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0963, 0.0223],
        [0.1041, 0.0085],
        [0.1004, 0.0177],
        [0.0918, 0.0157],
        [0.1113, 0.0173],
        [0.0914, 0.0196],
        [0.0880, 0.0568],
        [0.0752, 0.0121],
        [0.0548, 0.0092],
        [0.0603, 0.0184],
        [0.2159, 0.0425],
        [0.0825, 0.0481],
        [0.0916, 0.0356],
        [0.0887, 0.0422],
        [0.0577, 0.0134],
        [0.1056, 0.0947]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1355],
        [0.0825],
        [0.1202],
        [0.0690],
        [0.0970],
        [0.0642],
        [0.0689],
        [0.2096],
        [0.0807],
        [0.0673],
        [0.0679],
        [0.0634],
        [0.0858],
        [0.0850],
        [0.0965],
        [0.0779]], device='cuda:0', dtype=torch.float16)/tensor([[0.1355, 0.0825, 0.1202, 0.0690, 0.0970, 0.0642, 0.0689, 0.2096, 0.0807,
         0.0673, 0.0679, 0.0634, 0.0858, 0.0850, 0.0965, 0.0779]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0351],
        [0.0294],
        [0.0344],
        [0.0321],
        [0.0168],
        [0.0283],
        [0.0474],
        [0.0675],
        [0.0139],
        [0.0168],
        [0.0165],
        [0.0273],
        [0.0421],
        [0.0065],
        [0.0126],
        [0.0374]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0294, 0.0344, 0.0321, 0.0168, 0.0283, 0.0474, 0.0675, 0.0139,
         0.0168, 0.0165, 0.0273, 0.0421, 0.0065, 0.0126, 0.0374]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1355, 0.0351],
        [0.0825, 0.0294],
        [0.1202, 0.0344],
        [0.0690, 0.0321],
        [0.0970, 0.0168],
        [0.0642, 0.0283],
        [0.0689, 0.0474],
        [0.2096, 0.0675],
        [0.0807, 0.0139],
        [0.0673, 0.0168],
        [0.0679, 0.0165],
        [0.0634, 0.0273],
        [0.0858, 0.0421],
        [0.0850, 0.0065],
        [0.0965, 0.0126],
        [0.0779, 0.0374]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1178],
        [0.0646],
        [0.0455],
        [0.0645],
        [0.0956],
        [0.1006],
        [0.0895],
        [0.0779],
        [0.0909],
        [0.0623],
        [0.0948],
        [0.1796],
        [0.0739],
        [0.1451],
        [0.0743],
        [0.1157]], device='cuda:0', dtype=torch.float16)/tensor([[0.1178, 0.0646, 0.0455, 0.0645, 0.0956, 0.1006, 0.0895, 0.0779, 0.0909,
         0.0623, 0.0948, 0.1796, 0.0739, 0.1451, 0.0743, 0.1157]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0181],
        [0.0175],
        [0.0485],
        [0.0164],
        [0.0470],
        [0.0224],
        [0.0766],
        [0.0123],
        [0.0258],
        [0.0176],
        [0.0151],
        [0.0315],
        [0.0204],
        [0.0262],
        [0.0388],
        [0.0453]], device='cuda:0', dtype=torch.float16)/tensor([[0.0181, 0.0175, 0.0485, 0.0164, 0.0470, 0.0224, 0.0766, 0.0123, 0.0258,
         0.0176, 0.0151, 0.0315, 0.0204, 0.0262, 0.0388, 0.0453]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1178, 0.0181],
        [0.0646, 0.0175],
        [0.0455, 0.0485],
        [0.0645, 0.0164],
        [0.0956, 0.0470],
        [0.1006, 0.0224],
        [0.0895, 0.0766],
        [0.0779, 0.0123],
        [0.0909, 0.0258],
        [0.0623, 0.0176],
        [0.0948, 0.0151],
        [0.1796, 0.0315],
        [0.0739, 0.0204],
        [0.1451, 0.0262],
        [0.0743, 0.0388],
        [0.1157, 0.0453]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0820],
        [0.1221],
        [0.1147],
        [0.0495],
        [0.0907],
        [0.0770],
        [0.0850],
        [0.0946],
        [0.1035],
        [0.1190],
        [0.0746],
        [0.0586],
        [0.0828],
        [0.0908],
        [0.0850],
        [0.0883]], device='cuda:0', dtype=torch.float16)/tensor([[0.0820, 0.1221, 0.1147, 0.0495, 0.0907, 0.0770, 0.0850, 0.0946, 0.1035,
         0.1190, 0.0746, 0.0586, 0.0828, 0.0908, 0.0850, 0.0883]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0256],
        [0.0187],
        [0.0670],
        [0.0287],
        [0.0415],
        [0.0281],
        [0.0188],
        [0.0275],
        [0.0474],
        [0.0306],
        [0.0459],
        [0.0122],
        [0.0120],
        [0.0406],
        [0.0267],
        [0.0511]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0187, 0.0670, 0.0287, 0.0415, 0.0281, 0.0188, 0.0275, 0.0474,
         0.0306, 0.0459, 0.0122, 0.0120, 0.0406, 0.0267, 0.0511]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0820, 0.0256],
        [0.1221, 0.0187],
        [0.1147, 0.0670],
        [0.0495, 0.0287],
        [0.0907, 0.0415],
        [0.0770, 0.0281],
        [0.0850, 0.0188],
        [0.0946, 0.0275],
        [0.1035, 0.0474],
        [0.1190, 0.0306],
        [0.0746, 0.0459],
        [0.0586, 0.0122],
        [0.0828, 0.0120],
        [0.0908, 0.0406],
        [0.0850, 0.0267],
        [0.0883, 0.0511]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1069],
        [0.0906],
        [0.0469],
        [0.1211],
        [0.0868],
        [0.1216],
        [0.0607],
        [0.0418],
        [0.0663],
        [0.0880],
        [0.0739],
        [0.0688],
        [0.0602],
        [0.0776],
        [0.0853],
        [0.0933]], device='cuda:0', dtype=torch.float16)/tensor([[0.1069, 0.0906, 0.0469, 0.1211, 0.0868, 0.1216, 0.0607, 0.0418, 0.0663,
         0.0880, 0.0739, 0.0688, 0.0602, 0.0776, 0.0853, 0.0933]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0364],
        [0.0378],
        [0.0451],
        [0.0288],
        [0.0388],
        [0.0300],
        [0.0216],
        [0.0042],
        [0.0136],
        [0.0173],
        [0.0266],
        [0.0366],
        [0.0120],
        [0.0482],
        [0.0343],
        [0.0333]], device='cuda:0', dtype=torch.float16)/tensor([[0.0364, 0.0378, 0.0451, 0.0288, 0.0388, 0.0300, 0.0216, 0.0042, 0.0136,
         0.0173, 0.0266, 0.0366, 0.0120, 0.0482, 0.0343, 0.0333]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1069, 0.0364],
        [0.0906, 0.0378],
        [0.0469, 0.0451],
        [0.1211, 0.0288],
        [0.0868, 0.0388],
        [0.1216, 0.0300],
        [0.0607, 0.0216],
        [0.0418, 0.0042],
        [0.0663, 0.0136],
        [0.0880, 0.0173],
        [0.0739, 0.0266],
        [0.0688, 0.0366],
        [0.0602, 0.0120],
        [0.0776, 0.0482],
        [0.0853, 0.0343],
        [0.0933, 0.0333]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0796],
        [0.1659],
        [0.0714],
        [0.0802],
        [0.0654],
        [0.1028],
        [0.0980],
        [0.0416],
        [0.1194],
        [0.0891],
        [0.1307],
        [0.0887],
        [0.0880],
        [0.0889],
        [0.1431],
        [0.1305]], device='cuda:0', dtype=torch.float16)/tensor([[0.0796, 0.1659, 0.0714, 0.0802, 0.0654, 0.1028, 0.0980, 0.0416, 0.1194,
         0.0891, 0.1307, 0.0887, 0.0880, 0.0889, 0.1431, 0.1305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0364],
        [0.0783],
        [0.0142],
        [0.0125],
        [0.0388],
        [0.0390],
        [0.0408],
        [0.0098],
        [0.0350],
        [0.0177],
        [0.0253],
        [0.0555],
        [0.0164],
        [0.0232],
        [0.0257],
        [0.0181]], device='cuda:0', dtype=torch.float16)/tensor([[0.0364, 0.0783, 0.0142, 0.0125, 0.0388, 0.0390, 0.0408, 0.0098, 0.0350,
         0.0177, 0.0253, 0.0555, 0.0164, 0.0232, 0.0257, 0.0181]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0796, 0.0364],
        [0.1659, 0.0783],
        [0.0714, 0.0142],
        [0.0802, 0.0125],
        [0.0654, 0.0388],
        [0.1028, 0.0390],
        [0.0980, 0.0408],
        [0.0416, 0.0098],
        [0.1194, 0.0350],
        [0.0891, 0.0177],
        [0.1307, 0.0253],
        [0.0887, 0.0555],
        [0.0880, 0.0164],
        [0.0889, 0.0232],
        [0.1431, 0.0257],
        [0.1305, 0.0181]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0303],
        [0.1230],
        [0.1283],
        [0.0918],
        [0.1152],
        [0.0759],
        [0.0921],
        [0.0797],
        [0.1053],
        [0.1171],
        [0.0936],
        [0.0916],
        [0.1249],
        [0.0949],
        [0.0825],
        [0.0674]], device='cuda:0', dtype=torch.float16)/tensor([[0.0303, 0.1230, 0.1283, 0.0918, 0.1152, 0.0759, 0.0921, 0.0797, 0.1053,
         0.1171, 0.0936, 0.0916, 0.1249, 0.0949, 0.0825, 0.0674]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0105],
        [0.0168],
        [0.0423],
        [0.0220],
        [0.0424],
        [0.0111],
        [0.0277],
        [0.0211],
        [0.0233],
        [0.0205],
        [0.0390],
        [0.0264],
        [0.0177],
        [0.0227],
        [0.0289],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0105, 0.0168, 0.0423, 0.0220, 0.0424, 0.0111, 0.0277, 0.0211, 0.0233,
         0.0205, 0.0390, 0.0264, 0.0177, 0.0227, 0.0289, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0303, 0.0105],
        [0.1230, 0.0168],
        [0.1283, 0.0423],
        [0.0918, 0.0220],
        [0.1152, 0.0424],
        [0.0759, 0.0111],
        [0.0921, 0.0277],
        [0.0797, 0.0211],
        [0.1053, 0.0233],
        [0.1171, 0.0205],
        [0.0936, 0.0390],
        [0.0916, 0.0264],
        [0.1249, 0.0177],
        [0.0949, 0.0227],
        [0.0825, 0.0289],
        [0.0674, 0.0115]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0430],
        [0.0784],
        [0.0809],
        [0.0632],
        [0.1514],
        [0.0963],
        [0.0683],
        [0.0852],
        [0.0956],
        [0.0839],
        [0.1174],
        [0.0707],
        [0.1136],
        [0.1129],
        [0.1199],
        [0.1013]], device='cuda:0', dtype=torch.float16)/tensor([[0.0430, 0.0784, 0.0809, 0.0632, 0.1514, 0.0963, 0.0683, 0.0852, 0.0956,
         0.0839, 0.1174, 0.0707, 0.1136, 0.1129, 0.1199, 0.1013]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0287],
        [0.0249],
        [0.0426],
        [0.0272],
        [0.0357],
        [0.0205],
        [0.0371],
        [0.0177],
        [0.0360],
        [0.0084],
        [0.0464],
        [0.0547],
        [0.0178],
        [0.0279],
        [0.0824],
        [0.0103]], device='cuda:0', dtype=torch.float16)/tensor([[0.0287, 0.0249, 0.0426, 0.0272, 0.0357, 0.0205, 0.0371, 0.0177, 0.0360,
         0.0084, 0.0464, 0.0547, 0.0178, 0.0279, 0.0824, 0.0103]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0430, 0.0287],
        [0.0784, 0.0249],
        [0.0809, 0.0426],
        [0.0632, 0.0272],
        [0.1514, 0.0357],
        [0.0963, 0.0205],
        [0.0683, 0.0371],
        [0.0852, 0.0177],
        [0.0956, 0.0360],
        [0.0839, 0.0084],
        [0.1174, 0.0464],
        [0.0707, 0.0547],
        [0.1136, 0.0178],
        [0.1129, 0.0279],
        [0.1199, 0.0824],
        [0.1013, 0.0103]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1057],
        [0.0630],
        [0.0787],
        [0.0958],
        [0.0797],
        [0.0842],
        [0.1006],
        [0.0440]], device='cuda:0', dtype=torch.float16)/tensor([[0.1057, 0.0630, 0.0787, 0.0958, 0.0797, 0.0842, 0.1006, 0.0440]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0211],
        [0.0401],
        [0.0378],
        [0.0199],
        [0.0275],
        [0.0310],
        [0.0286],
        [0.0175]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0401, 0.0378, 0.0199, 0.0275, 0.0310, 0.0286, 0.0175]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1057, 0.0211],
        [0.0630, 0.0401],
        [0.0787, 0.0378],
        [0.0958, 0.0199],
        [0.0797, 0.0275],
        [0.0842, 0.0310],
        [0.1006, 0.0286],
        [0.0440, 0.0175]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type auxiliary, variation 5 and batchsize 16: 0:03:35.209244
path ['42', 'en', 'llama', 'SA', 'auxiliary', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA modal 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 313.63it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0936],
        [0.0565],
        [0.0564],
        [0.1595],
        [0.0714],
        [0.0547],
        [0.0378],
        [0.0225],
        [0.0540],
        [0.0900],
        [0.1052],
        [0.0770],
        [0.0317],
        [0.0837],
        [0.0576],
        [0.0580]], device='cuda:0', dtype=torch.float16)/tensor([[0.0936, 0.0565, 0.0564, 0.1595, 0.0714, 0.0547, 0.0378, 0.0225, 0.0540,
         0.0900, 0.1052, 0.0770, 0.0317, 0.0837, 0.0576, 0.0580]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0390],
        [0.0249],
        [0.0429],
        [0.0999],
        [0.0170],
        [0.0158],
        [0.0396],
        [0.0035],
        [0.0500],
        [0.0789],
        [0.0590],
        [0.0187],
        [0.0172],
        [0.0220],
        [0.0311],
        [0.0508]], device='cuda:0', dtype=torch.float16)/tensor([[0.0390, 0.0249, 0.0429, 0.0999, 0.0170, 0.0158, 0.0396, 0.0035, 0.0500,
         0.0789, 0.0590, 0.0187, 0.0172, 0.0220, 0.0311, 0.0508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0936, 0.0390],
        [0.0565, 0.0249],
        [0.0564, 0.0429],
        [0.1595, 0.0999],
        [0.0714, 0.0170],
        [0.0547, 0.0158],
        [0.0378, 0.0396],
        [0.0225, 0.0035],
        [0.0540, 0.0500],
        [0.0900, 0.0789],
        [0.1052, 0.0590],
        [0.0770, 0.0187],
        [0.0317, 0.0172],
        [0.0837, 0.0220],
        [0.0576, 0.0311],
        [0.0580, 0.0508]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1023],
        [0.0435],
        [0.0493],
        [0.0387],
        [0.0309],
        [0.0805],
        [0.0692],
        [0.0393],
        [0.0590],
        [0.0701],
        [0.0469],
        [0.0416],
        [0.0432],
        [0.1013],
        [0.0441],
        [0.0597]], device='cuda:0', dtype=torch.float16)/tensor([[0.1023, 0.0435, 0.0493, 0.0387, 0.0309, 0.0805, 0.0692, 0.0393, 0.0590,
         0.0701, 0.0469, 0.0416, 0.0432, 0.1013, 0.0441, 0.0597]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0243],
        [0.0497],
        [0.0504],
        [0.0252],
        [0.0218],
        [0.0204],
        [0.0314],
        [0.0151],
        [0.0648],
        [0.0235],
        [0.0395],
        [0.0432],
        [0.0555],
        [0.0826],
        [0.0157],
        [0.0203]], device='cuda:0', dtype=torch.float16)/tensor([[0.0243, 0.0497, 0.0504, 0.0252, 0.0218, 0.0204, 0.0314, 0.0151, 0.0648,
         0.0235, 0.0395, 0.0432, 0.0555, 0.0826, 0.0157, 0.0203]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1023, 0.0243],
        [0.0435, 0.0497],
        [0.0493, 0.0504],
        [0.0387, 0.0252],
        [0.0309, 0.0218],
        [0.0805, 0.0204],
        [0.0692, 0.0314],
        [0.0393, 0.0151],
        [0.0590, 0.0648],
        [0.0701, 0.0235],
        [0.0469, 0.0395],
        [0.0416, 0.0432],
        [0.0432, 0.0555],
        [0.1013, 0.0826],
        [0.0441, 0.0157],
        [0.0597, 0.0203]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0447],
        [0.0427],
        [0.0550],
        [0.0608],
        [0.0627],
        [0.0872],
        [0.0703],
        [0.0690],
        [0.0750],
        [0.0289],
        [0.1891],
        [0.0757],
        [0.0363],
        [0.0683],
        [0.0783],
        [0.0494]], device='cuda:0', dtype=torch.float16)/tensor([[0.0447, 0.0427, 0.0550, 0.0608, 0.0627, 0.0872, 0.0703, 0.0690, 0.0750,
         0.0289, 0.1891, 0.0757, 0.0363, 0.0683, 0.0783, 0.0494]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0221],
        [0.0227],
        [0.0210],
        [0.0111],
        [0.0470],
        [0.0175],
        [0.0530],
        [0.0460],
        [0.0091],
        [0.0063],
        [0.0399],
        [0.0375],
        [0.0363],
        [0.0215],
        [0.0252],
        [0.0426]], device='cuda:0', dtype=torch.float16)/tensor([[0.0221, 0.0227, 0.0210, 0.0111, 0.0470, 0.0175, 0.0530, 0.0460, 0.0091,
         0.0063, 0.0399, 0.0375, 0.0363, 0.0215, 0.0252, 0.0426]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0447, 0.0221],
        [0.0427, 0.0227],
        [0.0550, 0.0210],
        [0.0608, 0.0111],
        [0.0627, 0.0470],
        [0.0872, 0.0175],
        [0.0703, 0.0530],
        [0.0690, 0.0460],
        [0.0750, 0.0091],
        [0.0289, 0.0063],
        [0.1891, 0.0399],
        [0.0757, 0.0375],
        [0.0363, 0.0363],
        [0.0683, 0.0215],
        [0.0783, 0.0252],
        [0.0494, 0.0426]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0429],
        [0.1084],
        [0.0784],
        [0.0531],
        [0.0400],
        [0.1122],
        [0.0294],
        [0.0507],
        [0.0538],
        [0.0440],
        [0.0386],
        [0.0770],
        [0.0582],
        [0.0721],
        [0.0424],
        [0.0579]], device='cuda:0', dtype=torch.float16)/tensor([[0.0429, 0.1084, 0.0784, 0.0531, 0.0400, 0.1122, 0.0294, 0.0507, 0.0538,
         0.0440, 0.0386, 0.0770, 0.0582, 0.0721, 0.0424, 0.0579]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0460],
        [0.0355],
        [0.0498],
        [0.0120],
        [0.0081],
        [0.1014],
        [0.0144],
        [0.0651],
        [0.0190],
        [0.0376],
        [0.0678],
        [0.0179],
        [0.0316],
        [0.0434],
        [0.0401],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0460, 0.0355, 0.0498, 0.0120, 0.0081, 0.1014, 0.0144, 0.0651, 0.0190,
         0.0376, 0.0678, 0.0179, 0.0316, 0.0434, 0.0401, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0429, 0.0460],
        [0.1084, 0.0355],
        [0.0784, 0.0498],
        [0.0531, 0.0120],
        [0.0400, 0.0081],
        [0.1122, 0.1014],
        [0.0294, 0.0144],
        [0.0507, 0.0651],
        [0.0538, 0.0190],
        [0.0440, 0.0376],
        [0.0386, 0.0678],
        [0.0770, 0.0179],
        [0.0582, 0.0316],
        [0.0721, 0.0434],
        [0.0424, 0.0401],
        [0.0579, 0.0267]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0235],
        [0.0661],
        [0.0469],
        [0.0945],
        [0.0897],
        [0.0562],
        [0.0428],
        [0.0699],
        [0.0731],
        [0.0406],
        [0.0625],
        [0.0629],
        [0.0626],
        [0.0687],
        [0.1390],
        [0.0409]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0661, 0.0469, 0.0945, 0.0897, 0.0562, 0.0428, 0.0699, 0.0731,
         0.0406, 0.0625, 0.0629, 0.0626, 0.0687, 0.1390, 0.0409]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0159],
        [0.0626],
        [0.0294],
        [0.0253],
        [0.1411],
        [0.0516],
        [0.0422],
        [0.0473],
        [0.0754],
        [0.0413],
        [0.0291],
        [0.0184],
        [0.0230],
        [0.0216],
        [0.0607],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0626, 0.0294, 0.0253, 0.1411, 0.0516, 0.0422, 0.0473, 0.0754,
         0.0413, 0.0291, 0.0184, 0.0230, 0.0216, 0.0607, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0235, 0.0159],
        [0.0661, 0.0626],
        [0.0469, 0.0294],
        [0.0945, 0.0253],
        [0.0897, 0.1411],
        [0.0562, 0.0516],
        [0.0428, 0.0422],
        [0.0699, 0.0473],
        [0.0731, 0.0754],
        [0.0406, 0.0413],
        [0.0625, 0.0291],
        [0.0629, 0.0184],
        [0.0626, 0.0230],
        [0.0687, 0.0216],
        [0.1390, 0.0607],
        [0.0409, 0.0189]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0775],
        [0.0445],
        [0.0606],
        [0.0855],
        [0.0405],
        [0.0334],
        [0.1599],
        [0.0455],
        [0.0275],
        [0.0479],
        [0.1211],
        [0.0399],
        [0.0217],
        [0.0315],
        [0.0930],
        [0.0472]], device='cuda:0', dtype=torch.float16)/tensor([[0.0775, 0.0445, 0.0606, 0.0855, 0.0405, 0.0334, 0.1599, 0.0455, 0.0275,
         0.0479, 0.1211, 0.0399, 0.0217, 0.0315, 0.0930, 0.0472]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0326],
        [0.0316],
        [0.0241],
        [0.0359],
        [0.0323],
        [0.0282],
        [0.1049],
        [0.0292],
        [0.0064],
        [0.0433],
        [0.0525],
        [0.0212],
        [0.0095],
        [0.0132],
        [0.0506],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0326, 0.0316, 0.0241, 0.0359, 0.0323, 0.0282, 0.1049, 0.0292, 0.0064,
         0.0433, 0.0525, 0.0212, 0.0095, 0.0132, 0.0506, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0775, 0.0326],
        [0.0445, 0.0316],
        [0.0606, 0.0241],
        [0.0855, 0.0359],
        [0.0405, 0.0323],
        [0.0334, 0.0282],
        [0.1599, 0.1049],
        [0.0455, 0.0292],
        [0.0275, 0.0064],
        [0.0479, 0.0433],
        [0.1211, 0.0525],
        [0.0399, 0.0212],
        [0.0217, 0.0095],
        [0.0315, 0.0132],
        [0.0930, 0.0506],
        [0.0472, 0.0123]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0431],
        [0.0749],
        [0.0590],
        [0.0740],
        [0.0352],
        [0.0435],
        [0.0338],
        [0.0494],
        [0.0695],
        [0.0922],
        [0.0507],
        [0.2428],
        [0.0650],
        [0.0566],
        [0.0501],
        [0.0684]], device='cuda:0', dtype=torch.float16)/tensor([[0.0431, 0.0749, 0.0590, 0.0740, 0.0352, 0.0435, 0.0338, 0.0494, 0.0695,
         0.0922, 0.0507, 0.2428, 0.0650, 0.0566, 0.0501, 0.0684]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0138],
        [0.0503],
        [0.0130],
        [0.0505],
        [0.0117],
        [0.0147],
        [0.0089],
        [0.0196],
        [0.0190],
        [0.0297],
        [0.0365],
        [0.0813],
        [0.0417],
        [0.0325],
        [0.0381],
        [0.0157]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0503, 0.0130, 0.0505, 0.0117, 0.0147, 0.0089, 0.0196, 0.0190,
         0.0297, 0.0365, 0.0813, 0.0417, 0.0325, 0.0381, 0.0157]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0431, 0.0138],
        [0.0749, 0.0503],
        [0.0590, 0.0130],
        [0.0740, 0.0505],
        [0.0352, 0.0117],
        [0.0435, 0.0147],
        [0.0338, 0.0089],
        [0.0494, 0.0196],
        [0.0695, 0.0190],
        [0.0922, 0.0297],
        [0.0507, 0.0365],
        [0.2428, 0.0813],
        [0.0650, 0.0417],
        [0.0566, 0.0325],
        [0.0501, 0.0381],
        [0.0684, 0.0157]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0934],
        [0.0326],
        [0.0456],
        [0.0644],
        [0.0792],
        [0.0545],
        [0.0497],
        [0.0620],
        [0.0307],
        [0.0587],
        [0.0493],
        [0.0604],
        [0.0813],
        [0.0667],
        [0.0561],
        [0.0992]], device='cuda:0', dtype=torch.float16)/tensor([[0.0934, 0.0326, 0.0456, 0.0644, 0.0792, 0.0545, 0.0497, 0.0620, 0.0307,
         0.0587, 0.0493, 0.0604, 0.0813, 0.0667, 0.0561, 0.0992]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0445],
        [0.0372],
        [0.0334],
        [0.0244],
        [0.0646],
        [0.0292],
        [0.0185],
        [0.0483],
        [0.0365],
        [0.0565],
        [0.0171],
        [0.0533],
        [0.0658],
        [0.0524],
        [0.0365],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0372, 0.0334, 0.0244, 0.0646, 0.0292, 0.0185, 0.0483, 0.0365,
         0.0565, 0.0171, 0.0533, 0.0658, 0.0524, 0.0365, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0934, 0.0445],
        [0.0326, 0.0372],
        [0.0456, 0.0334],
        [0.0644, 0.0244],
        [0.0792, 0.0646],
        [0.0545, 0.0292],
        [0.0497, 0.0185],
        [0.0620, 0.0483],
        [0.0307, 0.0365],
        [0.0587, 0.0565],
        [0.0493, 0.0171],
        [0.0604, 0.0533],
        [0.0813, 0.0658],
        [0.0667, 0.0524],
        [0.0561, 0.0365],
        [0.0992, 0.0293]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1429],
        [0.0674],
        [0.0478],
        [0.0643],
        [0.0479],
        [0.0691],
        [0.0519],
        [0.0397],
        [0.0860],
        [0.0599],
        [0.0853],
        [0.0138],
        [0.0752],
        [0.0550],
        [0.0726],
        [0.0530]], device='cuda:0', dtype=torch.float16)/tensor([[0.1429, 0.0674, 0.0478, 0.0643, 0.0479, 0.0691, 0.0519, 0.0397, 0.0860,
         0.0599, 0.0853, 0.0138, 0.0752, 0.0550, 0.0726, 0.0530]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0391],
        [0.0439],
        [0.0341],
        [0.0525],
        [0.0640],
        [0.0264],
        [0.0480],
        [0.0322],
        [0.0509],
        [0.0412],
        [0.0193],
        [0.0082],
        [0.0663],
        [0.0210],
        [0.0188],
        [0.0212]], device='cuda:0', dtype=torch.float16)/tensor([[0.0391, 0.0439, 0.0341, 0.0525, 0.0640, 0.0264, 0.0480, 0.0322, 0.0509,
         0.0412, 0.0193, 0.0082, 0.0663, 0.0210, 0.0188, 0.0212]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1429, 0.0391],
        [0.0674, 0.0439],
        [0.0478, 0.0341],
        [0.0643, 0.0525],
        [0.0479, 0.0640],
        [0.0691, 0.0264],
        [0.0519, 0.0480],
        [0.0397, 0.0322],
        [0.0860, 0.0509],
        [0.0599, 0.0412],
        [0.0853, 0.0193],
        [0.0138, 0.0082],
        [0.0752, 0.0663],
        [0.0550, 0.0210],
        [0.0726, 0.0188],
        [0.0530, 0.0212]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0567],
        [0.1138],
        [0.0834],
        [0.0648],
        [0.0571],
        [0.0329],
        [0.1082],
        [0.0616],
        [0.0570],
        [0.0621],
        [0.0467],
        [0.0746],
        [0.0975],
        [0.0784],
        [0.0978],
        [0.0667]], device='cuda:0', dtype=torch.float16)/tensor([[0.0567, 0.1138, 0.0834, 0.0648, 0.0571, 0.0329, 0.1082, 0.0616, 0.0570,
         0.0621, 0.0467, 0.0746, 0.0975, 0.0784, 0.0978, 0.0667]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0358],
        [0.0358],
        [0.0394],
        [0.0674],
        [0.0392],
        [0.0416],
        [0.0444],
        [0.0238],
        [0.0519],
        [0.0245],
        [0.0521],
        [0.0260],
        [0.0601],
        [0.0244],
        [0.0570],
        [0.0672]], device='cuda:0', dtype=torch.float16)/tensor([[0.0358, 0.0358, 0.0394, 0.0674, 0.0392, 0.0416, 0.0444, 0.0238, 0.0519,
         0.0245, 0.0521, 0.0260, 0.0601, 0.0244, 0.0570, 0.0672]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0567, 0.0358],
        [0.1138, 0.0358],
        [0.0834, 0.0394],
        [0.0648, 0.0674],
        [0.0571, 0.0392],
        [0.0329, 0.0416],
        [0.1082, 0.0444],
        [0.0616, 0.0238],
        [0.0570, 0.0519],
        [0.0621, 0.0245],
        [0.0467, 0.0521],
        [0.0746, 0.0260],
        [0.0975, 0.0601],
        [0.0784, 0.0244],
        [0.0978, 0.0570],
        [0.0667, 0.0672]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0443],
        [0.0373],
        [0.0391],
        [0.0622],
        [0.1183],
        [0.0620],
        [0.0353],
        [0.0464],
        [0.0665],
        [0.1069],
        [0.0428],
        [0.0525],
        [0.0930],
        [0.0560],
        [0.0668],
        [0.0326]], device='cuda:0', dtype=torch.float16)/tensor([[0.0443, 0.0373, 0.0391, 0.0622, 0.1183, 0.0620, 0.0353, 0.0464, 0.0665,
         0.1069, 0.0428, 0.0525, 0.0930, 0.0560, 0.0668, 0.0326]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0182],
        [0.0457],
        [0.0450],
        [0.0786],
        [0.1103],
        [0.0277],
        [0.0126],
        [0.0127],
        [0.0241],
        [0.0316],
        [0.0146],
        [0.0558],
        [0.0367],
        [0.0518],
        [0.0589],
        [0.0079]], device='cuda:0', dtype=torch.float16)/tensor([[0.0182, 0.0457, 0.0450, 0.0786, 0.1103, 0.0277, 0.0126, 0.0127, 0.0241,
         0.0316, 0.0146, 0.0558, 0.0367, 0.0518, 0.0589, 0.0079]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0443, 0.0182],
        [0.0373, 0.0457],
        [0.0391, 0.0450],
        [0.0622, 0.0786],
        [0.1183, 0.1103],
        [0.0620, 0.0277],
        [0.0353, 0.0126],
        [0.0464, 0.0127],
        [0.0665, 0.0241],
        [0.1069, 0.0316],
        [0.0428, 0.0146],
        [0.0525, 0.0558],
        [0.0930, 0.0367],
        [0.0560, 0.0518],
        [0.0668, 0.0589],
        [0.0326, 0.0079]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0568],
        [0.0483],
        [0.0992],
        [0.0452],
        [0.0411],
        [0.1031],
        [0.0534],
        [0.0614],
        [0.0646],
        [0.0514],
        [0.0881],
        [0.0800],
        [0.0516],
        [0.0775],
        [0.0522],
        [0.0672]], device='cuda:0', dtype=torch.float16)/tensor([[0.0568, 0.0483, 0.0992, 0.0452, 0.0411, 0.1031, 0.0534, 0.0614, 0.0646,
         0.0514, 0.0881, 0.0800, 0.0516, 0.0775, 0.0522, 0.0672]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0595],
        [0.0271],
        [0.0340],
        [0.0246],
        [0.0347],
        [0.0345],
        [0.0362],
        [0.0283],
        [0.0574],
        [0.0498],
        [0.0247],
        [0.0627],
        [0.0466],
        [0.0184],
        [0.0075],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0595, 0.0271, 0.0340, 0.0246, 0.0347, 0.0345, 0.0362, 0.0283, 0.0574,
         0.0498, 0.0247, 0.0627, 0.0466, 0.0184, 0.0075, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0568, 0.0595],
        [0.0483, 0.0271],
        [0.0992, 0.0340],
        [0.0452, 0.0246],
        [0.0411, 0.0347],
        [0.1031, 0.0345],
        [0.0534, 0.0362],
        [0.0614, 0.0283],
        [0.0646, 0.0574],
        [0.0514, 0.0498],
        [0.0881, 0.0247],
        [0.0800, 0.0627],
        [0.0516, 0.0466],
        [0.0775, 0.0184],
        [0.0522, 0.0075],
        [0.0672, 0.0168]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0604],
        [0.0698],
        [0.0326],
        [0.0562],
        [0.0948],
        [0.1296],
        [0.0616],
        [0.0809]], device='cuda:0', dtype=torch.float16)/tensor([[0.0604, 0.0698, 0.0326, 0.0562, 0.0948, 0.1296, 0.0616, 0.0809]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0460],
        [0.0461],
        [0.0118],
        [0.0445],
        [0.0323],
        [0.0357],
        [0.0527],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0460, 0.0461, 0.0118, 0.0445, 0.0323, 0.0357, 0.0527, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0604, 0.0460],
        [0.0698, 0.0461],
        [0.0326, 0.0118],
        [0.0562, 0.0445],
        [0.0948, 0.0323],
        [0.1296, 0.0357],
        [0.0616, 0.0527],
        [0.0809, 0.0275]], device='cuda:0')
acc:  0.62
Time taken to execute the en SA task with prompt type modal, variation 0 and batchsize 16: 0:03:34.516089
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b SA modal 1 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 311.13it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0346],
        [0.0600],
        [0.0870],
        [0.0604],
        [0.0770],
        [0.0673],
        [0.0720],
        [0.0998],
        [0.0781],
        [0.0864],
        [0.0753],
        [0.1105],
        [0.0920],
        [0.0896],
        [0.1101],
        [0.1226]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0600, 0.0870, 0.0604, 0.0770, 0.0673, 0.0720, 0.0998, 0.0781,
         0.0864, 0.0753, 0.1105, 0.0920, 0.0896, 0.1101, 0.1226]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0366],
        [0.0765],
        [0.0476],
        [0.0250],
        [0.0384],
        [0.0496],
        [0.0374],
        [0.0759],
        [0.0250],
        [0.0451],
        [0.0422],
        [0.0334],
        [0.0197],
        [0.0454],
        [0.0386],
        [0.0151]], device='cuda:0', dtype=torch.float16)/tensor([[0.0366, 0.0765, 0.0476, 0.0250, 0.0384, 0.0496, 0.0374, 0.0759, 0.0250,
         0.0451, 0.0422, 0.0334, 0.0197, 0.0454, 0.0386, 0.0151]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0346, 0.0366],
        [0.0600, 0.0765],
        [0.0870, 0.0476],
        [0.0604, 0.0250],
        [0.0770, 0.0384],
        [0.0673, 0.0496],
        [0.0720, 0.0374],
        [0.0998, 0.0759],
        [0.0781, 0.0250],
        [0.0864, 0.0451],
        [0.0753, 0.0422],
        [0.1105, 0.0334],
        [0.0920, 0.0197],
        [0.0896, 0.0454],
        [0.1101, 0.0386],
        [0.1226, 0.0151]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0717],
        [0.0694],
        [0.0797],
        [0.0938],
        [0.1091],
        [0.0542],
        [0.0596],
        [0.0517],
        [0.0593],
        [0.0416],
        [0.0648],
        [0.0663],
        [0.1087],
        [0.1602],
        [0.0667],
        [0.1759]], device='cuda:0', dtype=torch.float16)/tensor([[0.0717, 0.0694, 0.0797, 0.0938, 0.1091, 0.0542, 0.0596, 0.0517, 0.0593,
         0.0416, 0.0648, 0.0663, 0.1087, 0.1602, 0.0667, 0.1759]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0415],
        [0.0320],
        [0.0861],
        [0.0518],
        [0.0236],
        [0.0664],
        [0.0692],
        [0.0586],
        [0.0377],
        [0.0611],
        [0.0554],
        [0.0176],
        [0.1021],
        [0.0705],
        [0.0197],
        [0.0657]], device='cuda:0', dtype=torch.float16)/tensor([[0.0415, 0.0320, 0.0861, 0.0518, 0.0236, 0.0664, 0.0692, 0.0586, 0.0377,
         0.0611, 0.0554, 0.0176, 0.1021, 0.0705, 0.0197, 0.0657]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0717, 0.0415],
        [0.0694, 0.0320],
        [0.0797, 0.0861],
        [0.0938, 0.0518],
        [0.1091, 0.0236],
        [0.0542, 0.0664],
        [0.0596, 0.0692],
        [0.0517, 0.0586],
        [0.0593, 0.0377],
        [0.0416, 0.0611],
        [0.0648, 0.0554],
        [0.0663, 0.0176],
        [0.1087, 0.1021],
        [0.1602, 0.0705],
        [0.0667, 0.0197],
        [0.1759, 0.0657]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0463],
        [0.1438],
        [0.0615],
        [0.1016],
        [0.0622],
        [0.0450],
        [0.0358],
        [0.0655],
        [0.0928],
        [0.0887],
        [0.0607],
        [0.0696],
        [0.0634],
        [0.0767],
        [0.0871],
        [0.0742]], device='cuda:0', dtype=torch.float16)/tensor([[0.0463, 0.1438, 0.0615, 0.1016, 0.0622, 0.0450, 0.0358, 0.0655, 0.0928,
         0.0887, 0.0607, 0.0696, 0.0634, 0.0767, 0.0871, 0.0742]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0787],
        [0.1790],
        [0.0771],
        [0.0289],
        [0.0632],
        [0.1024],
        [0.0287],
        [0.0307],
        [0.0717],
        [0.0293],
        [0.0621],
        [0.1029],
        [0.1111],
        [0.0240],
        [0.0485],
        [0.0394]], device='cuda:0', dtype=torch.float16)/tensor([[0.0787, 0.1790, 0.0771, 0.0289, 0.0632, 0.1024, 0.0287, 0.0307, 0.0717,
         0.0293, 0.0621, 0.1029, 0.1111, 0.0240, 0.0485, 0.0394]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0463, 0.0787],
        [0.1438, 0.1790],
        [0.0615, 0.0771],
        [0.1016, 0.0289],
        [0.0622, 0.0632],
        [0.0450, 0.1024],
        [0.0358, 0.0287],
        [0.0655, 0.0307],
        [0.0928, 0.0717],
        [0.0887, 0.0293],
        [0.0607, 0.0621],
        [0.0696, 0.1029],
        [0.0634, 0.1111],
        [0.0767, 0.0240],
        [0.0871, 0.0485],
        [0.0742, 0.0394]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0596],
        [0.0715],
        [0.0875],
        [0.1235],
        [0.0995],
        [0.0586],
        [0.0781],
        [0.0804],
        [0.0482],
        [0.0732],
        [0.0624],
        [0.4575],
        [0.0551],
        [0.0606],
        [0.0453],
        [0.0592]], device='cuda:0', dtype=torch.float16)/tensor([[0.0596, 0.0715, 0.0875, 0.1235, 0.0995, 0.0586, 0.0781, 0.0804, 0.0482,
         0.0732, 0.0624, 0.4575, 0.0551, 0.0606, 0.0453, 0.0592]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0112],
        [0.0532],
        [0.0601],
        [0.0351],
        [0.0191],
        [0.0648],
        [0.0313],
        [0.1514],
        [0.0530],
        [0.0511],
        [0.0079],
        [0.0724],
        [0.1036],
        [0.0515],
        [0.0307],
        [0.0903]], device='cuda:0', dtype=torch.float16)/tensor([[0.0112, 0.0532, 0.0601, 0.0351, 0.0191, 0.0648, 0.0313, 0.1514, 0.0530,
         0.0511, 0.0079, 0.0724, 0.1036, 0.0515, 0.0307, 0.0903]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0596, 0.0112],
        [0.0715, 0.0532],
        [0.0875, 0.0601],
        [0.1235, 0.0351],
        [0.0995, 0.0191],
        [0.0586, 0.0648],
        [0.0781, 0.0313],
        [0.0804, 0.1514],
        [0.0482, 0.0530],
        [0.0732, 0.0511],
        [0.0624, 0.0079],
        [0.4575, 0.0724],
        [0.0551, 0.1036],
        [0.0606, 0.0515],
        [0.0453, 0.0307],
        [0.0592, 0.0903]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0647],
        [0.0873],
        [0.0726],
        [0.0652],
        [0.0789],
        [0.0294],
        [0.0934],
        [0.1071],
        [0.0711],
        [0.0592],
        [0.0616],
        [0.1105],
        [0.0912],
        [0.1417],
        [0.0701],
        [0.0619]], device='cuda:0', dtype=torch.float16)/tensor([[0.0647, 0.0873, 0.0726, 0.0652, 0.0789, 0.0294, 0.0934, 0.1071, 0.0711,
         0.0592, 0.0616, 0.1105, 0.0912, 0.1417, 0.0701, 0.0619]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0380],
        [0.0669],
        [0.1661],
        [0.0371],
        [0.0311],
        [0.1020],
        [0.0331],
        [0.0498],
        [0.0722],
        [0.0286],
        [0.0476],
        [0.0322],
        [0.0627],
        [0.1439],
        [0.0782],
        [0.0735]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0669, 0.1661, 0.0371, 0.0311, 0.1020, 0.0331, 0.0498, 0.0722,
         0.0286, 0.0476, 0.0322, 0.0627, 0.1439, 0.0782, 0.0735]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0647, 0.0380],
        [0.0873, 0.0669],
        [0.0726, 0.1661],
        [0.0652, 0.0371],
        [0.0789, 0.0311],
        [0.0294, 0.1020],
        [0.0934, 0.0331],
        [0.1071, 0.0498],
        [0.0711, 0.0722],
        [0.0592, 0.0286],
        [0.0616, 0.0476],
        [0.1105, 0.0322],
        [0.0912, 0.0627],
        [0.1417, 0.1439],
        [0.0701, 0.0782],
        [0.0619, 0.0735]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0363],
        [0.0726],
        [0.0502],
        [0.0472],
        [0.0735],
        [0.0879],
        [0.0652],
        [0.0556],
        [0.0598],
        [0.0685],
        [0.1061],
        [0.0316],
        [0.0854],
        [0.0384],
        [0.0368],
        [0.0448]], device='cuda:0', dtype=torch.float16)/tensor([[0.0363, 0.0726, 0.0502, 0.0472, 0.0735, 0.0879, 0.0652, 0.0556, 0.0598,
         0.0685, 0.1061, 0.0316, 0.0854, 0.0384, 0.0368, 0.0448]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0744],
        [0.0602],
        [0.0707],
        [0.0530],
        [0.1213],
        [0.0163],
        [0.1059],
        [0.0437],
        [0.0688],
        [0.0879],
        [0.0324],
        [0.0618],
        [0.0195],
        [0.0240],
        [0.0656],
        [0.0589]], device='cuda:0', dtype=torch.float16)/tensor([[0.0744, 0.0602, 0.0707, 0.0530, 0.1213, 0.0163, 0.1059, 0.0437, 0.0688,
         0.0879, 0.0324, 0.0618, 0.0195, 0.0240, 0.0656, 0.0589]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0363, 0.0744],
        [0.0726, 0.0602],
        [0.0502, 0.0707],
        [0.0472, 0.0530],
        [0.0735, 0.1213],
        [0.0879, 0.0163],
        [0.0652, 0.1059],
        [0.0556, 0.0437],
        [0.0598, 0.0688],
        [0.0685, 0.0879],
        [0.1061, 0.0324],
        [0.0316, 0.0618],
        [0.0854, 0.0195],
        [0.0384, 0.0240],
        [0.0368, 0.0656],
        [0.0448, 0.0589]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0564],
        [0.0757],
        [0.0547],
        [0.0933],
        [0.0427],
        [0.1340],
        [0.0532],
        [0.0383],
        [0.0488],
        [0.0759],
        [0.0815],
        [0.1687],
        [0.0754],
        [0.0393],
        [0.1438],
        [0.0678]], device='cuda:0', dtype=torch.float16)/tensor([[0.0564, 0.0757, 0.0547, 0.0933, 0.0427, 0.1340, 0.0532, 0.0383, 0.0488,
         0.0759, 0.0815, 0.1687, 0.0754, 0.0393, 0.1438, 0.0678]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0765],
        [0.0449],
        [0.0809],
        [0.0398],
        [0.1133],
        [0.0568],
        [0.0733],
        [0.0174],
        [0.0890],
        [0.0230],
        [0.1149],
        [0.0661],
        [0.0754],
        [0.0957],
        [0.0403],
        [0.0589]], device='cuda:0', dtype=torch.float16)/tensor([[0.0765, 0.0449, 0.0809, 0.0398, 0.1133, 0.0568, 0.0733, 0.0174, 0.0890,
         0.0230, 0.1149, 0.0661, 0.0754, 0.0957, 0.0403, 0.0589]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0564, 0.0765],
        [0.0757, 0.0449],
        [0.0547, 0.0809],
        [0.0933, 0.0398],
        [0.0427, 0.1133],
        [0.1340, 0.0568],
        [0.0532, 0.0733],
        [0.0383, 0.0174],
        [0.0488, 0.0890],
        [0.0759, 0.0230],
        [0.0815, 0.1149],
        [0.1687, 0.0661],
        [0.0754, 0.0754],
        [0.0393, 0.0957],
        [0.1438, 0.0403],
        [0.0678, 0.0589]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0902],
        [0.0478],
        [0.0809],
        [0.0964],
        [0.0991],
        [0.1373],
        [0.0735],
        [0.0718],
        [0.1007],
        [0.0756],
        [0.0937],
        [0.0891],
        [0.0777],
        [0.0779],
        [0.0657],
        [0.1996]], device='cuda:0', dtype=torch.float16)/tensor([[0.0902, 0.0478, 0.0809, 0.0964, 0.0991, 0.1373, 0.0735, 0.0718, 0.1007,
         0.0756, 0.0937, 0.0891, 0.0777, 0.0779, 0.0657, 0.1996]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0487],
        [0.0559],
        [0.0433],
        [0.0197],
        [0.0295],
        [0.1848],
        [0.0951],
        [0.1221],
        [0.0809],
        [0.1058],
        [0.0814],
        [0.0473],
        [0.0827],
        [0.0051],
        [0.0804],
        [0.0770]], device='cuda:0', dtype=torch.float16)/tensor([[0.0487, 0.0559, 0.0433, 0.0197, 0.0295, 0.1848, 0.0951, 0.1221, 0.0809,
         0.1058, 0.0814, 0.0473, 0.0827, 0.0051, 0.0804, 0.0770]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0902, 0.0487],
        [0.0478, 0.0559],
        [0.0809, 0.0433],
        [0.0964, 0.0197],
        [0.0991, 0.0295],
        [0.1373, 0.1848],
        [0.0735, 0.0951],
        [0.0718, 0.1221],
        [0.1007, 0.0809],
        [0.0756, 0.1058],
        [0.0937, 0.0814],
        [0.0891, 0.0473],
        [0.0777, 0.0827],
        [0.0779, 0.0051],
        [0.0657, 0.0804],
        [0.1996, 0.0770]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0565],
        [0.0646],
        [0.1008],
        [0.0588],
        [0.0298],
        [0.1072],
        [0.0701],
        [0.0889],
        [0.0579],
        [0.0602],
        [0.1276],
        [0.1396],
        [0.1310],
        [0.0554],
        [0.0820],
        [0.1569]], device='cuda:0', dtype=torch.float16)/tensor([[0.0565, 0.0646, 0.1008, 0.0588, 0.0298, 0.1072, 0.0701, 0.0889, 0.0579,
         0.0602, 0.1276, 0.1396, 0.1310, 0.0554, 0.0820, 0.1569]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0461],
        [0.0870],
        [0.0239],
        [0.0392],
        [0.0397],
        [0.0273],
        [0.0814],
        [0.0391],
        [0.0904],
        [0.1091],
        [0.0465],
        [0.0649],
        [0.0696],
        [0.0233],
        [0.0573],
        [0.1877]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0870, 0.0239, 0.0392, 0.0397, 0.0273, 0.0814, 0.0391, 0.0904,
         0.1091, 0.0465, 0.0649, 0.0696, 0.0233, 0.0573, 0.1877]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0565, 0.0461],
        [0.0646, 0.0870],
        [0.1008, 0.0239],
        [0.0588, 0.0392],
        [0.0298, 0.0397],
        [0.1072, 0.0273],
        [0.0701, 0.0814],
        [0.0889, 0.0391],
        [0.0579, 0.0904],
        [0.0602, 0.1091],
        [0.1276, 0.0465],
        [0.1396, 0.0649],
        [0.1310, 0.0696],
        [0.0554, 0.0233],
        [0.0820, 0.0573],
        [0.1569, 0.1877]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0991],
        [0.1272],
        [0.0441],
        [0.0617],
        [0.0691],
        [0.1186],
        [0.0431],
        [0.0715],
        [0.0558],
        [0.0909],
        [0.1001],
        [0.0826],
        [0.1158],
        [0.0471],
        [0.1392],
        [0.0492]], device='cuda:0', dtype=torch.float16)/tensor([[0.0991, 0.1272, 0.0441, 0.0617, 0.0691, 0.1186, 0.0431, 0.0715, 0.0558,
         0.0909, 0.1001, 0.0826, 0.1158, 0.0471, 0.1392, 0.0492]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0382],
        [0.0665],
        [0.1218],
        [0.0704],
        [0.0534],
        [0.0655],
        [0.0377],
        [0.0947],
        [0.0751],
        [0.0909],
        [0.0424],
        [0.0294],
        [0.0385],
        [0.0840],
        [0.0396],
        [0.0864]], device='cuda:0', dtype=torch.float16)/tensor([[0.0382, 0.0665, 0.1218, 0.0704, 0.0534, 0.0655, 0.0377, 0.0947, 0.0751,
         0.0909, 0.0424, 0.0294, 0.0385, 0.0840, 0.0396, 0.0864]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0991, 0.0382],
        [0.1272, 0.0665],
        [0.0441, 0.1218],
        [0.0617, 0.0704],
        [0.0691, 0.0534],
        [0.1186, 0.0655],
        [0.0431, 0.0377],
        [0.0715, 0.0947],
        [0.0558, 0.0751],
        [0.0909, 0.0909],
        [0.1001, 0.0424],
        [0.0826, 0.0294],
        [0.1158, 0.0385],
        [0.0471, 0.0840],
        [0.1392, 0.0396],
        [0.0492, 0.0864]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0632],
        [0.0734],
        [0.0543],
        [0.1251],
        [0.0996],
        [0.0785],
        [0.0641],
        [0.0662],
        [0.0457],
        [0.1028],
        [0.0929],
        [0.0641],
        [0.0772],
        [0.1427],
        [0.0718],
        [0.0786]], device='cuda:0', dtype=torch.float16)/tensor([[0.0632, 0.0734, 0.0543, 0.1251, 0.0996, 0.0785, 0.0641, 0.0662, 0.0457,
         0.1028, 0.0929, 0.0641, 0.0772, 0.1427, 0.0718, 0.0786]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.1295],
        [0.0594],
        [0.1030],
        [0.0974],
        [0.0313],
        [0.0056],
        [0.1125],
        [0.0774],
        [0.0875],
        [0.0219],
        [0.0235],
        [0.0798],
        [0.0404],
        [0.0244],
        [0.0264],
        [0.1083]], device='cuda:0', dtype=torch.float16)/tensor([[0.1295, 0.0594, 0.1030, 0.0974, 0.0313, 0.0056, 0.1125, 0.0774, 0.0875,
         0.0219, 0.0235, 0.0798, 0.0404, 0.0244, 0.0264, 0.1083]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0632, 0.1295],
        [0.0734, 0.0594],
        [0.0543, 0.1030],
        [0.1251, 0.0974],
        [0.0996, 0.0313],
        [0.0785, 0.0056],
        [0.0641, 0.1125],
        [0.0662, 0.0774],
        [0.0457, 0.0875],
        [0.1028, 0.0219],
        [0.0929, 0.0235],
        [0.0641, 0.0798],
        [0.0772, 0.0404],
        [0.1427, 0.0244],
        [0.0718, 0.0264],
        [0.0786, 0.1083]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0613],
        [0.0556],
        [0.0688],
        [0.1024],
        [0.0367],
        [0.0516],
        [0.1204],
        [0.0775],
        [0.0648],
        [0.0477],
        [0.0524],
        [0.1040],
        [0.0630],
        [0.0806],
        [0.0588],
        [0.0818]], device='cuda:0', dtype=torch.float16)/tensor([[0.0613, 0.0556, 0.0688, 0.1024, 0.0367, 0.0516, 0.1204, 0.0775, 0.0648,
         0.0477, 0.0524, 0.1040, 0.0630, 0.0806, 0.0588, 0.0818]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0769],
        [0.0714],
        [0.0488],
        [0.0593],
        [0.0803],
        [0.0488],
        [0.0218],
        [0.0260],
        [0.0833],
        [0.0768],
        [0.0668],
        [0.0382],
        [0.0754],
        [0.0160],
        [0.0622],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0769, 0.0714, 0.0488, 0.0593, 0.0803, 0.0488, 0.0218, 0.0260, 0.0833,
         0.0768, 0.0668, 0.0382, 0.0754, 0.0160, 0.0622, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0613, 0.0769],
        [0.0556, 0.0714],
        [0.0688, 0.0488],
        [0.1024, 0.0593],
        [0.0367, 0.0803],
        [0.0516, 0.0488],
        [0.1204, 0.0218],
        [0.0775, 0.0260],
        [0.0648, 0.0833],
        [0.0477, 0.0768],
        [0.0524, 0.0668],
        [0.1040, 0.0382],
        [0.0630, 0.0754],
        [0.0806, 0.0160],
        [0.0588, 0.0622],
        [0.0818, 0.0341]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0813],
        [0.0645],
        [0.0542],
        [0.0418],
        [0.0608],
        [0.0440],
        [0.0982],
        [0.0376]], device='cuda:0', dtype=torch.float16)/tensor([[0.0813, 0.0645, 0.0542, 0.0418, 0.0608, 0.0440, 0.0982, 0.0376]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0456],
        [0.0436],
        [0.0759],
        [0.0825],
        [0.0528],
        [0.1302],
        [0.0735],
        [0.0655]], device='cuda:0', dtype=torch.float16)/tensor([[0.0456, 0.0436, 0.0759, 0.0825, 0.0528, 0.1302, 0.0735, 0.0655]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0813, 0.0456],
        [0.0645, 0.0436],
        [0.0542, 0.0759],
        [0.0418, 0.0825],
        [0.0608, 0.0528],
        [0.0440, 0.1302],
        [0.0982, 0.0735],
        [0.0376, 0.0655]], device='cuda:0')
acc:  0.885
Time taken to execute the en SA task with prompt type modal, variation 1 and batchsize 16: 0:03:33.187453
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b SA modal 2 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 306.88it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0883],
        [0.0688],
        [0.1143],
        [0.0825],
        [0.1033],
        [0.1229],
        [0.0667],
        [0.1381],
        [0.0991],
        [0.0874],
        [0.1295],
        [0.0710],
        [0.1105],
        [0.0677],
        [0.0713],
        [0.0737]], device='cuda:0', dtype=torch.float16)/tensor([[0.0883, 0.0688, 0.1143, 0.0825, 0.1033, 0.1229, 0.0667, 0.1381, 0.0991,
         0.0874, 0.1295, 0.0710, 0.1105, 0.0677, 0.0713, 0.0737]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0147],
        [0.0477],
        [0.0562],
        [0.0196],
        [0.0218],
        [0.0301],
        [0.0368],
        [0.0428],
        [0.0282],
        [0.0615],
        [0.0421],
        [0.0631],
        [0.0298],
        [0.0315],
        [0.0254],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0477, 0.0562, 0.0196, 0.0218, 0.0301, 0.0368, 0.0428, 0.0282,
         0.0615, 0.0421, 0.0631, 0.0298, 0.0315, 0.0254, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0883, 0.0147],
        [0.0688, 0.0477],
        [0.1143, 0.0562],
        [0.0825, 0.0196],
        [0.1033, 0.0218],
        [0.1229, 0.0301],
        [0.0667, 0.0368],
        [0.1381, 0.0428],
        [0.0991, 0.0282],
        [0.0874, 0.0615],
        [0.1295, 0.0421],
        [0.0710, 0.0631],
        [0.1105, 0.0298],
        [0.0677, 0.0315],
        [0.0713, 0.0254],
        [0.0737, 0.0109]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0635],
        [0.0489],
        [0.1123],
        [0.1032],
        [0.1064],
        [0.1008],
        [0.1191],
        [0.0969],
        [0.3696],
        [0.0518],
        [0.0756],
        [0.1989],
        [0.0480],
        [0.0704],
        [0.0368],
        [0.0847]], device='cuda:0', dtype=torch.float16)/tensor([[0.0635, 0.0489, 0.1123, 0.1032, 0.1064, 0.1008, 0.1191, 0.0969, 0.3696,
         0.0518, 0.0756, 0.1989, 0.0480, 0.0704, 0.0368, 0.0847]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0454],
        [0.0381],
        [0.0376],
        [0.0274],
        [0.0249],
        [0.0253],
        [0.0467],
        [0.0198],
        [0.0533],
        [0.0077],
        [0.0064],
        [0.0816],
        [0.0217],
        [0.0365],
        [0.0203],
        [0.0403]], device='cuda:0', dtype=torch.float16)/tensor([[0.0454, 0.0381, 0.0376, 0.0274, 0.0249, 0.0253, 0.0467, 0.0198, 0.0533,
         0.0077, 0.0064, 0.0816, 0.0217, 0.0365, 0.0203, 0.0403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0635, 0.0454],
        [0.0489, 0.0381],
        [0.1123, 0.0376],
        [0.1032, 0.0274],
        [0.1064, 0.0249],
        [0.1008, 0.0253],
        [0.1191, 0.0467],
        [0.0969, 0.0198],
        [0.3696, 0.0533],
        [0.0518, 0.0077],
        [0.0756, 0.0064],
        [0.1989, 0.0816],
        [0.0480, 0.0217],
        [0.0704, 0.0365],
        [0.0368, 0.0203],
        [0.0847, 0.0403]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1065],
        [0.0839],
        [0.0725],
        [0.0704],
        [0.0754],
        [0.1174],
        [0.0807],
        [0.1050],
        [0.0789],
        [0.0851],
        [0.0875],
        [0.0508],
        [0.0823],
        [0.0599],
        [0.0732],
        [0.0938]], device='cuda:0', dtype=torch.float16)/tensor([[0.1065, 0.0839, 0.0725, 0.0704, 0.0754, 0.1174, 0.0807, 0.1050, 0.0789,
         0.0851, 0.0875, 0.0508, 0.0823, 0.0599, 0.0732, 0.0938]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0469],
        [0.0344],
        [0.0218],
        [0.0359],
        [0.0437],
        [0.0521],
        [0.0290],
        [0.0105],
        [0.0198],
        [0.0229],
        [0.0447],
        [0.0296],
        [0.0431],
        [0.0448],
        [0.0234],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0469, 0.0344, 0.0218, 0.0359, 0.0437, 0.0521, 0.0290, 0.0105, 0.0198,
         0.0229, 0.0447, 0.0296, 0.0431, 0.0448, 0.0234, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1065, 0.0469],
        [0.0839, 0.0344],
        [0.0725, 0.0218],
        [0.0704, 0.0359],
        [0.0754, 0.0437],
        [0.1174, 0.0521],
        [0.0807, 0.0290],
        [0.1050, 0.0105],
        [0.0789, 0.0198],
        [0.0851, 0.0229],
        [0.0875, 0.0447],
        [0.0508, 0.0296],
        [0.0823, 0.0431],
        [0.0599, 0.0448],
        [0.0732, 0.0234],
        [0.0938, 0.0351]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0925],
        [0.0661],
        [0.0989],
        [0.1840],
        [0.0802],
        [0.0267],
        [0.1205],
        [0.0997],
        [0.1910],
        [0.0999],
        [0.1082],
        [0.1107],
        [0.1105],
        [0.1093],
        [0.1201],
        [0.1321]], device='cuda:0', dtype=torch.float16)/tensor([[0.0925, 0.0661, 0.0989, 0.1840, 0.0802, 0.0267, 0.1205, 0.0997, 0.1910,
         0.0999, 0.1082, 0.1107, 0.1105, 0.1093, 0.1201, 0.1321]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0371],
        [0.0253],
        [0.0390],
        [0.0626],
        [0.0284],
        [0.0106],
        [0.0152],
        [0.0273],
        [0.0984],
        [0.0682],
        [0.0462],
        [0.0275],
        [0.0543],
        [0.0658],
        [0.0344],
        [0.0464]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0253, 0.0390, 0.0626, 0.0284, 0.0106, 0.0152, 0.0273, 0.0984,
         0.0682, 0.0462, 0.0275, 0.0543, 0.0658, 0.0344, 0.0464]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0925, 0.0371],
        [0.0661, 0.0253],
        [0.0989, 0.0390],
        [0.1840, 0.0626],
        [0.0802, 0.0284],
        [0.0267, 0.0106],
        [0.1205, 0.0152],
        [0.0997, 0.0273],
        [0.1910, 0.0984],
        [0.0999, 0.0682],
        [0.1082, 0.0462],
        [0.1107, 0.0275],
        [0.1105, 0.0543],
        [0.1093, 0.0658],
        [0.1201, 0.0344],
        [0.1321, 0.0464]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1586],
        [0.0510],
        [0.1232],
        [0.0575],
        [0.0773],
        [0.1173],
        [0.0616],
        [0.1210],
        [0.0692],
        [0.0515],
        [0.0955],
        [0.0602],
        [0.0858],
        [0.0624],
        [0.0834],
        [0.1775]], device='cuda:0', dtype=torch.float16)/tensor([[0.1586, 0.0510, 0.1232, 0.0575, 0.0773, 0.1173, 0.0616, 0.1210, 0.0692,
         0.0515, 0.0955, 0.0602, 0.0858, 0.0624, 0.0834, 0.1775]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0395],
        [0.0312],
        [0.0382],
        [0.0253],
        [0.0351],
        [0.0590],
        [0.0253],
        [0.0449],
        [0.0526],
        [0.0298],
        [0.0557],
        [0.0296],
        [0.0313],
        [0.0237],
        [0.0551],
        [0.0936]], device='cuda:0', dtype=torch.float16)/tensor([[0.0395, 0.0312, 0.0382, 0.0253, 0.0351, 0.0590, 0.0253, 0.0449, 0.0526,
         0.0298, 0.0557, 0.0296, 0.0313, 0.0237, 0.0551, 0.0936]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1586, 0.0395],
        [0.0510, 0.0312],
        [0.1232, 0.0382],
        [0.0575, 0.0253],
        [0.0773, 0.0351],
        [0.1173, 0.0590],
        [0.0616, 0.0253],
        [0.1210, 0.0449],
        [0.0692, 0.0526],
        [0.0515, 0.0298],
        [0.0955, 0.0557],
        [0.0602, 0.0296],
        [0.0858, 0.0313],
        [0.0624, 0.0237],
        [0.0834, 0.0551],
        [0.1775, 0.0936]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0756],
        [0.0808],
        [0.0890],
        [0.0582],
        [0.0818],
        [0.0816],
        [0.0663],
        [0.0771],
        [0.1051],
        [0.1256],
        [0.0583],
        [0.0787],
        [0.0594],
        [0.0626],
        [0.0854],
        [0.1089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0808, 0.0890, 0.0582, 0.0818, 0.0816, 0.0663, 0.0771, 0.1051,
         0.1256, 0.0583, 0.0787, 0.0594, 0.0626, 0.0854, 0.1089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0492],
        [0.0490],
        [0.0240],
        [0.0522],
        [0.0197],
        [0.0666],
        [0.0170],
        [0.0471],
        [0.0428],
        [0.0598],
        [0.0338],
        [0.0537],
        [0.0421],
        [0.0172],
        [0.0332],
        [0.0340]], device='cuda:0', dtype=torch.float16)/tensor([[0.0492, 0.0490, 0.0240, 0.0522, 0.0197, 0.0666, 0.0170, 0.0471, 0.0428,
         0.0598, 0.0338, 0.0537, 0.0421, 0.0172, 0.0332, 0.0340]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0756, 0.0492],
        [0.0808, 0.0490],
        [0.0890, 0.0240],
        [0.0582, 0.0522],
        [0.0818, 0.0197],
        [0.0816, 0.0666],
        [0.0663, 0.0170],
        [0.0771, 0.0471],
        [0.1051, 0.0428],
        [0.1256, 0.0598],
        [0.0583, 0.0338],
        [0.0787, 0.0537],
        [0.0594, 0.0421],
        [0.0626, 0.0172],
        [0.0854, 0.0332],
        [0.1089, 0.0340]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0642],
        [0.0806],
        [0.0669],
        [0.0957],
        [0.0595],
        [0.1080],
        [0.1359],
        [0.0872],
        [0.0629],
        [0.1050],
        [0.1813],
        [0.0815],
        [0.0751],
        [0.0904],
        [0.0699],
        [0.0520]], device='cuda:0', dtype=torch.float16)/tensor([[0.0642, 0.0806, 0.0669, 0.0957, 0.0595, 0.1080, 0.1359, 0.0872, 0.0629,
         0.1050, 0.1813, 0.0815, 0.0751, 0.0904, 0.0699, 0.0520]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0580],
        [0.0489],
        [0.0131],
        [0.0690],
        [0.0258],
        [0.0472],
        [0.0411],
        [0.0235],
        [0.0138],
        [0.0566],
        [0.0427],
        [0.0188],
        [0.0249],
        [0.0427],
        [0.0270],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0580, 0.0489, 0.0131, 0.0690, 0.0258, 0.0472, 0.0411, 0.0235, 0.0138,
         0.0566, 0.0427, 0.0188, 0.0249, 0.0427, 0.0270, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0642, 0.0580],
        [0.0806, 0.0489],
        [0.0669, 0.0131],
        [0.0957, 0.0690],
        [0.0595, 0.0258],
        [0.1080, 0.0472],
        [0.1359, 0.0411],
        [0.0872, 0.0235],
        [0.0629, 0.0138],
        [0.1050, 0.0566],
        [0.1813, 0.0427],
        [0.0815, 0.0188],
        [0.0751, 0.0249],
        [0.0904, 0.0427],
        [0.0699, 0.0270],
        [0.0520, 0.0128]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0555],
        [0.1354],
        [0.0964],
        [0.0718],
        [0.0681],
        [0.0884],
        [0.0723],
        [0.1176],
        [0.0587],
        [0.1038],
        [0.0788],
        [0.0759],
        [0.0821],
        [0.0992],
        [0.1172],
        [0.1283]], device='cuda:0', dtype=torch.float16)/tensor([[0.0555, 0.1354, 0.0964, 0.0718, 0.0681, 0.0884, 0.0723, 0.1176, 0.0587,
         0.1038, 0.0788, 0.0759, 0.0821, 0.0992, 0.1172, 0.1283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0156],
        [0.0560],
        [0.0481],
        [0.0141],
        [0.0457],
        [0.0298],
        [0.0279],
        [0.0502],
        [0.0098],
        [0.0429],
        [0.0344],
        [0.0348],
        [0.0382],
        [0.0345],
        [0.0445],
        [0.0543]], device='cuda:0', dtype=torch.float16)/tensor([[0.0156, 0.0560, 0.0481, 0.0141, 0.0457, 0.0298, 0.0279, 0.0502, 0.0098,
         0.0429, 0.0344, 0.0348, 0.0382, 0.0345, 0.0445, 0.0543]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0555, 0.0156],
        [0.1354, 0.0560],
        [0.0964, 0.0481],
        [0.0718, 0.0141],
        [0.0681, 0.0457],
        [0.0884, 0.0298],
        [0.0723, 0.0279],
        [0.1176, 0.0502],
        [0.0587, 0.0098],
        [0.1038, 0.0429],
        [0.0788, 0.0344],
        [0.0759, 0.0348],
        [0.0821, 0.0382],
        [0.0992, 0.0345],
        [0.1172, 0.0445],
        [0.1283, 0.0543]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0925],
        [0.0883],
        [0.0829],
        [0.1082],
        [0.0709],
        [0.0695],
        [0.0713],
        [0.1031],
        [0.0649],
        [0.0636],
        [0.1118],
        [0.1080],
        [0.0768],
        [0.1105],
        [0.0627],
        [0.0927]], device='cuda:0', dtype=torch.float16)/tensor([[0.0925, 0.0883, 0.0829, 0.1082, 0.0709, 0.0695, 0.0713, 0.1031, 0.0649,
         0.0636, 0.1118, 0.1080, 0.0768, 0.1105, 0.0627, 0.0927]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0234],
        [0.0588],
        [0.0251],
        [0.0357],
        [0.0385],
        [0.0361],
        [0.0479],
        [0.0303],
        [0.0551],
        [0.0129],
        [0.0637],
        [0.0201],
        [0.0488],
        [0.0543],
        [0.0418],
        [0.0285]], device='cuda:0', dtype=torch.float16)/tensor([[0.0234, 0.0588, 0.0251, 0.0357, 0.0385, 0.0361, 0.0479, 0.0303, 0.0551,
         0.0129, 0.0637, 0.0201, 0.0488, 0.0543, 0.0418, 0.0285]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0925, 0.0234],
        [0.0883, 0.0588],
        [0.0829, 0.0251],
        [0.1082, 0.0357],
        [0.0709, 0.0385],
        [0.0695, 0.0361],
        [0.0713, 0.0479],
        [0.1031, 0.0303],
        [0.0649, 0.0551],
        [0.0636, 0.0129],
        [0.1118, 0.0637],
        [0.1080, 0.0201],
        [0.0768, 0.0488],
        [0.1105, 0.0543],
        [0.0627, 0.0418],
        [0.0927, 0.0285]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0600],
        [0.0658],
        [0.0958],
        [0.1165],
        [0.0278],
        [0.0901],
        [0.0879],
        [0.0906],
        [0.0976],
        [0.0740],
        [0.0871],
        [0.1742],
        [0.1046],
        [0.0828],
        [0.0793],
        [0.0807]], device='cuda:0', dtype=torch.float16)/tensor([[0.0600, 0.0658, 0.0958, 0.1165, 0.0278, 0.0901, 0.0879, 0.0906, 0.0976,
         0.0740, 0.0871, 0.1742, 0.1046, 0.0828, 0.0793, 0.0807]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0088],
        [0.0347],
        [0.0277],
        [0.0384],
        [0.0083],
        [0.0356],
        [0.0372],
        [0.0334],
        [0.0252],
        [0.0174],
        [0.0489],
        [0.0398],
        [0.0284],
        [0.0413],
        [0.0236],
        [0.0573]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0347, 0.0277, 0.0384, 0.0083, 0.0356, 0.0372, 0.0334, 0.0252,
         0.0174, 0.0489, 0.0398, 0.0284, 0.0413, 0.0236, 0.0573]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0600, 0.0088],
        [0.0658, 0.0347],
        [0.0958, 0.0277],
        [0.1165, 0.0384],
        [0.0278, 0.0083],
        [0.0901, 0.0356],
        [0.0879, 0.0372],
        [0.0906, 0.0334],
        [0.0976, 0.0252],
        [0.0740, 0.0174],
        [0.0871, 0.0489],
        [0.1742, 0.0398],
        [0.1046, 0.0284],
        [0.0828, 0.0413],
        [0.0793, 0.0236],
        [0.0807, 0.0573]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0944],
        [0.1018],
        [0.0571],
        [0.1619],
        [0.0883],
        [0.0994],
        [0.0797],
        [0.1409],
        [0.0712],
        [0.1497],
        [0.0969],
        [0.0773],
        [0.1572],
        [0.1006],
        [0.0815],
        [0.0929]], device='cuda:0', dtype=torch.float16)/tensor([[0.0944, 0.1018, 0.0571, 0.1619, 0.0883, 0.0994, 0.0797, 0.1409, 0.0712,
         0.1497, 0.0969, 0.0773, 0.1572, 0.1006, 0.0815, 0.0929]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0600],
        [0.0445],
        [0.0130],
        [0.0982],
        [0.0451],
        [0.0434],
        [0.0345],
        [0.1080],
        [0.0336],
        [0.0764],
        [0.0280],
        [0.0251],
        [0.0472],
        [0.0324],
        [0.0219],
        [0.0299]], device='cuda:0', dtype=torch.float16)/tensor([[0.0600, 0.0445, 0.0130, 0.0982, 0.0451, 0.0434, 0.0345, 0.1080, 0.0336,
         0.0764, 0.0280, 0.0251, 0.0472, 0.0324, 0.0219, 0.0299]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0944, 0.0600],
        [0.1018, 0.0445],
        [0.0571, 0.0130],
        [0.1619, 0.0982],
        [0.0883, 0.0451],
        [0.0994, 0.0434],
        [0.0797, 0.0345],
        [0.1409, 0.1080],
        [0.0712, 0.0336],
        [0.1497, 0.0764],
        [0.0969, 0.0280],
        [0.0773, 0.0251],
        [0.1572, 0.0472],
        [0.1006, 0.0324],
        [0.0815, 0.0219],
        [0.0929, 0.0299]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0927],
        [0.0580],
        [0.0810],
        [0.0945],
        [0.0870],
        [0.1068],
        [0.0595],
        [0.0685],
        [0.0978],
        [0.0542],
        [0.1536],
        [0.0577],
        [0.0692],
        [0.1010],
        [0.0523],
        [0.0795]], device='cuda:0', dtype=torch.float16)/tensor([[0.0927, 0.0580, 0.0810, 0.0945, 0.0870, 0.1068, 0.0595, 0.0685, 0.0978,
         0.0542, 0.1536, 0.0577, 0.0692, 0.1010, 0.0523, 0.0795]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0234],
        [0.0415],
        [0.0383],
        [0.0239],
        [0.0386],
        [0.0406],
        [0.0068],
        [0.0181],
        [0.0263],
        [0.0382],
        [0.0518],
        [0.0179],
        [0.0660],
        [0.0751],
        [0.0221],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0234, 0.0415, 0.0383, 0.0239, 0.0386, 0.0406, 0.0068, 0.0181, 0.0263,
         0.0382, 0.0518, 0.0179, 0.0660, 0.0751, 0.0221, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0927, 0.0234],
        [0.0580, 0.0415],
        [0.0810, 0.0383],
        [0.0945, 0.0239],
        [0.0870, 0.0386],
        [0.1068, 0.0406],
        [0.0595, 0.0068],
        [0.0685, 0.0181],
        [0.0978, 0.0263],
        [0.0542, 0.0382],
        [0.1536, 0.0518],
        [0.0577, 0.0179],
        [0.0692, 0.0660],
        [0.1010, 0.0751],
        [0.0523, 0.0221],
        [0.0795, 0.0293]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1041],
        [0.1218],
        [0.1100],
        [0.0820],
        [0.0451],
        [0.0974],
        [0.0986],
        [0.0611]], device='cuda:0', dtype=torch.float16)/tensor([[0.1041, 0.1218, 0.1100, 0.0820, 0.0451, 0.0974, 0.0986, 0.0611]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0296],
        [0.0335],
        [0.0162],
        [0.0250],
        [0.0088],
        [0.0396],
        [0.0545],
        [0.0220]], device='cuda:0', dtype=torch.float16)/tensor([[0.0296, 0.0335, 0.0162, 0.0250, 0.0088, 0.0396, 0.0545, 0.0220]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1041, 0.0296],
        [0.1218, 0.0335],
        [0.1100, 0.0162],
        [0.0820, 0.0250],
        [0.0451, 0.0088],
        [0.0974, 0.0396],
        [0.0986, 0.0545],
        [0.0611, 0.0220]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type modal, variation 2 and batchsize 16: 0:03:34.007723
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b SA modal 3 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 323.41it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0573],
        [0.0627],
        [0.0702],
        [0.0886],
        [0.1008],
        [0.0925],
        [0.0963],
        [0.0602],
        [0.0966],
        [0.1050],
        [0.0803],
        [0.0697],
        [0.1025],
        [0.0853],
        [0.0518],
        [0.1093]], device='cuda:0', dtype=torch.float16)/tensor([[0.0573, 0.0627, 0.0702, 0.0886, 0.1008, 0.0925, 0.0963, 0.0602, 0.0966,
         0.1050, 0.0803, 0.0697, 0.1025, 0.0853, 0.0518, 0.1093]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0620],
        [0.0919],
        [0.0471],
        [0.0806],
        [0.0911],
        [0.0476],
        [0.0403],
        [0.0229],
        [0.0478],
        [0.0585],
        [0.0234],
        [0.0246],
        [0.0424],
        [0.0391],
        [0.0591],
        [0.0787]], device='cuda:0', dtype=torch.float16)/tensor([[0.0620, 0.0919, 0.0471, 0.0806, 0.0911, 0.0476, 0.0403, 0.0229, 0.0478,
         0.0585, 0.0234, 0.0246, 0.0424, 0.0391, 0.0591, 0.0787]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0573, 0.0620],
        [0.0627, 0.0919],
        [0.0702, 0.0471],
        [0.0886, 0.0806],
        [0.1008, 0.0911],
        [0.0925, 0.0476],
        [0.0963, 0.0403],
        [0.0602, 0.0229],
        [0.0966, 0.0478],
        [0.1050, 0.0585],
        [0.0803, 0.0234],
        [0.0697, 0.0246],
        [0.1025, 0.0424],
        [0.0853, 0.0391],
        [0.0518, 0.0591],
        [0.1093, 0.0787]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0621],
        [0.0859],
        [0.0840],
        [0.0729],
        [0.1043],
        [0.0928],
        [0.1041],
        [0.0491],
        [0.0873],
        [0.0822],
        [0.0807],
        [0.0601],
        [0.1469],
        [0.1062],
        [0.0944],
        [0.1073]], device='cuda:0', dtype=torch.float16)/tensor([[0.0621, 0.0859, 0.0840, 0.0729, 0.1043, 0.0928, 0.1041, 0.0491, 0.0873,
         0.0822, 0.0807, 0.0601, 0.1469, 0.1062, 0.0944, 0.1073]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0423],
        [0.0321],
        [0.0446],
        [0.0387],
        [0.0689],
        [0.0442],
        [0.0612],
        [0.0221],
        [0.0807],
        [0.0737],
        [0.0753],
        [0.0601],
        [0.1074],
        [0.0439],
        [0.0497],
        [0.0296]], device='cuda:0', dtype=torch.float16)/tensor([[0.0423, 0.0321, 0.0446, 0.0387, 0.0689, 0.0442, 0.0612, 0.0221, 0.0807,
         0.0737, 0.0753, 0.0601, 0.1074, 0.0439, 0.0497, 0.0296]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0621, 0.0423],
        [0.0859, 0.0321],
        [0.0840, 0.0446],
        [0.0729, 0.0387],
        [0.1043, 0.0689],
        [0.0928, 0.0442],
        [0.1041, 0.0612],
        [0.0491, 0.0221],
        [0.0873, 0.0807],
        [0.0822, 0.0737],
        [0.0807, 0.0753],
        [0.0601, 0.0601],
        [0.1469, 0.1074],
        [0.1062, 0.0439],
        [0.0944, 0.0497],
        [0.1073, 0.0296]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0537],
        [0.0737],
        [0.0708],
        [0.0843],
        [0.0536],
        [0.0709],
        [0.1014],
        [0.0603],
        [0.0640],
        [0.0583],
        [0.0730],
        [0.0710],
        [0.0793],
        [0.0735],
        [0.0839],
        [0.0526]], device='cuda:0', dtype=torch.float16)/tensor([[0.0537, 0.0737, 0.0708, 0.0843, 0.0536, 0.0709, 0.1014, 0.0603, 0.0640,
         0.0583, 0.0730, 0.0710, 0.0793, 0.0735, 0.0839, 0.0526]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0690],
        [0.0715],
        [0.0665],
        [0.0374],
        [0.0705],
        [0.0766],
        [0.0317],
        [0.0528],
        [0.0656],
        [0.0720],
        [0.0339],
        [0.0247],
        [0.0678],
        [0.0537],
        [0.1300],
        [0.0583]], device='cuda:0', dtype=torch.float16)/tensor([[0.0690, 0.0715, 0.0665, 0.0374, 0.0705, 0.0766, 0.0317, 0.0528, 0.0656,
         0.0720, 0.0339, 0.0247, 0.0678, 0.0537, 0.1300, 0.0583]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0537, 0.0690],
        [0.0737, 0.0715],
        [0.0708, 0.0665],
        [0.0843, 0.0374],
        [0.0536, 0.0705],
        [0.0709, 0.0766],
        [0.1014, 0.0317],
        [0.0603, 0.0528],
        [0.0640, 0.0656],
        [0.0583, 0.0720],
        [0.0730, 0.0339],
        [0.0710, 0.0247],
        [0.0793, 0.0678],
        [0.0735, 0.0537],
        [0.0839, 0.1300],
        [0.0526, 0.0583]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0846],
        [0.0868],
        [0.0952],
        [0.0790],
        [0.1077],
        [0.1366],
        [0.0939],
        [0.0504],
        [0.0961],
        [0.0569],
        [0.0753],
        [0.0546],
        [0.0717],
        [0.0794],
        [0.0560],
        [0.0742]], device='cuda:0', dtype=torch.float16)/tensor([[0.0846, 0.0868, 0.0952, 0.0790, 0.1077, 0.1366, 0.0939, 0.0504, 0.0961,
         0.0569, 0.0753, 0.0546, 0.0717, 0.0794, 0.0560, 0.0742]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0493],
        [0.0465],
        [0.0400],
        [0.0924],
        [0.0474],
        [0.0645],
        [0.0625],
        [0.0489],
        [0.0720],
        [0.0582],
        [0.0204],
        [0.0679],
        [0.0787],
        [0.0685],
        [0.0687],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0493, 0.0465, 0.0400, 0.0924, 0.0474, 0.0645, 0.0625, 0.0489, 0.0720,
         0.0582, 0.0204, 0.0679, 0.0787, 0.0685, 0.0687, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0846, 0.0493],
        [0.0868, 0.0465],
        [0.0952, 0.0400],
        [0.0790, 0.0924],
        [0.1077, 0.0474],
        [0.1366, 0.0645],
        [0.0939, 0.0625],
        [0.0504, 0.0489],
        [0.0961, 0.0720],
        [0.0569, 0.0582],
        [0.0753, 0.0204],
        [0.0546, 0.0679],
        [0.0717, 0.0787],
        [0.0794, 0.0685],
        [0.0560, 0.0687],
        [0.0742, 0.0309]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0756],
        [0.0583],
        [0.0835],
        [0.0790],
        [0.0527],
        [0.0996],
        [0.0716],
        [0.0756],
        [0.1331],
        [0.0860],
        [0.0741],
        [0.0811],
        [0.1017],
        [0.1143],
        [0.0859],
        [0.0621]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0583, 0.0835, 0.0790, 0.0527, 0.0996, 0.0716, 0.0756, 0.1331,
         0.0860, 0.0741, 0.0811, 0.1017, 0.1143, 0.0859, 0.0621]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0884],
        [0.0433],
        [0.0391],
        [0.0578],
        [0.0531],
        [0.0316],
        [0.0673],
        [0.0349],
        [0.0770],
        [0.0356],
        [0.0944],
        [0.0575],
        [0.0366],
        [0.0430],
        [0.0478],
        [0.0703]], device='cuda:0', dtype=torch.float16)/tensor([[0.0884, 0.0433, 0.0391, 0.0578, 0.0531, 0.0316, 0.0673, 0.0349, 0.0770,
         0.0356, 0.0944, 0.0575, 0.0366, 0.0430, 0.0478, 0.0703]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0756, 0.0884],
        [0.0583, 0.0433],
        [0.0835, 0.0391],
        [0.0790, 0.0578],
        [0.0527, 0.0531],
        [0.0996, 0.0316],
        [0.0716, 0.0673],
        [0.0756, 0.0349],
        [0.1331, 0.0770],
        [0.0860, 0.0356],
        [0.0741, 0.0944],
        [0.0811, 0.0575],
        [0.1017, 0.0366],
        [0.1143, 0.0430],
        [0.0859, 0.0478],
        [0.0621, 0.0703]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0968],
        [0.0735],
        [0.0620],
        [0.1021],
        [0.0652],
        [0.0668],
        [0.0635],
        [0.0739],
        [0.1526],
        [0.0845],
        [0.0659],
        [0.0767],
        [0.0887],
        [0.0905],
        [0.0966],
        [0.0800]], device='cuda:0', dtype=torch.float16)/tensor([[0.0968, 0.0735, 0.0620, 0.1021, 0.0652, 0.0668, 0.0635, 0.0739, 0.1526,
         0.0845, 0.0659, 0.0767, 0.0887, 0.0905, 0.0966, 0.0800]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0665],
        [0.0674],
        [0.0602],
        [0.0467],
        [0.0562],
        [0.0322],
        [0.0354],
        [0.0299],
        [0.1422],
        [0.0452],
        [0.0344],
        [0.0682],
        [0.0701],
        [0.0371],
        [0.0680],
        [0.0958]], device='cuda:0', dtype=torch.float16)/tensor([[0.0665, 0.0674, 0.0602, 0.0467, 0.0562, 0.0322, 0.0354, 0.0299, 0.1422,
         0.0452, 0.0344, 0.0682, 0.0701, 0.0371, 0.0680, 0.0958]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0968, 0.0665],
        [0.0735, 0.0674],
        [0.0620, 0.0602],
        [0.1021, 0.0467],
        [0.0652, 0.0562],
        [0.0668, 0.0322],
        [0.0635, 0.0354],
        [0.0739, 0.0299],
        [0.1526, 0.1422],
        [0.0845, 0.0452],
        [0.0659, 0.0344],
        [0.0767, 0.0682],
        [0.0887, 0.0701],
        [0.0905, 0.0371],
        [0.0966, 0.0680],
        [0.0800, 0.0958]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0667],
        [0.0677],
        [0.0950],
        [0.0510],
        [0.0712],
        [0.0722],
        [0.0891],
        [0.1059],
        [0.0869],
        [0.0710],
        [0.0566],
        [0.1069],
        [0.0872],
        [0.0873],
        [0.0965],
        [0.0768]], device='cuda:0', dtype=torch.float16)/tensor([[0.0667, 0.0677, 0.0950, 0.0510, 0.0712, 0.0722, 0.0891, 0.1059, 0.0869,
         0.0710, 0.0566, 0.1069, 0.0872, 0.0873, 0.0965, 0.0768]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0492],
        [0.0768],
        [0.0425],
        [0.0316],
        [0.0246],
        [0.0303],
        [0.0349],
        [0.0745],
        [0.0651],
        [0.0301],
        [0.0363],
        [0.0690],
        [0.0449],
        [0.0475],
        [0.0432],
        [0.0395]], device='cuda:0', dtype=torch.float16)/tensor([[0.0492, 0.0768, 0.0425, 0.0316, 0.0246, 0.0303, 0.0349, 0.0745, 0.0651,
         0.0301, 0.0363, 0.0690, 0.0449, 0.0475, 0.0432, 0.0395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0667, 0.0492],
        [0.0677, 0.0768],
        [0.0950, 0.0425],
        [0.0510, 0.0316],
        [0.0712, 0.0246],
        [0.0722, 0.0303],
        [0.0891, 0.0349],
        [0.1059, 0.0745],
        [0.0869, 0.0651],
        [0.0710, 0.0301],
        [0.0566, 0.0363],
        [0.1069, 0.0690],
        [0.0872, 0.0449],
        [0.0873, 0.0475],
        [0.0965, 0.0432],
        [0.0768, 0.0395]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0753],
        [0.0873],
        [0.0629],
        [0.0667],
        [0.0845],
        [0.0720],
        [0.0643],
        [0.0753],
        [0.1385],
        [0.0657],
        [0.1086],
        [0.0920],
        [0.0643],
        [0.1048],
        [0.0788],
        [0.0999]], device='cuda:0', dtype=torch.float16)/tensor([[0.0753, 0.0873, 0.0629, 0.0667, 0.0845, 0.0720, 0.0643, 0.0753, 0.1385,
         0.0657, 0.1086, 0.0920, 0.0643, 0.1048, 0.0788, 0.0999]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0696],
        [0.0474],
        [0.0707],
        [0.0351],
        [0.0505],
        [0.0749],
        [0.0673],
        [0.0475],
        [0.1149],
        [0.0380],
        [0.0416],
        [0.0474],
        [0.0347],
        [0.0616],
        [0.0350],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0696, 0.0474, 0.0707, 0.0351, 0.0505, 0.0749, 0.0673, 0.0475, 0.1149,
         0.0380, 0.0416, 0.0474, 0.0347, 0.0616, 0.0350, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0753, 0.0696],
        [0.0873, 0.0474],
        [0.0629, 0.0707],
        [0.0667, 0.0351],
        [0.0845, 0.0505],
        [0.0720, 0.0749],
        [0.0643, 0.0673],
        [0.0753, 0.0475],
        [0.1385, 0.1149],
        [0.0657, 0.0380],
        [0.1086, 0.0416],
        [0.0920, 0.0474],
        [0.0643, 0.0347],
        [0.1048, 0.0616],
        [0.0788, 0.0350],
        [0.0999, 0.0423]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0759],
        [0.0908],
        [0.0881],
        [0.0744],
        [0.0632],
        [0.0601],
        [0.0644],
        [0.0808],
        [0.0581],
        [0.1043],
        [0.0623],
        [0.0603],
        [0.0947],
        [0.1458],
        [0.0755],
        [0.0679]], device='cuda:0', dtype=torch.float16)/tensor([[0.0759, 0.0908, 0.0881, 0.0744, 0.0632, 0.0601, 0.0644, 0.0808, 0.0581,
         0.1043, 0.0623, 0.0603, 0.0947, 0.1458, 0.0755, 0.0679]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0901],
        [0.0309],
        [0.0353],
        [0.0677],
        [0.0627],
        [0.0620],
        [0.0413],
        [0.0498],
        [0.0206],
        [0.0872],
        [0.0653],
        [0.0662],
        [0.0437],
        [0.1180],
        [0.0737],
        [0.0173]], device='cuda:0', dtype=torch.float16)/tensor([[0.0901, 0.0309, 0.0353, 0.0677, 0.0627, 0.0620, 0.0413, 0.0498, 0.0206,
         0.0872, 0.0653, 0.0662, 0.0437, 0.1180, 0.0737, 0.0173]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0759, 0.0901],
        [0.0908, 0.0309],
        [0.0881, 0.0353],
        [0.0744, 0.0677],
        [0.0632, 0.0627],
        [0.0601, 0.0620],
        [0.0644, 0.0413],
        [0.0808, 0.0498],
        [0.0581, 0.0206],
        [0.1043, 0.0872],
        [0.0623, 0.0653],
        [0.0603, 0.0662],
        [0.0947, 0.0437],
        [0.1458, 0.1180],
        [0.0755, 0.0737],
        [0.0679, 0.0173]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0711],
        [0.0797],
        [0.0663],
        [0.1066],
        [0.1108],
        [0.0673],
        [0.1302],
        [0.0748],
        [0.0710],
        [0.0797],
        [0.1103],
        [0.0847],
        [0.0684],
        [0.0848],
        [0.1263],
        [0.0709]], device='cuda:0', dtype=torch.float16)/tensor([[0.0711, 0.0797, 0.0663, 0.1066, 0.1108, 0.0673, 0.1302, 0.0748, 0.0710,
         0.0797, 0.1103, 0.0847, 0.0684, 0.0848, 0.1263, 0.0709]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0285],
        [0.0655],
        [0.0734],
        [0.0285],
        [0.0544],
        [0.0689],
        [0.1234],
        [0.0461],
        [0.0716],
        [0.0535],
        [0.0591],
        [0.0702],
        [0.0449],
        [0.0461],
        [0.0491],
        [0.0398]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0655, 0.0734, 0.0285, 0.0544, 0.0689, 0.1234, 0.0461, 0.0716,
         0.0535, 0.0591, 0.0702, 0.0449, 0.0461, 0.0491, 0.0398]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0711, 0.0285],
        [0.0797, 0.0655],
        [0.0663, 0.0734],
        [0.1066, 0.0285],
        [0.1108, 0.0544],
        [0.0673, 0.0689],
        [0.1302, 0.1234],
        [0.0748, 0.0461],
        [0.0710, 0.0716],
        [0.0797, 0.0535],
        [0.1103, 0.0591],
        [0.0847, 0.0702],
        [0.0684, 0.0449],
        [0.0848, 0.0461],
        [0.1263, 0.0491],
        [0.0709, 0.0398]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0748],
        [0.0513],
        [0.0719],
        [0.0872],
        [0.1078],
        [0.0751],
        [0.0737],
        [0.0860],
        [0.0675],
        [0.0707],
        [0.0774],
        [0.0865],
        [0.0589],
        [0.0775],
        [0.1156],
        [0.0724]], device='cuda:0', dtype=torch.float16)/tensor([[0.0748, 0.0513, 0.0719, 0.0872, 0.1078, 0.0751, 0.0737, 0.0860, 0.0675,
         0.0707, 0.0774, 0.0865, 0.0589, 0.0775, 0.1156, 0.0724]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0665],
        [0.0356],
        [0.0413],
        [0.0614],
        [0.0429],
        [0.0800],
        [0.0540],
        [0.0413],
        [0.0620],
        [0.0654],
        [0.0710],
        [0.0794],
        [0.0871],
        [0.0425],
        [0.0406],
        [0.0608]], device='cuda:0', dtype=torch.float16)/tensor([[0.0665, 0.0356, 0.0413, 0.0614, 0.0429, 0.0800, 0.0540, 0.0413, 0.0620,
         0.0654, 0.0710, 0.0794, 0.0871, 0.0425, 0.0406, 0.0608]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0748, 0.0665],
        [0.0513, 0.0356],
        [0.0719, 0.0413],
        [0.0872, 0.0614],
        [0.1078, 0.0429],
        [0.0751, 0.0800],
        [0.0737, 0.0540],
        [0.0860, 0.0413],
        [0.0675, 0.0620],
        [0.0707, 0.0654],
        [0.0774, 0.0710],
        [0.0865, 0.0794],
        [0.0589, 0.0871],
        [0.0775, 0.0425],
        [0.1156, 0.0406],
        [0.0724, 0.0608]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0778],
        [0.0713],
        [0.0734],
        [0.0843],
        [0.0919],
        [0.0944],
        [0.0995],
        [0.0464],
        [0.0978],
        [0.0682],
        [0.0826],
        [0.0694],
        [0.0544],
        [0.0927],
        [0.1191],
        [0.0378]], device='cuda:0', dtype=torch.float16)/tensor([[0.0778, 0.0713, 0.0734, 0.0843, 0.0919, 0.0944, 0.0995, 0.0464, 0.0978,
         0.0682, 0.0826, 0.0694, 0.0544, 0.0927, 0.1191, 0.0378]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0391],
        [0.0326],
        [0.0431],
        [0.0811],
        [0.0622],
        [0.0442],
        [0.0344],
        [0.0295],
        [0.0417],
        [0.0317],
        [0.0422],
        [0.0792],
        [0.0756],
        [0.0459],
        [0.0751],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0391, 0.0326, 0.0431, 0.0811, 0.0622, 0.0442, 0.0344, 0.0295, 0.0417,
         0.0317, 0.0422, 0.0792, 0.0756, 0.0459, 0.0751, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0778, 0.0391],
        [0.0713, 0.0326],
        [0.0734, 0.0431],
        [0.0843, 0.0811],
        [0.0919, 0.0622],
        [0.0944, 0.0442],
        [0.0995, 0.0344],
        [0.0464, 0.0295],
        [0.0978, 0.0417],
        [0.0682, 0.0317],
        [0.0826, 0.0422],
        [0.0694, 0.0792],
        [0.0544, 0.0756],
        [0.0927, 0.0459],
        [0.1191, 0.0751],
        [0.0378, 0.0293]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0946],
        [0.1221],
        [0.1071],
        [0.1171],
        [0.2742],
        [0.0864],
        [0.0837],
        [0.0828]], device='cuda:0', dtype=torch.float16)/tensor([[0.0946, 0.1221, 0.1071, 0.1171, 0.2742, 0.0864, 0.0837, 0.0828]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.1187],
        [0.0624],
        [0.0382],
        [0.0544],
        [0.0597],
        [0.0210],
        [0.0489],
        [0.0453]], device='cuda:0', dtype=torch.float16)/tensor([[0.1187, 0.0624, 0.0382, 0.0544, 0.0597, 0.0210, 0.0489, 0.0453]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0946, 0.1187],
        [0.1221, 0.0624],
        [0.1071, 0.0382],
        [0.1171, 0.0544],
        [0.2742, 0.0597],
        [0.0864, 0.0210],
        [0.0837, 0.0489],
        [0.0828, 0.0453]], device='cuda:0')
acc:  0.68
Time taken to execute the en SA task with prompt type modal, variation 3 and batchsize 16: 0:03:28.989264
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b SA modal 4 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.90it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1137],
        [0.0756],
        [0.0938],
        [0.0707],
        [0.0945],
        [0.0756],
        [0.0801],
        [0.0785],
        [0.0842],
        [0.1196],
        [0.1016],
        [0.0839],
        [0.0872],
        [0.0464],
        [0.1127],
        [0.0790]], device='cuda:0', dtype=torch.float16)/tensor([[0.1137, 0.0756, 0.0938, 0.0707, 0.0945, 0.0756, 0.0801, 0.0785, 0.0842,
         0.1196, 0.1016, 0.0839, 0.0872, 0.0464, 0.1127, 0.0790]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0146],
        [0.0199],
        [0.0176],
        [0.0129],
        [0.0329],
        [0.0437],
        [0.0107],
        [0.0116],
        [0.0144],
        [0.0398],
        [0.0354],
        [0.0113],
        [0.0260],
        [0.0219],
        [0.0217],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0199, 0.0176, 0.0129, 0.0329, 0.0437, 0.0107, 0.0116, 0.0144,
         0.0398, 0.0354, 0.0113, 0.0260, 0.0219, 0.0217, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1137, 0.0146],
        [0.0756, 0.0199],
        [0.0938, 0.0176],
        [0.0707, 0.0129],
        [0.0945, 0.0329],
        [0.0756, 0.0437],
        [0.0801, 0.0107],
        [0.0785, 0.0116],
        [0.0842, 0.0144],
        [0.1196, 0.0398],
        [0.1016, 0.0354],
        [0.0839, 0.0113],
        [0.0872, 0.0260],
        [0.0464, 0.0219],
        [0.1127, 0.0217],
        [0.0790, 0.0116]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0943],
        [0.0695],
        [0.1301],
        [0.1021],
        [0.0870],
        [0.1086],
        [0.0728],
        [0.0756],
        [0.0865],
        [0.1487],
        [0.0833],
        [0.0649],
        [0.1024],
        [0.0861],
        [0.0635],
        [0.0615]], device='cuda:0', dtype=torch.float16)/tensor([[0.0943, 0.0695, 0.1301, 0.1021, 0.0870, 0.1086, 0.0728, 0.0756, 0.0865,
         0.1487, 0.0833, 0.0649, 0.1024, 0.0861, 0.0635, 0.0615]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0321],
        [0.0311],
        [0.0262],
        [0.0141],
        [0.0229],
        [0.0302],
        [0.0108],
        [0.0333],
        [0.0154],
        [0.0231],
        [0.0293],
        [0.0093],
        [0.0255],
        [0.0159],
        [0.0164],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0321, 0.0311, 0.0262, 0.0141, 0.0229, 0.0302, 0.0108, 0.0333, 0.0154,
         0.0231, 0.0293, 0.0093, 0.0255, 0.0159, 0.0164, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0943, 0.0321],
        [0.0695, 0.0311],
        [0.1301, 0.0262],
        [0.1021, 0.0141],
        [0.0870, 0.0229],
        [0.1086, 0.0302],
        [0.0728, 0.0108],
        [0.0756, 0.0333],
        [0.0865, 0.0154],
        [0.1487, 0.0231],
        [0.0833, 0.0293],
        [0.0649, 0.0093],
        [0.1024, 0.0255],
        [0.0861, 0.0159],
        [0.0635, 0.0164],
        [0.0615, 0.0122]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0682],
        [0.0978],
        [0.0878],
        [0.0845],
        [0.0959],
        [0.1188],
        [0.0690],
        [0.1105],
        [0.0864],
        [0.1102],
        [0.0905],
        [0.0543],
        [0.0733],
        [0.1074],
        [0.1261],
        [0.0721]], device='cuda:0', dtype=torch.float16)/tensor([[0.0682, 0.0978, 0.0878, 0.0845, 0.0959, 0.1188, 0.0690, 0.1105, 0.0864,
         0.1102, 0.0905, 0.0543, 0.0733, 0.1074, 0.1261, 0.0721]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0170],
        [0.0296],
        [0.0093],
        [0.0359],
        [0.0216],
        [0.0094],
        [0.0197],
        [0.0283],
        [0.0252],
        [0.0278],
        [0.0177],
        [0.0217],
        [0.0141],
        [0.0185],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0170, 0.0296, 0.0093, 0.0359, 0.0216, 0.0094, 0.0197, 0.0283,
         0.0252, 0.0278, 0.0177, 0.0217, 0.0141, 0.0185, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0682, 0.0117],
        [0.0978, 0.0170],
        [0.0878, 0.0296],
        [0.0845, 0.0093],
        [0.0959, 0.0359],
        [0.1188, 0.0216],
        [0.0690, 0.0094],
        [0.1105, 0.0197],
        [0.0864, 0.0283],
        [0.1102, 0.0252],
        [0.0905, 0.0278],
        [0.0543, 0.0177],
        [0.0733, 0.0217],
        [0.1074, 0.0141],
        [0.1261, 0.0185],
        [0.0721, 0.0126]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0826],
        [0.0923],
        [0.0603],
        [0.0870],
        [0.1287],
        [0.0972],
        [0.1240],
        [0.0941],
        [0.0903],
        [0.1237],
        [0.0964],
        [0.0795],
        [0.0784],
        [0.1854],
        [0.0874],
        [0.1100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0826, 0.0923, 0.0603, 0.0870, 0.1287, 0.0972, 0.1240, 0.0941, 0.0903,
         0.1237, 0.0964, 0.0795, 0.0784, 0.1854, 0.0874, 0.1100]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0164],
        [0.0193],
        [0.0313],
        [0.0170],
        [0.0477],
        [0.0352],
        [0.0486],
        [0.0116],
        [0.0118],
        [0.0308],
        [0.0255],
        [0.0204],
        [0.0305],
        [0.0515],
        [0.0342],
        [0.0455]], device='cuda:0', dtype=torch.float16)/tensor([[0.0164, 0.0193, 0.0313, 0.0170, 0.0477, 0.0352, 0.0486, 0.0116, 0.0118,
         0.0308, 0.0255, 0.0204, 0.0305, 0.0515, 0.0342, 0.0455]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0826, 0.0164],
        [0.0923, 0.0193],
        [0.0603, 0.0313],
        [0.0870, 0.0170],
        [0.1287, 0.0477],
        [0.0972, 0.0352],
        [0.1240, 0.0486],
        [0.0941, 0.0116],
        [0.0903, 0.0118],
        [0.1237, 0.0308],
        [0.0964, 0.0255],
        [0.0795, 0.0204],
        [0.0784, 0.0305],
        [0.1854, 0.0515],
        [0.0874, 0.0342],
        [0.1100, 0.0455]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0756],
        [0.0920],
        [0.0387],
        [0.0662],
        [0.1092],
        [0.0902],
        [0.1071],
        [0.0723],
        [0.0830],
        [0.0858],
        [0.0953],
        [0.1118],
        [0.0925],
        [0.0684],
        [0.1427],
        [0.0992]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0920, 0.0387, 0.0662, 0.1092, 0.0902, 0.1071, 0.0723, 0.0830,
         0.0858, 0.0953, 0.1118, 0.0925, 0.0684, 0.1427, 0.0992]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0448],
        [0.0170],
        [0.0122],
        [0.0208],
        [0.0231],
        [0.0376],
        [0.0322],
        [0.0287],
        [0.0245],
        [0.0402],
        [0.0385],
        [0.0257],
        [0.0140],
        [0.0087],
        [0.0336],
        [0.0515]], device='cuda:0', dtype=torch.float16)/tensor([[0.0448, 0.0170, 0.0122, 0.0208, 0.0231, 0.0376, 0.0322, 0.0287, 0.0245,
         0.0402, 0.0385, 0.0257, 0.0140, 0.0087, 0.0336, 0.0515]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0756, 0.0448],
        [0.0920, 0.0170],
        [0.0387, 0.0122],
        [0.0662, 0.0208],
        [0.1092, 0.0231],
        [0.0902, 0.0376],
        [0.1071, 0.0322],
        [0.0723, 0.0287],
        [0.0830, 0.0245],
        [0.0858, 0.0402],
        [0.0953, 0.0385],
        [0.1118, 0.0257],
        [0.0925, 0.0140],
        [0.0684, 0.0087],
        [0.1427, 0.0336],
        [0.0992, 0.0515]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0707],
        [0.0959],
        [0.1106],
        [0.0963],
        [0.1020],
        [0.1293],
        [0.0635],
        [0.0955],
        [0.0737],
        [0.1114],
        [0.0716],
        [0.0710],
        [0.1740],
        [0.1025],
        [0.0993],
        [0.0737]], device='cuda:0', dtype=torch.float16)/tensor([[0.0707, 0.0959, 0.1106, 0.0963, 0.1020, 0.1293, 0.0635, 0.0955, 0.0737,
         0.1114, 0.0716, 0.0710, 0.1740, 0.1025, 0.0993, 0.0737]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0090],
        [0.0105],
        [0.0569],
        [0.0325],
        [0.0281],
        [0.0298],
        [0.0322],
        [0.0255],
        [0.0259],
        [0.0413],
        [0.0323],
        [0.0139],
        [0.0861],
        [0.0124],
        [0.0179],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0105, 0.0569, 0.0325, 0.0281, 0.0298, 0.0322, 0.0255, 0.0259,
         0.0413, 0.0323, 0.0139, 0.0861, 0.0124, 0.0179, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0707, 0.0090],
        [0.0959, 0.0105],
        [0.1106, 0.0569],
        [0.0963, 0.0325],
        [0.1020, 0.0281],
        [0.1293, 0.0298],
        [0.0635, 0.0322],
        [0.0955, 0.0255],
        [0.0737, 0.0259],
        [0.1114, 0.0413],
        [0.0716, 0.0323],
        [0.0710, 0.0139],
        [0.1740, 0.0861],
        [0.1025, 0.0124],
        [0.0993, 0.0179],
        [0.0737, 0.0293]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0922],
        [0.0795],
        [0.1058],
        [0.0831],
        [0.1002],
        [0.0738],
        [0.0933],
        [0.1108],
        [0.0672],
        [0.1294],
        [0.0951],
        [0.1537],
        [0.0579],
        [0.0925],
        [0.0830],
        [0.1407]], device='cuda:0', dtype=torch.float16)/tensor([[0.0922, 0.0795, 0.1058, 0.0831, 0.1002, 0.0738, 0.0933, 0.1108, 0.0672,
         0.1294, 0.0951, 0.1537, 0.0579, 0.0925, 0.0830, 0.1407]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0224],
        [0.0324],
        [0.0417],
        [0.0184],
        [0.0421],
        [0.0133],
        [0.0145],
        [0.0232],
        [0.0095],
        [0.0570],
        [0.0173],
        [0.0709],
        [0.0273],
        [0.0202],
        [0.0142],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0324, 0.0417, 0.0184, 0.0421, 0.0133, 0.0145, 0.0232, 0.0095,
         0.0570, 0.0173, 0.0709, 0.0273, 0.0202, 0.0142, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0922, 0.0224],
        [0.0795, 0.0324],
        [0.1058, 0.0417],
        [0.0831, 0.0184],
        [0.1002, 0.0421],
        [0.0738, 0.0133],
        [0.0933, 0.0145],
        [0.1108, 0.0232],
        [0.0672, 0.0095],
        [0.1294, 0.0570],
        [0.0951, 0.0173],
        [0.1537, 0.0709],
        [0.0579, 0.0273],
        [0.0925, 0.0202],
        [0.0830, 0.0142],
        [0.1407, 0.0419]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0692],
        [0.1104],
        [0.0844],
        [0.0891],
        [0.0956],
        [0.0829],
        [0.0496],
        [0.0906],
        [0.0820],
        [0.0880],
        [0.0816],
        [0.1000],
        [0.0762],
        [0.0794],
        [0.0981],
        [0.1039]], device='cuda:0', dtype=torch.float16)/tensor([[0.0692, 0.1104, 0.0844, 0.0891, 0.0956, 0.0829, 0.0496, 0.0906, 0.0820,
         0.0880, 0.0816, 0.1000, 0.0762, 0.0794, 0.0981, 0.1039]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0228],
        [0.0155],
        [0.0121],
        [0.0504],
        [0.0161],
        [0.0101],
        [0.0104],
        [0.0292],
        [0.0214],
        [0.0149],
        [0.0223],
        [0.0188],
        [0.0335],
        [0.0361],
        [0.0192],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0155, 0.0121, 0.0504, 0.0161, 0.0101, 0.0104, 0.0292, 0.0214,
         0.0149, 0.0223, 0.0188, 0.0335, 0.0361, 0.0192, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0692, 0.0228],
        [0.1104, 0.0155],
        [0.0844, 0.0121],
        [0.0891, 0.0504],
        [0.0956, 0.0161],
        [0.0829, 0.0101],
        [0.0496, 0.0104],
        [0.0906, 0.0292],
        [0.0820, 0.0214],
        [0.0880, 0.0149],
        [0.0816, 0.0223],
        [0.1000, 0.0188],
        [0.0762, 0.0335],
        [0.0794, 0.0361],
        [0.0981, 0.0192],
        [0.1039, 0.0275]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1002],
        [0.1252],
        [0.0918],
        [0.1101],
        [0.0898],
        [0.0686],
        [0.1251],
        [0.0880],
        [0.2325],
        [0.0925],
        [0.1305],
        [0.0998],
        [0.3140],
        [0.0677],
        [0.0812],
        [0.1049]], device='cuda:0', dtype=torch.float16)/tensor([[0.1002, 0.1252, 0.0918, 0.1101, 0.0898, 0.0686, 0.1251, 0.0880, 0.2325,
         0.0925, 0.1305, 0.0998, 0.3140, 0.0677, 0.0812, 0.1049]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0377],
        [0.0356],
        [0.0184],
        [0.0178],
        [0.0308],
        [0.0132],
        [0.0268],
        [0.0179],
        [0.0671],
        [0.0142],
        [0.0148],
        [0.0379],
        [0.0623],
        [0.0392],
        [0.0415],
        [0.0167]], device='cuda:0', dtype=torch.float16)/tensor([[0.0377, 0.0356, 0.0184, 0.0178, 0.0308, 0.0132, 0.0268, 0.0179, 0.0671,
         0.0142, 0.0148, 0.0379, 0.0623, 0.0392, 0.0415, 0.0167]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1002, 0.0377],
        [0.1252, 0.0356],
        [0.0918, 0.0184],
        [0.1101, 0.0178],
        [0.0898, 0.0308],
        [0.0686, 0.0132],
        [0.1251, 0.0268],
        [0.0880, 0.0179],
        [0.2325, 0.0671],
        [0.0925, 0.0142],
        [0.1305, 0.0148],
        [0.0998, 0.0379],
        [0.3140, 0.0623],
        [0.0677, 0.0392],
        [0.0812, 0.0415],
        [0.1049, 0.0167]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1049],
        [0.1608],
        [0.0478],
        [0.0721],
        [0.0715],
        [0.1180],
        [0.0550],
        [0.0605],
        [0.0798],
        [0.0765],
        [0.0489],
        [0.0856],
        [0.1195],
        [0.1505],
        [0.0862],
        [0.0904]], device='cuda:0', dtype=torch.float16)/tensor([[0.1049, 0.1608, 0.0478, 0.0721, 0.0715, 0.1180, 0.0550, 0.0605, 0.0798,
         0.0765, 0.0489, 0.0856, 0.1195, 0.1505, 0.0862, 0.0904]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0462],
        [0.0208],
        [0.0366],
        [0.0257],
        [0.0151],
        [0.0253],
        [0.0160],
        [0.0167],
        [0.0366],
        [0.0422],
        [0.0054],
        [0.0257],
        [0.0319],
        [0.0266],
        [0.0162],
        [0.0315]], device='cuda:0', dtype=torch.float16)/tensor([[0.0462, 0.0208, 0.0366, 0.0257, 0.0151, 0.0253, 0.0160, 0.0167, 0.0366,
         0.0422, 0.0054, 0.0257, 0.0319, 0.0266, 0.0162, 0.0315]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1049, 0.0462],
        [0.1608, 0.0208],
        [0.0478, 0.0366],
        [0.0721, 0.0257],
        [0.0715, 0.0151],
        [0.1180, 0.0253],
        [0.0550, 0.0160],
        [0.0605, 0.0167],
        [0.0798, 0.0366],
        [0.0765, 0.0422],
        [0.0489, 0.0054],
        [0.0856, 0.0257],
        [0.1195, 0.0319],
        [0.1505, 0.0266],
        [0.0862, 0.0162],
        [0.0904, 0.0315]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0926],
        [0.0738],
        [0.1048],
        [0.0723],
        [0.0774],
        [0.0854],
        [0.1998],
        [0.0782],
        [0.0669],
        [0.0581],
        [0.0894],
        [0.1373],
        [0.1852],
        [0.0665],
        [0.0595],
        [0.0605]], device='cuda:0', dtype=torch.float16)/tensor([[0.0926, 0.0738, 0.1048, 0.0723, 0.0774, 0.0854, 0.1998, 0.0782, 0.0669,
         0.0581, 0.0894, 0.1373, 0.1852, 0.0665, 0.0595, 0.0605]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0146],
        [0.0296],
        [0.0158],
        [0.0358],
        [0.0217],
        [0.0327],
        [0.0375],
        [0.0288],
        [0.0229],
        [0.0098],
        [0.0337],
        [0.0187],
        [0.0709],
        [0.0194],
        [0.0096],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0296, 0.0158, 0.0358, 0.0217, 0.0327, 0.0375, 0.0288, 0.0229,
         0.0098, 0.0337, 0.0187, 0.0709, 0.0194, 0.0096, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0926, 0.0146],
        [0.0738, 0.0296],
        [0.1048, 0.0158],
        [0.0723, 0.0358],
        [0.0774, 0.0217],
        [0.0854, 0.0327],
        [0.1998, 0.0375],
        [0.0782, 0.0288],
        [0.0669, 0.0229],
        [0.0581, 0.0098],
        [0.0894, 0.0337],
        [0.1373, 0.0187],
        [0.1852, 0.0709],
        [0.0665, 0.0194],
        [0.0595, 0.0096],
        [0.0605, 0.0180]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0506],
        [0.1055],
        [0.0921],
        [0.0985],
        [0.1092],
        [0.0754],
        [0.0847],
        [0.0892],
        [0.1058],
        [0.0906],
        [0.1416],
        [0.1833],
        [0.0747],
        [0.0815],
        [0.0888],
        [0.0881]], device='cuda:0', dtype=torch.float16)/tensor([[0.0506, 0.1055, 0.0921, 0.0985, 0.1092, 0.0754, 0.0847, 0.0892, 0.1058,
         0.0906, 0.1416, 0.1833, 0.0747, 0.0815, 0.0888, 0.0881]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0082],
        [0.0172],
        [0.0238],
        [0.0151],
        [0.0289],
        [0.0275],
        [0.0164],
        [0.0341],
        [0.0177],
        [0.0137],
        [0.0279],
        [0.0250],
        [0.0339],
        [0.0131],
        [0.0132],
        [0.0151]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0172, 0.0238, 0.0151, 0.0289, 0.0275, 0.0164, 0.0341, 0.0177,
         0.0137, 0.0279, 0.0250, 0.0339, 0.0131, 0.0132, 0.0151]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0506, 0.0082],
        [0.1055, 0.0172],
        [0.0921, 0.0238],
        [0.0985, 0.0151],
        [0.1092, 0.0289],
        [0.0754, 0.0275],
        [0.0847, 0.0164],
        [0.0892, 0.0341],
        [0.1058, 0.0177],
        [0.0906, 0.0137],
        [0.1416, 0.0279],
        [0.1833, 0.0250],
        [0.0747, 0.0339],
        [0.0815, 0.0131],
        [0.0888, 0.0132],
        [0.0881, 0.0151]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0830],
        [0.1075],
        [0.0783],
        [0.1023],
        [0.0967],
        [0.0699],
        [0.0738],
        [0.0661]], device='cuda:0', dtype=torch.float16)/tensor([[0.0830, 0.1075, 0.0783, 0.1023, 0.0967, 0.0699, 0.0738, 0.0661]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0150],
        [0.0255],
        [0.0139],
        [0.0137],
        [0.0120],
        [0.0100],
        [0.0238],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0255, 0.0139, 0.0137, 0.0120, 0.0100, 0.0238, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0830, 0.0150],
        [0.1075, 0.0255],
        [0.0783, 0.0139],
        [0.1023, 0.0137],
        [0.0967, 0.0120],
        [0.0699, 0.0100],
        [0.0738, 0.0238],
        [0.0661, 0.0131]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type modal, variation 4 and batchsize 16: 0:03:25.203560
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b SA modal 5 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.88it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0861],
        [0.0656],
        [0.0157],
        [0.0551],
        [0.0459],
        [0.0998],
        [0.1984],
        [0.0732],
        [0.0444],
        [0.0892],
        [0.0410],
        [0.1198],
        [0.0995],
        [0.0658],
        [0.0750],
        [0.0719]], device='cuda:0', dtype=torch.float16)/tensor([[0.0861, 0.0656, 0.0157, 0.0551, 0.0459, 0.0998, 0.1984, 0.0732, 0.0444,
         0.0892, 0.0410, 0.1198, 0.0995, 0.0658, 0.0750, 0.0719]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0314],
        [0.0410],
        [0.0066],
        [0.0258],
        [0.0148],
        [0.0353],
        [0.0685],
        [0.0181],
        [0.0165],
        [0.0176],
        [0.0121],
        [0.0389],
        [0.0504],
        [0.0155],
        [0.0098],
        [0.0233]], device='cuda:0', dtype=torch.float16)/tensor([[0.0314, 0.0410, 0.0066, 0.0258, 0.0148, 0.0353, 0.0685, 0.0181, 0.0165,
         0.0176, 0.0121, 0.0389, 0.0504, 0.0155, 0.0098, 0.0233]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0861, 0.0314],
        [0.0656, 0.0410],
        [0.0157, 0.0066],
        [0.0551, 0.0258],
        [0.0459, 0.0148],
        [0.0998, 0.0353],
        [0.1984, 0.0685],
        [0.0732, 0.0181],
        [0.0444, 0.0165],
        [0.0892, 0.0176],
        [0.0410, 0.0121],
        [0.1198, 0.0389],
        [0.0995, 0.0504],
        [0.0658, 0.0155],
        [0.0750, 0.0098],
        [0.0719, 0.0233]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1289],
        [0.0806],
        [0.0603],
        [0.0921],
        [0.0723],
        [0.0990],
        [0.0844],
        [0.1169],
        [0.0893],
        [0.0854],
        [0.0609],
        [0.0953],
        [0.0420],
        [0.0845],
        [0.0338],
        [0.0893]], device='cuda:0', dtype=torch.float16)/tensor([[0.1289, 0.0806, 0.0603, 0.0921, 0.0723, 0.0990, 0.0844, 0.1169, 0.0893,
         0.0854, 0.0609, 0.0953, 0.0420, 0.0845, 0.0338, 0.0893]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0364],
        [0.0349],
        [0.0200],
        [0.0149],
        [0.0331],
        [0.0356],
        [0.0209],
        [0.0112],
        [0.0187],
        [0.0208],
        [0.0248],
        [0.0968],
        [0.0132],
        [0.0369],
        [0.0215],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0364, 0.0349, 0.0200, 0.0149, 0.0331, 0.0356, 0.0209, 0.0112, 0.0187,
         0.0208, 0.0248, 0.0968, 0.0132, 0.0369, 0.0215, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1289, 0.0364],
        [0.0806, 0.0349],
        [0.0603, 0.0200],
        [0.0921, 0.0149],
        [0.0723, 0.0331],
        [0.0990, 0.0356],
        [0.0844, 0.0209],
        [0.1169, 0.0112],
        [0.0893, 0.0187],
        [0.0854, 0.0208],
        [0.0609, 0.0248],
        [0.0953, 0.0968],
        [0.0420, 0.0132],
        [0.0845, 0.0369],
        [0.0338, 0.0215],
        [0.0893, 0.0192]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0504],
        [0.0738],
        [0.0820],
        [0.0643],
        [0.0689],
        [0.0451],
        [0.0734],
        [0.0674],
        [0.0693],
        [0.0857],
        [0.0609],
        [0.0528],
        [0.1307],
        [0.1394],
        [0.0656],
        [0.0762]], device='cuda:0', dtype=torch.float16)/tensor([[0.0504, 0.0738, 0.0820, 0.0643, 0.0689, 0.0451, 0.0734, 0.0674, 0.0693,
         0.0857, 0.0609, 0.0528, 0.1307, 0.1394, 0.0656, 0.0762]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0296],
        [0.0253],
        [0.0193],
        [0.0199],
        [0.0408],
        [0.0086],
        [0.0341],
        [0.0098],
        [0.0430],
        [0.0516],
        [0.0397],
        [0.0315],
        [0.0196],
        [0.0337],
        [0.0192],
        [0.0458]], device='cuda:0', dtype=torch.float16)/tensor([[0.0296, 0.0253, 0.0193, 0.0199, 0.0408, 0.0086, 0.0341, 0.0098, 0.0430,
         0.0516, 0.0397, 0.0315, 0.0196, 0.0337, 0.0192, 0.0458]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0504, 0.0296],
        [0.0738, 0.0253],
        [0.0820, 0.0193],
        [0.0643, 0.0199],
        [0.0689, 0.0408],
        [0.0451, 0.0086],
        [0.0734, 0.0341],
        [0.0674, 0.0098],
        [0.0693, 0.0430],
        [0.0857, 0.0516],
        [0.0609, 0.0397],
        [0.0528, 0.0315],
        [0.1307, 0.0196],
        [0.1394, 0.0337],
        [0.0656, 0.0192],
        [0.0762, 0.0458]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0885],
        [0.0525],
        [0.0624],
        [0.0692],
        [0.1084],
        [0.0699],
        [0.0561],
        [0.0764],
        [0.0895],
        [0.0941],
        [0.1061],
        [0.0928],
        [0.0667],
        [0.0812],
        [0.0794],
        [0.0623]], device='cuda:0', dtype=torch.float16)/tensor([[0.0885, 0.0525, 0.0624, 0.0692, 0.1084, 0.0699, 0.0561, 0.0764, 0.0895,
         0.0941, 0.1061, 0.0928, 0.0667, 0.0812, 0.0794, 0.0623]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0321],
        [0.0084],
        [0.0460],
        [0.0167],
        [0.0191],
        [0.0173],
        [0.0170],
        [0.0165],
        [0.0400],
        [0.0392],
        [0.0286],
        [0.0244],
        [0.0192],
        [0.0378],
        [0.0279],
        [0.0358]], device='cuda:0', dtype=torch.float16)/tensor([[0.0321, 0.0084, 0.0460, 0.0167, 0.0191, 0.0173, 0.0170, 0.0165, 0.0400,
         0.0392, 0.0286, 0.0244, 0.0192, 0.0378, 0.0279, 0.0358]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0885, 0.0321],
        [0.0525, 0.0084],
        [0.0624, 0.0460],
        [0.0692, 0.0167],
        [0.1084, 0.0191],
        [0.0699, 0.0173],
        [0.0561, 0.0170],
        [0.0764, 0.0165],
        [0.0895, 0.0400],
        [0.0941, 0.0392],
        [0.1061, 0.0286],
        [0.0928, 0.0244],
        [0.0667, 0.0192],
        [0.0812, 0.0378],
        [0.0794, 0.0279],
        [0.0623, 0.0358]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1133],
        [0.0337],
        [0.0877],
        [0.0906],
        [0.0645],
        [0.0955],
        [0.1242],
        [0.1216],
        [0.0592],
        [0.0778],
        [0.1187],
        [0.0508],
        [0.0685],
        [0.0621],
        [0.0954],
        [0.0471]], device='cuda:0', dtype=torch.float16)/tensor([[0.1133, 0.0337, 0.0877, 0.0906, 0.0645, 0.0955, 0.1242, 0.1216, 0.0592,
         0.0778, 0.1187, 0.0508, 0.0685, 0.0621, 0.0954, 0.0471]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0183],
        [0.0045],
        [0.0267],
        [0.0166],
        [0.0362],
        [0.0380],
        [0.0419],
        [0.0469],
        [0.0119],
        [0.0172],
        [0.0882],
        [0.0294],
        [0.0206],
        [0.0332],
        [0.0544],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0183, 0.0045, 0.0267, 0.0166, 0.0362, 0.0380, 0.0419, 0.0469, 0.0119,
         0.0172, 0.0882, 0.0294, 0.0206, 0.0332, 0.0544, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1133, 0.0183],
        [0.0337, 0.0045],
        [0.0877, 0.0267],
        [0.0906, 0.0166],
        [0.0645, 0.0362],
        [0.0955, 0.0380],
        [0.1242, 0.0419],
        [0.1216, 0.0469],
        [0.0592, 0.0119],
        [0.0778, 0.0172],
        [0.1187, 0.0882],
        [0.0508, 0.0294],
        [0.0685, 0.0206],
        [0.0621, 0.0332],
        [0.0954, 0.0544],
        [0.0471, 0.0108]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0583],
        [0.0943],
        [0.0964],
        [0.0501],
        [0.0657],
        [0.0820],
        [0.0759],
        [0.1066],
        [0.0886],
        [0.0861],
        [0.0917],
        [0.0446],
        [0.0618],
        [0.0650],
        [0.0804],
        [0.0773]], device='cuda:0', dtype=torch.float16)/tensor([[0.0583, 0.0943, 0.0964, 0.0501, 0.0657, 0.0820, 0.0759, 0.1066, 0.0886,
         0.0861, 0.0917, 0.0446, 0.0618, 0.0650, 0.0804, 0.0773]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0359],
        [0.0198],
        [0.0369],
        [0.0136],
        [0.0098],
        [0.0270],
        [0.0260],
        [0.0291],
        [0.0281],
        [0.0228],
        [0.0565],
        [0.0150],
        [0.0134],
        [0.0093],
        [0.0199],
        [0.0215]], device='cuda:0', dtype=torch.float16)/tensor([[0.0359, 0.0198, 0.0369, 0.0136, 0.0098, 0.0270, 0.0260, 0.0291, 0.0281,
         0.0228, 0.0565, 0.0150, 0.0134, 0.0093, 0.0199, 0.0215]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0583, 0.0359],
        [0.0943, 0.0198],
        [0.0964, 0.0369],
        [0.0501, 0.0136],
        [0.0657, 0.0098],
        [0.0820, 0.0270],
        [0.0759, 0.0260],
        [0.1066, 0.0291],
        [0.0886, 0.0281],
        [0.0861, 0.0228],
        [0.0917, 0.0565],
        [0.0446, 0.0150],
        [0.0618, 0.0134],
        [0.0650, 0.0093],
        [0.0804, 0.0199],
        [0.0773, 0.0215]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0807],
        [0.0751],
        [0.0670],
        [0.0638],
        [0.0442],
        [0.0582],
        [0.0619],
        [0.0840],
        [0.0837],
        [0.0835],
        [0.1340],
        [0.0678],
        [0.0973],
        [0.0623],
        [0.0756],
        [0.0568]], device='cuda:0', dtype=torch.float16)/tensor([[0.0807, 0.0751, 0.0670, 0.0638, 0.0442, 0.0582, 0.0619, 0.0840, 0.0837,
         0.0835, 0.1340, 0.0678, 0.0973, 0.0623, 0.0756, 0.0568]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0408],
        [0.0131],
        [0.0137],
        [0.0238],
        [0.0182],
        [0.0190],
        [0.0340],
        [0.0333],
        [0.0420],
        [0.0336],
        [0.0255],
        [0.0505],
        [0.0231],
        [0.0317],
        [0.0137]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0408, 0.0131, 0.0137, 0.0238, 0.0182, 0.0190, 0.0340, 0.0333,
         0.0420, 0.0336, 0.0255, 0.0505, 0.0231, 0.0317, 0.0137]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0807, 0.0136],
        [0.0751, 0.0408],
        [0.0670, 0.0131],
        [0.0638, 0.0137],
        [0.0442, 0.0238],
        [0.0582, 0.0182],
        [0.0619, 0.0190],
        [0.0840, 0.0340],
        [0.0837, 0.0333],
        [0.0835, 0.0420],
        [0.1340, 0.0336],
        [0.0678, 0.0255],
        [0.0973, 0.0505],
        [0.0623, 0.0231],
        [0.0756, 0.0317],
        [0.0568, 0.0137]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0791],
        [0.1208],
        [0.0612],
        [0.3108],
        [0.0719],
        [0.1520],
        [0.0804],
        [0.0776],
        [0.1101],
        [0.1181],
        [0.0439],
        [0.0601],
        [0.0663],
        [0.0757],
        [0.0494],
        [0.0720]], device='cuda:0', dtype=torch.float16)/tensor([[0.0791, 0.1208, 0.0612, 0.3108, 0.0719, 0.1520, 0.0804, 0.0776, 0.1101,
         0.1181, 0.0439, 0.0601, 0.0663, 0.0757, 0.0494, 0.0720]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0300],
        [0.0532],
        [0.0217],
        [0.0544],
        [0.0165],
        [0.0252],
        [0.0253],
        [0.0372],
        [0.0247],
        [0.0333],
        [0.0083],
        [0.0388],
        [0.0238],
        [0.0139],
        [0.0217],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0300, 0.0532, 0.0217, 0.0544, 0.0165, 0.0252, 0.0253, 0.0372, 0.0247,
         0.0333, 0.0083, 0.0388, 0.0238, 0.0139, 0.0217, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0791, 0.0300],
        [0.1208, 0.0532],
        [0.0612, 0.0217],
        [0.3108, 0.0544],
        [0.0719, 0.0165],
        [0.1520, 0.0252],
        [0.0804, 0.0253],
        [0.0776, 0.0372],
        [0.1101, 0.0247],
        [0.1181, 0.0333],
        [0.0439, 0.0083],
        [0.0601, 0.0388],
        [0.0663, 0.0238],
        [0.0757, 0.0139],
        [0.0494, 0.0217],
        [0.0720, 0.0162]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0502],
        [0.0728],
        [0.0850],
        [0.0593],
        [0.0898],
        [0.0535],
        [0.0576],
        [0.0730],
        [0.0647],
        [0.0327],
        [0.0787],
        [0.0579],
        [0.1237],
        [0.0969],
        [0.1260],
        [0.0829]], device='cuda:0', dtype=torch.float16)/tensor([[0.0502, 0.0728, 0.0850, 0.0593, 0.0898, 0.0535, 0.0576, 0.0730, 0.0647,
         0.0327, 0.0787, 0.0579, 0.1237, 0.0969, 0.1260, 0.0829]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0142],
        [0.0078],
        [0.0222],
        [0.0272],
        [0.0366],
        [0.0227],
        [0.0087],
        [0.0200],
        [0.0301],
        [0.0029],
        [0.0360],
        [0.0359],
        [0.0269],
        [0.0324],
        [0.0220],
        [0.0310]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0078, 0.0222, 0.0272, 0.0366, 0.0227, 0.0087, 0.0200, 0.0301,
         0.0029, 0.0360, 0.0359, 0.0269, 0.0324, 0.0220, 0.0310]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0502, 0.0142],
        [0.0728, 0.0078],
        [0.0850, 0.0222],
        [0.0593, 0.0272],
        [0.0898, 0.0366],
        [0.0535, 0.0227],
        [0.0576, 0.0087],
        [0.0730, 0.0200],
        [0.0647, 0.0301],
        [0.0327, 0.0029],
        [0.0787, 0.0360],
        [0.0579, 0.0359],
        [0.1237, 0.0269],
        [0.0969, 0.0324],
        [0.1260, 0.0220],
        [0.0829, 0.0310]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0851],
        [0.0897],
        [0.0743],
        [0.0429],
        [0.0503],
        [0.1049],
        [0.0876],
        [0.0776],
        [0.0887],
        [0.0687],
        [0.0804],
        [0.1118],
        [0.0244],
        [0.0605],
        [0.0706],
        [0.0848]], device='cuda:0', dtype=torch.float16)/tensor([[0.0851, 0.0897, 0.0743, 0.0429, 0.0503, 0.1049, 0.0876, 0.0776, 0.0887,
         0.0687, 0.0804, 0.1118, 0.0244, 0.0605, 0.0706, 0.0848]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0172],
        [0.0398],
        [0.0141],
        [0.0074],
        [0.0117],
        [0.0229],
        [0.0562],
        [0.0347],
        [0.0140],
        [0.0183],
        [0.0410],
        [0.0452],
        [0.0059],
        [0.0189],
        [0.0326],
        [0.0273]], device='cuda:0', dtype=torch.float16)/tensor([[0.0172, 0.0398, 0.0141, 0.0074, 0.0117, 0.0229, 0.0562, 0.0347, 0.0140,
         0.0183, 0.0410, 0.0452, 0.0059, 0.0189, 0.0326, 0.0273]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0851, 0.0172],
        [0.0897, 0.0398],
        [0.0743, 0.0141],
        [0.0429, 0.0074],
        [0.0503, 0.0117],
        [0.1049, 0.0229],
        [0.0876, 0.0562],
        [0.0776, 0.0347],
        [0.0887, 0.0140],
        [0.0687, 0.0183],
        [0.0804, 0.0410],
        [0.1118, 0.0452],
        [0.0244, 0.0059],
        [0.0605, 0.0189],
        [0.0706, 0.0326],
        [0.0848, 0.0273]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0862],
        [0.0714],
        [0.0829],
        [0.0798],
        [0.1223],
        [0.1031],
        [0.0662],
        [0.0803],
        [0.1235],
        [0.1748],
        [0.1147],
        [0.0608],
        [0.1260],
        [0.0490],
        [0.1075],
        [0.0578]], device='cuda:0', dtype=torch.float16)/tensor([[0.0862, 0.0714, 0.0829, 0.0798, 0.1223, 0.1031, 0.0662, 0.0803, 0.1235,
         0.1748, 0.1147, 0.0608, 0.1260, 0.0490, 0.1075, 0.0578]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0223],
        [0.0135],
        [0.0363],
        [0.0312],
        [0.0215],
        [0.0411],
        [0.0332],
        [0.0327],
        [0.0966],
        [0.0239],
        [0.0054],
        [0.0446],
        [0.0081],
        [0.0251],
        [0.0263]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0223, 0.0135, 0.0363, 0.0312, 0.0215, 0.0411, 0.0332, 0.0327,
         0.0966, 0.0239, 0.0054, 0.0446, 0.0081, 0.0251, 0.0263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0862, 0.0117],
        [0.0714, 0.0223],
        [0.0829, 0.0135],
        [0.0798, 0.0363],
        [0.1223, 0.0312],
        [0.1031, 0.0215],
        [0.0662, 0.0411],
        [0.0803, 0.0332],
        [0.1235, 0.0327],
        [0.1748, 0.0966],
        [0.1147, 0.0239],
        [0.0608, 0.0054],
        [0.1260, 0.0446],
        [0.0490, 0.0081],
        [0.1075, 0.0251],
        [0.0578, 0.0263]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0710],
        [0.1857],
        [0.0584],
        [0.1757],
        [0.0785],
        [0.0627],
        [0.0830],
        [0.0519],
        [0.1091],
        [0.0617],
        [0.0712],
        [0.0650],
        [0.1611],
        [0.0455],
        [0.0781],
        [0.0982]], device='cuda:0', dtype=torch.float16)/tensor([[0.0710, 0.1857, 0.0584, 0.1757, 0.0785, 0.0627, 0.0830, 0.0519, 0.1091,
         0.0617, 0.0712, 0.0650, 0.1611, 0.0455, 0.0781, 0.0982]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0179],
        [0.0549],
        [0.0330],
        [0.0726],
        [0.0181],
        [0.0123],
        [0.0169],
        [0.0072],
        [0.0386],
        [0.0244],
        [0.0384],
        [0.0090],
        [0.0726],
        [0.0067],
        [0.0162],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0179, 0.0549, 0.0330, 0.0726, 0.0181, 0.0123, 0.0169, 0.0072, 0.0386,
         0.0244, 0.0384, 0.0090, 0.0726, 0.0067, 0.0162, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0710, 0.0179],
        [0.1857, 0.0549],
        [0.0584, 0.0330],
        [0.1757, 0.0726],
        [0.0785, 0.0181],
        [0.0627, 0.0123],
        [0.0830, 0.0169],
        [0.0519, 0.0072],
        [0.1091, 0.0386],
        [0.0617, 0.0244],
        [0.0712, 0.0384],
        [0.0650, 0.0090],
        [0.1611, 0.0726],
        [0.0455, 0.0067],
        [0.0781, 0.0162],
        [0.0982, 0.0381]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0466],
        [0.1047],
        [0.0471],
        [0.1022],
        [0.0496],
        [0.0680],
        [0.0837],
        [0.0536]], device='cuda:0', dtype=torch.float16)/tensor([[0.0466, 0.1047, 0.0471, 0.1022, 0.0496, 0.0680, 0.0837, 0.0536]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0368],
        [0.0345],
        [0.0084],
        [0.0228],
        [0.0084],
        [0.0167],
        [0.0368],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0368, 0.0345, 0.0084, 0.0228, 0.0084, 0.0167, 0.0368, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0466, 0.0368],
        [0.1047, 0.0345],
        [0.0471, 0.0084],
        [0.1022, 0.0228],
        [0.0496, 0.0084],
        [0.0680, 0.0167],
        [0.0837, 0.0368],
        [0.0536, 0.0131]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type modal, variation 5 and batchsize 16: 0:03:25.050112
path ['42', 'en', 'llama', 'SA', 'modal', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA common 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.21it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1616],
        [0.0750],
        [0.0798],
        [0.0522],
        [0.1011],
        [0.0618],
        [0.0396],
        [0.0764],
        [0.1226],
        [0.0819],
        [0.0512],
        [0.0635],
        [0.0710],
        [0.0599],
        [0.0584],
        [0.0822]], device='cuda:0', dtype=torch.float16)/tensor([[0.1616, 0.0750, 0.0798, 0.0522, 0.1011, 0.0618, 0.0396, 0.0764, 0.1226,
         0.0819, 0.0512, 0.0635, 0.0710, 0.0599, 0.0584, 0.0822]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0563],
        [0.0055],
        [0.0374],
        [0.0135],
        [0.0318],
        [0.0679],
        [0.0295],
        [0.0624],
        [0.0465],
        [0.0764],
        [0.0308],
        [0.0743],
        [0.0338],
        [0.0776],
        [0.0693],
        [0.0535]], device='cuda:0', dtype=torch.float16)/tensor([[0.0563, 0.0055, 0.0374, 0.0135, 0.0318, 0.0679, 0.0295, 0.0624, 0.0465,
         0.0764, 0.0308, 0.0743, 0.0338, 0.0776, 0.0693, 0.0535]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1616, 0.0563],
        [0.0750, 0.0055],
        [0.0798, 0.0374],
        [0.0522, 0.0135],
        [0.1011, 0.0318],
        [0.0618, 0.0679],
        [0.0396, 0.0295],
        [0.0764, 0.0624],
        [0.1226, 0.0465],
        [0.0819, 0.0764],
        [0.0512, 0.0308],
        [0.0635, 0.0743],
        [0.0710, 0.0338],
        [0.0599, 0.0776],
        [0.0584, 0.0693],
        [0.0822, 0.0535]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0488],
        [0.0490],
        [0.0370],
        [0.0743],
        [0.0567],
        [0.0705],
        [0.1180],
        [0.4854],
        [0.0731],
        [0.0597],
        [0.0465],
        [0.0480],
        [0.1735],
        [0.0761],
        [0.1342],
        [0.1512]], device='cuda:0', dtype=torch.float16)/tensor([[0.0488, 0.0490, 0.0370, 0.0743, 0.0567, 0.0705, 0.1180, 0.4854, 0.0731,
         0.0597, 0.0465, 0.0480, 0.1735, 0.0761, 0.1342, 0.1512]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.1183],
        [0.0149],
        [0.0918],
        [0.0281],
        [0.0150],
        [0.0245],
        [0.0566],
        [0.1224],
        [0.0687],
        [0.0710],
        [0.0970],
        [0.0505],
        [0.0118],
        [0.0393],
        [0.1536]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.1183, 0.0149, 0.0918, 0.0281, 0.0150, 0.0245, 0.0566, 0.1224,
         0.0687, 0.0710, 0.0970, 0.0505, 0.0118, 0.0393, 0.1536]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0488, 0.0053],
        [0.0490, 0.1183],
        [0.0370, 0.0149],
        [0.0743, 0.0918],
        [0.0567, 0.0281],
        [0.0705, 0.0150],
        [0.1180, 0.0245],
        [0.4854, 0.0566],
        [0.0731, 0.1224],
        [0.0597, 0.0687],
        [0.0465, 0.0710],
        [0.0480, 0.0970],
        [0.1735, 0.0505],
        [0.0761, 0.0118],
        [0.1342, 0.0393],
        [0.1512, 0.1536]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0562],
        [0.1024],
        [0.1454],
        [0.1305],
        [0.0611],
        [0.0622],
        [0.0587],
        [0.0420],
        [0.0501],
        [0.0933],
        [0.1237],
        [0.0584],
        [0.0652],
        [0.0339],
        [0.0987],
        [0.0547]], device='cuda:0', dtype=torch.float16)/tensor([[0.0562, 0.1024, 0.1454, 0.1305, 0.0611, 0.0622, 0.0587, 0.0420, 0.0501,
         0.0933, 0.1237, 0.0584, 0.0652, 0.0339, 0.0987, 0.0547]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0238],
        [0.0365],
        [0.0515],
        [0.0208],
        [0.0570],
        [0.0622],
        [0.0100],
        [0.0749],
        [0.0517],
        [0.0507],
        [0.0280],
        [0.0844],
        [0.0445],
        [0.0416],
        [0.0489],
        [0.0560]], device='cuda:0', dtype=torch.float16)/tensor([[0.0238, 0.0365, 0.0515, 0.0208, 0.0570, 0.0622, 0.0100, 0.0749, 0.0517,
         0.0507, 0.0280, 0.0844, 0.0445, 0.0416, 0.0489, 0.0560]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0562, 0.0238],
        [0.1024, 0.0365],
        [0.1454, 0.0515],
        [0.1305, 0.0208],
        [0.0611, 0.0570],
        [0.0622, 0.0622],
        [0.0587, 0.0100],
        [0.0420, 0.0749],
        [0.0501, 0.0517],
        [0.0933, 0.0507],
        [0.1237, 0.0280],
        [0.0584, 0.0844],
        [0.0652, 0.0445],
        [0.0339, 0.0416],
        [0.0987, 0.0489],
        [0.0547, 0.0560]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0979],
        [0.0706],
        [0.0871],
        [0.0845],
        [0.0934],
        [0.0891],
        [0.0607],
        [0.0842],
        [0.0909],
        [0.2200],
        [0.1206],
        [0.0558],
        [0.0451],
        [0.0793],
        [0.0676],
        [0.0596]], device='cuda:0', dtype=torch.float16)/tensor([[0.0979, 0.0706, 0.0871, 0.0845, 0.0934, 0.0891, 0.0607, 0.0842, 0.0909,
         0.2200, 0.1206, 0.0558, 0.0451, 0.0793, 0.0676, 0.0596]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0756],
        [0.0366],
        [0.0268],
        [0.0246],
        [0.0166],
        [0.0266],
        [0.0955],
        [0.0510],
        [0.0316],
        [0.0917],
        [0.0175],
        [0.0825],
        [0.0704],
        [0.0174],
        [0.0743],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0366, 0.0268, 0.0246, 0.0166, 0.0266, 0.0955, 0.0510, 0.0316,
         0.0917, 0.0175, 0.0825, 0.0704, 0.0174, 0.0743, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0979, 0.0756],
        [0.0706, 0.0366],
        [0.0871, 0.0268],
        [0.0845, 0.0246],
        [0.0934, 0.0166],
        [0.0891, 0.0266],
        [0.0607, 0.0955],
        [0.0842, 0.0510],
        [0.0909, 0.0316],
        [0.2200, 0.0917],
        [0.1206, 0.0175],
        [0.0558, 0.0825],
        [0.0451, 0.0704],
        [0.0793, 0.0174],
        [0.0676, 0.0743],
        [0.0596, 0.0423]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0517],
        [0.0966],
        [0.0432],
        [0.0865],
        [0.1180],
        [0.1168],
        [0.1122],
        [0.0880],
        [0.0656],
        [0.0807],
        [0.0703],
        [0.0742],
        [0.0619],
        [0.0665],
        [0.0692],
        [0.0766]], device='cuda:0', dtype=torch.float16)/tensor([[0.0517, 0.0966, 0.0432, 0.0865, 0.1180, 0.1168, 0.1122, 0.0880, 0.0656,
         0.0807, 0.0703, 0.0742, 0.0619, 0.0665, 0.0692, 0.0766]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0525],
        [0.0237],
        [0.0264],
        [0.0419],
        [0.0267],
        [0.0258],
        [0.0426],
        [0.0901],
        [0.0458],
        [0.0396],
        [0.0742],
        [0.0457],
        [0.0538],
        [0.0639],
        [0.0909],
        [0.0362]], device='cuda:0', dtype=torch.float16)/tensor([[0.0525, 0.0237, 0.0264, 0.0419, 0.0267, 0.0258, 0.0426, 0.0901, 0.0458,
         0.0396, 0.0742, 0.0457, 0.0538, 0.0639, 0.0909, 0.0362]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0517, 0.0525],
        [0.0966, 0.0237],
        [0.0432, 0.0264],
        [0.0865, 0.0419],
        [0.1180, 0.0267],
        [0.1168, 0.0258],
        [0.1122, 0.0426],
        [0.0880, 0.0901],
        [0.0656, 0.0458],
        [0.0807, 0.0396],
        [0.0703, 0.0742],
        [0.0742, 0.0457],
        [0.0619, 0.0538],
        [0.0665, 0.0639],
        [0.0692, 0.0909],
        [0.0766, 0.0362]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0570],
        [0.0634],
        [0.0860],
        [0.0699],
        [0.0532],
        [0.0914],
        [0.0890],
        [0.0352],
        [0.0482],
        [0.0590],
        [0.0671],
        [0.0708],
        [0.0457],
        [0.0928],
        [0.0610],
        [0.0594]], device='cuda:0', dtype=torch.float16)/tensor([[0.0570, 0.0634, 0.0860, 0.0699, 0.0532, 0.0914, 0.0890, 0.0352, 0.0482,
         0.0590, 0.0671, 0.0708, 0.0457, 0.0928, 0.0610, 0.0594]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0661],
        [0.0753],
        [0.0117],
        [0.0500],
        [0.1170],
        [0.0782],
        [0.0184],
        [0.0209],
        [0.0443],
        [0.0486],
        [0.0337],
        [0.0526],
        [0.0681],
        [0.0623],
        [0.0385],
        [0.0756]], device='cuda:0', dtype=torch.float16)/tensor([[0.0661, 0.0753, 0.0117, 0.0500, 0.1170, 0.0782, 0.0184, 0.0209, 0.0443,
         0.0486, 0.0337, 0.0526, 0.0681, 0.0623, 0.0385, 0.0756]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0570, 0.0661],
        [0.0634, 0.0753],
        [0.0860, 0.0117],
        [0.0699, 0.0500],
        [0.0532, 0.1170],
        [0.0914, 0.0782],
        [0.0890, 0.0184],
        [0.0352, 0.0209],
        [0.0482, 0.0443],
        [0.0590, 0.0486],
        [0.0671, 0.0337],
        [0.0708, 0.0526],
        [0.0457, 0.0681],
        [0.0928, 0.0623],
        [0.0610, 0.0385],
        [0.0594, 0.0756]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0841],
        [0.0488],
        [0.1301],
        [0.0707],
        [0.0618],
        [0.0794],
        [0.1495],
        [0.0819],
        [0.1003],
        [0.0746],
        [0.0537],
        [0.0514],
        [0.1077],
        [0.0525],
        [0.0701],
        [0.0563]], device='cuda:0', dtype=torch.float16)/tensor([[0.0841, 0.0488, 0.1301, 0.0707, 0.0618, 0.0794, 0.1495, 0.0819, 0.1003,
         0.0746, 0.0537, 0.0514, 0.1077, 0.0525, 0.0701, 0.0563]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0162],
        [0.1199],
        [0.0840],
        [0.0629],
        [0.0517],
        [0.0311],
        [0.0290],
        [0.1393],
        [0.0318],
        [0.0943],
        [0.0525],
        [0.1176],
        [0.0706],
        [0.0929],
        [0.0669],
        [0.0609]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.1199, 0.0840, 0.0629, 0.0517, 0.0311, 0.0290, 0.1393, 0.0318,
         0.0943, 0.0525, 0.1176, 0.0706, 0.0929, 0.0669, 0.0609]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0841, 0.0162],
        [0.0488, 0.1199],
        [0.1301, 0.0840],
        [0.0707, 0.0629],
        [0.0618, 0.0517],
        [0.0794, 0.0311],
        [0.1495, 0.0290],
        [0.0819, 0.1393],
        [0.1003, 0.0318],
        [0.0746, 0.0943],
        [0.0537, 0.0525],
        [0.0514, 0.1176],
        [0.1077, 0.0706],
        [0.0525, 0.0929],
        [0.0701, 0.0669],
        [0.0563, 0.0609]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0923],
        [0.0698],
        [0.0445],
        [0.0735],
        [0.0757],
        [0.0312],
        [0.1210],
        [0.1118],
        [0.0404],
        [0.1130],
        [0.1087],
        [0.0853],
        [0.0659],
        [0.1232],
        [0.0941],
        [0.0504]], device='cuda:0', dtype=torch.float16)/tensor([[0.0923, 0.0698, 0.0445, 0.0735, 0.0757, 0.0312, 0.1210, 0.1118, 0.0404,
         0.1130, 0.1087, 0.0853, 0.0659, 0.1232, 0.0941, 0.0504]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0155],
        [0.0792],
        [0.0603],
        [0.0759],
        [0.0363],
        [0.0183],
        [0.1404],
        [0.0315],
        [0.0616],
        [0.0406],
        [0.0436],
        [0.0321],
        [0.0378],
        [0.0110],
        [0.0662],
        [0.0545]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0792, 0.0603, 0.0759, 0.0363, 0.0183, 0.1404, 0.0315, 0.0616,
         0.0406, 0.0436, 0.0321, 0.0378, 0.0110, 0.0662, 0.0545]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0923, 0.0155],
        [0.0698, 0.0792],
        [0.0445, 0.0603],
        [0.0735, 0.0759],
        [0.0757, 0.0363],
        [0.0312, 0.0183],
        [0.1210, 0.1404],
        [0.1118, 0.0315],
        [0.0404, 0.0616],
        [0.1130, 0.0406],
        [0.1087, 0.0436],
        [0.0853, 0.0321],
        [0.0659, 0.0378],
        [0.1232, 0.0110],
        [0.0941, 0.0662],
        [0.0504, 0.0545]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0679],
        [0.0654],
        [0.0643],
        [0.0536],
        [0.1166],
        [0.0827],
        [0.1371],
        [0.1028],
        [0.0497],
        [0.0847],
        [0.0591],
        [0.0276],
        [0.0763],
        [0.1700],
        [0.0723],
        [0.1113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0679, 0.0654, 0.0643, 0.0536, 0.1166, 0.0827, 0.1371, 0.1028, 0.0497,
         0.0847, 0.0591, 0.0276, 0.0763, 0.1700, 0.0723, 0.1113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0021],
        [0.0690],
        [0.0435],
        [0.0202],
        [0.0482],
        [0.0152],
        [0.0470],
        [0.0453],
        [0.0563],
        [0.0510],
        [0.0776],
        [0.0575],
        [0.0244],
        [0.0417],
        [0.0757],
        [0.0403]], device='cuda:0', dtype=torch.float16)/tensor([[0.0021, 0.0690, 0.0435, 0.0202, 0.0482, 0.0152, 0.0470, 0.0453, 0.0563,
         0.0510, 0.0776, 0.0575, 0.0244, 0.0417, 0.0757, 0.0403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0679, 0.0021],
        [0.0654, 0.0690],
        [0.0643, 0.0435],
        [0.0536, 0.0202],
        [0.1166, 0.0482],
        [0.0827, 0.0152],
        [0.1371, 0.0470],
        [0.1028, 0.0453],
        [0.0497, 0.0563],
        [0.0847, 0.0510],
        [0.0591, 0.0776],
        [0.0276, 0.0575],
        [0.0763, 0.0244],
        [0.1700, 0.0417],
        [0.0723, 0.0757],
        [0.1113, 0.0403]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1060],
        [0.1689],
        [0.0632],
        [0.0720],
        [0.0625],
        [0.0770],
        [0.0771],
        [0.0906],
        [0.0579],
        [0.0637],
        [0.0713],
        [0.1092],
        [0.0573],
        [0.0681],
        [0.0732],
        [0.0561]], device='cuda:0', dtype=torch.float16)/tensor([[0.1060, 0.1689, 0.0632, 0.0720, 0.0625, 0.0770, 0.0771, 0.0906, 0.0579,
         0.0637, 0.0713, 0.1092, 0.0573, 0.0681, 0.0732, 0.0561]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0313],
        [0.1664],
        [0.0428],
        [0.1024],
        [0.0854],
        [0.0422],
        [0.0337],
        [0.0197],
        [0.0732],
        [0.0850],
        [0.1251],
        [0.0905],
        [0.0534],
        [0.0874],
        [0.0289],
        [0.0354]], device='cuda:0', dtype=torch.float16)/tensor([[0.0313, 0.1664, 0.0428, 0.1024, 0.0854, 0.0422, 0.0337, 0.0197, 0.0732,
         0.0850, 0.1251, 0.0905, 0.0534, 0.0874, 0.0289, 0.0354]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1060, 0.0313],
        [0.1689, 0.1664],
        [0.0632, 0.0428],
        [0.0720, 0.1024],
        [0.0625, 0.0854],
        [0.0770, 0.0422],
        [0.0771, 0.0337],
        [0.0906, 0.0197],
        [0.0579, 0.0732],
        [0.0637, 0.0850],
        [0.0713, 0.1251],
        [0.1092, 0.0905],
        [0.0573, 0.0534],
        [0.0681, 0.0874],
        [0.0732, 0.0289],
        [0.0561, 0.0354]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0676],
        [0.0807],
        [0.0815],
        [0.0663],
        [0.1451],
        [0.0407],
        [0.1028],
        [0.0674],
        [0.0878],
        [0.0788],
        [0.1547],
        [0.0534],
        [0.0711],
        [0.0880],
        [0.1235],
        [0.0877]], device='cuda:0', dtype=torch.float16)/tensor([[0.0676, 0.0807, 0.0815, 0.0663, 0.1451, 0.0407, 0.1028, 0.0674, 0.0878,
         0.0788, 0.1547, 0.0534, 0.0711, 0.0880, 0.1235, 0.0877]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0796],
        [0.0385],
        [0.0069],
        [0.0663],
        [0.0271],
        [0.0407],
        [0.0266],
        [0.0826],
        [0.0387],
        [0.0352],
        [0.1534],
        [0.0394],
        [0.0864],
        [0.0789],
        [0.0574],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0796, 0.0385, 0.0069, 0.0663, 0.0271, 0.0407, 0.0266, 0.0826, 0.0387,
         0.0352, 0.1534, 0.0394, 0.0864, 0.0789, 0.0574, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0676, 0.0796],
        [0.0807, 0.0385],
        [0.0815, 0.0069],
        [0.0663, 0.0663],
        [0.1451, 0.0271],
        [0.0407, 0.0407],
        [0.1028, 0.0266],
        [0.0674, 0.0826],
        [0.0878, 0.0387],
        [0.0788, 0.0352],
        [0.1547, 0.1534],
        [0.0534, 0.0394],
        [0.0711, 0.0864],
        [0.0880, 0.0789],
        [0.1235, 0.0574],
        [0.0877, 0.0150]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0792],
        [0.1148],
        [0.0812],
        [0.1273],
        [0.0848],
        [0.0415],
        [0.0469],
        [0.0664],
        [0.0692],
        [0.1038],
        [0.1027],
        [0.0654],
        [0.0470],
        [0.0679],
        [0.0585],
        [0.0920]], device='cuda:0', dtype=torch.float16)/tensor([[0.0792, 0.1148, 0.0812, 0.1273, 0.0848, 0.0415, 0.0469, 0.0664, 0.0692,
         0.1038, 0.1027, 0.0654, 0.0470, 0.0679, 0.0585, 0.0920]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0111],
        [0.0192],
        [0.0950],
        [0.0556],
        [0.0797],
        [0.0712],
        [0.0977],
        [0.0776],
        [0.0216],
        [0.0170],
        [0.0262],
        [0.0467],
        [0.1248],
        [0.0403],
        [0.0311],
        [0.0613]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0192, 0.0950, 0.0556, 0.0797, 0.0712, 0.0977, 0.0776, 0.0216,
         0.0170, 0.0262, 0.0467, 0.1248, 0.0403, 0.0311, 0.0613]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0792, 0.0111],
        [0.1148, 0.0192],
        [0.0812, 0.0950],
        [0.1273, 0.0556],
        [0.0848, 0.0797],
        [0.0415, 0.0712],
        [0.0469, 0.0977],
        [0.0664, 0.0776],
        [0.0692, 0.0216],
        [0.1038, 0.0170],
        [0.1027, 0.0262],
        [0.0654, 0.0467],
        [0.0470, 0.1248],
        [0.0679, 0.0403],
        [0.0585, 0.0311],
        [0.0920, 0.0613]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0571],
        [0.0978],
        [0.0619],
        [0.0381],
        [0.0588],
        [0.0610],
        [0.0795],
        [0.0986]], device='cuda:0', dtype=torch.float16)/tensor([[0.0571, 0.0978, 0.0619, 0.0381, 0.0588, 0.0610, 0.0795, 0.0986]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0044],
        [0.0401],
        [0.0644],
        [0.0562],
        [0.0191],
        [0.0615],
        [0.0246],
        [0.0298]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0401, 0.0644, 0.0562, 0.0191, 0.0615, 0.0246, 0.0298]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0571, 0.0044],
        [0.0978, 0.0401],
        [0.0619, 0.0644],
        [0.0381, 0.0562],
        [0.0588, 0.0191],
        [0.0610, 0.0615],
        [0.0795, 0.0246],
        [0.0986, 0.0298]], device='cuda:0')
acc:  0.805
Time taken to execute the en SA task with prompt type common, variation 0 and batchsize 16: 0:03:24.562909
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b SA common 1 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 316.70it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1489],
        [0.1293],
        [0.1602],
        [0.1504],
        [0.1144],
        [0.1918],
        [0.0556],
        [0.1464],
        [0.1148],
        [0.2029],
        [0.1531],
        [0.1127],
        [0.0948],
        [0.1359],
        [0.1094],
        [0.1112]], device='cuda:0', dtype=torch.float16)/tensor([[0.1489, 0.1293, 0.1602, 0.1504, 0.1144, 0.1918, 0.0556, 0.1464, 0.1148,
         0.2029, 0.1531, 0.1127, 0.0948, 0.1359, 0.1094, 0.1112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0682],
        [0.0552],
        [0.0111],
        [0.0622],
        [0.0492],
        [0.0418],
        [0.0182],
        [0.0286],
        [0.0145],
        [0.0339],
        [0.0254],
        [0.0210],
        [0.0360],
        [0.0511],
        [0.0316],
        [0.0396]], device='cuda:0', dtype=torch.float16)/tensor([[0.0682, 0.0552, 0.0111, 0.0622, 0.0492, 0.0418, 0.0182, 0.0286, 0.0145,
         0.0339, 0.0254, 0.0210, 0.0360, 0.0511, 0.0316, 0.0396]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1489, 0.0682],
        [0.1293, 0.0552],
        [0.1602, 0.0111],
        [0.1504, 0.0622],
        [0.1144, 0.0492],
        [0.1918, 0.0418],
        [0.0556, 0.0182],
        [0.1464, 0.0286],
        [0.1148, 0.0145],
        [0.2029, 0.0339],
        [0.1531, 0.0254],
        [0.1127, 0.0210],
        [0.0948, 0.0360],
        [0.1359, 0.0511],
        [0.1094, 0.0316],
        [0.1112, 0.0396]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1183],
        [0.3005],
        [0.1237],
        [0.1506],
        [0.1227],
        [0.1699],
        [0.1824],
        [0.1278],
        [0.1443],
        [0.1191],
        [0.0908],
        [0.0703],
        [0.1449],
        [0.1461],
        [0.1429],
        [0.1074]], device='cuda:0', dtype=torch.float16)/tensor([[0.1183, 0.3005, 0.1237, 0.1506, 0.1227, 0.1699, 0.1824, 0.1278, 0.1443,
         0.1191, 0.0908, 0.0703, 0.1449, 0.1461, 0.1429, 0.1074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0262],
        [0.0436],
        [0.0580],
        [0.0181],
        [0.0462],
        [0.0502],
        [0.0447],
        [0.0520],
        [0.0377],
        [0.0367],
        [0.0429],
        [0.0491],
        [0.0157],
        [0.0193],
        [0.0426],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0262, 0.0436, 0.0580, 0.0181, 0.0462, 0.0502, 0.0447, 0.0520, 0.0377,
         0.0367, 0.0429, 0.0491, 0.0157, 0.0193, 0.0426, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1183, 0.0262],
        [0.3005, 0.0436],
        [0.1237, 0.0580],
        [0.1506, 0.0181],
        [0.1227, 0.0462],
        [0.1699, 0.0502],
        [0.1824, 0.0447],
        [0.1278, 0.0520],
        [0.1443, 0.0377],
        [0.1191, 0.0367],
        [0.0908, 0.0429],
        [0.0703, 0.0491],
        [0.1449, 0.0157],
        [0.1461, 0.0193],
        [0.1429, 0.0426],
        [0.1074, 0.0108]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1058],
        [0.0712],
        [0.1393],
        [0.1312],
        [0.1184],
        [0.0900],
        [0.1183],
        [0.0614],
        [0.1141],
        [0.1460],
        [0.1089],
        [0.1098],
        [0.1345],
        [0.0813],
        [0.0707],
        [0.1494]], device='cuda:0', dtype=torch.float16)/tensor([[0.1058, 0.0712, 0.1393, 0.1312, 0.1184, 0.0900, 0.1183, 0.0614, 0.1141,
         0.1460, 0.1089, 0.1098, 0.1345, 0.0813, 0.0707, 0.1494]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0217],
        [0.0559],
        [0.0153],
        [0.0300],
        [0.0729],
        [0.0233],
        [0.0654],
        [0.0184],
        [0.0177],
        [0.0169],
        [0.0239],
        [0.0312],
        [0.0574],
        [0.0537],
        [0.0600],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0217, 0.0559, 0.0153, 0.0300, 0.0729, 0.0233, 0.0654, 0.0184, 0.0177,
         0.0169, 0.0239, 0.0312, 0.0574, 0.0537, 0.0600, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1058, 0.0217],
        [0.0712, 0.0559],
        [0.1393, 0.0153],
        [0.1312, 0.0300],
        [0.1184, 0.0729],
        [0.0900, 0.0233],
        [0.1183, 0.0654],
        [0.0614, 0.0184],
        [0.1141, 0.0177],
        [0.1460, 0.0169],
        [0.1089, 0.0239],
        [0.1098, 0.0312],
        [0.1345, 0.0574],
        [0.0813, 0.0537],
        [0.0707, 0.0600],
        [0.1494, 0.0120]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0768],
        [0.1471],
        [0.1173],
        [0.1426],
        [0.1105],
        [0.1407],
        [0.1320],
        [0.2465],
        [0.1055],
        [0.1049],
        [0.1057],
        [0.1593],
        [0.1774],
        [0.1547],
        [0.1096],
        [0.0799]], device='cuda:0', dtype=torch.float16)/tensor([[0.0768, 0.1471, 0.1173, 0.1426, 0.1105, 0.1407, 0.1320, 0.2465, 0.1055,
         0.1049, 0.1057, 0.1593, 0.1774, 0.1547, 0.1096, 0.0799]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0462],
        [0.0246],
        [0.0581],
        [0.0202],
        [0.0376],
        [0.0534],
        [0.0542],
        [0.0865],
        [0.0461],
        [0.0207],
        [0.0089],
        [0.0250],
        [0.0408],
        [0.0450],
        [0.0453],
        [0.0301]], device='cuda:0', dtype=torch.float16)/tensor([[0.0462, 0.0246, 0.0581, 0.0202, 0.0376, 0.0534, 0.0542, 0.0865, 0.0461,
         0.0207, 0.0089, 0.0250, 0.0408, 0.0450, 0.0453, 0.0301]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0768, 0.0462],
        [0.1471, 0.0246],
        [0.1173, 0.0581],
        [0.1426, 0.0202],
        [0.1105, 0.0376],
        [0.1407, 0.0534],
        [0.1320, 0.0542],
        [0.2465, 0.0865],
        [0.1055, 0.0461],
        [0.1049, 0.0207],
        [0.1057, 0.0089],
        [0.1593, 0.0250],
        [0.1774, 0.0408],
        [0.1547, 0.0450],
        [0.1096, 0.0453],
        [0.0799, 0.0301]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1519],
        [0.1571],
        [0.1080],
        [0.3826],
        [0.1497],
        [0.1589],
        [0.1074],
        [0.1147],
        [0.1246],
        [0.1785],
        [0.1658],
        [0.1414],
        [0.1122],
        [0.1725],
        [0.1875],
        [0.1725]], device='cuda:0', dtype=torch.float16)/tensor([[0.1519, 0.1571, 0.1080, 0.3826, 0.1497, 0.1589, 0.1074, 0.1147, 0.1246,
         0.1785, 0.1658, 0.1414, 0.1122, 0.1725, 0.1875, 0.1725]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0546],
        [0.0182],
        [0.0156],
        [0.0436],
        [0.0180],
        [0.0504],
        [0.0322],
        [0.0493],
        [0.0469],
        [0.0315],
        [0.0190],
        [0.0121],
        [0.0670],
        [0.0382],
        [0.0219],
        [0.0286]], device='cuda:0', dtype=torch.float16)/tensor([[0.0546, 0.0182, 0.0156, 0.0436, 0.0180, 0.0504, 0.0322, 0.0493, 0.0469,
         0.0315, 0.0190, 0.0121, 0.0670, 0.0382, 0.0219, 0.0286]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1519, 0.0546],
        [0.1571, 0.0182],
        [0.1080, 0.0156],
        [0.3826, 0.0436],
        [0.1497, 0.0180],
        [0.1589, 0.0504],
        [0.1074, 0.0322],
        [0.1147, 0.0493],
        [0.1246, 0.0469],
        [0.1785, 0.0315],
        [0.1658, 0.0190],
        [0.1414, 0.0121],
        [0.1122, 0.0670],
        [0.1725, 0.0382],
        [0.1875, 0.0219],
        [0.1725, 0.0286]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1393],
        [0.1914],
        [0.1548],
        [0.1406],
        [0.1293],
        [0.1417],
        [0.2379],
        [0.1753],
        [0.1592],
        [0.1830],
        [0.2386],
        [0.1625],
        [0.1368],
        [0.1072],
        [0.1356],
        [0.1624]], device='cuda:0', dtype=torch.float16)/tensor([[0.1393, 0.1914, 0.1548, 0.1406, 0.1293, 0.1417, 0.2379, 0.1753, 0.1592,
         0.1830, 0.2386, 0.1625, 0.1368, 0.1072, 0.1356, 0.1624]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0149],
        [0.0296],
        [0.0213],
        [0.0230],
        [0.0332],
        [0.0359],
        [0.0790],
        [0.0223],
        [0.0176],
        [0.0172],
        [0.0851],
        [0.0123],
        [0.0211],
        [0.0522],
        [0.0178],
        [0.0371]], device='cuda:0', dtype=torch.float16)/tensor([[0.0149, 0.0296, 0.0213, 0.0230, 0.0332, 0.0359, 0.0790, 0.0223, 0.0176,
         0.0172, 0.0851, 0.0123, 0.0211, 0.0522, 0.0178, 0.0371]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1393, 0.0149],
        [0.1914, 0.0296],
        [0.1548, 0.0213],
        [0.1406, 0.0230],
        [0.1293, 0.0332],
        [0.1417, 0.0359],
        [0.2379, 0.0790],
        [0.1753, 0.0223],
        [0.1592, 0.0176],
        [0.1830, 0.0172],
        [0.2386, 0.0851],
        [0.1625, 0.0123],
        [0.1368, 0.0211],
        [0.1072, 0.0522],
        [0.1356, 0.0178],
        [0.1624, 0.0371]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1024],
        [0.1027],
        [0.1027],
        [0.1176],
        [0.1537],
        [0.1378],
        [0.2690],
        [0.1208],
        [0.1501],
        [0.1465],
        [0.1753],
        [0.1248],
        [0.1639],
        [0.1210],
        [0.1383],
        [0.1002]], device='cuda:0', dtype=torch.float16)/tensor([[0.1024, 0.1027, 0.1027, 0.1176, 0.1537, 0.1378, 0.2690, 0.1208, 0.1501,
         0.1465, 0.1753, 0.1248, 0.1639, 0.1210, 0.1383, 0.1002]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0407],
        [0.0623],
        [0.0711],
        [0.0221],
        [0.0276],
        [0.0240],
        [0.0271],
        [0.0120],
        [0.0484],
        [0.0397],
        [0.0210],
        [0.0728],
        [0.0438],
        [0.0197],
        [0.0258],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0407, 0.0623, 0.0711, 0.0221, 0.0276, 0.0240, 0.0271, 0.0120, 0.0484,
         0.0397, 0.0210, 0.0728, 0.0438, 0.0197, 0.0258, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1024, 0.0407],
        [0.1027, 0.0623],
        [0.1027, 0.0711],
        [0.1176, 0.0221],
        [0.1537, 0.0276],
        [0.1378, 0.0240],
        [0.2690, 0.0271],
        [0.1208, 0.0120],
        [0.1501, 0.0484],
        [0.1465, 0.0397],
        [0.1753, 0.0210],
        [0.1248, 0.0728],
        [0.1639, 0.0438],
        [0.1210, 0.0197],
        [0.1383, 0.0258],
        [0.1002, 0.0141]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1725],
        [0.1608],
        [0.1552],
        [0.1426],
        [0.1385],
        [0.1137],
        [0.1166],
        [0.1711],
        [0.1556],
        [0.0665],
        [0.2217],
        [0.0859],
        [0.1648],
        [0.1549],
        [0.0983],
        [0.1711]], device='cuda:0', dtype=torch.float16)/tensor([[0.1725, 0.1608, 0.1552, 0.1426, 0.1385, 0.1137, 0.1166, 0.1711, 0.1556,
         0.0665, 0.2217, 0.0859, 0.1648, 0.1549, 0.0983, 0.1711]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0198],
        [0.0440],
        [0.0511],
        [0.0493],
        [0.0171],
        [0.0266],
        [0.0432],
        [0.0158],
        [0.0172],
        [0.0691],
        [0.0731],
        [0.0550],
        [0.0398],
        [0.0185],
        [0.0724],
        [0.0138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0198, 0.0440, 0.0511, 0.0493, 0.0171, 0.0266, 0.0432, 0.0158, 0.0172,
         0.0691, 0.0731, 0.0550, 0.0398, 0.0185, 0.0724, 0.0138]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1725, 0.0198],
        [0.1608, 0.0440],
        [0.1552, 0.0511],
        [0.1426, 0.0493],
        [0.1385, 0.0171],
        [0.1137, 0.0266],
        [0.1166, 0.0432],
        [0.1711, 0.0158],
        [0.1556, 0.0172],
        [0.0665, 0.0691],
        [0.2217, 0.0731],
        [0.0859, 0.0550],
        [0.1648, 0.0398],
        [0.1549, 0.0185],
        [0.0983, 0.0724],
        [0.1711, 0.0138]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0957],
        [0.1348],
        [0.0838],
        [0.1666],
        [0.1429],
        [0.1493],
        [0.1207],
        [0.0891],
        [0.1656],
        [0.1509],
        [0.1698],
        [0.2091],
        [0.1639],
        [0.1371],
        [0.1647],
        [0.1399]], device='cuda:0', dtype=torch.float16)/tensor([[0.0957, 0.1348, 0.0838, 0.1666, 0.1429, 0.1493, 0.1207, 0.0891, 0.1656,
         0.1509, 0.1698, 0.2091, 0.1639, 0.1371, 0.1647, 0.1399]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0466],
        [0.0532],
        [0.0120],
        [0.0290],
        [0.0742],
        [0.0493],
        [0.0171],
        [0.0213],
        [0.0364],
        [0.0186],
        [0.0237],
        [0.0264],
        [0.0354],
        [0.0294],
        [0.0362],
        [0.0511]], device='cuda:0', dtype=torch.float16)/tensor([[0.0466, 0.0532, 0.0120, 0.0290, 0.0742, 0.0493, 0.0171, 0.0213, 0.0364,
         0.0186, 0.0237, 0.0264, 0.0354, 0.0294, 0.0362, 0.0511]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0957, 0.0466],
        [0.1348, 0.0532],
        [0.0838, 0.0120],
        [0.1666, 0.0290],
        [0.1429, 0.0742],
        [0.1493, 0.0493],
        [0.1207, 0.0171],
        [0.0891, 0.0213],
        [0.1656, 0.0364],
        [0.1509, 0.0186],
        [0.1698, 0.0237],
        [0.2091, 0.0264],
        [0.1639, 0.0354],
        [0.1371, 0.0294],
        [0.1647, 0.0362],
        [0.1399, 0.0511]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1542],
        [0.1046],
        [0.1274],
        [0.1255],
        [0.1696],
        [0.1260],
        [0.1129],
        [0.2281],
        [0.1047],
        [0.1226],
        [0.1008],
        [0.2311],
        [0.1237],
        [0.1963],
        [0.1201],
        [0.0857]], device='cuda:0', dtype=torch.float16)/tensor([[0.1542, 0.1046, 0.1274, 0.1255, 0.1696, 0.1260, 0.1129, 0.2281, 0.1047,
         0.1226, 0.1008, 0.2311, 0.1237, 0.1963, 0.1201, 0.0857]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0266],
        [0.0624],
        [0.0222],
        [0.0335],
        [0.0219],
        [0.0323],
        [0.0141],
        [0.0746],
        [0.0307],
        [0.0519],
        [0.0195],
        [0.0232],
        [0.0096],
        [0.0215],
        [0.0541],
        [0.0575]], device='cuda:0', dtype=torch.float16)/tensor([[0.0266, 0.0624, 0.0222, 0.0335, 0.0219, 0.0323, 0.0141, 0.0746, 0.0307,
         0.0519, 0.0195, 0.0232, 0.0096, 0.0215, 0.0541, 0.0575]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1542, 0.0266],
        [0.1046, 0.0624],
        [0.1274, 0.0222],
        [0.1255, 0.0335],
        [0.1696, 0.0219],
        [0.1260, 0.0323],
        [0.1129, 0.0141],
        [0.2281, 0.0746],
        [0.1047, 0.0307],
        [0.1226, 0.0519],
        [0.1008, 0.0195],
        [0.2311, 0.0232],
        [0.1237, 0.0096],
        [0.1963, 0.0215],
        [0.1201, 0.0541],
        [0.0857, 0.0575]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1431],
        [0.1779],
        [0.1580],
        [0.1555],
        [0.0854],
        [0.1733],
        [0.1433],
        [0.1875],
        [0.1248],
        [0.1178],
        [0.1261],
        [0.1238],
        [0.0865],
        [0.1255],
        [0.0988],
        [0.2306]], device='cuda:0', dtype=torch.float16)/tensor([[0.1431, 0.1779, 0.1580, 0.1555, 0.0854, 0.1733, 0.1433, 0.1875, 0.1248,
         0.1178, 0.1261, 0.1238, 0.0865, 0.1255, 0.0988, 0.2306]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0334],
        [0.0461],
        [0.0254],
        [0.0158],
        [0.0419],
        [0.0294],
        [0.0152],
        [0.0268],
        [0.0130],
        [0.0465],
        [0.0087],
        [0.0248],
        [0.0326],
        [0.0411],
        [0.0399],
        [0.0188]], device='cuda:0', dtype=torch.float16)/tensor([[0.0334, 0.0461, 0.0254, 0.0158, 0.0419, 0.0294, 0.0152, 0.0268, 0.0130,
         0.0465, 0.0087, 0.0248, 0.0326, 0.0411, 0.0399, 0.0188]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1431, 0.0334],
        [0.1779, 0.0461],
        [0.1580, 0.0254],
        [0.1555, 0.0158],
        [0.0854, 0.0419],
        [0.1733, 0.0294],
        [0.1433, 0.0152],
        [0.1875, 0.0268],
        [0.1248, 0.0130],
        [0.1178, 0.0465],
        [0.1261, 0.0087],
        [0.1238, 0.0248],
        [0.0865, 0.0326],
        [0.1255, 0.0411],
        [0.0988, 0.0399],
        [0.2306, 0.0188]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1311],
        [0.1639],
        [0.1421],
        [0.0798],
        [0.1937],
        [0.1736],
        [0.1064],
        [0.1552],
        [0.1803],
        [0.1475],
        [0.1956],
        [0.0867],
        [0.1355],
        [0.1078],
        [0.1305],
        [0.1395]], device='cuda:0', dtype=torch.float16)/tensor([[0.1311, 0.1639, 0.1421, 0.0798, 0.1937, 0.1736, 0.1064, 0.1552, 0.1803,
         0.1475, 0.1956, 0.0867, 0.1355, 0.1078, 0.1305, 0.1395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0450],
        [0.0287],
        [0.0261],
        [0.0561],
        [0.0256],
        [0.0283],
        [0.0454],
        [0.0251],
        [0.0334],
        [0.0654],
        [0.0233],
        [0.0413],
        [0.0491],
        [0.0373],
        [0.0141],
        [0.0396]], device='cuda:0', dtype=torch.float16)/tensor([[0.0450, 0.0287, 0.0261, 0.0561, 0.0256, 0.0283, 0.0454, 0.0251, 0.0334,
         0.0654, 0.0233, 0.0413, 0.0491, 0.0373, 0.0141, 0.0396]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1311, 0.0450],
        [0.1639, 0.0287],
        [0.1421, 0.0261],
        [0.0798, 0.0561],
        [0.1937, 0.0256],
        [0.1736, 0.0283],
        [0.1064, 0.0454],
        [0.1552, 0.0251],
        [0.1803, 0.0334],
        [0.1475, 0.0654],
        [0.1956, 0.0233],
        [0.0867, 0.0413],
        [0.1355, 0.0491],
        [0.1078, 0.0373],
        [0.1305, 0.0141],
        [0.1395, 0.0396]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1449],
        [0.1707],
        [0.0652],
        [0.1442],
        [0.1578],
        [0.1840],
        [0.1265],
        [0.1412]], device='cuda:0', dtype=torch.float16)/tensor([[0.1449, 0.1707, 0.0652, 0.1442, 0.1578, 0.1840, 0.1265, 0.1412]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0283],
        [0.0217],
        [0.0269],
        [0.0192],
        [0.0258],
        [0.0265],
        [0.0293],
        [0.0190]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0217, 0.0269, 0.0192, 0.0258, 0.0265, 0.0293, 0.0190]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1449, 0.0283],
        [0.1707, 0.0217],
        [0.0652, 0.0269],
        [0.1442, 0.0192],
        [0.1578, 0.0258],
        [0.1840, 0.0265],
        [0.1265, 0.0293],
        [0.1412, 0.0190]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type common, variation 1 and batchsize 16: 0:03:25.572468
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b SA common 2 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 334.34it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0898],
        [0.1099],
        [0.1121],
        [0.0752],
        [0.1017],
        [0.0844],
        [0.1008],
        [0.0917],
        [0.0963],
        [0.0778],
        [0.1019],
        [0.0900],
        [0.0591],
        [0.0854],
        [0.0778],
        [0.0821]], device='cuda:0', dtype=torch.float16)/tensor([[0.0898, 0.1099, 0.1121, 0.0752, 0.1017, 0.0844, 0.1008, 0.0917, 0.0963,
         0.0778, 0.1019, 0.0900, 0.0591, 0.0854, 0.0778, 0.0821]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0536],
        [0.0171],
        [0.0102],
        [0.0378],
        [0.0626],
        [0.0401],
        [0.0094],
        [0.0197],
        [0.0408],
        [0.0098],
        [0.0260],
        [0.0098],
        [0.0453],
        [0.0367],
        [0.0234],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0536, 0.0171, 0.0102, 0.0378, 0.0626, 0.0401, 0.0094, 0.0197, 0.0408,
         0.0098, 0.0260, 0.0098, 0.0453, 0.0367, 0.0234, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0898, 0.0536],
        [0.1099, 0.0171],
        [0.1121, 0.0102],
        [0.0752, 0.0378],
        [0.1017, 0.0626],
        [0.0844, 0.0401],
        [0.1008, 0.0094],
        [0.0917, 0.0197],
        [0.0963, 0.0408],
        [0.0778, 0.0098],
        [0.1019, 0.0260],
        [0.0900, 0.0098],
        [0.0591, 0.0453],
        [0.0854, 0.0367],
        [0.0778, 0.0234],
        [0.0821, 0.0107]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1008],
        [0.0579],
        [0.0536],
        [0.0882],
        [0.0629],
        [0.1823],
        [0.0764],
        [0.0684],
        [0.0851],
        [0.0720],
        [0.0701],
        [0.1065],
        [0.1028],
        [0.0960],
        [0.0952],
        [0.0961]], device='cuda:0', dtype=torch.float16)/tensor([[0.1008, 0.0579, 0.0536, 0.0882, 0.0629, 0.1823, 0.0764, 0.0684, 0.0851,
         0.0720, 0.0701, 0.1065, 0.1028, 0.0960, 0.0952, 0.0961]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0197],
        [0.0431],
        [0.0545],
        [0.0457],
        [0.0513],
        [0.0834],
        [0.0240],
        [0.0537],
        [0.0432],
        [0.0414],
        [0.0512],
        [0.0090],
        [0.0164],
        [0.0342],
        [0.0128],
        [0.0461]], device='cuda:0', dtype=torch.float16)/tensor([[0.0197, 0.0431, 0.0545, 0.0457, 0.0513, 0.0834, 0.0240, 0.0537, 0.0432,
         0.0414, 0.0512, 0.0090, 0.0164, 0.0342, 0.0128, 0.0461]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1008, 0.0197],
        [0.0579, 0.0431],
        [0.0536, 0.0545],
        [0.0882, 0.0457],
        [0.0629, 0.0513],
        [0.1823, 0.0834],
        [0.0764, 0.0240],
        [0.0684, 0.0537],
        [0.0851, 0.0432],
        [0.0720, 0.0414],
        [0.0701, 0.0512],
        [0.1065, 0.0090],
        [0.1028, 0.0164],
        [0.0960, 0.0342],
        [0.0952, 0.0128],
        [0.0961, 0.0461]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0771],
        [0.1359],
        [0.1161],
        [0.0791],
        [0.0748],
        [0.0406],
        [0.0900],
        [0.1020],
        [0.0558],
        [0.0622],
        [0.0537],
        [0.0806],
        [0.0727],
        [0.1586],
        [0.0695],
        [0.1508]], device='cuda:0', dtype=torch.float16)/tensor([[0.0771, 0.1359, 0.1161, 0.0791, 0.0748, 0.0406, 0.0900, 0.1020, 0.0558,
         0.0622, 0.0537, 0.0806, 0.0727, 0.1586, 0.0695, 0.1508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0518],
        [0.0165],
        [0.0602],
        [0.0540],
        [0.0327],
        [0.0464],
        [0.0294],
        [0.0086],
        [0.0191],
        [0.0276],
        [0.0485],
        [0.0150],
        [0.0149],
        [0.0743],
        [0.0328],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0518, 0.0165, 0.0602, 0.0540, 0.0327, 0.0464, 0.0294, 0.0086, 0.0191,
         0.0276, 0.0485, 0.0150, 0.0149, 0.0743, 0.0328, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0771, 0.0518],
        [0.1359, 0.0165],
        [0.1161, 0.0602],
        [0.0791, 0.0540],
        [0.0748, 0.0327],
        [0.0406, 0.0464],
        [0.0900, 0.0294],
        [0.1020, 0.0086],
        [0.0558, 0.0191],
        [0.0622, 0.0276],
        [0.0537, 0.0485],
        [0.0806, 0.0150],
        [0.0727, 0.0149],
        [0.1586, 0.0743],
        [0.0695, 0.0328],
        [0.1508, 0.0195]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1030],
        [0.0902],
        [0.1061],
        [0.0612],
        [0.1220],
        [0.0996],
        [0.0953],
        [0.0962],
        [0.1260],
        [0.1137],
        [0.1080],
        [0.1011],
        [0.0850],
        [0.0906],
        [0.0977],
        [0.0963]], device='cuda:0', dtype=torch.float16)/tensor([[0.1030, 0.0902, 0.1061, 0.0612, 0.1220, 0.0996, 0.0953, 0.0962, 0.1260,
         0.1137, 0.1080, 0.1011, 0.0850, 0.0906, 0.0977, 0.0963]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0290],
        [0.0035],
        [0.0093],
        [0.0727],
        [0.0339],
        [0.0350],
        [0.0373],
        [0.0114],
        [0.0239],
        [0.0096],
        [0.0457],
        [0.0349],
        [0.0087],
        [0.0272],
        [0.0484],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0290, 0.0035, 0.0093, 0.0727, 0.0339, 0.0350, 0.0373, 0.0114, 0.0239,
         0.0096, 0.0457, 0.0349, 0.0087, 0.0272, 0.0484, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1030, 0.0290],
        [0.0902, 0.0035],
        [0.1061, 0.0093],
        [0.0612, 0.0727],
        [0.1220, 0.0339],
        [0.0996, 0.0350],
        [0.0953, 0.0373],
        [0.0962, 0.0114],
        [0.1260, 0.0239],
        [0.1137, 0.0096],
        [0.1080, 0.0457],
        [0.1011, 0.0349],
        [0.0850, 0.0087],
        [0.0906, 0.0272],
        [0.0977, 0.0484],
        [0.0963, 0.0027]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0718],
        [0.0886],
        [0.0898],
        [0.0921],
        [0.0839],
        [0.1365],
        [0.0741],
        [0.1301],
        [0.0971],
        [0.0876],
        [0.0779],
        [0.0967],
        [0.0931],
        [0.0681],
        [0.0629],
        [0.0847]], device='cuda:0', dtype=torch.float16)/tensor([[0.0718, 0.0886, 0.0898, 0.0921, 0.0839, 0.1365, 0.0741, 0.1301, 0.0971,
         0.0876, 0.0779, 0.0967, 0.0931, 0.0681, 0.0629, 0.0847]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0394],
        [0.0205],
        [0.0129],
        [0.0128],
        [0.0171],
        [0.0082],
        [0.0347],
        [0.0201],
        [0.0428],
        [0.0093],
        [0.0389],
        [0.0100],
        [0.0267],
        [0.0150],
        [0.0032],
        [0.0376]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0205, 0.0129, 0.0128, 0.0171, 0.0082, 0.0347, 0.0201, 0.0428,
         0.0093, 0.0389, 0.0100, 0.0267, 0.0150, 0.0032, 0.0376]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0718, 0.0394],
        [0.0886, 0.0205],
        [0.0898, 0.0129],
        [0.0921, 0.0128],
        [0.0839, 0.0171],
        [0.1365, 0.0082],
        [0.0741, 0.0347],
        [0.1301, 0.0201],
        [0.0971, 0.0428],
        [0.0876, 0.0093],
        [0.0779, 0.0389],
        [0.0967, 0.0100],
        [0.0931, 0.0267],
        [0.0681, 0.0150],
        [0.0629, 0.0032],
        [0.0847, 0.0376]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1099],
        [0.0694],
        [0.0738],
        [0.0966],
        [0.1056],
        [0.1256],
        [0.1410],
        [0.1311],
        [0.1139],
        [0.1006],
        [0.0934],
        [0.0916],
        [0.1281],
        [0.0969],
        [0.0737],
        [0.1281]], device='cuda:0', dtype=torch.float16)/tensor([[0.1099, 0.0694, 0.0738, 0.0966, 0.1056, 0.1256, 0.1410, 0.1311, 0.1139,
         0.1006, 0.0934, 0.0916, 0.1281, 0.0969, 0.0737, 0.1281]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0395],
        [0.0076],
        [0.0190],
        [0.0323],
        [0.0132],
        [0.0208],
        [0.0091],
        [0.0930],
        [0.0108],
        [0.0539],
        [0.0328],
        [0.0250],
        [0.0119],
        [0.0175],
        [0.0132],
        [0.0233]], device='cuda:0', dtype=torch.float16)/tensor([[0.0395, 0.0076, 0.0190, 0.0323, 0.0132, 0.0208, 0.0091, 0.0930, 0.0108,
         0.0539, 0.0328, 0.0250, 0.0119, 0.0175, 0.0132, 0.0233]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1099, 0.0395],
        [0.0694, 0.0076],
        [0.0738, 0.0190],
        [0.0966, 0.0323],
        [0.1056, 0.0132],
        [0.1256, 0.0208],
        [0.1410, 0.0091],
        [0.1311, 0.0930],
        [0.1139, 0.0108],
        [0.1006, 0.0539],
        [0.0934, 0.0328],
        [0.0916, 0.0250],
        [0.1281, 0.0119],
        [0.0969, 0.0175],
        [0.0737, 0.0132],
        [0.1281, 0.0233]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0787],
        [0.0859],
        [0.1385],
        [0.2102],
        [0.1100],
        [0.1112],
        [0.0595],
        [0.1216],
        [0.0899],
        [0.1268],
        [0.0944],
        [0.0966],
        [0.0889],
        [0.1214],
        [0.0942],
        [0.0955]], device='cuda:0', dtype=torch.float16)/tensor([[0.0787, 0.0859, 0.1385, 0.2102, 0.1100, 0.1112, 0.0595, 0.1216, 0.0899,
         0.1268, 0.0944, 0.0966, 0.0889, 0.1214, 0.0942, 0.0955]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0381],
        [0.0311],
        [0.0190],
        [0.0217],
        [0.0320],
        [0.0074],
        [0.0419],
        [0.0126],
        [0.0174],
        [0.0209],
        [0.0150],
        [0.0619],
        [0.0433],
        [0.0105],
        [0.0161],
        [0.0063]], device='cuda:0', dtype=torch.float16)/tensor([[0.0381, 0.0311, 0.0190, 0.0217, 0.0320, 0.0074, 0.0419, 0.0126, 0.0174,
         0.0209, 0.0150, 0.0619, 0.0433, 0.0105, 0.0161, 0.0063]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0787, 0.0381],
        [0.0859, 0.0311],
        [0.1385, 0.0190],
        [0.2102, 0.0217],
        [0.1100, 0.0320],
        [0.1112, 0.0074],
        [0.0595, 0.0419],
        [0.1216, 0.0126],
        [0.0899, 0.0174],
        [0.1268, 0.0209],
        [0.0944, 0.0150],
        [0.0966, 0.0619],
        [0.0889, 0.0433],
        [0.1214, 0.0105],
        [0.0942, 0.0161],
        [0.0955, 0.0063]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1241],
        [0.1357],
        [0.1038],
        [0.0862],
        [0.0953],
        [0.0593],
        [0.0941],
        [0.0740],
        [0.0820],
        [0.0914],
        [0.0952],
        [0.1160],
        [0.0849],
        [0.0905],
        [0.1051],
        [0.1226]], device='cuda:0', dtype=torch.float16)/tensor([[0.1241, 0.1357, 0.1038, 0.0862, 0.0953, 0.0593, 0.0941, 0.0740, 0.0820,
         0.0914, 0.0952, 0.1160, 0.0849, 0.0905, 0.1051, 0.1226]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0195],
        [0.0230],
        [0.0112],
        [0.0357],
        [0.0101],
        [0.0249],
        [0.0174],
        [0.0050],
        [0.0147],
        [0.0159],
        [0.0329],
        [0.0189],
        [0.0325],
        [0.0296],
        [0.0112],
        [0.0188]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0230, 0.0112, 0.0357, 0.0101, 0.0249, 0.0174, 0.0050, 0.0147,
         0.0159, 0.0329, 0.0189, 0.0325, 0.0296, 0.0112, 0.0188]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1241, 0.0195],
        [0.1357, 0.0230],
        [0.1038, 0.0112],
        [0.0862, 0.0357],
        [0.0953, 0.0101],
        [0.0593, 0.0249],
        [0.0941, 0.0174],
        [0.0740, 0.0050],
        [0.0820, 0.0147],
        [0.0914, 0.0159],
        [0.0952, 0.0329],
        [0.1160, 0.0189],
        [0.0849, 0.0325],
        [0.0905, 0.0296],
        [0.1051, 0.0112],
        [0.1226, 0.0188]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0795],
        [0.0876],
        [0.1466],
        [0.0560],
        [0.0927],
        [0.1070],
        [0.1014],
        [0.0899],
        [0.0897],
        [0.0964],
        [0.1381],
        [0.2229],
        [0.0795],
        [0.0750],
        [0.1107],
        [0.1407]], device='cuda:0', dtype=torch.float16)/tensor([[0.0795, 0.0876, 0.1466, 0.0560, 0.0927, 0.1070, 0.1014, 0.0899, 0.0897,
         0.0964, 0.1381, 0.2229, 0.0795, 0.0750, 0.1107, 0.1407]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0350],
        [0.0401],
        [0.0106],
        [0.0364],
        [0.0090],
        [0.0082],
        [0.0300],
        [0.0168],
        [0.0359],
        [0.0500],
        [0.0169],
        [0.0381],
        [0.0331],
        [0.0617],
        [0.0184],
        [0.0321]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.0401, 0.0106, 0.0364, 0.0090, 0.0082, 0.0300, 0.0168, 0.0359,
         0.0500, 0.0169, 0.0381, 0.0331, 0.0617, 0.0184, 0.0321]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0795, 0.0350],
        [0.0876, 0.0401],
        [0.1466, 0.0106],
        [0.0560, 0.0364],
        [0.0927, 0.0090],
        [0.1070, 0.0082],
        [0.1014, 0.0300],
        [0.0899, 0.0168],
        [0.0897, 0.0359],
        [0.0964, 0.0500],
        [0.1381, 0.0169],
        [0.2229, 0.0381],
        [0.0795, 0.0331],
        [0.0750, 0.0617],
        [0.1107, 0.0184],
        [0.1407, 0.0321]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.2067],
        [0.1092],
        [0.1466],
        [0.1560],
        [0.1247],
        [0.0724],
        [0.0905],
        [0.0661],
        [0.1454],
        [0.0984],
        [0.1357],
        [0.0694],
        [0.0655],
        [0.0615],
        [0.1208],
        [0.0908]], device='cuda:0', dtype=torch.float16)/tensor([[0.2067, 0.1092, 0.1466, 0.1560, 0.1247, 0.0724, 0.0905, 0.0661, 0.1454,
         0.0984, 0.1357, 0.0694, 0.0655, 0.0615, 0.1208, 0.0908]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0809],
        [0.0452],
        [0.0310],
        [0.0447],
        [0.0204],
        [0.0131],
        [0.0204],
        [0.0033],
        [0.0116],
        [0.0305],
        [0.0140],
        [0.0396],
        [0.0446],
        [0.0226],
        [0.0126],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0809, 0.0452, 0.0310, 0.0447, 0.0204, 0.0131, 0.0204, 0.0033, 0.0116,
         0.0305, 0.0140, 0.0396, 0.0446, 0.0226, 0.0126, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.2067, 0.0809],
        [0.1092, 0.0452],
        [0.1466, 0.0310],
        [0.1560, 0.0447],
        [0.1247, 0.0204],
        [0.0724, 0.0131],
        [0.0905, 0.0204],
        [0.0661, 0.0033],
        [0.1454, 0.0116],
        [0.0984, 0.0305],
        [0.1357, 0.0140],
        [0.0694, 0.0396],
        [0.0655, 0.0446],
        [0.0615, 0.0226],
        [0.1208, 0.0126],
        [0.0908, 0.0129]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1108],
        [0.1007],
        [0.1028],
        [0.0737],
        [0.0761],
        [0.0816],
        [0.0718],
        [0.0901],
        [0.0699],
        [0.0850],
        [0.0925],
        [0.1008],
        [0.1221],
        [0.0840],
        [0.0886],
        [0.0893]], device='cuda:0', dtype=torch.float16)/tensor([[0.1108, 0.1007, 0.1028, 0.0737, 0.0761, 0.0816, 0.0718, 0.0901, 0.0699,
         0.0850, 0.0925, 0.1008, 0.1221, 0.0840, 0.0886, 0.0893]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0067],
        [0.0211],
        [0.0471],
        [0.0107],
        [0.0280],
        [0.0579],
        [0.0331],
        [0.0177],
        [0.0363],
        [0.0545],
        [0.0052],
        [0.0398],
        [0.0199],
        [0.0436],
        [0.0429],
        [0.0099]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0211, 0.0471, 0.0107, 0.0280, 0.0579, 0.0331, 0.0177, 0.0363,
         0.0545, 0.0052, 0.0398, 0.0199, 0.0436, 0.0429, 0.0099]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1108, 0.0067],
        [0.1007, 0.0211],
        [0.1028, 0.0471],
        [0.0737, 0.0107],
        [0.0761, 0.0280],
        [0.0816, 0.0579],
        [0.0718, 0.0331],
        [0.0901, 0.0177],
        [0.0699, 0.0363],
        [0.0850, 0.0545],
        [0.0925, 0.0052],
        [0.1008, 0.0398],
        [0.1221, 0.0199],
        [0.0840, 0.0436],
        [0.0886, 0.0429],
        [0.0893, 0.0099]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0916],
        [0.0875],
        [0.0835],
        [0.1199],
        [0.1007],
        [0.1678],
        [0.0908],
        [0.1239],
        [0.4231],
        [0.0640],
        [0.0981],
        [0.1379],
        [0.1248],
        [0.0844],
        [0.1371],
        [0.1301]], device='cuda:0', dtype=torch.float16)/tensor([[0.0916, 0.0875, 0.0835, 0.1199, 0.1007, 0.1678, 0.0908, 0.1239, 0.4231,
         0.0640, 0.0981, 0.1379, 0.1248, 0.0844, 0.1371, 0.1301]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0286],
        [0.0197],
        [0.0162],
        [0.0100],
        [0.0362],
        [0.0178],
        [0.0039],
        [0.0546],
        [0.0262],
        [0.0368],
        [0.0486],
        [0.0255],
        [0.0187],
        [0.0511],
        [0.0132],
        [0.0163]], device='cuda:0', dtype=torch.float16)/tensor([[0.0286, 0.0197, 0.0162, 0.0100, 0.0362, 0.0178, 0.0039, 0.0546, 0.0262,
         0.0368, 0.0486, 0.0255, 0.0187, 0.0511, 0.0132, 0.0163]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0916, 0.0286],
        [0.0875, 0.0197],
        [0.0835, 0.0162],
        [0.1199, 0.0100],
        [0.1007, 0.0362],
        [0.1678, 0.0178],
        [0.0908, 0.0039],
        [0.1239, 0.0546],
        [0.4231, 0.0262],
        [0.0640, 0.0368],
        [0.0981, 0.0486],
        [0.1379, 0.0255],
        [0.1248, 0.0187],
        [0.0844, 0.0511],
        [0.1371, 0.0132],
        [0.1301, 0.0163]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0603],
        [0.0723],
        [0.0988],
        [0.0933],
        [0.0306],
        [0.1013],
        [0.0416],
        [0.2427]], device='cuda:0', dtype=torch.float16)/tensor([[0.0603, 0.0723, 0.0988, 0.0933, 0.0306, 0.1013, 0.0416, 0.2427]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0202],
        [0.0486],
        [0.0254],
        [0.0548],
        [0.0586],
        [0.0058],
        [0.0160],
        [0.0729]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0486, 0.0254, 0.0548, 0.0586, 0.0058, 0.0160, 0.0729]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0603, 0.0202],
        [0.0723, 0.0486],
        [0.0988, 0.0254],
        [0.0933, 0.0548],
        [0.0306, 0.0586],
        [0.1013, 0.0058],
        [0.0416, 0.0160],
        [0.2427, 0.0729]], device='cuda:0')
acc:  0.52
Time taken to execute the en SA task with prompt type common, variation 2 and batchsize 16: 0:03:24.908761
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b SA common 3 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.53it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0086],
        [0.0174],
        [0.0057],
        [0.0083],
        [0.0059],
        [0.0088],
        [0.0019],
        [0.0050],
        [0.0064],
        [0.0088],
        [0.0097],
        [0.0058],
        [0.0199],
        [0.0171],
        [0.0126],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0174, 0.0057, 0.0083, 0.0059, 0.0088, 0.0019, 0.0050, 0.0064,
         0.0088, 0.0097, 0.0058, 0.0199, 0.0171, 0.0126, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0045],
        [0.0091],
        [0.0021],
        [0.0026],
        [0.0026],
        [0.0044],
        [0.0007],
        [0.0025],
        [0.0042],
        [0.0035],
        [0.0030],
        [0.0025],
        [0.0114],
        [0.0071],
        [0.0068],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0091, 0.0021, 0.0026, 0.0026, 0.0044, 0.0007, 0.0025, 0.0042,
         0.0035, 0.0030, 0.0025, 0.0114, 0.0071, 0.0068, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0086, 0.0045],
        [0.0174, 0.0091],
        [0.0057, 0.0021],
        [0.0083, 0.0026],
        [0.0059, 0.0026],
        [0.0088, 0.0044],
        [0.0019, 0.0007],
        [0.0050, 0.0025],
        [0.0064, 0.0042],
        [0.0088, 0.0035],
        [0.0097, 0.0030],
        [0.0058, 0.0025],
        [0.0199, 0.0114],
        [0.0171, 0.0071],
        [0.0126, 0.0068],
        [0.0119, 0.0058]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0110],
        [0.0051],
        [0.0070],
        [0.0109],
        [0.0135],
        [0.0031],
        [0.0048],
        [0.0235],
        [0.0185],
        [0.0220],
        [0.0122],
        [0.0113],
        [0.0109],
        [0.0140],
        [0.0048],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0110, 0.0051, 0.0070, 0.0109, 0.0135, 0.0031, 0.0048, 0.0235, 0.0185,
         0.0220, 0.0122, 0.0113, 0.0109, 0.0140, 0.0048, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0036],
        [0.0022],
        [0.0036],
        [0.0071],
        [0.0069],
        [0.0009],
        [0.0017],
        [0.0074],
        [0.0066],
        [0.0062],
        [0.0054],
        [0.0047],
        [0.0034],
        [0.0039],
        [0.0020],
        [0.0067]], device='cuda:0', dtype=torch.float16)/tensor([[0.0036, 0.0022, 0.0036, 0.0071, 0.0069, 0.0009, 0.0017, 0.0074, 0.0066,
         0.0062, 0.0054, 0.0047, 0.0034, 0.0039, 0.0020, 0.0067]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0110, 0.0036],
        [0.0051, 0.0022],
        [0.0070, 0.0036],
        [0.0109, 0.0071],
        [0.0135, 0.0069],
        [0.0031, 0.0009],
        [0.0048, 0.0017],
        [0.0235, 0.0074],
        [0.0185, 0.0066],
        [0.0220, 0.0062],
        [0.0122, 0.0054],
        [0.0113, 0.0047],
        [0.0109, 0.0034],
        [0.0140, 0.0039],
        [0.0048, 0.0020],
        [0.0126, 0.0067]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0115],
        [0.0107],
        [0.0209],
        [0.0134],
        [0.0089],
        [0.0107],
        [0.0093],
        [0.0063],
        [0.0143],
        [0.0103],
        [0.0046],
        [0.0081],
        [0.0267],
        [0.0093],
        [0.0143],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0115, 0.0107, 0.0209, 0.0134, 0.0089, 0.0107, 0.0093, 0.0063, 0.0143,
         0.0103, 0.0046, 0.0081, 0.0267, 0.0093, 0.0143, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0060],
        [0.0026],
        [0.0096],
        [0.0077],
        [0.0031],
        [0.0028],
        [0.0064],
        [0.0044],
        [0.0063],
        [0.0046],
        [0.0018],
        [0.0041],
        [0.0173],
        [0.0033],
        [0.0050],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0060, 0.0026, 0.0096, 0.0077, 0.0031, 0.0028, 0.0064, 0.0044, 0.0063,
         0.0046, 0.0018, 0.0041, 0.0173, 0.0033, 0.0050, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0115, 0.0060],
        [0.0107, 0.0026],
        [0.0209, 0.0096],
        [0.0134, 0.0077],
        [0.0089, 0.0031],
        [0.0107, 0.0028],
        [0.0093, 0.0064],
        [0.0063, 0.0044],
        [0.0143, 0.0063],
        [0.0103, 0.0046],
        [0.0046, 0.0018],
        [0.0081, 0.0041],
        [0.0267, 0.0173],
        [0.0093, 0.0033],
        [0.0143, 0.0050],
        [0.0136, 0.0062]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0148],
        [0.0087],
        [0.0150],
        [0.0101],
        [0.0063],
        [0.0074],
        [0.0105],
        [0.0133],
        [0.0036],
        [0.0278],
        [0.0124],
        [0.0115],
        [0.0313],
        [0.0044],
        [0.0063],
        [0.0113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0087, 0.0150, 0.0101, 0.0063, 0.0074, 0.0105, 0.0133, 0.0036,
         0.0278, 0.0124, 0.0115, 0.0313, 0.0044, 0.0063, 0.0113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0060],
        [0.0029],
        [0.0049],
        [0.0054],
        [0.0023],
        [0.0028],
        [0.0052],
        [0.0073],
        [0.0012],
        [0.0090],
        [0.0056],
        [0.0036],
        [0.0203],
        [0.0018],
        [0.0024],
        [0.0083]], device='cuda:0', dtype=torch.float16)/tensor([[0.0060, 0.0029, 0.0049, 0.0054, 0.0023, 0.0028, 0.0052, 0.0073, 0.0012,
         0.0090, 0.0056, 0.0036, 0.0203, 0.0018, 0.0024, 0.0083]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0148, 0.0060],
        [0.0087, 0.0029],
        [0.0150, 0.0049],
        [0.0101, 0.0054],
        [0.0063, 0.0023],
        [0.0074, 0.0028],
        [0.0105, 0.0052],
        [0.0133, 0.0073],
        [0.0036, 0.0012],
        [0.0278, 0.0090],
        [0.0124, 0.0056],
        [0.0115, 0.0036],
        [0.0313, 0.0203],
        [0.0044, 0.0018],
        [0.0063, 0.0024],
        [0.0113, 0.0083]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0377],
        [0.0038],
        [0.0134],
        [0.0100],
        [0.0240],
        [0.0086],
        [0.0088],
        [0.0166],
        [0.0056],
        [0.0071],
        [0.0134],
        [0.0193],
        [0.0051],
        [0.0132],
        [0.0115],
        [0.0181]], device='cuda:0', dtype=torch.float16)/tensor([[0.0377, 0.0038, 0.0134, 0.0100, 0.0240, 0.0086, 0.0088, 0.0166, 0.0056,
         0.0071, 0.0134, 0.0193, 0.0051, 0.0132, 0.0115, 0.0181]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0106],
        [0.0014],
        [0.0077],
        [0.0033],
        [0.0120],
        [0.0043],
        [0.0049],
        [0.0047],
        [0.0020],
        [0.0024],
        [0.0047],
        [0.0047],
        [0.0019],
        [0.0047],
        [0.0034],
        [0.0075]], device='cuda:0', dtype=torch.float16)/tensor([[0.0106, 0.0014, 0.0077, 0.0033, 0.0120, 0.0043, 0.0049, 0.0047, 0.0020,
         0.0024, 0.0047, 0.0047, 0.0019, 0.0047, 0.0034, 0.0075]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0377, 0.0106],
        [0.0038, 0.0014],
        [0.0134, 0.0077],
        [0.0100, 0.0033],
        [0.0240, 0.0120],
        [0.0086, 0.0043],
        [0.0088, 0.0049],
        [0.0166, 0.0047],
        [0.0056, 0.0020],
        [0.0071, 0.0024],
        [0.0134, 0.0047],
        [0.0193, 0.0047],
        [0.0051, 0.0019],
        [0.0132, 0.0047],
        [0.0115, 0.0034],
        [0.0181, 0.0075]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0129],
        [0.0127],
        [0.0119],
        [0.0102],
        [0.0121],
        [0.0113],
        [0.0153],
        [0.0201],
        [0.0085],
        [0.0073],
        [0.0067],
        [0.0071],
        [0.0139],
        [0.0107],
        [0.0267],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0129, 0.0127, 0.0119, 0.0102, 0.0121, 0.0113, 0.0153, 0.0201, 0.0085,
         0.0073, 0.0067, 0.0071, 0.0139, 0.0107, 0.0267, 0.0132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0054],
        [0.0074],
        [0.0055],
        [0.0050],
        [0.0068],
        [0.0055],
        [0.0060],
        [0.0075],
        [0.0028],
        [0.0030],
        [0.0037],
        [0.0029],
        [0.0095],
        [0.0031],
        [0.0086],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0074, 0.0055, 0.0050, 0.0068, 0.0055, 0.0060, 0.0075, 0.0028,
         0.0030, 0.0037, 0.0029, 0.0095, 0.0031, 0.0086, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0129, 0.0054],
        [0.0127, 0.0074],
        [0.0119, 0.0055],
        [0.0102, 0.0050],
        [0.0121, 0.0068],
        [0.0113, 0.0055],
        [0.0153, 0.0060],
        [0.0201, 0.0075],
        [0.0085, 0.0028],
        [0.0073, 0.0030],
        [0.0067, 0.0037],
        [0.0071, 0.0029],
        [0.0139, 0.0095],
        [0.0107, 0.0031],
        [0.0267, 0.0086],
        [0.0132, 0.0089]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0088],
        [0.0046],
        [0.0109],
        [0.0026],
        [0.0090],
        [0.0082],
        [0.0120],
        [0.0083],
        [0.0182],
        [0.0050],
        [0.0059],
        [0.0052],
        [0.0142],
        [0.0116],
        [0.0033],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0046, 0.0109, 0.0026, 0.0090, 0.0082, 0.0120, 0.0083, 0.0182,
         0.0050, 0.0059, 0.0052, 0.0142, 0.0116, 0.0033, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0047],
        [0.0026],
        [0.0067],
        [0.0014],
        [0.0046],
        [0.0037],
        [0.0061],
        [0.0024],
        [0.0060],
        [0.0026],
        [0.0027],
        [0.0025],
        [0.0046],
        [0.0053],
        [0.0031],
        [0.0072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0047, 0.0026, 0.0067, 0.0014, 0.0046, 0.0037, 0.0061, 0.0024, 0.0060,
         0.0026, 0.0027, 0.0025, 0.0046, 0.0053, 0.0031, 0.0072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0088, 0.0047],
        [0.0046, 0.0026],
        [0.0109, 0.0067],
        [0.0026, 0.0014],
        [0.0090, 0.0046],
        [0.0082, 0.0037],
        [0.0120, 0.0061],
        [0.0083, 0.0024],
        [0.0182, 0.0060],
        [0.0050, 0.0026],
        [0.0059, 0.0027],
        [0.0052, 0.0025],
        [0.0142, 0.0046],
        [0.0116, 0.0053],
        [0.0033, 0.0031],
        [0.0115, 0.0072]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0147],
        [0.0113],
        [0.0057],
        [0.0088],
        [0.0122],
        [0.0022],
        [0.0065],
        [0.0084],
        [0.0128],
        [0.0069],
        [0.0416],
        [0.0080],
        [0.0080],
        [0.0152],
        [0.0112],
        [0.0166]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0113, 0.0057, 0.0088, 0.0122, 0.0022, 0.0065, 0.0084, 0.0128,
         0.0069, 0.0416, 0.0080, 0.0080, 0.0152, 0.0112, 0.0166]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0055],
        [0.0074],
        [0.0019],
        [0.0054],
        [0.0076],
        [0.0008],
        [0.0035],
        [0.0050],
        [0.0064],
        [0.0027],
        [0.0146],
        [0.0027],
        [0.0040],
        [0.0058],
        [0.0066],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0074, 0.0019, 0.0054, 0.0076, 0.0008, 0.0035, 0.0050, 0.0064,
         0.0027, 0.0146, 0.0027, 0.0040, 0.0058, 0.0066, 0.0065]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0147, 0.0055],
        [0.0113, 0.0074],
        [0.0057, 0.0019],
        [0.0088, 0.0054],
        [0.0122, 0.0076],
        [0.0022, 0.0008],
        [0.0065, 0.0035],
        [0.0084, 0.0050],
        [0.0128, 0.0064],
        [0.0069, 0.0027],
        [0.0416, 0.0146],
        [0.0080, 0.0027],
        [0.0080, 0.0040],
        [0.0152, 0.0058],
        [0.0112, 0.0066],
        [0.0166, 0.0065]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0101],
        [0.0111],
        [0.0065],
        [0.0161],
        [0.0388],
        [0.0214],
        [0.0273],
        [0.0088],
        [0.0070],
        [0.0047],
        [0.0083],
        [0.0192],
        [0.0045],
        [0.0089],
        [0.0144],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0111, 0.0065, 0.0161, 0.0388, 0.0214, 0.0273, 0.0088, 0.0070,
         0.0047, 0.0083, 0.0192, 0.0045, 0.0089, 0.0144, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0041],
        [0.0061],
        [0.0027],
        [0.0063],
        [0.0192],
        [0.0073],
        [0.0077],
        [0.0042],
        [0.0044],
        [0.0011],
        [0.0045],
        [0.0053],
        [0.0024],
        [0.0051],
        [0.0083],
        [0.0039]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0061, 0.0027, 0.0063, 0.0192, 0.0073, 0.0077, 0.0042, 0.0044,
         0.0011, 0.0045, 0.0053, 0.0024, 0.0051, 0.0083, 0.0039]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0101, 0.0041],
        [0.0111, 0.0061],
        [0.0065, 0.0027],
        [0.0161, 0.0063],
        [0.0388, 0.0192],
        [0.0214, 0.0073],
        [0.0273, 0.0077],
        [0.0088, 0.0042],
        [0.0070, 0.0044],
        [0.0047, 0.0011],
        [0.0083, 0.0045],
        [0.0192, 0.0053],
        [0.0045, 0.0024],
        [0.0089, 0.0051],
        [0.0144, 0.0083],
        [0.0066, 0.0039]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0204],
        [0.0149],
        [0.0150],
        [0.0175],
        [0.0253],
        [0.0195],
        [0.0155],
        [0.0070],
        [0.0036],
        [0.0040],
        [0.0037],
        [0.0115],
        [0.0071],
        [0.0110],
        [0.0138],
        [0.0072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0149, 0.0150, 0.0175, 0.0253, 0.0195, 0.0155, 0.0070, 0.0036,
         0.0040, 0.0037, 0.0115, 0.0071, 0.0110, 0.0138, 0.0072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0087],
        [0.0113],
        [0.0055],
        [0.0084],
        [0.0148],
        [0.0056],
        [0.0053],
        [0.0029],
        [0.0016],
        [0.0013],
        [0.0018],
        [0.0039],
        [0.0024],
        [0.0083],
        [0.0062],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0113, 0.0055, 0.0084, 0.0148, 0.0056, 0.0053, 0.0029, 0.0016,
         0.0013, 0.0018, 0.0039, 0.0024, 0.0083, 0.0062, 0.0029]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0204, 0.0087],
        [0.0149, 0.0113],
        [0.0150, 0.0055],
        [0.0175, 0.0084],
        [0.0253, 0.0148],
        [0.0195, 0.0056],
        [0.0155, 0.0053],
        [0.0070, 0.0029],
        [0.0036, 0.0016],
        [0.0040, 0.0013],
        [0.0037, 0.0018],
        [0.0115, 0.0039],
        [0.0071, 0.0024],
        [0.0110, 0.0083],
        [0.0138, 0.0062],
        [0.0072, 0.0029]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0163],
        [0.0069],
        [0.0108],
        [0.0188],
        [0.0076],
        [0.0197],
        [0.0119],
        [0.0171],
        [0.0084],
        [0.0072],
        [0.0032],
        [0.0235],
        [0.0152],
        [0.0073],
        [0.0145],
        [0.0430]], device='cuda:0', dtype=torch.float16)/tensor([[0.0163, 0.0069, 0.0108, 0.0188, 0.0076, 0.0197, 0.0119, 0.0171, 0.0084,
         0.0072, 0.0032, 0.0235, 0.0152, 0.0073, 0.0145, 0.0430]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0028],
        [0.0046],
        [0.0142],
        [0.0026],
        [0.0075],
        [0.0053],
        [0.0058],
        [0.0046],
        [0.0028],
        [0.0011],
        [0.0142],
        [0.0118],
        [0.0034],
        [0.0063],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0028, 0.0046, 0.0142, 0.0026, 0.0075, 0.0053, 0.0058, 0.0046,
         0.0028, 0.0011, 0.0142, 0.0118, 0.0034, 0.0063, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0163, 0.0080],
        [0.0069, 0.0028],
        [0.0108, 0.0046],
        [0.0188, 0.0142],
        [0.0076, 0.0026],
        [0.0197, 0.0075],
        [0.0119, 0.0053],
        [0.0171, 0.0058],
        [0.0084, 0.0046],
        [0.0072, 0.0028],
        [0.0032, 0.0011],
        [0.0235, 0.0142],
        [0.0152, 0.0118],
        [0.0073, 0.0034],
        [0.0145, 0.0063],
        [0.0430, 0.0208]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0102],
        [0.0181],
        [0.0126],
        [0.0197],
        [0.0057],
        [0.0067],
        [0.0057],
        [0.0076],
        [0.0020],
        [0.0177],
        [0.0137],
        [0.0135],
        [0.0030],
        [0.0135],
        [0.0069],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0181, 0.0126, 0.0197, 0.0057, 0.0067, 0.0057, 0.0076, 0.0020,
         0.0177, 0.0137, 0.0135, 0.0030, 0.0135, 0.0069, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.0067],
        [0.0065],
        [0.0065],
        [0.0017],
        [0.0039],
        [0.0025],
        [0.0044],
        [0.0012],
        [0.0044],
        [0.0047],
        [0.0058],
        [0.0010],
        [0.0065],
        [0.0029],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0067, 0.0065, 0.0065, 0.0017, 0.0039, 0.0025, 0.0044, 0.0012,
         0.0044, 0.0047, 0.0058, 0.0010, 0.0065, 0.0029, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0102, 0.0053],
        [0.0181, 0.0067],
        [0.0126, 0.0065],
        [0.0197, 0.0065],
        [0.0057, 0.0017],
        [0.0067, 0.0039],
        [0.0057, 0.0025],
        [0.0076, 0.0044],
        [0.0020, 0.0012],
        [0.0177, 0.0044],
        [0.0137, 0.0047],
        [0.0135, 0.0058],
        [0.0030, 0.0010],
        [0.0135, 0.0065],
        [0.0069, 0.0029],
        [0.0116, 0.0048]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0045],
        [0.0261],
        [0.0032],
        [0.0064],
        [0.0088],
        [0.0170],
        [0.0109],
        [0.0082]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0261, 0.0032, 0.0064, 0.0088, 0.0170, 0.0109, 0.0082]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0024],
        [0.0232],
        [0.0021],
        [0.0030],
        [0.0043],
        [0.0049],
        [0.0065],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0024, 0.0232, 0.0021, 0.0030, 0.0043, 0.0049, 0.0065, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0045, 0.0024],
        [0.0261, 0.0232],
        [0.0032, 0.0021],
        [0.0064, 0.0030],
        [0.0088, 0.0043],
        [0.0170, 0.0049],
        [0.0109, 0.0065],
        [0.0082, 0.0036]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type common, variation 3 and batchsize 16: 0:03:22.276101
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b SA common 4 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 340.30it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0634],
        [0.0498],
        [0.0656],
        [0.0489],
        [0.1019],
        [0.0816],
        [0.1052],
        [0.1541],
        [0.0920],
        [0.1138],
        [0.0473],
        [0.1063],
        [0.0566],
        [0.0413],
        [0.0659],
        [0.0483]], device='cuda:0', dtype=torch.float16)/tensor([[0.0634, 0.0498, 0.0656, 0.0489, 0.1019, 0.0816, 0.1052, 0.1541, 0.0920,
         0.1138, 0.0473, 0.1063, 0.0566, 0.0413, 0.0659, 0.0483]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0560],
        [0.0300],
        [0.0495],
        [0.0673],
        [0.0581],
        [0.0630],
        [0.0478],
        [0.1034],
        [0.0224],
        [0.0478],
        [0.0598],
        [0.0345],
        [0.0328],
        [0.0232],
        [0.0605],
        [0.0317]], device='cuda:0', dtype=torch.float16)/tensor([[0.0560, 0.0300, 0.0495, 0.0673, 0.0581, 0.0630, 0.0478, 0.1034, 0.0224,
         0.0478, 0.0598, 0.0345, 0.0328, 0.0232, 0.0605, 0.0317]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0634, 0.0560],
        [0.0498, 0.0300],
        [0.0656, 0.0495],
        [0.0489, 0.0673],
        [0.1019, 0.0581],
        [0.0816, 0.0630],
        [0.1052, 0.0478],
        [0.1541, 0.1034],
        [0.0920, 0.0224],
        [0.1138, 0.0478],
        [0.0473, 0.0598],
        [0.1063, 0.0345],
        [0.0566, 0.0328],
        [0.0413, 0.0232],
        [0.0659, 0.0605],
        [0.0483, 0.0317]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0756],
        [0.0623],
        [0.0626],
        [0.1407],
        [0.0452],
        [0.1019],
        [0.0917],
        [0.0679],
        [0.0917],
        [0.0928],
        [0.1183],
        [0.0886],
        [0.0787],
        [0.0520],
        [0.0928],
        [0.0989]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0623, 0.0626, 0.1407, 0.0452, 0.1019, 0.0917, 0.0679, 0.0917,
         0.0928, 0.1183, 0.0886, 0.0787, 0.0520, 0.0928, 0.0989]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0249],
        [0.0161],
        [0.0557],
        [0.0909],
        [0.0405],
        [0.0627],
        [0.0388],
        [0.0242],
        [0.0379],
        [0.0331],
        [0.0449],
        [0.0238],
        [0.0627],
        [0.0545],
        [0.0594],
        [0.0679]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0161, 0.0557, 0.0909, 0.0405, 0.0627, 0.0388, 0.0242, 0.0379,
         0.0331, 0.0449, 0.0238, 0.0627, 0.0545, 0.0594, 0.0679]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0756, 0.0249],
        [0.0623, 0.0161],
        [0.0626, 0.0557],
        [0.1407, 0.0909],
        [0.0452, 0.0405],
        [0.1019, 0.0627],
        [0.0917, 0.0388],
        [0.0679, 0.0242],
        [0.0917, 0.0379],
        [0.0928, 0.0331],
        [0.1183, 0.0449],
        [0.0886, 0.0238],
        [0.0787, 0.0627],
        [0.0520, 0.0545],
        [0.0928, 0.0594],
        [0.0989, 0.0679]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0392],
        [0.0592],
        [0.0633],
        [0.0597],
        [0.0768],
        [0.0699],
        [0.0767],
        [0.0657],
        [0.1388],
        [0.0740],
        [0.0501],
        [0.0799],
        [0.1087],
        [0.0955],
        [0.0597],
        [0.0796]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.0592, 0.0633, 0.0597, 0.0768, 0.0699, 0.0767, 0.0657, 0.1388,
         0.0740, 0.0501, 0.0799, 0.1087, 0.0955, 0.0597, 0.0796]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0441],
        [0.0476],
        [0.0470],
        [0.0602],
        [0.0349],
        [0.0738],
        [0.0407],
        [0.0177],
        [0.0932],
        [0.0248],
        [0.0136],
        [0.0285],
        [0.0337],
        [0.0351],
        [0.0499],
        [0.0322]], device='cuda:0', dtype=torch.float16)/tensor([[0.0441, 0.0476, 0.0470, 0.0602, 0.0349, 0.0738, 0.0407, 0.0177, 0.0932,
         0.0248, 0.0136, 0.0285, 0.0337, 0.0351, 0.0499, 0.0322]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0392, 0.0441],
        [0.0592, 0.0476],
        [0.0633, 0.0470],
        [0.0597, 0.0602],
        [0.0768, 0.0349],
        [0.0699, 0.0738],
        [0.0767, 0.0407],
        [0.0657, 0.0177],
        [0.1388, 0.0932],
        [0.0740, 0.0248],
        [0.0501, 0.0136],
        [0.0799, 0.0285],
        [0.1087, 0.0337],
        [0.0955, 0.0351],
        [0.0597, 0.0499],
        [0.0796, 0.0322]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0672],
        [0.0850],
        [0.0552],
        [0.1041],
        [0.0875],
        [0.0508],
        [0.1322],
        [0.0850],
        [0.0641],
        [0.0590],
        [0.2810],
        [0.0881],
        [0.0701],
        [0.0811],
        [0.0905],
        [0.0675]], device='cuda:0', dtype=torch.float16)/tensor([[0.0672, 0.0850, 0.0552, 0.1041, 0.0875, 0.0508, 0.1322, 0.0850, 0.0641,
         0.0590, 0.2810, 0.0881, 0.0701, 0.0811, 0.0905, 0.0675]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0507],
        [0.0536],
        [0.0681],
        [0.0352],
        [0.0300],
        [0.0572],
        [0.0731],
        [0.1198],
        [0.0231],
        [0.0245],
        [0.0562],
        [0.0903],
        [0.0586],
        [0.0404],
        [0.0386],
        [0.0370]], device='cuda:0', dtype=torch.float16)/tensor([[0.0507, 0.0536, 0.0681, 0.0352, 0.0300, 0.0572, 0.0731, 0.1198, 0.0231,
         0.0245, 0.0562, 0.0903, 0.0586, 0.0404, 0.0386, 0.0370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0672, 0.0507],
        [0.0850, 0.0536],
        [0.0552, 0.0681],
        [0.1041, 0.0352],
        [0.0875, 0.0300],
        [0.0508, 0.0572],
        [0.1322, 0.0731],
        [0.0850, 0.1198],
        [0.0641, 0.0231],
        [0.0590, 0.0245],
        [0.2810, 0.0562],
        [0.0881, 0.0903],
        [0.0701, 0.0586],
        [0.0811, 0.0404],
        [0.0905, 0.0386],
        [0.0675, 0.0370]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0725],
        [0.0451],
        [0.0613],
        [0.1019],
        [0.0714],
        [0.0808],
        [0.0773],
        [0.0723],
        [0.0772],
        [0.0704],
        [0.0867],
        [0.0475],
        [0.0734],
        [0.1475],
        [0.0958],
        [0.0900]], device='cuda:0', dtype=torch.float16)/tensor([[0.0725, 0.0451, 0.0613, 0.1019, 0.0714, 0.0808, 0.0773, 0.0723, 0.0772,
         0.0704, 0.0867, 0.0475, 0.0734, 0.1475, 0.0958, 0.0900]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0291],
        [0.0515],
        [0.0336],
        [0.0533],
        [0.0538],
        [0.0490],
        [0.0175],
        [0.0283],
        [0.0388],
        [0.0749],
        [0.0300],
        [0.0141],
        [0.0692],
        [0.1204],
        [0.0283],
        [0.0390]], device='cuda:0', dtype=torch.float16)/tensor([[0.0291, 0.0515, 0.0336, 0.0533, 0.0538, 0.0490, 0.0175, 0.0283, 0.0388,
         0.0749, 0.0300, 0.0141, 0.0692, 0.1204, 0.0283, 0.0390]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0725, 0.0291],
        [0.0451, 0.0515],
        [0.0613, 0.0336],
        [0.1019, 0.0533],
        [0.0714, 0.0538],
        [0.0808, 0.0490],
        [0.0773, 0.0175],
        [0.0723, 0.0283],
        [0.0772, 0.0388],
        [0.0704, 0.0749],
        [0.0867, 0.0300],
        [0.0475, 0.0141],
        [0.0734, 0.0692],
        [0.1475, 0.1204],
        [0.0958, 0.0283],
        [0.0900, 0.0390]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0551],
        [0.0686],
        [0.0684],
        [0.0675],
        [0.0895],
        [0.1395],
        [0.1010],
        [0.0668],
        [0.0858],
        [0.0555],
        [0.0815],
        [0.0745],
        [0.0646],
        [0.0555],
        [0.1088],
        [0.1042]], device='cuda:0', dtype=torch.float16)/tensor([[0.0551, 0.0686, 0.0684, 0.0675, 0.0895, 0.1395, 0.1010, 0.0668, 0.0858,
         0.0555, 0.0815, 0.0745, 0.0646, 0.0555, 0.1088, 0.1042]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0490],
        [0.0630],
        [0.0563],
        [0.0573],
        [0.0362],
        [0.0538],
        [0.0508],
        [0.0690],
        [0.0349],
        [0.0573],
        [0.0403],
        [0.0512],
        [0.0362],
        [0.0422],
        [0.0446],
        [0.0346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0490, 0.0630, 0.0563, 0.0573, 0.0362, 0.0538, 0.0508, 0.0690, 0.0349,
         0.0573, 0.0403, 0.0512, 0.0362, 0.0422, 0.0446, 0.0346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0551, 0.0490],
        [0.0686, 0.0630],
        [0.0684, 0.0563],
        [0.0675, 0.0573],
        [0.0895, 0.0362],
        [0.1395, 0.0538],
        [0.1010, 0.0508],
        [0.0668, 0.0690],
        [0.0858, 0.0349],
        [0.0555, 0.0573],
        [0.0815, 0.0403],
        [0.0745, 0.0512],
        [0.0646, 0.0362],
        [0.0555, 0.0422],
        [0.1088, 0.0446],
        [0.1042, 0.0346]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0674],
        [0.0995],
        [0.1240],
        [0.0720],
        [0.0543],
        [0.0523],
        [0.0865],
        [0.0600],
        [0.0566],
        [0.0753],
        [0.0544],
        [0.0975],
        [0.0565],
        [0.0660],
        [0.0674],
        [0.0706]], device='cuda:0', dtype=torch.float16)/tensor([[0.0674, 0.0995, 0.1240, 0.0720, 0.0543, 0.0523, 0.0865, 0.0600, 0.0566,
         0.0753, 0.0544, 0.0975, 0.0565, 0.0660, 0.0674, 0.0706]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0442],
        [0.0199],
        [0.0517],
        [0.0592],
        [0.0479],
        [0.0499],
        [0.0509],
        [0.0290],
        [0.0441],
        [0.0207],
        [0.0492],
        [0.0322],
        [0.0565],
        [0.0569],
        [0.0264],
        [0.0525]], device='cuda:0', dtype=torch.float16)/tensor([[0.0442, 0.0199, 0.0517, 0.0592, 0.0479, 0.0499, 0.0509, 0.0290, 0.0441,
         0.0207, 0.0492, 0.0322, 0.0565, 0.0569, 0.0264, 0.0525]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0674, 0.0442],
        [0.0995, 0.0199],
        [0.1240, 0.0517],
        [0.0720, 0.0592],
        [0.0543, 0.0479],
        [0.0523, 0.0499],
        [0.0865, 0.0509],
        [0.0600, 0.0290],
        [0.0566, 0.0441],
        [0.0753, 0.0207],
        [0.0544, 0.0492],
        [0.0975, 0.0322],
        [0.0565, 0.0565],
        [0.0660, 0.0569],
        [0.0674, 0.0264],
        [0.0706, 0.0525]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0917],
        [0.0950],
        [0.0574],
        [0.0623],
        [0.0851],
        [0.0887],
        [0.0742],
        [0.0863],
        [0.0643],
        [0.1263],
        [0.0593],
        [0.0716],
        [0.0822],
        [0.0435],
        [0.0606],
        [0.0599]], device='cuda:0', dtype=torch.float16)/tensor([[0.0917, 0.0950, 0.0574, 0.0623, 0.0851, 0.0887, 0.0742, 0.0863, 0.0643,
         0.1263, 0.0593, 0.0716, 0.0822, 0.0435, 0.0606, 0.0599]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0317],
        [0.0438],
        [0.0182],
        [0.0209],
        [0.0381],
        [0.0319],
        [0.0681],
        [0.0298],
        [0.0643],
        [0.1081],
        [0.0636],
        [0.0263],
        [0.0437],
        [0.0313],
        [0.0257],
        [0.0358]], device='cuda:0', dtype=torch.float16)/tensor([[0.0317, 0.0438, 0.0182, 0.0209, 0.0381, 0.0319, 0.0681, 0.0298, 0.0643,
         0.1081, 0.0636, 0.0263, 0.0437, 0.0313, 0.0257, 0.0358]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0917, 0.0317],
        [0.0950, 0.0438],
        [0.0574, 0.0182],
        [0.0623, 0.0209],
        [0.0851, 0.0381],
        [0.0887, 0.0319],
        [0.0742, 0.0681],
        [0.0863, 0.0298],
        [0.0643, 0.0643],
        [0.1263, 0.1081],
        [0.0593, 0.0636],
        [0.0716, 0.0263],
        [0.0822, 0.0437],
        [0.0435, 0.0313],
        [0.0606, 0.0257],
        [0.0599, 0.0358]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0690],
        [0.0784],
        [0.0591],
        [0.0573],
        [0.0679],
        [0.0849],
        [0.0644],
        [0.0648],
        [0.1182],
        [0.0817],
        [0.0634],
        [0.0890],
        [0.1035],
        [0.0632],
        [0.1042]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0690, 0.0784, 0.0591, 0.0573, 0.0679, 0.0849, 0.0644, 0.0648,
         0.1182, 0.0817, 0.0634, 0.0890, 0.1035, 0.0632, 0.1042]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0571],
        [0.0453],
        [0.0239],
        [0.0573],
        [0.0153],
        [0.0648],
        [0.0440],
        [0.0279],
        [0.0215],
        [0.0459],
        [0.0536],
        [0.0457],
        [0.0392],
        [0.0590],
        [0.0408],
        [0.0215]], device='cuda:0', dtype=torch.float16)/tensor([[0.0571, 0.0453, 0.0239, 0.0573, 0.0153, 0.0648, 0.0440, 0.0279, 0.0215,
         0.0459, 0.0536, 0.0457, 0.0392, 0.0590, 0.0408, 0.0215]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0575, 0.0571],
        [0.0690, 0.0453],
        [0.0784, 0.0239],
        [0.0591, 0.0573],
        [0.0573, 0.0153],
        [0.0679, 0.0648],
        [0.0849, 0.0440],
        [0.0644, 0.0279],
        [0.0648, 0.0215],
        [0.1182, 0.0459],
        [0.0817, 0.0536],
        [0.0634, 0.0457],
        [0.0890, 0.0392],
        [0.1035, 0.0590],
        [0.0632, 0.0408],
        [0.1042, 0.0215]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0904],
        [0.0435],
        [0.0860],
        [0.0551],
        [0.0817],
        [0.0851],
        [0.0759],
        [0.0797],
        [0.0798],
        [0.0832],
        [0.0792],
        [0.0744],
        [0.0995],
        [0.0932],
        [0.0659],
        [0.0707]], device='cuda:0', dtype=torch.float16)/tensor([[0.0904, 0.0435, 0.0860, 0.0551, 0.0817, 0.0851, 0.0759, 0.0797, 0.0798,
         0.0832, 0.0792, 0.0744, 0.0995, 0.0932, 0.0659, 0.0707]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0557],
        [0.0435],
        [0.0391],
        [0.0334],
        [0.0286],
        [0.0292],
        [0.0505],
        [0.0398],
        [0.0366],
        [0.0339],
        [0.0125],
        [0.0536],
        [0.0493],
        [0.0476],
        [0.0341],
        [0.0370]], device='cuda:0', dtype=torch.float16)/tensor([[0.0557, 0.0435, 0.0391, 0.0334, 0.0286, 0.0292, 0.0505, 0.0398, 0.0366,
         0.0339, 0.0125, 0.0536, 0.0493, 0.0476, 0.0341, 0.0370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0904, 0.0557],
        [0.0435, 0.0435],
        [0.0860, 0.0391],
        [0.0551, 0.0334],
        [0.0817, 0.0286],
        [0.0851, 0.0292],
        [0.0759, 0.0505],
        [0.0797, 0.0398],
        [0.0798, 0.0366],
        [0.0832, 0.0339],
        [0.0792, 0.0125],
        [0.0744, 0.0536],
        [0.0995, 0.0493],
        [0.0932, 0.0476],
        [0.0659, 0.0341],
        [0.0707, 0.0370]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0749],
        [0.0916],
        [0.0525],
        [0.0696],
        [0.0548],
        [0.0838],
        [0.0571],
        [0.1008],
        [0.0823],
        [0.0450],
        [0.0864],
        [0.0561],
        [0.0864],
        [0.0469],
        [0.0837],
        [0.1028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0749, 0.0916, 0.0525, 0.0696, 0.0548, 0.0838, 0.0571, 0.1008, 0.0823,
         0.0450, 0.0864, 0.0561, 0.0864, 0.0469, 0.0837, 0.1028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0379],
        [0.0521],
        [0.0137],
        [0.0720],
        [0.0301],
        [0.0291],
        [0.0346],
        [0.0503],
        [0.0494],
        [0.0272],
        [0.0523],
        [0.0562],
        [0.0243],
        [0.0418],
        [0.0337]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0379, 0.0521, 0.0137, 0.0720, 0.0301, 0.0291, 0.0346, 0.0503,
         0.0494, 0.0272, 0.0523, 0.0562, 0.0243, 0.0418, 0.0337]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0749, 0.0166],
        [0.0916, 0.0379],
        [0.0525, 0.0521],
        [0.0696, 0.0137],
        [0.0548, 0.0720],
        [0.0838, 0.0301],
        [0.0571, 0.0291],
        [0.1008, 0.0346],
        [0.0823, 0.0503],
        [0.0450, 0.0494],
        [0.0864, 0.0272],
        [0.0561, 0.0523],
        [0.0864, 0.0562],
        [0.0469, 0.0243],
        [0.0837, 0.0418],
        [0.1028, 0.0337]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0703],
        [0.0711],
        [0.0488],
        [0.0896],
        [0.0544],
        [0.0908],
        [0.1038],
        [0.0466],
        [0.0768],
        [0.0823],
        [0.0717],
        [0.0664],
        [0.0615],
        [0.1061],
        [0.0646],
        [0.0856]], device='cuda:0', dtype=torch.float16)/tensor([[0.0703, 0.0711, 0.0488, 0.0896, 0.0544, 0.0908, 0.1038, 0.0466, 0.0768,
         0.0823, 0.0717, 0.0664, 0.0615, 0.1061, 0.0646, 0.0856]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0754],
        [0.0580],
        [0.0536],
        [0.0345],
        [0.0566],
        [0.0690],
        [0.0241],
        [0.0399],
        [0.0283],
        [0.0238],
        [0.0366],
        [0.0529],
        [0.0279],
        [0.0306],
        [0.0231],
        [0.0454]], device='cuda:0', dtype=torch.float16)/tensor([[0.0754, 0.0580, 0.0536, 0.0345, 0.0566, 0.0690, 0.0241, 0.0399, 0.0283,
         0.0238, 0.0366, 0.0529, 0.0279, 0.0306, 0.0231, 0.0454]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0703, 0.0754],
        [0.0711, 0.0580],
        [0.0488, 0.0536],
        [0.0896, 0.0345],
        [0.0544, 0.0566],
        [0.0908, 0.0690],
        [0.1038, 0.0241],
        [0.0466, 0.0399],
        [0.0768, 0.0283],
        [0.0823, 0.0238],
        [0.0717, 0.0366],
        [0.0664, 0.0529],
        [0.0615, 0.0279],
        [0.1061, 0.0306],
        [0.0646, 0.0231],
        [0.0856, 0.0454]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0911],
        [0.0730],
        [0.1068],
        [0.0688],
        [0.0724],
        [0.0640],
        [0.0243],
        [0.0648]], device='cuda:0', dtype=torch.float16)/tensor([[0.0911, 0.0730, 0.1068, 0.0688, 0.0724, 0.0640, 0.0243, 0.0648]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0326],
        [0.0410],
        [0.0589],
        [0.0579],
        [0.0510],
        [0.0305],
        [0.0181],
        [0.0663]], device='cuda:0', dtype=torch.float16)/tensor([[0.0326, 0.0410, 0.0589, 0.0579, 0.0510, 0.0305, 0.0181, 0.0663]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0911, 0.0326],
        [0.0730, 0.0410],
        [0.1068, 0.0589],
        [0.0688, 0.0579],
        [0.0724, 0.0510],
        [0.0640, 0.0305],
        [0.0243, 0.0181],
        [0.0648, 0.0663]], device='cuda:0')
acc:  0.605
Time taken to execute the en SA task with prompt type common, variation 4 and batchsize 16: 0:03:23.103318
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b SA common 5 200 16 --------------
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 336.15it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0673],
        [0.0747],
        [0.1835],
        [0.0648],
        [0.0999],
        [0.0690],
        [0.0849],
        [0.0573],
        [0.0526],
        [0.0901],
        [0.0617],
        [0.0530],
        [0.0587],
        [0.0693],
        [0.0861],
        [0.0562]], device='cuda:0', dtype=torch.float16)/tensor([[0.0673, 0.0747, 0.1835, 0.0648, 0.0999, 0.0690, 0.0849, 0.0573, 0.0526,
         0.0901, 0.0617, 0.0530, 0.0587, 0.0693, 0.0861, 0.0562]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0386],
        [0.1030],
        [0.0586],
        [0.0456],
        [0.0606],
        [0.0680],
        [0.0472],
        [0.0999],
        [0.0098],
        [0.0551],
        [0.0496],
        [0.0692],
        [0.0184],
        [0.0265],
        [0.0848],
        [0.0732]], device='cuda:0', dtype=torch.float16)/tensor([[0.0386, 0.1030, 0.0586, 0.0456, 0.0606, 0.0680, 0.0472, 0.0999, 0.0098,
         0.0551, 0.0496, 0.0692, 0.0184, 0.0265, 0.0848, 0.0732]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0673, 0.0386],
        [0.0747, 0.1030],
        [0.1835, 0.0586],
        [0.0648, 0.0456],
        [0.0999, 0.0606],
        [0.0690, 0.0680],
        [0.0849, 0.0472],
        [0.0573, 0.0999],
        [0.0526, 0.0098],
        [0.0901, 0.0551],
        [0.0617, 0.0496],
        [0.0530, 0.0692],
        [0.0587, 0.0184],
        [0.0693, 0.0265],
        [0.0861, 0.0848],
        [0.0562, 0.0732]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0779],
        [0.0885],
        [0.0760],
        [0.0502],
        [0.1179],
        [0.0918],
        [0.0414],
        [0.0497],
        [0.0567],
        [0.0762],
        [0.0489],
        [0.0928],
        [0.1088],
        [0.0458],
        [0.1267],
        [0.0494]], device='cuda:0', dtype=torch.float16)/tensor([[0.0779, 0.0885, 0.0760, 0.0502, 0.1179, 0.0918, 0.0414, 0.0497, 0.0567,
         0.0762, 0.0489, 0.0928, 0.1088, 0.0458, 0.1267, 0.0494]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0810],
        [0.1093],
        [0.0359],
        [0.0547],
        [0.0359],
        [0.0519],
        [0.1188],
        [0.0369],
        [0.1019],
        [0.0710],
        [0.0550],
        [0.1019],
        [0.0206],
        [0.0803],
        [0.0558],
        [0.0446]], device='cuda:0', dtype=torch.float16)/tensor([[0.0810, 0.1093, 0.0359, 0.0547, 0.0359, 0.0519, 0.1188, 0.0369, 0.1019,
         0.0710, 0.0550, 0.1019, 0.0206, 0.0803, 0.0558, 0.0446]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0779, 0.0810],
        [0.0885, 0.1093],
        [0.0760, 0.0359],
        [0.0502, 0.0547],
        [0.1179, 0.0359],
        [0.0918, 0.0519],
        [0.0414, 0.1188],
        [0.0497, 0.0369],
        [0.0567, 0.1019],
        [0.0762, 0.0710],
        [0.0489, 0.0550],
        [0.0928, 0.1019],
        [0.1088, 0.0206],
        [0.0458, 0.0803],
        [0.1267, 0.0558],
        [0.0494, 0.0446]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0692],
        [0.1273],
        [0.0876],
        [0.0330],
        [0.1664],
        [0.3330],
        [0.0466],
        [0.0508],
        [0.0573],
        [0.0714],
        [0.0649],
        [0.0273],
        [0.1135],
        [0.0773],
        [0.0781],
        [0.0712]], device='cuda:0', dtype=torch.float16)/tensor([[0.0692, 0.1273, 0.0876, 0.0330, 0.1664, 0.3330, 0.0466, 0.0508, 0.0573,
         0.0714, 0.0649, 0.0273, 0.1135, 0.0773, 0.0781, 0.0712]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0404],
        [0.1293],
        [0.0225],
        [0.0693],
        [0.1899],
        [0.0835],
        [0.0825],
        [0.1154],
        [0.0634],
        [0.0748],
        [0.0718],
        [0.0116],
        [0.0352],
        [0.0368],
        [0.0445],
        [0.0283]], device='cuda:0', dtype=torch.float16)/tensor([[0.0404, 0.1293, 0.0225, 0.0693, 0.1899, 0.0835, 0.0825, 0.1154, 0.0634,
         0.0748, 0.0718, 0.0116, 0.0352, 0.0368, 0.0445, 0.0283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0692, 0.0404],
        [0.1273, 0.1293],
        [0.0876, 0.0225],
        [0.0330, 0.0693],
        [0.1664, 0.1899],
        [0.3330, 0.0835],
        [0.0466, 0.0825],
        [0.0508, 0.1154],
        [0.0573, 0.0634],
        [0.0714, 0.0748],
        [0.0649, 0.0718],
        [0.0273, 0.0116],
        [0.1135, 0.0352],
        [0.0773, 0.0368],
        [0.0781, 0.0445],
        [0.0712, 0.0283]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1259],
        [0.0743],
        [0.0683],
        [0.0802],
        [0.0938],
        [0.0760],
        [0.0724],
        [0.0717],
        [0.0902],
        [0.1473],
        [0.0732],
        [0.0676],
        [0.1040],
        [0.0465],
        [0.0684],
        [0.1127]], device='cuda:0', dtype=torch.float16)/tensor([[0.1259, 0.0743, 0.0683, 0.0802, 0.0938, 0.0760, 0.0724, 0.0717, 0.0902,
         0.1473, 0.0732, 0.0676, 0.1040, 0.0465, 0.0684, 0.1127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0533],
        [0.0499],
        [0.0721],
        [0.1079],
        [0.0510],
        [0.0298],
        [0.0465],
        [0.0165],
        [0.0446],
        [0.0449],
        [0.0225],
        [0.0472],
        [0.0197],
        [0.0561],
        [0.0594],
        [0.0424]], device='cuda:0', dtype=torch.float16)/tensor([[0.0533, 0.0499, 0.0721, 0.1079, 0.0510, 0.0298, 0.0465, 0.0165, 0.0446,
         0.0449, 0.0225, 0.0472, 0.0197, 0.0561, 0.0594, 0.0424]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1259, 0.0533],
        [0.0743, 0.0499],
        [0.0683, 0.0721],
        [0.0802, 0.1079],
        [0.0938, 0.0510],
        [0.0760, 0.0298],
        [0.0724, 0.0465],
        [0.0717, 0.0165],
        [0.0902, 0.0446],
        [0.1473, 0.0449],
        [0.0732, 0.0225],
        [0.0676, 0.0472],
        [0.1040, 0.0197],
        [0.0465, 0.0561],
        [0.0684, 0.0594],
        [0.1127, 0.0424]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1048],
        [0.0790],
        [0.0877],
        [0.0836],
        [0.0393],
        [0.1277],
        [0.0782],
        [0.0657],
        [0.0834],
        [0.0400],
        [0.0800],
        [0.0704],
        [0.1199],
        [0.0503],
        [0.0549],
        [0.0847]], device='cuda:0', dtype=torch.float16)/tensor([[0.1048, 0.0790, 0.0877, 0.0836, 0.0393, 0.1277, 0.0782, 0.0657, 0.0834,
         0.0400, 0.0800, 0.0704, 0.1199, 0.0503, 0.0549, 0.0847]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.1064],
        [0.0461],
        [0.0705],
        [0.0087],
        [0.0435],
        [0.0678],
        [0.0770],
        [0.0402],
        [0.0945],
        [0.0258],
        [0.0722],
        [0.0411],
        [0.0780],
        [0.0804],
        [0.0799],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.1064, 0.0461, 0.0705, 0.0087, 0.0435, 0.0678, 0.0770, 0.0402, 0.0945,
         0.0258, 0.0722, 0.0411, 0.0780, 0.0804, 0.0799, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1048, 0.1064],
        [0.0790, 0.0461],
        [0.0877, 0.0705],
        [0.0836, 0.0087],
        [0.0393, 0.0435],
        [0.1277, 0.0678],
        [0.0782, 0.0770],
        [0.0657, 0.0402],
        [0.0834, 0.0945],
        [0.0400, 0.0258],
        [0.0800, 0.0722],
        [0.0704, 0.0411],
        [0.1199, 0.0780],
        [0.0503, 0.0804],
        [0.0549, 0.0799],
        [0.0847, 0.0178]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0612],
        [0.1060],
        [0.0446],
        [0.0778],
        [0.0996],
        [0.0708],
        [0.1038],
        [0.0861],
        [0.0709],
        [0.0916],
        [0.0291],
        [0.0649],
        [0.0879],
        [0.1222],
        [0.0567],
        [0.0815]], device='cuda:0', dtype=torch.float16)/tensor([[0.0612, 0.1060, 0.0446, 0.0778, 0.0996, 0.0708, 0.1038, 0.0861, 0.0709,
         0.0916, 0.0291, 0.0649, 0.0879, 0.1222, 0.0567, 0.0815]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0215],
        [0.0347],
        [0.0277],
        [0.0063],
        [0.0318],
        [0.0388],
        [0.0273],
        [0.0335],
        [0.1216],
        [0.0224],
        [0.0179],
        [0.0464],
        [0.0396],
        [0.0406],
        [0.0529],
        [0.0514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0347, 0.0277, 0.0063, 0.0318, 0.0388, 0.0273, 0.0335, 0.1216,
         0.0224, 0.0179, 0.0464, 0.0396, 0.0406, 0.0529, 0.0514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0612, 0.0215],
        [0.1060, 0.0347],
        [0.0446, 0.0277],
        [0.0778, 0.0063],
        [0.0996, 0.0318],
        [0.0708, 0.0388],
        [0.1038, 0.0273],
        [0.0861, 0.0335],
        [0.0709, 0.1216],
        [0.0916, 0.0224],
        [0.0291, 0.0179],
        [0.0649, 0.0464],
        [0.0879, 0.0396],
        [0.1222, 0.0406],
        [0.0567, 0.0529],
        [0.0815, 0.0514]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0692],
        [0.0579],
        [0.0769],
        [0.0684],
        [0.0474],
        [0.0673],
        [0.0534],
        [0.0867],
        [0.0539],
        [0.1174],
        [0.0901],
        [0.0871],
        [0.0666],
        [0.0635],
        [0.0878],
        [0.0917]], device='cuda:0', dtype=torch.float16)/tensor([[0.0692, 0.0579, 0.0769, 0.0684, 0.0474, 0.0673, 0.0534, 0.0867, 0.0539,
         0.1174, 0.0901, 0.0871, 0.0666, 0.0635, 0.0878, 0.0917]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0895],
        [0.1335],
        [0.0628],
        [0.0684],
        [0.0358],
        [0.0799],
        [0.1395],
        [0.0403],
        [0.0924],
        [0.0581],
        [0.0475],
        [0.0562],
        [0.0257],
        [0.0704],
        [0.0545],
        [0.0506]], device='cuda:0', dtype=torch.float16)/tensor([[0.0895, 0.1335, 0.0628, 0.0684, 0.0358, 0.0799, 0.1395, 0.0403, 0.0924,
         0.0581, 0.0475, 0.0562, 0.0257, 0.0704, 0.0545, 0.0506]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0692, 0.0895],
        [0.0579, 0.1335],
        [0.0769, 0.0628],
        [0.0684, 0.0684],
        [0.0474, 0.0358],
        [0.0673, 0.0799],
        [0.0534, 0.1395],
        [0.0867, 0.0403],
        [0.0539, 0.0924],
        [0.1174, 0.0581],
        [0.0901, 0.0475],
        [0.0871, 0.0562],
        [0.0666, 0.0257],
        [0.0635, 0.0704],
        [0.0878, 0.0545],
        [0.0917, 0.0506]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0970],
        [0.0368],
        [0.0865],
        [0.0563],
        [0.1241],
        [0.0917],
        [0.0599],
        [0.0648],
        [0.0543],
        [0.0531],
        [0.0900],
        [0.0565],
        [0.0652],
        [0.1287],
        [0.0877],
        [0.1589]], device='cuda:0', dtype=torch.float16)/tensor([[0.0970, 0.0368, 0.0865, 0.0563, 0.1241, 0.0917, 0.0599, 0.0648, 0.0543,
         0.0531, 0.0900, 0.0565, 0.0652, 0.1287, 0.0877, 0.1589]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0265],
        [0.0398],
        [0.0757],
        [0.1044],
        [0.0387],
        [0.0465],
        [0.0663],
        [0.0795],
        [0.0293],
        [0.0574],
        [0.1506],
        [0.0766],
        [0.0762],
        [0.0710],
        [0.0338],
        [0.1392]], device='cuda:0', dtype=torch.float16)/tensor([[0.0265, 0.0398, 0.0757, 0.1044, 0.0387, 0.0465, 0.0663, 0.0795, 0.0293,
         0.0574, 0.1506, 0.0766, 0.0762, 0.0710, 0.0338, 0.1392]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0970, 0.0265],
        [0.0368, 0.0398],
        [0.0865, 0.0757],
        [0.0563, 0.1044],
        [0.1241, 0.0387],
        [0.0917, 0.0465],
        [0.0599, 0.0663],
        [0.0648, 0.0795],
        [0.0543, 0.0293],
        [0.0531, 0.0574],
        [0.0900, 0.1506],
        [0.0565, 0.0766],
        [0.0652, 0.0762],
        [0.1287, 0.0710],
        [0.0877, 0.0338],
        [0.1589, 0.1392]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0674],
        [0.0737],
        [0.0533],
        [0.1003],
        [0.0949],
        [0.0923],
        [0.0659],
        [0.0928],
        [0.0759],
        [0.0737],
        [0.1107],
        [0.0671],
        [0.0636],
        [0.1058],
        [0.0593],
        [0.0523]], device='cuda:0', dtype=torch.float16)/tensor([[0.0674, 0.0737, 0.0533, 0.1003, 0.0949, 0.0923, 0.0659, 0.0928, 0.0759,
         0.0737, 0.1107, 0.0671, 0.0636, 0.1058, 0.0593, 0.0523]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0497],
        [0.1006],
        [0.0746],
        [0.0689],
        [0.0456],
        [0.0461],
        [0.0900],
        [0.0439],
        [0.0464],
        [0.0561],
        [0.0869],
        [0.0848],
        [0.0575],
        [0.0745],
        [0.0515],
        [0.0786]], device='cuda:0', dtype=torch.float16)/tensor([[0.0497, 0.1006, 0.0746, 0.0689, 0.0456, 0.0461, 0.0900, 0.0439, 0.0464,
         0.0561, 0.0869, 0.0848, 0.0575, 0.0745, 0.0515, 0.0786]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0674, 0.0497],
        [0.0737, 0.1006],
        [0.0533, 0.0746],
        [0.1003, 0.0689],
        [0.0949, 0.0456],
        [0.0923, 0.0461],
        [0.0659, 0.0900],
        [0.0928, 0.0439],
        [0.0759, 0.0464],
        [0.0737, 0.0561],
        [0.1107, 0.0869],
        [0.0671, 0.0848],
        [0.0636, 0.0575],
        [0.1058, 0.0745],
        [0.0593, 0.0515],
        [0.0523, 0.0786]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0692],
        [0.0768],
        [0.1246],
        [0.0908],
        [0.1150],
        [0.0457],
        [0.0795],
        [0.0654],
        [0.1580],
        [0.0599],
        [0.0799],
        [0.0554],
        [0.0974],
        [0.0486],
        [0.0681],
        [0.0781]], device='cuda:0', dtype=torch.float16)/tensor([[0.0692, 0.0768, 0.1246, 0.0908, 0.1150, 0.0457, 0.0795, 0.0654, 0.1580,
         0.0599, 0.0799, 0.0554, 0.0974, 0.0486, 0.0681, 0.0781]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0731],
        [0.0955],
        [0.0377],
        [0.0403],
        [0.0440],
        [0.0939],
        [0.0316],
        [0.0279],
        [0.1709],
        [0.0806],
        [0.0705],
        [0.0174],
        [0.0364],
        [0.0865],
        [0.0670],
        [0.0812]], device='cuda:0', dtype=torch.float16)/tensor([[0.0731, 0.0955, 0.0377, 0.0403, 0.0440, 0.0939, 0.0316, 0.0279, 0.1709,
         0.0806, 0.0705, 0.0174, 0.0364, 0.0865, 0.0670, 0.0812]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0692, 0.0731],
        [0.0768, 0.0955],
        [0.1246, 0.0377],
        [0.0908, 0.0403],
        [0.1150, 0.0440],
        [0.0457, 0.0939],
        [0.0795, 0.0316],
        [0.0654, 0.0279],
        [0.1580, 0.1709],
        [0.0599, 0.0806],
        [0.0799, 0.0705],
        [0.0554, 0.0174],
        [0.0974, 0.0364],
        [0.0486, 0.0865],
        [0.0681, 0.0670],
        [0.0781, 0.0812]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0767],
        [0.0690],
        [0.1091],
        [0.0746],
        [0.1003],
        [0.1289],
        [0.0967],
        [0.0756],
        [0.0994],
        [0.0390],
        [0.0723],
        [0.0729],
        [0.0834],
        [0.0842],
        [0.1348],
        [0.1681]], device='cuda:0', dtype=torch.float16)/tensor([[0.0767, 0.0690, 0.1091, 0.0746, 0.1003, 0.1289, 0.0967, 0.0756, 0.0994,
         0.0390, 0.0723, 0.0729, 0.0834, 0.0842, 0.1348, 0.1681]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0338],
        [0.0216],
        [0.0477],
        [0.0936],
        [0.0238],
        [0.0240],
        [0.1510],
        [0.0558],
        [0.0368],
        [0.0700],
        [0.0533],
        [0.0591],
        [0.0367],
        [0.0557],
        [0.0584],
        [0.0633]], device='cuda:0', dtype=torch.float16)/tensor([[0.0338, 0.0216, 0.0477, 0.0936, 0.0238, 0.0240, 0.1510, 0.0558, 0.0368,
         0.0700, 0.0533, 0.0591, 0.0367, 0.0557, 0.0584, 0.0633]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0767, 0.0338],
        [0.0690, 0.0216],
        [0.1091, 0.0477],
        [0.0746, 0.0936],
        [0.1003, 0.0238],
        [0.1289, 0.0240],
        [0.0967, 0.1510],
        [0.0756, 0.0558],
        [0.0994, 0.0368],
        [0.0390, 0.0700],
        [0.0723, 0.0533],
        [0.0729, 0.0591],
        [0.0834, 0.0367],
        [0.0842, 0.0557],
        [0.1348, 0.0584],
        [0.1681, 0.0633]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1724],
        [0.0607],
        [0.0695],
        [0.0507],
        [0.0697],
        [0.0611],
        [0.0867],
        [0.0945],
        [0.0672],
        [0.0552],
        [0.1538],
        [0.0703],
        [0.0818],
        [0.0624],
        [0.1276],
        [0.0625]], device='cuda:0', dtype=torch.float16)/tensor([[0.1724, 0.0607, 0.0695, 0.0507, 0.0697, 0.0611, 0.0867, 0.0945, 0.0672,
         0.0552, 0.1538, 0.0703, 0.0818, 0.0624, 0.1276, 0.0625]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0801],
        [0.0688],
        [0.0328],
        [0.0862],
        [0.0522],
        [0.1000],
        [0.0534],
        [0.0714],
        [0.0657],
        [0.0822],
        [0.0726],
        [0.0267],
        [0.0994],
        [0.0367],
        [0.1422],
        [0.0454]], device='cuda:0', dtype=torch.float16)/tensor([[0.0801, 0.0688, 0.0328, 0.0862, 0.0522, 0.1000, 0.0534, 0.0714, 0.0657,
         0.0822, 0.0726, 0.0267, 0.0994, 0.0367, 0.1422, 0.0454]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1724, 0.0801],
        [0.0607, 0.0688],
        [0.0695, 0.0328],
        [0.0507, 0.0862],
        [0.0697, 0.0522],
        [0.0611, 0.1000],
        [0.0867, 0.0534],
        [0.0945, 0.0714],
        [0.0672, 0.0657],
        [0.0552, 0.0822],
        [0.1538, 0.0726],
        [0.0703, 0.0267],
        [0.0818, 0.0994],
        [0.0624, 0.0367],
        [0.1276, 0.1422],
        [0.0625, 0.0454]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0832],
        [0.0528],
        [0.0881],
        [0.0829],
        [0.0385],
        [0.0500],
        [0.0516],
        [0.0871]], device='cuda:0', dtype=torch.float16)/tensor([[0.0832, 0.0528, 0.0881, 0.0829, 0.0385, 0.0500, 0.0516, 0.0871]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0425],
        [0.0593],
        [0.0601],
        [0.0557],
        [0.0615],
        [0.0641],
        [0.0086],
        [0.0949]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0593, 0.0601, 0.0557, 0.0615, 0.0641, 0.0086, 0.0949]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0832, 0.0425],
        [0.0528, 0.0593],
        [0.0881, 0.0601],
        [0.0829, 0.0557],
        [0.0385, 0.0615],
        [0.0500, 0.0641],
        [0.0516, 0.0086],
        [0.0871, 0.0949]], device='cuda:0')
acc:  0.83
Time taken to execute the en SA task with prompt type common, variation 5 and batchsize 16: 0:03:24.747356
path ['42', 'en', 'llama', 'SA', 'common', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA rare_synonyms 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 323.37it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0701],
        [0.0669],
        [0.1216],
        [0.0634],
        [0.0669],
        [0.0646],
        [0.3450],
        [0.0648],
        [0.1715],
        [0.1041],
        [0.0591],
        [0.0683],
        [0.0834],
        [0.0729],
        [0.1124],
        [0.0803]], device='cuda:0', dtype=torch.float16)/tensor([[0.0701, 0.0669, 0.1216, 0.0634, 0.0669, 0.0646, 0.3450, 0.0648, 0.1715,
         0.1041, 0.0591, 0.0683, 0.0834, 0.0729, 0.1124, 0.0803]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0396],
        [0.0396],
        [0.0421],
        [0.0509],
        [0.0533],
        [0.0325],
        [0.0872],
        [0.0177],
        [0.0656],
        [0.0174],
        [0.0309],
        [0.0259],
        [0.0547],
        [0.0364],
        [0.0284],
        [0.0527]], device='cuda:0', dtype=torch.float16)/tensor([[0.0396, 0.0396, 0.0421, 0.0509, 0.0533, 0.0325, 0.0872, 0.0177, 0.0656,
         0.0174, 0.0309, 0.0259, 0.0547, 0.0364, 0.0284, 0.0527]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0701, 0.0396],
        [0.0669, 0.0396],
        [0.1216, 0.0421],
        [0.0634, 0.0509],
        [0.0669, 0.0533],
        [0.0646, 0.0325],
        [0.3450, 0.0872],
        [0.0648, 0.0177],
        [0.1715, 0.0656],
        [0.1041, 0.0174],
        [0.0591, 0.0309],
        [0.0683, 0.0259],
        [0.0834, 0.0547],
        [0.0729, 0.0364],
        [0.1124, 0.0284],
        [0.0803, 0.0527]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0638],
        [0.0251],
        [0.0524],
        [0.1324],
        [0.0947],
        [0.0652],
        [0.0870],
        [0.0777],
        [0.0948],
        [0.0418],
        [0.1019],
        [0.0886],
        [0.1108],
        [0.0599],
        [0.0875],
        [0.0901]], device='cuda:0', dtype=torch.float16)/tensor([[0.0638, 0.0251, 0.0524, 0.1324, 0.0947, 0.0652, 0.0870, 0.0777, 0.0948,
         0.0418, 0.1019, 0.0886, 0.1108, 0.0599, 0.0875, 0.0901]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0288],
        [0.0119],
        [0.0208],
        [0.0404],
        [0.0303],
        [0.0386],
        [0.0488],
        [0.0364],
        [0.0371],
        [0.0219],
        [0.0260],
        [0.0317],
        [0.0767],
        [0.0403],
        [0.0570],
        [0.0468]], device='cuda:0', dtype=torch.float16)/tensor([[0.0288, 0.0119, 0.0208, 0.0404, 0.0303, 0.0386, 0.0488, 0.0364, 0.0371,
         0.0219, 0.0260, 0.0317, 0.0767, 0.0403, 0.0570, 0.0468]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0638, 0.0288],
        [0.0251, 0.0119],
        [0.0524, 0.0208],
        [0.1324, 0.0404],
        [0.0947, 0.0303],
        [0.0652, 0.0386],
        [0.0870, 0.0488],
        [0.0777, 0.0364],
        [0.0948, 0.0371],
        [0.0418, 0.0219],
        [0.1019, 0.0260],
        [0.0886, 0.0317],
        [0.1108, 0.0767],
        [0.0599, 0.0403],
        [0.0875, 0.0570],
        [0.0901, 0.0468]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0696],
        [0.0782],
        [0.0475],
        [0.0972],
        [0.0900],
        [0.0950],
        [0.0935],
        [0.1035],
        [0.1392],
        [0.0889],
        [0.0620],
        [0.0703],
        [0.0701],
        [0.0707],
        [0.0734],
        [0.1010]], device='cuda:0', dtype=torch.float16)/tensor([[0.0696, 0.0782, 0.0475, 0.0972, 0.0900, 0.0950, 0.0935, 0.1035, 0.1392,
         0.0889, 0.0620, 0.0703, 0.0701, 0.0707, 0.0734, 0.1010]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0385],
        [0.0148],
        [0.0204],
        [0.0352],
        [0.0396],
        [0.0663],
        [0.0381],
        [0.0344],
        [0.0369],
        [0.0340],
        [0.0214],
        [0.0420],
        [0.0449],
        [0.0412],
        [0.0215],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.0385, 0.0148, 0.0204, 0.0352, 0.0396, 0.0663, 0.0381, 0.0344, 0.0369,
         0.0340, 0.0214, 0.0420, 0.0449, 0.0412, 0.0215, 0.0349]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0696, 0.0385],
        [0.0782, 0.0148],
        [0.0475, 0.0204],
        [0.0972, 0.0352],
        [0.0900, 0.0396],
        [0.0950, 0.0663],
        [0.0935, 0.0381],
        [0.1035, 0.0344],
        [0.1392, 0.0369],
        [0.0889, 0.0340],
        [0.0620, 0.0214],
        [0.0703, 0.0420],
        [0.0701, 0.0449],
        [0.0707, 0.0412],
        [0.0734, 0.0215],
        [0.1010, 0.0349]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0951],
        [0.1493],
        [0.0958],
        [0.0547],
        [0.0416],
        [0.0544],
        [0.1170],
        [0.0631],
        [0.1066],
        [0.0757],
        [0.0746],
        [0.0586],
        [0.1068],
        [0.0909],
        [0.0599],
        [0.0612]], device='cuda:0', dtype=torch.float16)/tensor([[0.0951, 0.1493, 0.0958, 0.0547, 0.0416, 0.0544, 0.1170, 0.0631, 0.1066,
         0.0757, 0.0746, 0.0586, 0.1068, 0.0909, 0.0599, 0.0612]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0474],
        [0.1003],
        [0.0572],
        [0.0124],
        [0.0132],
        [0.0420],
        [0.0473],
        [0.0155],
        [0.0399],
        [0.0333],
        [0.0406],
        [0.0319],
        [0.0533],
        [0.0324],
        [0.0390],
        [0.0346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0474, 0.1003, 0.0572, 0.0124, 0.0132, 0.0420, 0.0473, 0.0155, 0.0399,
         0.0333, 0.0406, 0.0319, 0.0533, 0.0324, 0.0390, 0.0346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0951, 0.0474],
        [0.1493, 0.1003],
        [0.0958, 0.0572],
        [0.0547, 0.0124],
        [0.0416, 0.0132],
        [0.0544, 0.0420],
        [0.1170, 0.0473],
        [0.0631, 0.0155],
        [0.1066, 0.0399],
        [0.0757, 0.0333],
        [0.0746, 0.0406],
        [0.0586, 0.0319],
        [0.1068, 0.0533],
        [0.0909, 0.0324],
        [0.0599, 0.0390],
        [0.0612, 0.0346]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0765],
        [0.1010],
        [0.0801],
        [0.0746],
        [0.0728],
        [0.0600],
        [0.0535],
        [0.1152],
        [0.0645],
        [0.0753],
        [0.0979],
        [0.0798],
        [0.1395],
        [0.0695],
        [0.0495],
        [0.0610]], device='cuda:0', dtype=torch.float16)/tensor([[0.0765, 0.1010, 0.0801, 0.0746, 0.0728, 0.0600, 0.0535, 0.1152, 0.0645,
         0.0753, 0.0979, 0.0798, 0.1395, 0.0695, 0.0495, 0.0610]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0494],
        [0.0369],
        [0.0238],
        [0.0302],
        [0.0408],
        [0.0390],
        [0.0475],
        [0.1057],
        [0.0204],
        [0.0297],
        [0.0383],
        [0.0307],
        [0.0453],
        [0.0418],
        [0.0407],
        [0.0093]], device='cuda:0', dtype=torch.float16)/tensor([[0.0494, 0.0369, 0.0238, 0.0302, 0.0408, 0.0390, 0.0475, 0.1057, 0.0204,
         0.0297, 0.0383, 0.0307, 0.0453, 0.0418, 0.0407, 0.0093]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0765, 0.0494],
        [0.1010, 0.0369],
        [0.0801, 0.0238],
        [0.0746, 0.0302],
        [0.0728, 0.0408],
        [0.0600, 0.0390],
        [0.0535, 0.0475],
        [0.1152, 0.1057],
        [0.0645, 0.0204],
        [0.0753, 0.0297],
        [0.0979, 0.0383],
        [0.0798, 0.0307],
        [0.1395, 0.0453],
        [0.0695, 0.0418],
        [0.0495, 0.0407],
        [0.0610, 0.0093]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0958],
        [0.0834],
        [0.0625],
        [0.0870],
        [0.0667],
        [0.1471],
        [0.0605],
        [0.1005],
        [0.0945],
        [0.1255],
        [0.0563],
        [0.0726],
        [0.1532],
        [0.0536],
        [0.0789],
        [0.0980]], device='cuda:0', dtype=torch.float16)/tensor([[0.0958, 0.0834, 0.0625, 0.0870, 0.0667, 0.1471, 0.0605, 0.1005, 0.0945,
         0.1255, 0.0563, 0.0726, 0.1532, 0.0536, 0.0789, 0.0980]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0542],
        [0.0359],
        [0.0457],
        [0.0278],
        [0.0480],
        [0.0537],
        [0.0522],
        [0.0619],
        [0.0237],
        [0.0531],
        [0.0076],
        [0.0483],
        [0.0425],
        [0.0132],
        [0.0435],
        [0.0456]], device='cuda:0', dtype=torch.float16)/tensor([[0.0542, 0.0359, 0.0457, 0.0278, 0.0480, 0.0537, 0.0522, 0.0619, 0.0237,
         0.0531, 0.0076, 0.0483, 0.0425, 0.0132, 0.0435, 0.0456]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0958, 0.0542],
        [0.0834, 0.0359],
        [0.0625, 0.0457],
        [0.0870, 0.0278],
        [0.0667, 0.0480],
        [0.1471, 0.0537],
        [0.0605, 0.0522],
        [0.1005, 0.0619],
        [0.0945, 0.0237],
        [0.1255, 0.0531],
        [0.0563, 0.0076],
        [0.0726, 0.0483],
        [0.1532, 0.0425],
        [0.0536, 0.0132],
        [0.0789, 0.0435],
        [0.0980, 0.0456]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0765],
        [0.0820],
        [0.0879],
        [0.0597],
        [0.1039],
        [0.1052],
        [0.1086],
        [0.0591],
        [0.0826],
        [0.0984],
        [0.1028],
        [0.0715],
        [0.1083],
        [0.0676],
        [0.0679],
        [0.0641]], device='cuda:0', dtype=torch.float16)/tensor([[0.0765, 0.0820, 0.0879, 0.0597, 0.1039, 0.1052, 0.1086, 0.0591, 0.0826,
         0.0984, 0.1028, 0.0715, 0.1083, 0.0676, 0.0679, 0.0641]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0204],
        [0.0337],
        [0.0344],
        [0.0556],
        [0.0269],
        [0.0452],
        [0.0266],
        [0.0171],
        [0.0342],
        [0.0454],
        [0.0471],
        [0.0407],
        [0.0344],
        [0.0330],
        [0.0372],
        [0.0411]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0337, 0.0344, 0.0556, 0.0269, 0.0452, 0.0266, 0.0171, 0.0342,
         0.0454, 0.0471, 0.0407, 0.0344, 0.0330, 0.0372, 0.0411]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0765, 0.0204],
        [0.0820, 0.0337],
        [0.0879, 0.0344],
        [0.0597, 0.0556],
        [0.1039, 0.0269],
        [0.1052, 0.0452],
        [0.1086, 0.0266],
        [0.0591, 0.0171],
        [0.0826, 0.0342],
        [0.0984, 0.0454],
        [0.1028, 0.0471],
        [0.0715, 0.0407],
        [0.1083, 0.0344],
        [0.0676, 0.0330],
        [0.0679, 0.0372],
        [0.0641, 0.0411]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0728],
        [0.0574],
        [0.0858],
        [0.0730],
        [0.1125],
        [0.0675],
        [0.0826],
        [0.0729],
        [0.1081],
        [0.0944],
        [0.0637],
        [0.0793],
        [0.0803],
        [0.1694],
        [0.0981],
        [0.0836]], device='cuda:0', dtype=torch.float16)/tensor([[0.0728, 0.0574, 0.0858, 0.0730, 0.1125, 0.0675, 0.0826, 0.0729, 0.1081,
         0.0944, 0.0637, 0.0793, 0.0803, 0.1694, 0.0981, 0.0836]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0558],
        [0.0621],
        [0.0281],
        [0.0297],
        [0.0472],
        [0.0275],
        [0.0309],
        [0.0207],
        [0.0616],
        [0.0586],
        [0.0489],
        [0.0408],
        [0.0209],
        [0.0893],
        [0.0350],
        [0.0480]], device='cuda:0', dtype=torch.float16)/tensor([[0.0558, 0.0621, 0.0281, 0.0297, 0.0472, 0.0275, 0.0309, 0.0207, 0.0616,
         0.0586, 0.0489, 0.0408, 0.0209, 0.0893, 0.0350, 0.0480]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0728, 0.0558],
        [0.0574, 0.0621],
        [0.0858, 0.0281],
        [0.0730, 0.0297],
        [0.1125, 0.0472],
        [0.0675, 0.0275],
        [0.0826, 0.0309],
        [0.0729, 0.0207],
        [0.1081, 0.0616],
        [0.0944, 0.0586],
        [0.0637, 0.0489],
        [0.0793, 0.0408],
        [0.0803, 0.0209],
        [0.1694, 0.0893],
        [0.0981, 0.0350],
        [0.0836, 0.0480]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0793],
        [0.0826],
        [0.0620],
        [0.0779],
        [0.1148],
        [0.0840],
        [0.0862],
        [0.1152],
        [0.1041],
        [0.1152],
        [0.1169],
        [0.1015],
        [0.0804],
        [0.0709],
        [0.0450],
        [0.0623]], device='cuda:0', dtype=torch.float16)/tensor([[0.0793, 0.0826, 0.0620, 0.0779, 0.1148, 0.0840, 0.0862, 0.1152, 0.1041,
         0.1152, 0.1169, 0.1015, 0.0804, 0.0709, 0.0450, 0.0623]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0528],
        [0.0326],
        [0.0432],
        [0.0234],
        [0.0224],
        [0.0293],
        [0.0662],
        [0.0257],
        [0.0411],
        [0.0863],
        [0.0480],
        [0.0645],
        [0.0507],
        [0.0327],
        [0.0241],
        [0.0191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0528, 0.0326, 0.0432, 0.0234, 0.0224, 0.0293, 0.0662, 0.0257, 0.0411,
         0.0863, 0.0480, 0.0645, 0.0507, 0.0327, 0.0241, 0.0191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0793, 0.0528],
        [0.0826, 0.0326],
        [0.0620, 0.0432],
        [0.0779, 0.0234],
        [0.1148, 0.0224],
        [0.0840, 0.0293],
        [0.0862, 0.0662],
        [0.1152, 0.0257],
        [0.1041, 0.0411],
        [0.1152, 0.0863],
        [0.1169, 0.0480],
        [0.1015, 0.0645],
        [0.0804, 0.0507],
        [0.0709, 0.0327],
        [0.0450, 0.0241],
        [0.0623, 0.0191]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0854],
        [0.0684],
        [0.0397],
        [0.0692],
        [0.0726],
        [0.0809],
        [0.0812],
        [0.0859],
        [0.0898],
        [0.0880],
        [0.1707],
        [0.0920],
        [0.0677],
        [0.0903],
        [0.0610],
        [0.0405]], device='cuda:0', dtype=torch.float16)/tensor([[0.0854, 0.0684, 0.0397, 0.0692, 0.0726, 0.0809, 0.0812, 0.0859, 0.0898,
         0.0880, 0.1707, 0.0920, 0.0677, 0.0903, 0.0610, 0.0405]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0578],
        [0.0456],
        [0.0163],
        [0.0379],
        [0.0468],
        [0.0498],
        [0.0292],
        [0.0403],
        [0.0296],
        [0.0464],
        [0.0466],
        [0.0463],
        [0.0721],
        [0.0340],
        [0.0319],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0578, 0.0456, 0.0163, 0.0379, 0.0468, 0.0498, 0.0292, 0.0403, 0.0296,
         0.0464, 0.0466, 0.0463, 0.0721, 0.0340, 0.0319, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0854, 0.0578],
        [0.0684, 0.0456],
        [0.0397, 0.0163],
        [0.0692, 0.0379],
        [0.0726, 0.0468],
        [0.0809, 0.0498],
        [0.0812, 0.0292],
        [0.0859, 0.0403],
        [0.0898, 0.0296],
        [0.0880, 0.0464],
        [0.1707, 0.0466],
        [0.0920, 0.0463],
        [0.0677, 0.0721],
        [0.0903, 0.0340],
        [0.0610, 0.0319],
        [0.0405, 0.0135]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0698],
        [0.0869],
        [0.0917],
        [0.0892],
        [0.0656],
        [0.1140],
        [0.0660],
        [0.0659],
        [0.0931],
        [0.0778],
        [0.0871],
        [0.0677],
        [0.0624],
        [0.0885],
        [0.0861],
        [0.0922]], device='cuda:0', dtype=torch.float16)/tensor([[0.0698, 0.0869, 0.0917, 0.0892, 0.0656, 0.1140, 0.0660, 0.0659, 0.0931,
         0.0778, 0.0871, 0.0677, 0.0624, 0.0885, 0.0861, 0.0922]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0239],
        [0.0195],
        [0.0362],
        [0.0347],
        [0.0177],
        [0.0569],
        [0.0420],
        [0.0403],
        [0.0592],
        [0.0221],
        [0.0222],
        [0.0253],
        [0.0416],
        [0.0215],
        [0.0506],
        [0.0546]], device='cuda:0', dtype=torch.float16)/tensor([[0.0239, 0.0195, 0.0362, 0.0347, 0.0177, 0.0569, 0.0420, 0.0403, 0.0592,
         0.0221, 0.0222, 0.0253, 0.0416, 0.0215, 0.0506, 0.0546]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0698, 0.0239],
        [0.0869, 0.0195],
        [0.0917, 0.0362],
        [0.0892, 0.0347],
        [0.0656, 0.0177],
        [0.1140, 0.0569],
        [0.0660, 0.0420],
        [0.0659, 0.0403],
        [0.0931, 0.0592],
        [0.0778, 0.0221],
        [0.0871, 0.0222],
        [0.0677, 0.0253],
        [0.0624, 0.0416],
        [0.0885, 0.0215],
        [0.0861, 0.0506],
        [0.0922, 0.0546]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0640],
        [0.0913],
        [0.0969],
        [0.0494],
        [0.0915],
        [0.0848],
        [0.0810],
        [0.0705],
        [0.0792],
        [0.0657],
        [0.0884],
        [0.0859],
        [0.0842],
        [0.0470],
        [0.0770],
        [0.0739]], device='cuda:0', dtype=torch.float16)/tensor([[0.0640, 0.0913, 0.0969, 0.0494, 0.0915, 0.0848, 0.0810, 0.0705, 0.0792,
         0.0657, 0.0884, 0.0859, 0.0842, 0.0470, 0.0770, 0.0739]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0461],
        [0.0463],
        [0.0458],
        [0.0192],
        [0.0376],
        [0.0286],
        [0.0243],
        [0.0280],
        [0.0232],
        [0.0382],
        [0.0328],
        [0.0350],
        [0.0158],
        [0.0186],
        [0.0372],
        [0.0622]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0463, 0.0458, 0.0192, 0.0376, 0.0286, 0.0243, 0.0280, 0.0232,
         0.0382, 0.0328, 0.0350, 0.0158, 0.0186, 0.0372, 0.0622]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0640, 0.0461],
        [0.0913, 0.0463],
        [0.0969, 0.0458],
        [0.0494, 0.0192],
        [0.0915, 0.0376],
        [0.0848, 0.0286],
        [0.0810, 0.0243],
        [0.0705, 0.0280],
        [0.0792, 0.0232],
        [0.0657, 0.0382],
        [0.0884, 0.0328],
        [0.0859, 0.0350],
        [0.0842, 0.0158],
        [0.0470, 0.0186],
        [0.0770, 0.0372],
        [0.0739, 0.0622]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.1061],
        [0.0790],
        [0.0732],
        [0.0930],
        [0.0770],
        [0.1603],
        [0.0909],
        [0.0947]], device='cuda:0', dtype=torch.float16)/tensor([[0.1061, 0.0790, 0.0732, 0.0930, 0.0770, 0.1603, 0.0909, 0.0947]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0639],
        [0.0251],
        [0.0322],
        [0.0277],
        [0.0246],
        [0.1110],
        [0.0321],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0639, 0.0251, 0.0322, 0.0277, 0.0246, 0.1110, 0.0321, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.1061, 0.0639],
        [0.0790, 0.0251],
        [0.0732, 0.0322],
        [0.0930, 0.0277],
        [0.0770, 0.0246],
        [0.1603, 0.1110],
        [0.0909, 0.0321],
        [0.0947, 0.0341]], device='cuda:0')
acc:  0.51
Time taken to execute the en SA task with prompt type rare_synonyms, variation 0 and batchsize 16: 0:03:24.462359
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_0']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA rare_synonyms 1 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 331.10it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0658],
        [0.0549],
        [0.0654],
        [0.1788],
        [0.0945],
        [0.0685],
        [0.0784],
        [0.0771],
        [0.0598],
        [0.0449],
        [0.0913],
        [0.0469],
        [0.0609],
        [0.0884],
        [0.0921],
        [0.0746]], device='cuda:0', dtype=torch.float16)/tensor([[0.0658, 0.0549, 0.0654, 0.1788, 0.0945, 0.0685, 0.0784, 0.0771, 0.0598,
         0.0449, 0.0913, 0.0469, 0.0609, 0.0884, 0.0921, 0.0746]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0099],
        [0.0205],
        [0.0256],
        [0.0751],
        [0.0195],
        [0.0089],
        [0.0209],
        [0.0314],
        [0.0346],
        [0.0060],
        [0.0160],
        [0.0077],
        [0.0149],
        [0.0264],
        [0.0254],
        [0.0288]], device='cuda:0', dtype=torch.float16)/tensor([[0.0099, 0.0205, 0.0256, 0.0751, 0.0195, 0.0089, 0.0209, 0.0314, 0.0346,
         0.0060, 0.0160, 0.0077, 0.0149, 0.0264, 0.0254, 0.0288]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0658, 0.0099],
        [0.0549, 0.0205],
        [0.0654, 0.0256],
        [0.1788, 0.0751],
        [0.0945, 0.0195],
        [0.0685, 0.0089],
        [0.0784, 0.0209],
        [0.0771, 0.0314],
        [0.0598, 0.0346],
        [0.0449, 0.0060],
        [0.0913, 0.0160],
        [0.0469, 0.0077],
        [0.0609, 0.0149],
        [0.0884, 0.0264],
        [0.0921, 0.0254],
        [0.0746, 0.0288]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0507],
        [0.0964],
        [0.0864],
        [0.0990],
        [0.1140],
        [0.0815],
        [0.0839],
        [0.0731],
        [0.0472],
        [0.0786],
        [0.0914],
        [0.0899],
        [0.0809],
        [0.0844],
        [0.0551]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0507, 0.0964, 0.0864, 0.0990, 0.1140, 0.0815, 0.0839, 0.0731,
         0.0472, 0.0786, 0.0914, 0.0899, 0.0809, 0.0844, 0.0551]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0247],
        [0.0042],
        [0.0296],
        [0.0210],
        [0.0218],
        [0.0420],
        [0.0322],
        [0.0238],
        [0.0329],
        [0.0338],
        [0.0289],
        [0.0212],
        [0.0402],
        [0.0188],
        [0.0086],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0247, 0.0042, 0.0296, 0.0210, 0.0218, 0.0420, 0.0322, 0.0238, 0.0329,
         0.0338, 0.0289, 0.0212, 0.0402, 0.0188, 0.0086, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0575, 0.0247],
        [0.0507, 0.0042],
        [0.0964, 0.0296],
        [0.0864, 0.0210],
        [0.0990, 0.0218],
        [0.1140, 0.0420],
        [0.0815, 0.0322],
        [0.0839, 0.0238],
        [0.0731, 0.0329],
        [0.0472, 0.0338],
        [0.0786, 0.0289],
        [0.0914, 0.0212],
        [0.0899, 0.0402],
        [0.0809, 0.0188],
        [0.0844, 0.0086],
        [0.0551, 0.0051]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0859],
        [0.0541],
        [0.0573],
        [0.0677],
        [0.0963],
        [0.0502],
        [0.0775],
        [0.0565],
        [0.0555],
        [0.0531],
        [0.1646],
        [0.0452],
        [0.0786],
        [0.1004],
        [0.0862],
        [0.0905]], device='cuda:0', dtype=torch.float16)/tensor([[0.0859, 0.0541, 0.0573, 0.0677, 0.0963, 0.0502, 0.0775, 0.0565, 0.0555,
         0.0531, 0.1646, 0.0452, 0.0786, 0.1004, 0.0862, 0.0905]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0198],
        [0.0240],
        [0.0282],
        [0.0150],
        [0.0386],
        [0.0275],
        [0.0363],
        [0.0164],
        [0.0155],
        [0.0206],
        [0.0596],
        [0.0276],
        [0.0217],
        [0.0146],
        [0.0191],
        [0.0196]], device='cuda:0', dtype=torch.float16)/tensor([[0.0198, 0.0240, 0.0282, 0.0150, 0.0386, 0.0275, 0.0363, 0.0164, 0.0155,
         0.0206, 0.0596, 0.0276, 0.0217, 0.0146, 0.0191, 0.0196]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0859, 0.0198],
        [0.0541, 0.0240],
        [0.0573, 0.0282],
        [0.0677, 0.0150],
        [0.0963, 0.0386],
        [0.0502, 0.0275],
        [0.0775, 0.0363],
        [0.0565, 0.0164],
        [0.0555, 0.0155],
        [0.0531, 0.0206],
        [0.1646, 0.0596],
        [0.0452, 0.0276],
        [0.0786, 0.0217],
        [0.1004, 0.0146],
        [0.0862, 0.0191],
        [0.0905, 0.0196]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0801],
        [0.1718],
        [0.0905],
        [0.0812],
        [0.0891],
        [0.0424],
        [0.0778],
        [0.0770],
        [0.0536],
        [0.0535],
        [0.0389],
        [0.0761],
        [0.1161],
        [0.0856],
        [0.0997],
        [0.0619]], device='cuda:0', dtype=torch.float16)/tensor([[0.0801, 0.1718, 0.0905, 0.0812, 0.0891, 0.0424, 0.0778, 0.0770, 0.0536,
         0.0535, 0.0389, 0.0761, 0.1161, 0.0856, 0.0997, 0.0619]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0283],
        [0.0774],
        [0.0140],
        [0.0405],
        [0.0080],
        [0.0451],
        [0.0135],
        [0.0150],
        [0.0083],
        [0.0162],
        [0.0117],
        [0.0199],
        [0.0267],
        [0.0274],
        [0.0099],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0774, 0.0140, 0.0405, 0.0080, 0.0451, 0.0135, 0.0150, 0.0083,
         0.0162, 0.0117, 0.0199, 0.0267, 0.0274, 0.0099, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0801, 0.0283],
        [0.1718, 0.0774],
        [0.0905, 0.0140],
        [0.0812, 0.0405],
        [0.0891, 0.0080],
        [0.0424, 0.0451],
        [0.0778, 0.0135],
        [0.0770, 0.0150],
        [0.0536, 0.0083],
        [0.0535, 0.0162],
        [0.0389, 0.0117],
        [0.0761, 0.0199],
        [0.1161, 0.0267],
        [0.0856, 0.0274],
        [0.0997, 0.0099],
        [0.0619, 0.0141]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0576],
        [0.1300],
        [0.0740],
        [0.0835],
        [0.0615],
        [0.0984],
        [0.0821],
        [0.0636],
        [0.0557],
        [0.0627],
        [0.0456],
        [0.0693],
        [0.0840],
        [0.0655],
        [0.0534],
        [0.0828]], device='cuda:0', dtype=torch.float16)/tensor([[0.0576, 0.1300, 0.0740, 0.0835, 0.0615, 0.0984, 0.0821, 0.0636, 0.0557,
         0.0627, 0.0456, 0.0693, 0.0840, 0.0655, 0.0534, 0.0828]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0104],
        [0.0350],
        [0.0147],
        [0.0153],
        [0.0331],
        [0.0255],
        [0.0113],
        [0.0395],
        [0.0074],
        [0.0294],
        [0.0318],
        [0.0333],
        [0.0211],
        [0.0159],
        [0.0145],
        [0.0457]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0350, 0.0147, 0.0153, 0.0331, 0.0255, 0.0113, 0.0395, 0.0074,
         0.0294, 0.0318, 0.0333, 0.0211, 0.0159, 0.0145, 0.0457]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0576, 0.0104],
        [0.1300, 0.0350],
        [0.0740, 0.0147],
        [0.0835, 0.0153],
        [0.0615, 0.0331],
        [0.0984, 0.0255],
        [0.0821, 0.0113],
        [0.0636, 0.0395],
        [0.0557, 0.0074],
        [0.0627, 0.0294],
        [0.0456, 0.0318],
        [0.0693, 0.0333],
        [0.0840, 0.0211],
        [0.0655, 0.0159],
        [0.0534, 0.0145],
        [0.0828, 0.0457]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0346],
        [0.0789],
        [0.0773],
        [0.0700],
        [0.1000],
        [0.0921],
        [0.1625],
        [0.0490],
        [0.0865],
        [0.0607],
        [0.0839],
        [0.0964],
        [0.0532],
        [0.0760],
        [0.0833],
        [0.0639]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0789, 0.0773, 0.0700, 0.1000, 0.0921, 0.1625, 0.0490, 0.0865,
         0.0607, 0.0839, 0.0964, 0.0532, 0.0760, 0.0833, 0.0639]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0331],
        [0.0151],
        [0.0164],
        [0.0209],
        [0.0125],
        [0.0459],
        [0.0300],
        [0.0216],
        [0.0124],
        [0.0207],
        [0.0144],
        [0.0381],
        [0.0200],
        [0.0168],
        [0.0299],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0331, 0.0151, 0.0164, 0.0209, 0.0125, 0.0459, 0.0300, 0.0216, 0.0124,
         0.0207, 0.0144, 0.0381, 0.0200, 0.0168, 0.0299, 0.0088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0346, 0.0331],
        [0.0789, 0.0151],
        [0.0773, 0.0164],
        [0.0700, 0.0209],
        [0.1000, 0.0125],
        [0.0921, 0.0459],
        [0.1625, 0.0300],
        [0.0490, 0.0216],
        [0.0865, 0.0124],
        [0.0607, 0.0207],
        [0.0839, 0.0144],
        [0.0964, 0.0381],
        [0.0532, 0.0200],
        [0.0760, 0.0168],
        [0.0833, 0.0299],
        [0.0639, 0.0088]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0821],
        [0.2061],
        [0.0428],
        [0.0668],
        [0.0797],
        [0.0636],
        [0.0829],
        [0.0897],
        [0.0829],
        [0.0274],
        [0.0529],
        [0.1089],
        [0.0603],
        [0.0539],
        [0.0839],
        [0.0965]], device='cuda:0', dtype=torch.float16)/tensor([[0.0821, 0.2061, 0.0428, 0.0668, 0.0797, 0.0636, 0.0829, 0.0897, 0.0829,
         0.0274, 0.0529, 0.1089, 0.0603, 0.0539, 0.0839, 0.0965]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0530],
        [0.0513],
        [0.0187],
        [0.0316],
        [0.0197],
        [0.0210],
        [0.0327],
        [0.0310],
        [0.0110],
        [0.0060],
        [0.0069],
        [0.0220],
        [0.0246],
        [0.0261],
        [0.0266],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0530, 0.0513, 0.0187, 0.0316, 0.0197, 0.0210, 0.0327, 0.0310, 0.0110,
         0.0060, 0.0069, 0.0220, 0.0246, 0.0261, 0.0266, 0.0237]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0821, 0.0530],
        [0.2061, 0.0513],
        [0.0428, 0.0187],
        [0.0668, 0.0316],
        [0.0797, 0.0197],
        [0.0636, 0.0210],
        [0.0829, 0.0327],
        [0.0897, 0.0310],
        [0.0829, 0.0110],
        [0.0274, 0.0060],
        [0.0529, 0.0069],
        [0.1089, 0.0220],
        [0.0603, 0.0246],
        [0.0539, 0.0261],
        [0.0839, 0.0266],
        [0.0965, 0.0237]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0541],
        [0.0632],
        [0.0614],
        [0.0874],
        [0.0665],
        [0.0596],
        [0.0596],
        [0.0742],
        [0.1057],
        [0.0892],
        [0.0730],
        [0.0594],
        [0.0786],
        [0.0818],
        [0.1013],
        [0.0646]], device='cuda:0', dtype=torch.float16)/tensor([[0.0541, 0.0632, 0.0614, 0.0874, 0.0665, 0.0596, 0.0596, 0.0742, 0.1057,
         0.0892, 0.0730, 0.0594, 0.0786, 0.0818, 0.1013, 0.0646]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0341],
        [0.0155],
        [0.0149],
        [0.0297],
        [0.0105],
        [0.0122],
        [0.0483],
        [0.0329],
        [0.0230],
        [0.0155],
        [0.0158],
        [0.0470],
        [0.0389],
        [0.0220],
        [0.0237],
        [0.0071]], device='cuda:0', dtype=torch.float16)/tensor([[0.0341, 0.0155, 0.0149, 0.0297, 0.0105, 0.0122, 0.0483, 0.0329, 0.0230,
         0.0155, 0.0158, 0.0470, 0.0389, 0.0220, 0.0237, 0.0071]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0541, 0.0341],
        [0.0632, 0.0155],
        [0.0614, 0.0149],
        [0.0874, 0.0297],
        [0.0665, 0.0105],
        [0.0596, 0.0122],
        [0.0596, 0.0483],
        [0.0742, 0.0329],
        [0.1057, 0.0230],
        [0.0892, 0.0155],
        [0.0730, 0.0158],
        [0.0594, 0.0470],
        [0.0786, 0.0389],
        [0.0818, 0.0220],
        [0.1013, 0.0237],
        [0.0646, 0.0071]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1081],
        [0.0513],
        [0.0720],
        [0.1719],
        [0.0850],
        [0.1666],
        [0.0461],
        [0.0637],
        [0.0627],
        [0.0532],
        [0.0602],
        [0.0590],
        [0.0596],
        [0.0613],
        [0.0536],
        [0.0843]], device='cuda:0', dtype=torch.float16)/tensor([[0.1081, 0.0513, 0.0720, 0.1719, 0.0850, 0.1666, 0.0461, 0.0637, 0.0627,
         0.0532, 0.0602, 0.0590, 0.0596, 0.0613, 0.0536, 0.0843]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0437],
        [0.0435],
        [0.0324],
        [0.0328],
        [0.0434],
        [0.0793],
        [0.0327],
        [0.0204],
        [0.0381],
        [0.0045],
        [0.0225],
        [0.0120],
        [0.0089],
        [0.0341],
        [0.0386],
        [0.0343]], device='cuda:0', dtype=torch.float16)/tensor([[0.0437, 0.0435, 0.0324, 0.0328, 0.0434, 0.0793, 0.0327, 0.0204, 0.0381,
         0.0045, 0.0225, 0.0120, 0.0089, 0.0341, 0.0386, 0.0343]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1081, 0.0437],
        [0.0513, 0.0435],
        [0.0720, 0.0324],
        [0.1719, 0.0328],
        [0.0850, 0.0434],
        [0.1666, 0.0793],
        [0.0461, 0.0327],
        [0.0637, 0.0204],
        [0.0627, 0.0381],
        [0.0532, 0.0045],
        [0.0602, 0.0225],
        [0.0590, 0.0120],
        [0.0596, 0.0089],
        [0.0613, 0.0341],
        [0.0536, 0.0386],
        [0.0843, 0.0343]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0659],
        [0.0643],
        [0.0900],
        [0.0762],
        [0.0755],
        [0.0277],
        [0.0674],
        [0.1000],
        [0.1385],
        [0.0525],
        [0.0637],
        [0.0645],
        [0.0676],
        [0.0542],
        [0.0751],
        [0.0677]], device='cuda:0', dtype=torch.float16)/tensor([[0.0659, 0.0643, 0.0900, 0.0762, 0.0755, 0.0277, 0.0674, 0.1000, 0.1385,
         0.0525, 0.0637, 0.0645, 0.0676, 0.0542, 0.0751, 0.0677]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0157],
        [0.0220],
        [0.0403],
        [0.0402],
        [0.0392],
        [0.0074],
        [0.0181],
        [0.0185],
        [0.0765],
        [0.0119],
        [0.0281],
        [0.0256],
        [0.0298],
        [0.0342],
        [0.0344],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0220, 0.0403, 0.0402, 0.0392, 0.0074, 0.0181, 0.0185, 0.0765,
         0.0119, 0.0281, 0.0256, 0.0298, 0.0342, 0.0344, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0659, 0.0157],
        [0.0643, 0.0220],
        [0.0900, 0.0403],
        [0.0762, 0.0402],
        [0.0755, 0.0392],
        [0.0277, 0.0074],
        [0.0674, 0.0181],
        [0.1000, 0.0185],
        [0.1385, 0.0765],
        [0.0525, 0.0119],
        [0.0637, 0.0281],
        [0.0645, 0.0256],
        [0.0676, 0.0298],
        [0.0542, 0.0342],
        [0.0751, 0.0344],
        [0.0677, 0.0291]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0615],
        [0.0735],
        [0.0975],
        [0.0363],
        [0.0536],
        [0.0931],
        [0.0676],
        [0.0696],
        [0.0784],
        [0.1326],
        [0.0875],
        [0.0654],
        [0.0559],
        [0.0663],
        [0.1171],
        [0.0530]], device='cuda:0', dtype=torch.float16)/tensor([[0.0615, 0.0735, 0.0975, 0.0363, 0.0536, 0.0931, 0.0676, 0.0696, 0.0784,
         0.1326, 0.0875, 0.0654, 0.0559, 0.0663, 0.1171, 0.0530]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0348],
        [0.0262],
        [0.0195],
        [0.0111],
        [0.0154],
        [0.0291],
        [0.0345],
        [0.0171],
        [0.0483],
        [0.0218],
        [0.0479],
        [0.0068],
        [0.0250],
        [0.0041],
        [0.0344],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0348, 0.0262, 0.0195, 0.0111, 0.0154, 0.0291, 0.0345, 0.0171, 0.0483,
         0.0218, 0.0479, 0.0068, 0.0250, 0.0041, 0.0344, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0615, 0.0348],
        [0.0735, 0.0262],
        [0.0975, 0.0195],
        [0.0363, 0.0111],
        [0.0536, 0.0154],
        [0.0931, 0.0291],
        [0.0676, 0.0345],
        [0.0696, 0.0171],
        [0.0784, 0.0483],
        [0.1326, 0.0218],
        [0.0875, 0.0479],
        [0.0654, 0.0068],
        [0.0559, 0.0250],
        [0.0663, 0.0041],
        [0.1171, 0.0344],
        [0.0530, 0.0256]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0598],
        [0.0598],
        [0.0679],
        [0.1194],
        [0.3726],
        [0.0847],
        [0.1024],
        [0.0504],
        [0.0892],
        [0.0828],
        [0.0643],
        [0.0792],
        [0.0867],
        [0.0623],
        [0.0427],
        [0.0479]], device='cuda:0', dtype=torch.float16)/tensor([[0.0598, 0.0598, 0.0679, 0.1194, 0.3726, 0.0847, 0.1024, 0.0504, 0.0892,
         0.0828, 0.0643, 0.0792, 0.0867, 0.0623, 0.0427, 0.0479]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0325],
        [0.0462],
        [0.0331],
        [0.0213],
        [0.0466],
        [0.0256],
        [0.0317],
        [0.0174],
        [0.0272],
        [0.0119],
        [0.0229],
        [0.0395],
        [0.0189],
        [0.0428],
        [0.0126],
        [0.0055]], device='cuda:0', dtype=torch.float16)/tensor([[0.0325, 0.0462, 0.0331, 0.0213, 0.0466, 0.0256, 0.0317, 0.0174, 0.0272,
         0.0119, 0.0229, 0.0395, 0.0189, 0.0428, 0.0126, 0.0055]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0598, 0.0325],
        [0.0598, 0.0462],
        [0.0679, 0.0331],
        [0.1194, 0.0213],
        [0.3726, 0.0466],
        [0.0847, 0.0256],
        [0.1024, 0.0317],
        [0.0504, 0.0174],
        [0.0892, 0.0272],
        [0.0828, 0.0119],
        [0.0643, 0.0229],
        [0.0792, 0.0395],
        [0.0867, 0.0189],
        [0.0623, 0.0428],
        [0.0427, 0.0126],
        [0.0479, 0.0055]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0923],
        [0.1194],
        [0.0728],
        [0.0326],
        [0.0929],
        [0.0836],
        [0.0853],
        [0.0941]], device='cuda:0', dtype=torch.float16)/tensor([[0.0923, 0.1194, 0.0728, 0.0326, 0.0929, 0.0836, 0.0853, 0.0941]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0446],
        [0.0359],
        [0.0100],
        [0.0262],
        [0.0149],
        [0.0338],
        [0.0464],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0446, 0.0359, 0.0100, 0.0262, 0.0149, 0.0338, 0.0464, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0923, 0.0446],
        [0.1194, 0.0359],
        [0.0728, 0.0100],
        [0.0326, 0.0262],
        [0.0929, 0.0149],
        [0.0836, 0.0338],
        [0.0853, 0.0464],
        [0.0941, 0.0193]], device='cuda:0')
acc:  0.505
Time taken to execute the en SA task with prompt type rare_synonyms, variation 1 and batchsize 16: 0:03:25.824147
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_1']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA rare_synonyms 2 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 337.46it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0395],
        [0.0723],
        [0.0808],
        [0.0809],
        [0.0667],
        [0.0681],
        [0.0771],
        [0.0836],
        [0.0814],
        [0.0676],
        [0.1372],
        [0.1068],
        [0.0947],
        [0.0435],
        [0.0950],
        [0.0746]], device='cuda:0', dtype=torch.float16)/tensor([[0.0395, 0.0723, 0.0808, 0.0809, 0.0667, 0.0681, 0.0771, 0.0836, 0.0814,
         0.0676, 0.1372, 0.1068, 0.0947, 0.0435, 0.0950, 0.0746]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0566],
        [0.0422],
        [0.0195],
        [0.0251],
        [0.0480],
        [0.0426],
        [0.0193],
        [0.0259],
        [0.0614],
        [0.0487],
        [0.0207],
        [0.0425],
        [0.0343],
        [0.0459],
        [0.0206],
        [0.0196]], device='cuda:0', dtype=torch.float16)/tensor([[0.0566, 0.0422, 0.0195, 0.0251, 0.0480, 0.0426, 0.0193, 0.0259, 0.0614,
         0.0487, 0.0207, 0.0425, 0.0343, 0.0459, 0.0206, 0.0196]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0395, 0.0566],
        [0.0723, 0.0422],
        [0.0808, 0.0195],
        [0.0809, 0.0251],
        [0.0667, 0.0480],
        [0.0681, 0.0426],
        [0.0771, 0.0193],
        [0.0836, 0.0259],
        [0.0814, 0.0614],
        [0.0676, 0.0487],
        [0.1372, 0.0207],
        [0.1068, 0.0425],
        [0.0947, 0.0343],
        [0.0435, 0.0459],
        [0.0950, 0.0206],
        [0.0746, 0.0196]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0685],
        [0.0928],
        [0.0793],
        [0.0870],
        [0.0894],
        [0.0739],
        [0.0730],
        [0.0691],
        [0.0997],
        [0.0704],
        [0.0809],
        [0.0694],
        [0.0898],
        [0.0844],
        [0.1443],
        [0.0457]], device='cuda:0', dtype=torch.float16)/tensor([[0.0685, 0.0928, 0.0793, 0.0870, 0.0894, 0.0739, 0.0730, 0.0691, 0.0997,
         0.0704, 0.0809, 0.0694, 0.0898, 0.0844, 0.1443, 0.0457]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0497],
        [0.0226],
        [0.0299],
        [0.0448],
        [0.0591],
        [0.0504],
        [0.0361],
        [0.0311],
        [0.0144],
        [0.0155],
        [0.0259],
        [0.0485],
        [0.0459],
        [0.0381],
        [0.0889],
        [0.0097]], device='cuda:0', dtype=torch.float16)/tensor([[0.0497, 0.0226, 0.0299, 0.0448, 0.0591, 0.0504, 0.0361, 0.0311, 0.0144,
         0.0155, 0.0259, 0.0485, 0.0459, 0.0381, 0.0889, 0.0097]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0685, 0.0497],
        [0.0928, 0.0226],
        [0.0793, 0.0299],
        [0.0870, 0.0448],
        [0.0894, 0.0591],
        [0.0739, 0.0504],
        [0.0730, 0.0361],
        [0.0691, 0.0311],
        [0.0997, 0.0144],
        [0.0704, 0.0155],
        [0.0809, 0.0259],
        [0.0694, 0.0485],
        [0.0898, 0.0459],
        [0.0844, 0.0381],
        [0.1443, 0.0889],
        [0.0457, 0.0097]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1075],
        [0.1509],
        [0.0765],
        [0.0645],
        [0.0716],
        [0.0944],
        [0.0972],
        [0.0700],
        [0.0695],
        [0.0735],
        [0.0781],
        [0.0784],
        [0.1663],
        [0.0825],
        [0.0817],
        [0.0670]], device='cuda:0', dtype=torch.float16)/tensor([[0.1075, 0.1509, 0.0765, 0.0645, 0.0716, 0.0944, 0.0972, 0.0700, 0.0695,
         0.0735, 0.0781, 0.0784, 0.1663, 0.0825, 0.0817, 0.0670]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0244],
        [0.0295],
        [0.0241],
        [0.0625],
        [0.0458],
        [0.0241],
        [0.0262],
        [0.0381],
        [0.0366],
        [0.0123],
        [0.0540],
        [0.0070],
        [0.0667],
        [0.0449],
        [0.0352],
        [0.0316]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0295, 0.0241, 0.0625, 0.0458, 0.0241, 0.0262, 0.0381, 0.0366,
         0.0123, 0.0540, 0.0070, 0.0667, 0.0449, 0.0352, 0.0316]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1075, 0.0244],
        [0.1509, 0.0295],
        [0.0765, 0.0241],
        [0.0645, 0.0625],
        [0.0716, 0.0458],
        [0.0944, 0.0241],
        [0.0972, 0.0262],
        [0.0700, 0.0381],
        [0.0695, 0.0366],
        [0.0735, 0.0123],
        [0.0781, 0.0540],
        [0.0784, 0.0070],
        [0.1663, 0.0667],
        [0.0825, 0.0449],
        [0.0817, 0.0352],
        [0.0670, 0.0316]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0841],
        [0.0790],
        [0.1093],
        [0.0943],
        [0.1021],
        [0.0676],
        [0.0723],
        [0.1119],
        [0.0828],
        [0.0757],
        [0.0770],
        [0.0670],
        [0.1049],
        [0.0501],
        [0.0562],
        [0.0718]], device='cuda:0', dtype=torch.float16)/tensor([[0.0841, 0.0790, 0.1093, 0.0943, 0.1021, 0.0676, 0.0723, 0.1119, 0.0828,
         0.0757, 0.0770, 0.0670, 0.1049, 0.0501, 0.0562, 0.0718]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0211],
        [0.0616],
        [0.0393],
        [0.0497],
        [0.0217],
        [0.0518],
        [0.0375],
        [0.0252],
        [0.0248],
        [0.0448],
        [0.0224],
        [0.0521],
        [0.0305],
        [0.0160],
        [0.0532],
        [0.0239]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0616, 0.0393, 0.0497, 0.0217, 0.0518, 0.0375, 0.0252, 0.0248,
         0.0448, 0.0224, 0.0521, 0.0305, 0.0160, 0.0532, 0.0239]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0841, 0.0211],
        [0.0790, 0.0616],
        [0.1093, 0.0393],
        [0.0943, 0.0497],
        [0.1021, 0.0217],
        [0.0676, 0.0518],
        [0.0723, 0.0375],
        [0.1119, 0.0252],
        [0.0828, 0.0248],
        [0.0757, 0.0448],
        [0.0770, 0.0224],
        [0.0670, 0.0521],
        [0.1049, 0.0305],
        [0.0501, 0.0160],
        [0.0562, 0.0532],
        [0.0718, 0.0239]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0807],
        [0.0703],
        [0.0667],
        [0.0831],
        [0.0742],
        [0.1208],
        [0.0750],
        [0.0818],
        [0.0746],
        [0.1675],
        [0.0677],
        [0.0783],
        [0.0591],
        [0.1040],
        [0.0772],
        [0.0869]], device='cuda:0', dtype=torch.float16)/tensor([[0.0807, 0.0703, 0.0667, 0.0831, 0.0742, 0.1208, 0.0750, 0.0818, 0.0746,
         0.1675, 0.0677, 0.0783, 0.0591, 0.1040, 0.0772, 0.0869]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0397],
        [0.0216],
        [0.0270],
        [0.0306],
        [0.0510],
        [0.0444],
        [0.0588],
        [0.0372],
        [0.0275],
        [0.0962],
        [0.0377],
        [0.0324],
        [0.0397],
        [0.0737],
        [0.0166],
        [0.0511]], device='cuda:0', dtype=torch.float16)/tensor([[0.0397, 0.0216, 0.0270, 0.0306, 0.0510, 0.0444, 0.0588, 0.0372, 0.0275,
         0.0962, 0.0377, 0.0324, 0.0397, 0.0737, 0.0166, 0.0511]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0807, 0.0397],
        [0.0703, 0.0216],
        [0.0667, 0.0270],
        [0.0831, 0.0306],
        [0.0742, 0.0510],
        [0.1208, 0.0444],
        [0.0750, 0.0588],
        [0.0818, 0.0372],
        [0.0746, 0.0275],
        [0.1675, 0.0962],
        [0.0677, 0.0377],
        [0.0783, 0.0324],
        [0.0591, 0.0397],
        [0.1040, 0.0737],
        [0.0772, 0.0166],
        [0.0869, 0.0511]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0996],
        [0.0667],
        [0.0861],
        [0.0770],
        [0.0966],
        [0.0819],
        [0.0746],
        [0.0960],
        [0.0919],
        [0.1208],
        [0.1068],
        [0.1042],
        [0.0739],
        [0.0806],
        [0.1073],
        [0.0673]], device='cuda:0', dtype=torch.float16)/tensor([[0.0996, 0.0667, 0.0861, 0.0770, 0.0966, 0.0819, 0.0746, 0.0960, 0.0919,
         0.1208, 0.1068, 0.1042, 0.0739, 0.0806, 0.1073, 0.0673]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0303],
        [0.0468],
        [0.0460],
        [0.0638],
        [0.0152],
        [0.0576],
        [0.0262],
        [0.0508],
        [0.0323],
        [0.0224],
        [0.0229],
        [0.0405],
        [0.0287],
        [0.0351],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0303, 0.0468, 0.0460, 0.0638, 0.0152, 0.0576, 0.0262, 0.0508,
         0.0323, 0.0224, 0.0229, 0.0405, 0.0287, 0.0351, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0996, 0.0212],
        [0.0667, 0.0303],
        [0.0861, 0.0468],
        [0.0770, 0.0460],
        [0.0966, 0.0638],
        [0.0819, 0.0152],
        [0.0746, 0.0576],
        [0.0960, 0.0262],
        [0.0919, 0.0508],
        [0.1208, 0.0323],
        [0.1068, 0.0224],
        [0.1042, 0.0229],
        [0.0739, 0.0405],
        [0.0806, 0.0287],
        [0.1073, 0.0351],
        [0.0673, 0.0303]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1163],
        [0.1009],
        [0.0729],
        [0.0581],
        [0.0844],
        [0.0423],
        [0.0564],
        [0.0724],
        [0.1163],
        [0.0960],
        [0.1337],
        [0.0928],
        [0.0745],
        [0.0891],
        [0.0858],
        [0.0815]], device='cuda:0', dtype=torch.float16)/tensor([[0.1163, 0.1009, 0.0729, 0.0581, 0.0844, 0.0423, 0.0564, 0.0724, 0.1163,
         0.0960, 0.1337, 0.0928, 0.0745, 0.0891, 0.0858, 0.0815]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0369],
        [0.0327],
        [0.0449],
        [0.0381],
        [0.0090],
        [0.0230],
        [0.0464],
        [0.0190],
        [0.0326],
        [0.0143],
        [0.0626],
        [0.0207],
        [0.0418],
        [0.0296],
        [0.0204],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0369, 0.0327, 0.0449, 0.0381, 0.0090, 0.0230, 0.0464, 0.0190, 0.0326,
         0.0143, 0.0626, 0.0207, 0.0418, 0.0296, 0.0204, 0.0319]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1163, 0.0369],
        [0.1009, 0.0327],
        [0.0729, 0.0449],
        [0.0581, 0.0381],
        [0.0844, 0.0090],
        [0.0423, 0.0230],
        [0.0564, 0.0464],
        [0.0724, 0.0190],
        [0.1163, 0.0326],
        [0.0960, 0.0143],
        [0.1337, 0.0626],
        [0.0928, 0.0207],
        [0.0745, 0.0418],
        [0.0891, 0.0296],
        [0.0858, 0.0204],
        [0.0815, 0.0319]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0746],
        [0.0850],
        [0.0827],
        [0.0787],
        [0.0685],
        [0.0681],
        [0.1456],
        [0.0503],
        [0.0858],
        [0.0471],
        [0.1050],
        [0.0942],
        [0.0858],
        [0.0908],
        [0.0905],
        [0.0821]], device='cuda:0', dtype=torch.float16)/tensor([[0.0746, 0.0850, 0.0827, 0.0787, 0.0685, 0.0681, 0.1456, 0.0503, 0.0858,
         0.0471, 0.1050, 0.0942, 0.0858, 0.0908, 0.0905, 0.0821]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0266],
        [0.0213],
        [0.0217],
        [0.0500],
        [0.0110],
        [0.0538],
        [0.0829],
        [0.0480],
        [0.0088],
        [0.0439],
        [0.0289],
        [0.0264],
        [0.0149],
        [0.0279],
        [0.0338],
        [0.0486]], device='cuda:0', dtype=torch.float16)/tensor([[0.0266, 0.0213, 0.0217, 0.0500, 0.0110, 0.0538, 0.0829, 0.0480, 0.0088,
         0.0439, 0.0289, 0.0264, 0.0149, 0.0279, 0.0338, 0.0486]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0746, 0.0266],
        [0.0850, 0.0213],
        [0.0827, 0.0217],
        [0.0787, 0.0500],
        [0.0685, 0.0110],
        [0.0681, 0.0538],
        [0.1456, 0.0829],
        [0.0503, 0.0480],
        [0.0858, 0.0088],
        [0.0471, 0.0439],
        [0.1050, 0.0289],
        [0.0942, 0.0264],
        [0.0858, 0.0149],
        [0.0908, 0.0279],
        [0.0905, 0.0338],
        [0.0821, 0.0486]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.3318],
        [0.0813],
        [0.0722],
        [0.0689],
        [0.0839],
        [0.0650],
        [0.0712],
        [0.0753],
        [0.1229],
        [0.0696],
        [0.0762],
        [0.0925],
        [0.0856],
        [0.0668],
        [0.0716],
        [0.0997]], device='cuda:0', dtype=torch.float16)/tensor([[0.3318, 0.0813, 0.0722, 0.0689, 0.0839, 0.0650, 0.0712, 0.0753, 0.1229,
         0.0696, 0.0762, 0.0925, 0.0856, 0.0668, 0.0716, 0.0997]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0585],
        [0.0328],
        [0.0287],
        [0.0308],
        [0.0439],
        [0.0353],
        [0.0586],
        [0.0159],
        [0.0950],
        [0.0309],
        [0.0317],
        [0.0280],
        [0.0532],
        [0.0411],
        [0.0485],
        [0.0517]], device='cuda:0', dtype=torch.float16)/tensor([[0.0585, 0.0328, 0.0287, 0.0308, 0.0439, 0.0353, 0.0586, 0.0159, 0.0950,
         0.0309, 0.0317, 0.0280, 0.0532, 0.0411, 0.0485, 0.0517]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.3318, 0.0585],
        [0.0813, 0.0328],
        [0.0722, 0.0287],
        [0.0689, 0.0308],
        [0.0839, 0.0439],
        [0.0650, 0.0353],
        [0.0712, 0.0586],
        [0.0753, 0.0159],
        [0.1229, 0.0950],
        [0.0696, 0.0309],
        [0.0762, 0.0317],
        [0.0925, 0.0280],
        [0.0856, 0.0532],
        [0.0668, 0.0411],
        [0.0716, 0.0485],
        [0.0997, 0.0517]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0606],
        [0.1171],
        [0.0543],
        [0.0603],
        [0.0792],
        [0.0820],
        [0.0793],
        [0.1110],
        [0.0844],
        [0.0818],
        [0.1580],
        [0.0604],
        [0.0768],
        [0.0538],
        [0.0621],
        [0.0771]], device='cuda:0', dtype=torch.float16)/tensor([[0.0606, 0.1171, 0.0543, 0.0603, 0.0792, 0.0820, 0.0793, 0.1110, 0.0844,
         0.0818, 0.1580, 0.0604, 0.0768, 0.0538, 0.0621, 0.0771]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0218],
        [0.0289],
        [0.0457],
        [0.0414],
        [0.0269],
        [0.0339],
        [0.0470],
        [0.0432],
        [0.0402],
        [0.0405],
        [0.0973],
        [0.0384],
        [0.0227],
        [0.0443],
        [0.0407],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0218, 0.0289, 0.0457, 0.0414, 0.0269, 0.0339, 0.0470, 0.0432, 0.0402,
         0.0405, 0.0973, 0.0384, 0.0227, 0.0443, 0.0407, 0.0304]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0606, 0.0218],
        [0.1171, 0.0289],
        [0.0543, 0.0457],
        [0.0603, 0.0414],
        [0.0792, 0.0269],
        [0.0820, 0.0339],
        [0.0793, 0.0470],
        [0.1110, 0.0432],
        [0.0844, 0.0402],
        [0.0818, 0.0405],
        [0.1580, 0.0973],
        [0.0604, 0.0384],
        [0.0768, 0.0227],
        [0.0538, 0.0443],
        [0.0621, 0.0407],
        [0.0771, 0.0304]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0519],
        [0.0814],
        [0.1003],
        [0.0601],
        [0.0773],
        [0.0745],
        [0.1097],
        [0.0487],
        [0.0873],
        [0.0624],
        [0.0551],
        [0.0850],
        [0.0729],
        [0.0524],
        [0.0681],
        [0.0948]], device='cuda:0', dtype=torch.float16)/tensor([[0.0519, 0.0814, 0.1003, 0.0601, 0.0773, 0.0745, 0.1097, 0.0487, 0.0873,
         0.0624, 0.0551, 0.0850, 0.0729, 0.0524, 0.0681, 0.0948]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0577],
        [0.0195],
        [0.0241],
        [0.0363],
        [0.0318],
        [0.0324],
        [0.0213],
        [0.0446],
        [0.0216],
        [0.0423],
        [0.0330],
        [0.0449],
        [0.0424],
        [0.0157],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0577, 0.0195, 0.0241, 0.0363, 0.0318, 0.0324, 0.0213, 0.0446,
         0.0216, 0.0423, 0.0330, 0.0449, 0.0424, 0.0157, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0519, 0.0077],
        [0.0814, 0.0577],
        [0.1003, 0.0195],
        [0.0601, 0.0241],
        [0.0773, 0.0363],
        [0.0745, 0.0318],
        [0.1097, 0.0324],
        [0.0487, 0.0213],
        [0.0873, 0.0446],
        [0.0624, 0.0216],
        [0.0551, 0.0423],
        [0.0850, 0.0330],
        [0.0729, 0.0449],
        [0.0524, 0.0424],
        [0.0681, 0.0157],
        [0.0948, 0.0291]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0552],
        [0.0788],
        [0.0653],
        [0.0992],
        [0.0882],
        [0.0533],
        [0.0331],
        [0.1049],
        [0.1007],
        [0.0706],
        [0.1121],
        [0.0815],
        [0.0687],
        [0.1156],
        [0.1687],
        [0.0774]], device='cuda:0', dtype=torch.float16)/tensor([[0.0552, 0.0788, 0.0653, 0.0992, 0.0882, 0.0533, 0.0331, 0.1049, 0.1007,
         0.0706, 0.1121, 0.0815, 0.0687, 0.1156, 0.1687, 0.0774]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0284],
        [0.0432],
        [0.0240],
        [0.0315],
        [0.0410],
        [0.0060],
        [0.0161],
        [0.0253],
        [0.0401],
        [0.0674],
        [0.0292],
        [0.0502],
        [0.0181],
        [0.0352],
        [0.0472],
        [0.0242]], device='cuda:0', dtype=torch.float16)/tensor([[0.0284, 0.0432, 0.0240, 0.0315, 0.0410, 0.0060, 0.0161, 0.0253, 0.0401,
         0.0674, 0.0292, 0.0502, 0.0181, 0.0352, 0.0472, 0.0242]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0552, 0.0284],
        [0.0788, 0.0432],
        [0.0653, 0.0240],
        [0.0992, 0.0315],
        [0.0882, 0.0410],
        [0.0533, 0.0060],
        [0.0331, 0.0161],
        [0.1049, 0.0253],
        [0.1007, 0.0401],
        [0.0706, 0.0674],
        [0.1121, 0.0292],
        [0.0815, 0.0502],
        [0.0687, 0.0181],
        [0.1156, 0.0352],
        [0.1687, 0.0472],
        [0.0774, 0.0242]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0616],
        [0.0778],
        [0.1196],
        [0.0564],
        [0.0916],
        [0.0553],
        [0.1161],
        [0.0692]], device='cuda:0', dtype=torch.float16)/tensor([[0.0616, 0.0778, 0.1196, 0.0564, 0.0916, 0.0553, 0.1161, 0.0692]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0611],
        [0.0298],
        [0.0404],
        [0.0252],
        [0.0266],
        [0.0328],
        [0.0333],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0611, 0.0298, 0.0404, 0.0252, 0.0266, 0.0328, 0.0333, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0616, 0.0611],
        [0.0778, 0.0298],
        [0.1196, 0.0404],
        [0.0564, 0.0252],
        [0.0916, 0.0266],
        [0.0553, 0.0328],
        [0.1161, 0.0333],
        [0.0692, 0.0302]], device='cuda:0')
acc:  0.51
Time taken to execute the en SA task with prompt type rare_synonyms, variation 2 and batchsize 16: 0:03:26.277868
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_2']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA rare_synonyms 3 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 342.77it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0503],
        [0.0390],
        [0.0587],
        [0.0453],
        [0.0214],
        [0.0533],
        [0.0311],
        [0.0957],
        [0.0478],
        [0.0435],
        [0.0651],
        [0.0241],
        [0.0682],
        [0.0294],
        [0.0452],
        [0.0185]], device='cuda:0', dtype=torch.float16)/tensor([[0.0503, 0.0390, 0.0587, 0.0453, 0.0214, 0.0533, 0.0311, 0.0957, 0.0478,
         0.0435, 0.0651, 0.0241, 0.0682, 0.0294, 0.0452, 0.0185]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0125],
        [0.0154],
        [0.0136],
        [0.0127],
        [0.0089],
        [0.0161],
        [0.0143],
        [0.0308],
        [0.0157],
        [0.0168],
        [0.0161],
        [0.0087],
        [0.0202],
        [0.0166],
        [0.0179],
        [0.0086]], device='cuda:0', dtype=torch.float16)/tensor([[0.0125, 0.0154, 0.0136, 0.0127, 0.0089, 0.0161, 0.0143, 0.0308, 0.0157,
         0.0168, 0.0161, 0.0087, 0.0202, 0.0166, 0.0179, 0.0086]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0503, 0.0125],
        [0.0390, 0.0154],
        [0.0587, 0.0136],
        [0.0453, 0.0127],
        [0.0214, 0.0089],
        [0.0533, 0.0161],
        [0.0311, 0.0143],
        [0.0957, 0.0308],
        [0.0478, 0.0157],
        [0.0435, 0.0168],
        [0.0651, 0.0161],
        [0.0241, 0.0087],
        [0.0682, 0.0202],
        [0.0294, 0.0166],
        [0.0452, 0.0179],
        [0.0185, 0.0086]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0264],
        [0.0371],
        [0.0880],
        [0.0593],
        [0.0327],
        [0.0753],
        [0.0220],
        [0.0401],
        [0.1246],
        [0.0573],
        [0.1000],
        [0.0733],
        [0.0206],
        [0.0644],
        [0.0902],
        [0.0514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0264, 0.0371, 0.0880, 0.0593, 0.0327, 0.0753, 0.0220, 0.0401, 0.1246,
         0.0573, 0.1000, 0.0733, 0.0206, 0.0644, 0.0902, 0.0514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0137],
        [0.0131],
        [0.0247],
        [0.0236],
        [0.0116],
        [0.0396],
        [0.0110],
        [0.0111],
        [0.0444],
        [0.0128],
        [0.0474],
        [0.0167],
        [0.0084],
        [0.0164],
        [0.0573],
        [0.0276]], device='cuda:0', dtype=torch.float16)/tensor([[0.0137, 0.0131, 0.0247, 0.0236, 0.0116, 0.0396, 0.0110, 0.0111, 0.0444,
         0.0128, 0.0474, 0.0167, 0.0084, 0.0164, 0.0573, 0.0276]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0264, 0.0137],
        [0.0371, 0.0131],
        [0.0880, 0.0247],
        [0.0593, 0.0236],
        [0.0327, 0.0116],
        [0.0753, 0.0396],
        [0.0220, 0.0110],
        [0.0401, 0.0111],
        [0.1246, 0.0444],
        [0.0573, 0.0128],
        [0.1000, 0.0474],
        [0.0733, 0.0167],
        [0.0206, 0.0084],
        [0.0644, 0.0164],
        [0.0902, 0.0573],
        [0.0514, 0.0276]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0671],
        [0.0463],
        [0.0306],
        [0.0782],
        [0.0349],
        [0.0544],
        [0.1216],
        [0.0280],
        [0.0751],
        [0.0256],
        [0.0841],
        [0.0352],
        [0.0319],
        [0.0311],
        [0.0518],
        [0.0679]], device='cuda:0', dtype=torch.float16)/tensor([[0.0671, 0.0463, 0.0306, 0.0782, 0.0349, 0.0544, 0.1216, 0.0280, 0.0751,
         0.0256, 0.0841, 0.0352, 0.0319, 0.0311, 0.0518, 0.0679]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0162],
        [0.0159],
        [0.0237],
        [0.0260],
        [0.0120],
        [0.0195],
        [0.0283],
        [0.0129],
        [0.0171],
        [0.0128],
        [0.0208],
        [0.0234],
        [0.0159],
        [0.0142],
        [0.0164],
        [0.0214]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0159, 0.0237, 0.0260, 0.0120, 0.0195, 0.0283, 0.0129, 0.0171,
         0.0128, 0.0208, 0.0234, 0.0159, 0.0142, 0.0164, 0.0214]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0671, 0.0162],
        [0.0463, 0.0159],
        [0.0306, 0.0237],
        [0.0782, 0.0260],
        [0.0349, 0.0120],
        [0.0544, 0.0195],
        [0.1216, 0.0283],
        [0.0280, 0.0129],
        [0.0751, 0.0171],
        [0.0256, 0.0128],
        [0.0841, 0.0208],
        [0.0352, 0.0234],
        [0.0319, 0.0159],
        [0.0311, 0.0142],
        [0.0518, 0.0164],
        [0.0679, 0.0214]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0520],
        [0.0451],
        [0.0500],
        [0.0642],
        [0.0561],
        [0.0295],
        [0.0150],
        [0.0294],
        [0.0214],
        [0.0295],
        [0.0465],
        [0.0417],
        [0.0438],
        [0.0200],
        [0.0842],
        [0.0700]], device='cuda:0', dtype=torch.float16)/tensor([[0.0520, 0.0451, 0.0500, 0.0642, 0.0561, 0.0295, 0.0150, 0.0294, 0.0214,
         0.0295, 0.0465, 0.0417, 0.0438, 0.0200, 0.0842, 0.0700]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0254],
        [0.0114],
        [0.0179],
        [0.0246],
        [0.0164],
        [0.0133],
        [0.0069],
        [0.0113],
        [0.0071],
        [0.0121],
        [0.0162],
        [0.0213],
        [0.0294],
        [0.0080],
        [0.0387],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0254, 0.0114, 0.0179, 0.0246, 0.0164, 0.0133, 0.0069, 0.0113, 0.0071,
         0.0121, 0.0162, 0.0213, 0.0294, 0.0080, 0.0387, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0520, 0.0254],
        [0.0451, 0.0114],
        [0.0500, 0.0179],
        [0.0642, 0.0246],
        [0.0561, 0.0164],
        [0.0295, 0.0133],
        [0.0150, 0.0069],
        [0.0294, 0.0113],
        [0.0214, 0.0071],
        [0.0295, 0.0121],
        [0.0465, 0.0162],
        [0.0417, 0.0213],
        [0.0438, 0.0294],
        [0.0200, 0.0080],
        [0.0842, 0.0387],
        [0.0700, 0.0309]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0315],
        [0.0273],
        [0.0256],
        [0.0401],
        [0.0540],
        [0.0600],
        [0.0526],
        [0.0371],
        [0.0533],
        [0.1321],
        [0.0362],
        [0.0472],
        [0.0248],
        [0.0601],
        [0.0309],
        [0.1185]], device='cuda:0', dtype=torch.float16)/tensor([[0.0315, 0.0273, 0.0256, 0.0401, 0.0540, 0.0600, 0.0526, 0.0371, 0.0533,
         0.1321, 0.0362, 0.0472, 0.0248, 0.0601, 0.0309, 0.1185]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0186],
        [0.0085],
        [0.0093],
        [0.0124],
        [0.0151],
        [0.0186],
        [0.0183],
        [0.0140],
        [0.0183],
        [0.0559],
        [0.0168],
        [0.0227],
        [0.0090],
        [0.0135],
        [0.0110],
        [0.0242]], device='cuda:0', dtype=torch.float16)/tensor([[0.0186, 0.0085, 0.0093, 0.0124, 0.0151, 0.0186, 0.0183, 0.0140, 0.0183,
         0.0559, 0.0168, 0.0227, 0.0090, 0.0135, 0.0110, 0.0242]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0315, 0.0186],
        [0.0273, 0.0085],
        [0.0256, 0.0093],
        [0.0401, 0.0124],
        [0.0540, 0.0151],
        [0.0600, 0.0186],
        [0.0526, 0.0183],
        [0.0371, 0.0140],
        [0.0533, 0.0183],
        [0.1321, 0.0559],
        [0.0362, 0.0168],
        [0.0472, 0.0227],
        [0.0248, 0.0090],
        [0.0601, 0.0135],
        [0.0309, 0.0110],
        [0.1185, 0.0242]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0541],
        [0.0681],
        [0.0636],
        [0.0547],
        [0.0325],
        [0.0224],
        [0.0574],
        [0.0395],
        [0.0720],
        [0.0426],
        [0.0391],
        [0.0367],
        [0.0525],
        [0.0428],
        [0.0512],
        [0.0292]], device='cuda:0', dtype=torch.float16)/tensor([[0.0541, 0.0681, 0.0636, 0.0547, 0.0325, 0.0224, 0.0574, 0.0395, 0.0720,
         0.0426, 0.0391, 0.0367, 0.0525, 0.0428, 0.0512, 0.0292]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0130],
        [0.0356],
        [0.0184],
        [0.0220],
        [0.0110],
        [0.0122],
        [0.0266],
        [0.0139],
        [0.0220],
        [0.0194],
        [0.0219],
        [0.0231],
        [0.0157],
        [0.0244],
        [0.0187],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0356, 0.0184, 0.0220, 0.0110, 0.0122, 0.0266, 0.0139, 0.0220,
         0.0194, 0.0219, 0.0231, 0.0157, 0.0244, 0.0187, 0.0153]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0541, 0.0130],
        [0.0681, 0.0356],
        [0.0636, 0.0184],
        [0.0547, 0.0220],
        [0.0325, 0.0110],
        [0.0224, 0.0122],
        [0.0574, 0.0266],
        [0.0395, 0.0139],
        [0.0720, 0.0220],
        [0.0426, 0.0194],
        [0.0391, 0.0219],
        [0.0367, 0.0231],
        [0.0525, 0.0157],
        [0.0428, 0.0244],
        [0.0512, 0.0187],
        [0.0292, 0.0153]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0767],
        [0.0839],
        [0.0614],
        [0.0456],
        [0.0283],
        [0.0230],
        [0.0177],
        [0.0378],
        [0.0175],
        [0.0919],
        [0.0353],
        [0.0535],
        [0.0587],
        [0.0895],
        [0.0453],
        [0.0453]], device='cuda:0', dtype=torch.float16)/tensor([[0.0767, 0.0839, 0.0614, 0.0456, 0.0283, 0.0230, 0.0177, 0.0378, 0.0175,
         0.0919, 0.0353, 0.0535, 0.0587, 0.0895, 0.0453, 0.0453]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0253],
        [0.0164],
        [0.0331],
        [0.0155],
        [0.0099],
        [0.0080],
        [0.0064],
        [0.0121],
        [0.0110],
        [0.0380],
        [0.0113],
        [0.0213],
        [0.0142],
        [0.0215],
        [0.0173],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0164, 0.0331, 0.0155, 0.0099, 0.0080, 0.0064, 0.0121, 0.0110,
         0.0380, 0.0113, 0.0213, 0.0142, 0.0215, 0.0173, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0767, 0.0253],
        [0.0839, 0.0164],
        [0.0614, 0.0331],
        [0.0456, 0.0155],
        [0.0283, 0.0099],
        [0.0230, 0.0080],
        [0.0177, 0.0064],
        [0.0378, 0.0121],
        [0.0175, 0.0110],
        [0.0919, 0.0380],
        [0.0353, 0.0113],
        [0.0535, 0.0213],
        [0.0587, 0.0142],
        [0.0895, 0.0215],
        [0.0453, 0.0173],
        [0.0453, 0.0168]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0438],
        [0.0723],
        [0.0630],
        [0.0459],
        [0.0312],
        [0.0369],
        [0.0140],
        [0.0359],
        [0.0352],
        [0.0496],
        [0.0701],
        [0.0412],
        [0.0503],
        [0.0751],
        [0.0654],
        [0.0557]], device='cuda:0', dtype=torch.float16)/tensor([[0.0438, 0.0723, 0.0630, 0.0459, 0.0312, 0.0369, 0.0140, 0.0359, 0.0352,
         0.0496, 0.0701, 0.0412, 0.0503, 0.0751, 0.0654, 0.0557]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0218],
        [0.0165],
        [0.0265],
        [0.0184],
        [0.0102],
        [0.0197],
        [0.0068],
        [0.0109],
        [0.0135],
        [0.0117],
        [0.0199],
        [0.0282],
        [0.0259],
        [0.0181],
        [0.0164],
        [0.0125]], device='cuda:0', dtype=torch.float16)/tensor([[0.0218, 0.0165, 0.0265, 0.0184, 0.0102, 0.0197, 0.0068, 0.0109, 0.0135,
         0.0117, 0.0199, 0.0282, 0.0259, 0.0181, 0.0164, 0.0125]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0438, 0.0218],
        [0.0723, 0.0165],
        [0.0630, 0.0265],
        [0.0459, 0.0184],
        [0.0312, 0.0102],
        [0.0369, 0.0197],
        [0.0140, 0.0068],
        [0.0359, 0.0109],
        [0.0352, 0.0135],
        [0.0496, 0.0117],
        [0.0701, 0.0199],
        [0.0412, 0.0282],
        [0.0503, 0.0259],
        [0.0751, 0.0181],
        [0.0654, 0.0164],
        [0.0557, 0.0125]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0378],
        [0.0751],
        [0.0192],
        [0.0378],
        [0.0297],
        [0.0116],
        [0.0785],
        [0.0472],
        [0.0201],
        [0.0038],
        [0.0492],
        [0.0652],
        [0.0325],
        [0.0523],
        [0.0244],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.0378, 0.0751, 0.0192, 0.0378, 0.0297, 0.0116, 0.0785, 0.0472, 0.0201,
         0.0038, 0.0492, 0.0652, 0.0325, 0.0523, 0.0244, 0.0349]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0066],
        [0.0220],
        [0.0092],
        [0.0172],
        [0.0151],
        [0.0048],
        [0.0203],
        [0.0202],
        [0.0082],
        [0.0021],
        [0.0114],
        [0.0342],
        [0.0190],
        [0.0229],
        [0.0093],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0220, 0.0092, 0.0172, 0.0151, 0.0048, 0.0203, 0.0202, 0.0082,
         0.0021, 0.0114, 0.0342, 0.0190, 0.0229, 0.0093, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0378, 0.0066],
        [0.0751, 0.0220],
        [0.0192, 0.0092],
        [0.0378, 0.0172],
        [0.0297, 0.0151],
        [0.0116, 0.0048],
        [0.0785, 0.0203],
        [0.0472, 0.0202],
        [0.0201, 0.0082],
        [0.0038, 0.0021],
        [0.0492, 0.0114],
        [0.0652, 0.0342],
        [0.0325, 0.0190],
        [0.0523, 0.0229],
        [0.0244, 0.0093],
        [0.0349, 0.0121]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0764],
        [0.0275],
        [0.0887],
        [0.0285],
        [0.0552],
        [0.0284],
        [0.0276],
        [0.0398],
        [0.0323],
        [0.0765],
        [0.0331],
        [0.0357],
        [0.0602],
        [0.0387],
        [0.0773],
        [0.0622]], device='cuda:0', dtype=torch.float16)/tensor([[0.0764, 0.0275, 0.0887, 0.0285, 0.0552, 0.0284, 0.0276, 0.0398, 0.0323,
         0.0765, 0.0331, 0.0357, 0.0602, 0.0387, 0.0773, 0.0622]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0255],
        [0.0152],
        [0.0193],
        [0.0180],
        [0.0150],
        [0.0114],
        [0.0122],
        [0.0228],
        [0.0175],
        [0.0237],
        [0.0138],
        [0.0082],
        [0.0161],
        [0.0154],
        [0.0186],
        [0.0216]], device='cuda:0', dtype=torch.float16)/tensor([[0.0255, 0.0152, 0.0193, 0.0180, 0.0150, 0.0114, 0.0122, 0.0228, 0.0175,
         0.0237, 0.0138, 0.0082, 0.0161, 0.0154, 0.0186, 0.0216]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0764, 0.0255],
        [0.0275, 0.0152],
        [0.0887, 0.0193],
        [0.0285, 0.0180],
        [0.0552, 0.0150],
        [0.0284, 0.0114],
        [0.0276, 0.0122],
        [0.0398, 0.0228],
        [0.0323, 0.0175],
        [0.0765, 0.0237],
        [0.0331, 0.0138],
        [0.0357, 0.0082],
        [0.0602, 0.0161],
        [0.0387, 0.0154],
        [0.0773, 0.0186],
        [0.0622, 0.0216]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0464],
        [0.0555],
        [0.0680],
        [0.0224],
        [0.0546],
        [0.0451],
        [0.0459],
        [0.0338],
        [0.0488],
        [0.0756],
        [0.0420],
        [0.1125],
        [0.0097],
        [0.0345],
        [0.0603],
        [0.0501]], device='cuda:0', dtype=torch.float16)/tensor([[0.0464, 0.0555, 0.0680, 0.0224, 0.0546, 0.0451, 0.0459, 0.0338, 0.0488,
         0.0756, 0.0420, 0.1125, 0.0097, 0.0345, 0.0603, 0.0501]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0116],
        [0.0181],
        [0.0161],
        [0.0096],
        [0.0266],
        [0.0125],
        [0.0121],
        [0.0150],
        [0.0136],
        [0.0158],
        [0.0095],
        [0.0219],
        [0.0037],
        [0.0177],
        [0.0151],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0181, 0.0161, 0.0096, 0.0266, 0.0125, 0.0121, 0.0150, 0.0136,
         0.0158, 0.0095, 0.0219, 0.0037, 0.0177, 0.0151, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0464, 0.0116],
        [0.0555, 0.0181],
        [0.0680, 0.0161],
        [0.0224, 0.0096],
        [0.0546, 0.0266],
        [0.0451, 0.0125],
        [0.0459, 0.0121],
        [0.0338, 0.0150],
        [0.0488, 0.0136],
        [0.0756, 0.0158],
        [0.0420, 0.0095],
        [0.1125, 0.0219],
        [0.0097, 0.0037],
        [0.0345, 0.0177],
        [0.0603, 0.0151],
        [0.0501, 0.0128]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1232],
        [0.0451],
        [0.0499],
        [0.0115],
        [0.0362],
        [0.0548],
        [0.0598],
        [0.0745],
        [0.0386],
        [0.0765],
        [0.0497],
        [0.0476],
        [0.0407],
        [0.0750],
        [0.0144],
        [0.0338]], device='cuda:0', dtype=torch.float16)/tensor([[0.1232, 0.0451, 0.0499, 0.0115, 0.0362, 0.0548, 0.0598, 0.0745, 0.0386,
         0.0765, 0.0497, 0.0476, 0.0407, 0.0750, 0.0144, 0.0338]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0534],
        [0.0169],
        [0.0140],
        [0.0060],
        [0.0175],
        [0.0164],
        [0.0194],
        [0.0235],
        [0.0115],
        [0.0187],
        [0.0119],
        [0.0107],
        [0.0164],
        [0.0265],
        [0.0056],
        [0.0233]], device='cuda:0', dtype=torch.float16)/tensor([[0.0534, 0.0169, 0.0140, 0.0060, 0.0175, 0.0164, 0.0194, 0.0235, 0.0115,
         0.0187, 0.0119, 0.0107, 0.0164, 0.0265, 0.0056, 0.0233]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1232, 0.0534],
        [0.0451, 0.0169],
        [0.0499, 0.0140],
        [0.0115, 0.0060],
        [0.0362, 0.0175],
        [0.0548, 0.0164],
        [0.0598, 0.0194],
        [0.0745, 0.0235],
        [0.0386, 0.0115],
        [0.0765, 0.0187],
        [0.0497, 0.0119],
        [0.0476, 0.0107],
        [0.0407, 0.0164],
        [0.0750, 0.0265],
        [0.0144, 0.0056],
        [0.0338, 0.0233]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0392],
        [0.0517],
        [0.0320],
        [0.0323],
        [0.0344],
        [0.0218],
        [0.0171],
        [0.0731]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.0517, 0.0320, 0.0323, 0.0344, 0.0218, 0.0171, 0.0731]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0211],
        [0.0156],
        [0.0162],
        [0.0149],
        [0.0110],
        [0.0088],
        [0.0040],
        [0.0355]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0156, 0.0162, 0.0149, 0.0110, 0.0088, 0.0040, 0.0355]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0392, 0.0211],
        [0.0517, 0.0156],
        [0.0320, 0.0162],
        [0.0323, 0.0149],
        [0.0344, 0.0110],
        [0.0218, 0.0088],
        [0.0171, 0.0040],
        [0.0731, 0.0355]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type rare_synonyms, variation 3 and batchsize 16: 0:03:25.453090
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_3']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA rare_synonyms 4 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 334.33it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0601],
        [0.0279],
        [0.0504],
        [0.0470],
        [0.0657],
        [0.0677],
        [0.0519],
        [0.0464],
        [0.0596],
        [0.0474],
        [0.0283],
        [0.0895],
        [0.0538],
        [0.0365],
        [0.0608],
        [0.0408]], device='cuda:0', dtype=torch.float16)/tensor([[0.0601, 0.0279, 0.0504, 0.0470, 0.0657, 0.0677, 0.0519, 0.0464, 0.0596,
         0.0474, 0.0283, 0.0895, 0.0538, 0.0365, 0.0608, 0.0408]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0253],
        [0.0155],
        [0.0174],
        [0.0289],
        [0.0289],
        [0.0325],
        [0.0349],
        [0.0235],
        [0.0337],
        [0.0234],
        [0.0224],
        [0.0754],
        [0.0302],
        [0.0197],
        [0.0292],
        [0.0308]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0155, 0.0174, 0.0289, 0.0289, 0.0325, 0.0349, 0.0235, 0.0337,
         0.0234, 0.0224, 0.0754, 0.0302, 0.0197, 0.0292, 0.0308]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0601, 0.0253],
        [0.0279, 0.0155],
        [0.0504, 0.0174],
        [0.0470, 0.0289],
        [0.0657, 0.0289],
        [0.0677, 0.0325],
        [0.0519, 0.0349],
        [0.0464, 0.0235],
        [0.0596, 0.0337],
        [0.0474, 0.0234],
        [0.0283, 0.0224],
        [0.0895, 0.0754],
        [0.0538, 0.0302],
        [0.0365, 0.0197],
        [0.0608, 0.0292],
        [0.0408, 0.0308]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0374],
        [0.0302],
        [0.0512],
        [0.0453],
        [0.0304],
        [0.0710],
        [0.0500],
        [0.0341],
        [0.0446],
        [0.0540],
        [0.0321],
        [0.0478],
        [0.0480],
        [0.0381],
        [0.0541],
        [0.0311]], device='cuda:0', dtype=torch.float16)/tensor([[0.0374, 0.0302, 0.0512, 0.0453, 0.0304, 0.0710, 0.0500, 0.0341, 0.0446,
         0.0540, 0.0321, 0.0478, 0.0480, 0.0381, 0.0541, 0.0311]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0408],
        [0.0226],
        [0.0266],
        [0.0314],
        [0.0323],
        [0.0919],
        [0.0411],
        [0.0268],
        [0.0152],
        [0.0346],
        [0.0246],
        [0.0370],
        [0.0188],
        [0.0118],
        [0.0462],
        [0.0104]], device='cuda:0', dtype=torch.float16)/tensor([[0.0408, 0.0226, 0.0266, 0.0314, 0.0323, 0.0919, 0.0411, 0.0268, 0.0152,
         0.0346, 0.0246, 0.0370, 0.0188, 0.0118, 0.0462, 0.0104]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0374, 0.0408],
        [0.0302, 0.0226],
        [0.0512, 0.0266],
        [0.0453, 0.0314],
        [0.0304, 0.0323],
        [0.0710, 0.0919],
        [0.0500, 0.0411],
        [0.0341, 0.0268],
        [0.0446, 0.0152],
        [0.0540, 0.0346],
        [0.0321, 0.0246],
        [0.0478, 0.0370],
        [0.0480, 0.0188],
        [0.0381, 0.0118],
        [0.0541, 0.0462],
        [0.0311, 0.0104]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0743],
        [0.0393],
        [0.0475],
        [0.0539],
        [0.0367],
        [0.0379],
        [0.0314],
        [0.0381],
        [0.0408],
        [0.0420],
        [0.0404],
        [0.0359],
        [0.0389],
        [0.0278],
        [0.0552],
        [0.0332]], device='cuda:0', dtype=torch.float16)/tensor([[0.0743, 0.0393, 0.0475, 0.0539, 0.0367, 0.0379, 0.0314, 0.0381, 0.0408,
         0.0420, 0.0404, 0.0359, 0.0389, 0.0278, 0.0552, 0.0332]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0247],
        [0.0172],
        [0.0257],
        [0.0267],
        [0.0273],
        [0.0262],
        [0.0353],
        [0.0238],
        [0.0234],
        [0.0274],
        [0.0287],
        [0.0324],
        [0.0274],
        [0.0201],
        [0.0351],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0247, 0.0172, 0.0257, 0.0267, 0.0273, 0.0262, 0.0353, 0.0238, 0.0234,
         0.0274, 0.0287, 0.0324, 0.0274, 0.0201, 0.0351, 0.0153]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0743, 0.0247],
        [0.0393, 0.0172],
        [0.0475, 0.0257],
        [0.0539, 0.0267],
        [0.0367, 0.0273],
        [0.0379, 0.0262],
        [0.0314, 0.0353],
        [0.0381, 0.0238],
        [0.0408, 0.0234],
        [0.0420, 0.0274],
        [0.0404, 0.0287],
        [0.0359, 0.0324],
        [0.0389, 0.0274],
        [0.0278, 0.0201],
        [0.0552, 0.0351],
        [0.0332, 0.0153]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0522],
        [0.0665],
        [0.0271],
        [0.0409],
        [0.0399],
        [0.0366],
        [0.0474],
        [0.0432],
        [0.0516],
        [0.0552],
        [0.0574],
        [0.0515],
        [0.0467],
        [0.0508],
        [0.0330],
        [0.0491]], device='cuda:0', dtype=torch.float16)/tensor([[0.0522, 0.0665, 0.0271, 0.0409, 0.0399, 0.0366, 0.0474, 0.0432, 0.0516,
         0.0552, 0.0574, 0.0515, 0.0467, 0.0508, 0.0330, 0.0491]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0284],
        [0.0479],
        [0.0232],
        [0.0136],
        [0.0172],
        [0.0290],
        [0.0328],
        [0.0279],
        [0.0166],
        [0.0236],
        [0.0293],
        [0.0289],
        [0.0245],
        [0.0249],
        [0.0175],
        [0.0385]], device='cuda:0', dtype=torch.float16)/tensor([[0.0284, 0.0479, 0.0232, 0.0136, 0.0172, 0.0290, 0.0328, 0.0279, 0.0166,
         0.0236, 0.0293, 0.0289, 0.0245, 0.0249, 0.0175, 0.0385]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0522, 0.0284],
        [0.0665, 0.0479],
        [0.0271, 0.0232],
        [0.0409, 0.0136],
        [0.0399, 0.0172],
        [0.0366, 0.0290],
        [0.0474, 0.0328],
        [0.0432, 0.0279],
        [0.0516, 0.0166],
        [0.0552, 0.0236],
        [0.0574, 0.0293],
        [0.0515, 0.0289],
        [0.0467, 0.0245],
        [0.0508, 0.0249],
        [0.0330, 0.0175],
        [0.0491, 0.0385]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0461],
        [0.0350],
        [0.0419],
        [0.0550],
        [0.0522],
        [0.0515],
        [0.0784],
        [0.0505],
        [0.0485],
        [0.0426],
        [0.0551],
        [0.0468],
        [0.0523],
        [0.0464],
        [0.0463],
        [0.0592]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0350, 0.0419, 0.0550, 0.0522, 0.0515, 0.0784, 0.0505, 0.0485,
         0.0426, 0.0551, 0.0468, 0.0523, 0.0464, 0.0463, 0.0592]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0302],
        [0.0293],
        [0.0251],
        [0.0276],
        [0.0373],
        [0.0300],
        [0.0342],
        [0.0192],
        [0.0226],
        [0.0348],
        [0.0286],
        [0.0243],
        [0.0320],
        [0.0300],
        [0.0232],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0302, 0.0293, 0.0251, 0.0276, 0.0373, 0.0300, 0.0342, 0.0192, 0.0226,
         0.0348, 0.0286, 0.0243, 0.0320, 0.0300, 0.0232, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0461, 0.0302],
        [0.0350, 0.0293],
        [0.0419, 0.0251],
        [0.0550, 0.0276],
        [0.0522, 0.0373],
        [0.0515, 0.0300],
        [0.0784, 0.0342],
        [0.0505, 0.0192],
        [0.0485, 0.0226],
        [0.0426, 0.0348],
        [0.0551, 0.0286],
        [0.0468, 0.0243],
        [0.0523, 0.0320],
        [0.0464, 0.0300],
        [0.0463, 0.0232],
        [0.0592, 0.0275]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0373],
        [0.0556],
        [0.0381],
        [0.0445],
        [0.0464],
        [0.0509],
        [0.0487],
        [0.0416],
        [0.0324],
        [0.0292],
        [0.0818],
        [0.0718],
        [0.0443],
        [0.0887],
        [0.0442]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0373, 0.0556, 0.0381, 0.0445, 0.0464, 0.0509, 0.0487, 0.0416,
         0.0324, 0.0292, 0.0818, 0.0718, 0.0443, 0.0887, 0.0442]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0222],
        [0.0171],
        [0.0286],
        [0.0220],
        [0.0262],
        [0.0206],
        [0.0276],
        [0.0326],
        [0.0273],
        [0.0237],
        [0.0285],
        [0.0285],
        [0.0446],
        [0.0479],
        [0.0464],
        [0.0240]], device='cuda:0', dtype=torch.float16)/tensor([[0.0222, 0.0171, 0.0286, 0.0220, 0.0262, 0.0206, 0.0276, 0.0326, 0.0273,
         0.0237, 0.0285, 0.0285, 0.0446, 0.0479, 0.0464, 0.0240]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0575, 0.0222],
        [0.0373, 0.0171],
        [0.0556, 0.0286],
        [0.0381, 0.0220],
        [0.0445, 0.0262],
        [0.0464, 0.0206],
        [0.0509, 0.0276],
        [0.0487, 0.0326],
        [0.0416, 0.0273],
        [0.0324, 0.0237],
        [0.0292, 0.0285],
        [0.0818, 0.0285],
        [0.0718, 0.0446],
        [0.0443, 0.0479],
        [0.0887, 0.0464],
        [0.0442, 0.0240]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0380],
        [0.0568],
        [0.0506],
        [0.0425],
        [0.0410],
        [0.0402],
        [0.0453],
        [0.0440],
        [0.0328],
        [0.0498],
        [0.0412],
        [0.0263],
        [0.0437],
        [0.0581],
        [0.0533],
        [0.1267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0568, 0.0506, 0.0425, 0.0410, 0.0402, 0.0453, 0.0440, 0.0328,
         0.0498, 0.0412, 0.0263, 0.0437, 0.0581, 0.0533, 0.1267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0332],
        [0.0326],
        [0.0319],
        [0.0248],
        [0.0243],
        [0.0262],
        [0.0243],
        [0.0388],
        [0.0131],
        [0.0186],
        [0.0220],
        [0.0289],
        [0.0320],
        [0.0313],
        [0.0366],
        [0.0722]], device='cuda:0', dtype=torch.float16)/tensor([[0.0332, 0.0326, 0.0319, 0.0248, 0.0243, 0.0262, 0.0243, 0.0388, 0.0131,
         0.0186, 0.0220, 0.0289, 0.0320, 0.0313, 0.0366, 0.0722]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0380, 0.0332],
        [0.0568, 0.0326],
        [0.0506, 0.0319],
        [0.0425, 0.0248],
        [0.0410, 0.0243],
        [0.0402, 0.0262],
        [0.0453, 0.0243],
        [0.0440, 0.0388],
        [0.0328, 0.0131],
        [0.0498, 0.0186],
        [0.0412, 0.0220],
        [0.0263, 0.0289],
        [0.0437, 0.0320],
        [0.0581, 0.0313],
        [0.0533, 0.0366],
        [0.1267, 0.0722]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0527],
        [0.0695],
        [0.0260],
        [0.0518],
        [0.0638],
        [0.0384],
        [0.0386],
        [0.0473],
        [0.0502],
        [0.0485],
        [0.0665],
        [0.0240],
        [0.0401],
        [0.1937],
        [0.0516],
        [0.0563]], device='cuda:0', dtype=torch.float16)/tensor([[0.0527, 0.0695, 0.0260, 0.0518, 0.0638, 0.0384, 0.0386, 0.0473, 0.0502,
         0.0485, 0.0665, 0.0240, 0.0401, 0.1937, 0.0516, 0.0563]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0215],
        [0.0313],
        [0.0197],
        [0.0286],
        [0.0363],
        [0.0201],
        [0.0291],
        [0.0159],
        [0.0269],
        [0.0240],
        [0.0241],
        [0.0173],
        [0.0137],
        [0.0814],
        [0.0224],
        [0.0326]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0313, 0.0197, 0.0286, 0.0363, 0.0201, 0.0291, 0.0159, 0.0269,
         0.0240, 0.0241, 0.0173, 0.0137, 0.0814, 0.0224, 0.0326]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0527, 0.0215],
        [0.0695, 0.0313],
        [0.0260, 0.0197],
        [0.0518, 0.0286],
        [0.0638, 0.0363],
        [0.0384, 0.0201],
        [0.0386, 0.0291],
        [0.0473, 0.0159],
        [0.0502, 0.0269],
        [0.0485, 0.0240],
        [0.0665, 0.0241],
        [0.0240, 0.0173],
        [0.0401, 0.0137],
        [0.1937, 0.0814],
        [0.0516, 0.0224],
        [0.0563, 0.0326]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0334],
        [0.0344],
        [0.0524],
        [0.0504],
        [0.0380],
        [0.0325],
        [0.0479],
        [0.0504],
        [0.0522],
        [0.0439],
        [0.1081],
        [0.0430],
        [0.0649],
        [0.0353],
        [0.0657],
        [0.1203]], device='cuda:0', dtype=torch.float16)/tensor([[0.0334, 0.0344, 0.0524, 0.0504, 0.0380, 0.0325, 0.0479, 0.0504, 0.0522,
         0.0439, 0.1081, 0.0430, 0.0649, 0.0353, 0.0657, 0.1203]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0350],
        [0.0183],
        [0.0313],
        [0.0308],
        [0.0279],
        [0.0257],
        [0.0189],
        [0.0384],
        [0.0329],
        [0.0159],
        [0.0597],
        [0.0179],
        [0.0295],
        [0.0406],
        [0.0201],
        [0.0654]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.0183, 0.0313, 0.0308, 0.0279, 0.0257, 0.0189, 0.0384, 0.0329,
         0.0159, 0.0597, 0.0179, 0.0295, 0.0406, 0.0201, 0.0654]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0334, 0.0350],
        [0.0344, 0.0183],
        [0.0524, 0.0313],
        [0.0504, 0.0308],
        [0.0380, 0.0279],
        [0.0325, 0.0257],
        [0.0479, 0.0189],
        [0.0504, 0.0384],
        [0.0522, 0.0329],
        [0.0439, 0.0159],
        [0.1081, 0.0597],
        [0.0430, 0.0179],
        [0.0649, 0.0295],
        [0.0353, 0.0406],
        [0.0657, 0.0201],
        [0.1203, 0.0654]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0376],
        [0.0419],
        [0.0453],
        [0.0321],
        [0.0423],
        [0.0605],
        [0.0214],
        [0.0388],
        [0.0667],
        [0.0584],
        [0.0380],
        [0.0529],
        [0.0172],
        [0.0654],
        [0.0439],
        [0.0536]], device='cuda:0', dtype=torch.float16)/tensor([[0.0376, 0.0419, 0.0453, 0.0321, 0.0423, 0.0605, 0.0214, 0.0388, 0.0667,
         0.0584, 0.0380, 0.0529, 0.0172, 0.0654, 0.0439, 0.0536]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0249],
        [0.0336],
        [0.0301],
        [0.0241],
        [0.0230],
        [0.0194],
        [0.0274],
        [0.0275],
        [0.0374],
        [0.0315],
        [0.0192],
        [0.0268],
        [0.0134],
        [0.0302],
        [0.0196],
        [0.0294]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0336, 0.0301, 0.0241, 0.0230, 0.0194, 0.0274, 0.0275, 0.0374,
         0.0315, 0.0192, 0.0268, 0.0134, 0.0302, 0.0196, 0.0294]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0376, 0.0249],
        [0.0419, 0.0336],
        [0.0453, 0.0301],
        [0.0321, 0.0241],
        [0.0423, 0.0230],
        [0.0605, 0.0194],
        [0.0214, 0.0274],
        [0.0388, 0.0275],
        [0.0667, 0.0374],
        [0.0584, 0.0315],
        [0.0380, 0.0192],
        [0.0529, 0.0268],
        [0.0172, 0.0134],
        [0.0654, 0.0302],
        [0.0439, 0.0196],
        [0.0536, 0.0294]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0539],
        [0.0378],
        [0.0407],
        [0.0458],
        [0.0656],
        [0.0349],
        [0.0306],
        [0.0577],
        [0.0378],
        [0.0350],
        [0.0534],
        [0.0472],
        [0.0362],
        [0.0380],
        [0.0365],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0539, 0.0378, 0.0407, 0.0458, 0.0656, 0.0349, 0.0306, 0.0577, 0.0378,
         0.0350, 0.0534, 0.0472, 0.0362, 0.0380, 0.0365, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0200],
        [0.0260],
        [0.0404],
        [0.0175],
        [0.0385],
        [0.0287],
        [0.0316],
        [0.0372],
        [0.0333],
        [0.0339],
        [0.0273],
        [0.0203],
        [0.0371],
        [0.0383],
        [0.0251],
        [0.0292]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0260, 0.0404, 0.0175, 0.0385, 0.0287, 0.0316, 0.0372, 0.0333,
         0.0339, 0.0273, 0.0203, 0.0371, 0.0383, 0.0251, 0.0292]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0539, 0.0200],
        [0.0378, 0.0260],
        [0.0407, 0.0404],
        [0.0458, 0.0175],
        [0.0656, 0.0385],
        [0.0349, 0.0287],
        [0.0306, 0.0316],
        [0.0577, 0.0372],
        [0.0378, 0.0333],
        [0.0350, 0.0339],
        [0.0534, 0.0273],
        [0.0472, 0.0203],
        [0.0362, 0.0371],
        [0.0380, 0.0383],
        [0.0365, 0.0251],
        [0.0419, 0.0292]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0740],
        [0.0513],
        [0.0341],
        [0.0446],
        [0.0408],
        [0.0644],
        [0.0501],
        [0.0375],
        [0.0310],
        [0.0388],
        [0.1344],
        [0.0472],
        [0.0652],
        [0.0381],
        [0.0574],
        [0.0361]], device='cuda:0', dtype=torch.float16)/tensor([[0.0740, 0.0513, 0.0341, 0.0446, 0.0408, 0.0644, 0.0501, 0.0375, 0.0310,
         0.0388, 0.1344, 0.0472, 0.0652, 0.0381, 0.0574, 0.0361]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0428],
        [0.0367],
        [0.0306],
        [0.0313],
        [0.0191],
        [0.0518],
        [0.0237],
        [0.0177],
        [0.0159],
        [0.0200],
        [0.0790],
        [0.0186],
        [0.0138],
        [0.0264],
        [0.0273],
        [0.0328]], device='cuda:0', dtype=torch.float16)/tensor([[0.0428, 0.0367, 0.0306, 0.0313, 0.0191, 0.0518, 0.0237, 0.0177, 0.0159,
         0.0200, 0.0790, 0.0186, 0.0138, 0.0264, 0.0273, 0.0328]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0740, 0.0428],
        [0.0513, 0.0367],
        [0.0341, 0.0306],
        [0.0446, 0.0313],
        [0.0408, 0.0191],
        [0.0644, 0.0518],
        [0.0501, 0.0237],
        [0.0375, 0.0177],
        [0.0310, 0.0159],
        [0.0388, 0.0200],
        [0.1344, 0.0790],
        [0.0472, 0.0186],
        [0.0652, 0.0138],
        [0.0381, 0.0264],
        [0.0574, 0.0273],
        [0.0361, 0.0328]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0576],
        [0.0462],
        [0.0507],
        [0.0510],
        [0.0489],
        [0.0538],
        [0.0487],
        [0.0605]], device='cuda:0', dtype=torch.float16)/tensor([[0.0576, 0.0462, 0.0507, 0.0510, 0.0489, 0.0538, 0.0487, 0.0605]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0349],
        [0.0151],
        [0.0307],
        [0.0254],
        [0.0456],
        [0.0179],
        [0.0213],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0349, 0.0151, 0.0307, 0.0254, 0.0456, 0.0179, 0.0213, 0.0319]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0576, 0.0349],
        [0.0462, 0.0151],
        [0.0507, 0.0307],
        [0.0510, 0.0254],
        [0.0489, 0.0456],
        [0.0538, 0.0179],
        [0.0487, 0.0213],
        [0.0605, 0.0319]], device='cuda:0')
acc:  0.54
Time taken to execute the en SA task with prompt type rare_synonyms, variation 4 and batchsize 16: 0:03:25.922099
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_4']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA rare_synonyms 5 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 335.20it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0554],
        [0.0642],
        [0.1943],
        [0.0842],
        [0.1703],
        [0.0788],
        [0.0334],
        [0.0722],
        [0.0871],
        [0.0887],
        [0.0772],
        [0.0873],
        [0.1173],
        [0.1008],
        [0.0829],
        [0.0883]], device='cuda:0', dtype=torch.float16)/tensor([[0.0554, 0.0642, 0.1943, 0.0842, 0.1703, 0.0788, 0.0334, 0.0722, 0.0871,
         0.0887, 0.0772, 0.0873, 0.1173, 0.1008, 0.0829, 0.0883]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0428],
        [0.0169],
        [0.0661],
        [0.0307],
        [0.1017],
        [0.0214],
        [0.0114],
        [0.0421],
        [0.0180],
        [0.0171],
        [0.0299],
        [0.0273],
        [0.0533],
        [0.0320],
        [0.0412],
        [0.0476]], device='cuda:0', dtype=torch.float16)/tensor([[0.0428, 0.0169, 0.0661, 0.0307, 0.1017, 0.0214, 0.0114, 0.0421, 0.0180,
         0.0171, 0.0299, 0.0273, 0.0533, 0.0320, 0.0412, 0.0476]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0554, 0.0428],
        [0.0642, 0.0169],
        [0.1943, 0.0661],
        [0.0842, 0.0307],
        [0.1703, 0.1017],
        [0.0788, 0.0214],
        [0.0334, 0.0114],
        [0.0722, 0.0421],
        [0.0871, 0.0180],
        [0.0887, 0.0171],
        [0.0772, 0.0299],
        [0.0873, 0.0273],
        [0.1173, 0.0533],
        [0.1008, 0.0320],
        [0.0829, 0.0412],
        [0.0883, 0.0476]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0751],
        [0.0871],
        [0.0861],
        [0.0602],
        [0.1247],
        [0.0867],
        [0.1103],
        [0.0850],
        [0.1075],
        [0.1263],
        [0.1064],
        [0.0762],
        [0.0876],
        [0.0844],
        [0.0933],
        [0.2595]], device='cuda:0', dtype=torch.float16)/tensor([[0.0751, 0.0871, 0.0861, 0.0602, 0.1247, 0.0867, 0.1103, 0.0850, 0.1075,
         0.1263, 0.1064, 0.0762, 0.0876, 0.0844, 0.0933, 0.2595]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0445],
        [0.0410],
        [0.0516],
        [0.0316],
        [0.0400],
        [0.0320],
        [0.0546],
        [0.0344],
        [0.0281],
        [0.0544],
        [0.0360],
        [0.0151],
        [0.0252],
        [0.0462],
        [0.0444],
        [0.0804]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0410, 0.0516, 0.0316, 0.0400, 0.0320, 0.0546, 0.0344, 0.0281,
         0.0544, 0.0360, 0.0151, 0.0252, 0.0462, 0.0444, 0.0804]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0751, 0.0445],
        [0.0871, 0.0410],
        [0.0861, 0.0516],
        [0.0602, 0.0316],
        [0.1247, 0.0400],
        [0.0867, 0.0320],
        [0.1103, 0.0546],
        [0.0850, 0.0344],
        [0.1075, 0.0281],
        [0.1263, 0.0544],
        [0.1064, 0.0360],
        [0.0762, 0.0151],
        [0.0876, 0.0252],
        [0.0844, 0.0462],
        [0.0933, 0.0444],
        [0.2595, 0.0804]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0850],
        [0.0943],
        [0.0789],
        [0.0731],
        [0.0909],
        [0.0938],
        [0.0989],
        [0.1008],
        [0.1456],
        [0.1247],
        [0.1654],
        [0.0901],
        [0.1000],
        [0.1525],
        [0.0892],
        [0.0991]], device='cuda:0', dtype=torch.float16)/tensor([[0.0850, 0.0943, 0.0789, 0.0731, 0.0909, 0.0938, 0.0989, 0.1008, 0.1456,
         0.1247, 0.1654, 0.0901, 0.1000, 0.1525, 0.0892, 0.0991]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0389],
        [0.0331],
        [0.0171],
        [0.0323],
        [0.0365],
        [0.0334],
        [0.0432],
        [0.0220],
        [0.0713],
        [0.0445],
        [0.0316],
        [0.0376],
        [0.0607],
        [0.0806],
        [0.0317],
        [0.0240]], device='cuda:0', dtype=torch.float16)/tensor([[0.0389, 0.0331, 0.0171, 0.0323, 0.0365, 0.0334, 0.0432, 0.0220, 0.0713,
         0.0445, 0.0316, 0.0376, 0.0607, 0.0806, 0.0317, 0.0240]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0850, 0.0389],
        [0.0943, 0.0331],
        [0.0789, 0.0171],
        [0.0731, 0.0323],
        [0.0909, 0.0365],
        [0.0938, 0.0334],
        [0.0989, 0.0432],
        [0.1008, 0.0220],
        [0.1456, 0.0713],
        [0.1247, 0.0445],
        [0.1654, 0.0316],
        [0.0901, 0.0376],
        [0.1000, 0.0607],
        [0.1525, 0.0806],
        [0.0892, 0.0317],
        [0.0991, 0.0240]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1074],
        [0.0941],
        [0.0912],
        [0.1423],
        [0.1099],
        [0.0914],
        [0.0799],
        [0.1298],
        [0.0899],
        [0.0776],
        [0.1092],
        [0.0958],
        [0.0820],
        [0.1180],
        [0.0678],
        [0.0799]], device='cuda:0', dtype=torch.float16)/tensor([[0.1074, 0.0941, 0.0912, 0.1423, 0.1099, 0.0914, 0.0799, 0.1298, 0.0899,
         0.0776, 0.1092, 0.0958, 0.0820, 0.1180, 0.0678, 0.0799]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0395],
        [0.0417],
        [0.0434],
        [0.0414],
        [0.0491],
        [0.0276],
        [0.0125],
        [0.0456],
        [0.0256],
        [0.0219],
        [0.0266],
        [0.0203],
        [0.0232],
        [0.0232],
        [0.0301],
        [0.0530]], device='cuda:0', dtype=torch.float16)/tensor([[0.0395, 0.0417, 0.0434, 0.0414, 0.0491, 0.0276, 0.0125, 0.0456, 0.0256,
         0.0219, 0.0266, 0.0203, 0.0232, 0.0232, 0.0301, 0.0530]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1074, 0.0395],
        [0.0941, 0.0417],
        [0.0912, 0.0434],
        [0.1423, 0.0414],
        [0.1099, 0.0491],
        [0.0914, 0.0276],
        [0.0799, 0.0125],
        [0.1298, 0.0456],
        [0.0899, 0.0256],
        [0.0776, 0.0219],
        [0.1092, 0.0266],
        [0.0958, 0.0203],
        [0.0820, 0.0232],
        [0.1180, 0.0232],
        [0.0678, 0.0301],
        [0.0799, 0.0530]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0812],
        [0.0844],
        [0.0852],
        [0.1080],
        [0.1061],
        [0.0793],
        [0.0893],
        [0.0871],
        [0.1206],
        [0.0988],
        [0.0908],
        [0.0886],
        [0.1024],
        [0.0979],
        [0.0994],
        [0.1124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0812, 0.0844, 0.0852, 0.1080, 0.1061, 0.0793, 0.0893, 0.0871, 0.1206,
         0.0988, 0.0908, 0.0886, 0.1024, 0.0979, 0.0994, 0.1124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0242],
        [0.0520],
        [0.0381],
        [0.0225],
        [0.0456],
        [0.0319],
        [0.0546],
        [0.0512],
        [0.0606],
        [0.0463],
        [0.0387],
        [0.0497],
        [0.0346],
        [0.0383],
        [0.0320],
        [0.0469]], device='cuda:0', dtype=torch.float16)/tensor([[0.0242, 0.0520, 0.0381, 0.0225, 0.0456, 0.0319, 0.0546, 0.0512, 0.0606,
         0.0463, 0.0387, 0.0497, 0.0346, 0.0383, 0.0320, 0.0469]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0812, 0.0242],
        [0.0844, 0.0520],
        [0.0852, 0.0381],
        [0.1080, 0.0225],
        [0.1061, 0.0456],
        [0.0793, 0.0319],
        [0.0893, 0.0546],
        [0.0871, 0.0512],
        [0.1206, 0.0606],
        [0.0988, 0.0463],
        [0.0908, 0.0387],
        [0.0886, 0.0497],
        [0.1024, 0.0346],
        [0.0979, 0.0383],
        [0.0994, 0.0320],
        [0.1124, 0.0469]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1075],
        [0.0982],
        [0.0629],
        [0.0835],
        [0.0806],
        [0.0870],
        [0.1047],
        [0.0765],
        [0.0950],
        [0.0855],
        [0.1231],
        [0.1100],
        [0.0536],
        [0.0718],
        [0.0941],
        [0.0901]], device='cuda:0', dtype=torch.float16)/tensor([[0.1075, 0.0982, 0.0629, 0.0835, 0.0806, 0.0870, 0.1047, 0.0765, 0.0950,
         0.0855, 0.1231, 0.1100, 0.0536, 0.0718, 0.0941, 0.0901]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0408],
        [0.0619],
        [0.0138],
        [0.0443],
        [0.0231],
        [0.0352],
        [0.0199],
        [0.0475],
        [0.0503],
        [0.0286],
        [0.0325],
        [0.0292],
        [0.0252],
        [0.0312],
        [0.0498],
        [0.0244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0408, 0.0619, 0.0138, 0.0443, 0.0231, 0.0352, 0.0199, 0.0475, 0.0503,
         0.0286, 0.0325, 0.0292, 0.0252, 0.0312, 0.0498, 0.0244]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1075, 0.0408],
        [0.0982, 0.0619],
        [0.0629, 0.0138],
        [0.0835, 0.0443],
        [0.0806, 0.0231],
        [0.0870, 0.0352],
        [0.1047, 0.0199],
        [0.0765, 0.0475],
        [0.0950, 0.0503],
        [0.0855, 0.0286],
        [0.1231, 0.0325],
        [0.1100, 0.0292],
        [0.0536, 0.0252],
        [0.0718, 0.0312],
        [0.0941, 0.0498],
        [0.0901, 0.0244]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1260],
        [0.0784],
        [0.0598],
        [0.0871],
        [0.1039],
        [0.1035],
        [0.0687],
        [0.0882],
        [0.0870],
        [0.0770],
        [0.0905],
        [0.0667],
        [0.1830],
        [0.1002],
        [0.0898],
        [0.1465]], device='cuda:0', dtype=torch.float16)/tensor([[0.1260, 0.0784, 0.0598, 0.0871, 0.1039, 0.1035, 0.0687, 0.0882, 0.0870,
         0.0770, 0.0905, 0.0667, 0.1830, 0.1002, 0.0898, 0.1465]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0361],
        [0.0186],
        [0.0252],
        [0.0457],
        [0.0340],
        [0.0599],
        [0.0474],
        [0.0365],
        [0.0504],
        [0.0356],
        [0.0473],
        [0.0350],
        [0.0618],
        [0.0361],
        [0.0222],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0361, 0.0186, 0.0252, 0.0457, 0.0340, 0.0599, 0.0474, 0.0365, 0.0504,
         0.0356, 0.0473, 0.0350, 0.0618, 0.0361, 0.0222, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1260, 0.0361],
        [0.0784, 0.0186],
        [0.0598, 0.0252],
        [0.0871, 0.0457],
        [0.1039, 0.0340],
        [0.1035, 0.0599],
        [0.0687, 0.0474],
        [0.0882, 0.0365],
        [0.0870, 0.0504],
        [0.0770, 0.0356],
        [0.0905, 0.0473],
        [0.0667, 0.0350],
        [0.1830, 0.0618],
        [0.1002, 0.0361],
        [0.0898, 0.0222],
        [0.1465, 0.0417]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1273],
        [0.1132],
        [0.1216],
        [0.0760],
        [0.1183],
        [0.1166],
        [0.0625],
        [0.1192],
        [0.1040],
        [0.0760],
        [0.1156],
        [0.1098],
        [0.0614],
        [0.0986],
        [0.0927],
        [0.0990]], device='cuda:0', dtype=torch.float16)/tensor([[0.1273, 0.1132, 0.1216, 0.0760, 0.1183, 0.1166, 0.0625, 0.1192, 0.1040,
         0.0760, 0.1156, 0.1098, 0.0614, 0.0986, 0.0927, 0.0990]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0487],
        [0.0665],
        [0.0437],
        [0.0348],
        [0.0577],
        [0.0538],
        [0.0332],
        [0.0321],
        [0.0390],
        [0.0264],
        [0.0513],
        [0.0284],
        [0.0534],
        [0.0328],
        [0.0369],
        [0.0557]], device='cuda:0', dtype=torch.float16)/tensor([[0.0487, 0.0665, 0.0437, 0.0348, 0.0577, 0.0538, 0.0332, 0.0321, 0.0390,
         0.0264, 0.0513, 0.0284, 0.0534, 0.0328, 0.0369, 0.0557]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1273, 0.0487],
        [0.1132, 0.0665],
        [0.1216, 0.0437],
        [0.0760, 0.0348],
        [0.1183, 0.0577],
        [0.1166, 0.0538],
        [0.0625, 0.0332],
        [0.1192, 0.0321],
        [0.1040, 0.0390],
        [0.0760, 0.0264],
        [0.1156, 0.0513],
        [0.1098, 0.0284],
        [0.0614, 0.0534],
        [0.0986, 0.0328],
        [0.0927, 0.0369],
        [0.0990, 0.0557]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0732],
        [0.0664],
        [0.1036],
        [0.0644],
        [0.0840],
        [0.0867],
        [0.0951],
        [0.0924],
        [0.0662],
        [0.0966],
        [0.0886],
        [0.0984],
        [0.0533],
        [0.0591],
        [0.0557],
        [0.1797]], device='cuda:0', dtype=torch.float16)/tensor([[0.0732, 0.0664, 0.1036, 0.0644, 0.0840, 0.0867, 0.0951, 0.0924, 0.0662,
         0.0966, 0.0886, 0.0984, 0.0533, 0.0591, 0.0557, 0.1797]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0350],
        [0.0240],
        [0.0480],
        [0.0133],
        [0.0272],
        [0.0547],
        [0.0453],
        [0.0349],
        [0.0423],
        [0.0226],
        [0.0386],
        [0.0671],
        [0.0298],
        [0.0334],
        [0.0484],
        [0.0505]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.0240, 0.0480, 0.0133, 0.0272, 0.0547, 0.0453, 0.0349, 0.0423,
         0.0226, 0.0386, 0.0671, 0.0298, 0.0334, 0.0484, 0.0505]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0732, 0.0350],
        [0.0664, 0.0240],
        [0.1036, 0.0480],
        [0.0644, 0.0133],
        [0.0840, 0.0272],
        [0.0867, 0.0547],
        [0.0951, 0.0453],
        [0.0924, 0.0349],
        [0.0662, 0.0423],
        [0.0966, 0.0226],
        [0.0886, 0.0386],
        [0.0984, 0.0671],
        [0.0533, 0.0298],
        [0.0591, 0.0334],
        [0.0557, 0.0484],
        [0.1797, 0.0505]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0637],
        [0.1024],
        [0.1225],
        [0.0804],
        [0.0771],
        [0.0956],
        [0.1255],
        [0.0831],
        [0.1094],
        [0.0900],
        [0.0848],
        [0.0701],
        [0.0753],
        [0.0800],
        [0.1034],
        [0.1087]], device='cuda:0', dtype=torch.float16)/tensor([[0.0637, 0.1024, 0.1225, 0.0804, 0.0771, 0.0956, 0.1255, 0.0831, 0.1094,
         0.0900, 0.0848, 0.0701, 0.0753, 0.0800, 0.1034, 0.1087]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0459],
        [0.0206],
        [0.0458],
        [0.0308],
        [0.0104],
        [0.0528],
        [0.0265],
        [0.0378],
        [0.0202],
        [0.0581],
        [0.0224],
        [0.0242],
        [0.0497],
        [0.0281],
        [0.0311],
        [0.0364]], device='cuda:0', dtype=torch.float16)/tensor([[0.0459, 0.0206, 0.0458, 0.0308, 0.0104, 0.0528, 0.0265, 0.0378, 0.0202,
         0.0581, 0.0224, 0.0242, 0.0497, 0.0281, 0.0311, 0.0364]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0637, 0.0459],
        [0.1024, 0.0206],
        [0.1225, 0.0458],
        [0.0804, 0.0308],
        [0.0771, 0.0104],
        [0.0956, 0.0528],
        [0.1255, 0.0265],
        [0.0831, 0.0378],
        [0.1094, 0.0202],
        [0.0900, 0.0581],
        [0.0848, 0.0224],
        [0.0701, 0.0242],
        [0.0753, 0.0497],
        [0.0800, 0.0281],
        [0.1034, 0.0311],
        [0.1087, 0.0364]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0933],
        [0.1216],
        [0.0591],
        [0.0861],
        [0.0709],
        [0.0996],
        [0.0988],
        [0.1240],
        [0.0860],
        [0.0518],
        [0.0845],
        [0.0723],
        [0.1108],
        [0.1393],
        [0.0620],
        [0.0998]], device='cuda:0', dtype=torch.float16)/tensor([[0.0933, 0.1216, 0.0591, 0.0861, 0.0709, 0.0996, 0.0988, 0.1240, 0.0860,
         0.0518, 0.0845, 0.0723, 0.1108, 0.1393, 0.0620, 0.0998]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0283],
        [0.0440],
        [0.0298],
        [0.0348],
        [0.0375],
        [0.0476],
        [0.0554],
        [0.0315],
        [0.0301],
        [0.0221],
        [0.0504],
        [0.0495],
        [0.0492],
        [0.0485],
        [0.0205],
        [0.0307]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0440, 0.0298, 0.0348, 0.0375, 0.0476, 0.0554, 0.0315, 0.0301,
         0.0221, 0.0504, 0.0495, 0.0492, 0.0485, 0.0205, 0.0307]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0933, 0.0283],
        [0.1216, 0.0440],
        [0.0591, 0.0298],
        [0.0861, 0.0348],
        [0.0709, 0.0375],
        [0.0996, 0.0476],
        [0.0988, 0.0554],
        [0.1240, 0.0315],
        [0.0860, 0.0301],
        [0.0518, 0.0221],
        [0.0845, 0.0504],
        [0.0723, 0.0495],
        [0.1108, 0.0492],
        [0.1393, 0.0485],
        [0.0620, 0.0205],
        [0.0998, 0.0307]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0747],
        [0.0930],
        [0.1088],
        [0.0896],
        [0.1194],
        [0.0758],
        [0.0983],
        [0.1073],
        [0.1038],
        [0.1042],
        [0.0612],
        [0.0973],
        [0.0865],
        [0.0723],
        [0.1246],
        [0.1259]], device='cuda:0', dtype=torch.float16)/tensor([[0.0747, 0.0930, 0.1088, 0.0896, 0.1194, 0.0758, 0.0983, 0.1073, 0.1038,
         0.1042, 0.0612, 0.0973, 0.0865, 0.0723, 0.1246, 0.1259]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0370],
        [0.0169],
        [0.0429],
        [0.0238],
        [0.0248],
        [0.0258],
        [0.0320],
        [0.0315],
        [0.0312],
        [0.0331],
        [0.0352],
        [0.0446],
        [0.0563],
        [0.0327],
        [0.1057],
        [0.0390]], device='cuda:0', dtype=torch.float16)/tensor([[0.0370, 0.0169, 0.0429, 0.0238, 0.0248, 0.0258, 0.0320, 0.0315, 0.0312,
         0.0331, 0.0352, 0.0446, 0.0563, 0.0327, 0.1057, 0.0390]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0747, 0.0370],
        [0.0930, 0.0169],
        [0.1088, 0.0429],
        [0.0896, 0.0238],
        [0.1194, 0.0248],
        [0.0758, 0.0258],
        [0.0983, 0.0320],
        [0.1073, 0.0315],
        [0.1038, 0.0312],
        [0.1042, 0.0331],
        [0.0612, 0.0352],
        [0.0973, 0.0446],
        [0.0865, 0.0563],
        [0.0723, 0.0327],
        [0.1246, 0.1057],
        [0.1259, 0.0390]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0903],
        [0.0931],
        [0.0615],
        [0.0793],
        [0.0896],
        [0.1079],
        [0.0846],
        [0.0554]], device='cuda:0', dtype=torch.float16)/tensor([[0.0903, 0.0931, 0.0615, 0.0793, 0.0896, 0.1079, 0.0846, 0.0554]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0392],
        [0.0522],
        [0.0176],
        [0.0270],
        [0.0331],
        [0.0285],
        [0.0505],
        [0.0493]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.0522, 0.0176, 0.0270, 0.0331, 0.0285, 0.0505, 0.0493]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0903, 0.0392],
        [0.0931, 0.0522],
        [0.0615, 0.0176],
        [0.0793, 0.0270],
        [0.0896, 0.0331],
        [0.1079, 0.0285],
        [0.0846, 0.0505],
        [0.0554, 0.0493]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type rare_synonyms, variation 5 and batchsize 16: 0:03:25.807242
path ['42', 'en', 'llama', 'SA', 'rare_synonyms', 'prompt_id_5']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b SA identical_modal 0 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.67it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1144],
        [0.0516],
        [0.0322],
        [0.0365],
        [0.0257],
        [0.0641],
        [0.0657],
        [0.0326],
        [0.0609],
        [0.0523],
        [0.0662],
        [0.0478],
        [0.0313],
        [0.0442],
        [0.0274],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.1144, 0.0516, 0.0322, 0.0365, 0.0257, 0.0641, 0.0657, 0.0326, 0.0609,
         0.0523, 0.0662, 0.0478, 0.0313, 0.0442, 0.0274, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0884],
        [0.0475],
        [0.0227],
        [0.0437],
        [0.0178],
        [0.0427],
        [0.0201],
        [0.0350],
        [0.0233],
        [0.0278],
        [0.0313],
        [0.0485],
        [0.0112],
        [0.0629],
        [0.0120],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0884, 0.0475, 0.0227, 0.0437, 0.0178, 0.0427, 0.0201, 0.0350, 0.0233,
         0.0278, 0.0313, 0.0485, 0.0112, 0.0629, 0.0120, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1144, 0.0884],
        [0.0516, 0.0475],
        [0.0322, 0.0227],
        [0.0365, 0.0437],
        [0.0257, 0.0178],
        [0.0641, 0.0427],
        [0.0657, 0.0201],
        [0.0326, 0.0350],
        [0.0609, 0.0233],
        [0.0523, 0.0278],
        [0.0662, 0.0313],
        [0.0478, 0.0485],
        [0.0313, 0.0112],
        [0.0442, 0.0629],
        [0.0274, 0.0120],
        [0.0388, 0.0423]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0525],
        [0.0615],
        [0.0562],
        [0.0623],
        [0.0451],
        [0.0476],
        [0.0537],
        [0.0592],
        [0.0263],
        [0.0436],
        [0.0529],
        [0.0569],
        [0.0430],
        [0.0225],
        [0.0446],
        [0.0413]], device='cuda:0', dtype=torch.float16)/tensor([[0.0525, 0.0615, 0.0562, 0.0623, 0.0451, 0.0476, 0.0537, 0.0592, 0.0263,
         0.0436, 0.0529, 0.0569, 0.0430, 0.0225, 0.0446, 0.0413]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0614],
        [0.0439],
        [0.0395],
        [0.0769],
        [0.0388],
        [0.0197],
        [0.0452],
        [0.0487],
        [0.0087],
        [0.0376],
        [0.0326],
        [0.0271],
        [0.0171],
        [0.0288],
        [0.0190],
        [0.0483]], device='cuda:0', dtype=torch.float16)/tensor([[0.0614, 0.0439, 0.0395, 0.0769, 0.0388, 0.0197, 0.0452, 0.0487, 0.0087,
         0.0376, 0.0326, 0.0271, 0.0171, 0.0288, 0.0190, 0.0483]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0525, 0.0614],
        [0.0615, 0.0439],
        [0.0562, 0.0395],
        [0.0623, 0.0769],
        [0.0451, 0.0388],
        [0.0476, 0.0197],
        [0.0537, 0.0452],
        [0.0592, 0.0487],
        [0.0263, 0.0087],
        [0.0436, 0.0376],
        [0.0529, 0.0326],
        [0.0569, 0.0271],
        [0.0430, 0.0171],
        [0.0225, 0.0288],
        [0.0446, 0.0190],
        [0.0413, 0.0483]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0386],
        [0.0449],
        [0.0367],
        [0.0302],
        [0.0340],
        [0.0367],
        [0.0417],
        [0.0289],
        [0.1072],
        [0.0606],
        [0.0337],
        [0.0346],
        [0.0407],
        [0.0136],
        [0.0434],
        [0.0853]], device='cuda:0', dtype=torch.float16)/tensor([[0.0386, 0.0449, 0.0367, 0.0302, 0.0340, 0.0367, 0.0417, 0.0289, 0.1072,
         0.0606, 0.0337, 0.0346, 0.0407, 0.0136, 0.0434, 0.0853]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0484],
        [0.0202],
        [0.0151],
        [0.0300],
        [0.0398],
        [0.0369],
        [0.0142],
        [0.0129],
        [0.0397],
        [0.0437],
        [0.0391],
        [0.0297],
        [0.0454],
        [0.0089],
        [0.0251],
        [0.1017]], device='cuda:0', dtype=torch.float16)/tensor([[0.0484, 0.0202, 0.0151, 0.0300, 0.0398, 0.0369, 0.0142, 0.0129, 0.0397,
         0.0437, 0.0391, 0.0297, 0.0454, 0.0089, 0.0251, 0.1017]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0386, 0.0484],
        [0.0449, 0.0202],
        [0.0367, 0.0151],
        [0.0302, 0.0300],
        [0.0340, 0.0398],
        [0.0367, 0.0369],
        [0.0417, 0.0142],
        [0.0289, 0.0129],
        [0.1072, 0.0397],
        [0.0606, 0.0437],
        [0.0337, 0.0391],
        [0.0346, 0.0297],
        [0.0407, 0.0454],
        [0.0136, 0.0089],
        [0.0434, 0.0251],
        [0.0853, 0.1017]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0437],
        [0.0570],
        [0.0435],
        [0.1471],
        [0.0553],
        [0.0243],
        [0.0544],
        [0.0427],
        [0.0678],
        [0.0371],
        [0.0454],
        [0.0628],
        [0.0185],
        [0.0236],
        [0.0826],
        [0.0505]], device='cuda:0', dtype=torch.float16)/tensor([[0.0437, 0.0570, 0.0435, 0.1471, 0.0553, 0.0243, 0.0544, 0.0427, 0.0678,
         0.0371, 0.0454, 0.0628, 0.0185, 0.0236, 0.0826, 0.0505]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0454],
        [0.0400],
        [0.0459],
        [0.0338],
        [0.0160],
        [0.0220],
        [0.0511],
        [0.0244],
        [0.0386],
        [0.0130],
        [0.0339],
        [0.0081],
        [0.0059],
        [0.0221],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0454, 0.0400, 0.0459, 0.0338, 0.0160, 0.0220, 0.0511, 0.0244,
         0.0386, 0.0130, 0.0339, 0.0081, 0.0059, 0.0221, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0437, 0.0166],
        [0.0570, 0.0454],
        [0.0435, 0.0400],
        [0.1471, 0.0459],
        [0.0553, 0.0338],
        [0.0243, 0.0160],
        [0.0544, 0.0220],
        [0.0427, 0.0511],
        [0.0678, 0.0244],
        [0.0371, 0.0386],
        [0.0454, 0.0130],
        [0.0628, 0.0339],
        [0.0185, 0.0081],
        [0.0236, 0.0059],
        [0.0826, 0.0221],
        [0.0505, 0.0180]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0851],
        [0.0381],
        [0.0464],
        [0.0821],
        [0.0502],
        [0.0249],
        [0.0525],
        [0.0651],
        [0.0334],
        [0.0448],
        [0.0444],
        [0.0701],
        [0.0625],
        [0.0753],
        [0.0748],
        [0.0638]], device='cuda:0', dtype=torch.float16)/tensor([[0.0851, 0.0381, 0.0464, 0.0821, 0.0502, 0.0249, 0.0525, 0.0651, 0.0334,
         0.0448, 0.0444, 0.0701, 0.0625, 0.0753, 0.0748, 0.0638]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0336],
        [0.0141],
        [0.0229],
        [0.0432],
        [0.0117],
        [0.0121],
        [0.0482],
        [0.0185],
        [0.0214],
        [0.0214],
        [0.0071],
        [0.0270],
        [0.0161],
        [0.0538],
        [0.0233],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0336, 0.0141, 0.0229, 0.0432, 0.0117, 0.0121, 0.0482, 0.0185, 0.0214,
         0.0214, 0.0071, 0.0270, 0.0161, 0.0538, 0.0233, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0851, 0.0336],
        [0.0381, 0.0141],
        [0.0464, 0.0229],
        [0.0821, 0.0432],
        [0.0502, 0.0117],
        [0.0249, 0.0121],
        [0.0525, 0.0482],
        [0.0651, 0.0185],
        [0.0334, 0.0214],
        [0.0448, 0.0214],
        [0.0444, 0.0071],
        [0.0701, 0.0270],
        [0.0625, 0.0161],
        [0.0753, 0.0538],
        [0.0748, 0.0233],
        [0.0638, 0.0176]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0715],
        [0.0237],
        [0.0380],
        [0.0667],
        [0.0286],
        [0.0670],
        [0.0378],
        [0.0522],
        [0.0620],
        [0.0590],
        [0.1779],
        [0.0265],
        [0.0410],
        [0.0619],
        [0.0763],
        [0.0630]], device='cuda:0', dtype=torch.float16)/tensor([[0.0715, 0.0237, 0.0380, 0.0667, 0.0286, 0.0670, 0.0378, 0.0522, 0.0620,
         0.0590, 0.1779, 0.0265, 0.0410, 0.0619, 0.0763, 0.0630]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0351],
        [0.0293],
        [0.0176],
        [0.0651],
        [0.0075],
        [0.0376],
        [0.0065],
        [0.0479],
        [0.0510],
        [0.0248],
        [0.0639],
        [0.0233],
        [0.0331],
        [0.0609],
        [0.0246],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0293, 0.0176, 0.0651, 0.0075, 0.0376, 0.0065, 0.0479, 0.0510,
         0.0248, 0.0639, 0.0233, 0.0331, 0.0609, 0.0246, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0715, 0.0351],
        [0.0237, 0.0293],
        [0.0380, 0.0176],
        [0.0667, 0.0651],
        [0.0286, 0.0075],
        [0.0670, 0.0376],
        [0.0378, 0.0065],
        [0.0522, 0.0479],
        [0.0620, 0.0510],
        [0.0590, 0.0248],
        [0.1779, 0.0639],
        [0.0265, 0.0233],
        [0.0410, 0.0331],
        [0.0619, 0.0609],
        [0.0763, 0.0246],
        [0.0630, 0.0133]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0659],
        [0.0307],
        [0.0588],
        [0.0279],
        [0.0670],
        [0.0391],
        [0.0961],
        [0.0435],
        [0.0473],
        [0.0783],
        [0.0682],
        [0.0680],
        [0.0651],
        [0.0634],
        [0.1210],
        [0.0546]], device='cuda:0', dtype=torch.float16)/tensor([[0.0659, 0.0307, 0.0588, 0.0279, 0.0670, 0.0391, 0.0961, 0.0435, 0.0473,
         0.0783, 0.0682, 0.0680, 0.0651, 0.0634, 0.1210, 0.0546]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0471],
        [0.0275],
        [0.0552],
        [0.0286],
        [0.0307],
        [0.0468],
        [0.0379],
        [0.0546],
        [0.0328],
        [0.0361],
        [0.0519],
        [0.0275],
        [0.0275],
        [0.0590],
        [0.1035],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0471, 0.0275, 0.0552, 0.0286, 0.0307, 0.0468, 0.0379, 0.0546, 0.0328,
         0.0361, 0.0519, 0.0275, 0.0275, 0.0590, 0.1035, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0659, 0.0471],
        [0.0307, 0.0275],
        [0.0588, 0.0552],
        [0.0279, 0.0286],
        [0.0670, 0.0307],
        [0.0391, 0.0468],
        [0.0961, 0.0379],
        [0.0435, 0.0546],
        [0.0473, 0.0328],
        [0.0783, 0.0361],
        [0.0682, 0.0519],
        [0.0680, 0.0275],
        [0.0651, 0.0275],
        [0.0634, 0.0590],
        [0.1210, 0.1035],
        [0.0546, 0.0211]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0480],
        [0.0198],
        [0.0491],
        [0.0687],
        [0.0358],
        [0.0420],
        [0.0353],
        [0.0526],
        [0.0247],
        [0.0378],
        [0.1149],
        [0.0504],
        [0.0450],
        [0.0353],
        [0.0651],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0480, 0.0198, 0.0491, 0.0687, 0.0358, 0.0420, 0.0353, 0.0526, 0.0247,
         0.0378, 0.1149, 0.0504, 0.0450, 0.0353, 0.0651, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0570],
        [0.0140],
        [0.0315],
        [0.0167],
        [0.0396],
        [0.0376],
        [0.0443],
        [0.0204],
        [0.0051],
        [0.0319],
        [0.1063],
        [0.0248],
        [0.0239],
        [0.0123],
        [0.0333],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0570, 0.0140, 0.0315, 0.0167, 0.0396, 0.0376, 0.0443, 0.0204, 0.0051,
         0.0319, 0.1063, 0.0248, 0.0239, 0.0123, 0.0333, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0480, 0.0570],
        [0.0198, 0.0140],
        [0.0491, 0.0315],
        [0.0687, 0.0167],
        [0.0358, 0.0396],
        [0.0420, 0.0376],
        [0.0353, 0.0443],
        [0.0526, 0.0204],
        [0.0247, 0.0051],
        [0.0378, 0.0319],
        [0.1149, 0.1063],
        [0.0504, 0.0248],
        [0.0450, 0.0239],
        [0.0353, 0.0123],
        [0.0651, 0.0333],
        [0.0423, 0.0149]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0793],
        [0.0204],
        [0.0880],
        [0.0681],
        [0.0774],
        [0.0438],
        [0.0828],
        [0.0597],
        [0.0406],
        [0.0336],
        [0.0398],
        [0.0364],
        [0.0424],
        [0.0301],
        [0.0548],
        [0.0347]], device='cuda:0', dtype=torch.float16)/tensor([[0.0793, 0.0204, 0.0880, 0.0681, 0.0774, 0.0438, 0.0828, 0.0597, 0.0406,
         0.0336, 0.0398, 0.0364, 0.0424, 0.0301, 0.0548, 0.0347]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0338],
        [0.0140],
        [0.0914],
        [0.0218],
        [0.0392],
        [0.0303],
        [0.0316],
        [0.0356],
        [0.0219],
        [0.0496],
        [0.0209],
        [0.0336],
        [0.0209],
        [0.0128],
        [0.0287],
        [0.0305]], device='cuda:0', dtype=torch.float16)/tensor([[0.0338, 0.0140, 0.0914, 0.0218, 0.0392, 0.0303, 0.0316, 0.0356, 0.0219,
         0.0496, 0.0209, 0.0336, 0.0209, 0.0128, 0.0287, 0.0305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0793, 0.0338],
        [0.0204, 0.0140],
        [0.0880, 0.0914],
        [0.0681, 0.0218],
        [0.0774, 0.0392],
        [0.0438, 0.0303],
        [0.0828, 0.0316],
        [0.0597, 0.0356],
        [0.0406, 0.0219],
        [0.0336, 0.0496],
        [0.0398, 0.0209],
        [0.0364, 0.0336],
        [0.0424, 0.0209],
        [0.0301, 0.0128],
        [0.0548, 0.0287],
        [0.0347, 0.0305]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0579],
        [0.0299],
        [0.0346],
        [0.0339],
        [0.0690],
        [0.0439],
        [0.0455],
        [0.0296],
        [0.0333],
        [0.0452],
        [0.0533],
        [0.0448],
        [0.0421],
        [0.0266],
        [0.0424],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0579, 0.0299, 0.0346, 0.0339, 0.0690, 0.0439, 0.0455, 0.0296, 0.0333,
         0.0452, 0.0533, 0.0448, 0.0421, 0.0266, 0.0424, 0.0313]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0523],
        [0.0296],
        [0.0355],
        [0.0370],
        [0.0154],
        [0.0272],
        [0.0418],
        [0.0289],
        [0.0268],
        [0.0247],
        [0.0281],
        [0.0259],
        [0.0444],
        [0.0227],
        [0.0386],
        [0.0225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0523, 0.0296, 0.0355, 0.0370, 0.0154, 0.0272, 0.0418, 0.0289, 0.0268,
         0.0247, 0.0281, 0.0259, 0.0444, 0.0227, 0.0386, 0.0225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0579, 0.0523],
        [0.0299, 0.0296],
        [0.0346, 0.0355],
        [0.0339, 0.0370],
        [0.0690, 0.0154],
        [0.0439, 0.0272],
        [0.0455, 0.0418],
        [0.0296, 0.0289],
        [0.0333, 0.0268],
        [0.0452, 0.0247],
        [0.0533, 0.0281],
        [0.0448, 0.0259],
        [0.0421, 0.0444],
        [0.0266, 0.0227],
        [0.0424, 0.0386],
        [0.0313, 0.0225]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1216],
        [0.0748],
        [0.0560],
        [0.0565],
        [0.0518],
        [0.0984],
        [0.1044],
        [0.0363],
        [0.0607],
        [0.0684],
        [0.0302],
        [0.0255],
        [0.0300],
        [0.0092],
        [0.0559],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.1216, 0.0748, 0.0560, 0.0565, 0.0518, 0.0984, 0.1044, 0.0363, 0.0607,
         0.0684, 0.0302, 0.0255, 0.0300, 0.0092, 0.0559, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0495],
        [0.0510],
        [0.0169],
        [0.0204],
        [0.0650],
        [0.1040],
        [0.0555],
        [0.0214],
        [0.0293],
        [0.0411],
        [0.0228],
        [0.0064],
        [0.0186],
        [0.0074],
        [0.0321],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0495, 0.0510, 0.0169, 0.0204, 0.0650, 0.1040, 0.0555, 0.0214, 0.0293,
         0.0411, 0.0228, 0.0064, 0.0186, 0.0074, 0.0321, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1216, 0.0495],
        [0.0748, 0.0510],
        [0.0560, 0.0169],
        [0.0565, 0.0204],
        [0.0518, 0.0650],
        [0.0984, 0.1040],
        [0.1044, 0.0555],
        [0.0363, 0.0214],
        [0.0607, 0.0293],
        [0.0684, 0.0411],
        [0.0302, 0.0228],
        [0.0255, 0.0064],
        [0.0300, 0.0186],
        [0.0092, 0.0074],
        [0.0559, 0.0321],
        [0.0266, 0.0124]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0367],
        [0.0677],
        [0.0359],
        [0.0630],
        [0.0723],
        [0.0291],
        [0.0362],
        [0.0507],
        [0.0310],
        [0.0660],
        [0.0762],
        [0.0226],
        [0.0333],
        [0.0687],
        [0.0537],
        [0.0583]], device='cuda:0', dtype=torch.float16)/tensor([[0.0367, 0.0677, 0.0359, 0.0630, 0.0723, 0.0291, 0.0362, 0.0507, 0.0310,
         0.0660, 0.0762, 0.0226, 0.0333, 0.0687, 0.0537, 0.0583]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0394],
        [0.0320],
        [0.0283],
        [0.0392],
        [0.0585],
        [0.0349],
        [0.0601],
        [0.0229],
        [0.0151],
        [0.0321],
        [0.0338],
        [0.0234],
        [0.0236],
        [0.0338],
        [0.0529],
        [0.0479]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0320, 0.0283, 0.0392, 0.0585, 0.0349, 0.0601, 0.0229, 0.0151,
         0.0321, 0.0338, 0.0234, 0.0236, 0.0338, 0.0529, 0.0479]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0367, 0.0394],
        [0.0677, 0.0320],
        [0.0359, 0.0283],
        [0.0630, 0.0392],
        [0.0723, 0.0585],
        [0.0291, 0.0349],
        [0.0362, 0.0601],
        [0.0507, 0.0229],
        [0.0310, 0.0151],
        [0.0660, 0.0321],
        [0.0762, 0.0338],
        [0.0226, 0.0234],
        [0.0333, 0.0236],
        [0.0687, 0.0338],
        [0.0537, 0.0529],
        [0.0583, 0.0479]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0676],
        [0.0597],
        [0.0517],
        [0.0460],
        [0.1064],
        [0.0325],
        [0.0181],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0676, 0.0597, 0.0517, 0.0460, 0.1064, 0.0325, 0.0181, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0224],
        [0.0219],
        [0.0410],
        [0.0486],
        [0.0423],
        [0.0086],
        [0.0050],
        [0.0102]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0219, 0.0410, 0.0486, 0.0423, 0.0086, 0.0050, 0.0102]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0676, 0.0224],
        [0.0597, 0.0219],
        [0.0517, 0.0410],
        [0.0460, 0.0486],
        [0.1064, 0.0423],
        [0.0325, 0.0086],
        [0.0181, 0.0050],
        [0.0172, 0.0102]], device='cuda:0')
acc:  0.68
Time taken to execute the en SA task with prompt type identical_modal, variation 0 and batchsize 16: 0:03:23.216609
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_0']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA identical_modal 1 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.45it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0981],
        [0.0623],
        [0.0299],
        [0.0966],
        [0.0424],
        [0.0626],
        [0.0887],
        [0.0553],
        [0.0496],
        [0.0954],
        [0.0676],
        [0.1343],
        [0.0447],
        [0.0328],
        [0.0128],
        [0.0884]], device='cuda:0', dtype=torch.float16)/tensor([[0.0981, 0.0623, 0.0299, 0.0966, 0.0424, 0.0626, 0.0887, 0.0553, 0.0496,
         0.0954, 0.0676, 0.1343, 0.0447, 0.0328, 0.0128, 0.0884]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0396],
        [0.0571],
        [0.0165],
        [0.0951],
        [0.0437],
        [0.0465],
        [0.0361],
        [0.0349],
        [0.0466],
        [0.0239],
        [0.0256],
        [0.0510],
        [0.0138],
        [0.0162],
        [0.0094],
        [0.0247]], device='cuda:0', dtype=torch.float16)/tensor([[0.0396, 0.0571, 0.0165, 0.0951, 0.0437, 0.0465, 0.0361, 0.0349, 0.0466,
         0.0239, 0.0256, 0.0510, 0.0138, 0.0162, 0.0094, 0.0247]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0981, 0.0396],
        [0.0623, 0.0571],
        [0.0299, 0.0165],
        [0.0966, 0.0951],
        [0.0424, 0.0437],
        [0.0626, 0.0465],
        [0.0887, 0.0361],
        [0.0553, 0.0349],
        [0.0496, 0.0466],
        [0.0954, 0.0239],
        [0.0676, 0.0256],
        [0.1343, 0.0510],
        [0.0447, 0.0138],
        [0.0328, 0.0162],
        [0.0128, 0.0094],
        [0.0884, 0.0247]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0991],
        [0.0437],
        [0.0501],
        [0.0438],
        [0.0427],
        [0.0608],
        [0.0710],
        [0.0301],
        [0.0363],
        [0.0492],
        [0.0444],
        [0.0767],
        [0.0545],
        [0.0479],
        [0.0873],
        [0.0725]], device='cuda:0', dtype=torch.float16)/tensor([[0.0991, 0.0437, 0.0501, 0.0438, 0.0427, 0.0608, 0.0710, 0.0301, 0.0363,
         0.0492, 0.0444, 0.0767, 0.0545, 0.0479, 0.0873, 0.0725]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0447],
        [0.0205],
        [0.0337],
        [0.0524],
        [0.0280],
        [0.0775],
        [0.0136],
        [0.0303],
        [0.0242],
        [0.0224],
        [0.0458],
        [0.0230],
        [0.0184],
        [0.0163],
        [0.0412],
        [0.0289]], device='cuda:0', dtype=torch.float16)/tensor([[0.0447, 0.0205, 0.0337, 0.0524, 0.0280, 0.0775, 0.0136, 0.0303, 0.0242,
         0.0224, 0.0458, 0.0230, 0.0184, 0.0163, 0.0412, 0.0289]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0991, 0.0447],
        [0.0437, 0.0205],
        [0.0501, 0.0337],
        [0.0438, 0.0524],
        [0.0427, 0.0280],
        [0.0608, 0.0775],
        [0.0710, 0.0136],
        [0.0301, 0.0303],
        [0.0363, 0.0242],
        [0.0492, 0.0224],
        [0.0444, 0.0458],
        [0.0767, 0.0230],
        [0.0545, 0.0184],
        [0.0479, 0.0163],
        [0.0873, 0.0412],
        [0.0725, 0.0289]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0772],
        [0.0786],
        [0.0745],
        [0.0467],
        [0.0752],
        [0.0878],
        [0.0659],
        [0.1072],
        [0.0475],
        [0.0484],
        [0.1009],
        [0.0744],
        [0.0602],
        [0.1021],
        [0.0512],
        [0.0573]], device='cuda:0', dtype=torch.float16)/tensor([[0.0772, 0.0786, 0.0745, 0.0467, 0.0752, 0.0878, 0.0659, 0.1072, 0.0475,
         0.0484, 0.1009, 0.0744, 0.0602, 0.1021, 0.0512, 0.0573]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0286],
        [0.0531],
        [0.0349],
        [0.0297],
        [0.0198],
        [0.0172],
        [0.0302],
        [0.0398],
        [0.0759],
        [0.0245],
        [0.0557],
        [0.0194],
        [0.0417],
        [0.0342],
        [0.0425],
        [0.0373]], device='cuda:0', dtype=torch.float16)/tensor([[0.0286, 0.0531, 0.0349, 0.0297, 0.0198, 0.0172, 0.0302, 0.0398, 0.0759,
         0.0245, 0.0557, 0.0194, 0.0417, 0.0342, 0.0425, 0.0373]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0772, 0.0286],
        [0.0786, 0.0531],
        [0.0745, 0.0349],
        [0.0467, 0.0297],
        [0.0752, 0.0198],
        [0.0878, 0.0172],
        [0.0659, 0.0302],
        [0.1072, 0.0398],
        [0.0475, 0.0759],
        [0.0484, 0.0245],
        [0.1009, 0.0557],
        [0.0744, 0.0194],
        [0.0602, 0.0417],
        [0.1021, 0.0342],
        [0.0512, 0.0425],
        [0.0573, 0.0373]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0680],
        [0.0602],
        [0.0968],
        [0.0731],
        [0.0468],
        [0.1048],
        [0.0836],
        [0.0883],
        [0.0505],
        [0.0405],
        [0.0317],
        [0.0549],
        [0.0557],
        [0.0369],
        [0.0859],
        [0.0481]], device='cuda:0', dtype=torch.float16)/tensor([[0.0680, 0.0602, 0.0968, 0.0731, 0.0468, 0.1048, 0.0836, 0.0883, 0.0505,
         0.0405, 0.0317, 0.0549, 0.0557, 0.0369, 0.0859, 0.0481]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0297],
        [0.0327],
        [0.0433],
        [0.0592],
        [0.0093],
        [0.0348],
        [0.0863],
        [0.0842],
        [0.0152],
        [0.0378],
        [0.0414],
        [0.0558],
        [0.0431],
        [0.0090],
        [0.0306],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0297, 0.0327, 0.0433, 0.0592, 0.0093, 0.0348, 0.0863, 0.0842, 0.0152,
         0.0378, 0.0414, 0.0558, 0.0431, 0.0090, 0.0306, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0680, 0.0297],
        [0.0602, 0.0327],
        [0.0968, 0.0433],
        [0.0731, 0.0592],
        [0.0468, 0.0093],
        [0.1048, 0.0348],
        [0.0836, 0.0863],
        [0.0883, 0.0842],
        [0.0505, 0.0152],
        [0.0405, 0.0378],
        [0.0317, 0.0414],
        [0.0549, 0.0558],
        [0.0557, 0.0431],
        [0.0369, 0.0090],
        [0.0859, 0.0306],
        [0.0481, 0.0417]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0435],
        [0.0709],
        [0.0572],
        [0.0553],
        [0.0486],
        [0.1626],
        [0.0767],
        [0.0270],
        [0.0541],
        [0.0813],
        [0.0462],
        [0.0623],
        [0.0968],
        [0.0709],
        [0.0697],
        [0.0509]], device='cuda:0', dtype=torch.float16)/tensor([[0.0435, 0.0709, 0.0572, 0.0553, 0.0486, 0.1626, 0.0767, 0.0270, 0.0541,
         0.0813, 0.0462, 0.0623, 0.0968, 0.0709, 0.0697, 0.0509]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0174],
        [0.0583],
        [0.0187],
        [0.0184],
        [0.0403],
        [0.1199],
        [0.0377],
        [0.0061],
        [0.0231],
        [0.0366],
        [0.0155],
        [0.0550],
        [0.0209],
        [0.0238],
        [0.0771],
        [0.0339]], device='cuda:0', dtype=torch.float16)/tensor([[0.0174, 0.0583, 0.0187, 0.0184, 0.0403, 0.1199, 0.0377, 0.0061, 0.0231,
         0.0366, 0.0155, 0.0550, 0.0209, 0.0238, 0.0771, 0.0339]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0435, 0.0174],
        [0.0709, 0.0583],
        [0.0572, 0.0187],
        [0.0553, 0.0184],
        [0.0486, 0.0403],
        [0.1626, 0.1199],
        [0.0767, 0.0377],
        [0.0270, 0.0061],
        [0.0541, 0.0231],
        [0.0813, 0.0366],
        [0.0462, 0.0155],
        [0.0623, 0.0550],
        [0.0968, 0.0209],
        [0.0709, 0.0238],
        [0.0697, 0.0771],
        [0.0509, 0.0339]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0269],
        [0.0869],
        [0.0901],
        [0.0959],
        [0.0291],
        [0.0514],
        [0.0417],
        [0.0623],
        [0.0445],
        [0.0634],
        [0.0199],
        [0.0848],
        [0.0595],
        [0.0494],
        [0.0320],
        [0.0880]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0869, 0.0901, 0.0959, 0.0291, 0.0514, 0.0417, 0.0623, 0.0445,
         0.0634, 0.0199, 0.0848, 0.0595, 0.0494, 0.0320, 0.0880]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0144],
        [0.0597],
        [0.1036],
        [0.0260],
        [0.0319],
        [0.0154],
        [0.0170],
        [0.0323],
        [0.0316],
        [0.0596],
        [0.0115],
        [0.0253],
        [0.0435],
        [0.0560],
        [0.0205],
        [0.0559]], device='cuda:0', dtype=torch.float16)/tensor([[0.0144, 0.0597, 0.1036, 0.0260, 0.0319, 0.0154, 0.0170, 0.0323, 0.0316,
         0.0596, 0.0115, 0.0253, 0.0435, 0.0560, 0.0205, 0.0559]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0269, 0.0144],
        [0.0869, 0.0597],
        [0.0901, 0.1036],
        [0.0959, 0.0260],
        [0.0291, 0.0319],
        [0.0514, 0.0154],
        [0.0417, 0.0170],
        [0.0623, 0.0323],
        [0.0445, 0.0316],
        [0.0634, 0.0596],
        [0.0199, 0.0115],
        [0.0848, 0.0253],
        [0.0595, 0.0435],
        [0.0494, 0.0560],
        [0.0320, 0.0205],
        [0.0880, 0.0559]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0669],
        [0.0975],
        [0.0686],
        [0.0471],
        [0.0956],
        [0.0225],
        [0.0786],
        [0.0471],
        [0.0735],
        [0.0500],
        [0.0611],
        [0.1071],
        [0.0916],
        [0.0540],
        [0.0433],
        [0.0564]], device='cuda:0', dtype=torch.float16)/tensor([[0.0669, 0.0975, 0.0686, 0.0471, 0.0956, 0.0225, 0.0786, 0.0471, 0.0735,
         0.0500, 0.0611, 0.1071, 0.0916, 0.0540, 0.0433, 0.0564]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0107],
        [0.0502],
        [0.0620],
        [0.0293],
        [0.0793],
        [0.0079],
        [0.0307],
        [0.0479],
        [0.0547],
        [0.0254],
        [0.0293],
        [0.1282],
        [0.0316],
        [0.0253],
        [0.0494],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0502, 0.0620, 0.0293, 0.0793, 0.0079, 0.0307, 0.0479, 0.0547,
         0.0254, 0.0293, 0.1282, 0.0316, 0.0253, 0.0494, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0669, 0.0107],
        [0.0975, 0.0502],
        [0.0686, 0.0620],
        [0.0471, 0.0293],
        [0.0956, 0.0793],
        [0.0225, 0.0079],
        [0.0786, 0.0307],
        [0.0471, 0.0479],
        [0.0735, 0.0547],
        [0.0500, 0.0254],
        [0.0611, 0.0293],
        [0.1071, 0.1282],
        [0.0916, 0.0316],
        [0.0540, 0.0253],
        [0.0433, 0.0494],
        [0.0564, 0.0419]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0783],
        [0.0533],
        [0.0775],
        [0.0744],
        [0.0740],
        [0.0630],
        [0.0764],
        [0.0359],
        [0.0823],
        [0.0614],
        [0.0617],
        [0.0531],
        [0.0369],
        [0.0463],
        [0.0786],
        [0.0571]], device='cuda:0', dtype=torch.float16)/tensor([[0.0783, 0.0533, 0.0775, 0.0744, 0.0740, 0.0630, 0.0764, 0.0359, 0.0823,
         0.0614, 0.0617, 0.0531, 0.0369, 0.0463, 0.0786, 0.0571]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0176],
        [0.0463],
        [0.0266],
        [0.0261],
        [0.0500],
        [0.0293],
        [0.0279],
        [0.0275],
        [0.0565],
        [0.0517],
        [0.0278],
        [0.0167],
        [0.0297],
        [0.0227],
        [0.0469],
        [0.0249]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0463, 0.0266, 0.0261, 0.0500, 0.0293, 0.0279, 0.0275, 0.0565,
         0.0517, 0.0278, 0.0167, 0.0297, 0.0227, 0.0469, 0.0249]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0783, 0.0176],
        [0.0533, 0.0463],
        [0.0775, 0.0266],
        [0.0744, 0.0261],
        [0.0740, 0.0500],
        [0.0630, 0.0293],
        [0.0764, 0.0279],
        [0.0359, 0.0275],
        [0.0823, 0.0565],
        [0.0614, 0.0517],
        [0.0617, 0.0278],
        [0.0531, 0.0167],
        [0.0369, 0.0297],
        [0.0463, 0.0227],
        [0.0786, 0.0469],
        [0.0571, 0.0249]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0325],
        [0.0395],
        [0.0529],
        [0.1282],
        [0.0641],
        [0.1403],
        [0.1069],
        [0.0646],
        [0.0621],
        [0.0528],
        [0.0464],
        [0.1061],
        [0.1804],
        [0.0651],
        [0.0349],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0325, 0.0395, 0.0529, 0.1282, 0.0641, 0.1403, 0.1069, 0.0646, 0.0621,
         0.0528, 0.0464, 0.1061, 0.1804, 0.0651, 0.0349, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0153],
        [0.0368],
        [0.0199],
        [0.0410],
        [0.0492],
        [0.0589],
        [0.0813],
        [0.0540],
        [0.0437],
        [0.0469],
        [0.0479],
        [0.0639],
        [0.0432],
        [0.0508],
        [0.0369],
        [0.0667]], device='cuda:0', dtype=torch.float16)/tensor([[0.0153, 0.0368, 0.0199, 0.0410, 0.0492, 0.0589, 0.0813, 0.0540, 0.0437,
         0.0469, 0.0479, 0.0639, 0.0432, 0.0508, 0.0369, 0.0667]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0325, 0.0153],
        [0.0395, 0.0368],
        [0.0529, 0.0199],
        [0.1282, 0.0410],
        [0.0641, 0.0492],
        [0.1403, 0.0589],
        [0.1069, 0.0813],
        [0.0646, 0.0540],
        [0.0621, 0.0437],
        [0.0528, 0.0469],
        [0.0464, 0.0479],
        [0.1061, 0.0639],
        [0.1804, 0.0432],
        [0.0651, 0.0508],
        [0.0349, 0.0369],
        [0.0417, 0.0667]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0732],
        [0.0720],
        [0.0670],
        [0.0347],
        [0.0470],
        [0.0480],
        [0.0393],
        [0.0576],
        [0.0538],
        [0.0548],
        [0.0717],
        [0.0442],
        [0.0627],
        [0.0388],
        [0.0717],
        [0.0665]], device='cuda:0', dtype=torch.float16)/tensor([[0.0732, 0.0720, 0.0670, 0.0347, 0.0470, 0.0480, 0.0393, 0.0576, 0.0538,
         0.0548, 0.0717, 0.0442, 0.0627, 0.0388, 0.0717, 0.0665]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0257],
        [0.0395],
        [0.0075],
        [0.0302],
        [0.0311],
        [0.0570],
        [0.0435],
        [0.0559],
        [0.0260],
        [0.0641],
        [0.0289],
        [0.0361],
        [0.0756],
        [0.0353],
        [0.0525],
        [0.0288]], device='cuda:0', dtype=torch.float16)/tensor([[0.0257, 0.0395, 0.0075, 0.0302, 0.0311, 0.0570, 0.0435, 0.0559, 0.0260,
         0.0641, 0.0289, 0.0361, 0.0756, 0.0353, 0.0525, 0.0288]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0732, 0.0257],
        [0.0720, 0.0395],
        [0.0670, 0.0075],
        [0.0347, 0.0302],
        [0.0470, 0.0311],
        [0.0480, 0.0570],
        [0.0393, 0.0435],
        [0.0576, 0.0559],
        [0.0538, 0.0260],
        [0.0548, 0.0641],
        [0.0717, 0.0289],
        [0.0442, 0.0361],
        [0.0627, 0.0756],
        [0.0388, 0.0353],
        [0.0717, 0.0525],
        [0.0665, 0.0288]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1050],
        [0.0389],
        [0.0274],
        [0.0423],
        [0.0446],
        [0.0859],
        [0.0537],
        [0.0395],
        [0.0767],
        [0.0688],
        [0.1053],
        [0.0978],
        [0.1084],
        [0.0562],
        [0.0464],
        [0.0792]], device='cuda:0', dtype=torch.float16)/tensor([[0.1050, 0.0389, 0.0274, 0.0423, 0.0446, 0.0859, 0.0537, 0.0395, 0.0767,
         0.0688, 0.1053, 0.0978, 0.1084, 0.0562, 0.0464, 0.0792]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0242],
        [0.0110],
        [0.0175],
        [0.0353],
        [0.0319],
        [0.0196],
        [0.0493],
        [0.0398],
        [0.0293],
        [0.0557],
        [0.0337],
        [0.0366],
        [0.0338],
        [0.0536],
        [0.0521],
        [0.0167]], device='cuda:0', dtype=torch.float16)/tensor([[0.0242, 0.0110, 0.0175, 0.0353, 0.0319, 0.0196, 0.0493, 0.0398, 0.0293,
         0.0557, 0.0337, 0.0366, 0.0338, 0.0536, 0.0521, 0.0167]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1050, 0.0242],
        [0.0389, 0.0110],
        [0.0274, 0.0175],
        [0.0423, 0.0353],
        [0.0446, 0.0319],
        [0.0859, 0.0196],
        [0.0537, 0.0493],
        [0.0395, 0.0398],
        [0.0767, 0.0293],
        [0.0688, 0.0557],
        [0.1053, 0.0337],
        [0.0978, 0.0366],
        [0.1084, 0.0338],
        [0.0562, 0.0536],
        [0.0464, 0.0521],
        [0.0792, 0.0167]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0542],
        [0.1333],
        [0.0363],
        [0.0431],
        [0.0687],
        [0.0663],
        [0.0279],
        [0.0966],
        [0.0901],
        [0.0595],
        [0.0814],
        [0.0619],
        [0.1417],
        [0.0789],
        [0.0682],
        [0.2452]], device='cuda:0', dtype=torch.float16)/tensor([[0.0542, 0.1333, 0.0363, 0.0431, 0.0687, 0.0663, 0.0279, 0.0966, 0.0901,
         0.0595, 0.0814, 0.0619, 0.1417, 0.0789, 0.0682, 0.2452]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0436],
        [0.1158],
        [0.0320],
        [0.0162],
        [0.0427],
        [0.0734],
        [0.0048],
        [0.0293],
        [0.0513],
        [0.0283],
        [0.0471],
        [0.0123],
        [0.0555],
        [0.0323],
        [0.0230],
        [0.0790]], device='cuda:0', dtype=torch.float16)/tensor([[0.0436, 0.1158, 0.0320, 0.0162, 0.0427, 0.0734, 0.0048, 0.0293, 0.0513,
         0.0283, 0.0471, 0.0123, 0.0555, 0.0323, 0.0230, 0.0790]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0542, 0.0436],
        [0.1333, 0.1158],
        [0.0363, 0.0320],
        [0.0431, 0.0162],
        [0.0687, 0.0427],
        [0.0663, 0.0734],
        [0.0279, 0.0048],
        [0.0966, 0.0293],
        [0.0901, 0.0513],
        [0.0595, 0.0283],
        [0.0814, 0.0471],
        [0.0619, 0.0123],
        [0.1417, 0.0555],
        [0.0789, 0.0323],
        [0.0682, 0.0230],
        [0.2452, 0.0790]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0622],
        [0.0399],
        [0.0370],
        [0.0617],
        [0.0416],
        [0.0682],
        [0.0658],
        [0.0456]], device='cuda:0', dtype=torch.float16)/tensor([[0.0622, 0.0399, 0.0370, 0.0617, 0.0416, 0.0682, 0.0658, 0.0456]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0401],
        [0.0406],
        [0.0271],
        [0.0147],
        [0.0309],
        [0.0320],
        [0.0186],
        [0.0493]], device='cuda:0', dtype=torch.float16)/tensor([[0.0401, 0.0406, 0.0271, 0.0147, 0.0309, 0.0320, 0.0186, 0.0493]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0622, 0.0401],
        [0.0399, 0.0406],
        [0.0370, 0.0271],
        [0.0617, 0.0147],
        [0.0416, 0.0309],
        [0.0682, 0.0320],
        [0.0658, 0.0186],
        [0.0456, 0.0493]], device='cuda:0')
acc:  0.64
Time taken to execute the en SA task with prompt type identical_modal, variation 1 and batchsize 16: 0:03:24.057971
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_1']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA identical_modal 2 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 339.09it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0480],
        [0.1058],
        [0.0660],
        [0.0637],
        [0.1118],
        [0.0842],
        [0.0529],
        [0.0669],
        [0.0906],
        [0.1281],
        [0.1250],
        [0.0711],
        [0.2678],
        [0.1097],
        [0.0609],
        [0.0636]], device='cuda:0', dtype=torch.float16)/tensor([[0.0480, 0.1058, 0.0660, 0.0637, 0.1118, 0.0842, 0.0529, 0.0669, 0.0906,
         0.1281, 0.1250, 0.0711, 0.2678, 0.1097, 0.0609, 0.0636]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0251],
        [0.0837],
        [0.0106],
        [0.0113],
        [0.0285],
        [0.0216],
        [0.0149],
        [0.0384],
        [0.0222],
        [0.0206],
        [0.0331],
        [0.0202],
        [0.0767],
        [0.0725],
        [0.0297],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0837, 0.0106, 0.0113, 0.0285, 0.0216, 0.0149, 0.0384, 0.0222,
         0.0206, 0.0331, 0.0202, 0.0767, 0.0725, 0.0297, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0480, 0.0251],
        [0.1058, 0.0837],
        [0.0660, 0.0106],
        [0.0637, 0.0113],
        [0.1118, 0.0285],
        [0.0842, 0.0216],
        [0.0529, 0.0149],
        [0.0669, 0.0384],
        [0.0906, 0.0222],
        [0.1281, 0.0206],
        [0.1250, 0.0331],
        [0.0711, 0.0202],
        [0.2678, 0.0767],
        [0.1097, 0.0725],
        [0.0609, 0.0297],
        [0.0636, 0.0291]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0475],
        [0.0645],
        [0.0799],
        [0.0996],
        [0.0659],
        [0.0912],
        [0.0596],
        [0.1104],
        [0.0823],
        [0.0429],
        [0.1061],
        [0.0864],
        [0.0797],
        [0.0926],
        [0.0625],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0475, 0.0645, 0.0799, 0.0996, 0.0659, 0.0912, 0.0596, 0.1104, 0.0823,
         0.0429, 0.1061, 0.0864, 0.0797, 0.0926, 0.0625, 0.0260]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0160],
        [0.0201],
        [0.0193],
        [0.0406],
        [0.0524],
        [0.0502],
        [0.0164],
        [0.0236],
        [0.0116],
        [0.0302],
        [0.0408],
        [0.0182],
        [0.0346],
        [0.0211],
        [0.0102]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0160, 0.0201, 0.0193, 0.0406, 0.0524, 0.0502, 0.0164, 0.0236,
         0.0116, 0.0302, 0.0408, 0.0182, 0.0346, 0.0211, 0.0102]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0475, 0.0136],
        [0.0645, 0.0160],
        [0.0799, 0.0201],
        [0.0996, 0.0193],
        [0.0659, 0.0406],
        [0.0912, 0.0524],
        [0.0596, 0.0502],
        [0.1104, 0.0164],
        [0.0823, 0.0236],
        [0.0429, 0.0116],
        [0.1061, 0.0302],
        [0.0864, 0.0408],
        [0.0797, 0.0182],
        [0.0926, 0.0346],
        [0.0625, 0.0211],
        [0.0260, 0.0102]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0901],
        [0.0662],
        [0.0530],
        [0.0558],
        [0.0677],
        [0.0849],
        [0.0767],
        [0.0420],
        [0.0674],
        [0.1138],
        [0.0995],
        [0.0637],
        [0.0830],
        [0.0540],
        [0.0988],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.0901, 0.0662, 0.0530, 0.0558, 0.0677, 0.0849, 0.0767, 0.0420, 0.0674,
         0.1138, 0.0995, 0.0637, 0.0830, 0.0540, 0.0988, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0337],
        [0.0282],
        [0.0171],
        [0.0281],
        [0.0128],
        [0.0221],
        [0.0178],
        [0.0085],
        [0.0319],
        [0.0224],
        [0.0311],
        [0.0292],
        [0.0217],
        [0.0371],
        [0.0304],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0337, 0.0282, 0.0171, 0.0281, 0.0128, 0.0221, 0.0178, 0.0085, 0.0319,
         0.0224, 0.0311, 0.0292, 0.0217, 0.0371, 0.0304, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0901, 0.0337],
        [0.0662, 0.0282],
        [0.0530, 0.0171],
        [0.0558, 0.0281],
        [0.0677, 0.0128],
        [0.0849, 0.0221],
        [0.0767, 0.0178],
        [0.0420, 0.0085],
        [0.0674, 0.0319],
        [0.1138, 0.0224],
        [0.0995, 0.0311],
        [0.0637, 0.0292],
        [0.0830, 0.0217],
        [0.0540, 0.0371],
        [0.0988, 0.0304],
        [0.0388, 0.0149]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0399],
        [0.0937],
        [0.0596],
        [0.0825],
        [0.0558],
        [0.0549],
        [0.1737],
        [0.0673],
        [0.0973],
        [0.0585],
        [0.1058],
        [0.0807],
        [0.0867],
        [0.0371],
        [0.0975],
        [0.1030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0399, 0.0937, 0.0596, 0.0825, 0.0558, 0.0549, 0.1737, 0.0673, 0.0973,
         0.0585, 0.1058, 0.0807, 0.0867, 0.0371, 0.0975, 0.1030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0596],
        [0.0413],
        [0.0289],
        [0.0261],
        [0.0331],
        [0.0350],
        [0.0236],
        [0.0270],
        [0.0334],
        [0.0360],
        [0.0449],
        [0.0143],
        [0.0075],
        [0.0208],
        [0.0461]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0596, 0.0413, 0.0289, 0.0261, 0.0331, 0.0350, 0.0236, 0.0270,
         0.0334, 0.0360, 0.0449, 0.0143, 0.0075, 0.0208, 0.0461]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0399, 0.0166],
        [0.0937, 0.0596],
        [0.0596, 0.0413],
        [0.0825, 0.0289],
        [0.0558, 0.0261],
        [0.0549, 0.0331],
        [0.1737, 0.0350],
        [0.0673, 0.0236],
        [0.0973, 0.0270],
        [0.0585, 0.0334],
        [0.1058, 0.0360],
        [0.0807, 0.0449],
        [0.0867, 0.0143],
        [0.0371, 0.0075],
        [0.0975, 0.0208],
        [0.1030, 0.0461]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0978],
        [0.0575],
        [0.0847],
        [0.0555],
        [0.0416],
        [0.0803],
        [0.0719],
        [0.0540],
        [0.1046],
        [0.0830],
        [0.0580],
        [0.0527],
        [0.0608],
        [0.0980],
        [0.0912],
        [0.1089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0978, 0.0575, 0.0847, 0.0555, 0.0416, 0.0803, 0.0719, 0.0540, 0.1046,
         0.0830, 0.0580, 0.0527, 0.0608, 0.0980, 0.0912, 0.1089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0243],
        [0.0133],
        [0.0132],
        [0.0144],
        [0.0137],
        [0.0404],
        [0.0237],
        [0.0255],
        [0.0273],
        [0.0395],
        [0.0333],
        [0.0370],
        [0.0150],
        [0.0264],
        [0.0227],
        [0.0359]], device='cuda:0', dtype=torch.float16)/tensor([[0.0243, 0.0133, 0.0132, 0.0144, 0.0137, 0.0404, 0.0237, 0.0255, 0.0273,
         0.0395, 0.0333, 0.0370, 0.0150, 0.0264, 0.0227, 0.0359]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0978, 0.0243],
        [0.0575, 0.0133],
        [0.0847, 0.0132],
        [0.0555, 0.0144],
        [0.0416, 0.0137],
        [0.0803, 0.0404],
        [0.0719, 0.0237],
        [0.0540, 0.0255],
        [0.1046, 0.0273],
        [0.0830, 0.0395],
        [0.0580, 0.0333],
        [0.0527, 0.0370],
        [0.0608, 0.0150],
        [0.0980, 0.0264],
        [0.0912, 0.0227],
        [0.1089, 0.0359]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1124],
        [0.0405],
        [0.0620],
        [0.0964],
        [0.0708],
        [0.0526],
        [0.0573],
        [0.0942],
        [0.0944],
        [0.0803],
        [0.0212],
        [0.0912],
        [0.1141],
        [0.0637],
        [0.0844],
        [0.0760]], device='cuda:0', dtype=torch.float16)/tensor([[0.1124, 0.0405, 0.0620, 0.0964, 0.0708, 0.0526, 0.0573, 0.0942, 0.0944,
         0.0803, 0.0212, 0.0912, 0.1141, 0.0637, 0.0844, 0.0760]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0267],
        [0.0187],
        [0.0074],
        [0.0341],
        [0.0186],
        [0.0277],
        [0.0309],
        [0.0418],
        [0.0453],
        [0.0433],
        [0.0060],
        [0.0323],
        [0.0225],
        [0.0401],
        [0.0384],
        [0.0205]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0187, 0.0074, 0.0341, 0.0186, 0.0277, 0.0309, 0.0418, 0.0453,
         0.0433, 0.0060, 0.0323, 0.0225, 0.0401, 0.0384, 0.0205]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1124, 0.0267],
        [0.0405, 0.0187],
        [0.0620, 0.0074],
        [0.0964, 0.0341],
        [0.0708, 0.0186],
        [0.0526, 0.0277],
        [0.0573, 0.0309],
        [0.0942, 0.0418],
        [0.0944, 0.0453],
        [0.0803, 0.0433],
        [0.0212, 0.0060],
        [0.0912, 0.0323],
        [0.1141, 0.0225],
        [0.0637, 0.0401],
        [0.0844, 0.0384],
        [0.0760, 0.0205]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0659],
        [0.1008],
        [0.0754],
        [0.0595],
        [0.0492],
        [0.0612],
        [0.0464],
        [0.0407],
        [0.0892],
        [0.1707],
        [0.0783],
        [0.0792],
        [0.0617],
        [0.1511],
        [0.0634],
        [0.0970]], device='cuda:0', dtype=torch.float16)/tensor([[0.0659, 0.1008, 0.0754, 0.0595, 0.0492, 0.0612, 0.0464, 0.0407, 0.0892,
         0.1707, 0.0783, 0.0792, 0.0617, 0.1511, 0.0634, 0.0970]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0151],
        [0.0365],
        [0.0440],
        [0.0285],
        [0.0106],
        [0.0165],
        [0.0331],
        [0.0081],
        [0.0287],
        [0.0445],
        [0.0157],
        [0.0247],
        [0.0395],
        [0.0291],
        [0.0141],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0151, 0.0365, 0.0440, 0.0285, 0.0106, 0.0165, 0.0331, 0.0081, 0.0287,
         0.0445, 0.0157, 0.0247, 0.0395, 0.0291, 0.0141, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0659, 0.0151],
        [0.1008, 0.0365],
        [0.0754, 0.0440],
        [0.0595, 0.0285],
        [0.0492, 0.0106],
        [0.0612, 0.0165],
        [0.0464, 0.0331],
        [0.0407, 0.0081],
        [0.0892, 0.0287],
        [0.1707, 0.0445],
        [0.0783, 0.0157],
        [0.0792, 0.0247],
        [0.0617, 0.0395],
        [0.1511, 0.0291],
        [0.0634, 0.0141],
        [0.0970, 0.0341]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0765],
        [0.1946],
        [0.0515],
        [0.0807],
        [0.0760],
        [0.0709],
        [0.0717],
        [0.1110],
        [0.0597],
        [0.0854],
        [0.0955],
        [0.0815],
        [0.0941],
        [0.0904],
        [0.0710],
        [0.0485]], device='cuda:0', dtype=torch.float16)/tensor([[0.0765, 0.1946, 0.0515, 0.0807, 0.0760, 0.0709, 0.0717, 0.1110, 0.0597,
         0.0854, 0.0955, 0.0815, 0.0941, 0.0904, 0.0710, 0.0485]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0192],
        [0.0589],
        [0.0225],
        [0.0177],
        [0.0427],
        [0.0338],
        [0.0248],
        [0.0301],
        [0.0249],
        [0.0206],
        [0.0255],
        [0.0309],
        [0.0544],
        [0.0181],
        [0.0160],
        [0.0228]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0589, 0.0225, 0.0177, 0.0427, 0.0338, 0.0248, 0.0301, 0.0249,
         0.0206, 0.0255, 0.0309, 0.0544, 0.0181, 0.0160, 0.0228]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0765, 0.0192],
        [0.1946, 0.0589],
        [0.0515, 0.0225],
        [0.0807, 0.0177],
        [0.0760, 0.0427],
        [0.0709, 0.0338],
        [0.0717, 0.0248],
        [0.1110, 0.0301],
        [0.0597, 0.0249],
        [0.0854, 0.0206],
        [0.0955, 0.0255],
        [0.0815, 0.0309],
        [0.0941, 0.0544],
        [0.0904, 0.0181],
        [0.0710, 0.0160],
        [0.0485, 0.0228]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0637],
        [0.0668],
        [0.0660],
        [0.0764],
        [0.0575],
        [0.1171],
        [0.1224],
        [0.0671],
        [0.0740],
        [0.0637],
        [0.0461],
        [0.0688],
        [0.0602],
        [0.1628],
        [0.0457],
        [0.1519]], device='cuda:0', dtype=torch.float16)/tensor([[0.0637, 0.0668, 0.0660, 0.0764, 0.0575, 0.1171, 0.1224, 0.0671, 0.0740,
         0.0637, 0.0461, 0.0688, 0.0602, 0.1628, 0.0457, 0.1519]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0303],
        [0.0352],
        [0.0230],
        [0.0165],
        [0.0296],
        [0.0212],
        [0.0437],
        [0.0345],
        [0.0432],
        [0.0387],
        [0.0248],
        [0.0365],
        [0.0282],
        [0.0800],
        [0.0254],
        [0.0471]], device='cuda:0', dtype=torch.float16)/tensor([[0.0303, 0.0352, 0.0230, 0.0165, 0.0296, 0.0212, 0.0437, 0.0345, 0.0432,
         0.0387, 0.0248, 0.0365, 0.0282, 0.0800, 0.0254, 0.0471]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0637, 0.0303],
        [0.0668, 0.0352],
        [0.0660, 0.0230],
        [0.0764, 0.0165],
        [0.0575, 0.0296],
        [0.1171, 0.0212],
        [0.1224, 0.0437],
        [0.0671, 0.0345],
        [0.0740, 0.0432],
        [0.0637, 0.0387],
        [0.0461, 0.0248],
        [0.0688, 0.0365],
        [0.0602, 0.0282],
        [0.1628, 0.0800],
        [0.0457, 0.0254],
        [0.1519, 0.0471]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0553],
        [0.0561],
        [0.0832],
        [0.0691],
        [0.0813],
        [0.0400],
        [0.0873],
        [0.1094],
        [0.0757],
        [0.0837],
        [0.0881],
        [0.1129],
        [0.1921],
        [0.0948],
        [0.0939],
        [0.0410]], device='cuda:0', dtype=torch.float16)/tensor([[0.0553, 0.0561, 0.0832, 0.0691, 0.0813, 0.0400, 0.0873, 0.1094, 0.0757,
         0.0837, 0.0881, 0.1129, 0.1921, 0.0948, 0.0939, 0.0410]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0274],
        [0.0398],
        [0.0169],
        [0.0083],
        [0.0283],
        [0.0148],
        [0.0406],
        [0.0254],
        [0.0316],
        [0.0428],
        [0.0166],
        [0.0220],
        [0.0422],
        [0.0473],
        [0.0188],
        [0.0054]], device='cuda:0', dtype=torch.float16)/tensor([[0.0274, 0.0398, 0.0169, 0.0083, 0.0283, 0.0148, 0.0406, 0.0254, 0.0316,
         0.0428, 0.0166, 0.0220, 0.0422, 0.0473, 0.0188, 0.0054]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0553, 0.0274],
        [0.0561, 0.0398],
        [0.0832, 0.0169],
        [0.0691, 0.0083],
        [0.0813, 0.0283],
        [0.0400, 0.0148],
        [0.0873, 0.0406],
        [0.1094, 0.0254],
        [0.0757, 0.0316],
        [0.0837, 0.0428],
        [0.0881, 0.0166],
        [0.1129, 0.0220],
        [0.1921, 0.0422],
        [0.0948, 0.0473],
        [0.0939, 0.0188],
        [0.0410, 0.0054]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0988],
        [0.0727],
        [0.1632],
        [0.0540],
        [0.0710],
        [0.0840],
        [0.0886],
        [0.1016],
        [0.0793],
        [0.0530],
        [0.0620],
        [0.0871],
        [0.1110],
        [0.1088],
        [0.0799],
        [0.0822]], device='cuda:0', dtype=torch.float16)/tensor([[0.0988, 0.0727, 0.1632, 0.0540, 0.0710, 0.0840, 0.0886, 0.1016, 0.0793,
         0.0530, 0.0620, 0.0871, 0.1110, 0.1088, 0.0799, 0.0822]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0264],
        [0.0200],
        [0.0796],
        [0.0184],
        [0.0161],
        [0.0221],
        [0.0173],
        [0.0188],
        [0.0481],
        [0.0102],
        [0.0368],
        [0.0349],
        [0.0421],
        [0.0376],
        [0.0199],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0264, 0.0200, 0.0796, 0.0184, 0.0161, 0.0221, 0.0173, 0.0188, 0.0481,
         0.0102, 0.0368, 0.0349, 0.0421, 0.0376, 0.0199, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0988, 0.0264],
        [0.0727, 0.0200],
        [0.1632, 0.0796],
        [0.0540, 0.0184],
        [0.0710, 0.0161],
        [0.0840, 0.0221],
        [0.0886, 0.0173],
        [0.1016, 0.0188],
        [0.0793, 0.0481],
        [0.0530, 0.0102],
        [0.0620, 0.0368],
        [0.0871, 0.0349],
        [0.1110, 0.0421],
        [0.1088, 0.0376],
        [0.0799, 0.0199],
        [0.0822, 0.0232]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0742],
        [0.0368],
        [0.0818],
        [0.0761],
        [0.0782],
        [0.1541],
        [0.0800],
        [0.0988],
        [0.0520],
        [0.0684],
        [0.1830],
        [0.1044],
        [0.0747],
        [0.0695],
        [0.0564],
        [0.0793]], device='cuda:0', dtype=torch.float16)/tensor([[0.0742, 0.0368, 0.0818, 0.0761, 0.0782, 0.1541, 0.0800, 0.0988, 0.0520,
         0.0684, 0.1830, 0.1044, 0.0747, 0.0695, 0.0564, 0.0793]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0416],
        [0.0126],
        [0.0270],
        [0.0145],
        [0.0222],
        [0.0470],
        [0.0463],
        [0.0229],
        [0.0293],
        [0.0250],
        [0.0899],
        [0.0206],
        [0.0460],
        [0.0352],
        [0.0175],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0416, 0.0126, 0.0270, 0.0145, 0.0222, 0.0470, 0.0463, 0.0229, 0.0293,
         0.0250, 0.0899, 0.0206, 0.0460, 0.0352, 0.0175, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0742, 0.0416],
        [0.0368, 0.0126],
        [0.0818, 0.0270],
        [0.0761, 0.0145],
        [0.0782, 0.0222],
        [0.1541, 0.0470],
        [0.0800, 0.0463],
        [0.0988, 0.0229],
        [0.0520, 0.0293],
        [0.0684, 0.0250],
        [0.1830, 0.0899],
        [0.1044, 0.0206],
        [0.0747, 0.0460],
        [0.0695, 0.0352],
        [0.0564, 0.0175],
        [0.0793, 0.0131]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0973],
        [0.0632],
        [0.1103],
        [0.0780],
        [0.0719],
        [0.0822],
        [0.0935],
        [0.0720]], device='cuda:0', dtype=torch.float16)/tensor([[0.0973, 0.0632, 0.1103, 0.0780, 0.0719, 0.0822, 0.0935, 0.0720]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0214],
        [0.0455],
        [0.0409],
        [0.0357],
        [0.0188],
        [0.0120],
        [0.0290],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0455, 0.0409, 0.0357, 0.0188, 0.0120, 0.0290, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0973, 0.0214],
        [0.0632, 0.0455],
        [0.1103, 0.0409],
        [0.0780, 0.0357],
        [0.0719, 0.0188],
        [0.0822, 0.0120],
        [0.0935, 0.0290],
        [0.0720, 0.0232]], device='cuda:0')
acc:  0.5
Time taken to execute the en SA task with prompt type identical_modal, variation 2 and batchsize 16: 0:03:23.517687
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_2']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA identical_modal 3 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 334.24it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0348],
        [0.0602],
        [0.0204],
        [0.0762],
        [0.0441],
        [0.0541],
        [0.0865],
        [0.0701],
        [0.0866],
        [0.0581],
        [0.0809],
        [0.0547],
        [0.0506],
        [0.0836],
        [0.0875],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0348, 0.0602, 0.0204, 0.0762, 0.0441, 0.0541, 0.0865, 0.0701, 0.0866,
         0.0581, 0.0809, 0.0547, 0.0506, 0.0836, 0.0875, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0345],
        [0.0136],
        [0.0252],
        [0.0558],
        [0.0451],
        [0.0463],
        [0.0396],
        [0.0314],
        [0.0664],
        [0.0277],
        [0.0660],
        [0.0228],
        [0.0407],
        [0.0420],
        [0.0298],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0345, 0.0136, 0.0252, 0.0558, 0.0451, 0.0463, 0.0396, 0.0314, 0.0664,
         0.0277, 0.0660, 0.0228, 0.0407, 0.0420, 0.0298, 0.0319]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0348, 0.0345],
        [0.0602, 0.0136],
        [0.0204, 0.0252],
        [0.0762, 0.0558],
        [0.0441, 0.0451],
        [0.0541, 0.0463],
        [0.0865, 0.0396],
        [0.0701, 0.0314],
        [0.0866, 0.0664],
        [0.0581, 0.0277],
        [0.0809, 0.0660],
        [0.0547, 0.0228],
        [0.0506, 0.0407],
        [0.0836, 0.0420],
        [0.0875, 0.0298],
        [0.0309, 0.0319]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0602],
        [0.0587],
        [0.0495],
        [0.0739],
        [0.0846],
        [0.0895],
        [0.0900],
        [0.0399],
        [0.0514],
        [0.0701],
        [0.1083],
        [0.0462],
        [0.0282],
        [0.0343],
        [0.0365],
        [0.0570]], device='cuda:0', dtype=torch.float16)/tensor([[0.0602, 0.0587, 0.0495, 0.0739, 0.0846, 0.0895, 0.0900, 0.0399, 0.0514,
         0.0701, 0.1083, 0.0462, 0.0282, 0.0343, 0.0365, 0.0570]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0561],
        [0.0144],
        [0.0213],
        [0.0323],
        [0.0577],
        [0.0479],
        [0.0224],
        [0.0123],
        [0.0369],
        [0.0765],
        [0.0455],
        [0.0528],
        [0.0142],
        [0.0308],
        [0.0160],
        [0.0640]], device='cuda:0', dtype=torch.float16)/tensor([[0.0561, 0.0144, 0.0213, 0.0323, 0.0577, 0.0479, 0.0224, 0.0123, 0.0369,
         0.0765, 0.0455, 0.0528, 0.0142, 0.0308, 0.0160, 0.0640]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0602, 0.0561],
        [0.0587, 0.0144],
        [0.0495, 0.0213],
        [0.0739, 0.0323],
        [0.0846, 0.0577],
        [0.0895, 0.0479],
        [0.0900, 0.0224],
        [0.0399, 0.0123],
        [0.0514, 0.0369],
        [0.0701, 0.0765],
        [0.1083, 0.0455],
        [0.0462, 0.0528],
        [0.0282, 0.0142],
        [0.0343, 0.0308],
        [0.0365, 0.0160],
        [0.0570, 0.0640]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0669],
        [0.0709],
        [0.0556],
        [0.0939],
        [0.0205],
        [0.0404],
        [0.0622],
        [0.0557],
        [0.0771],
        [0.0210],
        [0.0353],
        [0.0379],
        [0.0312],
        [0.0086],
        [0.0649],
        [0.0421]], device='cuda:0', dtype=torch.float16)/tensor([[0.0669, 0.0709, 0.0556, 0.0939, 0.0205, 0.0404, 0.0622, 0.0557, 0.0771,
         0.0210, 0.0353, 0.0379, 0.0312, 0.0086, 0.0649, 0.0421]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0384],
        [0.0484],
        [0.0094],
        [0.0417],
        [0.0061],
        [0.0159],
        [0.0281],
        [0.0503],
        [0.0221],
        [0.0091],
        [0.0261],
        [0.0263],
        [0.0057],
        [0.0055],
        [0.0443],
        [0.0470]], device='cuda:0', dtype=torch.float16)/tensor([[0.0384, 0.0484, 0.0094, 0.0417, 0.0061, 0.0159, 0.0281, 0.0503, 0.0221,
         0.0091, 0.0261, 0.0263, 0.0057, 0.0055, 0.0443, 0.0470]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0669, 0.0384],
        [0.0709, 0.0484],
        [0.0556, 0.0094],
        [0.0939, 0.0417],
        [0.0205, 0.0061],
        [0.0404, 0.0159],
        [0.0622, 0.0281],
        [0.0557, 0.0503],
        [0.0771, 0.0221],
        [0.0210, 0.0091],
        [0.0353, 0.0261],
        [0.0379, 0.0263],
        [0.0312, 0.0057],
        [0.0086, 0.0055],
        [0.0649, 0.0443],
        [0.0421, 0.0470]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0550],
        [0.0844],
        [0.0921],
        [0.0497],
        [0.0514],
        [0.0472],
        [0.0310],
        [0.0369],
        [0.0468],
        [0.0714],
        [0.0367],
        [0.0995],
        [0.0973],
        [0.1284],
        [0.0553],
        [0.0364]], device='cuda:0', dtype=torch.float16)/tensor([[0.0550, 0.0844, 0.0921, 0.0497, 0.0514, 0.0472, 0.0310, 0.0369, 0.0468,
         0.0714, 0.0367, 0.0995, 0.0973, 0.1284, 0.0553, 0.0364]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0246],
        [0.0320],
        [0.0988],
        [0.0446],
        [0.0509],
        [0.0273],
        [0.0242],
        [0.0251],
        [0.0212],
        [0.0356],
        [0.0164],
        [0.0242],
        [0.0452],
        [0.0917],
        [0.0327],
        [0.0436]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0320, 0.0988, 0.0446, 0.0509, 0.0273, 0.0242, 0.0251, 0.0212,
         0.0356, 0.0164, 0.0242, 0.0452, 0.0917, 0.0327, 0.0436]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0550, 0.0246],
        [0.0844, 0.0320],
        [0.0921, 0.0988],
        [0.0497, 0.0446],
        [0.0514, 0.0509],
        [0.0472, 0.0273],
        [0.0310, 0.0242],
        [0.0369, 0.0251],
        [0.0468, 0.0212],
        [0.0714, 0.0356],
        [0.0367, 0.0164],
        [0.0995, 0.0242],
        [0.0973, 0.0452],
        [0.1284, 0.0917],
        [0.0553, 0.0327],
        [0.0364, 0.0436]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0420],
        [0.0716],
        [0.0472],
        [0.0737],
        [0.0955],
        [0.0133],
        [0.0701],
        [0.0621],
        [0.0404],
        [0.0648],
        [0.0623],
        [0.0339],
        [0.0588],
        [0.0398],
        [0.0485],
        [0.0569]], device='cuda:0', dtype=torch.float16)/tensor([[0.0420, 0.0716, 0.0472, 0.0737, 0.0955, 0.0133, 0.0701, 0.0621, 0.0404,
         0.0648, 0.0623, 0.0339, 0.0588, 0.0398, 0.0485, 0.0569]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0458],
        [0.0448],
        [0.0305],
        [0.0332],
        [0.0338],
        [0.0079],
        [0.0639],
        [0.0417],
        [0.0326],
        [0.0321],
        [0.0323],
        [0.0199],
        [0.0407],
        [0.0131],
        [0.0242],
        [0.0305]], device='cuda:0', dtype=torch.float16)/tensor([[0.0458, 0.0448, 0.0305, 0.0332, 0.0338, 0.0079, 0.0639, 0.0417, 0.0326,
         0.0321, 0.0323, 0.0199, 0.0407, 0.0131, 0.0242, 0.0305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0420, 0.0458],
        [0.0716, 0.0448],
        [0.0472, 0.0305],
        [0.0737, 0.0332],
        [0.0955, 0.0338],
        [0.0133, 0.0079],
        [0.0701, 0.0639],
        [0.0621, 0.0417],
        [0.0404, 0.0326],
        [0.0648, 0.0321],
        [0.0623, 0.0323],
        [0.0339, 0.0199],
        [0.0588, 0.0407],
        [0.0398, 0.0131],
        [0.0485, 0.0242],
        [0.0569, 0.0305]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0501],
        [0.0605],
        [0.0518],
        [0.0414],
        [0.0740],
        [0.0499],
        [0.0351],
        [0.1147],
        [0.0436],
        [0.0535],
        [0.0415],
        [0.0421],
        [0.0583],
        [0.0659],
        [0.0488],
        [0.0961]], device='cuda:0', dtype=torch.float16)/tensor([[0.0501, 0.0605, 0.0518, 0.0414, 0.0740, 0.0499, 0.0351, 0.1147, 0.0436,
         0.0535, 0.0415, 0.0421, 0.0583, 0.0659, 0.0488, 0.0961]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0225],
        [0.0685],
        [0.0233],
        [0.0414],
        [0.0246],
        [0.0698],
        [0.0257],
        [0.0696],
        [0.0348],
        [0.0132],
        [0.0250],
        [0.0445],
        [0.0218],
        [0.0416],
        [0.0216],
        [0.0491]], device='cuda:0', dtype=torch.float16)/tensor([[0.0225, 0.0685, 0.0233, 0.0414, 0.0246, 0.0698, 0.0257, 0.0696, 0.0348,
         0.0132, 0.0250, 0.0445, 0.0218, 0.0416, 0.0216, 0.0491]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0501, 0.0225],
        [0.0605, 0.0685],
        [0.0518, 0.0233],
        [0.0414, 0.0414],
        [0.0740, 0.0246],
        [0.0499, 0.0698],
        [0.0351, 0.0257],
        [0.1147, 0.0696],
        [0.0436, 0.0348],
        [0.0535, 0.0132],
        [0.0415, 0.0250],
        [0.0421, 0.0445],
        [0.0583, 0.0218],
        [0.0659, 0.0416],
        [0.0488, 0.0216],
        [0.0961, 0.0491]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0445],
        [0.0646],
        [0.0360],
        [0.0443],
        [0.0875],
        [0.0322],
        [0.0807],
        [0.0248],
        [0.0612],
        [0.0684],
        [0.0418],
        [0.1332],
        [0.1323],
        [0.0340],
        [0.0642],
        [0.0510]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0646, 0.0360, 0.0443, 0.0875, 0.0322, 0.0807, 0.0248, 0.0612,
         0.0684, 0.0418, 0.1332, 0.1323, 0.0340, 0.0642, 0.0510]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0481],
        [0.0553],
        [0.0303],
        [0.0403],
        [0.0312],
        [0.0132],
        [0.0288],
        [0.0155],
        [0.0438],
        [0.0246],
        [0.0196],
        [0.0518],
        [0.0610],
        [0.0327],
        [0.0333],
        [0.0218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0481, 0.0553, 0.0303, 0.0403, 0.0312, 0.0132, 0.0288, 0.0155, 0.0438,
         0.0246, 0.0196, 0.0518, 0.0610, 0.0327, 0.0333, 0.0218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0445, 0.0481],
        [0.0646, 0.0553],
        [0.0360, 0.0303],
        [0.0443, 0.0403],
        [0.0875, 0.0312],
        [0.0322, 0.0132],
        [0.0807, 0.0288],
        [0.0248, 0.0155],
        [0.0612, 0.0438],
        [0.0684, 0.0246],
        [0.0418, 0.0196],
        [0.1332, 0.0518],
        [0.1323, 0.0610],
        [0.0340, 0.0327],
        [0.0642, 0.0333],
        [0.0510, 0.0218]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0434],
        [0.0324],
        [0.0477],
        [0.0715],
        [0.0489],
        [0.0815],
        [0.1298],
        [0.0228],
        [0.0306],
        [0.0783],
        [0.0651],
        [0.0273],
        [0.0705],
        [0.0259],
        [0.0398],
        [0.0544]], device='cuda:0', dtype=torch.float16)/tensor([[0.0434, 0.0324, 0.0477, 0.0715, 0.0489, 0.0815, 0.1298, 0.0228, 0.0306,
         0.0783, 0.0651, 0.0273, 0.0705, 0.0259, 0.0398, 0.0544]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0441],
        [0.0216],
        [0.0381],
        [0.0263],
        [0.0262],
        [0.0253],
        [0.0545],
        [0.0063],
        [0.0193],
        [0.0526],
        [0.0315],
        [0.0263],
        [0.0374],
        [0.0104],
        [0.0199],
        [0.0368]], device='cuda:0', dtype=torch.float16)/tensor([[0.0441, 0.0216, 0.0381, 0.0263, 0.0262, 0.0253, 0.0545, 0.0063, 0.0193,
         0.0526, 0.0315, 0.0263, 0.0374, 0.0104, 0.0199, 0.0368]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0434, 0.0441],
        [0.0324, 0.0216],
        [0.0477, 0.0381],
        [0.0715, 0.0263],
        [0.0489, 0.0262],
        [0.0815, 0.0253],
        [0.1298, 0.0545],
        [0.0228, 0.0063],
        [0.0306, 0.0193],
        [0.0783, 0.0526],
        [0.0651, 0.0315],
        [0.0273, 0.0263],
        [0.0705, 0.0374],
        [0.0259, 0.0104],
        [0.0398, 0.0199],
        [0.0544, 0.0368]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0528],
        [0.0494],
        [0.0235],
        [0.0662],
        [0.0498],
        [0.0479],
        [0.0699],
        [0.0737],
        [0.0331],
        [0.0509],
        [0.0815],
        [0.0592],
        [0.0309],
        [0.0627],
        [0.0457],
        [0.0400]], device='cuda:0', dtype=torch.float16)/tensor([[0.0528, 0.0494, 0.0235, 0.0662, 0.0498, 0.0479, 0.0699, 0.0737, 0.0331,
         0.0509, 0.0815, 0.0592, 0.0309, 0.0627, 0.0457, 0.0400]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0511],
        [0.0365],
        [0.0126],
        [0.0225],
        [0.0487],
        [0.0391],
        [0.0259],
        [0.0302],
        [0.0100],
        [0.0302],
        [0.0388],
        [0.0755],
        [0.0209],
        [0.0473],
        [0.0437],
        [0.0410]], device='cuda:0', dtype=torch.float16)/tensor([[0.0511, 0.0365, 0.0126, 0.0225, 0.0487, 0.0391, 0.0259, 0.0302, 0.0100,
         0.0302, 0.0388, 0.0755, 0.0209, 0.0473, 0.0437, 0.0410]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0528, 0.0511],
        [0.0494, 0.0365],
        [0.0235, 0.0126],
        [0.0662, 0.0225],
        [0.0498, 0.0487],
        [0.0479, 0.0391],
        [0.0699, 0.0259],
        [0.0737, 0.0302],
        [0.0331, 0.0100],
        [0.0509, 0.0302],
        [0.0815, 0.0388],
        [0.0592, 0.0755],
        [0.0309, 0.0209],
        [0.0627, 0.0473],
        [0.0457, 0.0437],
        [0.0400, 0.0410]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0499],
        [0.0344],
        [0.0275],
        [0.0570],
        [0.0556],
        [0.0314],
        [0.0228],
        [0.0377],
        [0.0466],
        [0.0205],
        [0.0774],
        [0.0455],
        [0.0884],
        [0.0431],
        [0.0842],
        [0.1211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0499, 0.0344, 0.0275, 0.0570, 0.0556, 0.0314, 0.0228, 0.0377, 0.0466,
         0.0205, 0.0774, 0.0455, 0.0884, 0.0431, 0.0842, 0.1211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0246],
        [0.0096],
        [0.0115],
        [0.0338],
        [0.0227],
        [0.0309],
        [0.0110],
        [0.0285],
        [0.0205],
        [0.0136],
        [0.0477],
        [0.0481],
        [0.0994],
        [0.0230],
        [0.0385],
        [0.1183]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0096, 0.0115, 0.0338, 0.0227, 0.0309, 0.0110, 0.0285, 0.0205,
         0.0136, 0.0477, 0.0481, 0.0994, 0.0230, 0.0385, 0.1183]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0499, 0.0246],
        [0.0344, 0.0096],
        [0.0275, 0.0115],
        [0.0570, 0.0338],
        [0.0556, 0.0227],
        [0.0314, 0.0309],
        [0.0228, 0.0110],
        [0.0377, 0.0285],
        [0.0466, 0.0205],
        [0.0205, 0.0136],
        [0.0774, 0.0477],
        [0.0455, 0.0481],
        [0.0884, 0.0994],
        [0.0431, 0.0230],
        [0.0842, 0.0385],
        [0.1211, 0.1183]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0389],
        [0.2035],
        [0.0389],
        [0.0767],
        [0.0699],
        [0.1190],
        [0.0617],
        [0.0453],
        [0.0482],
        [0.0535],
        [0.0469],
        [0.0722],
        [0.0514],
        [0.0619],
        [0.0357],
        [0.1088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0389, 0.2035, 0.0389, 0.0767, 0.0699, 0.1190, 0.0617, 0.0453, 0.0482,
         0.0535, 0.0469, 0.0722, 0.0514, 0.0619, 0.0357, 0.1088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0333],
        [0.0773],
        [0.0377],
        [0.0507],
        [0.0571],
        [0.0878],
        [0.0508],
        [0.0506],
        [0.0415],
        [0.0420],
        [0.0300],
        [0.0386],
        [0.0461],
        [0.0490],
        [0.0196],
        [0.1251]], device='cuda:0', dtype=torch.float16)/tensor([[0.0333, 0.0773, 0.0377, 0.0507, 0.0571, 0.0878, 0.0508, 0.0506, 0.0415,
         0.0420, 0.0300, 0.0386, 0.0461, 0.0490, 0.0196, 0.1251]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0389, 0.0333],
        [0.2035, 0.0773],
        [0.0389, 0.0377],
        [0.0767, 0.0507],
        [0.0699, 0.0571],
        [0.1190, 0.0878],
        [0.0617, 0.0508],
        [0.0453, 0.0506],
        [0.0482, 0.0415],
        [0.0535, 0.0420],
        [0.0469, 0.0300],
        [0.0722, 0.0386],
        [0.0514, 0.0461],
        [0.0619, 0.0490],
        [0.0357, 0.0196],
        [0.1088, 0.1251]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0299],
        [0.0608],
        [0.0460],
        [0.0341],
        [0.0337],
        [0.0795],
        [0.0668],
        [0.0315],
        [0.0644],
        [0.0575],
        [0.0927],
        [0.0399],
        [0.0408],
        [0.0556],
        [0.0363],
        [0.0362]], device='cuda:0', dtype=torch.float16)/tensor([[0.0299, 0.0608, 0.0460, 0.0341, 0.0337, 0.0795, 0.0668, 0.0315, 0.0644,
         0.0575, 0.0927, 0.0399, 0.0408, 0.0556, 0.0363, 0.0362]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0217],
        [0.0257],
        [0.0537],
        [0.0303],
        [0.0124],
        [0.0439],
        [0.0274],
        [0.0365],
        [0.0387],
        [0.0455],
        [0.0366],
        [0.0339],
        [0.0243],
        [0.0223],
        [0.0313],
        [0.0406]], device='cuda:0', dtype=torch.float16)/tensor([[0.0217, 0.0257, 0.0537, 0.0303, 0.0124, 0.0439, 0.0274, 0.0365, 0.0387,
         0.0455, 0.0366, 0.0339, 0.0243, 0.0223, 0.0313, 0.0406]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0299, 0.0217],
        [0.0608, 0.0257],
        [0.0460, 0.0537],
        [0.0341, 0.0303],
        [0.0337, 0.0124],
        [0.0795, 0.0439],
        [0.0668, 0.0274],
        [0.0315, 0.0365],
        [0.0644, 0.0387],
        [0.0575, 0.0455],
        [0.0927, 0.0366],
        [0.0399, 0.0339],
        [0.0408, 0.0243],
        [0.0556, 0.0223],
        [0.0363, 0.0313],
        [0.0362, 0.0406]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0488],
        [0.0323],
        [0.0362],
        [0.0591],
        [0.0504],
        [0.0511],
        [0.0544],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.0488, 0.0323, 0.0362, 0.0591, 0.0504, 0.0511, 0.0544, 0.0349]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0481],
        [0.0402],
        [0.0494],
        [0.0353],
        [0.0146],
        [0.0451],
        [0.0465],
        [0.0311]], device='cuda:0', dtype=torch.float16)/tensor([[0.0481, 0.0402, 0.0494, 0.0353, 0.0146, 0.0451, 0.0465, 0.0311]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0488, 0.0481],
        [0.0323, 0.0402],
        [0.0362, 0.0494],
        [0.0591, 0.0353],
        [0.0504, 0.0146],
        [0.0511, 0.0451],
        [0.0544, 0.0465],
        [0.0349, 0.0311]], device='cuda:0')
acc:  0.63
Time taken to execute the en SA task with prompt type identical_modal, variation 3 and batchsize 16: 0:03:24.959094
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_3']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA identical_modal 4 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 343.20it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0704],
        [0.0689],
        [0.0642],
        [0.0475],
        [0.1365],
        [0.0919],
        [0.0797],
        [0.0850],
        [0.0710],
        [0.0836],
        [0.0873],
        [0.0826],
        [0.0733],
        [0.0540],
        [0.0837],
        [0.0444]], device='cuda:0', dtype=torch.float16)/tensor([[0.0704, 0.0689, 0.0642, 0.0475, 0.1365, 0.0919, 0.0797, 0.0850, 0.0710,
         0.0836, 0.0873, 0.0826, 0.0733, 0.0540, 0.0837, 0.0444]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0646],
        [0.0323],
        [0.0168],
        [0.0997],
        [0.0560],
        [0.0520],
        [0.0351],
        [0.0792],
        [0.0243],
        [0.0955],
        [0.0826],
        [0.0442],
        [0.0448],
        [0.0423],
        [0.0825],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0646, 0.0323, 0.0168, 0.0997, 0.0560, 0.0520, 0.0351, 0.0792, 0.0243,
         0.0955, 0.0826, 0.0442, 0.0448, 0.0423, 0.0825, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0704, 0.0646],
        [0.0689, 0.0323],
        [0.0642, 0.0168],
        [0.0475, 0.0997],
        [0.1365, 0.0560],
        [0.0919, 0.0520],
        [0.0797, 0.0351],
        [0.0850, 0.0792],
        [0.0710, 0.0243],
        [0.0836, 0.0955],
        [0.0873, 0.0826],
        [0.0826, 0.0442],
        [0.0733, 0.0448],
        [0.0540, 0.0423],
        [0.0837, 0.0825],
        [0.0444, 0.0084]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0474],
        [0.0986],
        [0.0482],
        [0.0760],
        [0.0688],
        [0.0895],
        [0.0415],
        [0.0892],
        [0.0957],
        [0.0758],
        [0.0231],
        [0.0683],
        [0.0680],
        [0.0728],
        [0.0684],
        [0.0654]], device='cuda:0', dtype=torch.float16)/tensor([[0.0474, 0.0986, 0.0482, 0.0760, 0.0688, 0.0895, 0.0415, 0.0892, 0.0957,
         0.0758, 0.0231, 0.0683, 0.0680, 0.0728, 0.0684, 0.0654]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0129],
        [0.0511],
        [0.0349],
        [0.0235],
        [0.0477],
        [0.0514],
        [0.0859],
        [0.0292],
        [0.0366],
        [0.0649],
        [0.0111],
        [0.0315],
        [0.0347],
        [0.0652],
        [0.0220],
        [0.0372]], device='cuda:0', dtype=torch.float16)/tensor([[0.0129, 0.0511, 0.0349, 0.0235, 0.0477, 0.0514, 0.0859, 0.0292, 0.0366,
         0.0649, 0.0111, 0.0315, 0.0347, 0.0652, 0.0220, 0.0372]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0474, 0.0129],
        [0.0986, 0.0511],
        [0.0482, 0.0349],
        [0.0760, 0.0235],
        [0.0688, 0.0477],
        [0.0895, 0.0514],
        [0.0415, 0.0859],
        [0.0892, 0.0292],
        [0.0957, 0.0366],
        [0.0758, 0.0649],
        [0.0231, 0.0111],
        [0.0683, 0.0315],
        [0.0680, 0.0347],
        [0.0728, 0.0652],
        [0.0684, 0.0220],
        [0.0654, 0.0372]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0795],
        [0.1598],
        [0.0573],
        [0.0402],
        [0.0580],
        [0.0859],
        [0.0466],
        [0.0581],
        [0.0615],
        [0.0648],
        [0.0754],
        [0.0679],
        [0.0441],
        [0.0631],
        [0.0285],
        [0.0441]], device='cuda:0', dtype=torch.float16)/tensor([[0.0795, 0.1598, 0.0573, 0.0402, 0.0580, 0.0859, 0.0466, 0.0581, 0.0615,
         0.0648, 0.0754, 0.0679, 0.0441, 0.0631, 0.0285, 0.0441]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0587],
        [0.0503],
        [0.0195],
        [0.0694],
        [0.0165],
        [0.0311],
        [0.0399],
        [0.0266],
        [0.0834],
        [0.0723],
        [0.0665],
        [0.0717],
        [0.0187],
        [0.0229],
        [0.0301],
        [0.0130]], device='cuda:0', dtype=torch.float16)/tensor([[0.0587, 0.0503, 0.0195, 0.0694, 0.0165, 0.0311, 0.0399, 0.0266, 0.0834,
         0.0723, 0.0665, 0.0717, 0.0187, 0.0229, 0.0301, 0.0130]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0795, 0.0587],
        [0.1598, 0.0503],
        [0.0573, 0.0195],
        [0.0402, 0.0694],
        [0.0580, 0.0165],
        [0.0859, 0.0311],
        [0.0466, 0.0399],
        [0.0581, 0.0266],
        [0.0615, 0.0834],
        [0.0648, 0.0723],
        [0.0754, 0.0665],
        [0.0679, 0.0717],
        [0.0441, 0.0187],
        [0.0631, 0.0229],
        [0.0285, 0.0301],
        [0.0441, 0.0130]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0553],
        [0.1614],
        [0.1004],
        [0.1057],
        [0.0428],
        [0.0403],
        [0.0364],
        [0.0771],
        [0.0803],
        [0.0477],
        [0.0392],
        [0.0562],
        [0.1365],
        [0.0846],
        [0.0439],
        [0.0732]], device='cuda:0', dtype=torch.float16)/tensor([[0.0553, 0.1614, 0.1004, 0.1057, 0.0428, 0.0403, 0.0364, 0.0771, 0.0803,
         0.0477, 0.0392, 0.0562, 0.1365, 0.0846, 0.0439, 0.0732]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0380],
        [0.0705],
        [0.0210],
        [0.0223],
        [0.0673],
        [0.0358],
        [0.0096],
        [0.0332],
        [0.0348],
        [0.0169],
        [0.0312],
        [0.0253],
        [0.1333],
        [0.0406],
        [0.0378],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0705, 0.0210, 0.0223, 0.0673, 0.0358, 0.0096, 0.0332, 0.0348,
         0.0169, 0.0312, 0.0253, 0.1333, 0.0406, 0.0378, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0553, 0.0380],
        [0.1614, 0.0705],
        [0.1004, 0.0210],
        [0.1057, 0.0223],
        [0.0428, 0.0673],
        [0.0403, 0.0358],
        [0.0364, 0.0096],
        [0.0771, 0.0332],
        [0.0803, 0.0348],
        [0.0477, 0.0169],
        [0.0392, 0.0312],
        [0.0562, 0.0253],
        [0.1365, 0.1333],
        [0.0846, 0.0406],
        [0.0439, 0.0378],
        [0.0732, 0.0114]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0615],
        [0.0625],
        [0.0703],
        [0.0518],
        [0.0773],
        [0.1112],
        [0.0573],
        [0.0875],
        [0.0797],
        [0.0667],
        [0.0615],
        [0.0914],
        [0.0876],
        [0.0511],
        [0.0530],
        [0.0673]], device='cuda:0', dtype=torch.float16)/tensor([[0.0615, 0.0625, 0.0703, 0.0518, 0.0773, 0.1112, 0.0573, 0.0875, 0.0797,
         0.0667, 0.0615, 0.0914, 0.0876, 0.0511, 0.0530, 0.0673]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0543],
        [0.0742],
        [0.1007],
        [0.0569],
        [0.0536],
        [0.0204],
        [0.0385],
        [0.0687],
        [0.0687],
        [0.0410],
        [0.0730],
        [0.0752],
        [0.0305],
        [0.0343],
        [0.0630],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0543, 0.0742, 0.1007, 0.0569, 0.0536, 0.0204, 0.0385, 0.0687, 0.0687,
         0.0410, 0.0730, 0.0752, 0.0305, 0.0343, 0.0630, 0.0313]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0615, 0.0543],
        [0.0625, 0.0742],
        [0.0703, 0.1007],
        [0.0518, 0.0569],
        [0.0773, 0.0536],
        [0.1112, 0.0204],
        [0.0573, 0.0385],
        [0.0875, 0.0687],
        [0.0797, 0.0687],
        [0.0667, 0.0410],
        [0.0615, 0.0730],
        [0.0914, 0.0752],
        [0.0876, 0.0305],
        [0.0511, 0.0343],
        [0.0530, 0.0630],
        [0.0673, 0.0313]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0762],
        [0.0437],
        [0.0843],
        [0.0528],
        [0.0546],
        [0.0477],
        [0.0655],
        [0.0707],
        [0.0858],
        [0.0457],
        [0.0543],
        [0.0372],
        [0.0616],
        [0.2349],
        [0.0507],
        [0.0679]], device='cuda:0', dtype=torch.float16)/tensor([[0.0762, 0.0437, 0.0843, 0.0528, 0.0546, 0.0477, 0.0655, 0.0707, 0.0858,
         0.0457, 0.0543, 0.0372, 0.0616, 0.2349, 0.0507, 0.0679]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0488],
        [0.0607],
        [0.0247],
        [0.0247],
        [0.0421],
        [0.0462],
        [0.0239],
        [0.0316],
        [0.0220],
        [0.0355],
        [0.0468],
        [0.0752],
        [0.0440],
        [0.1010],
        [0.0672],
        [0.0350]], device='cuda:0', dtype=torch.float16)/tensor([[0.0488, 0.0607, 0.0247, 0.0247, 0.0421, 0.0462, 0.0239, 0.0316, 0.0220,
         0.0355, 0.0468, 0.0752, 0.0440, 0.1010, 0.0672, 0.0350]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0762, 0.0488],
        [0.0437, 0.0607],
        [0.0843, 0.0247],
        [0.0528, 0.0247],
        [0.0546, 0.0421],
        [0.0477, 0.0462],
        [0.0655, 0.0239],
        [0.0707, 0.0316],
        [0.0858, 0.0220],
        [0.0457, 0.0355],
        [0.0543, 0.0468],
        [0.0372, 0.0752],
        [0.0616, 0.0440],
        [0.2349, 0.1010],
        [0.0507, 0.0672],
        [0.0679, 0.0350]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0736],
        [0.1219],
        [0.0512],
        [0.0403],
        [0.0767],
        [0.0539],
        [0.0651],
        [0.0550],
        [0.0523],
        [0.0894],
        [0.0465],
        [0.0463],
        [0.0376],
        [0.0709],
        [0.1353],
        [0.0659]], device='cuda:0', dtype=torch.float16)/tensor([[0.0736, 0.1219, 0.0512, 0.0403, 0.0767, 0.0539, 0.0651, 0.0550, 0.0523,
         0.0894, 0.0465, 0.0463, 0.0376, 0.0709, 0.1353, 0.0659]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0751],
        [0.0972],
        [0.0334],
        [0.0397],
        [0.0298],
        [0.0630],
        [0.0210],
        [0.0568],
        [0.0156],
        [0.0538],
        [0.0411],
        [0.0558],
        [0.0262],
        [0.0539],
        [0.0370],
        [0.0674]], device='cuda:0', dtype=torch.float16)/tensor([[0.0751, 0.0972, 0.0334, 0.0397, 0.0298, 0.0630, 0.0210, 0.0568, 0.0156,
         0.0538, 0.0411, 0.0558, 0.0262, 0.0539, 0.0370, 0.0674]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0736, 0.0751],
        [0.1219, 0.0972],
        [0.0512, 0.0334],
        [0.0403, 0.0397],
        [0.0767, 0.0298],
        [0.0539, 0.0630],
        [0.0651, 0.0210],
        [0.0550, 0.0568],
        [0.0523, 0.0156],
        [0.0894, 0.0538],
        [0.0465, 0.0411],
        [0.0463, 0.0558],
        [0.0376, 0.0262],
        [0.0709, 0.0539],
        [0.1353, 0.0370],
        [0.0659, 0.0674]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0557],
        [0.0732],
        [0.0459],
        [0.0714],
        [0.0511],
        [0.0974],
        [0.0801],
        [0.0560],
        [0.1063],
        [0.0652],
        [0.0541],
        [0.0704],
        [0.0685],
        [0.0834],
        [0.0784],
        [0.0639]], device='cuda:0', dtype=torch.float16)/tensor([[0.0557, 0.0732, 0.0459, 0.0714, 0.0511, 0.0974, 0.0801, 0.0560, 0.1063,
         0.0652, 0.0541, 0.0704, 0.0685, 0.0834, 0.0784, 0.0639]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0421],
        [0.0437],
        [0.0384],
        [0.0423],
        [0.0495],
        [0.0391],
        [0.0390],
        [0.0485],
        [0.1376],
        [0.0154],
        [0.0818],
        [0.0410],
        [0.0224],
        [0.0400],
        [0.0373],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.0421, 0.0437, 0.0384, 0.0423, 0.0495, 0.0391, 0.0390, 0.0485, 0.1376,
         0.0154, 0.0818, 0.0410, 0.0224, 0.0400, 0.0373, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0557, 0.0421],
        [0.0732, 0.0437],
        [0.0459, 0.0384],
        [0.0714, 0.0423],
        [0.0511, 0.0495],
        [0.0974, 0.0391],
        [0.0801, 0.0390],
        [0.0560, 0.0485],
        [0.1063, 0.1376],
        [0.0652, 0.0154],
        [0.0541, 0.0818],
        [0.0704, 0.0410],
        [0.0685, 0.0224],
        [0.0834, 0.0400],
        [0.0784, 0.0373],
        [0.0639, 0.0388]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0721],
        [0.0521],
        [0.1078],
        [0.0587],
        [0.0486],
        [0.0862],
        [0.0556],
        [0.0435],
        [0.0355],
        [0.0489],
        [0.0888],
        [0.1072],
        [0.1431],
        [0.1616],
        [0.0479],
        [0.0766]], device='cuda:0', dtype=torch.float16)/tensor([[0.0721, 0.0521, 0.1078, 0.0587, 0.0486, 0.0862, 0.0556, 0.0435, 0.0355,
         0.0489, 0.0888, 0.1072, 0.1431, 0.1616, 0.0479, 0.0766]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0626],
        [0.0192],
        [0.0256],
        [0.0748],
        [0.0148],
        [0.0273],
        [0.0407],
        [0.0674],
        [0.0256],
        [0.0520],
        [0.0239],
        [0.1284],
        [0.0670],
        [0.1449],
        [0.0518],
        [0.0436]], device='cuda:0', dtype=torch.float16)/tensor([[0.0626, 0.0192, 0.0256, 0.0748, 0.0148, 0.0273, 0.0407, 0.0674, 0.0256,
         0.0520, 0.0239, 0.1284, 0.0670, 0.1449, 0.0518, 0.0436]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0721, 0.0626],
        [0.0521, 0.0192],
        [0.1078, 0.0256],
        [0.0587, 0.0748],
        [0.0486, 0.0148],
        [0.0862, 0.0273],
        [0.0556, 0.0407],
        [0.0435, 0.0674],
        [0.0355, 0.0256],
        [0.0489, 0.0520],
        [0.0888, 0.0239],
        [0.1072, 0.1284],
        [0.1431, 0.0670],
        [0.1616, 0.1449],
        [0.0479, 0.0518],
        [0.0766, 0.0436]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0479],
        [0.0463],
        [0.0587],
        [0.0539],
        [0.0703],
        [0.0645],
        [0.0345],
        [0.0427],
        [0.0519],
        [0.0578],
        [0.0586],
        [0.0522],
        [0.0186],
        [0.0855],
        [0.0738],
        [0.0635]], device='cuda:0', dtype=torch.float16)/tensor([[0.0479, 0.0463, 0.0587, 0.0539, 0.0703, 0.0645, 0.0345, 0.0427, 0.0519,
         0.0578, 0.0586, 0.0522, 0.0186, 0.0855, 0.0738, 0.0635]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0350],
        [0.0430],
        [0.0324],
        [0.0486],
        [0.0305],
        [0.0243],
        [0.0615],
        [0.0469],
        [0.0693],
        [0.0312],
        [0.0341],
        [0.0560],
        [0.0098],
        [0.0347],
        [0.0259],
        [0.0556]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.0430, 0.0324, 0.0486, 0.0305, 0.0243, 0.0615, 0.0469, 0.0693,
         0.0312, 0.0341, 0.0560, 0.0098, 0.0347, 0.0259, 0.0556]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0479, 0.0350],
        [0.0463, 0.0430],
        [0.0587, 0.0324],
        [0.0539, 0.0486],
        [0.0703, 0.0305],
        [0.0645, 0.0243],
        [0.0345, 0.0615],
        [0.0427, 0.0469],
        [0.0519, 0.0693],
        [0.0578, 0.0312],
        [0.0586, 0.0341],
        [0.0522, 0.0560],
        [0.0186, 0.0098],
        [0.0855, 0.0347],
        [0.0738, 0.0259],
        [0.0635, 0.0556]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0721],
        [0.0648],
        [0.1514],
        [0.1520],
        [0.0649],
        [0.0415],
        [0.0508],
        [0.1178],
        [0.0894],
        [0.0579],
        [0.1038],
        [0.0486],
        [0.0411],
        [0.0854],
        [0.0487],
        [0.0935]], device='cuda:0', dtype=torch.float16)/tensor([[0.0721, 0.0648, 0.1514, 0.1520, 0.0649, 0.0415, 0.0508, 0.1178, 0.0894,
         0.0579, 0.1038, 0.0486, 0.0411, 0.0854, 0.0487, 0.0935]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0270],
        [0.0643],
        [0.1000],
        [0.0390],
        [0.0105],
        [0.0545],
        [0.0222],
        [0.0495],
        [0.0509],
        [0.0317],
        [0.0314],
        [0.0206],
        [0.0374],
        [0.0329],
        [0.0630],
        [0.0520]], device='cuda:0', dtype=torch.float16)/tensor([[0.0270, 0.0643, 0.1000, 0.0390, 0.0105, 0.0545, 0.0222, 0.0495, 0.0509,
         0.0317, 0.0314, 0.0206, 0.0374, 0.0329, 0.0630, 0.0520]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0721, 0.0270],
        [0.0648, 0.0643],
        [0.1514, 0.1000],
        [0.1520, 0.0390],
        [0.0649, 0.0105],
        [0.0415, 0.0545],
        [0.0508, 0.0222],
        [0.1178, 0.0495],
        [0.0894, 0.0509],
        [0.0579, 0.0317],
        [0.1038, 0.0314],
        [0.0486, 0.0206],
        [0.0411, 0.0374],
        [0.0854, 0.0329],
        [0.0487, 0.0630],
        [0.0935, 0.0520]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0530],
        [0.0808],
        [0.1061],
        [0.0870],
        [0.0488],
        [0.0792],
        [0.0637],
        [0.0567],
        [0.0821],
        [0.0762],
        [0.0651],
        [0.0614],
        [0.0330],
        [0.0638],
        [0.0776],
        [0.0521]], device='cuda:0', dtype=torch.float16)/tensor([[0.0530, 0.0808, 0.1061, 0.0870, 0.0488, 0.0792, 0.0637, 0.0567, 0.0821,
         0.0762, 0.0651, 0.0614, 0.0330, 0.0638, 0.0776, 0.0521]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0446],
        [0.0304],
        [0.0546],
        [0.0524],
        [0.0254],
        [0.0346],
        [0.0207],
        [0.0276],
        [0.0239],
        [0.0383],
        [0.0693],
        [0.1012],
        [0.0159],
        [0.0240],
        [0.0297],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0446, 0.0304, 0.0546, 0.0524, 0.0254, 0.0346, 0.0207, 0.0276, 0.0239,
         0.0383, 0.0693, 0.1012, 0.0159, 0.0240, 0.0297, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0530, 0.0446],
        [0.0808, 0.0304],
        [0.1061, 0.0546],
        [0.0870, 0.0524],
        [0.0488, 0.0254],
        [0.0792, 0.0346],
        [0.0637, 0.0207],
        [0.0567, 0.0276],
        [0.0821, 0.0239],
        [0.0762, 0.0383],
        [0.0651, 0.0693],
        [0.0614, 0.1012],
        [0.0330, 0.0159],
        [0.0638, 0.0240],
        [0.0776, 0.0297],
        [0.0521, 0.0168]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0677],
        [0.0413],
        [0.0284],
        [0.0728],
        [0.0637],
        [0.0537],
        [0.0943],
        [0.0315]], device='cuda:0', dtype=torch.float16)/tensor([[0.0677, 0.0413, 0.0284, 0.0728, 0.0637, 0.0537, 0.0943, 0.0315]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0231],
        [0.0201],
        [0.0195],
        [0.0972],
        [0.0252],
        [0.0196],
        [0.0283],
        [0.0515]], device='cuda:0', dtype=torch.float16)/tensor([[0.0231, 0.0201, 0.0195, 0.0972, 0.0252, 0.0196, 0.0283, 0.0515]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0677, 0.0231],
        [0.0413, 0.0201],
        [0.0284, 0.0195],
        [0.0728, 0.0972],
        [0.0637, 0.0252],
        [0.0537, 0.0196],
        [0.0943, 0.0283],
        [0.0315, 0.0515]], device='cuda:0')
acc:  0.695
Time taken to execute the en SA task with prompt type identical_modal, variation 4 and batchsize 16: 0:03:25.024741
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_4']
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
----------- 42 en huggyllama/llama-7b SA identical_modal 5 200 16 --------------
Loading MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 347.00it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0712],
        [0.0687],
        [0.0492],
        [0.1415],
        [0.0897],
        [0.0999],
        [0.0723],
        [0.1008],
        [0.0573],
        [0.0974],
        [0.0939],
        [0.0776],
        [0.1018],
        [0.0653],
        [0.0421],
        [0.0990]], device='cuda:0', dtype=torch.float16)/tensor([[0.0712, 0.0687, 0.0492, 0.1415, 0.0897, 0.0999, 0.0723, 0.1008, 0.0573,
         0.0974, 0.0939, 0.0776, 0.1018, 0.0653, 0.0421, 0.0990]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0268],
        [0.0203],
        [0.0667],
        [0.0679],
        [0.0469],
        [0.0194],
        [0.0859],
        [0.0677],
        [0.0670],
        [0.0305],
        [0.0359],
        [0.0393],
        [0.1307],
        [0.0270],
        [0.0262],
        [0.0498]], device='cuda:0', dtype=torch.float16)/tensor([[0.0268, 0.0203, 0.0667, 0.0679, 0.0469, 0.0194, 0.0859, 0.0677, 0.0670,
         0.0305, 0.0359, 0.0393, 0.1307, 0.0270, 0.0262, 0.0498]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0712, 0.0268],
        [0.0687, 0.0203],
        [0.0492, 0.0667],
        [0.1415, 0.0679],
        [0.0897, 0.0469],
        [0.0999, 0.0194],
        [0.0723, 0.0859],
        [0.1008, 0.0677],
        [0.0573, 0.0670],
        [0.0974, 0.0305],
        [0.0939, 0.0359],
        [0.0776, 0.0393],
        [0.1018, 0.1307],
        [0.0653, 0.0270],
        [0.0421, 0.0262],
        [0.0990, 0.0498]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0502],
        [0.0599],
        [0.0823],
        [0.1117],
        [0.1050],
        [0.0610],
        [0.0638],
        [0.0527],
        [0.0828],
        [0.0615],
        [0.0575],
        [0.0552],
        [0.0901],
        [0.0479],
        [0.0593],
        [0.0316]], device='cuda:0', dtype=torch.float16)/tensor([[0.0502, 0.0599, 0.0823, 0.1117, 0.1050, 0.0610, 0.0638, 0.0527, 0.0828,
         0.0615, 0.0575, 0.0552, 0.0901, 0.0479, 0.0593, 0.0316]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0945],
        [0.0306],
        [0.0278],
        [0.1458],
        [0.0231],
        [0.0203],
        [0.0685],
        [0.0215],
        [0.0373],
        [0.0317],
        [0.0699],
        [0.0253],
        [0.0439],
        [0.0385],
        [0.0791],
        [0.0619]], device='cuda:0', dtype=torch.float16)/tensor([[0.0945, 0.0306, 0.0278, 0.1458, 0.0231, 0.0203, 0.0685, 0.0215, 0.0373,
         0.0317, 0.0699, 0.0253, 0.0439, 0.0385, 0.0791, 0.0619]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0502, 0.0945],
        [0.0599, 0.0306],
        [0.0823, 0.0278],
        [0.1117, 0.1458],
        [0.1050, 0.0231],
        [0.0610, 0.0203],
        [0.0638, 0.0685],
        [0.0527, 0.0215],
        [0.0828, 0.0373],
        [0.0615, 0.0317],
        [0.0575, 0.0699],
        [0.0552, 0.0253],
        [0.0901, 0.0439],
        [0.0479, 0.0385],
        [0.0593, 0.0791],
        [0.0316, 0.0619]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0629],
        [0.0911],
        [0.0997],
        [0.0594],
        [0.0625],
        [0.0603],
        [0.1075],
        [0.1552],
        [0.0893],
        [0.2593],
        [0.0881],
        [0.0661],
        [0.0504],
        [0.0953],
        [0.0845],
        [0.0671]], device='cuda:0', dtype=torch.float16)/tensor([[0.0629, 0.0911, 0.0997, 0.0594, 0.0625, 0.0603, 0.1075, 0.1552, 0.0893,
         0.2593, 0.0881, 0.0661, 0.0504, 0.0953, 0.0845, 0.0671]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0067],
        [0.0383],
        [0.0464],
        [0.1145],
        [0.0137],
        [0.0448],
        [0.0603],
        [0.1652],
        [0.0712],
        [0.0889],
        [0.0394],
        [0.0651],
        [0.0688],
        [0.0394],
        [0.0633],
        [0.0414]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0383, 0.0464, 0.1145, 0.0137, 0.0448, 0.0603, 0.1652, 0.0712,
         0.0889, 0.0394, 0.0651, 0.0688, 0.0394, 0.0633, 0.0414]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0629, 0.0067],
        [0.0911, 0.0383],
        [0.0997, 0.0464],
        [0.0594, 0.1145],
        [0.0625, 0.0137],
        [0.0603, 0.0448],
        [0.1075, 0.0603],
        [0.1552, 0.1652],
        [0.0893, 0.0712],
        [0.2593, 0.0889],
        [0.0881, 0.0394],
        [0.0661, 0.0651],
        [0.0504, 0.0688],
        [0.0953, 0.0394],
        [0.0845, 0.0633],
        [0.0671, 0.0414]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0721],
        [0.0685],
        [0.0793],
        [0.0425],
        [0.0283],
        [0.0737],
        [0.0839],
        [0.0508],
        [0.0840],
        [0.0825],
        [0.0886],
        [0.0189],
        [0.0362],
        [0.0612],
        [0.0378],
        [0.0688]], device='cuda:0', dtype=torch.float16)/tensor([[0.0721, 0.0685, 0.0793, 0.0425, 0.0283, 0.0737, 0.0839, 0.0508, 0.0840,
         0.0825, 0.0886, 0.0189, 0.0362, 0.0612, 0.0378, 0.0688]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0181],
        [0.0266],
        [0.0455],
        [0.0399],
        [0.0258],
        [0.1015],
        [0.0740],
        [0.0695],
        [0.0959],
        [0.0311],
        [0.0361],
        [0.0105],
        [0.0182],
        [0.0673],
        [0.0384],
        [0.0531]], device='cuda:0', dtype=torch.float16)/tensor([[0.0181, 0.0266, 0.0455, 0.0399, 0.0258, 0.1015, 0.0740, 0.0695, 0.0959,
         0.0311, 0.0361, 0.0105, 0.0182, 0.0673, 0.0384, 0.0531]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0721, 0.0181],
        [0.0685, 0.0266],
        [0.0793, 0.0455],
        [0.0425, 0.0399],
        [0.0283, 0.0258],
        [0.0737, 0.1015],
        [0.0839, 0.0740],
        [0.0508, 0.0695],
        [0.0840, 0.0959],
        [0.0825, 0.0311],
        [0.0886, 0.0361],
        [0.0189, 0.0105],
        [0.0362, 0.0182],
        [0.0612, 0.0673],
        [0.0378, 0.0384],
        [0.0688, 0.0531]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0632],
        [0.0694],
        [0.0751],
        [0.0828],
        [0.0688],
        [0.0420],
        [0.0720],
        [0.0505],
        [0.0862],
        [0.0798],
        [0.0607],
        [0.0561],
        [0.0302],
        [0.0917],
        [0.0745],
        [0.0701]], device='cuda:0', dtype=torch.float16)/tensor([[0.0632, 0.0694, 0.0751, 0.0828, 0.0688, 0.0420, 0.0720, 0.0505, 0.0862,
         0.0798, 0.0607, 0.0561, 0.0302, 0.0917, 0.0745, 0.0701]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0792],
        [0.0287],
        [0.0313],
        [0.0385],
        [0.0652],
        [0.0491],
        [0.0158],
        [0.0422],
        [0.0511],
        [0.0152],
        [0.0124],
        [0.0527],
        [0.0168],
        [0.0976],
        [0.0272],
        [0.0355]], device='cuda:0', dtype=torch.float16)/tensor([[0.0792, 0.0287, 0.0313, 0.0385, 0.0652, 0.0491, 0.0158, 0.0422, 0.0511,
         0.0152, 0.0124, 0.0527, 0.0168, 0.0976, 0.0272, 0.0355]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0632, 0.0792],
        [0.0694, 0.0287],
        [0.0751, 0.0313],
        [0.0828, 0.0385],
        [0.0688, 0.0652],
        [0.0420, 0.0491],
        [0.0720, 0.0158],
        [0.0505, 0.0422],
        [0.0862, 0.0511],
        [0.0798, 0.0152],
        [0.0607, 0.0124],
        [0.0561, 0.0527],
        [0.0302, 0.0168],
        [0.0917, 0.0976],
        [0.0745, 0.0272],
        [0.0701, 0.0355]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0534],
        [0.0828],
        [0.0742],
        [0.0654],
        [0.0930],
        [0.1711],
        [0.0625],
        [0.0413],
        [0.0582],
        [0.1379],
        [0.0603],
        [0.0733],
        [0.1011],
        [0.0439],
        [0.0762],
        [0.1327]], device='cuda:0', dtype=torch.float16)/tensor([[0.0534, 0.0828, 0.0742, 0.0654, 0.0930, 0.1711, 0.0625, 0.0413, 0.0582,
         0.1379, 0.0603, 0.0733, 0.1011, 0.0439, 0.0762, 0.1327]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0471],
        [0.0446],
        [0.0847],
        [0.0735],
        [0.0250],
        [0.0655],
        [0.0931],
        [0.0145],
        [0.0753],
        [0.0688],
        [0.0117],
        [0.0435],
        [0.0418],
        [0.0432],
        [0.0787],
        [0.1218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0471, 0.0446, 0.0847, 0.0735, 0.0250, 0.0655, 0.0931, 0.0145, 0.0753,
         0.0688, 0.0117, 0.0435, 0.0418, 0.0432, 0.0787, 0.1218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0534, 0.0471],
        [0.0828, 0.0446],
        [0.0742, 0.0847],
        [0.0654, 0.0735],
        [0.0930, 0.0250],
        [0.1711, 0.0655],
        [0.0625, 0.0931],
        [0.0413, 0.0145],
        [0.0582, 0.0753],
        [0.1379, 0.0688],
        [0.0603, 0.0117],
        [0.0733, 0.0435],
        [0.1011, 0.0418],
        [0.0439, 0.0432],
        [0.0762, 0.0787],
        [0.1327, 0.1218]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0351],
        [0.0768],
        [0.0609],
        [0.1011],
        [0.0518],
        [0.0565],
        [0.0834],
        [0.0782],
        [0.0586],
        [0.0856],
        [0.0457],
        [0.0627],
        [0.0528],
        [0.0634],
        [0.0635],
        [0.1019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0768, 0.0609, 0.1011, 0.0518, 0.0565, 0.0834, 0.0782, 0.0586,
         0.0856, 0.0457, 0.0627, 0.0528, 0.0634, 0.0635, 0.1019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0607],
        [0.0580],
        [0.0320],
        [0.0338],
        [0.0379],
        [0.0480],
        [0.0827],
        [0.0886],
        [0.0238],
        [0.0349],
        [0.0784],
        [0.0341],
        [0.0455],
        [0.0241],
        [0.0917],
        [0.0283]], device='cuda:0', dtype=torch.float16)/tensor([[0.0607, 0.0580, 0.0320, 0.0338, 0.0379, 0.0480, 0.0827, 0.0886, 0.0238,
         0.0349, 0.0784, 0.0341, 0.0455, 0.0241, 0.0917, 0.0283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0351, 0.0607],
        [0.0768, 0.0580],
        [0.0609, 0.0320],
        [0.1011, 0.0338],
        [0.0518, 0.0379],
        [0.0565, 0.0480],
        [0.0834, 0.0827],
        [0.0782, 0.0886],
        [0.0586, 0.0238],
        [0.0856, 0.0349],
        [0.0457, 0.0784],
        [0.0627, 0.0341],
        [0.0528, 0.0455],
        [0.0634, 0.0241],
        [0.0635, 0.0917],
        [0.1019, 0.0283]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0739],
        [0.0478],
        [0.0682],
        [0.0597],
        [0.0844],
        [0.0672],
        [0.0769],
        [0.0404],
        [0.1088],
        [0.0411],
        [0.0348],
        [0.1456],
        [0.0448],
        [0.0831],
        [0.0390],
        [0.0455]], device='cuda:0', dtype=torch.float16)/tensor([[0.0739, 0.0478, 0.0682, 0.0597, 0.0844, 0.0672, 0.0769, 0.0404, 0.1088,
         0.0411, 0.0348, 0.1456, 0.0448, 0.0831, 0.0390, 0.0455]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0466],
        [0.0542],
        [0.0320],
        [0.0259],
        [0.0204],
        [0.0225],
        [0.0421],
        [0.0672],
        [0.0300],
        [0.0118],
        [0.0073],
        [0.0480],
        [0.0313],
        [0.0831],
        [0.0614],
        [0.0626]], device='cuda:0', dtype=torch.float16)/tensor([[0.0466, 0.0542, 0.0320, 0.0259, 0.0204, 0.0225, 0.0421, 0.0672, 0.0300,
         0.0118, 0.0073, 0.0480, 0.0313, 0.0831, 0.0614, 0.0626]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0739, 0.0466],
        [0.0478, 0.0542],
        [0.0682, 0.0320],
        [0.0597, 0.0259],
        [0.0844, 0.0204],
        [0.0672, 0.0225],
        [0.0769, 0.0421],
        [0.0404, 0.0672],
        [0.1088, 0.0300],
        [0.0411, 0.0118],
        [0.0348, 0.0073],
        [0.1456, 0.0480],
        [0.0448, 0.0313],
        [0.0831, 0.0831],
        [0.0390, 0.0614],
        [0.0455, 0.0626]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0394],
        [0.0508],
        [0.0589],
        [0.0884],
        [0.0506],
        [0.0711],
        [0.1124],
        [0.0295],
        [0.0519],
        [0.0713],
        [0.1184],
        [0.0870],
        [0.0646],
        [0.0469],
        [0.0808],
        [0.0862]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0508, 0.0589, 0.0884, 0.0506, 0.0711, 0.1124, 0.0295, 0.0519,
         0.0713, 0.1184, 0.0870, 0.0646, 0.0469, 0.0808, 0.0862]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0649],
        [0.0704],
        [0.0768],
        [0.0798],
        [0.0365],
        [0.0405],
        [0.1388],
        [0.0475],
        [0.0612],
        [0.0460],
        [0.0509],
        [0.0325],
        [0.0672],
        [0.0200],
        [0.0367],
        [0.0356]], device='cuda:0', dtype=torch.float16)/tensor([[0.0649, 0.0704, 0.0768, 0.0798, 0.0365, 0.0405, 0.1388, 0.0475, 0.0612,
         0.0460, 0.0509, 0.0325, 0.0672, 0.0200, 0.0367, 0.0356]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0394, 0.0649],
        [0.0508, 0.0704],
        [0.0589, 0.0768],
        [0.0884, 0.0798],
        [0.0506, 0.0365],
        [0.0711, 0.0405],
        [0.1124, 0.1388],
        [0.0295, 0.0475],
        [0.0519, 0.0612],
        [0.0713, 0.0460],
        [0.1184, 0.0509],
        [0.0870, 0.0325],
        [0.0646, 0.0672],
        [0.0469, 0.0200],
        [0.0808, 0.0367],
        [0.0862, 0.0356]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0496],
        [0.0814],
        [0.0941],
        [0.0585],
        [0.0394],
        [0.0478],
        [0.0396],
        [0.0369],
        [0.0522],
        [0.1005],
        [0.0633],
        [0.0509],
        [0.0651],
        [0.0719],
        [0.0509],
        [0.0630]], device='cuda:0', dtype=torch.float16)/tensor([[0.0496, 0.0814, 0.0941, 0.0585, 0.0394, 0.0478, 0.0396, 0.0369, 0.0522,
         0.1005, 0.0633, 0.0509, 0.0651, 0.0719, 0.0509, 0.0630]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0492],
        [0.0975],
        [0.0278],
        [0.0367],
        [0.0083],
        [0.0648],
        [0.0328],
        [0.0250],
        [0.0510],
        [0.0446],
        [0.0233],
        [0.0456],
        [0.0726],
        [0.0423],
        [0.0944],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0492, 0.0975, 0.0278, 0.0367, 0.0083, 0.0648, 0.0328, 0.0250, 0.0510,
         0.0446, 0.0233, 0.0456, 0.0726, 0.0423, 0.0944, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0496, 0.0492],
        [0.0814, 0.0975],
        [0.0941, 0.0278],
        [0.0585, 0.0367],
        [0.0394, 0.0083],
        [0.0478, 0.0648],
        [0.0396, 0.0328],
        [0.0369, 0.0250],
        [0.0522, 0.0510],
        [0.1005, 0.0446],
        [0.0633, 0.0233],
        [0.0509, 0.0456],
        [0.0651, 0.0726],
        [0.0719, 0.0423],
        [0.0509, 0.0944],
        [0.0630, 0.0066]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0717],
        [0.0621],
        [0.0492],
        [0.1295],
        [0.0755],
        [0.0730],
        [0.0412],
        [0.0752],
        [0.1328],
        [0.0927],
        [0.0560],
        [0.0454],
        [0.0443],
        [0.0507],
        [0.1100],
        [0.0756]], device='cuda:0', dtype=torch.float16)/tensor([[0.0717, 0.0621, 0.0492, 0.1295, 0.0755, 0.0730, 0.0412, 0.0752, 0.1328,
         0.0927, 0.0560, 0.0454, 0.0443, 0.0507, 0.1100, 0.0756]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0524],
        [0.0848],
        [0.0139],
        [0.0496],
        [0.0862],
        [0.0394],
        [0.0409],
        [0.0246],
        [0.1328],
        [0.0508],
        [0.0214],
        [0.0362],
        [0.0179],
        [0.0492],
        [0.0462],
        [0.0357]], device='cuda:0', dtype=torch.float16)/tensor([[0.0524, 0.0848, 0.0139, 0.0496, 0.0862, 0.0394, 0.0409, 0.0246, 0.1328,
         0.0508, 0.0214, 0.0362, 0.0179, 0.0492, 0.0462, 0.0357]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0717, 0.0524],
        [0.0621, 0.0848],
        [0.0492, 0.0139],
        [0.1295, 0.0496],
        [0.0755, 0.0862],
        [0.0730, 0.0394],
        [0.0412, 0.0409],
        [0.0752, 0.0246],
        [0.1328, 0.1328],
        [0.0927, 0.0508],
        [0.0560, 0.0214],
        [0.0454, 0.0362],
        [0.0443, 0.0179],
        [0.0507, 0.0492],
        [0.1100, 0.0462],
        [0.0756, 0.0357]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0615],
        [0.1113],
        [0.0916],
        [0.1279],
        [0.0818],
        [0.1013],
        [0.1798],
        [0.0804],
        [0.0249],
        [0.0840],
        [0.0710],
        [0.0887],
        [0.0788],
        [0.0651],
        [0.0476],
        [0.0670]], device='cuda:0', dtype=torch.float16)/tensor([[0.0615, 0.1113, 0.0916, 0.1279, 0.0818, 0.1013, 0.1798, 0.0804, 0.0249,
         0.0840, 0.0710, 0.0887, 0.0788, 0.0651, 0.0476, 0.0670]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0256],
        [0.0494],
        [0.0967],
        [0.0586],
        [0.0787],
        [0.0375],
        [0.0612],
        [0.0804],
        [0.0134],
        [0.0765],
        [0.0843],
        [0.0311],
        [0.0505],
        [0.0472],
        [0.0737],
        [0.0629]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0494, 0.0967, 0.0586, 0.0787, 0.0375, 0.0612, 0.0804, 0.0134,
         0.0765, 0.0843, 0.0311, 0.0505, 0.0472, 0.0737, 0.0629]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0615, 0.0256],
        [0.1113, 0.0494],
        [0.0916, 0.0967],
        [0.1279, 0.0586],
        [0.0818, 0.0787],
        [0.1013, 0.0375],
        [0.1798, 0.0612],
        [0.0804, 0.0804],
        [0.0249, 0.0134],
        [0.0840, 0.0765],
        [0.0710, 0.0843],
        [0.0887, 0.0311],
        [0.0788, 0.0505],
        [0.0651, 0.0472],
        [0.0476, 0.0737],
        [0.0670, 0.0629]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([8, 1])
id: [4874] -> tensor([[0.0638],
        [0.0451],
        [0.0472],
        [0.0376],
        [0.0717],
        [0.0449],
        [0.0380],
        [0.0933]], device='cuda:0', dtype=torch.float16)/tensor([[0.0638, 0.0451, 0.0472, 0.0376, 0.0717, 0.0449, 0.0380, 0.0933]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([8, 1])
id: [694] -> tensor([[0.0478],
        [0.0523],
        [0.0451],
        [0.0443],
        [0.0274],
        [0.0542],
        [0.0781],
        [0.0622]], device='cuda:0', dtype=torch.float16)/tensor([[0.0478, 0.0523, 0.0451, 0.0443, 0.0274, 0.0542, 0.0781, 0.0622]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 8])
answers_probs: tensor([[0.0638, 0.0478],
        [0.0451, 0.0523],
        [0.0472, 0.0451],
        [0.0376, 0.0443],
        [0.0717, 0.0274],
        [0.0449, 0.0542],
        [0.0380, 0.0781],
        [0.0933, 0.0622]], device='cuda:0')
acc:  0.77
Time taken to execute the en SA task with prompt type identical_modal, variation 5 and batchsize 16: 0:03:25.608012
path ['42', 'en', 'llama', 'SA', 'identical_modal', 'prompt_id_5']
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI active 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:01,  1.99it/s]100%|██████████| 3/3 [00:00<00:00,  5.70it/s]100%|██████████| 3/3 [00:00<00:00,  4.80it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0652],
        [0.0368],
        [0.1567],
        [0.0347],
        [0.0188],
        [0.0581],
        [0.1674],
        [0.2161],
        [0.0413],
        [0.0480],
        [0.0442],
        [0.0572],
        [0.0626],
        [0.0316],
        [0.1727],
        [0.1483]], device='cuda:0', dtype=torch.float16)/tensor([[0.0652, 0.0368, 0.1567, 0.0347, 0.0188, 0.0581, 0.1674, 0.2161, 0.0413,
         0.0480, 0.0442, 0.0572, 0.0626, 0.0316, 0.1727, 0.1483]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0128],
        [0.0154],
        [0.0293],
        [0.0062],
        [0.0077],
        [0.0158],
        [0.0191],
        [0.0299],
        [0.0170],
        [0.0092],
        [0.0119],
        [0.0129],
        [0.0137],
        [0.0096],
        [0.0273],
        [0.0288]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0154, 0.0293, 0.0062, 0.0077, 0.0158, 0.0191, 0.0299, 0.0170,
         0.0092, 0.0119, 0.0129, 0.0137, 0.0096, 0.0273, 0.0288]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0116],
        [0.0269],
        [0.0292],
        [0.0083],
        [0.0115],
        [0.0164],
        [0.0248],
        [0.0248],
        [0.0228],
        [0.0067],
        [0.0198],
        [0.0076],
        [0.0119],
        [0.0092],
        [0.0280],
        [0.0371]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0269, 0.0292, 0.0083, 0.0115, 0.0164, 0.0248, 0.0248, 0.0228,
         0.0067, 0.0198, 0.0076, 0.0119, 0.0092, 0.0280, 0.0371]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0652, 0.0128, 0.0116],
        [0.0368, 0.0154, 0.0269],
        [0.1567, 0.0293, 0.0292],
        [0.0347, 0.0062, 0.0083],
        [0.0188, 0.0077, 0.0115],
        [0.0581, 0.0158, 0.0164],
        [0.1674, 0.0191, 0.0248],
        [0.2161, 0.0299, 0.0248],
        [0.0413, 0.0170, 0.0228],
        [0.0480, 0.0092, 0.0067],
        [0.0442, 0.0119, 0.0198],
        [0.0572, 0.0129, 0.0076],
        [0.0626, 0.0137, 0.0119],
        [0.0316, 0.0096, 0.0092],
        [0.1727, 0.0273, 0.0280],
        [0.1483, 0.0288, 0.0371]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0429],
        [0.0269],
        [0.0364],
        [0.0741],
        [0.0367],
        [0.0161],
        [0.1951],
        [0.1550],
        [0.0435],
        [0.0807],
        [0.0633],
        [0.0607],
        [0.1129],
        [0.2007],
        [0.2102],
        [0.0527]], device='cuda:0', dtype=torch.float16)/tensor([[0.0429, 0.0269, 0.0364, 0.0741, 0.0367, 0.0161, 0.1951, 0.1550, 0.0435,
         0.0807, 0.0633, 0.0607, 0.1129, 0.2007, 0.2102, 0.0527]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0146],
        [0.0067],
        [0.0139],
        [0.0139],
        [0.0109],
        [0.0057],
        [0.0449],
        [0.0390],
        [0.0094],
        [0.0128],
        [0.0168],
        [0.0111],
        [0.0220],
        [0.0305],
        [0.0404],
        [0.0071]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0067, 0.0139, 0.0139, 0.0109, 0.0057, 0.0449, 0.0390, 0.0094,
         0.0128, 0.0168, 0.0111, 0.0220, 0.0305, 0.0404, 0.0071]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0215],
        [0.0107],
        [0.0172],
        [0.0206],
        [0.0118],
        [0.0042],
        [0.0517],
        [0.0662],
        [0.0150],
        [0.0166],
        [0.0198],
        [0.0169],
        [0.0186],
        [0.0255],
        [0.0377],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0107, 0.0172, 0.0206, 0.0118, 0.0042, 0.0517, 0.0662, 0.0150,
         0.0166, 0.0198, 0.0169, 0.0186, 0.0255, 0.0377, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0429, 0.0146, 0.0215],
        [0.0269, 0.0067, 0.0107],
        [0.0364, 0.0139, 0.0172],
        [0.0741, 0.0139, 0.0206],
        [0.0367, 0.0109, 0.0118],
        [0.0161, 0.0057, 0.0042],
        [0.1951, 0.0449, 0.0517],
        [0.1550, 0.0390, 0.0662],
        [0.0435, 0.0094, 0.0150],
        [0.0807, 0.0128, 0.0166],
        [0.0633, 0.0168, 0.0198],
        [0.0607, 0.0111, 0.0169],
        [0.1129, 0.0220, 0.0186],
        [0.2007, 0.0305, 0.0255],
        [0.2102, 0.0404, 0.0377],
        [0.0527, 0.0071, 0.0089]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0220],
        [0.0435],
        [0.0343],
        [0.0617],
        [0.1212],
        [0.0287],
        [0.2003],
        [0.1323],
        [0.0167],
        [0.0551],
        [0.0575],
        [0.0473],
        [0.0270],
        [0.1661],
        [0.0433],
        [0.0649]], device='cuda:0', dtype=torch.float16)/tensor([[0.0220, 0.0435, 0.0343, 0.0617, 0.1212, 0.0287, 0.2003, 0.1323, 0.0167,
         0.0551, 0.0575, 0.0473, 0.0270, 0.1661, 0.0433, 0.0649]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0100],
        [0.0101],
        [0.0107],
        [0.0149],
        [0.0339],
        [0.0120],
        [0.0286],
        [0.0230],
        [0.0053],
        [0.0152],
        [0.0095],
        [0.0185],
        [0.0089],
        [0.0356],
        [0.0077],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0101, 0.0107, 0.0149, 0.0339, 0.0120, 0.0286, 0.0230, 0.0053,
         0.0152, 0.0095, 0.0185, 0.0089, 0.0356, 0.0077, 0.0088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0044],
        [0.0103],
        [0.0105],
        [0.0094],
        [0.0285],
        [0.0138],
        [0.0417],
        [0.0221],
        [0.0039],
        [0.0163],
        [0.0103],
        [0.0380],
        [0.0118],
        [0.0327],
        [0.0131],
        [0.0100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0103, 0.0105, 0.0094, 0.0285, 0.0138, 0.0417, 0.0221, 0.0039,
         0.0163, 0.0103, 0.0380, 0.0118, 0.0327, 0.0131, 0.0100]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0220, 0.0100, 0.0044],
        [0.0435, 0.0101, 0.0103],
        [0.0343, 0.0107, 0.0105],
        [0.0617, 0.0149, 0.0094],
        [0.1212, 0.0339, 0.0285],
        [0.0287, 0.0120, 0.0138],
        [0.2003, 0.0286, 0.0417],
        [0.1323, 0.0230, 0.0221],
        [0.0167, 0.0053, 0.0039],
        [0.0551, 0.0152, 0.0163],
        [0.0575, 0.0095, 0.0103],
        [0.0473, 0.0185, 0.0380],
        [0.0270, 0.0089, 0.0118],
        [0.1661, 0.0356, 0.0327],
        [0.0433, 0.0077, 0.0131],
        [0.0649, 0.0088, 0.0100]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1442],
        [0.1251],
        [0.0572],
        [0.0303],
        [0.0500],
        [0.0514],
        [0.0295],
        [0.1567],
        [0.1045],
        [0.1534],
        [0.0328],
        [0.0579],
        [0.0246],
        [0.0399],
        [0.0472],
        [0.0554]], device='cuda:0', dtype=torch.float16)/tensor([[0.1442, 0.1251, 0.0572, 0.0303, 0.0500, 0.0514, 0.0295, 0.1567, 0.1045,
         0.1534, 0.0328, 0.0579, 0.0246, 0.0399, 0.0472, 0.0554]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0269],
        [0.0246],
        [0.0158],
        [0.0103],
        [0.0119],
        [0.0132],
        [0.0091],
        [0.0410],
        [0.0220],
        [0.0251],
        [0.0104],
        [0.0109],
        [0.0072],
        [0.0141],
        [0.0118],
        [0.0117]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0246, 0.0158, 0.0103, 0.0119, 0.0132, 0.0091, 0.0410, 0.0220,
         0.0251, 0.0104, 0.0109, 0.0072, 0.0141, 0.0118, 0.0117]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0272],
        [0.0297],
        [0.0128],
        [0.0103],
        [0.0421],
        [0.0179],
        [0.0230],
        [0.0202],
        [0.0465],
        [0.0429],
        [0.0072],
        [0.0180],
        [0.0062],
        [0.0078],
        [0.0165],
        [0.0056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0272, 0.0297, 0.0128, 0.0103, 0.0421, 0.0179, 0.0230, 0.0202, 0.0465,
         0.0429, 0.0072, 0.0180, 0.0062, 0.0078, 0.0165, 0.0056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1442, 0.0269, 0.0272],
        [0.1251, 0.0246, 0.0297],
        [0.0572, 0.0158, 0.0128],
        [0.0303, 0.0103, 0.0103],
        [0.0500, 0.0119, 0.0421],
        [0.0514, 0.0132, 0.0179],
        [0.0295, 0.0091, 0.0230],
        [0.1567, 0.0410, 0.0202],
        [0.1045, 0.0220, 0.0465],
        [0.1534, 0.0251, 0.0429],
        [0.0328, 0.0104, 0.0072],
        [0.0579, 0.0109, 0.0180],
        [0.0246, 0.0072, 0.0062],
        [0.0399, 0.0141, 0.0078],
        [0.0472, 0.0118, 0.0165],
        [0.0554, 0.0117, 0.0056]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0568],
        [0.1740],
        [0.0553],
        [0.0207],
        [0.0213],
        [0.1744],
        [0.0410],
        [0.1504],
        [0.0316],
        [0.0758],
        [0.1886],
        [0.0618],
        [0.0373],
        [0.1893],
        [0.0306],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0568, 0.1740, 0.0553, 0.0207, 0.0213, 0.1744, 0.0410, 0.1504, 0.0316,
         0.0758, 0.1886, 0.0618, 0.0373, 0.1893, 0.0306, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0141],
        [0.0378],
        [0.0161],
        [0.0053],
        [0.0100],
        [0.0341],
        [0.0185],
        [0.0363],
        [0.0192],
        [0.0203],
        [0.0223],
        [0.0117],
        [0.0124],
        [0.0367],
        [0.0080],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0141, 0.0378, 0.0161, 0.0053, 0.0100, 0.0341, 0.0185, 0.0363, 0.0192,
         0.0203, 0.0223, 0.0117, 0.0124, 0.0367, 0.0080, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0154],
        [0.0312],
        [0.0144],
        [0.0039],
        [0.0067],
        [0.0646],
        [0.0157],
        [0.0314],
        [0.0115],
        [0.0144],
        [0.0229],
        [0.0223],
        [0.0070],
        [0.0406],
        [0.0081],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0312, 0.0144, 0.0039, 0.0067, 0.0646, 0.0157, 0.0314, 0.0115,
         0.0144, 0.0229, 0.0223, 0.0070, 0.0406, 0.0081, 0.0143]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0568, 0.0141, 0.0154],
        [0.1740, 0.0378, 0.0312],
        [0.0553, 0.0161, 0.0144],
        [0.0207, 0.0053, 0.0039],
        [0.0213, 0.0100, 0.0067],
        [0.1744, 0.0341, 0.0646],
        [0.0410, 0.0185, 0.0157],
        [0.1504, 0.0363, 0.0314],
        [0.0316, 0.0192, 0.0115],
        [0.0758, 0.0203, 0.0144],
        [0.1886, 0.0223, 0.0229],
        [0.0618, 0.0117, 0.0223],
        [0.0373, 0.0124, 0.0070],
        [0.1893, 0.0367, 0.0406],
        [0.0306, 0.0080, 0.0081],
        [0.0211, 0.0108, 0.0143]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0331],
        [0.0323],
        [0.0572],
        [0.0331],
        [0.0502],
        [0.0637],
        [0.0632],
        [0.0506],
        [0.0318],
        [0.0299],
        [0.0451],
        [0.2068],
        [0.0586],
        [0.0617],
        [0.0563],
        [0.0418]], device='cuda:0', dtype=torch.float16)/tensor([[0.0331, 0.0323, 0.0572, 0.0331, 0.0502, 0.0637, 0.0632, 0.0506, 0.0318,
         0.0299, 0.0451, 0.2068, 0.0586, 0.0617, 0.0563, 0.0418]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0095],
        [0.0054],
        [0.0104],
        [0.0088],
        [0.0102],
        [0.0171],
        [0.0122],
        [0.0181],
        [0.0141],
        [0.0114],
        [0.0139],
        [0.0503],
        [0.0101],
        [0.0128],
        [0.0140],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0054, 0.0104, 0.0088, 0.0102, 0.0171, 0.0122, 0.0181, 0.0141,
         0.0114, 0.0139, 0.0503, 0.0101, 0.0128, 0.0140, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0069],
        [0.0064],
        [0.0102],
        [0.0125],
        [0.0090],
        [0.0244],
        [0.0098],
        [0.0237],
        [0.0125],
        [0.0129],
        [0.0148],
        [0.0704],
        [0.0162],
        [0.0189],
        [0.0119],
        [0.0146]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0064, 0.0102, 0.0125, 0.0090, 0.0244, 0.0098, 0.0237, 0.0125,
         0.0129, 0.0148, 0.0704, 0.0162, 0.0189, 0.0119, 0.0146]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0331, 0.0095, 0.0069],
        [0.0323, 0.0054, 0.0064],
        [0.0572, 0.0104, 0.0102],
        [0.0331, 0.0088, 0.0125],
        [0.0502, 0.0102, 0.0090],
        [0.0637, 0.0171, 0.0244],
        [0.0632, 0.0122, 0.0098],
        [0.0506, 0.0181, 0.0237],
        [0.0318, 0.0141, 0.0125],
        [0.0299, 0.0114, 0.0129],
        [0.0451, 0.0139, 0.0148],
        [0.2068, 0.0503, 0.0704],
        [0.0586, 0.0101, 0.0162],
        [0.0617, 0.0128, 0.0189],
        [0.0563, 0.0140, 0.0119],
        [0.0418, 0.0178, 0.0146]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0449],
        [0.0336],
        [0.0505],
        [0.0113],
        [0.0249],
        [0.0258],
        [0.1445],
        [0.0386],
        [0.0428],
        [0.0754],
        [0.0804],
        [0.0444],
        [0.0362],
        [0.0590],
        [0.0251],
        [0.0306]], device='cuda:0', dtype=torch.float16)/tensor([[0.0449, 0.0336, 0.0505, 0.0113, 0.0249, 0.0258, 0.1445, 0.0386, 0.0428,
         0.0754, 0.0804, 0.0444, 0.0362, 0.0590, 0.0251, 0.0306]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0113],
        [0.0077],
        [0.0097],
        [0.0053],
        [0.0094],
        [0.0066],
        [0.0259],
        [0.0088],
        [0.0215],
        [0.0134],
        [0.0139],
        [0.0085],
        [0.0122],
        [0.0095],
        [0.0100],
        [0.0086]], device='cuda:0', dtype=torch.float16)/tensor([[0.0113, 0.0077, 0.0097, 0.0053, 0.0094, 0.0066, 0.0259, 0.0088, 0.0215,
         0.0134, 0.0139, 0.0085, 0.0122, 0.0095, 0.0100, 0.0086]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0115],
        [0.0065],
        [0.0198],
        [0.0075],
        [0.0046],
        [0.0042],
        [0.0281],
        [0.0133],
        [0.0252],
        [0.0188],
        [0.0291],
        [0.0149],
        [0.0216],
        [0.0127],
        [0.0068],
        [0.0045]], device='cuda:0', dtype=torch.float16)/tensor([[0.0115, 0.0065, 0.0198, 0.0075, 0.0046, 0.0042, 0.0281, 0.0133, 0.0252,
         0.0188, 0.0291, 0.0149, 0.0216, 0.0127, 0.0068, 0.0045]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0449, 0.0113, 0.0115],
        [0.0336, 0.0077, 0.0065],
        [0.0505, 0.0097, 0.0198],
        [0.0113, 0.0053, 0.0075],
        [0.0249, 0.0094, 0.0046],
        [0.0258, 0.0066, 0.0042],
        [0.1445, 0.0259, 0.0281],
        [0.0386, 0.0088, 0.0133],
        [0.0428, 0.0215, 0.0252],
        [0.0754, 0.0134, 0.0188],
        [0.0804, 0.0139, 0.0291],
        [0.0444, 0.0085, 0.0149],
        [0.0362, 0.0122, 0.0216],
        [0.0590, 0.0095, 0.0127],
        [0.0251, 0.0100, 0.0068],
        [0.0306, 0.0086, 0.0045]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0144],
        [0.0424],
        [0.0419],
        [0.0602],
        [0.0448],
        [0.1887],
        [0.0533],
        [0.0502],
        [0.0259],
        [0.0399],
        [0.0494],
        [0.0314],
        [0.0311],
        [0.1981],
        [0.0439],
        [0.0493]], device='cuda:0', dtype=torch.float16)/tensor([[0.0144, 0.0424, 0.0419, 0.0602, 0.0448, 0.1887, 0.0533, 0.0502, 0.0259,
         0.0399, 0.0494, 0.0314, 0.0311, 0.1981, 0.0439, 0.0493]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0079],
        [0.0100],
        [0.0092],
        [0.0113],
        [0.0114],
        [0.0392],
        [0.0117],
        [0.0099],
        [0.0097],
        [0.0094],
        [0.0110],
        [0.0076],
        [0.0079],
        [0.0474],
        [0.0118],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0079, 0.0100, 0.0092, 0.0113, 0.0114, 0.0392, 0.0117, 0.0099, 0.0097,
         0.0094, 0.0110, 0.0076, 0.0079, 0.0474, 0.0118, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0066],
        [0.0199],
        [0.0175],
        [0.0188],
        [0.0143],
        [0.0373],
        [0.0139],
        [0.0086],
        [0.0067],
        [0.0092],
        [0.0082],
        [0.0159],
        [0.0133],
        [0.0399],
        [0.0087],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0199, 0.0175, 0.0188, 0.0143, 0.0373, 0.0139, 0.0086, 0.0067,
         0.0092, 0.0082, 0.0159, 0.0133, 0.0399, 0.0087, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0144, 0.0079, 0.0066],
        [0.0424, 0.0100, 0.0199],
        [0.0419, 0.0092, 0.0175],
        [0.0602, 0.0113, 0.0188],
        [0.0448, 0.0114, 0.0143],
        [0.1887, 0.0392, 0.0373],
        [0.0533, 0.0117, 0.0139],
        [0.0502, 0.0099, 0.0086],
        [0.0259, 0.0097, 0.0067],
        [0.0399, 0.0094, 0.0092],
        [0.0494, 0.0110, 0.0082],
        [0.0314, 0.0076, 0.0159],
        [0.0311, 0.0079, 0.0133],
        [0.1981, 0.0474, 0.0399],
        [0.0439, 0.0118, 0.0087],
        [0.0493, 0.0108, 0.0136]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0607],
        [0.0294],
        [0.0544],
        [0.1899],
        [0.0659],
        [0.0487],
        [0.0380],
        [0.2140],
        [0.0563],
        [0.2620],
        [0.0486],
        [0.0502],
        [0.0393],
        [0.0352],
        [0.0295],
        [0.0404]], device='cuda:0', dtype=torch.float16)/tensor([[0.0607, 0.0294, 0.0544, 0.1899, 0.0659, 0.0487, 0.0380, 0.2140, 0.0563,
         0.2620, 0.0486, 0.0502, 0.0393, 0.0352, 0.0295, 0.0404]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0132],
        [0.0111],
        [0.0082],
        [0.0329],
        [0.0139],
        [0.0134],
        [0.0064],
        [0.0256],
        [0.0167],
        [0.0352],
        [0.0085],
        [0.0112],
        [0.0104],
        [0.0109],
        [0.0096],
        [0.0194]], device='cuda:0', dtype=torch.float16)/tensor([[0.0132, 0.0111, 0.0082, 0.0329, 0.0139, 0.0134, 0.0064, 0.0256, 0.0167,
         0.0352, 0.0085, 0.0112, 0.0104, 0.0109, 0.0096, 0.0194]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0115],
        [0.0132],
        [0.0182],
        [0.0400],
        [0.0159],
        [0.0195],
        [0.0056],
        [0.0287],
        [0.0123],
        [0.0558],
        [0.0119],
        [0.0080],
        [0.0069],
        [0.0147],
        [0.0075],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0115, 0.0132, 0.0182, 0.0400, 0.0159, 0.0195, 0.0056, 0.0287, 0.0123,
         0.0558, 0.0119, 0.0080, 0.0069, 0.0147, 0.0075, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0607, 0.0132, 0.0115],
        [0.0294, 0.0111, 0.0132],
        [0.0544, 0.0082, 0.0182],
        [0.1899, 0.0329, 0.0400],
        [0.0659, 0.0139, 0.0159],
        [0.0487, 0.0134, 0.0195],
        [0.0380, 0.0064, 0.0056],
        [0.2140, 0.0256, 0.0287],
        [0.0563, 0.0167, 0.0123],
        [0.2620, 0.0352, 0.0558],
        [0.0486, 0.0085, 0.0119],
        [0.0502, 0.0112, 0.0080],
        [0.0393, 0.0104, 0.0069],
        [0.0352, 0.0109, 0.0147],
        [0.0295, 0.0096, 0.0075],
        [0.0404, 0.0194, 0.0120]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0461],
        [0.0647],
        [0.2012],
        [0.1661],
        [0.0270],
        [0.1589],
        [0.0572],
        [0.0580],
        [0.0446],
        [0.0367],
        [0.0435],
        [0.0419],
        [0.2260],
        [0.0364],
        [0.0639],
        [0.0668]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0647, 0.2012, 0.1661, 0.0270, 0.1589, 0.0572, 0.0580, 0.0446,
         0.0367, 0.0435, 0.0419, 0.2260, 0.0364, 0.0639, 0.0668]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0107],
        [0.0106],
        [0.0334],
        [0.0271],
        [0.0062],
        [0.0396],
        [0.0107],
        [0.0127],
        [0.0147],
        [0.0087],
        [0.0084],
        [0.0140],
        [0.0388],
        [0.0120],
        [0.0168],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0106, 0.0334, 0.0271, 0.0062, 0.0396, 0.0107, 0.0127, 0.0147,
         0.0087, 0.0084, 0.0140, 0.0388, 0.0120, 0.0168, 0.0260]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0081],
        [0.0169],
        [0.0471],
        [0.0356],
        [0.0085],
        [0.0399],
        [0.0105],
        [0.0080],
        [0.0177],
        [0.0115],
        [0.0073],
        [0.0156],
        [0.0260],
        [0.0129],
        [0.0164],
        [0.0334]], device='cuda:0', dtype=torch.float16)/tensor([[0.0081, 0.0169, 0.0471, 0.0356, 0.0085, 0.0399, 0.0105, 0.0080, 0.0177,
         0.0115, 0.0073, 0.0156, 0.0260, 0.0129, 0.0164, 0.0334]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0461, 0.0107, 0.0081],
        [0.0647, 0.0106, 0.0169],
        [0.2012, 0.0334, 0.0471],
        [0.1661, 0.0271, 0.0356],
        [0.0270, 0.0062, 0.0085],
        [0.1589, 0.0396, 0.0399],
        [0.0572, 0.0107, 0.0105],
        [0.0580, 0.0127, 0.0080],
        [0.0446, 0.0147, 0.0177],
        [0.0367, 0.0087, 0.0115],
        [0.0435, 0.0084, 0.0073],
        [0.0419, 0.0140, 0.0156],
        [0.2260, 0.0388, 0.0260],
        [0.0364, 0.0120, 0.0129],
        [0.0639, 0.0168, 0.0164],
        [0.0668, 0.0260, 0.0334]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1508],
        [0.0623],
        [0.1538],
        [0.1936],
        [0.1281],
        [0.0428],
        [0.0425],
        [0.1775],
        [0.0413],
        [0.0528],
        [0.0469],
        [0.1567],
        [0.1046],
        [0.0393],
        [0.1619],
        [0.1554]], device='cuda:0', dtype=torch.float16)/tensor([[0.1508, 0.0623, 0.1538, 0.1936, 0.1281, 0.0428, 0.0425, 0.1775, 0.0413,
         0.0528, 0.0469, 0.1567, 0.1046, 0.0393, 0.1619, 0.1554]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0325],
        [0.0127],
        [0.0346],
        [0.0279],
        [0.0403],
        [0.0087],
        [0.0134],
        [0.0306],
        [0.0142],
        [0.0075],
        [0.0115],
        [0.0229],
        [0.0179],
        [0.0090],
        [0.0300],
        [0.0294]], device='cuda:0', dtype=torch.float16)/tensor([[0.0325, 0.0127, 0.0346, 0.0279, 0.0403, 0.0087, 0.0134, 0.0306, 0.0142,
         0.0075, 0.0115, 0.0229, 0.0179, 0.0090, 0.0300, 0.0294]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0346],
        [0.0174],
        [0.0602],
        [0.0345],
        [0.0341],
        [0.0070],
        [0.0123],
        [0.0301],
        [0.0175],
        [0.0107],
        [0.0098],
        [0.0288],
        [0.0286],
        [0.0069],
        [0.0505],
        [0.0336]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0174, 0.0602, 0.0345, 0.0341, 0.0070, 0.0123, 0.0301, 0.0175,
         0.0107, 0.0098, 0.0288, 0.0286, 0.0069, 0.0505, 0.0336]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1508, 0.0325, 0.0346],
        [0.0623, 0.0127, 0.0174],
        [0.1538, 0.0346, 0.0602],
        [0.1936, 0.0279, 0.0345],
        [0.1281, 0.0403, 0.0341],
        [0.0428, 0.0087, 0.0070],
        [0.0425, 0.0134, 0.0123],
        [0.1775, 0.0306, 0.0301],
        [0.0413, 0.0142, 0.0175],
        [0.0528, 0.0075, 0.0107],
        [0.0469, 0.0115, 0.0098],
        [0.1567, 0.0229, 0.0288],
        [0.1046, 0.0179, 0.0286],
        [0.0393, 0.0090, 0.0069],
        [0.1619, 0.0300, 0.0505],
        [0.1554, 0.0294, 0.0336]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0226],
        [0.0322],
        [0.0392],
        [0.0316],
        [0.0161],
        [0.0263],
        [0.0184],
        [0.2001],
        [0.0339],
        [0.1906],
        [0.0179],
        [0.0512],
        [0.1482],
        [0.1186],
        [0.0620],
        [0.2568]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0322, 0.0392, 0.0316, 0.0161, 0.0263, 0.0184, 0.2001, 0.0339,
         0.1906, 0.0179, 0.0512, 0.1482, 0.1186, 0.0620, 0.2568]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0056],
        [0.0142],
        [0.0125],
        [0.0086],
        [0.0040],
        [0.0122],
        [0.0056],
        [0.0243],
        [0.0092],
        [0.0410],
        [0.0081],
        [0.0154],
        [0.0317],
        [0.0255],
        [0.0221],
        [0.0391]], device='cuda:0', dtype=torch.float16)/tensor([[0.0056, 0.0142, 0.0125, 0.0086, 0.0040, 0.0122, 0.0056, 0.0243, 0.0092,
         0.0410, 0.0081, 0.0154, 0.0317, 0.0255, 0.0221, 0.0391]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0041],
        [0.0192],
        [0.0098],
        [0.0146],
        [0.0023],
        [0.0103],
        [0.0127],
        [0.0450],
        [0.0141],
        [0.0220],
        [0.0080],
        [0.0210],
        [0.0323],
        [0.0238],
        [0.0319],
        [0.0560]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0192, 0.0098, 0.0146, 0.0023, 0.0103, 0.0127, 0.0450, 0.0141,
         0.0220, 0.0080, 0.0210, 0.0323, 0.0238, 0.0319, 0.0560]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0226, 0.0056, 0.0041],
        [0.0322, 0.0142, 0.0192],
        [0.0392, 0.0125, 0.0098],
        [0.0316, 0.0086, 0.0146],
        [0.0161, 0.0040, 0.0023],
        [0.0263, 0.0122, 0.0103],
        [0.0184, 0.0056, 0.0127],
        [0.2001, 0.0243, 0.0450],
        [0.0339, 0.0092, 0.0141],
        [0.1906, 0.0410, 0.0220],
        [0.0179, 0.0081, 0.0080],
        [0.0512, 0.0154, 0.0210],
        [0.1482, 0.0317, 0.0323],
        [0.1186, 0.0255, 0.0238],
        [0.0620, 0.0221, 0.0319],
        [0.2568, 0.0391, 0.0560]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.1798],
        [0.0890],
        [0.1121],
        [0.0618],
        [0.1646],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.1798, 0.0890, 0.1121, 0.0618, 0.1646, 0.0349]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0220],
        [0.0165],
        [0.0288],
        [0.0124],
        [0.0486],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0220, 0.0165, 0.0288, 0.0124, 0.0486, 0.0095]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0276],
        [0.0146],
        [0.0345],
        [0.0136],
        [0.0301],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0276, 0.0146, 0.0345, 0.0136, 0.0301, 0.0074]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.1798, 0.0220, 0.0276],
        [0.0890, 0.0165, 0.0146],
        [0.1121, 0.0288, 0.0345],
        [0.0618, 0.0124, 0.0136],
        [0.1646, 0.0486, 0.0301],
        [0.0349, 0.0095, 0.0074]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type active, variation 0 and batchsize 16: 0:03:03.879223
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI active 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 307.98it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1107],
        [0.0230],
        [0.0173],
        [0.1194],
        [0.0502],
        [0.0426],
        [0.0899],
        [0.1074],
        [0.0715],
        [0.0453],
        [0.0995],
        [0.0425],
        [0.0112],
        [0.0416],
        [0.0495],
        [0.0305]], device='cuda:0', dtype=torch.float16)/tensor([[0.1107, 0.0230, 0.0173, 0.1194, 0.0502, 0.0426, 0.0899, 0.1074, 0.0715,
         0.0453, 0.0995, 0.0425, 0.0112, 0.0416, 0.0495, 0.0305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0180],
        [0.0087],
        [0.0051],
        [0.0152],
        [0.0219],
        [0.0058],
        [0.0287],
        [0.0135],
        [0.0138],
        [0.0185],
        [0.0163],
        [0.0125],
        [0.0058],
        [0.0162],
        [0.0266],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0087, 0.0051, 0.0152, 0.0219, 0.0058, 0.0287, 0.0135, 0.0138,
         0.0185, 0.0163, 0.0125, 0.0058, 0.0162, 0.0266, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0309],
        [0.0174],
        [0.0102],
        [0.0284],
        [0.0201],
        [0.0204],
        [0.0257],
        [0.0296],
        [0.0172],
        [0.0211],
        [0.0279],
        [0.0145],
        [0.0056],
        [0.0142],
        [0.0219],
        [0.0306]], device='cuda:0', dtype=torch.float16)/tensor([[0.0309, 0.0174, 0.0102, 0.0284, 0.0201, 0.0204, 0.0257, 0.0296, 0.0172,
         0.0211, 0.0279, 0.0145, 0.0056, 0.0142, 0.0219, 0.0306]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1107, 0.0180, 0.0309],
        [0.0230, 0.0087, 0.0174],
        [0.0173, 0.0051, 0.0102],
        [0.1194, 0.0152, 0.0284],
        [0.0502, 0.0219, 0.0201],
        [0.0426, 0.0058, 0.0204],
        [0.0899, 0.0287, 0.0257],
        [0.1074, 0.0135, 0.0296],
        [0.0715, 0.0138, 0.0172],
        [0.0453, 0.0185, 0.0211],
        [0.0995, 0.0163, 0.0279],
        [0.0425, 0.0125, 0.0145],
        [0.0112, 0.0058, 0.0056],
        [0.0416, 0.0162, 0.0142],
        [0.0495, 0.0266, 0.0219],
        [0.0305, 0.0127, 0.0306]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0483],
        [0.0328],
        [0.0109],
        [0.0364],
        [0.0495],
        [0.0632],
        [0.0635],
        [0.0524],
        [0.0231],
        [0.0601],
        [0.0394],
        [0.0654],
        [0.0583],
        [0.0908],
        [0.0931],
        [0.0834]], device='cuda:0', dtype=torch.float16)/tensor([[0.0483, 0.0328, 0.0109, 0.0364, 0.0495, 0.0632, 0.0635, 0.0524, 0.0231,
         0.0601, 0.0394, 0.0654, 0.0583, 0.0908, 0.0931, 0.0834]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0171],
        [0.0105],
        [0.0038],
        [0.0105],
        [0.0112],
        [0.0180],
        [0.0153],
        [0.0098],
        [0.0083],
        [0.0262],
        [0.0080],
        [0.0267],
        [0.0265],
        [0.0231],
        [0.0275],
        [0.0105]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0105, 0.0038, 0.0105, 0.0112, 0.0180, 0.0153, 0.0098, 0.0083,
         0.0262, 0.0080, 0.0267, 0.0265, 0.0231, 0.0275, 0.0105]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0159],
        [0.0158],
        [0.0051],
        [0.0225],
        [0.0183],
        [0.0318],
        [0.0116],
        [0.0169],
        [0.0107],
        [0.0477],
        [0.0184],
        [0.0392],
        [0.0395],
        [0.0416],
        [0.0330],
        [0.0287]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0158, 0.0051, 0.0225, 0.0183, 0.0318, 0.0116, 0.0169, 0.0107,
         0.0477, 0.0184, 0.0392, 0.0395, 0.0416, 0.0330, 0.0287]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0483, 0.0171, 0.0159],
        [0.0328, 0.0105, 0.0158],
        [0.0109, 0.0038, 0.0051],
        [0.0364, 0.0105, 0.0225],
        [0.0495, 0.0112, 0.0183],
        [0.0632, 0.0180, 0.0318],
        [0.0635, 0.0153, 0.0116],
        [0.0524, 0.0098, 0.0169],
        [0.0231, 0.0083, 0.0107],
        [0.0601, 0.0262, 0.0477],
        [0.0394, 0.0080, 0.0184],
        [0.0654, 0.0267, 0.0392],
        [0.0583, 0.0265, 0.0395],
        [0.0908, 0.0231, 0.0416],
        [0.0931, 0.0275, 0.0330],
        [0.0834, 0.0105, 0.0287]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0501],
        [0.1241],
        [0.0712],
        [0.0394],
        [0.0630],
        [0.0445],
        [0.0759],
        [0.0375],
        [0.0644],
        [0.0526],
        [0.0701],
        [0.0462],
        [0.0409],
        [0.1077],
        [0.0470],
        [0.1213]], device='cuda:0', dtype=torch.float16)/tensor([[0.0501, 0.1241, 0.0712, 0.0394, 0.0630, 0.0445, 0.0759, 0.0375, 0.0644,
         0.0526, 0.0701, 0.0462, 0.0409, 0.1077, 0.0470, 0.1213]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0148],
        [0.0384],
        [0.0219],
        [0.0094],
        [0.0183],
        [0.0227],
        [0.0091],
        [0.0103],
        [0.0086],
        [0.0099],
        [0.0228],
        [0.0091],
        [0.0164],
        [0.0179],
        [0.0171],
        [0.0170]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0384, 0.0219, 0.0094, 0.0183, 0.0227, 0.0091, 0.0103, 0.0086,
         0.0099, 0.0228, 0.0091, 0.0164, 0.0179, 0.0171, 0.0170]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0346],
        [0.0345],
        [0.0340],
        [0.0148],
        [0.0360],
        [0.0257],
        [0.0211],
        [0.0137],
        [0.0163],
        [0.0107],
        [0.0279],
        [0.0217],
        [0.0327],
        [0.0252],
        [0.0279],
        [0.0346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0345, 0.0340, 0.0148, 0.0360, 0.0257, 0.0211, 0.0137, 0.0163,
         0.0107, 0.0279, 0.0217, 0.0327, 0.0252, 0.0279, 0.0346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0501, 0.0148, 0.0346],
        [0.1241, 0.0384, 0.0345],
        [0.0712, 0.0219, 0.0340],
        [0.0394, 0.0094, 0.0148],
        [0.0630, 0.0183, 0.0360],
        [0.0445, 0.0227, 0.0257],
        [0.0759, 0.0091, 0.0211],
        [0.0375, 0.0103, 0.0137],
        [0.0644, 0.0086, 0.0163],
        [0.0526, 0.0099, 0.0107],
        [0.0701, 0.0228, 0.0279],
        [0.0462, 0.0091, 0.0217],
        [0.0409, 0.0164, 0.0327],
        [0.1077, 0.0179, 0.0252],
        [0.0470, 0.0171, 0.0279],
        [0.1213, 0.0170, 0.0346]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0939],
        [0.0502],
        [0.0099],
        [0.0427],
        [0.0635],
        [0.0388],
        [0.0750],
        [0.1394],
        [0.0253],
        [0.0395],
        [0.0626],
        [0.0647],
        [0.0184],
        [0.0828],
        [0.0475],
        [0.0952]], device='cuda:0', dtype=torch.float16)/tensor([[0.0939, 0.0502, 0.0099, 0.0427, 0.0635, 0.0388, 0.0750, 0.1394, 0.0253,
         0.0395, 0.0626, 0.0647, 0.0184, 0.0828, 0.0475, 0.0952]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0126],
        [0.0049],
        [0.0095],
        [0.0251],
        [0.0068],
        [0.0186],
        [0.0183],
        [0.0102],
        [0.0059],
        [0.0154],
        [0.0141],
        [0.0124],
        [0.0323],
        [0.0100],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0126, 0.0049, 0.0095, 0.0251, 0.0068, 0.0186, 0.0183, 0.0102,
         0.0059, 0.0154, 0.0141, 0.0124, 0.0323, 0.0100, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0332],
        [0.0192],
        [0.0121],
        [0.0340],
        [0.0325],
        [0.0104],
        [0.0142],
        [0.0334],
        [0.0164],
        [0.0179],
        [0.0232],
        [0.0270],
        [0.0113],
        [0.0295],
        [0.0203],
        [0.0551]], device='cuda:0', dtype=torch.float16)/tensor([[0.0332, 0.0192, 0.0121, 0.0340, 0.0325, 0.0104, 0.0142, 0.0334, 0.0164,
         0.0179, 0.0232, 0.0270, 0.0113, 0.0295, 0.0203, 0.0551]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0939, 0.0166, 0.0332],
        [0.0502, 0.0126, 0.0192],
        [0.0099, 0.0049, 0.0121],
        [0.0427, 0.0095, 0.0340],
        [0.0635, 0.0251, 0.0325],
        [0.0388, 0.0068, 0.0104],
        [0.0750, 0.0186, 0.0142],
        [0.1394, 0.0183, 0.0334],
        [0.0253, 0.0102, 0.0164],
        [0.0395, 0.0059, 0.0179],
        [0.0626, 0.0154, 0.0232],
        [0.0647, 0.0141, 0.0270],
        [0.0184, 0.0124, 0.0113],
        [0.0828, 0.0323, 0.0295],
        [0.0475, 0.0100, 0.0203],
        [0.0952, 0.0122, 0.0551]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0187],
        [0.0155],
        [0.0322],
        [0.0285],
        [0.0622],
        [0.0247],
        [0.0764],
        [0.0451],
        [0.0320],
        [0.0224],
        [0.0449],
        [0.0759],
        [0.0248],
        [0.0629],
        [0.0407],
        [0.0903]], device='cuda:0', dtype=torch.float16)/tensor([[0.0187, 0.0155, 0.0322, 0.0285, 0.0622, 0.0247, 0.0764, 0.0451, 0.0320,
         0.0224, 0.0449, 0.0759, 0.0248, 0.0629, 0.0407, 0.0903]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0122],
        [0.0137],
        [0.0084],
        [0.0094],
        [0.0052],
        [0.0206],
        [0.0058],
        [0.0044],
        [0.0121],
        [0.0137],
        [0.0129],
        [0.0087],
        [0.0135],
        [0.0151],
        [0.0258]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0122, 0.0137, 0.0084, 0.0094, 0.0052, 0.0206, 0.0058, 0.0044,
         0.0121, 0.0137, 0.0129, 0.0087, 0.0135, 0.0151, 0.0258]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0157],
        [0.0080],
        [0.0152],
        [0.0175],
        [0.0263],
        [0.0049],
        [0.0199],
        [0.0186],
        [0.0110],
        [0.0124],
        [0.0143],
        [0.0183],
        [0.0069],
        [0.0177],
        [0.0282],
        [0.0301]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0080, 0.0152, 0.0175, 0.0263, 0.0049, 0.0199, 0.0186, 0.0110,
         0.0124, 0.0143, 0.0183, 0.0069, 0.0177, 0.0282, 0.0301]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0187, 0.0080, 0.0157],
        [0.0155, 0.0122, 0.0080],
        [0.0322, 0.0137, 0.0152],
        [0.0285, 0.0084, 0.0175],
        [0.0622, 0.0094, 0.0263],
        [0.0247, 0.0052, 0.0049],
        [0.0764, 0.0206, 0.0199],
        [0.0451, 0.0058, 0.0186],
        [0.0320, 0.0044, 0.0110],
        [0.0224, 0.0121, 0.0124],
        [0.0449, 0.0137, 0.0143],
        [0.0759, 0.0129, 0.0183],
        [0.0248, 0.0087, 0.0069],
        [0.0629, 0.0135, 0.0177],
        [0.0407, 0.0151, 0.0282],
        [0.0903, 0.0258, 0.0301]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0444],
        [0.0563],
        [0.0111],
        [0.0364],
        [0.0402],
        [0.0811],
        [0.0576],
        [0.0438],
        [0.0253],
        [0.0292],
        [0.0419],
        [0.0808],
        [0.0371],
        [0.0408],
        [0.0322],
        [0.0091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0444, 0.0563, 0.0111, 0.0364, 0.0402, 0.0811, 0.0576, 0.0438, 0.0253,
         0.0292, 0.0419, 0.0808, 0.0371, 0.0408, 0.0322, 0.0091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0106],
        [0.0074],
        [0.0054],
        [0.0166],
        [0.0091],
        [0.0181],
        [0.0261],
        [0.0164],
        [0.0096],
        [0.0084],
        [0.0090],
        [0.0206],
        [0.0119],
        [0.0142],
        [0.0067],
        [0.0054]], device='cuda:0', dtype=torch.float16)/tensor([[0.0106, 0.0074, 0.0054, 0.0166, 0.0091, 0.0181, 0.0261, 0.0164, 0.0096,
         0.0084, 0.0090, 0.0206, 0.0119, 0.0142, 0.0067, 0.0054]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0229],
        [0.0181],
        [0.0080],
        [0.0138],
        [0.0168],
        [0.0282],
        [0.0297],
        [0.0090],
        [0.0184],
        [0.0229],
        [0.0259],
        [0.0391],
        [0.0208],
        [0.0147],
        [0.0086],
        [0.0035]], device='cuda:0', dtype=torch.float16)/tensor([[0.0229, 0.0181, 0.0080, 0.0138, 0.0168, 0.0282, 0.0297, 0.0090, 0.0184,
         0.0229, 0.0259, 0.0391, 0.0208, 0.0147, 0.0086, 0.0035]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0444, 0.0106, 0.0229],
        [0.0563, 0.0074, 0.0181],
        [0.0111, 0.0054, 0.0080],
        [0.0364, 0.0166, 0.0138],
        [0.0402, 0.0091, 0.0168],
        [0.0811, 0.0181, 0.0282],
        [0.0576, 0.0261, 0.0297],
        [0.0438, 0.0164, 0.0090],
        [0.0253, 0.0096, 0.0184],
        [0.0292, 0.0084, 0.0229],
        [0.0419, 0.0090, 0.0259],
        [0.0808, 0.0206, 0.0391],
        [0.0371, 0.0119, 0.0208],
        [0.0408, 0.0142, 0.0147],
        [0.0322, 0.0067, 0.0086],
        [0.0091, 0.0054, 0.0035]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0825],
        [0.0244],
        [0.0270],
        [0.0748],
        [0.0497],
        [0.0573],
        [0.1172],
        [0.0547],
        [0.0892],
        [0.0308],
        [0.0567],
        [0.0679],
        [0.1183],
        [0.1077],
        [0.1068],
        [0.0603]], device='cuda:0', dtype=torch.float16)/tensor([[0.0825, 0.0244, 0.0270, 0.0748, 0.0497, 0.0573, 0.1172, 0.0547, 0.0892,
         0.0308, 0.0567, 0.0679, 0.1183, 0.1077, 0.1068, 0.0603]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0183],
        [0.0110],
        [0.0142],
        [0.0299],
        [0.0095],
        [0.0082],
        [0.0351],
        [0.0180],
        [0.0285],
        [0.0092],
        [0.0168],
        [0.0166],
        [0.0096],
        [0.0460],
        [0.0157],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0183, 0.0110, 0.0142, 0.0299, 0.0095, 0.0082, 0.0351, 0.0180, 0.0285,
         0.0092, 0.0168, 0.0166, 0.0096, 0.0460, 0.0157, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0387],
        [0.0101],
        [0.0157],
        [0.0193],
        [0.0273],
        [0.0304],
        [0.0384],
        [0.0288],
        [0.0995],
        [0.0139],
        [0.0418],
        [0.0418],
        [0.0290],
        [0.0604],
        [0.0489],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0387, 0.0101, 0.0157, 0.0193, 0.0273, 0.0304, 0.0384, 0.0288, 0.0995,
         0.0139, 0.0418, 0.0418, 0.0290, 0.0604, 0.0489, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0825, 0.0183, 0.0387],
        [0.0244, 0.0110, 0.0101],
        [0.0270, 0.0142, 0.0157],
        [0.0748, 0.0299, 0.0193],
        [0.0497, 0.0095, 0.0273],
        [0.0573, 0.0082, 0.0304],
        [0.1172, 0.0351, 0.0384],
        [0.0547, 0.0180, 0.0288],
        [0.0892, 0.0285, 0.0995],
        [0.0308, 0.0092, 0.0139],
        [0.0567, 0.0168, 0.0418],
        [0.0679, 0.0166, 0.0418],
        [0.1183, 0.0096, 0.0290],
        [0.1077, 0.0460, 0.0604],
        [0.1068, 0.0157, 0.0489],
        [0.0603, 0.0209, 0.0180]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0366],
        [0.0889],
        [0.0108],
        [0.0931],
        [0.0541],
        [0.0760],
        [0.0375],
        [0.0147],
        [0.0953],
        [0.0352],
        [0.0114],
        [0.0364],
        [0.0451],
        [0.0456],
        [0.0994],
        [0.0931]], device='cuda:0', dtype=torch.float16)/tensor([[0.0366, 0.0889, 0.0108, 0.0931, 0.0541, 0.0760, 0.0375, 0.0147, 0.0953,
         0.0352, 0.0114, 0.0364, 0.0451, 0.0456, 0.0994, 0.0931]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0122],
        [0.0143],
        [0.0054],
        [0.0182],
        [0.0120],
        [0.0235],
        [0.0172],
        [0.0108],
        [0.0160],
        [0.0085],
        [0.0047],
        [0.0148],
        [0.0118],
        [0.0103],
        [0.0215],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0122, 0.0143, 0.0054, 0.0182, 0.0120, 0.0235, 0.0172, 0.0108, 0.0160,
         0.0085, 0.0047, 0.0148, 0.0118, 0.0103, 0.0215, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0191],
        [0.0239],
        [0.0054],
        [0.0373],
        [0.0264],
        [0.0438],
        [0.0241],
        [0.0092],
        [0.0295],
        [0.0106],
        [0.0068],
        [0.0229],
        [0.0169],
        [0.0143],
        [0.0524],
        [0.0257]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0239, 0.0054, 0.0373, 0.0264, 0.0438, 0.0241, 0.0092, 0.0295,
         0.0106, 0.0068, 0.0229, 0.0169, 0.0143, 0.0524, 0.0257]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0366, 0.0122, 0.0191],
        [0.0889, 0.0143, 0.0239],
        [0.0108, 0.0054, 0.0054],
        [0.0931, 0.0182, 0.0373],
        [0.0541, 0.0120, 0.0264],
        [0.0760, 0.0235, 0.0438],
        [0.0375, 0.0172, 0.0241],
        [0.0147, 0.0108, 0.0092],
        [0.0953, 0.0160, 0.0295],
        [0.0352, 0.0085, 0.0106],
        [0.0114, 0.0047, 0.0068],
        [0.0364, 0.0148, 0.0229],
        [0.0451, 0.0118, 0.0169],
        [0.0456, 0.0103, 0.0143],
        [0.0994, 0.0215, 0.0524],
        [0.0931, 0.0139, 0.0257]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0814],
        [0.1061],
        [0.0386],
        [0.1014],
        [0.0338],
        [0.0628],
        [0.0357],
        [0.0784],
        [0.1041],
        [0.0350],
        [0.1005],
        [0.0515],
        [0.0163],
        [0.0342],
        [0.0243],
        [0.1160]], device='cuda:0', dtype=torch.float16)/tensor([[0.0814, 0.1061, 0.0386, 0.1014, 0.0338, 0.0628, 0.0357, 0.0784, 0.1041,
         0.0350, 0.1005, 0.0515, 0.0163, 0.0342, 0.0243, 0.1160]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0265],
        [0.0342],
        [0.0077],
        [0.0204],
        [0.0056],
        [0.0116],
        [0.0114],
        [0.0204],
        [0.0296],
        [0.0095],
        [0.0210],
        [0.0170],
        [0.0049],
        [0.0103],
        [0.0111],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0265, 0.0342, 0.0077, 0.0204, 0.0056, 0.0116, 0.0114, 0.0204, 0.0296,
         0.0095, 0.0210, 0.0170, 0.0049, 0.0103, 0.0111, 0.0171]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0356],
        [0.0337],
        [0.0192],
        [0.0283],
        [0.0100],
        [0.0239],
        [0.0138],
        [0.0230],
        [0.0361],
        [0.0101],
        [0.0401],
        [0.0203],
        [0.0105],
        [0.0158],
        [0.0161],
        [0.0362]], device='cuda:0', dtype=torch.float16)/tensor([[0.0356, 0.0337, 0.0192, 0.0283, 0.0100, 0.0239, 0.0138, 0.0230, 0.0361,
         0.0101, 0.0401, 0.0203, 0.0105, 0.0158, 0.0161, 0.0362]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0814, 0.0265, 0.0356],
        [0.1061, 0.0342, 0.0337],
        [0.0386, 0.0077, 0.0192],
        [0.1014, 0.0204, 0.0283],
        [0.0338, 0.0056, 0.0100],
        [0.0628, 0.0116, 0.0239],
        [0.0357, 0.0114, 0.0138],
        [0.0784, 0.0204, 0.0230],
        [0.1041, 0.0296, 0.0361],
        [0.0350, 0.0095, 0.0101],
        [0.1005, 0.0210, 0.0401],
        [0.0515, 0.0170, 0.0203],
        [0.0163, 0.0049, 0.0105],
        [0.0342, 0.0103, 0.0158],
        [0.0243, 0.0111, 0.0161],
        [0.1160, 0.0171, 0.0362]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0733],
        [0.0357],
        [0.0208],
        [0.0478],
        [0.0613],
        [0.0819],
        [0.0511],
        [0.0670],
        [0.0550],
        [0.0383],
        [0.0355],
        [0.1019],
        [0.0382],
        [0.0255],
        [0.0630],
        [0.0996]], device='cuda:0', dtype=torch.float16)/tensor([[0.0733, 0.0357, 0.0208, 0.0478, 0.0613, 0.0819, 0.0511, 0.0670, 0.0550,
         0.0383, 0.0355, 0.1019, 0.0382, 0.0255, 0.0630, 0.0996]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0138],
        [0.0089],
        [0.0058],
        [0.0101],
        [0.0166],
        [0.0157],
        [0.0114],
        [0.0107],
        [0.0238],
        [0.0136],
        [0.0172],
        [0.0283],
        [0.0141],
        [0.0088],
        [0.0141],
        [0.0212]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0089, 0.0058, 0.0101, 0.0166, 0.0157, 0.0114, 0.0107, 0.0238,
         0.0136, 0.0172, 0.0283, 0.0141, 0.0088, 0.0141, 0.0212]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0262],
        [0.0087],
        [0.0161],
        [0.0198],
        [0.0179],
        [0.0274],
        [0.0135],
        [0.0366],
        [0.0489],
        [0.0182],
        [0.0164],
        [0.0324],
        [0.0371],
        [0.0192],
        [0.0159],
        [0.0590]], device='cuda:0', dtype=torch.float16)/tensor([[0.0262, 0.0087, 0.0161, 0.0198, 0.0179, 0.0274, 0.0135, 0.0366, 0.0489,
         0.0182, 0.0164, 0.0324, 0.0371, 0.0192, 0.0159, 0.0590]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0733, 0.0138, 0.0262],
        [0.0357, 0.0089, 0.0087],
        [0.0208, 0.0058, 0.0161],
        [0.0478, 0.0101, 0.0198],
        [0.0613, 0.0166, 0.0179],
        [0.0819, 0.0157, 0.0274],
        [0.0511, 0.0114, 0.0135],
        [0.0670, 0.0107, 0.0366],
        [0.0550, 0.0238, 0.0489],
        [0.0383, 0.0136, 0.0182],
        [0.0355, 0.0172, 0.0164],
        [0.1019, 0.0283, 0.0324],
        [0.0382, 0.0141, 0.0371],
        [0.0255, 0.0088, 0.0192],
        [0.0630, 0.0141, 0.0159],
        [0.0996, 0.0212, 0.0590]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0831],
        [0.0477],
        [0.1200],
        [0.0836],
        [0.0421],
        [0.0442],
        [0.0629],
        [0.0451],
        [0.0486],
        [0.0267],
        [0.0646],
        [0.0335],
        [0.0431],
        [0.0181],
        [0.0617],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0831, 0.0477, 0.1200, 0.0836, 0.0421, 0.0442, 0.0629, 0.0451, 0.0486,
         0.0267, 0.0646, 0.0335, 0.0431, 0.0181, 0.0617, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0126],
        [0.0191],
        [0.0303],
        [0.0184],
        [0.0190],
        [0.0137],
        [0.0175],
        [0.0170],
        [0.0186],
        [0.0074],
        [0.0142],
        [0.0153],
        [0.0114],
        [0.0070],
        [0.0128],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0126, 0.0191, 0.0303, 0.0184, 0.0190, 0.0137, 0.0175, 0.0170, 0.0186,
         0.0074, 0.0142, 0.0153, 0.0114, 0.0070, 0.0128, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0445],
        [0.0273],
        [0.0440],
        [0.0276],
        [0.0278],
        [0.0115],
        [0.0257],
        [0.0166],
        [0.0263],
        [0.0165],
        [0.0240],
        [0.0227],
        [0.0156],
        [0.0082],
        [0.0280],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0273, 0.0440, 0.0276, 0.0278, 0.0115, 0.0257, 0.0166, 0.0263,
         0.0165, 0.0240, 0.0227, 0.0156, 0.0082, 0.0280, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0831, 0.0126, 0.0445],
        [0.0477, 0.0191, 0.0273],
        [0.1200, 0.0303, 0.0440],
        [0.0836, 0.0184, 0.0276],
        [0.0421, 0.0190, 0.0278],
        [0.0442, 0.0137, 0.0115],
        [0.0629, 0.0175, 0.0257],
        [0.0451, 0.0170, 0.0166],
        [0.0486, 0.0186, 0.0263],
        [0.0267, 0.0074, 0.0165],
        [0.0646, 0.0142, 0.0240],
        [0.0335, 0.0153, 0.0227],
        [0.0431, 0.0114, 0.0156],
        [0.0181, 0.0070, 0.0082],
        [0.0617, 0.0128, 0.0280],
        [0.0293, 0.0161, 0.0243]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0301],
        [0.1169],
        [0.0567],
        [0.0988],
        [0.0457],
        [0.0464],
        [0.0415],
        [0.0323],
        [0.0428],
        [0.0331],
        [0.0797],
        [0.0283],
        [0.0358],
        [0.0534],
        [0.0571],
        [0.0497]], device='cuda:0', dtype=torch.float16)/tensor([[0.0301, 0.1169, 0.0567, 0.0988, 0.0457, 0.0464, 0.0415, 0.0323, 0.0428,
         0.0331, 0.0797, 0.0283, 0.0358, 0.0534, 0.0571, 0.0497]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0142],
        [0.0108],
        [0.0176],
        [0.0101],
        [0.0106],
        [0.0117],
        [0.0130],
        [0.0117],
        [0.0112],
        [0.0131],
        [0.0092],
        [0.0121],
        [0.0104],
        [0.0156],
        [0.0167]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0142, 0.0108, 0.0176, 0.0101, 0.0106, 0.0117, 0.0130, 0.0117,
         0.0112, 0.0131, 0.0092, 0.0121, 0.0104, 0.0156, 0.0167]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0101],
        [0.0430],
        [0.0196],
        [0.0332],
        [0.0538],
        [0.0167],
        [0.0180],
        [0.0108],
        [0.0233],
        [0.0123],
        [0.0461],
        [0.0322],
        [0.0134],
        [0.0220],
        [0.0156],
        [0.0187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0430, 0.0196, 0.0332, 0.0538, 0.0167, 0.0180, 0.0108, 0.0233,
         0.0123, 0.0461, 0.0322, 0.0134, 0.0220, 0.0156, 0.0187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0301, 0.0133, 0.0101],
        [0.1169, 0.0142, 0.0430],
        [0.0567, 0.0108, 0.0196],
        [0.0988, 0.0176, 0.0332],
        [0.0457, 0.0101, 0.0538],
        [0.0464, 0.0106, 0.0167],
        [0.0415, 0.0117, 0.0180],
        [0.0323, 0.0130, 0.0108],
        [0.0428, 0.0117, 0.0233],
        [0.0331, 0.0112, 0.0123],
        [0.0797, 0.0131, 0.0461],
        [0.0283, 0.0092, 0.0322],
        [0.0358, 0.0121, 0.0134],
        [0.0534, 0.0104, 0.0220],
        [0.0571, 0.0156, 0.0156],
        [0.0497, 0.0167, 0.0187]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0782],
        [0.1251],
        [0.0290],
        [0.0517],
        [0.0266],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0782, 0.1251, 0.0290, 0.0517, 0.0266, 0.0369]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0254],
        [0.0245],
        [0.0059],
        [0.0203],
        [0.0107],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0254, 0.0245, 0.0059, 0.0203, 0.0107, 0.0178]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0251],
        [0.0350],
        [0.0112],
        [0.0294],
        [0.0138],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0350, 0.0112, 0.0294, 0.0138, 0.0142]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0782, 0.0254, 0.0251],
        [0.1251, 0.0245, 0.0350],
        [0.0290, 0.0059, 0.0112],
        [0.0517, 0.0203, 0.0294],
        [0.0266, 0.0107, 0.0138],
        [0.0369, 0.0178, 0.0142]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the en NLI task with prompt type active, variation 1 and batchsize 16: 0:03:02.062129
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI active 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 299.56it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0521],
        [0.0296],
        [0.1242],
        [0.0208],
        [0.0557],
        [0.1170],
        [0.0497],
        [0.1276],
        [0.0572],
        [0.0638],
        [0.1268],
        [0.0567],
        [0.1084],
        [0.0327],
        [0.0753],
        [0.0473]], device='cuda:0', dtype=torch.float16)/tensor([[0.0521, 0.0296, 0.1242, 0.0208, 0.0557, 0.1170, 0.0497, 0.1276, 0.0572,
         0.0638, 0.1268, 0.0567, 0.1084, 0.0327, 0.0753, 0.0473]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0171],
        [0.0130],
        [0.0252],
        [0.0098],
        [0.0139],
        [0.0304],
        [0.0205],
        [0.0270],
        [0.0170],
        [0.0195],
        [0.0196],
        [0.0185],
        [0.0213],
        [0.0122],
        [0.0180],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0130, 0.0252, 0.0098, 0.0139, 0.0304, 0.0205, 0.0270, 0.0170,
         0.0195, 0.0196, 0.0185, 0.0213, 0.0122, 0.0180, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0294],
        [0.0139],
        [0.0388],
        [0.0058],
        [0.0258],
        [0.0367],
        [0.0299],
        [0.0366],
        [0.0168],
        [0.0262],
        [0.0387],
        [0.0214],
        [0.0357],
        [0.0109],
        [0.0271],
        [0.0229]], device='cuda:0', dtype=torch.float16)/tensor([[0.0294, 0.0139, 0.0388, 0.0058, 0.0258, 0.0367, 0.0299, 0.0366, 0.0168,
         0.0262, 0.0387, 0.0214, 0.0357, 0.0109, 0.0271, 0.0229]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0521, 0.0171, 0.0294],
        [0.0296, 0.0130, 0.0139],
        [0.1242, 0.0252, 0.0388],
        [0.0208, 0.0098, 0.0058],
        [0.0557, 0.0139, 0.0258],
        [0.1170, 0.0304, 0.0367],
        [0.0497, 0.0205, 0.0299],
        [0.1276, 0.0270, 0.0366],
        [0.0572, 0.0170, 0.0168],
        [0.0638, 0.0195, 0.0262],
        [0.1268, 0.0196, 0.0387],
        [0.0567, 0.0185, 0.0214],
        [0.1084, 0.0213, 0.0357],
        [0.0327, 0.0122, 0.0109],
        [0.0753, 0.0180, 0.0271],
        [0.0473, 0.0133, 0.0229]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0843],
        [0.0190],
        [0.0521],
        [0.0254],
        [0.0505],
        [0.0551],
        [0.1396],
        [0.0600],
        [0.0417],
        [0.0765],
        [0.0643],
        [0.0551],
        [0.0492],
        [0.0184],
        [0.0873],
        [0.0871]], device='cuda:0', dtype=torch.float16)/tensor([[0.0843, 0.0190, 0.0521, 0.0254, 0.0505, 0.0551, 0.1396, 0.0600, 0.0417,
         0.0765, 0.0643, 0.0551, 0.0492, 0.0184, 0.0873, 0.0871]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0156],
        [0.0111],
        [0.0229],
        [0.0183],
        [0.0172],
        [0.0195],
        [0.0332],
        [0.0207],
        [0.0147],
        [0.0102],
        [0.0270],
        [0.0224],
        [0.0181],
        [0.0076],
        [0.0251],
        [0.0251]], device='cuda:0', dtype=torch.float16)/tensor([[0.0156, 0.0111, 0.0229, 0.0183, 0.0172, 0.0195, 0.0332, 0.0207, 0.0147,
         0.0102, 0.0270, 0.0224, 0.0181, 0.0076, 0.0251, 0.0251]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0333],
        [0.0159],
        [0.0221],
        [0.0152],
        [0.0339],
        [0.0317],
        [0.0339],
        [0.0250],
        [0.0158],
        [0.0249],
        [0.0326],
        [0.0300],
        [0.0227],
        [0.0082],
        [0.0315],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0333, 0.0159, 0.0221, 0.0152, 0.0339, 0.0317, 0.0339, 0.0250, 0.0158,
         0.0249, 0.0326, 0.0300, 0.0227, 0.0082, 0.0315, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0843, 0.0156, 0.0333],
        [0.0190, 0.0111, 0.0159],
        [0.0521, 0.0229, 0.0221],
        [0.0254, 0.0183, 0.0152],
        [0.0505, 0.0172, 0.0339],
        [0.0551, 0.0195, 0.0317],
        [0.1396, 0.0332, 0.0339],
        [0.0600, 0.0207, 0.0250],
        [0.0417, 0.0147, 0.0158],
        [0.0765, 0.0102, 0.0249],
        [0.0643, 0.0270, 0.0326],
        [0.0551, 0.0224, 0.0300],
        [0.0492, 0.0181, 0.0227],
        [0.0184, 0.0076, 0.0082],
        [0.0873, 0.0251, 0.0315],
        [0.0871, 0.0251, 0.0159]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1093],
        [0.0837],
        [0.0511],
        [0.0511],
        [0.0993],
        [0.0831],
        [0.0586],
        [0.0617],
        [0.0537],
        [0.0646],
        [0.1066],
        [0.1082],
        [0.0562],
        [0.0343],
        [0.0527],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.1093, 0.0837, 0.0511, 0.0511, 0.0993, 0.0831, 0.0586, 0.0617, 0.0537,
         0.0646, 0.1066, 0.1082, 0.0562, 0.0343, 0.0527, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0253],
        [0.0285],
        [0.0289],
        [0.0236],
        [0.0169],
        [0.0187],
        [0.0196],
        [0.0145],
        [0.0214],
        [0.0177],
        [0.0287],
        [0.0249],
        [0.0108],
        [0.0099],
        [0.0165],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0285, 0.0289, 0.0236, 0.0169, 0.0187, 0.0196, 0.0145, 0.0214,
         0.0177, 0.0287, 0.0249, 0.0108, 0.0099, 0.0165, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0799],
        [0.0392],
        [0.0209],
        [0.0216],
        [0.0449],
        [0.0159],
        [0.0318],
        [0.0193],
        [0.0174],
        [0.0331],
        [0.0294],
        [0.0386],
        [0.0223],
        [0.0152],
        [0.0171],
        [0.0198]], device='cuda:0', dtype=torch.float16)/tensor([[0.0799, 0.0392, 0.0209, 0.0216, 0.0449, 0.0159, 0.0318, 0.0193, 0.0174,
         0.0331, 0.0294, 0.0386, 0.0223, 0.0152, 0.0171, 0.0198]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1093, 0.0253, 0.0799],
        [0.0837, 0.0285, 0.0392],
        [0.0511, 0.0289, 0.0209],
        [0.0511, 0.0236, 0.0216],
        [0.0993, 0.0169, 0.0449],
        [0.0831, 0.0187, 0.0159],
        [0.0586, 0.0196, 0.0318],
        [0.0617, 0.0145, 0.0193],
        [0.0537, 0.0214, 0.0174],
        [0.0646, 0.0177, 0.0331],
        [0.1066, 0.0287, 0.0294],
        [0.1082, 0.0249, 0.0386],
        [0.0562, 0.0108, 0.0223],
        [0.0343, 0.0099, 0.0152],
        [0.0527, 0.0165, 0.0171],
        [0.0227, 0.0096, 0.0198]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0573],
        [0.1152],
        [0.0934],
        [0.0193],
        [0.0892],
        [0.0444],
        [0.1222],
        [0.0936],
        [0.0436],
        [0.1272],
        [0.0506],
        [0.0293],
        [0.1070],
        [0.0811],
        [0.1058],
        [0.0939]], device='cuda:0', dtype=torch.float16)/tensor([[0.0573, 0.1152, 0.0934, 0.0193, 0.0892, 0.0444, 0.1222, 0.0936, 0.0436,
         0.1272, 0.0506, 0.0293, 0.1070, 0.0811, 0.1058, 0.0939]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0192],
        [0.0194],
        [0.0191],
        [0.0095],
        [0.0314],
        [0.0162],
        [0.0266],
        [0.0202],
        [0.0131],
        [0.0341],
        [0.0124],
        [0.0150],
        [0.0262],
        [0.0227],
        [0.0208],
        [0.0220]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0194, 0.0191, 0.0095, 0.0314, 0.0162, 0.0266, 0.0202, 0.0131,
         0.0341, 0.0124, 0.0150, 0.0262, 0.0227, 0.0208, 0.0220]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0195],
        [0.0370],
        [0.0372],
        [0.0082],
        [0.0567],
        [0.0253],
        [0.0388],
        [0.0378],
        [0.0263],
        [0.0372],
        [0.0540],
        [0.0397],
        [0.0505],
        [0.0377],
        [0.0489],
        [0.0253]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0370, 0.0372, 0.0082, 0.0567, 0.0253, 0.0388, 0.0378, 0.0263,
         0.0372, 0.0540, 0.0397, 0.0505, 0.0377, 0.0489, 0.0253]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0573, 0.0192, 0.0195],
        [0.1152, 0.0194, 0.0370],
        [0.0934, 0.0191, 0.0372],
        [0.0193, 0.0095, 0.0082],
        [0.0892, 0.0314, 0.0567],
        [0.0444, 0.0162, 0.0253],
        [0.1222, 0.0266, 0.0388],
        [0.0936, 0.0202, 0.0378],
        [0.0436, 0.0131, 0.0263],
        [0.1272, 0.0341, 0.0372],
        [0.0506, 0.0124, 0.0540],
        [0.0293, 0.0150, 0.0397],
        [0.1070, 0.0262, 0.0505],
        [0.0811, 0.0227, 0.0377],
        [0.1058, 0.0208, 0.0489],
        [0.0939, 0.0220, 0.0253]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1156],
        [0.0648],
        [0.0372],
        [0.0464],
        [0.1355],
        [0.0872],
        [0.0327],
        [0.0333],
        [0.0814],
        [0.0210],
        [0.0712],
        [0.0383],
        [0.1268],
        [0.1375],
        [0.0565],
        [0.0500]], device='cuda:0', dtype=torch.float16)/tensor([[0.1156, 0.0648, 0.0372, 0.0464, 0.1355, 0.0872, 0.0327, 0.0333, 0.0814,
         0.0210, 0.0712, 0.0383, 0.1268, 0.1375, 0.0565, 0.0500]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0316],
        [0.0231],
        [0.0173],
        [0.0127],
        [0.0282],
        [0.0161],
        [0.0088],
        [0.0188],
        [0.0347],
        [0.0229],
        [0.0240],
        [0.0108],
        [0.0308],
        [0.0151],
        [0.0142],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0316, 0.0231, 0.0173, 0.0127, 0.0282, 0.0161, 0.0088, 0.0188, 0.0347,
         0.0229, 0.0240, 0.0108, 0.0308, 0.0151, 0.0142, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0624],
        [0.0356],
        [0.0152],
        [0.0240],
        [0.0409],
        [0.0231],
        [0.0122],
        [0.0166],
        [0.0321],
        [0.0119],
        [0.0304],
        [0.0200],
        [0.0467],
        [0.0364],
        [0.0140],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0624, 0.0356, 0.0152, 0.0240, 0.0409, 0.0231, 0.0122, 0.0166, 0.0321,
         0.0119, 0.0304, 0.0200, 0.0467, 0.0364, 0.0140, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1156, 0.0316, 0.0624],
        [0.0648, 0.0231, 0.0356],
        [0.0372, 0.0173, 0.0152],
        [0.0464, 0.0127, 0.0240],
        [0.1355, 0.0282, 0.0409],
        [0.0872, 0.0161, 0.0231],
        [0.0327, 0.0088, 0.0122],
        [0.0333, 0.0188, 0.0166],
        [0.0814, 0.0347, 0.0321],
        [0.0210, 0.0229, 0.0119],
        [0.0712, 0.0240, 0.0304],
        [0.0383, 0.0108, 0.0200],
        [0.1268, 0.0308, 0.0467],
        [0.1375, 0.0151, 0.0364],
        [0.0565, 0.0142, 0.0140],
        [0.0500, 0.0159, 0.0195]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0992],
        [0.0414],
        [0.1370],
        [0.1154],
        [0.0419],
        [0.1146],
        [0.1089],
        [0.0500],
        [0.1184],
        [0.0613],
        [0.0720],
        [0.0457],
        [0.0641],
        [0.0369],
        [0.0621],
        [0.0674]], device='cuda:0', dtype=torch.float16)/tensor([[0.0992, 0.0414, 0.1370, 0.1154, 0.0419, 0.1146, 0.1089, 0.0500, 0.1184,
         0.0613, 0.0720, 0.0457, 0.0641, 0.0369, 0.0621, 0.0674]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0145],
        [0.0156],
        [0.0313],
        [0.0205],
        [0.0106],
        [0.0174],
        [0.0227],
        [0.0186],
        [0.0255],
        [0.0180],
        [0.0318],
        [0.0106],
        [0.0253],
        [0.0196],
        [0.0165],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.0156, 0.0313, 0.0205, 0.0106, 0.0174, 0.0227, 0.0186, 0.0255,
         0.0180, 0.0318, 0.0106, 0.0253, 0.0196, 0.0165, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0504],
        [0.0200],
        [0.0553],
        [0.0438],
        [0.0173],
        [0.0333],
        [0.0349],
        [0.0208],
        [0.0453],
        [0.0236],
        [0.0430],
        [0.0140],
        [0.0203],
        [0.0234],
        [0.0247],
        [0.0329]], device='cuda:0', dtype=torch.float16)/tensor([[0.0504, 0.0200, 0.0553, 0.0438, 0.0173, 0.0333, 0.0349, 0.0208, 0.0453,
         0.0236, 0.0430, 0.0140, 0.0203, 0.0234, 0.0247, 0.0329]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0992, 0.0145, 0.0504],
        [0.0414, 0.0156, 0.0200],
        [0.1370, 0.0313, 0.0553],
        [0.1154, 0.0205, 0.0438],
        [0.0419, 0.0106, 0.0173],
        [0.1146, 0.0174, 0.0333],
        [0.1089, 0.0227, 0.0349],
        [0.0500, 0.0186, 0.0208],
        [0.1184, 0.0255, 0.0453],
        [0.0613, 0.0180, 0.0236],
        [0.0720, 0.0318, 0.0430],
        [0.0457, 0.0106, 0.0140],
        [0.0641, 0.0253, 0.0203],
        [0.0369, 0.0196, 0.0234],
        [0.0621, 0.0165, 0.0247],
        [0.0674, 0.0127, 0.0329]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0750],
        [0.0420],
        [0.1017],
        [0.0694],
        [0.0963],
        [0.0478],
        [0.0781],
        [0.0403],
        [0.0572],
        [0.0824],
        [0.0562],
        [0.0875],
        [0.0439],
        [0.0542],
        [0.0331],
        [0.0826]], device='cuda:0', dtype=torch.float16)/tensor([[0.0750, 0.0420, 0.1017, 0.0694, 0.0963, 0.0478, 0.0781, 0.0403, 0.0572,
         0.0824, 0.0562, 0.0875, 0.0439, 0.0542, 0.0331, 0.0826]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0253],
        [0.0100],
        [0.0120],
        [0.0199],
        [0.0225],
        [0.0120],
        [0.0178],
        [0.0268],
        [0.0209],
        [0.0273],
        [0.0185],
        [0.0281],
        [0.0105],
        [0.0164],
        [0.0146],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0100, 0.0120, 0.0199, 0.0225, 0.0120, 0.0178, 0.0268, 0.0209,
         0.0273, 0.0185, 0.0281, 0.0105, 0.0164, 0.0146, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0374],
        [0.0191],
        [0.0520],
        [0.0150],
        [0.0377],
        [0.0127],
        [0.0162],
        [0.0257],
        [0.0219],
        [0.0500],
        [0.0264],
        [0.0341],
        [0.0142],
        [0.0199],
        [0.0213],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0374, 0.0191, 0.0520, 0.0150, 0.0377, 0.0127, 0.0162, 0.0257, 0.0219,
         0.0500, 0.0264, 0.0341, 0.0142, 0.0199, 0.0213, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0750, 0.0253, 0.0374],
        [0.0420, 0.0100, 0.0191],
        [0.1017, 0.0120, 0.0520],
        [0.0694, 0.0199, 0.0150],
        [0.0963, 0.0225, 0.0377],
        [0.0478, 0.0120, 0.0127],
        [0.0781, 0.0178, 0.0162],
        [0.0403, 0.0268, 0.0257],
        [0.0572, 0.0209, 0.0219],
        [0.0824, 0.0273, 0.0500],
        [0.0562, 0.0185, 0.0264],
        [0.0875, 0.0281, 0.0341],
        [0.0439, 0.0105, 0.0142],
        [0.0542, 0.0164, 0.0199],
        [0.0331, 0.0146, 0.0213],
        [0.0826, 0.0209, 0.0302]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1259],
        [0.0475],
        [0.0432],
        [0.0476],
        [0.0160],
        [0.0521],
        [0.0889],
        [0.1073],
        [0.0508],
        [0.0314],
        [0.0544],
        [0.0730],
        [0.0241],
        [0.0927],
        [0.0257],
        [0.0321]], device='cuda:0', dtype=torch.float16)/tensor([[0.1259, 0.0475, 0.0432, 0.0476, 0.0160, 0.0521, 0.0889, 0.1073, 0.0508,
         0.0314, 0.0544, 0.0730, 0.0241, 0.0927, 0.0257, 0.0321]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0294],
        [0.0143],
        [0.0284],
        [0.0199],
        [0.0083],
        [0.0158],
        [0.0403],
        [0.0238],
        [0.0137],
        [0.0133],
        [0.0189],
        [0.0232],
        [0.0151],
        [0.0246],
        [0.0088],
        [0.0106]], device='cuda:0', dtype=torch.float16)/tensor([[0.0294, 0.0143, 0.0284, 0.0199, 0.0083, 0.0158, 0.0403, 0.0238, 0.0137,
         0.0133, 0.0189, 0.0232, 0.0151, 0.0246, 0.0088, 0.0106]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0578],
        [0.0237],
        [0.0244],
        [0.0434],
        [0.0083],
        [0.0260],
        [0.0410],
        [0.0661],
        [0.0233],
        [0.0100],
        [0.0276],
        [0.0301],
        [0.0142],
        [0.0389],
        [0.0207],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0578, 0.0237, 0.0244, 0.0434, 0.0083, 0.0260, 0.0410, 0.0661, 0.0233,
         0.0100, 0.0276, 0.0301, 0.0142, 0.0389, 0.0207, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1259, 0.0294, 0.0578],
        [0.0475, 0.0143, 0.0237],
        [0.0432, 0.0284, 0.0244],
        [0.0476, 0.0199, 0.0434],
        [0.0160, 0.0083, 0.0083],
        [0.0521, 0.0158, 0.0260],
        [0.0889, 0.0403, 0.0410],
        [0.1073, 0.0238, 0.0661],
        [0.0508, 0.0137, 0.0233],
        [0.0314, 0.0133, 0.0100],
        [0.0544, 0.0189, 0.0276],
        [0.0730, 0.0232, 0.0301],
        [0.0241, 0.0151, 0.0142],
        [0.0927, 0.0246, 0.0389],
        [0.0257, 0.0088, 0.0207],
        [0.0321, 0.0106, 0.0122]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0654],
        [0.0250],
        [0.0257],
        [0.0724],
        [0.0703],
        [0.0670],
        [0.0443],
        [0.0842],
        [0.0685],
        [0.0568],
        [0.1334],
        [0.0954],
        [0.0373],
        [0.0580],
        [0.0670],
        [0.0746]], device='cuda:0', dtype=torch.float16)/tensor([[0.0654, 0.0250, 0.0257, 0.0724, 0.0703, 0.0670, 0.0443, 0.0842, 0.0685,
         0.0568, 0.1334, 0.0954, 0.0373, 0.0580, 0.0670, 0.0746]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0204],
        [0.0081],
        [0.0102],
        [0.0226],
        [0.0126],
        [0.0110],
        [0.0085],
        [0.0239],
        [0.0138],
        [0.0198],
        [0.0142],
        [0.0207],
        [0.0091],
        [0.0142],
        [0.0199],
        [0.0216]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0081, 0.0102, 0.0226, 0.0126, 0.0110, 0.0085, 0.0239, 0.0138,
         0.0198, 0.0142, 0.0207, 0.0091, 0.0142, 0.0199, 0.0216]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0228],
        [0.0127],
        [0.0136],
        [0.0208],
        [0.0436],
        [0.0285],
        [0.0236],
        [0.0237],
        [0.0259],
        [0.0177],
        [0.0373],
        [0.0179],
        [0.0130],
        [0.0263],
        [0.0241],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0127, 0.0136, 0.0208, 0.0436, 0.0285, 0.0236, 0.0237, 0.0259,
         0.0177, 0.0373, 0.0179, 0.0130, 0.0263, 0.0241, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0654, 0.0204, 0.0228],
        [0.0250, 0.0081, 0.0127],
        [0.0257, 0.0102, 0.0136],
        [0.0724, 0.0226, 0.0208],
        [0.0703, 0.0126, 0.0436],
        [0.0670, 0.0110, 0.0285],
        [0.0443, 0.0085, 0.0236],
        [0.0842, 0.0239, 0.0237],
        [0.0685, 0.0138, 0.0259],
        [0.0568, 0.0198, 0.0177],
        [0.1334, 0.0142, 0.0373],
        [0.0954, 0.0207, 0.0179],
        [0.0373, 0.0091, 0.0130],
        [0.0580, 0.0142, 0.0263],
        [0.0670, 0.0199, 0.0241],
        [0.0746, 0.0216, 0.0261]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0349],
        [0.1504],
        [0.0654],
        [0.1095],
        [0.0338],
        [0.0624],
        [0.0591],
        [0.1416],
        [0.0486],
        [0.0457],
        [0.0981],
        [0.0208],
        [0.0553],
        [0.0597],
        [0.0552],
        [0.0909]], device='cuda:0', dtype=torch.float16)/tensor([[0.0349, 0.1504, 0.0654, 0.1095, 0.0338, 0.0624, 0.0591, 0.1416, 0.0486,
         0.0457, 0.0981, 0.0208, 0.0553, 0.0597, 0.0552, 0.0909]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0111],
        [0.0210],
        [0.0252],
        [0.0118],
        [0.0064],
        [0.0197],
        [0.0108],
        [0.0252],
        [0.0164],
        [0.0149],
        [0.0245],
        [0.0073],
        [0.0173],
        [0.0195],
        [0.0194],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0210, 0.0252, 0.0118, 0.0064, 0.0197, 0.0108, 0.0252, 0.0164,
         0.0149, 0.0245, 0.0073, 0.0173, 0.0195, 0.0194, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0179],
        [0.0414],
        [0.0185],
        [0.0370],
        [0.0155],
        [0.0211],
        [0.0223],
        [0.0435],
        [0.0227],
        [0.0214],
        [0.0461],
        [0.0190],
        [0.0154],
        [0.0325],
        [0.0158],
        [0.0514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0179, 0.0414, 0.0185, 0.0370, 0.0155, 0.0211, 0.0223, 0.0435, 0.0227,
         0.0214, 0.0461, 0.0190, 0.0154, 0.0325, 0.0158, 0.0514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0349, 0.0111, 0.0179],
        [0.1504, 0.0210, 0.0414],
        [0.0654, 0.0252, 0.0185],
        [0.1095, 0.0118, 0.0370],
        [0.0338, 0.0064, 0.0155],
        [0.0624, 0.0197, 0.0211],
        [0.0591, 0.0108, 0.0223],
        [0.1416, 0.0252, 0.0435],
        [0.0486, 0.0164, 0.0227],
        [0.0457, 0.0149, 0.0214],
        [0.0981, 0.0245, 0.0461],
        [0.0208, 0.0073, 0.0190],
        [0.0553, 0.0173, 0.0154],
        [0.0597, 0.0195, 0.0325],
        [0.0552, 0.0194, 0.0158],
        [0.0909, 0.0256, 0.0514]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0746],
        [0.0537],
        [0.0579],
        [0.0624],
        [0.1148],
        [0.0269],
        [0.0592],
        [0.0365],
        [0.1019],
        [0.1681],
        [0.0501],
        [0.0496],
        [0.1234],
        [0.1403],
        [0.0367],
        [0.1056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0746, 0.0537, 0.0579, 0.0624, 0.1148, 0.0269, 0.0592, 0.0365, 0.1019,
         0.1681, 0.0501, 0.0496, 0.1234, 0.1403, 0.0367, 0.1056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0308],
        [0.0237],
        [0.0165],
        [0.0166],
        [0.0201],
        [0.0098],
        [0.0104],
        [0.0097],
        [0.0341],
        [0.0355],
        [0.0204],
        [0.0157],
        [0.0338],
        [0.0213],
        [0.0160],
        [0.0199]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0237, 0.0165, 0.0166, 0.0201, 0.0098, 0.0104, 0.0097, 0.0341,
         0.0355, 0.0204, 0.0157, 0.0338, 0.0213, 0.0160, 0.0199]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0445],
        [0.0229],
        [0.0245],
        [0.0356],
        [0.0544],
        [0.0241],
        [0.0208],
        [0.0191],
        [0.0268],
        [0.0568],
        [0.0187],
        [0.0222],
        [0.0374],
        [0.0428],
        [0.0169],
        [0.0300]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.0229, 0.0245, 0.0356, 0.0544, 0.0241, 0.0208, 0.0191, 0.0268,
         0.0568, 0.0187, 0.0222, 0.0374, 0.0428, 0.0169, 0.0300]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0746, 0.0308, 0.0445],
        [0.0537, 0.0237, 0.0229],
        [0.0579, 0.0165, 0.0245],
        [0.0624, 0.0166, 0.0356],
        [0.1148, 0.0201, 0.0544],
        [0.0269, 0.0098, 0.0241],
        [0.0592, 0.0104, 0.0208],
        [0.0365, 0.0097, 0.0191],
        [0.1019, 0.0341, 0.0268],
        [0.1681, 0.0355, 0.0568],
        [0.0501, 0.0204, 0.0187],
        [0.0496, 0.0157, 0.0222],
        [0.1234, 0.0338, 0.0374],
        [0.1403, 0.0213, 0.0428],
        [0.0367, 0.0160, 0.0169],
        [0.1056, 0.0199, 0.0300]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0674],
        [0.0307],
        [0.0362],
        [0.0398],
        [0.0390],
        [0.0375],
        [0.0874],
        [0.1224],
        [0.0372],
        [0.0351],
        [0.0864],
        [0.0955],
        [0.0723],
        [0.0815],
        [0.0213],
        [0.0392]], device='cuda:0', dtype=torch.float16)/tensor([[0.0674, 0.0307, 0.0362, 0.0398, 0.0390, 0.0375, 0.0874, 0.1224, 0.0372,
         0.0351, 0.0864, 0.0955, 0.0723, 0.0815, 0.0213, 0.0392]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0302],
        [0.0288],
        [0.0152],
        [0.0241],
        [0.0080],
        [0.0132],
        [0.0204],
        [0.0148],
        [0.0118],
        [0.0149],
        [0.0187],
        [0.0339],
        [0.0250],
        [0.0239],
        [0.0130],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0302, 0.0288, 0.0152, 0.0241, 0.0080, 0.0132, 0.0204, 0.0148, 0.0118,
         0.0149, 0.0187, 0.0339, 0.0250, 0.0239, 0.0130, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0280],
        [0.0135],
        [0.0145],
        [0.0148],
        [0.0050],
        [0.0228],
        [0.0250],
        [0.0423],
        [0.0163],
        [0.0174],
        [0.0251],
        [0.0389],
        [0.0357],
        [0.0293],
        [0.0139],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0280, 0.0135, 0.0145, 0.0148, 0.0050, 0.0228, 0.0250, 0.0423, 0.0163,
         0.0174, 0.0251, 0.0389, 0.0357, 0.0293, 0.0139, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0674, 0.0302, 0.0280],
        [0.0307, 0.0288, 0.0135],
        [0.0362, 0.0152, 0.0145],
        [0.0398, 0.0241, 0.0148],
        [0.0390, 0.0080, 0.0050],
        [0.0375, 0.0132, 0.0228],
        [0.0874, 0.0204, 0.0250],
        [0.1224, 0.0148, 0.0423],
        [0.0372, 0.0118, 0.0163],
        [0.0351, 0.0149, 0.0174],
        [0.0864, 0.0187, 0.0251],
        [0.0955, 0.0339, 0.0389],
        [0.0723, 0.0250, 0.0357],
        [0.0815, 0.0239, 0.0293],
        [0.0213, 0.0130, 0.0139],
        [0.0392, 0.0141, 0.0211]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0563],
        [0.1169],
        [0.0958],
        [0.0554],
        [0.0322],
        [0.0450]], device='cuda:0', dtype=torch.float16)/tensor([[0.0563, 0.1169, 0.0958, 0.0554, 0.0322, 0.0450]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0214],
        [0.0310],
        [0.0274],
        [0.0174],
        [0.0163],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0310, 0.0274, 0.0174, 0.0163, 0.0304]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0269],
        [0.0332],
        [0.0474],
        [0.0228],
        [0.0221],
        [0.0295]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0332, 0.0474, 0.0228, 0.0221, 0.0295]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0563, 0.0214, 0.0269],
        [0.1169, 0.0310, 0.0332],
        [0.0958, 0.0274, 0.0474],
        [0.0554, 0.0174, 0.0228],
        [0.0322, 0.0163, 0.0221],
        [0.0450, 0.0304, 0.0295]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type active, variation 2 and batchsize 16: 0:03:02.170429
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI active 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 312.89it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0322],
        [0.0429],
        [0.0700],
        [0.0215],
        [0.0420],
        [0.0132],
        [0.0202],
        [0.0361],
        [0.0446],
        [0.0533],
        [0.0352],
        [0.0386],
        [0.0246],
        [0.0373],
        [0.0531],
        [0.0656]], device='cuda:0', dtype=torch.float16)/tensor([[0.0322, 0.0429, 0.0700, 0.0215, 0.0420, 0.0132, 0.0202, 0.0361, 0.0446,
         0.0533, 0.0352, 0.0386, 0.0246, 0.0373, 0.0531, 0.0656]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0198],
        [0.0168],
        [0.0101],
        [0.0093],
        [0.0070],
        [0.0046],
        [0.0145],
        [0.0224],
        [0.0208],
        [0.0213],
        [0.0086],
        [0.0110],
        [0.0088],
        [0.0084],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0198, 0.0168, 0.0101, 0.0093, 0.0070, 0.0046, 0.0145, 0.0224,
         0.0208, 0.0213, 0.0086, 0.0110, 0.0088, 0.0084, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0130],
        [0.0564],
        [0.0190],
        [0.0213],
        [0.0150],
        [0.0103],
        [0.0067],
        [0.0250],
        [0.0285],
        [0.0152],
        [0.0520],
        [0.0312],
        [0.0423],
        [0.0049],
        [0.0096],
        [0.0346]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0564, 0.0190, 0.0213, 0.0150, 0.0103, 0.0067, 0.0250, 0.0285,
         0.0152, 0.0520, 0.0312, 0.0423, 0.0049, 0.0096, 0.0346]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0322, 0.0080, 0.0130],
        [0.0429, 0.0198, 0.0564],
        [0.0700, 0.0168, 0.0190],
        [0.0215, 0.0101, 0.0213],
        [0.0420, 0.0093, 0.0150],
        [0.0132, 0.0070, 0.0103],
        [0.0202, 0.0046, 0.0067],
        [0.0361, 0.0145, 0.0250],
        [0.0446, 0.0224, 0.0285],
        [0.0533, 0.0208, 0.0152],
        [0.0352, 0.0213, 0.0520],
        [0.0386, 0.0086, 0.0312],
        [0.0246, 0.0110, 0.0423],
        [0.0373, 0.0088, 0.0049],
        [0.0531, 0.0084, 0.0096],
        [0.0656, 0.0135, 0.0346]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0317],
        [0.0308],
        [0.0509],
        [0.0410],
        [0.0280],
        [0.0288],
        [0.0179],
        [0.0782],
        [0.0293],
        [0.0438],
        [0.0053],
        [0.0453],
        [0.0286],
        [0.0339],
        [0.0407],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0317, 0.0308, 0.0509, 0.0410, 0.0280, 0.0288, 0.0179, 0.0782, 0.0293,
         0.0438, 0.0053, 0.0453, 0.0286, 0.0339, 0.0407, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0145],
        [0.0080],
        [0.0038],
        [0.0213],
        [0.0052],
        [0.0025],
        [0.0161],
        [0.0135],
        [0.0121],
        [0.0020],
        [0.0082],
        [0.0052],
        [0.0048],
        [0.0185],
        [0.0059]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0145, 0.0080, 0.0038, 0.0213, 0.0052, 0.0025, 0.0161, 0.0135,
         0.0121, 0.0020, 0.0082, 0.0052, 0.0048, 0.0185, 0.0059]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0111],
        [0.0446],
        [0.0110],
        [0.0172],
        [0.0117],
        [0.0062],
        [0.0083],
        [0.0659],
        [0.0111],
        [0.0106],
        [0.0036],
        [0.0248],
        [0.0144],
        [0.0121],
        [0.0141],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0446, 0.0110, 0.0172, 0.0117, 0.0062, 0.0083, 0.0659, 0.0111,
         0.0106, 0.0036, 0.0248, 0.0144, 0.0121, 0.0141, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0317, 0.0136, 0.0111],
        [0.0308, 0.0145, 0.0446],
        [0.0509, 0.0080, 0.0110],
        [0.0410, 0.0038, 0.0172],
        [0.0280, 0.0213, 0.0117],
        [0.0288, 0.0052, 0.0062],
        [0.0179, 0.0025, 0.0083],
        [0.0782, 0.0161, 0.0659],
        [0.0293, 0.0135, 0.0111],
        [0.0438, 0.0121, 0.0106],
        [0.0053, 0.0020, 0.0036],
        [0.0453, 0.0082, 0.0248],
        [0.0286, 0.0052, 0.0144],
        [0.0339, 0.0048, 0.0121],
        [0.0407, 0.0185, 0.0141],
        [0.0118, 0.0059, 0.0046]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0609],
        [0.0230],
        [0.0353],
        [0.0255],
        [0.0300],
        [0.0199],
        [0.0127],
        [0.0277],
        [0.0238],
        [0.0498],
        [0.0395],
        [0.0314],
        [0.0163],
        [0.0116],
        [0.0227],
        [0.0481]], device='cuda:0', dtype=torch.float16)/tensor([[0.0609, 0.0230, 0.0353, 0.0255, 0.0300, 0.0199, 0.0127, 0.0277, 0.0238,
         0.0498, 0.0395, 0.0314, 0.0163, 0.0116, 0.0227, 0.0481]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0153],
        [0.0109],
        [0.0206],
        [0.0152],
        [0.0096],
        [0.0057],
        [0.0072],
        [0.0142],
        [0.0109],
        [0.0048],
        [0.0107],
        [0.0147],
        [0.0082],
        [0.0109],
        [0.0235],
        [0.0151]], device='cuda:0', dtype=torch.float16)/tensor([[0.0153, 0.0109, 0.0206, 0.0152, 0.0096, 0.0057, 0.0072, 0.0142, 0.0109,
         0.0048, 0.0107, 0.0147, 0.0082, 0.0109, 0.0235, 0.0151]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0321],
        [0.0071],
        [0.0475],
        [0.0134],
        [0.0159],
        [0.0065],
        [0.0159],
        [0.0232],
        [0.0119],
        [0.0166],
        [0.0218],
        [0.0145],
        [0.0120],
        [0.0172],
        [0.0252],
        [0.0264]], device='cuda:0', dtype=torch.float16)/tensor([[0.0321, 0.0071, 0.0475, 0.0134, 0.0159, 0.0065, 0.0159, 0.0232, 0.0119,
         0.0166, 0.0218, 0.0145, 0.0120, 0.0172, 0.0252, 0.0264]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0609, 0.0153, 0.0321],
        [0.0230, 0.0109, 0.0071],
        [0.0353, 0.0206, 0.0475],
        [0.0255, 0.0152, 0.0134],
        [0.0300, 0.0096, 0.0159],
        [0.0199, 0.0057, 0.0065],
        [0.0127, 0.0072, 0.0159],
        [0.0277, 0.0142, 0.0232],
        [0.0238, 0.0109, 0.0119],
        [0.0498, 0.0048, 0.0166],
        [0.0395, 0.0107, 0.0218],
        [0.0314, 0.0147, 0.0145],
        [0.0163, 0.0082, 0.0120],
        [0.0116, 0.0109, 0.0172],
        [0.0227, 0.0235, 0.0252],
        [0.0481, 0.0151, 0.0264]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0540],
        [0.0349],
        [0.0479],
        [0.0160],
        [0.0385],
        [0.0310],
        [0.0442],
        [0.0218],
        [0.0204],
        [0.0183],
        [0.0476],
        [0.0276],
        [0.0447],
        [0.0249],
        [0.0141],
        [0.0223]], device='cuda:0', dtype=torch.float16)/tensor([[0.0540, 0.0349, 0.0479, 0.0160, 0.0385, 0.0310, 0.0442, 0.0218, 0.0204,
         0.0183, 0.0476, 0.0276, 0.0447, 0.0249, 0.0141, 0.0223]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0194],
        [0.0072],
        [0.0118],
        [0.0076],
        [0.0200],
        [0.0056],
        [0.0091],
        [0.0117],
        [0.0095],
        [0.0062],
        [0.0125],
        [0.0078],
        [0.0156],
        [0.0162],
        [0.0063],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0194, 0.0072, 0.0118, 0.0076, 0.0200, 0.0056, 0.0091, 0.0117, 0.0095,
         0.0062, 0.0125, 0.0078, 0.0156, 0.0162, 0.0063, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0328],
        [0.0134],
        [0.0163],
        [0.0119],
        [0.0256],
        [0.0123],
        [0.0238],
        [0.0089],
        [0.0062],
        [0.0090],
        [0.0094],
        [0.0086],
        [0.0209],
        [0.0232],
        [0.0162],
        [0.0598]], device='cuda:0', dtype=torch.float16)/tensor([[0.0328, 0.0134, 0.0163, 0.0119, 0.0256, 0.0123, 0.0238, 0.0089, 0.0062,
         0.0090, 0.0094, 0.0086, 0.0209, 0.0232, 0.0162, 0.0598]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0540, 0.0194, 0.0328],
        [0.0349, 0.0072, 0.0134],
        [0.0479, 0.0118, 0.0163],
        [0.0160, 0.0076, 0.0119],
        [0.0385, 0.0200, 0.0256],
        [0.0310, 0.0056, 0.0123],
        [0.0442, 0.0091, 0.0238],
        [0.0218, 0.0117, 0.0089],
        [0.0204, 0.0095, 0.0062],
        [0.0183, 0.0062, 0.0090],
        [0.0476, 0.0125, 0.0094],
        [0.0276, 0.0078, 0.0086],
        [0.0447, 0.0156, 0.0209],
        [0.0249, 0.0162, 0.0232],
        [0.0141, 0.0063, 0.0162],
        [0.0223, 0.0178, 0.0598]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0337],
        [0.0681],
        [0.0460],
        [0.0709],
        [0.0465],
        [0.0100],
        [0.0381],
        [0.0363],
        [0.0142],
        [0.0303],
        [0.0502],
        [0.0269],
        [0.0391],
        [0.0318],
        [0.0202],
        [0.0255]], device='cuda:0', dtype=torch.float16)/tensor([[0.0337, 0.0681, 0.0460, 0.0709, 0.0465, 0.0100, 0.0381, 0.0363, 0.0142,
         0.0303, 0.0502, 0.0269, 0.0391, 0.0318, 0.0202, 0.0255]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0070],
        [0.0075],
        [0.0187],
        [0.0100],
        [0.0071],
        [0.0075],
        [0.0144],
        [0.0070],
        [0.0263],
        [0.0191],
        [0.0173],
        [0.0085],
        [0.0238],
        [0.0129],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0070, 0.0075, 0.0187, 0.0100, 0.0071, 0.0075, 0.0144, 0.0070,
         0.0263, 0.0191, 0.0173, 0.0085, 0.0238, 0.0129, 0.0142]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0255],
        [0.0235],
        [0.0182],
        [0.0293],
        [0.0205],
        [0.0155],
        [0.0231],
        [0.0149],
        [0.0015],
        [0.0175],
        [0.0772],
        [0.0394],
        [0.0116],
        [0.0323],
        [0.0172],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0255, 0.0235, 0.0182, 0.0293, 0.0205, 0.0155, 0.0231, 0.0149, 0.0015,
         0.0175, 0.0772, 0.0394, 0.0116, 0.0323, 0.0172, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0337, 0.0080, 0.0255],
        [0.0681, 0.0070, 0.0235],
        [0.0460, 0.0075, 0.0182],
        [0.0709, 0.0187, 0.0293],
        [0.0465, 0.0100, 0.0205],
        [0.0100, 0.0071, 0.0155],
        [0.0381, 0.0075, 0.0231],
        [0.0363, 0.0144, 0.0149],
        [0.0142, 0.0070, 0.0015],
        [0.0303, 0.0263, 0.0175],
        [0.0502, 0.0191, 0.0772],
        [0.0269, 0.0173, 0.0394],
        [0.0391, 0.0085, 0.0116],
        [0.0318, 0.0238, 0.0323],
        [0.0202, 0.0129, 0.0172],
        [0.0255, 0.0142, 0.0177]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0308],
        [0.0193],
        [0.0222],
        [0.0261],
        [0.0476],
        [0.0204],
        [0.0238],
        [0.0463],
        [0.0533],
        [0.0101],
        [0.0356],
        [0.0205],
        [0.0637],
        [0.0480],
        [0.0331],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0193, 0.0222, 0.0261, 0.0476, 0.0204, 0.0238, 0.0463, 0.0533,
         0.0101, 0.0356, 0.0205, 0.0637, 0.0480, 0.0331, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0127],
        [0.0075],
        [0.0213],
        [0.0045],
        [0.0125],
        [0.0109],
        [0.0133],
        [0.0150],
        [0.0121],
        [0.0069],
        [0.0143],
        [0.0134],
        [0.0117],
        [0.0238],
        [0.0092],
        [0.0072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0075, 0.0213, 0.0045, 0.0125, 0.0109, 0.0133, 0.0150, 0.0121,
         0.0069, 0.0143, 0.0134, 0.0117, 0.0238, 0.0092, 0.0072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0193],
        [0.0079],
        [0.0242],
        [0.0105],
        [0.0310],
        [0.0146],
        [0.0133],
        [0.0141],
        [0.0138],
        [0.0105],
        [0.0117],
        [0.0197],
        [0.0383],
        [0.0242],
        [0.0099],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0079, 0.0242, 0.0105, 0.0310, 0.0146, 0.0133, 0.0141, 0.0138,
         0.0105, 0.0117, 0.0197, 0.0383, 0.0242, 0.0099, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0308, 0.0127, 0.0193],
        [0.0193, 0.0075, 0.0079],
        [0.0222, 0.0213, 0.0242],
        [0.0261, 0.0045, 0.0105],
        [0.0476, 0.0125, 0.0310],
        [0.0204, 0.0109, 0.0146],
        [0.0238, 0.0133, 0.0133],
        [0.0463, 0.0150, 0.0141],
        [0.0533, 0.0121, 0.0138],
        [0.0101, 0.0069, 0.0105],
        [0.0356, 0.0143, 0.0117],
        [0.0205, 0.0134, 0.0197],
        [0.0637, 0.0117, 0.0383],
        [0.0480, 0.0238, 0.0242],
        [0.0331, 0.0092, 0.0099],
        [0.0417, 0.0072, 0.0129]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0116],
        [0.0466],
        [0.0315],
        [0.0302],
        [0.0183],
        [0.0287],
        [0.0525],
        [0.0273],
        [0.0246],
        [0.0128],
        [0.0326],
        [0.0817],
        [0.0193],
        [0.0238],
        [0.0342],
        [0.0269]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0466, 0.0315, 0.0302, 0.0183, 0.0287, 0.0525, 0.0273, 0.0246,
         0.0128, 0.0326, 0.0817, 0.0193, 0.0238, 0.0342, 0.0269]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0057],
        [0.0160],
        [0.0061],
        [0.0091],
        [0.0058],
        [0.0115],
        [0.0096],
        [0.0056],
        [0.0125],
        [0.0100],
        [0.0137],
        [0.0087],
        [0.0035],
        [0.0109],
        [0.0077],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0160, 0.0061, 0.0091, 0.0058, 0.0115, 0.0096, 0.0056, 0.0125,
         0.0100, 0.0137, 0.0087, 0.0035, 0.0109, 0.0077, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0155],
        [0.0212],
        [0.0263],
        [0.0096],
        [0.0114],
        [0.0110],
        [0.0542],
        [0.0329],
        [0.0134],
        [0.0070],
        [0.0168],
        [0.0484],
        [0.0093],
        [0.0122],
        [0.0116],
        [0.0385]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0212, 0.0263, 0.0096, 0.0114, 0.0110, 0.0542, 0.0329, 0.0134,
         0.0070, 0.0168, 0.0484, 0.0093, 0.0122, 0.0116, 0.0385]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0116, 0.0057, 0.0155],
        [0.0466, 0.0160, 0.0212],
        [0.0315, 0.0061, 0.0263],
        [0.0302, 0.0091, 0.0096],
        [0.0183, 0.0058, 0.0114],
        [0.0287, 0.0115, 0.0110],
        [0.0525, 0.0096, 0.0542],
        [0.0273, 0.0056, 0.0329],
        [0.0246, 0.0125, 0.0134],
        [0.0128, 0.0100, 0.0070],
        [0.0326, 0.0137, 0.0168],
        [0.0817, 0.0087, 0.0484],
        [0.0193, 0.0035, 0.0093],
        [0.0238, 0.0109, 0.0122],
        [0.0342, 0.0077, 0.0116],
        [0.0269, 0.0172, 0.0385]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0425],
        [0.0227],
        [0.0248],
        [0.0057],
        [0.0356],
        [0.0255],
        [0.0201],
        [0.0463],
        [0.0564],
        [0.0398],
        [0.0320],
        [0.0501],
        [0.0080],
        [0.0246],
        [0.0176],
        [0.0252]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0227, 0.0248, 0.0057, 0.0356, 0.0255, 0.0201, 0.0463, 0.0564,
         0.0398, 0.0320, 0.0501, 0.0080, 0.0246, 0.0176, 0.0252]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0073],
        [0.0081],
        [0.0079],
        [0.0031],
        [0.0100],
        [0.0080],
        [0.0085],
        [0.0172],
        [0.0131],
        [0.0171],
        [0.0109],
        [0.0084],
        [0.0021],
        [0.0141],
        [0.0069],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0081, 0.0079, 0.0031, 0.0100, 0.0080, 0.0085, 0.0172, 0.0131,
         0.0171, 0.0109, 0.0084, 0.0021, 0.0141, 0.0069, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0142],
        [0.0071],
        [0.0211],
        [0.0034],
        [0.0215],
        [0.0082],
        [0.0236],
        [0.0384],
        [0.0178],
        [0.0307],
        [0.0237],
        [0.0114],
        [0.0076],
        [0.0113],
        [0.0100],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0071, 0.0211, 0.0034, 0.0215, 0.0082, 0.0236, 0.0384, 0.0178,
         0.0307, 0.0237, 0.0114, 0.0076, 0.0113, 0.0100, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0425, 0.0073, 0.0142],
        [0.0227, 0.0081, 0.0071],
        [0.0248, 0.0079, 0.0211],
        [0.0057, 0.0031, 0.0034],
        [0.0356, 0.0100, 0.0215],
        [0.0255, 0.0080, 0.0082],
        [0.0201, 0.0085, 0.0236],
        [0.0463, 0.0172, 0.0384],
        [0.0564, 0.0131, 0.0178],
        [0.0398, 0.0171, 0.0307],
        [0.0320, 0.0109, 0.0237],
        [0.0501, 0.0084, 0.0114],
        [0.0080, 0.0021, 0.0076],
        [0.0246, 0.0141, 0.0113],
        [0.0176, 0.0069, 0.0100],
        [0.0252, 0.0084, 0.0121]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0845],
        [0.0074],
        [0.0235],
        [0.0243],
        [0.0260],
        [0.0088],
        [0.0059],
        [0.0435],
        [0.0200],
        [0.0124],
        [0.0524],
        [0.0306],
        [0.0213],
        [0.0383],
        [0.0410],
        [0.0103]], device='cuda:0', dtype=torch.float16)/tensor([[0.0845, 0.0074, 0.0235, 0.0243, 0.0260, 0.0088, 0.0059, 0.0435, 0.0200,
         0.0124, 0.0524, 0.0306, 0.0213, 0.0383, 0.0410, 0.0103]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0164],
        [0.0034],
        [0.0109],
        [0.0092],
        [0.0093],
        [0.0102],
        [0.0033],
        [0.0066],
        [0.0046],
        [0.0100],
        [0.0173],
        [0.0173],
        [0.0146],
        [0.0104],
        [0.0110],
        [0.0050]], device='cuda:0', dtype=torch.float16)/tensor([[0.0164, 0.0034, 0.0109, 0.0092, 0.0093, 0.0102, 0.0033, 0.0066, 0.0046,
         0.0100, 0.0173, 0.0173, 0.0146, 0.0104, 0.0110, 0.0050]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0470],
        [0.0085],
        [0.0189],
        [0.0095],
        [0.0092],
        [0.0048],
        [0.0030],
        [0.0471],
        [0.0056],
        [0.0181],
        [0.0229],
        [0.0268],
        [0.0216],
        [0.0157],
        [0.0360],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0470, 0.0085, 0.0189, 0.0095, 0.0092, 0.0048, 0.0030, 0.0471, 0.0056,
         0.0181, 0.0229, 0.0268, 0.0216, 0.0157, 0.0360, 0.0043]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0845, 0.0164, 0.0470],
        [0.0074, 0.0034, 0.0085],
        [0.0235, 0.0109, 0.0189],
        [0.0243, 0.0092, 0.0095],
        [0.0260, 0.0093, 0.0092],
        [0.0088, 0.0102, 0.0048],
        [0.0059, 0.0033, 0.0030],
        [0.0435, 0.0066, 0.0471],
        [0.0200, 0.0046, 0.0056],
        [0.0124, 0.0100, 0.0181],
        [0.0524, 0.0173, 0.0229],
        [0.0306, 0.0173, 0.0268],
        [0.0213, 0.0146, 0.0216],
        [0.0383, 0.0104, 0.0157],
        [0.0410, 0.0110, 0.0360],
        [0.0103, 0.0050, 0.0043]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0215],
        [0.0468],
        [0.0366],
        [0.0167],
        [0.0849],
        [0.0533],
        [0.0449],
        [0.0100],
        [0.0257],
        [0.0471],
        [0.0299],
        [0.0331],
        [0.0576],
        [0.0464],
        [0.0611],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0468, 0.0366, 0.0167, 0.0849, 0.0533, 0.0449, 0.0100, 0.0257,
         0.0471, 0.0299, 0.0331, 0.0576, 0.0464, 0.0611, 0.0304]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0138],
        [0.0071],
        [0.0060],
        [0.0152],
        [0.0235],
        [0.0114],
        [0.0047],
        [0.0079],
        [0.0133],
        [0.0212],
        [0.0064],
        [0.0045],
        [0.0121],
        [0.0218],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0138, 0.0071, 0.0060, 0.0152, 0.0235, 0.0114, 0.0047, 0.0079,
         0.0133, 0.0212, 0.0064, 0.0045, 0.0121, 0.0218, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0207],
        [0.0176],
        [0.0086],
        [0.0153],
        [0.0721],
        [0.0240],
        [0.0138],
        [0.0076],
        [0.0111],
        [0.0260],
        [0.0242],
        [0.0094],
        [0.0272],
        [0.0214],
        [0.0263],
        [0.0098]], device='cuda:0', dtype=torch.float16)/tensor([[0.0207, 0.0176, 0.0086, 0.0153, 0.0721, 0.0240, 0.0138, 0.0076, 0.0111,
         0.0260, 0.0242, 0.0094, 0.0272, 0.0214, 0.0263, 0.0098]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0215, 0.0136, 0.0207],
        [0.0468, 0.0138, 0.0176],
        [0.0366, 0.0071, 0.0086],
        [0.0167, 0.0060, 0.0153],
        [0.0849, 0.0152, 0.0721],
        [0.0533, 0.0235, 0.0240],
        [0.0449, 0.0114, 0.0138],
        [0.0100, 0.0047, 0.0076],
        [0.0257, 0.0079, 0.0111],
        [0.0471, 0.0133, 0.0260],
        [0.0299, 0.0212, 0.0242],
        [0.0331, 0.0064, 0.0094],
        [0.0576, 0.0045, 0.0272],
        [0.0464, 0.0121, 0.0214],
        [0.0611, 0.0218, 0.0263],
        [0.0304, 0.0068, 0.0098]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0105],
        [0.0301],
        [0.0323],
        [0.0248],
        [0.0262],
        [0.0228],
        [0.0290],
        [0.0208],
        [0.0289],
        [0.0344],
        [0.0574],
        [0.0223],
        [0.0608],
        [0.0185],
        [0.0286],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0105, 0.0301, 0.0323, 0.0248, 0.0262, 0.0228, 0.0290, 0.0208, 0.0289,
         0.0344, 0.0574, 0.0223, 0.0608, 0.0185, 0.0286, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0091],
        [0.0202],
        [0.0022],
        [0.0092],
        [0.0099],
        [0.0079],
        [0.0020],
        [0.0104],
        [0.0126],
        [0.0127],
        [0.0104],
        [0.0118],
        [0.0065],
        [0.0133],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0091, 0.0202, 0.0022, 0.0092, 0.0099, 0.0079, 0.0020, 0.0104,
         0.0126, 0.0127, 0.0104, 0.0118, 0.0065, 0.0133, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0091],
        [0.0081],
        [0.0159],
        [0.0160],
        [0.0258],
        [0.0105],
        [0.0109],
        [0.0097],
        [0.0161],
        [0.0126],
        [0.0303],
        [0.0114],
        [0.0164],
        [0.0118],
        [0.0123],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0081, 0.0159, 0.0160, 0.0258, 0.0105, 0.0109, 0.0097, 0.0161,
         0.0126, 0.0303, 0.0114, 0.0164, 0.0118, 0.0123, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0105, 0.0080, 0.0091],
        [0.0301, 0.0091, 0.0081],
        [0.0323, 0.0202, 0.0159],
        [0.0248, 0.0022, 0.0160],
        [0.0262, 0.0092, 0.0258],
        [0.0228, 0.0099, 0.0105],
        [0.0290, 0.0079, 0.0109],
        [0.0208, 0.0020, 0.0097],
        [0.0289, 0.0104, 0.0161],
        [0.0344, 0.0126, 0.0126],
        [0.0574, 0.0127, 0.0303],
        [0.0223, 0.0104, 0.0114],
        [0.0608, 0.0118, 0.0164],
        [0.0185, 0.0065, 0.0118],
        [0.0286, 0.0133, 0.0123],
        [0.0094, 0.0095, 0.0089]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0378],
        [0.0605],
        [0.0117],
        [0.0428],
        [0.0220],
        [0.0391],
        [0.0331],
        [0.0188],
        [0.0085],
        [0.0363],
        [0.0182],
        [0.0323],
        [0.0345],
        [0.0128],
        [0.0521],
        [0.0581]], device='cuda:0', dtype=torch.float16)/tensor([[0.0378, 0.0605, 0.0117, 0.0428, 0.0220, 0.0391, 0.0331, 0.0188, 0.0085,
         0.0363, 0.0182, 0.0323, 0.0345, 0.0128, 0.0521, 0.0581]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0039],
        [0.0057],
        [0.0030],
        [0.0094],
        [0.0100],
        [0.0042],
        [0.0057],
        [0.0061],
        [0.0083],
        [0.0123],
        [0.0110],
        [0.0061],
        [0.0042],
        [0.0138],
        [0.0158],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0039, 0.0057, 0.0030, 0.0094, 0.0100, 0.0042, 0.0057, 0.0061, 0.0083,
         0.0123, 0.0110, 0.0061, 0.0042, 0.0138, 0.0158, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0166],
        [0.0152],
        [0.0091],
        [0.0091],
        [0.0106],
        [0.0055],
        [0.0117],
        [0.0175],
        [0.0122],
        [0.0140],
        [0.0309],
        [0.0084],
        [0.0207],
        [0.0127],
        [0.0171],
        [0.0144]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0152, 0.0091, 0.0091, 0.0106, 0.0055, 0.0117, 0.0175, 0.0122,
         0.0140, 0.0309, 0.0084, 0.0207, 0.0127, 0.0171, 0.0144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0378, 0.0039, 0.0166],
        [0.0605, 0.0057, 0.0152],
        [0.0117, 0.0030, 0.0091],
        [0.0428, 0.0094, 0.0091],
        [0.0220, 0.0100, 0.0106],
        [0.0391, 0.0042, 0.0055],
        [0.0331, 0.0057, 0.0117],
        [0.0188, 0.0061, 0.0175],
        [0.0085, 0.0083, 0.0122],
        [0.0363, 0.0123, 0.0140],
        [0.0182, 0.0110, 0.0309],
        [0.0323, 0.0061, 0.0084],
        [0.0345, 0.0042, 0.0207],
        [0.0128, 0.0138, 0.0127],
        [0.0521, 0.0158, 0.0171],
        [0.0581, 0.0084, 0.0144]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0327],
        [0.0377],
        [0.0221],
        [0.0637],
        [0.0199],
        [0.0230]], device='cuda:0', dtype=torch.float16)/tensor([[0.0327, 0.0377, 0.0221, 0.0637, 0.0199, 0.0230]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0091],
        [0.0111],
        [0.0107],
        [0.0179],
        [0.0118],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0111, 0.0107, 0.0179, 0.0118, 0.0152]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0083],
        [0.0112],
        [0.0093],
        [0.0580],
        [0.0217],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0083, 0.0112, 0.0093, 0.0580, 0.0217, 0.0171]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0327, 0.0091, 0.0083],
        [0.0377, 0.0111, 0.0112],
        [0.0221, 0.0107, 0.0093],
        [0.0637, 0.0179, 0.0580],
        [0.0199, 0.0118, 0.0217],
        [0.0230, 0.0152, 0.0171]], device='cuda:0')
acc:  0.3888888888888889
Time taken to execute the en NLI task with prompt type active, variation 3 and batchsize 16: 0:03:01.704480
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI active 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 321.26it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0153],
        [0.0191],
        [0.0233],
        [0.0338],
        [0.0756],
        [0.0418],
        [0.0464],
        [0.0556],
        [0.0582],
        [0.0496],
        [0.0198],
        [0.0307],
        [0.0508],
        [0.0245],
        [0.0719],
        [0.0367]], device='cuda:0', dtype=torch.float16)/tensor([[0.0153, 0.0191, 0.0233, 0.0338, 0.0756, 0.0418, 0.0464, 0.0556, 0.0582,
         0.0496, 0.0198, 0.0307, 0.0508, 0.0245, 0.0719, 0.0367]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0112],
        [0.0241],
        [0.0179],
        [0.0289],
        [0.0152],
        [0.0123],
        [0.0345],
        [0.0406],
        [0.0247],
        [0.0130],
        [0.0154],
        [0.0243],
        [0.0084],
        [0.0333],
        [0.0263]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0112, 0.0241, 0.0179, 0.0289, 0.0152, 0.0123, 0.0345, 0.0406,
         0.0247, 0.0130, 0.0154, 0.0243, 0.0084, 0.0333, 0.0263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0162],
        [0.0160],
        [0.0229],
        [0.0322],
        [0.0397],
        [0.0257],
        [0.0319],
        [0.0436],
        [0.0384],
        [0.0309],
        [0.0130],
        [0.0316],
        [0.0215],
        [0.0119],
        [0.0596],
        [0.0379]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0160, 0.0229, 0.0322, 0.0397, 0.0257, 0.0319, 0.0436, 0.0384,
         0.0309, 0.0130, 0.0316, 0.0215, 0.0119, 0.0596, 0.0379]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0153, 0.0077, 0.0162],
        [0.0191, 0.0112, 0.0160],
        [0.0233, 0.0241, 0.0229],
        [0.0338, 0.0179, 0.0322],
        [0.0756, 0.0289, 0.0397],
        [0.0418, 0.0152, 0.0257],
        [0.0464, 0.0123, 0.0319],
        [0.0556, 0.0345, 0.0436],
        [0.0582, 0.0406, 0.0384],
        [0.0496, 0.0247, 0.0309],
        [0.0198, 0.0130, 0.0130],
        [0.0307, 0.0154, 0.0316],
        [0.0508, 0.0243, 0.0215],
        [0.0245, 0.0084, 0.0119],
        [0.0719, 0.0333, 0.0596],
        [0.0367, 0.0263, 0.0379]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0440],
        [0.0472],
        [0.0337],
        [0.0555],
        [0.0643],
        [0.0508],
        [0.0436],
        [0.0611],
        [0.0607],
        [0.0303],
        [0.0299],
        [0.0769],
        [0.0508],
        [0.0285],
        [0.0149],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0440, 0.0472, 0.0337, 0.0555, 0.0643, 0.0508, 0.0436, 0.0611, 0.0607,
         0.0303, 0.0299, 0.0769, 0.0508, 0.0285, 0.0149, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0168],
        [0.0232],
        [0.0181],
        [0.0215],
        [0.0285],
        [0.0139],
        [0.0193],
        [0.0208],
        [0.0242],
        [0.0177],
        [0.0089],
        [0.0298],
        [0.0291],
        [0.0204],
        [0.0101],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0168, 0.0232, 0.0181, 0.0215, 0.0285, 0.0139, 0.0193, 0.0208, 0.0242,
         0.0177, 0.0089, 0.0298, 0.0291, 0.0204, 0.0101, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0238],
        [0.0351],
        [0.0278],
        [0.0217],
        [0.0327],
        [0.0352],
        [0.0316],
        [0.0376],
        [0.0356],
        [0.0276],
        [0.0076],
        [0.0449],
        [0.0246],
        [0.0466],
        [0.0108],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0238, 0.0351, 0.0278, 0.0217, 0.0327, 0.0352, 0.0316, 0.0376, 0.0356,
         0.0276, 0.0076, 0.0449, 0.0246, 0.0466, 0.0108, 0.0260]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0440, 0.0168, 0.0238],
        [0.0472, 0.0232, 0.0351],
        [0.0337, 0.0181, 0.0278],
        [0.0555, 0.0215, 0.0217],
        [0.0643, 0.0285, 0.0327],
        [0.0508, 0.0139, 0.0352],
        [0.0436, 0.0193, 0.0316],
        [0.0611, 0.0208, 0.0376],
        [0.0607, 0.0242, 0.0356],
        [0.0303, 0.0177, 0.0276],
        [0.0299, 0.0089, 0.0076],
        [0.0769, 0.0298, 0.0449],
        [0.0508, 0.0291, 0.0246],
        [0.0285, 0.0204, 0.0466],
        [0.0149, 0.0101, 0.0108],
        [0.0208, 0.0131, 0.0260]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0730],
        [0.0384],
        [0.0332],
        [0.0458],
        [0.0787],
        [0.0374],
        [0.0617],
        [0.0528],
        [0.0332],
        [0.0444],
        [0.0615],
        [0.0551],
        [0.0520],
        [0.0270],
        [0.0547],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0730, 0.0384, 0.0332, 0.0458, 0.0787, 0.0374, 0.0617, 0.0528, 0.0332,
         0.0444, 0.0615, 0.0551, 0.0520, 0.0270, 0.0547, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0295],
        [0.0182],
        [0.0249],
        [0.0188],
        [0.0274],
        [0.0250],
        [0.0189],
        [0.0263],
        [0.0161],
        [0.0217],
        [0.0241],
        [0.0216],
        [0.0248],
        [0.0117],
        [0.0191],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0295, 0.0182, 0.0249, 0.0188, 0.0274, 0.0250, 0.0189, 0.0263, 0.0161,
         0.0217, 0.0241, 0.0216, 0.0248, 0.0117, 0.0191, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0586],
        [0.0393],
        [0.0261],
        [0.0256],
        [0.0431],
        [0.0357],
        [0.0350],
        [0.0327],
        [0.0228],
        [0.0538],
        [0.0300],
        [0.0347],
        [0.0247],
        [0.0215],
        [0.0319],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0586, 0.0393, 0.0261, 0.0256, 0.0431, 0.0357, 0.0350, 0.0327, 0.0228,
         0.0538, 0.0300, 0.0347, 0.0247, 0.0215, 0.0319, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0730, 0.0295, 0.0586],
        [0.0384, 0.0182, 0.0393],
        [0.0332, 0.0249, 0.0261],
        [0.0458, 0.0188, 0.0256],
        [0.0787, 0.0274, 0.0431],
        [0.0374, 0.0250, 0.0357],
        [0.0617, 0.0189, 0.0350],
        [0.0528, 0.0263, 0.0327],
        [0.0332, 0.0161, 0.0228],
        [0.0444, 0.0217, 0.0538],
        [0.0615, 0.0241, 0.0300],
        [0.0551, 0.0216, 0.0347],
        [0.0520, 0.0248, 0.0247],
        [0.0270, 0.0117, 0.0215],
        [0.0547, 0.0191, 0.0319],
        [0.0275, 0.0208, 0.0208]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0328],
        [0.0598],
        [0.0584],
        [0.0589],
        [0.0273],
        [0.0118],
        [0.0745],
        [0.0741],
        [0.0777],
        [0.0603],
        [0.0301],
        [0.0572],
        [0.0160],
        [0.0615],
        [0.0744],
        [0.0683]], device='cuda:0', dtype=torch.float16)/tensor([[0.0328, 0.0598, 0.0584, 0.0589, 0.0273, 0.0118, 0.0745, 0.0741, 0.0777,
         0.0603, 0.0301, 0.0572, 0.0160, 0.0615, 0.0744, 0.0683]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0158],
        [0.0285],
        [0.0179],
        [0.0344],
        [0.0111],
        [0.0079],
        [0.0276],
        [0.0246],
        [0.0250],
        [0.0277],
        [0.0104],
        [0.0263],
        [0.0114],
        [0.0181],
        [0.0308],
        [0.0349]], device='cuda:0', dtype=torch.float16)/tensor([[0.0158, 0.0285, 0.0179, 0.0344, 0.0111, 0.0079, 0.0276, 0.0246, 0.0250,
         0.0277, 0.0104, 0.0263, 0.0114, 0.0181, 0.0308, 0.0349]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0208],
        [0.0280],
        [0.0302],
        [0.0589],
        [0.0172],
        [0.0096],
        [0.0329],
        [0.0482],
        [0.0530],
        [0.0353],
        [0.0175],
        [0.0418],
        [0.0240],
        [0.0291],
        [0.0294],
        [0.0622]], device='cuda:0', dtype=torch.float16)/tensor([[0.0208, 0.0280, 0.0302, 0.0589, 0.0172, 0.0096, 0.0329, 0.0482, 0.0530,
         0.0353, 0.0175, 0.0418, 0.0240, 0.0291, 0.0294, 0.0622]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0328, 0.0158, 0.0208],
        [0.0598, 0.0285, 0.0280],
        [0.0584, 0.0179, 0.0302],
        [0.0589, 0.0344, 0.0589],
        [0.0273, 0.0111, 0.0172],
        [0.0118, 0.0079, 0.0096],
        [0.0745, 0.0276, 0.0329],
        [0.0741, 0.0246, 0.0482],
        [0.0777, 0.0250, 0.0530],
        [0.0603, 0.0277, 0.0353],
        [0.0301, 0.0104, 0.0175],
        [0.0572, 0.0263, 0.0418],
        [0.0160, 0.0114, 0.0240],
        [0.0615, 0.0181, 0.0291],
        [0.0744, 0.0308, 0.0294],
        [0.0683, 0.0349, 0.0622]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0547],
        [0.0603],
        [0.0460],
        [0.0413],
        [0.0615],
        [0.0322],
        [0.0282],
        [0.0315],
        [0.0656],
        [0.0225],
        [0.0555],
        [0.0308],
        [0.0364],
        [0.0288],
        [0.0298],
        [0.0412]], device='cuda:0', dtype=torch.float16)/tensor([[0.0547, 0.0603, 0.0460, 0.0413, 0.0615, 0.0322, 0.0282, 0.0315, 0.0656,
         0.0225, 0.0555, 0.0308, 0.0364, 0.0288, 0.0298, 0.0412]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0200],
        [0.0233],
        [0.0277],
        [0.0370],
        [0.0341],
        [0.0189],
        [0.0098],
        [0.0154],
        [0.0220],
        [0.0248],
        [0.0339],
        [0.0215],
        [0.0152],
        [0.0259],
        [0.0222],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0233, 0.0277, 0.0370, 0.0341, 0.0189, 0.0098, 0.0154, 0.0220,
         0.0248, 0.0339, 0.0215, 0.0152, 0.0259, 0.0222, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0275],
        [0.0473],
        [0.0352],
        [0.0520],
        [0.0322],
        [0.0248],
        [0.0197],
        [0.0187],
        [0.0404],
        [0.0166],
        [0.0707],
        [0.0199],
        [0.0177],
        [0.0383],
        [0.0240],
        [0.0445]], device='cuda:0', dtype=torch.float16)/tensor([[0.0275, 0.0473, 0.0352, 0.0520, 0.0322, 0.0248, 0.0197, 0.0187, 0.0404,
         0.0166, 0.0707, 0.0199, 0.0177, 0.0383, 0.0240, 0.0445]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0547, 0.0200, 0.0275],
        [0.0603, 0.0233, 0.0473],
        [0.0460, 0.0277, 0.0352],
        [0.0413, 0.0370, 0.0520],
        [0.0615, 0.0341, 0.0322],
        [0.0322, 0.0189, 0.0248],
        [0.0282, 0.0098, 0.0197],
        [0.0315, 0.0154, 0.0187],
        [0.0656, 0.0220, 0.0404],
        [0.0225, 0.0248, 0.0166],
        [0.0555, 0.0339, 0.0707],
        [0.0308, 0.0215, 0.0199],
        [0.0364, 0.0152, 0.0177],
        [0.0288, 0.0259, 0.0383],
        [0.0298, 0.0222, 0.0240],
        [0.0412, 0.0122, 0.0445]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0084],
        [0.0136],
        [0.0533],
        [0.0504],
        [0.0786],
        [0.0278],
        [0.0273],
        [0.0775],
        [0.0480],
        [0.0508],
        [0.0735],
        [0.0383],
        [0.0403],
        [0.0290],
        [0.0308],
        [0.0430]], device='cuda:0', dtype=torch.float16)/tensor([[0.0084, 0.0136, 0.0533, 0.0504, 0.0786, 0.0278, 0.0273, 0.0775, 0.0480,
         0.0508, 0.0735, 0.0383, 0.0403, 0.0290, 0.0308, 0.0430]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0075],
        [0.0214],
        [0.0308],
        [0.0303],
        [0.0161],
        [0.0141],
        [0.0287],
        [0.0296],
        [0.0122],
        [0.0207],
        [0.0250],
        [0.0147],
        [0.0234],
        [0.0121],
        [0.0268],
        [0.0265]], device='cuda:0', dtype=torch.float16)/tensor([[0.0075, 0.0214, 0.0308, 0.0303, 0.0161, 0.0141, 0.0287, 0.0296, 0.0122,
         0.0207, 0.0250, 0.0147, 0.0234, 0.0121, 0.0268, 0.0265]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0146],
        [0.0127],
        [0.0496],
        [0.0334],
        [0.0496],
        [0.0282],
        [0.0265],
        [0.0728],
        [0.0401],
        [0.0276],
        [0.0377],
        [0.0358],
        [0.0332],
        [0.0201],
        [0.0292],
        [0.0395]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0127, 0.0496, 0.0334, 0.0496, 0.0282, 0.0265, 0.0728, 0.0401,
         0.0276, 0.0377, 0.0358, 0.0332, 0.0201, 0.0292, 0.0395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0084, 0.0075, 0.0146],
        [0.0136, 0.0214, 0.0127],
        [0.0533, 0.0308, 0.0496],
        [0.0504, 0.0303, 0.0334],
        [0.0786, 0.0161, 0.0496],
        [0.0278, 0.0141, 0.0282],
        [0.0273, 0.0287, 0.0265],
        [0.0775, 0.0296, 0.0728],
        [0.0480, 0.0122, 0.0401],
        [0.0508, 0.0207, 0.0276],
        [0.0735, 0.0250, 0.0377],
        [0.0383, 0.0147, 0.0358],
        [0.0403, 0.0234, 0.0332],
        [0.0290, 0.0121, 0.0201],
        [0.0308, 0.0268, 0.0292],
        [0.0430, 0.0265, 0.0395]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0215],
        [0.0950],
        [0.0440],
        [0.0751],
        [0.0413],
        [0.0575],
        [0.0303],
        [0.0329],
        [0.0337],
        [0.0407],
        [0.0461],
        [0.0610],
        [0.0669],
        [0.0269],
        [0.0282],
        [0.0308]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0950, 0.0440, 0.0751, 0.0413, 0.0575, 0.0303, 0.0329, 0.0337,
         0.0407, 0.0461, 0.0610, 0.0669, 0.0269, 0.0282, 0.0308]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0120],
        [0.0375],
        [0.0260],
        [0.0268],
        [0.0132],
        [0.0182],
        [0.0168],
        [0.0172],
        [0.0127],
        [0.0146],
        [0.0261],
        [0.0287],
        [0.0271],
        [0.0102],
        [0.0154],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0375, 0.0260, 0.0268, 0.0132, 0.0182, 0.0168, 0.0172, 0.0127,
         0.0146, 0.0261, 0.0287, 0.0271, 0.0102, 0.0154, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0191],
        [0.0439],
        [0.0307],
        [0.0452],
        [0.0278],
        [0.0247],
        [0.0271],
        [0.0298],
        [0.0190],
        [0.0318],
        [0.0328],
        [0.0373],
        [0.0446],
        [0.0113],
        [0.0125],
        [0.0214]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0439, 0.0307, 0.0452, 0.0278, 0.0247, 0.0271, 0.0298, 0.0190,
         0.0318, 0.0328, 0.0373, 0.0446, 0.0113, 0.0125, 0.0214]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0215, 0.0120, 0.0191],
        [0.0950, 0.0375, 0.0439],
        [0.0440, 0.0260, 0.0307],
        [0.0751, 0.0268, 0.0452],
        [0.0413, 0.0132, 0.0278],
        [0.0575, 0.0182, 0.0247],
        [0.0303, 0.0168, 0.0271],
        [0.0329, 0.0172, 0.0298],
        [0.0337, 0.0127, 0.0190],
        [0.0407, 0.0146, 0.0318],
        [0.0461, 0.0261, 0.0328],
        [0.0610, 0.0287, 0.0373],
        [0.0669, 0.0271, 0.0446],
        [0.0269, 0.0102, 0.0113],
        [0.0282, 0.0154, 0.0125],
        [0.0308, 0.0169, 0.0214]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0291],
        [0.0332],
        [0.0750],
        [0.0490],
        [0.0660],
        [0.0470],
        [0.0379],
        [0.0290],
        [0.0469],
        [0.0557],
        [0.0366],
        [0.0565],
        [0.0228],
        [0.0339],
        [0.0509],
        [0.0765]], device='cuda:0', dtype=torch.float16)/tensor([[0.0291, 0.0332, 0.0750, 0.0490, 0.0660, 0.0470, 0.0379, 0.0290, 0.0469,
         0.0557, 0.0366, 0.0565, 0.0228, 0.0339, 0.0509, 0.0765]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0142],
        [0.0196],
        [0.0414],
        [0.0353],
        [0.0202],
        [0.0295],
        [0.0124],
        [0.0137],
        [0.0191],
        [0.0260],
        [0.0270],
        [0.0450],
        [0.0286],
        [0.0199],
        [0.0319],
        [0.0329]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0196, 0.0414, 0.0353, 0.0202, 0.0295, 0.0124, 0.0137, 0.0191,
         0.0260, 0.0270, 0.0450, 0.0286, 0.0199, 0.0319, 0.0329]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0312],
        [0.0195],
        [0.0394],
        [0.0366],
        [0.0293],
        [0.0278],
        [0.0226],
        [0.0375],
        [0.0319],
        [0.0386],
        [0.0282],
        [0.0372],
        [0.0221],
        [0.0365],
        [0.0403],
        [0.0624]], device='cuda:0', dtype=torch.float16)/tensor([[0.0312, 0.0195, 0.0394, 0.0366, 0.0293, 0.0278, 0.0226, 0.0375, 0.0319,
         0.0386, 0.0282, 0.0372, 0.0221, 0.0365, 0.0403, 0.0624]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0291, 0.0142, 0.0312],
        [0.0332, 0.0196, 0.0195],
        [0.0750, 0.0414, 0.0394],
        [0.0490, 0.0353, 0.0366],
        [0.0660, 0.0202, 0.0293],
        [0.0470, 0.0295, 0.0278],
        [0.0379, 0.0124, 0.0226],
        [0.0290, 0.0137, 0.0375],
        [0.0469, 0.0191, 0.0319],
        [0.0557, 0.0260, 0.0386],
        [0.0366, 0.0270, 0.0282],
        [0.0565, 0.0450, 0.0372],
        [0.0228, 0.0286, 0.0221],
        [0.0339, 0.0199, 0.0365],
        [0.0509, 0.0319, 0.0403],
        [0.0765, 0.0329, 0.0624]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0405],
        [0.0156],
        [0.0304],
        [0.0781],
        [0.0504],
        [0.0677],
        [0.0169],
        [0.0482],
        [0.0424],
        [0.0506],
        [0.0349],
        [0.0375],
        [0.0511],
        [0.0584],
        [0.0137],
        [0.0673]], device='cuda:0', dtype=torch.float16)/tensor([[0.0405, 0.0156, 0.0304, 0.0781, 0.0504, 0.0677, 0.0169, 0.0482, 0.0424,
         0.0506, 0.0349, 0.0375, 0.0511, 0.0584, 0.0137, 0.0673]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0180],
        [0.0081],
        [0.0207],
        [0.0393],
        [0.0204],
        [0.0260],
        [0.0125],
        [0.0152],
        [0.0114],
        [0.0224],
        [0.0091],
        [0.0211],
        [0.0253],
        [0.0352],
        [0.0060],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0081, 0.0207, 0.0393, 0.0204, 0.0260, 0.0125, 0.0152, 0.0114,
         0.0224, 0.0091, 0.0211, 0.0253, 0.0352, 0.0060, 0.0369]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0287],
        [0.0102],
        [0.0254],
        [0.0466],
        [0.0499],
        [0.0386],
        [0.0178],
        [0.0315],
        [0.0260],
        [0.0323],
        [0.0117],
        [0.0226],
        [0.0341],
        [0.0455],
        [0.0090],
        [0.0488]], device='cuda:0', dtype=torch.float16)/tensor([[0.0287, 0.0102, 0.0254, 0.0466, 0.0499, 0.0386, 0.0178, 0.0315, 0.0260,
         0.0323, 0.0117, 0.0226, 0.0341, 0.0455, 0.0090, 0.0488]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0405, 0.0180, 0.0287],
        [0.0156, 0.0081, 0.0102],
        [0.0304, 0.0207, 0.0254],
        [0.0781, 0.0393, 0.0466],
        [0.0504, 0.0204, 0.0499],
        [0.0677, 0.0260, 0.0386],
        [0.0169, 0.0125, 0.0178],
        [0.0482, 0.0152, 0.0315],
        [0.0424, 0.0114, 0.0260],
        [0.0506, 0.0224, 0.0323],
        [0.0349, 0.0091, 0.0117],
        [0.0375, 0.0211, 0.0226],
        [0.0511, 0.0253, 0.0341],
        [0.0584, 0.0352, 0.0455],
        [0.0137, 0.0060, 0.0090],
        [0.0673, 0.0369, 0.0488]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0792],
        [0.0330],
        [0.0328],
        [0.0375],
        [0.0690],
        [0.0275],
        [0.0440],
        [0.0557],
        [0.0359],
        [0.0612],
        [0.0504],
        [0.0367],
        [0.0576],
        [0.0356],
        [0.0592],
        [0.0577]], device='cuda:0', dtype=torch.float16)/tensor([[0.0792, 0.0330, 0.0328, 0.0375, 0.0690, 0.0275, 0.0440, 0.0557, 0.0359,
         0.0612, 0.0504, 0.0367, 0.0576, 0.0356, 0.0592, 0.0577]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0277],
        [0.0182],
        [0.0214],
        [0.0280],
        [0.0356],
        [0.0184],
        [0.0169],
        [0.0194],
        [0.0182],
        [0.0276],
        [0.0268],
        [0.0305],
        [0.0183],
        [0.0233],
        [0.0271],
        [0.0274]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0182, 0.0214, 0.0280, 0.0356, 0.0184, 0.0169, 0.0194, 0.0182,
         0.0276, 0.0268, 0.0305, 0.0183, 0.0233, 0.0271, 0.0274]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0458],
        [0.0228],
        [0.0219],
        [0.0350],
        [0.0529],
        [0.0245],
        [0.0287],
        [0.0327],
        [0.0211],
        [0.0431],
        [0.0414],
        [0.0414],
        [0.0242],
        [0.0394],
        [0.0671],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0458, 0.0228, 0.0219, 0.0350, 0.0529, 0.0245, 0.0287, 0.0327, 0.0211,
         0.0431, 0.0414, 0.0414, 0.0242, 0.0394, 0.0671, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0792, 0.0277, 0.0458],
        [0.0330, 0.0182, 0.0228],
        [0.0328, 0.0214, 0.0219],
        [0.0375, 0.0280, 0.0350],
        [0.0690, 0.0356, 0.0529],
        [0.0275, 0.0184, 0.0245],
        [0.0440, 0.0169, 0.0287],
        [0.0557, 0.0194, 0.0327],
        [0.0359, 0.0182, 0.0211],
        [0.0612, 0.0276, 0.0431],
        [0.0504, 0.0268, 0.0414],
        [0.0367, 0.0305, 0.0414],
        [0.0576, 0.0183, 0.0242],
        [0.0356, 0.0233, 0.0394],
        [0.0592, 0.0271, 0.0671],
        [0.0577, 0.0274, 0.0180]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0228],
        [0.0184],
        [0.0489],
        [0.0639],
        [0.0370],
        [0.0338],
        [0.0484],
        [0.0564],
        [0.0426],
        [0.0280],
        [0.0256],
        [0.0425],
        [0.0232],
        [0.0309],
        [0.0183],
        [0.0398]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0184, 0.0489, 0.0639, 0.0370, 0.0338, 0.0484, 0.0564, 0.0426,
         0.0280, 0.0256, 0.0425, 0.0232, 0.0309, 0.0183, 0.0398]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0113],
        [0.0170],
        [0.0258],
        [0.0220],
        [0.0211],
        [0.0143],
        [0.0224],
        [0.0216],
        [0.0097],
        [0.0155],
        [0.0129],
        [0.0185],
        [0.0348],
        [0.0043],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0113, 0.0170, 0.0258, 0.0220, 0.0211, 0.0143, 0.0224, 0.0216,
         0.0097, 0.0155, 0.0129, 0.0185, 0.0348, 0.0043, 0.0237]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0249],
        [0.0084],
        [0.0201],
        [0.0436],
        [0.0311],
        [0.0238],
        [0.0257],
        [0.0348],
        [0.0481],
        [0.0150],
        [0.0244],
        [0.0276],
        [0.0121],
        [0.0428],
        [0.0146],
        [0.0380]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0084, 0.0201, 0.0436, 0.0311, 0.0238, 0.0257, 0.0348, 0.0481,
         0.0150, 0.0244, 0.0276, 0.0121, 0.0428, 0.0146, 0.0380]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0228, 0.0136, 0.0249],
        [0.0184, 0.0113, 0.0084],
        [0.0489, 0.0170, 0.0201],
        [0.0639, 0.0258, 0.0436],
        [0.0370, 0.0220, 0.0311],
        [0.0338, 0.0211, 0.0238],
        [0.0484, 0.0143, 0.0257],
        [0.0564, 0.0224, 0.0348],
        [0.0426, 0.0216, 0.0481],
        [0.0280, 0.0097, 0.0150],
        [0.0256, 0.0155, 0.0244],
        [0.0425, 0.0129, 0.0276],
        [0.0232, 0.0185, 0.0121],
        [0.0309, 0.0348, 0.0428],
        [0.0183, 0.0043, 0.0146],
        [0.0398, 0.0237, 0.0380]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0498],
        [0.0671],
        [0.0645],
        [0.0491],
        [0.0662],
        [0.0195],
        [0.0608],
        [0.0851],
        [0.0408],
        [0.0486],
        [0.0535],
        [0.0513],
        [0.0308],
        [0.0310],
        [0.0393],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0498, 0.0671, 0.0645, 0.0491, 0.0662, 0.0195, 0.0608, 0.0851, 0.0408,
         0.0486, 0.0535, 0.0513, 0.0308, 0.0310, 0.0393, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0224],
        [0.0191],
        [0.0218],
        [0.0377],
        [0.0330],
        [0.0195],
        [0.0301],
        [0.0336],
        [0.0198],
        [0.0179],
        [0.0356],
        [0.0159],
        [0.0221],
        [0.0333],
        [0.0191],
        [0.0216]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0191, 0.0218, 0.0377, 0.0330, 0.0195, 0.0301, 0.0336, 0.0198,
         0.0179, 0.0356, 0.0159, 0.0221, 0.0333, 0.0191, 0.0216]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0348],
        [0.0415],
        [0.0419],
        [0.0384],
        [0.0323],
        [0.0127],
        [0.0333],
        [0.0296],
        [0.0164],
        [0.0199],
        [0.0465],
        [0.0306],
        [0.0307],
        [0.0395],
        [0.0326],
        [0.0240]], device='cuda:0', dtype=torch.float16)/tensor([[0.0348, 0.0415, 0.0419, 0.0384, 0.0323, 0.0127, 0.0333, 0.0296, 0.0164,
         0.0199, 0.0465, 0.0306, 0.0307, 0.0395, 0.0326, 0.0240]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0498, 0.0224, 0.0348],
        [0.0671, 0.0191, 0.0415],
        [0.0645, 0.0218, 0.0419],
        [0.0491, 0.0377, 0.0384],
        [0.0662, 0.0330, 0.0323],
        [0.0195, 0.0195, 0.0127],
        [0.0608, 0.0301, 0.0333],
        [0.0851, 0.0336, 0.0296],
        [0.0408, 0.0198, 0.0164],
        [0.0486, 0.0179, 0.0199],
        [0.0535, 0.0356, 0.0465],
        [0.0513, 0.0159, 0.0306],
        [0.0308, 0.0221, 0.0307],
        [0.0310, 0.0333, 0.0395],
        [0.0393, 0.0191, 0.0326],
        [0.0267, 0.0216, 0.0240]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0437],
        [0.0536],
        [0.0360],
        [0.0162],
        [0.0460],
        [0.0725]], device='cuda:0', dtype=torch.float16)/tensor([[0.0437, 0.0536, 0.0360, 0.0162, 0.0460, 0.0725]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0188],
        [0.0277],
        [0.0121],
        [0.0092],
        [0.0138],
        [0.0280]], device='cuda:0', dtype=torch.float16)/tensor([[0.0188, 0.0277, 0.0121, 0.0092, 0.0138, 0.0280]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0451],
        [0.0391],
        [0.0219],
        [0.0223],
        [0.0235],
        [0.0660]], device='cuda:0', dtype=torch.float16)/tensor([[0.0451, 0.0391, 0.0219, 0.0223, 0.0235, 0.0660]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0437, 0.0188, 0.0451],
        [0.0536, 0.0277, 0.0391],
        [0.0360, 0.0121, 0.0219],
        [0.0162, 0.0092, 0.0223],
        [0.0460, 0.0138, 0.0235],
        [0.0725, 0.0280, 0.0660]], device='cuda:0')
acc:  0.3686868686868687
Time taken to execute the en NLI task with prompt type active, variation 4 and batchsize 16: 0:03:02.648835
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI active 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 310.22it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0073],
        [0.0154],
        [0.0082],
        [0.0088],
        [0.0343],
        [0.0224],
        [0.0171],
        [0.0045],
        [0.0752],
        [0.0136],
        [0.0106],
        [0.0214],
        [0.0092],
        [0.0096],
        [0.0076],
        [0.1160]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0154, 0.0082, 0.0088, 0.0343, 0.0224, 0.0171, 0.0045, 0.0752,
         0.0136, 0.0106, 0.0214, 0.0092, 0.0096, 0.0076, 0.1160]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0046],
        [0.0046],
        [0.0032],
        [0.0080],
        [0.0061],
        [0.0073],
        [0.0022],
        [0.0028],
        [0.0184],
        [0.0048],
        [0.0052],
        [0.0050],
        [0.0053],
        [0.0022],
        [0.0046],
        [0.0241]], device='cuda:0', dtype=torch.float16)/tensor([[0.0046, 0.0046, 0.0032, 0.0080, 0.0061, 0.0073, 0.0022, 0.0028, 0.0184,
         0.0048, 0.0052, 0.0050, 0.0053, 0.0022, 0.0046, 0.0241]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0019],
        [0.0040],
        [0.0063],
        [0.0025],
        [0.0087],
        [0.0147],
        [0.0038],
        [0.0028],
        [0.0238],
        [0.0062],
        [0.0026],
        [0.0032],
        [0.0044],
        [0.0040],
        [0.0021],
        [0.0225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0019, 0.0040, 0.0063, 0.0025, 0.0087, 0.0147, 0.0038, 0.0028, 0.0238,
         0.0062, 0.0026, 0.0032, 0.0044, 0.0040, 0.0021, 0.0225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0073, 0.0046, 0.0019],
        [0.0154, 0.0046, 0.0040],
        [0.0082, 0.0032, 0.0063],
        [0.0088, 0.0080, 0.0025],
        [0.0343, 0.0061, 0.0087],
        [0.0224, 0.0073, 0.0147],
        [0.0171, 0.0022, 0.0038],
        [0.0045, 0.0028, 0.0028],
        [0.0752, 0.0184, 0.0238],
        [0.0136, 0.0048, 0.0062],
        [0.0106, 0.0052, 0.0026],
        [0.0214, 0.0050, 0.0032],
        [0.0092, 0.0053, 0.0044],
        [0.0096, 0.0022, 0.0040],
        [0.0076, 0.0046, 0.0021],
        [0.1160, 0.0241, 0.0225]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0626],
        [0.0032],
        [0.0544],
        [0.0168],
        [0.0123],
        [0.0068],
        [0.0133],
        [0.0454],
        [0.0591],
        [0.0230],
        [0.0166],
        [0.0338],
        [0.0709],
        [0.0118],
        [0.0083],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0626, 0.0032, 0.0544, 0.0168, 0.0123, 0.0068, 0.0133, 0.0454, 0.0591,
         0.0230, 0.0166, 0.0338, 0.0709, 0.0118, 0.0083, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0193],
        [0.0009],
        [0.0091],
        [0.0069],
        [0.0046],
        [0.0124],
        [0.0049],
        [0.0080],
        [0.0116],
        [0.0063],
        [0.0053],
        [0.0109],
        [0.0199],
        [0.0045],
        [0.0042],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0009, 0.0091, 0.0069, 0.0046, 0.0124, 0.0049, 0.0080, 0.0116,
         0.0063, 0.0053, 0.0109, 0.0199, 0.0045, 0.0042, 0.0029]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0132],
        [0.0005],
        [0.0122],
        [0.0094],
        [0.0029],
        [0.0028],
        [0.0048],
        [0.0074],
        [0.0111],
        [0.0066],
        [0.0071],
        [0.0084],
        [0.0162],
        [0.0050],
        [0.0017],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0132, 0.0005, 0.0122, 0.0094, 0.0029, 0.0028, 0.0048, 0.0074, 0.0111,
         0.0066, 0.0071, 0.0084, 0.0162, 0.0050, 0.0017, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0626, 0.0193, 0.0132],
        [0.0032, 0.0009, 0.0005],
        [0.0544, 0.0091, 0.0122],
        [0.0168, 0.0069, 0.0094],
        [0.0123, 0.0046, 0.0029],
        [0.0068, 0.0124, 0.0028],
        [0.0133, 0.0049, 0.0048],
        [0.0454, 0.0080, 0.0074],
        [0.0591, 0.0116, 0.0111],
        [0.0230, 0.0063, 0.0066],
        [0.0166, 0.0053, 0.0071],
        [0.0338, 0.0109, 0.0084],
        [0.0709, 0.0199, 0.0162],
        [0.0118, 0.0045, 0.0050],
        [0.0083, 0.0042, 0.0017],
        [0.0089, 0.0029, 0.0025]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0198],
        [0.0055],
        [0.0123],
        [0.0124],
        [0.0830],
        [0.0653],
        [0.0189],
        [0.0592],
        [0.0745],
        [0.0128],
        [0.0392],
        [0.0511],
        [0.0669],
        [0.0198],
        [0.0873],
        [0.1093]], device='cuda:0', dtype=torch.float16)/tensor([[0.0198, 0.0055, 0.0123, 0.0124, 0.0830, 0.0653, 0.0189, 0.0592, 0.0745,
         0.0128, 0.0392, 0.0511, 0.0669, 0.0198, 0.0873, 0.1093]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0025],
        [0.0043],
        [0.0088],
        [0.0184],
        [0.0176],
        [0.0045],
        [0.0131],
        [0.0171],
        [0.0030],
        [0.0064],
        [0.0104],
        [0.0118],
        [0.0086],
        [0.0292],
        [0.0220]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0025, 0.0043, 0.0088, 0.0184, 0.0176, 0.0045, 0.0131, 0.0171,
         0.0030, 0.0064, 0.0104, 0.0118, 0.0086, 0.0292, 0.0220]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0041],
        [0.0032],
        [0.0039],
        [0.0075],
        [0.0163],
        [0.0238],
        [0.0024],
        [0.0168],
        [0.0147],
        [0.0022],
        [0.0079],
        [0.0089],
        [0.0141],
        [0.0049],
        [0.0401],
        [0.0145]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0032, 0.0039, 0.0075, 0.0163, 0.0238, 0.0024, 0.0168, 0.0147,
         0.0022, 0.0079, 0.0089, 0.0141, 0.0049, 0.0401, 0.0145]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0198, 0.0062, 0.0041],
        [0.0055, 0.0025, 0.0032],
        [0.0123, 0.0043, 0.0039],
        [0.0124, 0.0088, 0.0075],
        [0.0830, 0.0184, 0.0163],
        [0.0653, 0.0176, 0.0238],
        [0.0189, 0.0045, 0.0024],
        [0.0592, 0.0131, 0.0168],
        [0.0745, 0.0171, 0.0147],
        [0.0128, 0.0030, 0.0022],
        [0.0392, 0.0064, 0.0079],
        [0.0511, 0.0104, 0.0089],
        [0.0669, 0.0118, 0.0141],
        [0.0198, 0.0086, 0.0049],
        [0.0873, 0.0292, 0.0401],
        [0.1093, 0.0220, 0.0145]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0804],
        [0.0261],
        [0.0244],
        [0.0784],
        [0.0092],
        [0.0141],
        [0.0580],
        [0.0112],
        [0.0967],
        [0.0075],
        [0.0164],
        [0.0085],
        [0.0149],
        [0.1059],
        [0.0168],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0804, 0.0261, 0.0244, 0.0784, 0.0092, 0.0141, 0.0580, 0.0112, 0.0967,
         0.0075, 0.0164, 0.0085, 0.0149, 0.1059, 0.0168, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0285],
        [0.0119],
        [0.0101],
        [0.0195],
        [0.0033],
        [0.0049],
        [0.0179],
        [0.0127],
        [0.0219],
        [0.0031],
        [0.0067],
        [0.0025],
        [0.0039],
        [0.0249],
        [0.0112],
        [0.0026]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0119, 0.0101, 0.0195, 0.0033, 0.0049, 0.0179, 0.0127, 0.0219,
         0.0031, 0.0067, 0.0025, 0.0039, 0.0249, 0.0112, 0.0026]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0398],
        [0.0076],
        [0.0122],
        [0.0217],
        [0.0023],
        [0.0037],
        [0.0120],
        [0.0063],
        [0.0172],
        [0.0032],
        [0.0042],
        [0.0013],
        [0.0059],
        [0.0386],
        [0.0049],
        [0.0008]], device='cuda:0', dtype=torch.float16)/tensor([[0.0398, 0.0076, 0.0122, 0.0217, 0.0023, 0.0037, 0.0120, 0.0063, 0.0172,
         0.0032, 0.0042, 0.0013, 0.0059, 0.0386, 0.0049, 0.0008]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0804, 0.0285, 0.0398],
        [0.0261, 0.0119, 0.0076],
        [0.0244, 0.0101, 0.0122],
        [0.0784, 0.0195, 0.0217],
        [0.0092, 0.0033, 0.0023],
        [0.0141, 0.0049, 0.0037],
        [0.0580, 0.0179, 0.0120],
        [0.0112, 0.0127, 0.0063],
        [0.0967, 0.0219, 0.0172],
        [0.0075, 0.0031, 0.0032],
        [0.0164, 0.0067, 0.0042],
        [0.0085, 0.0025, 0.0013],
        [0.0149, 0.0039, 0.0059],
        [0.1059, 0.0249, 0.0386],
        [0.0168, 0.0112, 0.0049],
        [0.0110, 0.0026, 0.0008]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0545],
        [0.0065],
        [0.0114],
        [0.0615],
        [0.0146],
        [0.0261],
        [0.0152],
        [0.0038],
        [0.0636],
        [0.0114],
        [0.0146],
        [0.0108],
        [0.0272],
        [0.0120],
        [0.0462],
        [0.0078]], device='cuda:0', dtype=torch.float16)/tensor([[0.0545, 0.0065, 0.0114, 0.0615, 0.0146, 0.0261, 0.0152, 0.0038, 0.0636,
         0.0114, 0.0146, 0.0108, 0.0272, 0.0120, 0.0462, 0.0078]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0122],
        [0.0035],
        [0.0058],
        [0.0180],
        [0.0054],
        [0.0073],
        [0.0043],
        [0.0010],
        [0.0350],
        [0.0045],
        [0.0054],
        [0.0033],
        [0.0065],
        [0.0049],
        [0.0096],
        [0.0021]], device='cuda:0', dtype=torch.float16)/tensor([[0.0122, 0.0035, 0.0058, 0.0180, 0.0054, 0.0073, 0.0043, 0.0010, 0.0350,
         0.0045, 0.0054, 0.0033, 0.0065, 0.0049, 0.0096, 0.0021]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0099],
        [0.0040],
        [0.0035],
        [0.0119],
        [0.0027],
        [0.0021],
        [0.0036],
        [0.0005],
        [0.0294],
        [0.0041],
        [0.0063],
        [0.0026],
        [0.0042],
        [0.0034],
        [0.0125],
        [0.0020]], device='cuda:0', dtype=torch.float16)/tensor([[0.0099, 0.0040, 0.0035, 0.0119, 0.0027, 0.0021, 0.0036, 0.0005, 0.0294,
         0.0041, 0.0063, 0.0026, 0.0042, 0.0034, 0.0125, 0.0020]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0545, 0.0122, 0.0099],
        [0.0065, 0.0035, 0.0040],
        [0.0114, 0.0058, 0.0035],
        [0.0615, 0.0180, 0.0119],
        [0.0146, 0.0054, 0.0027],
        [0.0261, 0.0073, 0.0021],
        [0.0152, 0.0043, 0.0036],
        [0.0038, 0.0010, 0.0005],
        [0.0636, 0.0350, 0.0294],
        [0.0114, 0.0045, 0.0041],
        [0.0146, 0.0054, 0.0063],
        [0.0108, 0.0033, 0.0026],
        [0.0272, 0.0065, 0.0042],
        [0.0120, 0.0049, 0.0034],
        [0.0462, 0.0096, 0.0125],
        [0.0078, 0.0021, 0.0020]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0018],
        [0.0504],
        [0.1034],
        [0.0941],
        [0.0845],
        [0.1243],
        [0.0374],
        [0.0111],
        [0.0295],
        [0.0110],
        [0.0802],
        [0.0082],
        [0.0189],
        [0.0134],
        [0.0196],
        [0.0093]], device='cuda:0', dtype=torch.float16)/tensor([[0.0018, 0.0504, 0.1034, 0.0941, 0.0845, 0.1243, 0.0374, 0.0111, 0.0295,
         0.0110, 0.0802, 0.0082, 0.0189, 0.0134, 0.0196, 0.0093]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0013],
        [0.0058],
        [0.0254],
        [0.0234],
        [0.0331],
        [0.0166],
        [0.0120],
        [0.0038],
        [0.0137],
        [0.0035],
        [0.0197],
        [0.0030],
        [0.0056],
        [0.0051],
        [0.0040],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0013, 0.0058, 0.0254, 0.0234, 0.0331, 0.0166, 0.0120, 0.0038, 0.0137,
         0.0035, 0.0197, 0.0030, 0.0056, 0.0051, 0.0040, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0009],
        [0.0102],
        [0.0289],
        [0.0397],
        [0.0119],
        [0.0306],
        [0.0083],
        [0.0028],
        [0.0061],
        [0.0017],
        [0.0134],
        [0.0030],
        [0.0052],
        [0.0058],
        [0.0046],
        [0.0032]], device='cuda:0', dtype=torch.float16)/tensor([[0.0009, 0.0102, 0.0289, 0.0397, 0.0119, 0.0306, 0.0083, 0.0028, 0.0061,
         0.0017, 0.0134, 0.0030, 0.0052, 0.0058, 0.0046, 0.0032]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0018, 0.0013, 0.0009],
        [0.0504, 0.0058, 0.0102],
        [0.1034, 0.0254, 0.0289],
        [0.0941, 0.0234, 0.0397],
        [0.0845, 0.0331, 0.0119],
        [0.1243, 0.0166, 0.0306],
        [0.0374, 0.0120, 0.0083],
        [0.0111, 0.0038, 0.0028],
        [0.0295, 0.0137, 0.0061],
        [0.0110, 0.0035, 0.0017],
        [0.0802, 0.0197, 0.0134],
        [0.0082, 0.0030, 0.0030],
        [0.0189, 0.0056, 0.0052],
        [0.0134, 0.0051, 0.0058],
        [0.0196, 0.0040, 0.0046],
        [0.0093, 0.0062, 0.0032]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0175],
        [0.0128],
        [0.0583],
        [0.0233],
        [0.0930],
        [0.0197],
        [0.0039],
        [0.0125],
        [0.0758],
        [0.0111],
        [0.0995],
        [0.0095],
        [0.0623],
        [0.0079],
        [0.0124],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0175, 0.0128, 0.0583, 0.0233, 0.0930, 0.0197, 0.0039, 0.0125, 0.0758,
         0.0111, 0.0995, 0.0095, 0.0623, 0.0079, 0.0124, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0024],
        [0.0181],
        [0.0070],
        [0.0155],
        [0.0020],
        [0.0028],
        [0.0070],
        [0.0238],
        [0.0030],
        [0.0194],
        [0.0080],
        [0.0101],
        [0.0059],
        [0.0056],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0024, 0.0181, 0.0070, 0.0155, 0.0020, 0.0028, 0.0070, 0.0238,
         0.0030, 0.0194, 0.0080, 0.0101, 0.0059, 0.0056, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0088],
        [0.0037],
        [0.0147],
        [0.0045],
        [0.0115],
        [0.0044],
        [0.0013],
        [0.0050],
        [0.0266],
        [0.0043],
        [0.0240],
        [0.0035],
        [0.0082],
        [0.0032],
        [0.0047],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0037, 0.0147, 0.0045, 0.0115, 0.0044, 0.0013, 0.0050, 0.0266,
         0.0043, 0.0240, 0.0035, 0.0082, 0.0032, 0.0047, 0.0043]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0175, 0.0117, 0.0088],
        [0.0128, 0.0024, 0.0037],
        [0.0583, 0.0181, 0.0147],
        [0.0233, 0.0070, 0.0045],
        [0.0930, 0.0155, 0.0115],
        [0.0197, 0.0020, 0.0044],
        [0.0039, 0.0028, 0.0013],
        [0.0125, 0.0070, 0.0050],
        [0.0758, 0.0238, 0.0266],
        [0.0111, 0.0030, 0.0043],
        [0.0995, 0.0194, 0.0240],
        [0.0095, 0.0080, 0.0035],
        [0.0623, 0.0101, 0.0082],
        [0.0079, 0.0059, 0.0032],
        [0.0124, 0.0056, 0.0047],
        [0.0115, 0.0031, 0.0043]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0072],
        [0.0792],
        [0.0221],
        [0.0115],
        [0.0102],
        [0.0423],
        [0.0149],
        [0.0963],
        [0.0147],
        [0.0086],
        [0.0186],
        [0.0234],
        [0.0100],
        [0.0196],
        [0.0632],
        [0.0762]], device='cuda:0', dtype=torch.float16)/tensor([[0.0072, 0.0792, 0.0221, 0.0115, 0.0102, 0.0423, 0.0149, 0.0963, 0.0147,
         0.0086, 0.0186, 0.0234, 0.0100, 0.0196, 0.0632, 0.0762]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0037],
        [0.0165],
        [0.0075],
        [0.0029],
        [0.0043],
        [0.0163],
        [0.0060],
        [0.0276],
        [0.0058],
        [0.0051],
        [0.0060],
        [0.0083],
        [0.0012],
        [0.0044],
        [0.0208],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0037, 0.0165, 0.0075, 0.0029, 0.0043, 0.0163, 0.0060, 0.0276, 0.0058,
         0.0051, 0.0060, 0.0083, 0.0012, 0.0044, 0.0208, 0.0152]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0046],
        [0.0199],
        [0.0080],
        [0.0022],
        [0.0034],
        [0.0147],
        [0.0024],
        [0.0233],
        [0.0044],
        [0.0032],
        [0.0043],
        [0.0076],
        [0.0025],
        [0.0057],
        [0.0241],
        [0.0216]], device='cuda:0', dtype=torch.float16)/tensor([[0.0046, 0.0199, 0.0080, 0.0022, 0.0034, 0.0147, 0.0024, 0.0233, 0.0044,
         0.0032, 0.0043, 0.0076, 0.0025, 0.0057, 0.0241, 0.0216]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0072, 0.0037, 0.0046],
        [0.0792, 0.0165, 0.0199],
        [0.0221, 0.0075, 0.0080],
        [0.0115, 0.0029, 0.0022],
        [0.0102, 0.0043, 0.0034],
        [0.0423, 0.0163, 0.0147],
        [0.0149, 0.0060, 0.0024],
        [0.0963, 0.0276, 0.0233],
        [0.0147, 0.0058, 0.0044],
        [0.0086, 0.0051, 0.0032],
        [0.0186, 0.0060, 0.0043],
        [0.0234, 0.0083, 0.0076],
        [0.0100, 0.0012, 0.0025],
        [0.0196, 0.0044, 0.0057],
        [0.0632, 0.0208, 0.0241],
        [0.0762, 0.0152, 0.0216]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0161],
        [0.0069],
        [0.0088],
        [0.0075],
        [0.0206],
        [0.0179],
        [0.0223],
        [0.0156],
        [0.0069],
        [0.0182],
        [0.0162],
        [0.0473],
        [0.0604],
        [0.0930],
        [0.0161],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0069, 0.0088, 0.0075, 0.0206, 0.0179, 0.0223, 0.0156, 0.0069,
         0.0182, 0.0162, 0.0473, 0.0604, 0.0930, 0.0161, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0073],
        [0.0032],
        [0.0042],
        [0.0055],
        [0.0098],
        [0.0041],
        [0.0040],
        [0.0041],
        [0.0027],
        [0.0067],
        [0.0101],
        [0.0129],
        [0.0168],
        [0.0244],
        [0.0094],
        [0.0040]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0032, 0.0042, 0.0055, 0.0098, 0.0041, 0.0040, 0.0041, 0.0027,
         0.0067, 0.0101, 0.0129, 0.0168, 0.0244, 0.0094, 0.0040]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0031],
        [0.0039],
        [0.0050],
        [0.0039],
        [0.0051],
        [0.0047],
        [0.0039],
        [0.0041],
        [0.0018],
        [0.0063],
        [0.0060],
        [0.0115],
        [0.0097],
        [0.0205],
        [0.0081],
        [0.0028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0031, 0.0039, 0.0050, 0.0039, 0.0051, 0.0047, 0.0039, 0.0041, 0.0018,
         0.0063, 0.0060, 0.0115, 0.0097, 0.0205, 0.0081, 0.0028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0161, 0.0073, 0.0031],
        [0.0069, 0.0032, 0.0039],
        [0.0088, 0.0042, 0.0050],
        [0.0075, 0.0055, 0.0039],
        [0.0206, 0.0098, 0.0051],
        [0.0179, 0.0041, 0.0047],
        [0.0223, 0.0040, 0.0039],
        [0.0156, 0.0041, 0.0041],
        [0.0069, 0.0027, 0.0018],
        [0.0182, 0.0067, 0.0063],
        [0.0162, 0.0101, 0.0060],
        [0.0473, 0.0129, 0.0115],
        [0.0604, 0.0168, 0.0097],
        [0.0930, 0.0244, 0.0205],
        [0.0161, 0.0094, 0.0081],
        [0.0116, 0.0040, 0.0028]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0314],
        [0.0171],
        [0.0370],
        [0.0175],
        [0.0227],
        [0.0214],
        [0.0104],
        [0.0162],
        [0.0172],
        [0.0149],
        [0.0351],
        [0.0089],
        [0.0969],
        [0.0122],
        [0.0129],
        [0.0067]], device='cuda:0', dtype=torch.float16)/tensor([[0.0314, 0.0171, 0.0370, 0.0175, 0.0227, 0.0214, 0.0104, 0.0162, 0.0172,
         0.0149, 0.0351, 0.0089, 0.0969, 0.0122, 0.0129, 0.0067]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0138],
        [0.0129],
        [0.0045],
        [0.0053],
        [0.0048],
        [0.0057],
        [0.0047],
        [0.0051],
        [0.0045],
        [0.0028],
        [0.0153],
        [0.0062],
        [0.0192],
        [0.0045],
        [0.0065],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0129, 0.0045, 0.0053, 0.0048, 0.0057, 0.0047, 0.0051, 0.0045,
         0.0028, 0.0153, 0.0062, 0.0192, 0.0045, 0.0065, 0.0029]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0101],
        [0.0085],
        [0.0119],
        [0.0038],
        [0.0045],
        [0.0076],
        [0.0039],
        [0.0052],
        [0.0034],
        [0.0039],
        [0.0143],
        [0.0025],
        [0.0213],
        [0.0026],
        [0.0040],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0085, 0.0119, 0.0038, 0.0045, 0.0076, 0.0039, 0.0052, 0.0034,
         0.0039, 0.0143, 0.0025, 0.0213, 0.0026, 0.0040, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0314, 0.0138, 0.0101],
        [0.0171, 0.0129, 0.0085],
        [0.0370, 0.0045, 0.0119],
        [0.0175, 0.0053, 0.0038],
        [0.0227, 0.0048, 0.0045],
        [0.0214, 0.0057, 0.0076],
        [0.0104, 0.0047, 0.0039],
        [0.0162, 0.0051, 0.0052],
        [0.0172, 0.0045, 0.0034],
        [0.0149, 0.0028, 0.0039],
        [0.0351, 0.0153, 0.0143],
        [0.0089, 0.0062, 0.0025],
        [0.0969, 0.0192, 0.0213],
        [0.0122, 0.0045, 0.0026],
        [0.0129, 0.0065, 0.0040],
        [0.0067, 0.0029, 0.0019]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0193],
        [0.0190],
        [0.0126],
        [0.0229],
        [0.0018],
        [0.0125],
        [0.0094],
        [0.0215],
        [0.0136],
        [0.0776],
        [0.0245],
        [0.0120],
        [0.0137],
        [0.0050],
        [0.0120],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0190, 0.0126, 0.0229, 0.0018, 0.0125, 0.0094, 0.0215, 0.0136,
         0.0776, 0.0245, 0.0120, 0.0137, 0.0050, 0.0120, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0065],
        [0.0048],
        [0.0083],
        [0.0118],
        [0.0013],
        [0.0063],
        [0.0037],
        [0.0043],
        [0.0093],
        [0.0111],
        [0.0105],
        [0.0027],
        [0.0043],
        [0.0037],
        [0.0054],
        [0.0028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0065, 0.0048, 0.0083, 0.0118, 0.0013, 0.0063, 0.0037, 0.0043, 0.0093,
         0.0111, 0.0105, 0.0027, 0.0043, 0.0037, 0.0054, 0.0028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0063],
        [0.0047],
        [0.0047],
        [0.0079],
        [0.0013],
        [0.0075],
        [0.0028],
        [0.0052],
        [0.0070],
        [0.0106],
        [0.0060],
        [0.0047],
        [0.0034],
        [0.0039],
        [0.0023],
        [0.0020]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0047, 0.0047, 0.0079, 0.0013, 0.0075, 0.0028, 0.0052, 0.0070,
         0.0106, 0.0060, 0.0047, 0.0034, 0.0039, 0.0023, 0.0020]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0193, 0.0065, 0.0063],
        [0.0190, 0.0048, 0.0047],
        [0.0126, 0.0083, 0.0047],
        [0.0229, 0.0118, 0.0079],
        [0.0018, 0.0013, 0.0013],
        [0.0125, 0.0063, 0.0075],
        [0.0094, 0.0037, 0.0028],
        [0.0215, 0.0043, 0.0052],
        [0.0136, 0.0093, 0.0070],
        [0.0776, 0.0111, 0.0106],
        [0.0245, 0.0105, 0.0060],
        [0.0120, 0.0027, 0.0047],
        [0.0137, 0.0043, 0.0034],
        [0.0050, 0.0037, 0.0039],
        [0.0120, 0.0054, 0.0023],
        [0.0107, 0.0028, 0.0020]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0126],
        [0.0053],
        [0.0119],
        [0.0140],
        [0.0267],
        [0.0451],
        [0.0170],
        [0.0115],
        [0.0142],
        [0.0119],
        [0.0131],
        [0.0174],
        [0.0127],
        [0.0108],
        [0.0201],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0126, 0.0053, 0.0119, 0.0140, 0.0267, 0.0451, 0.0170, 0.0115, 0.0142,
         0.0119, 0.0131, 0.0174, 0.0127, 0.0108, 0.0201, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0028],
        [0.0020],
        [0.0031],
        [0.0070],
        [0.0048],
        [0.0143],
        [0.0048],
        [0.0056],
        [0.0030],
        [0.0045],
        [0.0081],
        [0.0031],
        [0.0024],
        [0.0080],
        [0.0037],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0028, 0.0020, 0.0031, 0.0070, 0.0048, 0.0143, 0.0048, 0.0056, 0.0030,
         0.0045, 0.0081, 0.0031, 0.0024, 0.0080, 0.0037, 0.0043]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0012],
        [0.0042],
        [0.0054],
        [0.0064],
        [0.0335],
        [0.0042],
        [0.0050],
        [0.0051],
        [0.0068],
        [0.0066],
        [0.0118],
        [0.0042],
        [0.0063],
        [0.0051],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0012, 0.0042, 0.0054, 0.0064, 0.0335, 0.0042, 0.0050, 0.0051,
         0.0068, 0.0066, 0.0118, 0.0042, 0.0063, 0.0051, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0126, 0.0028, 0.0034],
        [0.0053, 0.0020, 0.0012],
        [0.0119, 0.0031, 0.0042],
        [0.0140, 0.0070, 0.0054],
        [0.0267, 0.0048, 0.0064],
        [0.0451, 0.0143, 0.0335],
        [0.0170, 0.0048, 0.0042],
        [0.0115, 0.0056, 0.0050],
        [0.0142, 0.0030, 0.0051],
        [0.0119, 0.0045, 0.0068],
        [0.0131, 0.0081, 0.0066],
        [0.0174, 0.0031, 0.0118],
        [0.0127, 0.0024, 0.0042],
        [0.0108, 0.0080, 0.0063],
        [0.0201, 0.0037, 0.0051],
        [0.0122, 0.0043, 0.0031]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0217],
        [0.0190],
        [0.0119],
        [0.0084],
        [0.0535],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0217, 0.0190, 0.0119, 0.0084, 0.0535, 0.0128]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0131],
        [0.0053],
        [0.0062],
        [0.0030],
        [0.0134],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0131, 0.0053, 0.0062, 0.0030, 0.0134, 0.0047]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0028],
        [0.0031],
        [0.0055],
        [0.0021],
        [0.0091],
        [0.0063]], device='cuda:0', dtype=torch.float16)/tensor([[0.0028, 0.0031, 0.0055, 0.0021, 0.0091, 0.0063]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0217, 0.0131, 0.0028],
        [0.0190, 0.0053, 0.0031],
        [0.0119, 0.0062, 0.0055],
        [0.0084, 0.0030, 0.0021],
        [0.0535, 0.0134, 0.0091],
        [0.0128, 0.0047, 0.0063]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type active, variation 5 and batchsize 16: 0:03:02.286422
path ['42', 'en', 'llama', 'NLI', 'active', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI passive 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 331.79it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0586],
        [0.0739],
        [0.1460],
        [0.0361],
        [0.1782],
        [0.0626],
        [0.0284],
        [0.1595],
        [0.1787],
        [0.0230],
        [0.0400],
        [0.0931],
        [0.0498],
        [0.0486],
        [0.0672],
        [0.0281]], device='cuda:0', dtype=torch.float16)/tensor([[0.0586, 0.0739, 0.1460, 0.0361, 0.1782, 0.0626, 0.0284, 0.1595, 0.1787,
         0.0230, 0.0400, 0.0931, 0.0498, 0.0486, 0.0672, 0.0281]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0121],
        [0.0123],
        [0.0267],
        [0.0091],
        [0.0422],
        [0.0103],
        [0.0075],
        [0.0277],
        [0.0493],
        [0.0065],
        [0.0130],
        [0.0136],
        [0.0133],
        [0.0105],
        [0.0099],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0121, 0.0123, 0.0267, 0.0091, 0.0422, 0.0103, 0.0075, 0.0277, 0.0493,
         0.0065, 0.0130, 0.0136, 0.0133, 0.0105, 0.0099, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0160],
        [0.0215],
        [0.0361],
        [0.0137],
        [0.0253],
        [0.0149],
        [0.0091],
        [0.0436],
        [0.0554],
        [0.0151],
        [0.0334],
        [0.0168],
        [0.0155],
        [0.0204],
        [0.0261],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0215, 0.0361, 0.0137, 0.0253, 0.0149, 0.0091, 0.0436, 0.0554,
         0.0151, 0.0334, 0.0168, 0.0155, 0.0204, 0.0261, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0586, 0.0121, 0.0160],
        [0.0739, 0.0123, 0.0215],
        [0.1460, 0.0267, 0.0361],
        [0.0361, 0.0091, 0.0137],
        [0.1782, 0.0422, 0.0253],
        [0.0626, 0.0103, 0.0149],
        [0.0284, 0.0075, 0.0091],
        [0.1595, 0.0277, 0.0436],
        [0.1787, 0.0493, 0.0554],
        [0.0230, 0.0065, 0.0151],
        [0.0400, 0.0130, 0.0334],
        [0.0931, 0.0136, 0.0168],
        [0.0498, 0.0133, 0.0155],
        [0.0486, 0.0105, 0.0204],
        [0.0672, 0.0099, 0.0261],
        [0.0281, 0.0092, 0.0109]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1458],
        [0.0460],
        [0.0230],
        [0.0433],
        [0.0185],
        [0.0760],
        [0.1770],
        [0.0396],
        [0.0637],
        [0.2145],
        [0.0253],
        [0.0581],
        [0.0624],
        [0.0358],
        [0.0588],
        [0.0359]], device='cuda:0', dtype=torch.float16)/tensor([[0.1458, 0.0460, 0.0230, 0.0433, 0.0185, 0.0760, 0.1770, 0.0396, 0.0637,
         0.2145, 0.0253, 0.0581, 0.0624, 0.0358, 0.0588, 0.0359]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0258],
        [0.0094],
        [0.0086],
        [0.0075],
        [0.0052],
        [0.0183],
        [0.0484],
        [0.0083],
        [0.0094],
        [0.0284],
        [0.0076],
        [0.0115],
        [0.0151],
        [0.0127],
        [0.0103],
        [0.0082]], device='cuda:0', dtype=torch.float16)/tensor([[0.0258, 0.0094, 0.0086, 0.0075, 0.0052, 0.0183, 0.0484, 0.0083, 0.0094,
         0.0284, 0.0076, 0.0115, 0.0151, 0.0127, 0.0103, 0.0082]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0419],
        [0.0165],
        [0.0093],
        [0.0230],
        [0.0062],
        [0.0249],
        [0.0870],
        [0.0163],
        [0.0160],
        [0.0356],
        [0.0112],
        [0.0244],
        [0.0207],
        [0.0285],
        [0.0128],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0419, 0.0165, 0.0093, 0.0230, 0.0062, 0.0249, 0.0870, 0.0163, 0.0160,
         0.0356, 0.0112, 0.0244, 0.0207, 0.0285, 0.0128, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1458, 0.0258, 0.0419],
        [0.0460, 0.0094, 0.0165],
        [0.0230, 0.0086, 0.0093],
        [0.0433, 0.0075, 0.0230],
        [0.0185, 0.0052, 0.0062],
        [0.0760, 0.0183, 0.0249],
        [0.1770, 0.0484, 0.0870],
        [0.0396, 0.0083, 0.0163],
        [0.0637, 0.0094, 0.0160],
        [0.2145, 0.0284, 0.0356],
        [0.0253, 0.0076, 0.0112],
        [0.0581, 0.0115, 0.0244],
        [0.0624, 0.0151, 0.0207],
        [0.0358, 0.0127, 0.0285],
        [0.0588, 0.0103, 0.0128],
        [0.0359, 0.0082, 0.0109]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0482],
        [0.1648],
        [0.0415],
        [0.0416],
        [0.0508],
        [0.0495],
        [0.0538],
        [0.1249],
        [0.0590],
        [0.0521],
        [0.0313],
        [0.1703],
        [0.1392],
        [0.0223],
        [0.0714],
        [0.1926]], device='cuda:0', dtype=torch.float16)/tensor([[0.0482, 0.1648, 0.0415, 0.0416, 0.0508, 0.0495, 0.0538, 0.1249, 0.0590,
         0.0521, 0.0313, 0.1703, 0.1392, 0.0223, 0.0714, 0.1926]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0140],
        [0.0359],
        [0.0132],
        [0.0132],
        [0.0184],
        [0.0145],
        [0.0117],
        [0.0270],
        [0.0110],
        [0.0155],
        [0.0093],
        [0.0279],
        [0.0209],
        [0.0076],
        [0.0101],
        [0.0282]], device='cuda:0', dtype=torch.float16)/tensor([[0.0140, 0.0359, 0.0132, 0.0132, 0.0184, 0.0145, 0.0117, 0.0270, 0.0110,
         0.0155, 0.0093, 0.0279, 0.0209, 0.0076, 0.0101, 0.0282]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0171],
        [0.0363],
        [0.0139],
        [0.0182],
        [0.0383],
        [0.0164],
        [0.0446],
        [0.0393],
        [0.0084],
        [0.0237],
        [0.0099],
        [0.0589],
        [0.0431],
        [0.0071],
        [0.0134],
        [0.0616]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0363, 0.0139, 0.0182, 0.0383, 0.0164, 0.0446, 0.0393, 0.0084,
         0.0237, 0.0099, 0.0589, 0.0431, 0.0071, 0.0134, 0.0616]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0482, 0.0140, 0.0171],
        [0.1648, 0.0359, 0.0363],
        [0.0415, 0.0132, 0.0139],
        [0.0416, 0.0132, 0.0182],
        [0.0508, 0.0184, 0.0383],
        [0.0495, 0.0145, 0.0164],
        [0.0538, 0.0117, 0.0446],
        [0.1249, 0.0270, 0.0393],
        [0.0590, 0.0110, 0.0084],
        [0.0521, 0.0155, 0.0237],
        [0.0313, 0.0093, 0.0099],
        [0.1703, 0.0279, 0.0589],
        [0.1392, 0.0209, 0.0431],
        [0.0223, 0.0076, 0.0071],
        [0.0714, 0.0101, 0.0134],
        [0.1926, 0.0282, 0.0616]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0445],
        [0.1812],
        [0.1592],
        [0.1558],
        [0.0444],
        [0.0490],
        [0.0603],
        [0.0435],
        [0.1279],
        [0.1659],
        [0.1953],
        [0.0237],
        [0.0431],
        [0.2656],
        [0.2372],
        [0.1225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0445, 0.1812, 0.1592, 0.1558, 0.0444, 0.0490, 0.0603, 0.0435, 0.1279,
         0.1659, 0.1953, 0.0237, 0.0431, 0.2656, 0.2372, 0.1225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0088],
        [0.0325],
        [0.0364],
        [0.0300],
        [0.0099],
        [0.0096],
        [0.0089],
        [0.0110],
        [0.0288],
        [0.0379],
        [0.0316],
        [0.0061],
        [0.0099],
        [0.0380],
        [0.0323],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0325, 0.0364, 0.0300, 0.0099, 0.0096, 0.0089, 0.0110, 0.0288,
         0.0379, 0.0316, 0.0061, 0.0099, 0.0380, 0.0323, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0139],
        [0.0503],
        [0.0833],
        [0.0446],
        [0.0157],
        [0.0116],
        [0.0180],
        [0.0136],
        [0.0478],
        [0.0479],
        [0.0397],
        [0.0055],
        [0.0110],
        [0.0672],
        [0.0321],
        [0.0335]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0503, 0.0833, 0.0446, 0.0157, 0.0116, 0.0180, 0.0136, 0.0478,
         0.0479, 0.0397, 0.0055, 0.0110, 0.0672, 0.0321, 0.0335]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0445, 0.0088, 0.0139],
        [0.1812, 0.0325, 0.0503],
        [0.1592, 0.0364, 0.0833],
        [0.1558, 0.0300, 0.0446],
        [0.0444, 0.0099, 0.0157],
        [0.0490, 0.0096, 0.0116],
        [0.0603, 0.0089, 0.0180],
        [0.0435, 0.0110, 0.0136],
        [0.1279, 0.0288, 0.0478],
        [0.1659, 0.0379, 0.0479],
        [0.1953, 0.0316, 0.0397],
        [0.0237, 0.0061, 0.0055],
        [0.0431, 0.0099, 0.0110],
        [0.2656, 0.0380, 0.0672],
        [0.2372, 0.0323, 0.0321],
        [0.1225, 0.0232, 0.0335]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1326],
        [0.0356],
        [0.0359],
        [0.0622],
        [0.0458],
        [0.0331],
        [0.0413],
        [0.0400],
        [0.0346],
        [0.0551],
        [0.0734],
        [0.0242],
        [0.1898],
        [0.1342],
        [0.1461],
        [0.0540]], device='cuda:0', dtype=torch.float16)/tensor([[0.1326, 0.0356, 0.0359, 0.0622, 0.0458, 0.0331, 0.0413, 0.0400, 0.0346,
         0.0551, 0.0734, 0.0242, 0.1898, 0.1342, 0.1461, 0.0540]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0350],
        [0.0060],
        [0.0154],
        [0.0129],
        [0.0149],
        [0.0095],
        [0.0093],
        [0.0072],
        [0.0080],
        [0.0164],
        [0.0113],
        [0.0060],
        [0.0263],
        [0.0242],
        [0.0325],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.0060, 0.0154, 0.0129, 0.0149, 0.0095, 0.0093, 0.0072, 0.0080,
         0.0164, 0.0113, 0.0060, 0.0263, 0.0242, 0.0325, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0449],
        [0.0084],
        [0.0186],
        [0.0190],
        [0.0159],
        [0.0092],
        [0.0164],
        [0.0125],
        [0.0090],
        [0.0240],
        [0.0244],
        [0.0066],
        [0.0351],
        [0.0690],
        [0.0358],
        [0.0190]], device='cuda:0', dtype=torch.float16)/tensor([[0.0449, 0.0084, 0.0186, 0.0190, 0.0159, 0.0092, 0.0164, 0.0125, 0.0090,
         0.0240, 0.0244, 0.0066, 0.0351, 0.0690, 0.0358, 0.0190]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1326, 0.0350, 0.0449],
        [0.0356, 0.0060, 0.0084],
        [0.0359, 0.0154, 0.0186],
        [0.0622, 0.0129, 0.0190],
        [0.0458, 0.0149, 0.0159],
        [0.0331, 0.0095, 0.0092],
        [0.0413, 0.0093, 0.0164],
        [0.0400, 0.0072, 0.0125],
        [0.0346, 0.0080, 0.0090],
        [0.0551, 0.0164, 0.0240],
        [0.0734, 0.0113, 0.0244],
        [0.0242, 0.0060, 0.0066],
        [0.1898, 0.0263, 0.0351],
        [0.1342, 0.0242, 0.0690],
        [0.1461, 0.0325, 0.0358],
        [0.0540, 0.0112, 0.0190]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0544],
        [0.0447],
        [0.0494],
        [0.0472],
        [0.0442],
        [0.0556],
        [0.0496],
        [0.0383],
        [0.0659],
        [0.1801],
        [0.0531],
        [0.0551],
        [0.2047],
        [0.1733],
        [0.0443],
        [0.0710]], device='cuda:0', dtype=torch.float16)/tensor([[0.0544, 0.0447, 0.0494, 0.0472, 0.0442, 0.0556, 0.0496, 0.0383, 0.0659,
         0.1801, 0.0531, 0.0551, 0.2047, 0.1733, 0.0443, 0.0710]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0112],
        [0.0090],
        [0.0090],
        [0.0088],
        [0.0154],
        [0.0131],
        [0.0139],
        [0.0115],
        [0.0336],
        [0.0180],
        [0.0129],
        [0.0307],
        [0.0438],
        [0.0115],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0112, 0.0090, 0.0090, 0.0088, 0.0154, 0.0131, 0.0139, 0.0115,
         0.0336, 0.0180, 0.0129, 0.0307, 0.0438, 0.0115, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0263],
        [0.0093],
        [0.0120],
        [0.0098],
        [0.0124],
        [0.0266],
        [0.0205],
        [0.0202],
        [0.0246],
        [0.0608],
        [0.0280],
        [0.0256],
        [0.0718],
        [0.0950],
        [0.0151],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0263, 0.0093, 0.0120, 0.0098, 0.0124, 0.0266, 0.0205, 0.0202, 0.0246,
         0.0608, 0.0280, 0.0256, 0.0718, 0.0950, 0.0151, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0544, 0.0117, 0.0263],
        [0.0447, 0.0112, 0.0093],
        [0.0494, 0.0090, 0.0120],
        [0.0472, 0.0090, 0.0098],
        [0.0442, 0.0088, 0.0124],
        [0.0556, 0.0154, 0.0266],
        [0.0496, 0.0131, 0.0205],
        [0.0383, 0.0139, 0.0202],
        [0.0659, 0.0115, 0.0246],
        [0.1801, 0.0336, 0.0608],
        [0.0531, 0.0180, 0.0280],
        [0.0551, 0.0129, 0.0256],
        [0.2047, 0.0307, 0.0718],
        [0.1733, 0.0438, 0.0950],
        [0.0443, 0.0115, 0.0151],
        [0.0710, 0.0120, 0.0192]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0386],
        [0.0403],
        [0.0428],
        [0.0625],
        [0.1757],
        [0.0340],
        [0.0256],
        [0.0555],
        [0.0386],
        [0.1006],
        [0.0570],
        [0.1394],
        [0.0582],
        [0.0463],
        [0.0709],
        [0.0538]], device='cuda:0', dtype=torch.float16)/tensor([[0.0386, 0.0403, 0.0428, 0.0625, 0.1757, 0.0340, 0.0256, 0.0555, 0.0386,
         0.1006, 0.0570, 0.1394, 0.0582, 0.0463, 0.0709, 0.0538]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0126],
        [0.0102],
        [0.0071],
        [0.0098],
        [0.0421],
        [0.0108],
        [0.0180],
        [0.0167],
        [0.0091],
        [0.0147],
        [0.0158],
        [0.0241],
        [0.0151],
        [0.0161],
        [0.0136],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0126, 0.0102, 0.0071, 0.0098, 0.0421, 0.0108, 0.0180, 0.0167, 0.0091,
         0.0147, 0.0158, 0.0241, 0.0151, 0.0161, 0.0136, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0174],
        [0.0191],
        [0.0097],
        [0.0123],
        [0.0447],
        [0.0086],
        [0.0174],
        [0.0227],
        [0.0095],
        [0.0277],
        [0.0423],
        [0.0388],
        [0.0264],
        [0.0200],
        [0.0144],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0174, 0.0191, 0.0097, 0.0123, 0.0447, 0.0086, 0.0174, 0.0227, 0.0095,
         0.0277, 0.0423, 0.0388, 0.0264, 0.0200, 0.0144, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0386, 0.0126, 0.0174],
        [0.0403, 0.0102, 0.0191],
        [0.0428, 0.0071, 0.0097],
        [0.0625, 0.0098, 0.0123],
        [0.1757, 0.0421, 0.0447],
        [0.0340, 0.0108, 0.0086],
        [0.0256, 0.0180, 0.0174],
        [0.0555, 0.0167, 0.0227],
        [0.0386, 0.0091, 0.0095],
        [0.1006, 0.0147, 0.0277],
        [0.0570, 0.0158, 0.0423],
        [0.1394, 0.0241, 0.0388],
        [0.0582, 0.0151, 0.0264],
        [0.0463, 0.0161, 0.0200],
        [0.0709, 0.0136, 0.0144],
        [0.0538, 0.0119, 0.0231]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0576],
        [0.0434],
        [0.0435],
        [0.0387],
        [0.0446],
        [0.0501],
        [0.0601],
        [0.1757],
        [0.0126],
        [0.0271],
        [0.1694],
        [0.0416],
        [0.1219],
        [0.0739],
        [0.0627],
        [0.0709]], device='cuda:0', dtype=torch.float16)/tensor([[0.0576, 0.0434, 0.0435, 0.0387, 0.0446, 0.0501, 0.0601, 0.1757, 0.0126,
         0.0271, 0.1694, 0.0416, 0.1219, 0.0739, 0.0627, 0.0709]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0090],
        [0.0115],
        [0.0091],
        [0.0075],
        [0.0099],
        [0.0116],
        [0.0106],
        [0.0320],
        [0.0054],
        [0.0066],
        [0.0298],
        [0.0088],
        [0.0238],
        [0.0153],
        [0.0143],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0115, 0.0091, 0.0075, 0.0099, 0.0116, 0.0106, 0.0320, 0.0054,
         0.0066, 0.0298, 0.0088, 0.0238, 0.0153, 0.0143, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0143],
        [0.0193],
        [0.0133],
        [0.0132],
        [0.0197],
        [0.0240],
        [0.0162],
        [0.0612],
        [0.0085],
        [0.0058],
        [0.0794],
        [0.0076],
        [0.0360],
        [0.0225],
        [0.0175],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0193, 0.0133, 0.0132, 0.0197, 0.0240, 0.0162, 0.0612, 0.0085,
         0.0058, 0.0794, 0.0076, 0.0360, 0.0225, 0.0175, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0576, 0.0090, 0.0143],
        [0.0434, 0.0115, 0.0193],
        [0.0435, 0.0091, 0.0133],
        [0.0387, 0.0075, 0.0132],
        [0.0446, 0.0099, 0.0197],
        [0.0501, 0.0116, 0.0240],
        [0.0601, 0.0106, 0.0162],
        [0.1757, 0.0320, 0.0612],
        [0.0126, 0.0054, 0.0085],
        [0.0271, 0.0066, 0.0058],
        [0.1694, 0.0298, 0.0794],
        [0.0416, 0.0088, 0.0076],
        [0.1219, 0.0238, 0.0360],
        [0.0739, 0.0153, 0.0225],
        [0.0627, 0.0143, 0.0175],
        [0.0709, 0.0136, 0.0150]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0538],
        [0.1215],
        [0.0705],
        [0.0592],
        [0.0484],
        [0.1962],
        [0.0643],
        [0.0749],
        [0.1753],
        [0.0499],
        [0.0471],
        [0.0588],
        [0.0489],
        [0.0701],
        [0.0737],
        [0.0569]], device='cuda:0', dtype=torch.float16)/tensor([[0.0538, 0.1215, 0.0705, 0.0592, 0.0484, 0.1962, 0.0643, 0.0749, 0.1753,
         0.0499, 0.0471, 0.0588, 0.0489, 0.0701, 0.0737, 0.0569]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0102],
        [0.0255],
        [0.0145],
        [0.0154],
        [0.0122],
        [0.0377],
        [0.0202],
        [0.0133],
        [0.0171],
        [0.0074],
        [0.0144],
        [0.0213],
        [0.0073],
        [0.0111],
        [0.0156],
        [0.0082]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0255, 0.0145, 0.0154, 0.0122, 0.0377, 0.0202, 0.0133, 0.0171,
         0.0074, 0.0144, 0.0213, 0.0073, 0.0111, 0.0156, 0.0082]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0151],
        [0.0353],
        [0.0300],
        [0.0172],
        [0.0159],
        [0.0377],
        [0.0204],
        [0.0238],
        [0.0351],
        [0.0088],
        [0.0192],
        [0.0334],
        [0.0181],
        [0.0264],
        [0.0220],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0151, 0.0353, 0.0300, 0.0172, 0.0159, 0.0377, 0.0204, 0.0238, 0.0351,
         0.0088, 0.0192, 0.0334, 0.0181, 0.0264, 0.0220, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0538, 0.0102, 0.0151],
        [0.1215, 0.0255, 0.0353],
        [0.0705, 0.0145, 0.0300],
        [0.0592, 0.0154, 0.0172],
        [0.0484, 0.0122, 0.0159],
        [0.1962, 0.0377, 0.0377],
        [0.0643, 0.0202, 0.0204],
        [0.0749, 0.0133, 0.0238],
        [0.1753, 0.0171, 0.0351],
        [0.0499, 0.0074, 0.0088],
        [0.0471, 0.0144, 0.0192],
        [0.0588, 0.0213, 0.0334],
        [0.0489, 0.0073, 0.0181],
        [0.0701, 0.0111, 0.0264],
        [0.0737, 0.0156, 0.0220],
        [0.0569, 0.0082, 0.0172]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1740],
        [0.0324],
        [0.0453],
        [0.0687],
        [0.0466],
        [0.0440],
        [0.1298],
        [0.0352],
        [0.0296],
        [0.0500],
        [0.0327],
        [0.0466],
        [0.0357],
        [0.0225],
        [0.0278],
        [0.0370]], device='cuda:0', dtype=torch.float16)/tensor([[0.1740, 0.0324, 0.0453, 0.0687, 0.0466, 0.0440, 0.1298, 0.0352, 0.0296,
         0.0500, 0.0327, 0.0466, 0.0357, 0.0225, 0.0278, 0.0370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0082],
        [0.0063],
        [0.0133],
        [0.0104],
        [0.0078],
        [0.0289],
        [0.0122],
        [0.0057],
        [0.0124],
        [0.0101],
        [0.0072],
        [0.0081],
        [0.0081],
        [0.0101],
        [0.0093]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0082, 0.0063, 0.0133, 0.0104, 0.0078, 0.0289, 0.0122, 0.0057,
         0.0124, 0.0101, 0.0072, 0.0081, 0.0081, 0.0101, 0.0093]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0298],
        [0.0106],
        [0.0077],
        [0.0143],
        [0.0142],
        [0.0148],
        [0.0370],
        [0.0182],
        [0.0080],
        [0.0276],
        [0.0315],
        [0.0238],
        [0.0135],
        [0.0078],
        [0.0110],
        [0.0069]], device='cuda:0', dtype=torch.float16)/tensor([[0.0298, 0.0106, 0.0077, 0.0143, 0.0142, 0.0148, 0.0370, 0.0182, 0.0080,
         0.0276, 0.0315, 0.0238, 0.0135, 0.0078, 0.0110, 0.0069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1740, 0.0212, 0.0298],
        [0.0324, 0.0082, 0.0106],
        [0.0453, 0.0063, 0.0077],
        [0.0687, 0.0133, 0.0143],
        [0.0466, 0.0104, 0.0142],
        [0.0440, 0.0078, 0.0148],
        [0.1298, 0.0289, 0.0370],
        [0.0352, 0.0122, 0.0182],
        [0.0296, 0.0057, 0.0080],
        [0.0500, 0.0124, 0.0276],
        [0.0327, 0.0101, 0.0315],
        [0.0466, 0.0072, 0.0238],
        [0.0357, 0.0081, 0.0135],
        [0.0225, 0.0081, 0.0078],
        [0.0278, 0.0101, 0.0110],
        [0.0370, 0.0093, 0.0069]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1631],
        [0.0491],
        [0.2228],
        [0.0365],
        [0.1786],
        [0.0928],
        [0.0820],
        [0.0323],
        [0.1082],
        [0.0371],
        [0.0773],
        [0.0271],
        [0.1346],
        [0.0616],
        [0.0636],
        [0.0459]], device='cuda:0', dtype=torch.float16)/tensor([[0.1631, 0.0491, 0.2228, 0.0365, 0.1786, 0.0928, 0.0820, 0.0323, 0.1082,
         0.0371, 0.0773, 0.0271, 0.1346, 0.0616, 0.0636, 0.0459]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0329],
        [0.0096],
        [0.0358],
        [0.0165],
        [0.0349],
        [0.0140],
        [0.0128],
        [0.0107],
        [0.0269],
        [0.0079],
        [0.0139],
        [0.0054],
        [0.0214],
        [0.0148],
        [0.0133],
        [0.0076]], device='cuda:0', dtype=torch.float16)/tensor([[0.0329, 0.0096, 0.0358, 0.0165, 0.0349, 0.0140, 0.0128, 0.0107, 0.0269,
         0.0079, 0.0139, 0.0054, 0.0214, 0.0148, 0.0133, 0.0076]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0807],
        [0.0099],
        [0.0605],
        [0.0146],
        [0.0508],
        [0.0285],
        [0.0314],
        [0.0153],
        [0.0392],
        [0.0092],
        [0.0177],
        [0.0103],
        [0.0290],
        [0.0136],
        [0.0100],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0807, 0.0099, 0.0605, 0.0146, 0.0508, 0.0285, 0.0314, 0.0153, 0.0392,
         0.0092, 0.0177, 0.0103, 0.0290, 0.0136, 0.0100, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1631, 0.0329, 0.0807],
        [0.0491, 0.0096, 0.0099],
        [0.2228, 0.0358, 0.0605],
        [0.0365, 0.0165, 0.0146],
        [0.1786, 0.0349, 0.0508],
        [0.0928, 0.0140, 0.0285],
        [0.0820, 0.0128, 0.0314],
        [0.0323, 0.0107, 0.0153],
        [0.1082, 0.0269, 0.0392],
        [0.0371, 0.0079, 0.0092],
        [0.0773, 0.0139, 0.0177],
        [0.0271, 0.0054, 0.0103],
        [0.1346, 0.0214, 0.0290],
        [0.0616, 0.0148, 0.0136],
        [0.0636, 0.0133, 0.0100],
        [0.0459, 0.0076, 0.0177]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0392],
        [0.1682],
        [0.0722],
        [0.1632],
        [0.2458],
        [0.1261],
        [0.1195],
        [0.0537],
        [0.0154],
        [0.0327],
        [0.1573],
        [0.1743],
        [0.0547],
        [0.0585],
        [0.0480],
        [0.0652]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.1682, 0.0722, 0.1632, 0.2458, 0.1261, 0.1195, 0.0537, 0.0154,
         0.0327, 0.1573, 0.1743, 0.0547, 0.0585, 0.0480, 0.0652]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0162],
        [0.0358],
        [0.0210],
        [0.0323],
        [0.0335],
        [0.0286],
        [0.0345],
        [0.0085],
        [0.0042],
        [0.0099],
        [0.0341],
        [0.0343],
        [0.0101],
        [0.0122],
        [0.0103],
        [0.0097]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0358, 0.0210, 0.0323, 0.0335, 0.0286, 0.0345, 0.0085, 0.0042,
         0.0099, 0.0341, 0.0343, 0.0101, 0.0122, 0.0103, 0.0097]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0347],
        [0.0981],
        [0.0309],
        [0.0457],
        [0.0710],
        [0.0508],
        [0.0455],
        [0.0195],
        [0.0052],
        [0.0182],
        [0.0430],
        [0.0427],
        [0.0173],
        [0.0202],
        [0.0166],
        [0.0100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0981, 0.0309, 0.0457, 0.0710, 0.0508, 0.0455, 0.0195, 0.0052,
         0.0182, 0.0430, 0.0427, 0.0173, 0.0202, 0.0166, 0.0100]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0392, 0.0162, 0.0347],
        [0.1682, 0.0358, 0.0981],
        [0.0722, 0.0210, 0.0309],
        [0.1632, 0.0323, 0.0457],
        [0.2458, 0.0335, 0.0710],
        [0.1261, 0.0286, 0.0508],
        [0.1195, 0.0345, 0.0455],
        [0.0537, 0.0085, 0.0195],
        [0.0154, 0.0042, 0.0052],
        [0.0327, 0.0099, 0.0182],
        [0.1573, 0.0341, 0.0430],
        [0.1743, 0.0343, 0.0427],
        [0.0547, 0.0101, 0.0173],
        [0.0585, 0.0122, 0.0202],
        [0.0480, 0.0103, 0.0166],
        [0.0652, 0.0097, 0.0100]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0952],
        [0.0240],
        [0.2340],
        [0.0573],
        [0.0558],
        [0.0665]], device='cuda:0', dtype=torch.float16)/tensor([[0.0952, 0.0240, 0.2340, 0.0573, 0.0558, 0.0665]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0169],
        [0.0085],
        [0.0286],
        [0.0118],
        [0.0095],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0169, 0.0085, 0.0286, 0.0118, 0.0095, 0.0155]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0236],
        [0.0054],
        [0.0440],
        [0.0141],
        [0.0100],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0236, 0.0054, 0.0440, 0.0141, 0.0100, 0.0193]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0952, 0.0169, 0.0236],
        [0.0240, 0.0085, 0.0054],
        [0.2340, 0.0286, 0.0440],
        [0.0573, 0.0118, 0.0141],
        [0.0558, 0.0095, 0.0100],
        [0.0665, 0.0155, 0.0193]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type passive, variation 0 and batchsize 16: 0:03:02.644132
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI passive 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 317.01it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0807],
        [0.0407],
        [0.0314],
        [0.0470],
        [0.0434],
        [0.1356],
        [0.0718],
        [0.0458],
        [0.1043],
        [0.1367],
        [0.0424],
        [0.0883],
        [0.0984],
        [0.0922],
        [0.0511],
        [0.0692]], device='cuda:0', dtype=torch.float16)/tensor([[0.0807, 0.0407, 0.0314, 0.0470, 0.0434, 0.1356, 0.0718, 0.0458, 0.1043,
         0.1367, 0.0424, 0.0883, 0.0984, 0.0922, 0.0511, 0.0692]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0242],
        [0.0162],
        [0.0070],
        [0.0251],
        [0.0136],
        [0.0225],
        [0.0218],
        [0.0177],
        [0.0316],
        [0.0330],
        [0.0167],
        [0.0283],
        [0.0349],
        [0.0251],
        [0.0152],
        [0.0263]], device='cuda:0', dtype=torch.float16)/tensor([[0.0242, 0.0162, 0.0070, 0.0251, 0.0136, 0.0225, 0.0218, 0.0177, 0.0316,
         0.0330, 0.0167, 0.0283, 0.0349, 0.0251, 0.0152, 0.0263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0281],
        [0.0192],
        [0.0154],
        [0.0199],
        [0.0227],
        [0.0626],
        [0.0519],
        [0.0140],
        [0.0518],
        [0.0544],
        [0.0191],
        [0.0380],
        [0.1082],
        [0.0358],
        [0.0185],
        [0.0433]], device='cuda:0', dtype=torch.float16)/tensor([[0.0281, 0.0192, 0.0154, 0.0199, 0.0227, 0.0626, 0.0519, 0.0140, 0.0518,
         0.0544, 0.0191, 0.0380, 0.1082, 0.0358, 0.0185, 0.0433]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0807, 0.0242, 0.0281],
        [0.0407, 0.0162, 0.0192],
        [0.0314, 0.0070, 0.0154],
        [0.0470, 0.0251, 0.0199],
        [0.0434, 0.0136, 0.0227],
        [0.1356, 0.0225, 0.0626],
        [0.0718, 0.0218, 0.0519],
        [0.0458, 0.0177, 0.0140],
        [0.1043, 0.0316, 0.0518],
        [0.1367, 0.0330, 0.0544],
        [0.0424, 0.0167, 0.0191],
        [0.0883, 0.0283, 0.0380],
        [0.0984, 0.0349, 0.1082],
        [0.0922, 0.0251, 0.0358],
        [0.0511, 0.0152, 0.0185],
        [0.0692, 0.0263, 0.0433]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0432],
        [0.0370],
        [0.0861],
        [0.0586],
        [0.1191],
        [0.0577],
        [0.0343],
        [0.0647],
        [0.0903],
        [0.0413],
        [0.0565],
        [0.0991],
        [0.0928],
        [0.0350],
        [0.0834],
        [0.0791]], device='cuda:0', dtype=torch.float16)/tensor([[0.0432, 0.0370, 0.0861, 0.0586, 0.1191, 0.0577, 0.0343, 0.0647, 0.0903,
         0.0413, 0.0565, 0.0991, 0.0928, 0.0350, 0.0834, 0.0791]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0159],
        [0.0103],
        [0.0193],
        [0.0259],
        [0.0360],
        [0.0134],
        [0.0123],
        [0.0100],
        [0.0348],
        [0.0140],
        [0.0249],
        [0.0184],
        [0.0199],
        [0.0155],
        [0.0173],
        [0.0402]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0103, 0.0193, 0.0259, 0.0360, 0.0134, 0.0123, 0.0100, 0.0348,
         0.0140, 0.0249, 0.0184, 0.0199, 0.0155, 0.0173, 0.0402]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0196],
        [0.0200],
        [0.0279],
        [0.0286],
        [0.0511],
        [0.0141],
        [0.0334],
        [0.0264],
        [0.0505],
        [0.0237],
        [0.0155],
        [0.0485],
        [0.0255],
        [0.0250],
        [0.0278],
        [0.0216]], device='cuda:0', dtype=torch.float16)/tensor([[0.0196, 0.0200, 0.0279, 0.0286, 0.0511, 0.0141, 0.0334, 0.0264, 0.0505,
         0.0237, 0.0155, 0.0485, 0.0255, 0.0250, 0.0278, 0.0216]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0432, 0.0159, 0.0196],
        [0.0370, 0.0103, 0.0200],
        [0.0861, 0.0193, 0.0279],
        [0.0586, 0.0259, 0.0286],
        [0.1191, 0.0360, 0.0511],
        [0.0577, 0.0134, 0.0141],
        [0.0343, 0.0123, 0.0334],
        [0.0647, 0.0100, 0.0264],
        [0.0903, 0.0348, 0.0505],
        [0.0413, 0.0140, 0.0237],
        [0.0565, 0.0249, 0.0155],
        [0.0991, 0.0184, 0.0485],
        [0.0928, 0.0199, 0.0255],
        [0.0350, 0.0155, 0.0250],
        [0.0834, 0.0173, 0.0278],
        [0.0791, 0.0402, 0.0216]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0299],
        [0.0775],
        [0.0193],
        [0.0610],
        [0.0649],
        [0.0837],
        [0.1278],
        [0.0780],
        [0.0627],
        [0.0707],
        [0.1027],
        [0.0773],
        [0.0424],
        [0.0781],
        [0.0912],
        [0.0434]], device='cuda:0', dtype=torch.float16)/tensor([[0.0299, 0.0775, 0.0193, 0.0610, 0.0649, 0.0837, 0.1278, 0.0780, 0.0627,
         0.0707, 0.1027, 0.0773, 0.0424, 0.0781, 0.0912, 0.0434]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0091],
        [0.0191],
        [0.0136],
        [0.0303],
        [0.0148],
        [0.0208],
        [0.0372],
        [0.0203],
        [0.0174],
        [0.0187],
        [0.0179],
        [0.0356],
        [0.0203],
        [0.0337],
        [0.0273],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0191, 0.0136, 0.0303, 0.0148, 0.0208, 0.0372, 0.0203, 0.0174,
         0.0187, 0.0179, 0.0356, 0.0203, 0.0337, 0.0273, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0174],
        [0.0241],
        [0.0160],
        [0.0216],
        [0.0262],
        [0.0291],
        [0.0407],
        [0.0336],
        [0.0172],
        [0.0182],
        [0.0445],
        [0.0704],
        [0.0271],
        [0.0284],
        [0.0448],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0174, 0.0241, 0.0160, 0.0216, 0.0262, 0.0291, 0.0407, 0.0336, 0.0172,
         0.0182, 0.0445, 0.0704, 0.0271, 0.0284, 0.0448, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0299, 0.0091, 0.0174],
        [0.0775, 0.0191, 0.0241],
        [0.0193, 0.0136, 0.0160],
        [0.0610, 0.0303, 0.0216],
        [0.0649, 0.0148, 0.0262],
        [0.0837, 0.0208, 0.0291],
        [0.1278, 0.0372, 0.0407],
        [0.0780, 0.0203, 0.0336],
        [0.0627, 0.0174, 0.0172],
        [0.0707, 0.0187, 0.0182],
        [0.1027, 0.0179, 0.0445],
        [0.0773, 0.0356, 0.0704],
        [0.0424, 0.0203, 0.0271],
        [0.0781, 0.0337, 0.0284],
        [0.0912, 0.0273, 0.0448],
        [0.0434, 0.0116, 0.0177]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0626],
        [0.0392],
        [0.0524],
        [0.0677],
        [0.0847],
        [0.1133],
        [0.0649],
        [0.0815],
        [0.1035],
        [0.0593],
        [0.0859],
        [0.0983],
        [0.0287],
        [0.0872],
        [0.0897],
        [0.0522]], device='cuda:0', dtype=torch.float16)/tensor([[0.0626, 0.0392, 0.0524, 0.0677, 0.0847, 0.1133, 0.0649, 0.0815, 0.1035,
         0.0593, 0.0859, 0.0983, 0.0287, 0.0872, 0.0897, 0.0522]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0214],
        [0.0167],
        [0.0173],
        [0.0191],
        [0.0359],
        [0.0325],
        [0.0262],
        [0.0143],
        [0.0329],
        [0.0191],
        [0.0155],
        [0.0138],
        [0.0107],
        [0.0239],
        [0.0157],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0167, 0.0173, 0.0191, 0.0359, 0.0325, 0.0262, 0.0143, 0.0329,
         0.0191, 0.0155, 0.0138, 0.0107, 0.0239, 0.0157, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0273],
        [0.0135],
        [0.0203],
        [0.0352],
        [0.0348],
        [0.0322],
        [0.0291],
        [0.0217],
        [0.0363],
        [0.0190],
        [0.0147],
        [0.0241],
        [0.0126],
        [0.0163],
        [0.0191],
        [0.0279]], device='cuda:0', dtype=torch.float16)/tensor([[0.0273, 0.0135, 0.0203, 0.0352, 0.0348, 0.0322, 0.0291, 0.0217, 0.0363,
         0.0190, 0.0147, 0.0241, 0.0126, 0.0163, 0.0191, 0.0279]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0626, 0.0214, 0.0273],
        [0.0392, 0.0167, 0.0135],
        [0.0524, 0.0173, 0.0203],
        [0.0677, 0.0191, 0.0352],
        [0.0847, 0.0359, 0.0348],
        [0.1133, 0.0325, 0.0322],
        [0.0649, 0.0262, 0.0291],
        [0.0815, 0.0143, 0.0217],
        [0.1035, 0.0329, 0.0363],
        [0.0593, 0.0191, 0.0190],
        [0.0859, 0.0155, 0.0147],
        [0.0983, 0.0138, 0.0241],
        [0.0287, 0.0107, 0.0126],
        [0.0872, 0.0239, 0.0163],
        [0.0897, 0.0157, 0.0191],
        [0.0522, 0.0178, 0.0279]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0555],
        [0.1181],
        [0.0402],
        [0.0680],
        [0.0230],
        [0.0989],
        [0.0839],
        [0.0655],
        [0.0403],
        [0.0379],
        [0.0648],
        [0.0443],
        [0.0823],
        [0.0608],
        [0.0322],
        [0.0812]], device='cuda:0', dtype=torch.float16)/tensor([[0.0555, 0.1181, 0.0402, 0.0680, 0.0230, 0.0989, 0.0839, 0.0655, 0.0403,
         0.0379, 0.0648, 0.0443, 0.0823, 0.0608, 0.0322, 0.0812]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0195],
        [0.0288],
        [0.0144],
        [0.0194],
        [0.0103],
        [0.0259],
        [0.0288],
        [0.0192],
        [0.0169],
        [0.0188],
        [0.0228],
        [0.0176],
        [0.0248],
        [0.0391],
        [0.0137],
        [0.0301]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0288, 0.0144, 0.0194, 0.0103, 0.0259, 0.0288, 0.0192, 0.0169,
         0.0188, 0.0228, 0.0176, 0.0248, 0.0391, 0.0137, 0.0301]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0244],
        [0.0364],
        [0.0160],
        [0.0264],
        [0.0093],
        [0.0288],
        [0.0347],
        [0.0178],
        [0.0135],
        [0.0170],
        [0.0334],
        [0.0252],
        [0.0380],
        [0.0573],
        [0.0079],
        [0.0262]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0364, 0.0160, 0.0264, 0.0093, 0.0288, 0.0347, 0.0178, 0.0135,
         0.0170, 0.0334, 0.0252, 0.0380, 0.0573, 0.0079, 0.0262]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0555, 0.0195, 0.0244],
        [0.1181, 0.0288, 0.0364],
        [0.0402, 0.0144, 0.0160],
        [0.0680, 0.0194, 0.0264],
        [0.0230, 0.0103, 0.0093],
        [0.0989, 0.0259, 0.0288],
        [0.0839, 0.0288, 0.0347],
        [0.0655, 0.0192, 0.0178],
        [0.0403, 0.0169, 0.0135],
        [0.0379, 0.0188, 0.0170],
        [0.0648, 0.0228, 0.0334],
        [0.0443, 0.0176, 0.0252],
        [0.0823, 0.0248, 0.0380],
        [0.0608, 0.0391, 0.0573],
        [0.0322, 0.0137, 0.0079],
        [0.0812, 0.0301, 0.0262]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0197],
        [0.0638],
        [0.0188],
        [0.0131],
        [0.0278],
        [0.0414],
        [0.0684],
        [0.0445],
        [0.0860],
        [0.0598],
        [0.0681],
        [0.0896],
        [0.0315],
        [0.0409],
        [0.1046],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0197, 0.0638, 0.0188, 0.0131, 0.0278, 0.0414, 0.0684, 0.0445, 0.0860,
         0.0598, 0.0681, 0.0896, 0.0315, 0.0409, 0.1046, 0.0369]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0092],
        [0.0222],
        [0.0068],
        [0.0087],
        [0.0184],
        [0.0170],
        [0.0258],
        [0.0135],
        [0.0278],
        [0.0148],
        [0.0282],
        [0.0234],
        [0.0117],
        [0.0092],
        [0.0160],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0222, 0.0068, 0.0087, 0.0184, 0.0170, 0.0258, 0.0135, 0.0278,
         0.0148, 0.0282, 0.0234, 0.0117, 0.0092, 0.0160, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0073],
        [0.0409],
        [0.0090],
        [0.0045],
        [0.0131],
        [0.0259],
        [0.0301],
        [0.0101],
        [0.0297],
        [0.0142],
        [0.0423],
        [0.0209],
        [0.0112],
        [0.0257],
        [0.0310],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0409, 0.0090, 0.0045, 0.0131, 0.0259, 0.0301, 0.0101, 0.0297,
         0.0142, 0.0423, 0.0209, 0.0112, 0.0257, 0.0310, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0197, 0.0092, 0.0073],
        [0.0638, 0.0222, 0.0409],
        [0.0188, 0.0068, 0.0090],
        [0.0131, 0.0087, 0.0045],
        [0.0278, 0.0184, 0.0131],
        [0.0414, 0.0170, 0.0259],
        [0.0684, 0.0258, 0.0301],
        [0.0445, 0.0135, 0.0101],
        [0.0860, 0.0278, 0.0297],
        [0.0598, 0.0148, 0.0142],
        [0.0681, 0.0282, 0.0423],
        [0.0896, 0.0234, 0.0209],
        [0.0315, 0.0117, 0.0112],
        [0.0409, 0.0092, 0.0257],
        [0.1046, 0.0160, 0.0310],
        [0.0369, 0.0232, 0.0128]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0654],
        [0.1451],
        [0.0612],
        [0.0803],
        [0.0468],
        [0.0470],
        [0.1234],
        [0.1124],
        [0.0876],
        [0.1082],
        [0.0487],
        [0.0694],
        [0.0931],
        [0.0738],
        [0.0920],
        [0.0871]], device='cuda:0', dtype=torch.float16)/tensor([[0.0654, 0.1451, 0.0612, 0.0803, 0.0468, 0.0470, 0.1234, 0.1124, 0.0876,
         0.1082, 0.0487, 0.0694, 0.0931, 0.0738, 0.0920, 0.0871]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0269],
        [0.0452],
        [0.0165],
        [0.0188],
        [0.0264],
        [0.0251],
        [0.0287],
        [0.0237],
        [0.0144],
        [0.0216],
        [0.0134],
        [0.0150],
        [0.0384],
        [0.0145],
        [0.0196],
        [0.0229]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0452, 0.0165, 0.0188, 0.0264, 0.0251, 0.0287, 0.0237, 0.0144,
         0.0216, 0.0134, 0.0150, 0.0384, 0.0145, 0.0196, 0.0229]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0207],
        [0.0313],
        [0.0236],
        [0.0187],
        [0.0135],
        [0.0194],
        [0.0407],
        [0.0327],
        [0.0346],
        [0.0693],
        [0.0183],
        [0.0240],
        [0.0359],
        [0.0207],
        [0.0227],
        [0.0477]], device='cuda:0', dtype=torch.float16)/tensor([[0.0207, 0.0313, 0.0236, 0.0187, 0.0135, 0.0194, 0.0407, 0.0327, 0.0346,
         0.0693, 0.0183, 0.0240, 0.0359, 0.0207, 0.0227, 0.0477]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0654, 0.0269, 0.0207],
        [0.1451, 0.0452, 0.0313],
        [0.0612, 0.0165, 0.0236],
        [0.0803, 0.0188, 0.0187],
        [0.0468, 0.0264, 0.0135],
        [0.0470, 0.0251, 0.0194],
        [0.1234, 0.0287, 0.0407],
        [0.1124, 0.0237, 0.0327],
        [0.0876, 0.0144, 0.0346],
        [0.1082, 0.0216, 0.0693],
        [0.0487, 0.0134, 0.0183],
        [0.0694, 0.0150, 0.0240],
        [0.0931, 0.0384, 0.0359],
        [0.0738, 0.0145, 0.0207],
        [0.0920, 0.0196, 0.0227],
        [0.0871, 0.0229, 0.0477]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0613],
        [0.0656],
        [0.0496],
        [0.0606],
        [0.0516],
        [0.0612],
        [0.0644],
        [0.0929],
        [0.0865],
        [0.1193],
        [0.1113],
        [0.0471],
        [0.0687],
        [0.1305],
        [0.0580],
        [0.0532]], device='cuda:0', dtype=torch.float16)/tensor([[0.0613, 0.0656, 0.0496, 0.0606, 0.0516, 0.0612, 0.0644, 0.0929, 0.0865,
         0.1193, 0.1113, 0.0471, 0.0687, 0.1305, 0.0580, 0.0532]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0154],
        [0.0164],
        [0.0168],
        [0.0130],
        [0.0137],
        [0.0320],
        [0.0186],
        [0.0242],
        [0.0314],
        [0.0279],
        [0.0457],
        [0.0243],
        [0.0184],
        [0.0262],
        [0.0244],
        [0.0222]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0164, 0.0168, 0.0130, 0.0137, 0.0320, 0.0186, 0.0242, 0.0314,
         0.0279, 0.0457, 0.0243, 0.0184, 0.0262, 0.0244, 0.0222]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0283],
        [0.0199],
        [0.0115],
        [0.0194],
        [0.0205],
        [0.0323],
        [0.0167],
        [0.0266],
        [0.0302],
        [0.0880],
        [0.0346],
        [0.0241],
        [0.0259],
        [0.0509],
        [0.0272],
        [0.0306]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0199, 0.0115, 0.0194, 0.0205, 0.0323, 0.0167, 0.0266, 0.0302,
         0.0880, 0.0346, 0.0241, 0.0259, 0.0509, 0.0272, 0.0306]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0613, 0.0154, 0.0283],
        [0.0656, 0.0164, 0.0199],
        [0.0496, 0.0168, 0.0115],
        [0.0606, 0.0130, 0.0194],
        [0.0516, 0.0137, 0.0205],
        [0.0612, 0.0320, 0.0323],
        [0.0644, 0.0186, 0.0167],
        [0.0929, 0.0242, 0.0266],
        [0.0865, 0.0314, 0.0302],
        [0.1193, 0.0279, 0.0880],
        [0.1113, 0.0457, 0.0346],
        [0.0471, 0.0243, 0.0241],
        [0.0687, 0.0184, 0.0259],
        [0.1305, 0.0262, 0.0509],
        [0.0580, 0.0244, 0.0272],
        [0.0532, 0.0222, 0.0306]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0854],
        [0.0607],
        [0.0523],
        [0.0276],
        [0.0583],
        [0.0756],
        [0.0766],
        [0.0897],
        [0.0258],
        [0.1019],
        [0.0584],
        [0.0854],
        [0.0607],
        [0.0675],
        [0.0644],
        [0.1229]], device='cuda:0', dtype=torch.float16)/tensor([[0.0854, 0.0607, 0.0523, 0.0276, 0.0583, 0.0756, 0.0766, 0.0897, 0.0258,
         0.1019, 0.0584, 0.0854, 0.0607, 0.0675, 0.0644, 0.1229]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0187],
        [0.0075],
        [0.0067],
        [0.0222],
        [0.0323],
        [0.0133],
        [0.0155],
        [0.0081],
        [0.0208],
        [0.0203],
        [0.0258],
        [0.0112],
        [0.0147],
        [0.0145],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0187, 0.0075, 0.0067, 0.0222, 0.0323, 0.0133, 0.0155, 0.0081,
         0.0208, 0.0203, 0.0258, 0.0112, 0.0147, 0.0145, 0.0313]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0223],
        [0.0216],
        [0.0207],
        [0.0062],
        [0.0144],
        [0.0386],
        [0.0215],
        [0.0331],
        [0.0132],
        [0.0633],
        [0.0154],
        [0.0222],
        [0.0158],
        [0.0190],
        [0.0175],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.0223, 0.0216, 0.0207, 0.0062, 0.0144, 0.0386, 0.0215, 0.0331, 0.0132,
         0.0633, 0.0154, 0.0222, 0.0158, 0.0190, 0.0175, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0854, 0.0212, 0.0223],
        [0.0607, 0.0187, 0.0216],
        [0.0523, 0.0075, 0.0207],
        [0.0276, 0.0067, 0.0062],
        [0.0583, 0.0222, 0.0144],
        [0.0756, 0.0323, 0.0386],
        [0.0766, 0.0133, 0.0215],
        [0.0897, 0.0155, 0.0331],
        [0.0258, 0.0081, 0.0132],
        [0.1019, 0.0208, 0.0633],
        [0.0584, 0.0203, 0.0154],
        [0.0854, 0.0258, 0.0222],
        [0.0607, 0.0112, 0.0158],
        [0.0675, 0.0147, 0.0190],
        [0.0644, 0.0145, 0.0175],
        [0.1229, 0.0313, 0.0266]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0645],
        [0.0710],
        [0.0411],
        [0.0647],
        [0.0696],
        [0.0660],
        [0.0450],
        [0.0488],
        [0.0784],
        [0.0425],
        [0.0403],
        [0.0586],
        [0.0191],
        [0.0831],
        [0.0988],
        [0.1508]], device='cuda:0', dtype=torch.float16)/tensor([[0.0645, 0.0710, 0.0411, 0.0647, 0.0696, 0.0660, 0.0450, 0.0488, 0.0784,
         0.0425, 0.0403, 0.0586, 0.0191, 0.0831, 0.0988, 0.1508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0271],
        [0.0184],
        [0.0231],
        [0.0301],
        [0.0261],
        [0.0255],
        [0.0169],
        [0.0167],
        [0.0196],
        [0.0136],
        [0.0145],
        [0.0198],
        [0.0127],
        [0.0234],
        [0.0336],
        [0.0315]], device='cuda:0', dtype=torch.float16)/tensor([[0.0271, 0.0184, 0.0231, 0.0301, 0.0261, 0.0255, 0.0169, 0.0167, 0.0196,
         0.0136, 0.0145, 0.0198, 0.0127, 0.0234, 0.0336, 0.0315]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0192],
        [0.0185],
        [0.0195],
        [0.0245],
        [0.0325],
        [0.0250],
        [0.0285],
        [0.0068],
        [0.0189],
        [0.0160],
        [0.0231],
        [0.0182],
        [0.0079],
        [0.0287],
        [0.0359],
        [0.0339]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0185, 0.0195, 0.0245, 0.0325, 0.0250, 0.0285, 0.0068, 0.0189,
         0.0160, 0.0231, 0.0182, 0.0079, 0.0287, 0.0359, 0.0339]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0645, 0.0271, 0.0192],
        [0.0710, 0.0184, 0.0185],
        [0.0411, 0.0231, 0.0195],
        [0.0647, 0.0301, 0.0245],
        [0.0696, 0.0261, 0.0325],
        [0.0660, 0.0255, 0.0250],
        [0.0450, 0.0169, 0.0285],
        [0.0488, 0.0167, 0.0068],
        [0.0784, 0.0196, 0.0189],
        [0.0425, 0.0136, 0.0160],
        [0.0403, 0.0145, 0.0231],
        [0.0586, 0.0198, 0.0182],
        [0.0191, 0.0127, 0.0079],
        [0.0831, 0.0234, 0.0287],
        [0.0988, 0.0336, 0.0359],
        [0.1508, 0.0315, 0.0339]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0830],
        [0.0823],
        [0.0575],
        [0.0906],
        [0.0923],
        [0.1201],
        [0.0818],
        [0.0447],
        [0.1267],
        [0.0281],
        [0.0461],
        [0.0945],
        [0.0520],
        [0.0617],
        [0.0510],
        [0.1250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0830, 0.0823, 0.0575, 0.0906, 0.0923, 0.1201, 0.0818, 0.0447, 0.1267,
         0.0281, 0.0461, 0.0945, 0.0520, 0.0617, 0.0510, 0.1250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0234],
        [0.0197],
        [0.0189],
        [0.0198],
        [0.0240],
        [0.0255],
        [0.0181],
        [0.0246],
        [0.0179],
        [0.0080],
        [0.0170],
        [0.0300],
        [0.0127],
        [0.0291],
        [0.0172],
        [0.0278]], device='cuda:0', dtype=torch.float16)/tensor([[0.0234, 0.0197, 0.0189, 0.0198, 0.0240, 0.0255, 0.0181, 0.0246, 0.0179,
         0.0080, 0.0170, 0.0300, 0.0127, 0.0291, 0.0172, 0.0278]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0383],
        [0.0190],
        [0.0225],
        [0.0239],
        [0.0300],
        [0.0272],
        [0.0237],
        [0.0271],
        [0.0352],
        [0.0160],
        [0.0070],
        [0.0238],
        [0.0122],
        [0.0186],
        [0.0190],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0383, 0.0190, 0.0225, 0.0239, 0.0300, 0.0272, 0.0237, 0.0271, 0.0352,
         0.0160, 0.0070, 0.0238, 0.0122, 0.0186, 0.0190, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0830, 0.0234, 0.0383],
        [0.0823, 0.0197, 0.0190],
        [0.0575, 0.0189, 0.0225],
        [0.0906, 0.0198, 0.0239],
        [0.0923, 0.0240, 0.0300],
        [0.1201, 0.0255, 0.0272],
        [0.0818, 0.0181, 0.0237],
        [0.0447, 0.0246, 0.0271],
        [0.1267, 0.0179, 0.0352],
        [0.0281, 0.0080, 0.0160],
        [0.0461, 0.0170, 0.0070],
        [0.0945, 0.0300, 0.0238],
        [0.0520, 0.0127, 0.0122],
        [0.0617, 0.0291, 0.0186],
        [0.0510, 0.0172, 0.0190],
        [0.1250, 0.0278, 0.0291]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1287],
        [0.1307],
        [0.0476],
        [0.0688],
        [0.0823],
        [0.0718],
        [0.1284],
        [0.0585],
        [0.0588],
        [0.0469],
        [0.0392],
        [0.1103],
        [0.1156],
        [0.0616],
        [0.0942],
        [0.0656]], device='cuda:0', dtype=torch.float16)/tensor([[0.1287, 0.1307, 0.0476, 0.0688, 0.0823, 0.0718, 0.1284, 0.0585, 0.0588,
         0.0469, 0.0392, 0.1103, 0.1156, 0.0616, 0.0942, 0.0656]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0261],
        [0.0374],
        [0.0115],
        [0.0204],
        [0.0190],
        [0.0202],
        [0.0292],
        [0.0168],
        [0.0117],
        [0.0202],
        [0.0196],
        [0.0241],
        [0.0355],
        [0.0155],
        [0.0466],
        [0.0229]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0374, 0.0115, 0.0204, 0.0190, 0.0202, 0.0292, 0.0168, 0.0117,
         0.0202, 0.0196, 0.0241, 0.0355, 0.0155, 0.0466, 0.0229]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0481],
        [0.0279],
        [0.0186],
        [0.0504],
        [0.0308],
        [0.0199],
        [0.0262],
        [0.0287],
        [0.0199],
        [0.0145],
        [0.0240],
        [0.0304],
        [0.0600],
        [0.0405],
        [0.0514],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0481, 0.0279, 0.0186, 0.0504, 0.0308, 0.0199, 0.0262, 0.0287, 0.0199,
         0.0145, 0.0240, 0.0304, 0.0600, 0.0405, 0.0514, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.1287, 0.0261, 0.0481],
        [0.1307, 0.0374, 0.0279],
        [0.0476, 0.0115, 0.0186],
        [0.0688, 0.0204, 0.0504],
        [0.0823, 0.0190, 0.0308],
        [0.0718, 0.0202, 0.0199],
        [0.1284, 0.0292, 0.0262],
        [0.0585, 0.0168, 0.0287],
        [0.0588, 0.0117, 0.0199],
        [0.0469, 0.0202, 0.0145],
        [0.0392, 0.0196, 0.0240],
        [0.1103, 0.0241, 0.0304],
        [0.1156, 0.0355, 0.0600],
        [0.0616, 0.0155, 0.0405],
        [0.0942, 0.0466, 0.0514],
        [0.0656, 0.0229, 0.0206]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.1243],
        [0.0200],
        [0.1085],
        [0.0809],
        [0.0770],
        [0.0695]], device='cuda:0', dtype=torch.float16)/tensor([[0.1243, 0.0200, 0.1085, 0.0809, 0.0770, 0.0695]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0282],
        [0.0111],
        [0.0256],
        [0.0227],
        [0.0147],
        [0.0244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0111, 0.0256, 0.0227, 0.0147, 0.0244]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0394],
        [0.0184],
        [0.0609],
        [0.0301],
        [0.0346],
        [0.0244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0184, 0.0609, 0.0301, 0.0346, 0.0244]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.1243, 0.0282, 0.0394],
        [0.0200, 0.0111, 0.0184],
        [0.1085, 0.0256, 0.0609],
        [0.0809, 0.0227, 0.0301],
        [0.0770, 0.0147, 0.0346],
        [0.0695, 0.0244, 0.0244]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type passive, variation 1 and batchsize 16: 0:03:02.584252
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI passive 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 312.79it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0609],
        [0.1001],
        [0.0605],
        [0.1128],
        [0.0884],
        [0.0636],
        [0.1066],
        [0.0532],
        [0.0782],
        [0.0680],
        [0.0566],
        [0.0547],
        [0.0643],
        [0.0629],
        [0.1141],
        [0.0536]], device='cuda:0', dtype=torch.float16)/tensor([[0.0609, 0.1001, 0.0605, 0.1128, 0.0884, 0.0636, 0.1066, 0.0532, 0.0782,
         0.0680, 0.0566, 0.0547, 0.0643, 0.0629, 0.1141, 0.0536]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0277],
        [0.0180],
        [0.0235],
        [0.0281],
        [0.0231],
        [0.0209],
        [0.0199],
        [0.0295],
        [0.0161],
        [0.0199],
        [0.0185],
        [0.0164],
        [0.0129],
        [0.0235],
        [0.0319],
        [0.0335]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0180, 0.0235, 0.0281, 0.0231, 0.0209, 0.0199, 0.0295, 0.0161,
         0.0199, 0.0185, 0.0164, 0.0129, 0.0235, 0.0319, 0.0335]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0226],
        [0.0343],
        [0.0316],
        [0.0435],
        [0.0433],
        [0.0326],
        [0.0335],
        [0.0238],
        [0.0289],
        [0.0311],
        [0.0252],
        [0.0237],
        [0.0275],
        [0.0246],
        [0.0518],
        [0.0335]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0343, 0.0316, 0.0435, 0.0433, 0.0326, 0.0335, 0.0238, 0.0289,
         0.0311, 0.0252, 0.0237, 0.0275, 0.0246, 0.0518, 0.0335]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0609, 0.0277, 0.0226],
        [0.1001, 0.0180, 0.0343],
        [0.0605, 0.0235, 0.0316],
        [0.1128, 0.0281, 0.0435],
        [0.0884, 0.0231, 0.0433],
        [0.0636, 0.0209, 0.0326],
        [0.1066, 0.0199, 0.0335],
        [0.0532, 0.0295, 0.0238],
        [0.0782, 0.0161, 0.0289],
        [0.0680, 0.0199, 0.0311],
        [0.0566, 0.0185, 0.0252],
        [0.0547, 0.0164, 0.0237],
        [0.0643, 0.0129, 0.0275],
        [0.0629, 0.0235, 0.0246],
        [0.1141, 0.0319, 0.0518],
        [0.0536, 0.0335, 0.0335]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0657],
        [0.0592],
        [0.0134],
        [0.0553],
        [0.0387],
        [0.0490],
        [0.0447],
        [0.0482],
        [0.1232],
        [0.1090],
        [0.1094],
        [0.0660],
        [0.0288],
        [0.0947],
        [0.0967],
        [0.0753]], device='cuda:0', dtype=torch.float16)/tensor([[0.0657, 0.0592, 0.0134, 0.0553, 0.0387, 0.0490, 0.0447, 0.0482, 0.1232,
         0.1090, 0.1094, 0.0660, 0.0288, 0.0947, 0.0967, 0.0753]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0253],
        [0.0174],
        [0.0089],
        [0.0184],
        [0.0161],
        [0.0142],
        [0.0154],
        [0.0130],
        [0.0398],
        [0.0307],
        [0.0318],
        [0.0272],
        [0.0199],
        [0.0306],
        [0.0212],
        [0.0203]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0174, 0.0089, 0.0184, 0.0161, 0.0142, 0.0154, 0.0130, 0.0398,
         0.0307, 0.0318, 0.0272, 0.0199, 0.0306, 0.0212, 0.0203]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0373],
        [0.0167],
        [0.0066],
        [0.0352],
        [0.0331],
        [0.0212],
        [0.0243],
        [0.0191],
        [0.0644],
        [0.0344],
        [0.0537],
        [0.0224],
        [0.0284],
        [0.0388],
        [0.0551],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0373, 0.0167, 0.0066, 0.0352, 0.0331, 0.0212, 0.0243, 0.0191, 0.0644,
         0.0344, 0.0537, 0.0224, 0.0284, 0.0388, 0.0551, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0657, 0.0253, 0.0373],
        [0.0592, 0.0174, 0.0167],
        [0.0134, 0.0089, 0.0066],
        [0.0553, 0.0184, 0.0352],
        [0.0387, 0.0161, 0.0331],
        [0.0490, 0.0142, 0.0212],
        [0.0447, 0.0154, 0.0243],
        [0.0482, 0.0130, 0.0191],
        [0.1232, 0.0398, 0.0644],
        [0.1090, 0.0307, 0.0344],
        [0.1094, 0.0318, 0.0537],
        [0.0660, 0.0272, 0.0224],
        [0.0288, 0.0199, 0.0284],
        [0.0947, 0.0306, 0.0388],
        [0.0967, 0.0212, 0.0551],
        [0.0753, 0.0203, 0.0179]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1270],
        [0.0608],
        [0.1163],
        [0.0761],
        [0.1027],
        [0.0688],
        [0.1180],
        [0.0447],
        [0.1295],
        [0.0524],
        [0.0930],
        [0.0482],
        [0.0648],
        [0.1102],
        [0.0328],
        [0.0513]], device='cuda:0', dtype=torch.float16)/tensor([[0.1270, 0.0608, 0.1163, 0.0761, 0.1027, 0.0688, 0.1180, 0.0447, 0.1295,
         0.0524, 0.0930, 0.0482, 0.0648, 0.1102, 0.0328, 0.0513]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0191],
        [0.0234],
        [0.0402],
        [0.0146],
        [0.0227],
        [0.0271],
        [0.0315],
        [0.0140],
        [0.0310],
        [0.0278],
        [0.0351],
        [0.0320],
        [0.0336],
        [0.0328],
        [0.0122],
        [0.0228]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0234, 0.0402, 0.0146, 0.0227, 0.0271, 0.0315, 0.0140, 0.0310,
         0.0278, 0.0351, 0.0320, 0.0336, 0.0328, 0.0122, 0.0228]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0460],
        [0.0251],
        [0.0387],
        [0.0341],
        [0.0495],
        [0.0346],
        [0.0824],
        [0.0175],
        [0.0424],
        [0.0230],
        [0.0432],
        [0.0235],
        [0.0405],
        [0.0595],
        [0.0273],
        [0.0268]], device='cuda:0', dtype=torch.float16)/tensor([[0.0460, 0.0251, 0.0387, 0.0341, 0.0495, 0.0346, 0.0824, 0.0175, 0.0424,
         0.0230, 0.0432, 0.0235, 0.0405, 0.0595, 0.0273, 0.0268]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1270, 0.0191, 0.0460],
        [0.0608, 0.0234, 0.0251],
        [0.1163, 0.0402, 0.0387],
        [0.0761, 0.0146, 0.0341],
        [0.1027, 0.0227, 0.0495],
        [0.0688, 0.0271, 0.0346],
        [0.1180, 0.0315, 0.0824],
        [0.0447, 0.0140, 0.0175],
        [0.1295, 0.0310, 0.0424],
        [0.0524, 0.0278, 0.0230],
        [0.0930, 0.0351, 0.0432],
        [0.0482, 0.0320, 0.0235],
        [0.0648, 0.0336, 0.0405],
        [0.1102, 0.0328, 0.0595],
        [0.0328, 0.0122, 0.0273],
        [0.0513, 0.0228, 0.0268]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1179],
        [0.1082],
        [0.0646],
        [0.1001],
        [0.0715],
        [0.0573],
        [0.0499],
        [0.0439],
        [0.0352],
        [0.0853],
        [0.0267],
        [0.0742],
        [0.0428],
        [0.0445],
        [0.0655],
        [0.0737]], device='cuda:0', dtype=torch.float16)/tensor([[0.1179, 0.1082, 0.0646, 0.1001, 0.0715, 0.0573, 0.0499, 0.0439, 0.0352,
         0.0853, 0.0267, 0.0742, 0.0428, 0.0445, 0.0655, 0.0737]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0236],
        [0.0350],
        [0.0158],
        [0.0424],
        [0.0138],
        [0.0214],
        [0.0217],
        [0.0254],
        [0.0090],
        [0.0231],
        [0.0111],
        [0.0227],
        [0.0126],
        [0.0275],
        [0.0360],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0236, 0.0350, 0.0158, 0.0424, 0.0138, 0.0214, 0.0217, 0.0254, 0.0090,
         0.0231, 0.0111, 0.0227, 0.0126, 0.0275, 0.0360, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0527],
        [0.0364],
        [0.0561],
        [0.0342],
        [0.0235],
        [0.0247],
        [0.0336],
        [0.0237],
        [0.0060],
        [0.0337],
        [0.0127],
        [0.0184],
        [0.0215],
        [0.0267],
        [0.0405],
        [0.0364]], device='cuda:0', dtype=torch.float16)/tensor([[0.0527, 0.0364, 0.0561, 0.0342, 0.0235, 0.0247, 0.0336, 0.0237, 0.0060,
         0.0337, 0.0127, 0.0184, 0.0215, 0.0267, 0.0405, 0.0364]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1179, 0.0236, 0.0527],
        [0.1082, 0.0350, 0.0364],
        [0.0646, 0.0158, 0.0561],
        [0.1001, 0.0424, 0.0342],
        [0.0715, 0.0138, 0.0235],
        [0.0573, 0.0214, 0.0247],
        [0.0499, 0.0217, 0.0336],
        [0.0439, 0.0254, 0.0237],
        [0.0352, 0.0090, 0.0060],
        [0.0853, 0.0231, 0.0337],
        [0.0267, 0.0111, 0.0127],
        [0.0742, 0.0227, 0.0184],
        [0.0428, 0.0126, 0.0215],
        [0.0445, 0.0275, 0.0267],
        [0.0655, 0.0360, 0.0405],
        [0.0737, 0.0159, 0.0364]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0750],
        [0.0847],
        [0.0301],
        [0.0651],
        [0.0489],
        [0.0498],
        [0.1038],
        [0.0656],
        [0.1417],
        [0.1129],
        [0.0742],
        [0.1096],
        [0.0585],
        [0.0669],
        [0.0541],
        [0.0933]], device='cuda:0', dtype=torch.float16)/tensor([[0.0750, 0.0847, 0.0301, 0.0651, 0.0489, 0.0498, 0.1038, 0.0656, 0.1417,
         0.1129, 0.0742, 0.1096, 0.0585, 0.0669, 0.0541, 0.0933]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0259],
        [0.0211],
        [0.0168],
        [0.0173],
        [0.0150],
        [0.0174],
        [0.0348],
        [0.0243],
        [0.0140],
        [0.0269],
        [0.0176],
        [0.0277],
        [0.0164],
        [0.0280],
        [0.0139],
        [0.0354]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0211, 0.0168, 0.0173, 0.0150, 0.0174, 0.0348, 0.0243, 0.0140,
         0.0269, 0.0176, 0.0277, 0.0164, 0.0280, 0.0139, 0.0354]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0357],
        [0.0275],
        [0.0131],
        [0.0197],
        [0.0242],
        [0.0333],
        [0.0472],
        [0.0349],
        [0.0391],
        [0.0501],
        [0.0367],
        [0.0771],
        [0.0277],
        [0.0381],
        [0.0186],
        [0.0511]], device='cuda:0', dtype=torch.float16)/tensor([[0.0357, 0.0275, 0.0131, 0.0197, 0.0242, 0.0333, 0.0472, 0.0349, 0.0391,
         0.0501, 0.0367, 0.0771, 0.0277, 0.0381, 0.0186, 0.0511]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0750, 0.0259, 0.0357],
        [0.0847, 0.0211, 0.0275],
        [0.0301, 0.0168, 0.0131],
        [0.0651, 0.0173, 0.0197],
        [0.0489, 0.0150, 0.0242],
        [0.0498, 0.0174, 0.0333],
        [0.1038, 0.0348, 0.0472],
        [0.0656, 0.0243, 0.0349],
        [0.1417, 0.0140, 0.0391],
        [0.1129, 0.0269, 0.0501],
        [0.0742, 0.0176, 0.0367],
        [0.1096, 0.0277, 0.0771],
        [0.0585, 0.0164, 0.0277],
        [0.0669, 0.0280, 0.0381],
        [0.0541, 0.0139, 0.0186],
        [0.0933, 0.0354, 0.0511]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0574],
        [0.0670],
        [0.0670],
        [0.0610],
        [0.0447],
        [0.0657],
        [0.0384],
        [0.1136],
        [0.0482],
        [0.0642],
        [0.0515],
        [0.0617],
        [0.1144],
        [0.0801],
        [0.1310],
        [0.0395]], device='cuda:0', dtype=torch.float16)/tensor([[0.0574, 0.0670, 0.0670, 0.0610, 0.0447, 0.0657, 0.0384, 0.1136, 0.0482,
         0.0642, 0.0515, 0.0617, 0.1144, 0.0801, 0.1310, 0.0395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0282],
        [0.0272],
        [0.0180],
        [0.0217],
        [0.0140],
        [0.0208],
        [0.0124],
        [0.0415],
        [0.0184],
        [0.0240],
        [0.0100],
        [0.0346],
        [0.0289],
        [0.0326],
        [0.0419],
        [0.0294]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0272, 0.0180, 0.0217, 0.0140, 0.0208, 0.0124, 0.0415, 0.0184,
         0.0240, 0.0100, 0.0346, 0.0289, 0.0326, 0.0419, 0.0294]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0347],
        [0.0394],
        [0.0377],
        [0.0314],
        [0.0267],
        [0.0308],
        [0.0293],
        [0.0375],
        [0.0160],
        [0.0360],
        [0.0209],
        [0.0481],
        [0.0376],
        [0.0460],
        [0.0525],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0394, 0.0377, 0.0314, 0.0267, 0.0308, 0.0293, 0.0375, 0.0160,
         0.0360, 0.0209, 0.0481, 0.0376, 0.0460, 0.0525, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0574, 0.0282, 0.0347],
        [0.0670, 0.0272, 0.0394],
        [0.0670, 0.0180, 0.0377],
        [0.0610, 0.0217, 0.0314],
        [0.0447, 0.0140, 0.0267],
        [0.0657, 0.0208, 0.0308],
        [0.0384, 0.0124, 0.0293],
        [0.1136, 0.0415, 0.0375],
        [0.0482, 0.0184, 0.0160],
        [0.0642, 0.0240, 0.0360],
        [0.0515, 0.0100, 0.0209],
        [0.0617, 0.0346, 0.0481],
        [0.1144, 0.0289, 0.0376],
        [0.0801, 0.0326, 0.0460],
        [0.1310, 0.0419, 0.0525],
        [0.0395, 0.0294, 0.0193]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1045],
        [0.0727],
        [0.0512],
        [0.0414],
        [0.0394],
        [0.0570],
        [0.0436],
        [0.0440],
        [0.1021],
        [0.0692],
        [0.0828],
        [0.0775],
        [0.0967],
        [0.0309],
        [0.0838],
        [0.0853]], device='cuda:0', dtype=torch.float16)/tensor([[0.1045, 0.0727, 0.0512, 0.0414, 0.0394, 0.0570, 0.0436, 0.0440, 0.1021,
         0.0692, 0.0828, 0.0775, 0.0967, 0.0309, 0.0838, 0.0853]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0260],
        [0.0280],
        [0.0224],
        [0.0180],
        [0.0219],
        [0.0355],
        [0.0215],
        [0.0250],
        [0.0189],
        [0.0230],
        [0.0211],
        [0.0234],
        [0.0218],
        [0.0197],
        [0.0300],
        [0.0213]], device='cuda:0', dtype=torch.float16)/tensor([[0.0260, 0.0280, 0.0224, 0.0180, 0.0219, 0.0355, 0.0215, 0.0250, 0.0189,
         0.0230, 0.0211, 0.0234, 0.0218, 0.0197, 0.0300, 0.0213]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0542],
        [0.0446],
        [0.0201],
        [0.0191],
        [0.0233],
        [0.0447],
        [0.0511],
        [0.0279],
        [0.0241],
        [0.0277],
        [0.0465],
        [0.0180],
        [0.0329],
        [0.0217],
        [0.0310],
        [0.0356]], device='cuda:0', dtype=torch.float16)/tensor([[0.0542, 0.0446, 0.0201, 0.0191, 0.0233, 0.0447, 0.0511, 0.0279, 0.0241,
         0.0277, 0.0465, 0.0180, 0.0329, 0.0217, 0.0310, 0.0356]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1045, 0.0260, 0.0542],
        [0.0727, 0.0280, 0.0446],
        [0.0512, 0.0224, 0.0201],
        [0.0414, 0.0180, 0.0191],
        [0.0394, 0.0219, 0.0233],
        [0.0570, 0.0355, 0.0447],
        [0.0436, 0.0215, 0.0511],
        [0.0440, 0.0250, 0.0279],
        [0.1021, 0.0189, 0.0241],
        [0.0692, 0.0230, 0.0277],
        [0.0828, 0.0211, 0.0465],
        [0.0775, 0.0234, 0.0180],
        [0.0967, 0.0218, 0.0329],
        [0.0309, 0.0197, 0.0217],
        [0.0838, 0.0300, 0.0310],
        [0.0853, 0.0213, 0.0356]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1096],
        [0.0574],
        [0.0792],
        [0.0467],
        [0.0245],
        [0.0625],
        [0.0588],
        [0.1416],
        [0.0653],
        [0.0682],
        [0.0892],
        [0.0522],
        [0.0372],
        [0.0408],
        [0.0848],
        [0.0602]], device='cuda:0', dtype=torch.float16)/tensor([[0.1096, 0.0574, 0.0792, 0.0467, 0.0245, 0.0625, 0.0588, 0.1416, 0.0653,
         0.0682, 0.0892, 0.0522, 0.0372, 0.0408, 0.0848, 0.0602]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0139],
        [0.0169],
        [0.0255],
        [0.0187],
        [0.0316],
        [0.0342],
        [0.0174],
        [0.0288],
        [0.0316],
        [0.0250],
        [0.0337],
        [0.0147],
        [0.0196],
        [0.0224],
        [0.0398],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0169, 0.0255, 0.0187, 0.0316, 0.0342, 0.0174, 0.0288, 0.0316,
         0.0250, 0.0337, 0.0147, 0.0196, 0.0224, 0.0398, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0381],
        [0.0294],
        [0.0327],
        [0.0219],
        [0.0140],
        [0.0385],
        [0.0280],
        [0.0467],
        [0.0339],
        [0.0282],
        [0.0413],
        [0.0284],
        [0.0170],
        [0.0219],
        [0.0385],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0381, 0.0294, 0.0327, 0.0219, 0.0140, 0.0385, 0.0280, 0.0467, 0.0339,
         0.0282, 0.0413, 0.0284, 0.0170, 0.0219, 0.0385, 0.0171]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1096, 0.0139, 0.0381],
        [0.0574, 0.0169, 0.0294],
        [0.0792, 0.0255, 0.0327],
        [0.0467, 0.0187, 0.0219],
        [0.0245, 0.0316, 0.0140],
        [0.0625, 0.0342, 0.0385],
        [0.0588, 0.0174, 0.0280],
        [0.1416, 0.0288, 0.0467],
        [0.0653, 0.0316, 0.0339],
        [0.0682, 0.0250, 0.0282],
        [0.0892, 0.0337, 0.0413],
        [0.0522, 0.0147, 0.0284],
        [0.0372, 0.0196, 0.0170],
        [0.0408, 0.0224, 0.0219],
        [0.0848, 0.0398, 0.0385],
        [0.0602, 0.0116, 0.0171]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0167],
        [0.0458],
        [0.0623],
        [0.0736],
        [0.1026],
        [0.0509],
        [0.0475],
        [0.0803],
        [0.0782],
        [0.0506],
        [0.0601],
        [0.0903],
        [0.0660],
        [0.0688],
        [0.0594],
        [0.0902]], device='cuda:0', dtype=torch.float16)/tensor([[0.0167, 0.0458, 0.0623, 0.0736, 0.1026, 0.0509, 0.0475, 0.0803, 0.0782,
         0.0506, 0.0601, 0.0903, 0.0660, 0.0688, 0.0594, 0.0902]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0111],
        [0.0198],
        [0.0161],
        [0.0332],
        [0.0289],
        [0.0150],
        [0.0273],
        [0.0222],
        [0.0244],
        [0.0200],
        [0.0203],
        [0.0239],
        [0.0286],
        [0.0217],
        [0.0174],
        [0.0372]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0198, 0.0161, 0.0332, 0.0289, 0.0150, 0.0273, 0.0222, 0.0244,
         0.0200, 0.0203, 0.0239, 0.0286, 0.0217, 0.0174, 0.0372]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0176],
        [0.0230],
        [0.0296],
        [0.0461],
        [0.0363],
        [0.0279],
        [0.0315],
        [0.0284],
        [0.0294],
        [0.0231],
        [0.0219],
        [0.0307],
        [0.0343],
        [0.0237],
        [0.0302],
        [0.0504]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0230, 0.0296, 0.0461, 0.0363, 0.0279, 0.0315, 0.0284, 0.0294,
         0.0231, 0.0219, 0.0307, 0.0343, 0.0237, 0.0302, 0.0504]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0167, 0.0111, 0.0176],
        [0.0458, 0.0198, 0.0230],
        [0.0623, 0.0161, 0.0296],
        [0.0736, 0.0332, 0.0461],
        [0.1026, 0.0289, 0.0363],
        [0.0509, 0.0150, 0.0279],
        [0.0475, 0.0273, 0.0315],
        [0.0803, 0.0222, 0.0284],
        [0.0782, 0.0244, 0.0294],
        [0.0506, 0.0200, 0.0231],
        [0.0601, 0.0203, 0.0219],
        [0.0903, 0.0239, 0.0307],
        [0.0660, 0.0286, 0.0343],
        [0.0688, 0.0217, 0.0237],
        [0.0594, 0.0174, 0.0302],
        [0.0902, 0.0372, 0.0504]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0637],
        [0.0584],
        [0.1130],
        [0.0795],
        [0.0518],
        [0.0493],
        [0.0463],
        [0.1236],
        [0.0504],
        [0.0583],
        [0.0717],
        [0.0950],
        [0.0614],
        [0.1154],
        [0.1203],
        [0.0537]], device='cuda:0', dtype=torch.float16)/tensor([[0.0637, 0.0584, 0.1130, 0.0795, 0.0518, 0.0493, 0.0463, 0.1236, 0.0504,
         0.0583, 0.0717, 0.0950, 0.0614, 0.1154, 0.1203, 0.0537]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0237],
        [0.0120],
        [0.0382],
        [0.0342],
        [0.0179],
        [0.0142],
        [0.0208],
        [0.0177],
        [0.0188],
        [0.0239],
        [0.0301],
        [0.0266],
        [0.0238],
        [0.0268],
        [0.0293],
        [0.0235]], device='cuda:0', dtype=torch.float16)/tensor([[0.0237, 0.0120, 0.0382, 0.0342, 0.0179, 0.0142, 0.0208, 0.0177, 0.0188,
         0.0239, 0.0301, 0.0266, 0.0238, 0.0268, 0.0293, 0.0235]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0498],
        [0.0235],
        [0.0510],
        [0.0639],
        [0.0391],
        [0.0218],
        [0.0210],
        [0.0465],
        [0.0240],
        [0.0269],
        [0.0267],
        [0.0440],
        [0.0288],
        [0.0442],
        [0.0600],
        [0.0274]], device='cuda:0', dtype=torch.float16)/tensor([[0.0498, 0.0235, 0.0510, 0.0639, 0.0391, 0.0218, 0.0210, 0.0465, 0.0240,
         0.0269, 0.0267, 0.0440, 0.0288, 0.0442, 0.0600, 0.0274]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0637, 0.0237, 0.0498],
        [0.0584, 0.0120, 0.0235],
        [0.1130, 0.0382, 0.0510],
        [0.0795, 0.0342, 0.0639],
        [0.0518, 0.0179, 0.0391],
        [0.0493, 0.0142, 0.0218],
        [0.0463, 0.0208, 0.0210],
        [0.1236, 0.0177, 0.0465],
        [0.0504, 0.0188, 0.0240],
        [0.0583, 0.0239, 0.0269],
        [0.0717, 0.0301, 0.0267],
        [0.0950, 0.0266, 0.0440],
        [0.0614, 0.0238, 0.0288],
        [0.1154, 0.0268, 0.0442],
        [0.1203, 0.0293, 0.0600],
        [0.0537, 0.0235, 0.0274]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0945],
        [0.1122],
        [0.0952],
        [0.1016],
        [0.1327],
        [0.1302],
        [0.0263],
        [0.0601],
        [0.0714],
        [0.0310],
        [0.0898],
        [0.0482],
        [0.0986],
        [0.0906],
        [0.0510],
        [0.0918]], device='cuda:0', dtype=torch.float16)/tensor([[0.0945, 0.1122, 0.0952, 0.1016, 0.1327, 0.1302, 0.0263, 0.0601, 0.0714,
         0.0310, 0.0898, 0.0482, 0.0986, 0.0906, 0.0510, 0.0918]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0394],
        [0.0400],
        [0.0511],
        [0.0383],
        [0.0360],
        [0.0351],
        [0.0105],
        [0.0171],
        [0.0163],
        [0.0128],
        [0.0281],
        [0.0203],
        [0.0238],
        [0.0311],
        [0.0203],
        [0.0325]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0400, 0.0511, 0.0383, 0.0360, 0.0351, 0.0105, 0.0171, 0.0163,
         0.0128, 0.0281, 0.0203, 0.0238, 0.0311, 0.0203, 0.0325]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0385],
        [0.0370],
        [0.0475],
        [0.0602],
        [0.0346],
        [0.0461],
        [0.0140],
        [0.0578],
        [0.0274],
        [0.0130],
        [0.0383],
        [0.0256],
        [0.0217],
        [0.0381],
        [0.0327],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0385, 0.0370, 0.0475, 0.0602, 0.0346, 0.0461, 0.0140, 0.0578, 0.0274,
         0.0130, 0.0383, 0.0256, 0.0217, 0.0381, 0.0327, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0945, 0.0394, 0.0385],
        [0.1122, 0.0400, 0.0370],
        [0.0952, 0.0511, 0.0475],
        [0.1016, 0.0383, 0.0602],
        [0.1327, 0.0360, 0.0346],
        [0.1302, 0.0351, 0.0461],
        [0.0263, 0.0105, 0.0140],
        [0.0601, 0.0171, 0.0578],
        [0.0714, 0.0163, 0.0274],
        [0.0310, 0.0128, 0.0130],
        [0.0898, 0.0281, 0.0383],
        [0.0482, 0.0203, 0.0256],
        [0.0986, 0.0238, 0.0217],
        [0.0906, 0.0311, 0.0381],
        [0.0510, 0.0203, 0.0327],
        [0.0918, 0.0325, 0.0267]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0832],
        [0.0461],
        [0.0608],
        [0.0303],
        [0.0506],
        [0.1133],
        [0.0353],
        [0.0679],
        [0.0591],
        [0.0685],
        [0.0785],
        [0.0656],
        [0.0970],
        [0.1223],
        [0.0710],
        [0.0695]], device='cuda:0', dtype=torch.float16)/tensor([[0.0832, 0.0461, 0.0608, 0.0303, 0.0506, 0.1133, 0.0353, 0.0679, 0.0591,
         0.0685, 0.0785, 0.0656, 0.0970, 0.1223, 0.0710, 0.0695]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0310],
        [0.0237],
        [0.0292],
        [0.0262],
        [0.0264],
        [0.0356],
        [0.0115],
        [0.0363],
        [0.0208],
        [0.0240],
        [0.0266],
        [0.0140],
        [0.0333],
        [0.0211],
        [0.0354],
        [0.0199]], device='cuda:0', dtype=torch.float16)/tensor([[0.0310, 0.0237, 0.0292, 0.0262, 0.0264, 0.0356, 0.0115, 0.0363, 0.0208,
         0.0240, 0.0266, 0.0140, 0.0333, 0.0211, 0.0354, 0.0199]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0341],
        [0.0216],
        [0.0408],
        [0.0205],
        [0.0277],
        [0.0606],
        [0.0114],
        [0.0459],
        [0.0309],
        [0.0306],
        [0.0347],
        [0.0284],
        [0.0430],
        [0.0610],
        [0.0323],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0341, 0.0216, 0.0408, 0.0205, 0.0277, 0.0606, 0.0114, 0.0459, 0.0309,
         0.0306, 0.0347, 0.0284, 0.0430, 0.0610, 0.0323, 0.0238]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0832, 0.0310, 0.0341],
        [0.0461, 0.0237, 0.0216],
        [0.0608, 0.0292, 0.0408],
        [0.0303, 0.0262, 0.0205],
        [0.0506, 0.0264, 0.0277],
        [0.1133, 0.0356, 0.0606],
        [0.0353, 0.0115, 0.0114],
        [0.0679, 0.0363, 0.0459],
        [0.0591, 0.0208, 0.0309],
        [0.0685, 0.0240, 0.0306],
        [0.0785, 0.0266, 0.0347],
        [0.0656, 0.0140, 0.0284],
        [0.0970, 0.0333, 0.0430],
        [0.1223, 0.0211, 0.0610],
        [0.0710, 0.0354, 0.0323],
        [0.0695, 0.0199, 0.0238]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0450],
        [0.1072],
        [0.0723],
        [0.0470],
        [0.1064],
        [0.1193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0450, 0.1072, 0.0723, 0.0470, 0.1064, 0.1193]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0209],
        [0.0320],
        [0.0313],
        [0.0216],
        [0.0333],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0209, 0.0320, 0.0313, 0.0216, 0.0333, 0.0260]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0228],
        [0.0382],
        [0.0323],
        [0.0274],
        [0.0210],
        [0.0521]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0382, 0.0323, 0.0274, 0.0210, 0.0521]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0450, 0.0209, 0.0228],
        [0.1072, 0.0320, 0.0382],
        [0.0723, 0.0313, 0.0323],
        [0.0470, 0.0216, 0.0274],
        [0.1064, 0.0333, 0.0210],
        [0.1193, 0.0260, 0.0521]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type passive, variation 2 and batchsize 16: 0:03:02.999202
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI passive 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 315.41it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0265],
        [0.0281],
        [0.0112],
        [0.0509],
        [0.0163],
        [0.0127],
        [0.0450],
        [0.0207],
        [0.0324],
        [0.0095],
        [0.0215],
        [0.0237],
        [0.0360],
        [0.0328],
        [0.0381],
        [0.0520]], device='cuda:0', dtype=torch.float16)/tensor([[0.0265, 0.0281, 0.0112, 0.0509, 0.0163, 0.0127, 0.0450, 0.0207, 0.0324,
         0.0095, 0.0215, 0.0237, 0.0360, 0.0328, 0.0381, 0.0520]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0103],
        [0.0043],
        [0.0095],
        [0.0191],
        [0.0055],
        [0.0028],
        [0.0138],
        [0.0069],
        [0.0122],
        [0.0043],
        [0.0112],
        [0.0171],
        [0.0077],
        [0.0086],
        [0.0104],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0103, 0.0043, 0.0095, 0.0191, 0.0055, 0.0028, 0.0138, 0.0069, 0.0122,
         0.0043, 0.0112, 0.0171, 0.0077, 0.0086, 0.0104, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0101],
        [0.0079],
        [0.0145],
        [0.0377],
        [0.0157],
        [0.0103],
        [0.0670],
        [0.0025],
        [0.0097],
        [0.0053],
        [0.0116],
        [0.0286],
        [0.0168],
        [0.0118],
        [0.0124],
        [0.0221]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0079, 0.0145, 0.0377, 0.0157, 0.0103, 0.0670, 0.0025, 0.0097,
         0.0053, 0.0116, 0.0286, 0.0168, 0.0118, 0.0124, 0.0221]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0265, 0.0103, 0.0101],
        [0.0281, 0.0043, 0.0079],
        [0.0112, 0.0095, 0.0145],
        [0.0509, 0.0191, 0.0377],
        [0.0163, 0.0055, 0.0157],
        [0.0127, 0.0028, 0.0103],
        [0.0450, 0.0138, 0.0670],
        [0.0207, 0.0069, 0.0025],
        [0.0324, 0.0122, 0.0097],
        [0.0095, 0.0043, 0.0053],
        [0.0215, 0.0112, 0.0116],
        [0.0237, 0.0171, 0.0286],
        [0.0360, 0.0077, 0.0168],
        [0.0328, 0.0086, 0.0118],
        [0.0381, 0.0104, 0.0124],
        [0.0520, 0.0127, 0.0221]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0191],
        [0.0104],
        [0.0576],
        [0.0452],
        [0.0332],
        [0.0339],
        [0.0376],
        [0.0365],
        [0.0296],
        [0.0305],
        [0.0335],
        [0.0837],
        [0.0098],
        [0.0515],
        [0.0428],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0104, 0.0576, 0.0452, 0.0332, 0.0339, 0.0376, 0.0365, 0.0296,
         0.0305, 0.0335, 0.0837, 0.0098, 0.0515, 0.0428, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0098],
        [0.0047],
        [0.0075],
        [0.0122],
        [0.0083],
        [0.0084],
        [0.0182],
        [0.0095],
        [0.0081],
        [0.0052],
        [0.0128],
        [0.0090],
        [0.0047],
        [0.0074],
        [0.0131],
        [0.0214]], device='cuda:0', dtype=torch.float16)/tensor([[0.0098, 0.0047, 0.0075, 0.0122, 0.0083, 0.0084, 0.0182, 0.0095, 0.0081,
         0.0052, 0.0128, 0.0090, 0.0047, 0.0074, 0.0131, 0.0214]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0120],
        [0.0086],
        [0.0124],
        [0.0190],
        [0.0221],
        [0.0436],
        [0.0280],
        [0.0227],
        [0.0209],
        [0.0084],
        [0.0164],
        [0.0504],
        [0.0077],
        [0.0132],
        [0.0316],
        [0.0268]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0086, 0.0124, 0.0190, 0.0221, 0.0436, 0.0280, 0.0227, 0.0209,
         0.0084, 0.0164, 0.0504, 0.0077, 0.0132, 0.0316, 0.0268]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0191, 0.0098, 0.0120],
        [0.0104, 0.0047, 0.0086],
        [0.0576, 0.0075, 0.0124],
        [0.0452, 0.0122, 0.0190],
        [0.0332, 0.0083, 0.0221],
        [0.0339, 0.0084, 0.0436],
        [0.0376, 0.0182, 0.0280],
        [0.0365, 0.0095, 0.0227],
        [0.0296, 0.0081, 0.0209],
        [0.0305, 0.0052, 0.0084],
        [0.0335, 0.0128, 0.0164],
        [0.0837, 0.0090, 0.0504],
        [0.0098, 0.0047, 0.0077],
        [0.0515, 0.0074, 0.0132],
        [0.0428, 0.0131, 0.0316],
        [0.0261, 0.0214, 0.0268]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0553],
        [0.0381],
        [0.0129],
        [0.0323],
        [0.0314],
        [0.0432],
        [0.0252],
        [0.0243],
        [0.0093],
        [0.0205],
        [0.0399],
        [0.0129],
        [0.0370],
        [0.0139],
        [0.0272],
        [0.0549]], device='cuda:0', dtype=torch.float16)/tensor([[0.0553, 0.0381, 0.0129, 0.0323, 0.0314, 0.0432, 0.0252, 0.0243, 0.0093,
         0.0205, 0.0399, 0.0129, 0.0370, 0.0139, 0.0272, 0.0549]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0094],
        [0.0114],
        [0.0080],
        [0.0082],
        [0.0089],
        [0.0209],
        [0.0084],
        [0.0103],
        [0.0035],
        [0.0051],
        [0.0031],
        [0.0057],
        [0.0079],
        [0.0048],
        [0.0086],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0094, 0.0114, 0.0080, 0.0082, 0.0089, 0.0209, 0.0084, 0.0103, 0.0035,
         0.0051, 0.0031, 0.0057, 0.0079, 0.0048, 0.0086, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0161],
        [0.0180],
        [0.0108],
        [0.0087],
        [0.0091],
        [0.0316],
        [0.0154],
        [0.0375],
        [0.0066],
        [0.0085],
        [0.0144],
        [0.0144],
        [0.0089],
        [0.0115],
        [0.0098],
        [0.0145]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0180, 0.0108, 0.0087, 0.0091, 0.0316, 0.0154, 0.0375, 0.0066,
         0.0085, 0.0144, 0.0144, 0.0089, 0.0115, 0.0098, 0.0145]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0553, 0.0094, 0.0161],
        [0.0381, 0.0114, 0.0180],
        [0.0129, 0.0080, 0.0108],
        [0.0323, 0.0082, 0.0087],
        [0.0314, 0.0089, 0.0091],
        [0.0432, 0.0209, 0.0316],
        [0.0252, 0.0084, 0.0154],
        [0.0243, 0.0103, 0.0375],
        [0.0093, 0.0035, 0.0066],
        [0.0205, 0.0051, 0.0085],
        [0.0399, 0.0031, 0.0144],
        [0.0129, 0.0057, 0.0144],
        [0.0370, 0.0079, 0.0089],
        [0.0139, 0.0048, 0.0115],
        [0.0272, 0.0086, 0.0098],
        [0.0549, 0.0128, 0.0145]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0431],
        [0.0145],
        [0.0248],
        [0.0241],
        [0.0222],
        [0.0269],
        [0.0284],
        [0.0875],
        [0.0782],
        [0.0508],
        [0.0191],
        [0.0567],
        [0.0521],
        [0.0385],
        [0.0272],
        [0.0200]], device='cuda:0', dtype=torch.float16)/tensor([[0.0431, 0.0145, 0.0248, 0.0241, 0.0222, 0.0269, 0.0284, 0.0875, 0.0782,
         0.0508, 0.0191, 0.0567, 0.0521, 0.0385, 0.0272, 0.0200]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0138],
        [0.0071],
        [0.0035],
        [0.0267],
        [0.0133],
        [0.0022],
        [0.0113],
        [0.0106],
        [0.0124],
        [0.0155],
        [0.0054],
        [0.0138],
        [0.0110],
        [0.0082],
        [0.0087],
        [0.0059]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0071, 0.0035, 0.0267, 0.0133, 0.0022, 0.0113, 0.0106, 0.0124,
         0.0155, 0.0054, 0.0138, 0.0110, 0.0082, 0.0087, 0.0059]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0190],
        [0.0092],
        [0.0118],
        [0.0254],
        [0.0233],
        [0.0088],
        [0.0132],
        [0.0569],
        [0.0387],
        [0.0178],
        [0.0177],
        [0.0126],
        [0.0270],
        [0.0136],
        [0.0096],
        [0.0187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0092, 0.0118, 0.0254, 0.0233, 0.0088, 0.0132, 0.0569, 0.0387,
         0.0178, 0.0177, 0.0126, 0.0270, 0.0136, 0.0096, 0.0187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0431, 0.0138, 0.0190],
        [0.0145, 0.0071, 0.0092],
        [0.0248, 0.0035, 0.0118],
        [0.0241, 0.0267, 0.0254],
        [0.0222, 0.0133, 0.0233],
        [0.0269, 0.0022, 0.0088],
        [0.0284, 0.0113, 0.0132],
        [0.0875, 0.0106, 0.0569],
        [0.0782, 0.0124, 0.0387],
        [0.0508, 0.0155, 0.0178],
        [0.0191, 0.0054, 0.0177],
        [0.0567, 0.0138, 0.0126],
        [0.0521, 0.0110, 0.0270],
        [0.0385, 0.0082, 0.0136],
        [0.0272, 0.0087, 0.0096],
        [0.0200, 0.0059, 0.0187]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0195],
        [0.0295],
        [0.0671],
        [0.0431],
        [0.0440],
        [0.0338],
        [0.0530],
        [0.0405],
        [0.0383],
        [0.0296],
        [0.0254],
        [0.0280],
        [0.0410],
        [0.0612],
        [0.0488],
        [0.0248]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0295, 0.0671, 0.0431, 0.0440, 0.0338, 0.0530, 0.0405, 0.0383,
         0.0296, 0.0254, 0.0280, 0.0410, 0.0612, 0.0488, 0.0248]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0092],
        [0.0023],
        [0.0049],
        [0.0062],
        [0.0062],
        [0.0082],
        [0.0076],
        [0.0088],
        [0.0053],
        [0.0142],
        [0.0128],
        [0.0146],
        [0.0035],
        [0.0200],
        [0.0101],
        [0.0076]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0023, 0.0049, 0.0062, 0.0062, 0.0082, 0.0076, 0.0088, 0.0053,
         0.0142, 0.0128, 0.0146, 0.0035, 0.0200, 0.0101, 0.0076]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0135],
        [0.0153],
        [0.0215],
        [0.0144],
        [0.0108],
        [0.0104],
        [0.0158],
        [0.0196],
        [0.0231],
        [0.0114],
        [0.0184],
        [0.0267],
        [0.0188],
        [0.0282],
        [0.0312],
        [0.0215]], device='cuda:0', dtype=torch.float16)/tensor([[0.0135, 0.0153, 0.0215, 0.0144, 0.0108, 0.0104, 0.0158, 0.0196, 0.0231,
         0.0114, 0.0184, 0.0267, 0.0188, 0.0282, 0.0312, 0.0215]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0195, 0.0092, 0.0135],
        [0.0295, 0.0023, 0.0153],
        [0.0671, 0.0049, 0.0215],
        [0.0431, 0.0062, 0.0144],
        [0.0440, 0.0062, 0.0108],
        [0.0338, 0.0082, 0.0104],
        [0.0530, 0.0076, 0.0158],
        [0.0405, 0.0088, 0.0196],
        [0.0383, 0.0053, 0.0231],
        [0.0296, 0.0142, 0.0114],
        [0.0254, 0.0128, 0.0184],
        [0.0280, 0.0146, 0.0267],
        [0.0410, 0.0035, 0.0188],
        [0.0612, 0.0200, 0.0282],
        [0.0488, 0.0101, 0.0312],
        [0.0248, 0.0076, 0.0215]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0247],
        [0.0358],
        [0.0380],
        [0.0215],
        [0.0427],
        [0.0454],
        [0.0730],
        [0.0117],
        [0.0316],
        [0.0195],
        [0.0668],
        [0.0363],
        [0.0188],
        [0.0222],
        [0.0323],
        [0.0218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0247, 0.0358, 0.0380, 0.0215, 0.0427, 0.0454, 0.0730, 0.0117, 0.0316,
         0.0195, 0.0668, 0.0363, 0.0188, 0.0222, 0.0323, 0.0218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0044],
        [0.0065],
        [0.0104],
        [0.0088],
        [0.0075],
        [0.0109],
        [0.0132],
        [0.0128],
        [0.0027],
        [0.0079],
        [0.0086],
        [0.0082],
        [0.0069],
        [0.0035],
        [0.0086],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0065, 0.0104, 0.0088, 0.0075, 0.0109, 0.0132, 0.0128, 0.0027,
         0.0079, 0.0086, 0.0082, 0.0069, 0.0035, 0.0086, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0270],
        [0.0081],
        [0.0064],
        [0.0182],
        [0.0141],
        [0.0245],
        [0.0314],
        [0.0084],
        [0.0154],
        [0.0137],
        [0.0156],
        [0.0096],
        [0.0131],
        [0.0106],
        [0.0215],
        [0.0221]], device='cuda:0', dtype=torch.float16)/tensor([[0.0270, 0.0081, 0.0064, 0.0182, 0.0141, 0.0245, 0.0314, 0.0084, 0.0154,
         0.0137, 0.0156, 0.0096, 0.0131, 0.0106, 0.0215, 0.0221]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0247, 0.0044, 0.0270],
        [0.0358, 0.0065, 0.0081],
        [0.0380, 0.0104, 0.0064],
        [0.0215, 0.0088, 0.0182],
        [0.0427, 0.0075, 0.0141],
        [0.0454, 0.0109, 0.0245],
        [0.0730, 0.0132, 0.0314],
        [0.0117, 0.0128, 0.0084],
        [0.0316, 0.0027, 0.0154],
        [0.0195, 0.0079, 0.0137],
        [0.0668, 0.0086, 0.0156],
        [0.0363, 0.0082, 0.0096],
        [0.0188, 0.0069, 0.0131],
        [0.0222, 0.0035, 0.0106],
        [0.0323, 0.0086, 0.0215],
        [0.0218, 0.0126, 0.0221]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0570],
        [0.0479],
        [0.0484],
        [0.0321],
        [0.0324],
        [0.0499],
        [0.0477],
        [0.0362],
        [0.0357],
        [0.0330],
        [0.0138],
        [0.0213],
        [0.0156],
        [0.0544],
        [0.0542],
        [0.0378]], device='cuda:0', dtype=torch.float16)/tensor([[0.0570, 0.0479, 0.0484, 0.0321, 0.0324, 0.0499, 0.0477, 0.0362, 0.0357,
         0.0330, 0.0138, 0.0213, 0.0156, 0.0544, 0.0542, 0.0378]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0060],
        [0.0145],
        [0.0069],
        [0.0090],
        [0.0182],
        [0.0206],
        [0.0163],
        [0.0033],
        [0.0135],
        [0.0181],
        [0.0063],
        [0.0134],
        [0.0127],
        [0.0053],
        [0.0034],
        [0.0041]], device='cuda:0', dtype=torch.float16)/tensor([[0.0060, 0.0145, 0.0069, 0.0090, 0.0182, 0.0206, 0.0163, 0.0033, 0.0135,
         0.0181, 0.0063, 0.0134, 0.0127, 0.0053, 0.0034, 0.0041]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0184],
        [0.0141],
        [0.0129],
        [0.0159],
        [0.0216],
        [0.0444],
        [0.0258],
        [0.0178],
        [0.0157],
        [0.0484],
        [0.0160],
        [0.0197],
        [0.0146],
        [0.0374],
        [0.0158],
        [0.0165]], device='cuda:0', dtype=torch.float16)/tensor([[0.0184, 0.0141, 0.0129, 0.0159, 0.0216, 0.0444, 0.0258, 0.0178, 0.0157,
         0.0484, 0.0160, 0.0197, 0.0146, 0.0374, 0.0158, 0.0165]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0570, 0.0060, 0.0184],
        [0.0479, 0.0145, 0.0141],
        [0.0484, 0.0069, 0.0129],
        [0.0321, 0.0090, 0.0159],
        [0.0324, 0.0182, 0.0216],
        [0.0499, 0.0206, 0.0444],
        [0.0477, 0.0163, 0.0258],
        [0.0362, 0.0033, 0.0178],
        [0.0357, 0.0135, 0.0157],
        [0.0330, 0.0181, 0.0484],
        [0.0138, 0.0063, 0.0160],
        [0.0213, 0.0134, 0.0197],
        [0.0156, 0.0127, 0.0146],
        [0.0544, 0.0053, 0.0374],
        [0.0542, 0.0034, 0.0158],
        [0.0378, 0.0041, 0.0165]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0249],
        [0.0290],
        [0.0243],
        [0.0314],
        [0.0075],
        [0.0461],
        [0.0588],
        [0.0529],
        [0.0393],
        [0.0795],
        [0.0184],
        [0.0252],
        [0.0221],
        [0.0388],
        [0.0505],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0290, 0.0243, 0.0314, 0.0075, 0.0461, 0.0588, 0.0529, 0.0393,
         0.0795, 0.0184, 0.0252, 0.0221, 0.0388, 0.0505, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0033],
        [0.0046],
        [0.0043],
        [0.0123],
        [0.0042],
        [0.0052],
        [0.0098],
        [0.0073],
        [0.0130],
        [0.0162],
        [0.0083],
        [0.0120],
        [0.0079],
        [0.0055],
        [0.0183],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0033, 0.0046, 0.0043, 0.0123, 0.0042, 0.0052, 0.0098, 0.0073, 0.0130,
         0.0162, 0.0083, 0.0120, 0.0079, 0.0055, 0.0183, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0123],
        [0.0119],
        [0.0062],
        [0.0217],
        [0.0042],
        [0.0147],
        [0.0269],
        [0.0146],
        [0.0228],
        [0.0347],
        [0.0098],
        [0.0124],
        [0.0098],
        [0.0121],
        [0.0162],
        [0.0220]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0119, 0.0062, 0.0217, 0.0042, 0.0147, 0.0269, 0.0146, 0.0228,
         0.0347, 0.0098, 0.0124, 0.0098, 0.0121, 0.0162, 0.0220]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0249, 0.0033, 0.0123],
        [0.0290, 0.0046, 0.0119],
        [0.0243, 0.0043, 0.0062],
        [0.0314, 0.0123, 0.0217],
        [0.0075, 0.0042, 0.0042],
        [0.0461, 0.0052, 0.0147],
        [0.0588, 0.0098, 0.0269],
        [0.0529, 0.0073, 0.0146],
        [0.0393, 0.0130, 0.0228],
        [0.0795, 0.0162, 0.0347],
        [0.0184, 0.0083, 0.0098],
        [0.0252, 0.0120, 0.0124],
        [0.0221, 0.0079, 0.0098],
        [0.0388, 0.0055, 0.0121],
        [0.0505, 0.0183, 0.0162],
        [0.0150, 0.0114, 0.0220]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0359],
        [0.0480],
        [0.0776],
        [0.0314],
        [0.0194],
        [0.0770],
        [0.0573],
        [0.0281],
        [0.0069],
        [0.0313],
        [0.0556],
        [0.0354],
        [0.0519],
        [0.0142],
        [0.0235],
        [0.0506]], device='cuda:0', dtype=torch.float16)/tensor([[0.0359, 0.0480, 0.0776, 0.0314, 0.0194, 0.0770, 0.0573, 0.0281, 0.0069,
         0.0313, 0.0556, 0.0354, 0.0519, 0.0142, 0.0235, 0.0506]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0150],
        [0.0218],
        [0.0068],
        [0.0107],
        [0.0104],
        [0.0079],
        [0.0143],
        [0.0139],
        [0.0032],
        [0.0079],
        [0.0104],
        [0.0059],
        [0.0065],
        [0.0071],
        [0.0088],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0218, 0.0068, 0.0107, 0.0104, 0.0079, 0.0143, 0.0139, 0.0032,
         0.0079, 0.0104, 0.0059, 0.0065, 0.0071, 0.0088, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0144],
        [0.0310],
        [0.0406],
        [0.0113],
        [0.0295],
        [0.0302],
        [0.0260],
        [0.0151],
        [0.0081],
        [0.0122],
        [0.0263],
        [0.0128],
        [0.0119],
        [0.0070],
        [0.0155],
        [0.0498]], device='cuda:0', dtype=torch.float16)/tensor([[0.0144, 0.0310, 0.0406, 0.0113, 0.0295, 0.0302, 0.0260, 0.0151, 0.0081,
         0.0122, 0.0263, 0.0128, 0.0119, 0.0070, 0.0155, 0.0498]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0359, 0.0150, 0.0144],
        [0.0480, 0.0218, 0.0310],
        [0.0776, 0.0068, 0.0406],
        [0.0314, 0.0107, 0.0113],
        [0.0194, 0.0104, 0.0295],
        [0.0770, 0.0079, 0.0302],
        [0.0573, 0.0143, 0.0260],
        [0.0281, 0.0139, 0.0151],
        [0.0069, 0.0032, 0.0081],
        [0.0313, 0.0079, 0.0122],
        [0.0556, 0.0104, 0.0263],
        [0.0354, 0.0059, 0.0128],
        [0.0519, 0.0065, 0.0119],
        [0.0142, 0.0071, 0.0070],
        [0.0235, 0.0088, 0.0155],
        [0.0506, 0.0192, 0.0498]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0485],
        [0.0408],
        [0.0123],
        [0.0355],
        [0.0691],
        [0.0259],
        [0.0501],
        [0.0461],
        [0.0510],
        [0.0395],
        [0.0111],
        [0.0475],
        [0.0606],
        [0.0363],
        [0.0854],
        [0.0402]], device='cuda:0', dtype=torch.float16)/tensor([[0.0485, 0.0408, 0.0123, 0.0355, 0.0691, 0.0259, 0.0501, 0.0461, 0.0510,
         0.0395, 0.0111, 0.0475, 0.0606, 0.0363, 0.0854, 0.0402]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.0086],
        [0.0102],
        [0.0137],
        [0.0158],
        [0.0117],
        [0.0104],
        [0.0075],
        [0.0156],
        [0.0061],
        [0.0093],
        [0.0085],
        [0.0074],
        [0.0110],
        [0.0152],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0086, 0.0102, 0.0137, 0.0158, 0.0117, 0.0104, 0.0075, 0.0156,
         0.0061, 0.0093, 0.0085, 0.0074, 0.0110, 0.0152, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0408],
        [0.0133],
        [0.0146],
        [0.0355],
        [0.0551],
        [0.0141],
        [0.0221],
        [0.0247],
        [0.0280],
        [0.0128],
        [0.0106],
        [0.0119],
        [0.0097],
        [0.0150],
        [0.0430],
        [0.0263]], device='cuda:0', dtype=torch.float16)/tensor([[0.0408, 0.0133, 0.0146, 0.0355, 0.0551, 0.0141, 0.0221, 0.0247, 0.0280,
         0.0128, 0.0106, 0.0119, 0.0097, 0.0150, 0.0430, 0.0263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0485, 0.0053, 0.0408],
        [0.0408, 0.0086, 0.0133],
        [0.0123, 0.0102, 0.0146],
        [0.0355, 0.0137, 0.0355],
        [0.0691, 0.0158, 0.0551],
        [0.0259, 0.0117, 0.0141],
        [0.0501, 0.0104, 0.0221],
        [0.0461, 0.0075, 0.0247],
        [0.0510, 0.0156, 0.0280],
        [0.0395, 0.0061, 0.0128],
        [0.0111, 0.0093, 0.0106],
        [0.0475, 0.0085, 0.0119],
        [0.0606, 0.0074, 0.0097],
        [0.0363, 0.0110, 0.0150],
        [0.0854, 0.0152, 0.0430],
        [0.0402, 0.0107, 0.0263]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0605],
        [0.0278],
        [0.0818],
        [0.0364],
        [0.0136],
        [0.0340],
        [0.0535],
        [0.0335],
        [0.0298],
        [0.0393],
        [0.0387],
        [0.0393],
        [0.0489],
        [0.0288],
        [0.0241],
        [0.0297]], device='cuda:0', dtype=torch.float16)/tensor([[0.0605, 0.0278, 0.0818, 0.0364, 0.0136, 0.0340, 0.0535, 0.0335, 0.0298,
         0.0393, 0.0387, 0.0393, 0.0489, 0.0288, 0.0241, 0.0297]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0109],
        [0.0135],
        [0.0088],
        [0.0076],
        [0.0083],
        [0.0073],
        [0.0107],
        [0.0093],
        [0.0049],
        [0.0048],
        [0.0043],
        [0.0093],
        [0.0131],
        [0.0159],
        [0.0120],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0109, 0.0135, 0.0088, 0.0076, 0.0083, 0.0073, 0.0107, 0.0093, 0.0049,
         0.0048, 0.0043, 0.0093, 0.0131, 0.0159, 0.0120, 0.0043]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0216],
        [0.0349],
        [0.0344],
        [0.0142],
        [0.0089],
        [0.0182],
        [0.0245],
        [0.0258],
        [0.0152],
        [0.0139],
        [0.0098],
        [0.0322],
        [0.0356],
        [0.0250],
        [0.0118],
        [0.0077]], device='cuda:0', dtype=torch.float16)/tensor([[0.0216, 0.0349, 0.0344, 0.0142, 0.0089, 0.0182, 0.0245, 0.0258, 0.0152,
         0.0139, 0.0098, 0.0322, 0.0356, 0.0250, 0.0118, 0.0077]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0605, 0.0109, 0.0216],
        [0.0278, 0.0135, 0.0349],
        [0.0818, 0.0088, 0.0344],
        [0.0364, 0.0076, 0.0142],
        [0.0136, 0.0083, 0.0089],
        [0.0340, 0.0073, 0.0182],
        [0.0535, 0.0107, 0.0245],
        [0.0335, 0.0093, 0.0258],
        [0.0298, 0.0049, 0.0152],
        [0.0393, 0.0048, 0.0139],
        [0.0387, 0.0043, 0.0098],
        [0.0393, 0.0093, 0.0322],
        [0.0489, 0.0131, 0.0356],
        [0.0288, 0.0159, 0.0250],
        [0.0241, 0.0120, 0.0118],
        [0.0297, 0.0043, 0.0077]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0261],
        [0.0560],
        [0.0608],
        [0.0253],
        [0.0551],
        [0.0440],
        [0.0265],
        [0.0123],
        [0.0763],
        [0.0225],
        [0.0079],
        [0.0735],
        [0.0530],
        [0.0237],
        [0.0608],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0560, 0.0608, 0.0253, 0.0551, 0.0440, 0.0265, 0.0123, 0.0763,
         0.0225, 0.0079, 0.0735, 0.0530, 0.0237, 0.0608, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0121],
        [0.0074],
        [0.0168],
        [0.0146],
        [0.0135],
        [0.0126],
        [0.0091],
        [0.0041],
        [0.0140],
        [0.0107],
        [0.0054],
        [0.0176],
        [0.0122],
        [0.0094],
        [0.0112],
        [0.0045]], device='cuda:0', dtype=torch.float16)/tensor([[0.0121, 0.0074, 0.0168, 0.0146, 0.0135, 0.0126, 0.0091, 0.0041, 0.0140,
         0.0107, 0.0054, 0.0176, 0.0122, 0.0094, 0.0112, 0.0045]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0216],
        [0.0204],
        [0.0303],
        [0.0146],
        [0.0243],
        [0.0161],
        [0.0125],
        [0.0056],
        [0.0366],
        [0.0086],
        [0.0133],
        [0.0305],
        [0.0147],
        [0.0119],
        [0.0194],
        [0.0148]], device='cuda:0', dtype=torch.float16)/tensor([[0.0216, 0.0204, 0.0303, 0.0146, 0.0243, 0.0161, 0.0125, 0.0056, 0.0366,
         0.0086, 0.0133, 0.0305, 0.0147, 0.0119, 0.0194, 0.0148]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0261, 0.0121, 0.0216],
        [0.0560, 0.0074, 0.0204],
        [0.0608, 0.0168, 0.0303],
        [0.0253, 0.0146, 0.0146],
        [0.0551, 0.0135, 0.0243],
        [0.0440, 0.0126, 0.0161],
        [0.0265, 0.0091, 0.0125],
        [0.0123, 0.0041, 0.0056],
        [0.0763, 0.0140, 0.0366],
        [0.0225, 0.0107, 0.0086],
        [0.0079, 0.0054, 0.0133],
        [0.0735, 0.0176, 0.0305],
        [0.0530, 0.0122, 0.0147],
        [0.0237, 0.0094, 0.0119],
        [0.0608, 0.0112, 0.0194],
        [0.0136, 0.0045, 0.0148]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0670],
        [0.0515],
        [0.0135],
        [0.0338],
        [0.0262],
        [0.0287]], device='cuda:0', dtype=torch.float16)/tensor([[0.0670, 0.0515, 0.0135, 0.0338, 0.0262, 0.0287]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0104],
        [0.0060],
        [0.0046],
        [0.0135],
        [0.0050],
        [0.0202]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0060, 0.0046, 0.0135, 0.0050, 0.0202]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0126],
        [0.0253],
        [0.0044],
        [0.0278],
        [0.0093],
        [0.0170]], device='cuda:0', dtype=torch.float16)/tensor([[0.0126, 0.0253, 0.0044, 0.0278, 0.0093, 0.0170]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0670, 0.0104, 0.0126],
        [0.0515, 0.0060, 0.0253],
        [0.0135, 0.0046, 0.0044],
        [0.0338, 0.0135, 0.0278],
        [0.0262, 0.0050, 0.0093],
        [0.0287, 0.0202, 0.0170]], device='cuda:0')
acc:  0.3686868686868687
Time taken to execute the en NLI task with prompt type passive, variation 3 and batchsize 16: 0:03:02.822237
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI passive 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 322.20it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0663],
        [0.0202],
        [0.0614],
        [0.0522],
        [0.0594],
        [0.0264],
        [0.0590],
        [0.0385],
        [0.0593],
        [0.0356],
        [0.0616],
        [0.0668],
        [0.0321],
        [0.0193],
        [0.0556],
        [0.0281]], device='cuda:0', dtype=torch.float16)/tensor([[0.0663, 0.0202, 0.0614, 0.0522, 0.0594, 0.0264, 0.0590, 0.0385, 0.0593,
         0.0356, 0.0616, 0.0668, 0.0321, 0.0193, 0.0556, 0.0281]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0193],
        [0.0097],
        [0.0219],
        [0.0127],
        [0.0214],
        [0.0140],
        [0.0156],
        [0.0194],
        [0.0169],
        [0.0238],
        [0.0332],
        [0.0222],
        [0.0107],
        [0.0109],
        [0.0129],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0097, 0.0219, 0.0127, 0.0214, 0.0140, 0.0156, 0.0194, 0.0169,
         0.0238, 0.0332, 0.0222, 0.0107, 0.0109, 0.0129, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0349],
        [0.0235],
        [0.0288],
        [0.0176],
        [0.0212],
        [0.0209],
        [0.0238],
        [0.0192],
        [0.0259],
        [0.0341],
        [0.0262],
        [0.0352],
        [0.0147],
        [0.0101],
        [0.0273],
        [0.0213]], device='cuda:0', dtype=torch.float16)/tensor([[0.0349, 0.0235, 0.0288, 0.0176, 0.0212, 0.0209, 0.0238, 0.0192, 0.0259,
         0.0341, 0.0262, 0.0352, 0.0147, 0.0101, 0.0273, 0.0213]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0663, 0.0193, 0.0349],
        [0.0202, 0.0097, 0.0235],
        [0.0614, 0.0219, 0.0288],
        [0.0522, 0.0127, 0.0176],
        [0.0594, 0.0214, 0.0212],
        [0.0264, 0.0140, 0.0209],
        [0.0590, 0.0156, 0.0238],
        [0.0385, 0.0194, 0.0192],
        [0.0593, 0.0169, 0.0259],
        [0.0356, 0.0238, 0.0341],
        [0.0616, 0.0332, 0.0262],
        [0.0668, 0.0222, 0.0352],
        [0.0321, 0.0107, 0.0147],
        [0.0193, 0.0109, 0.0101],
        [0.0556, 0.0129, 0.0273],
        [0.0281, 0.0121, 0.0213]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0288],
        [0.0721],
        [0.0432],
        [0.0406],
        [0.0441],
        [0.0570],
        [0.0349],
        [0.0510],
        [0.0333],
        [0.0429],
        [0.0189],
        [0.0688],
        [0.0356],
        [0.0446],
        [0.0217],
        [0.0433]], device='cuda:0', dtype=torch.float16)/tensor([[0.0288, 0.0721, 0.0432, 0.0406, 0.0441, 0.0570, 0.0349, 0.0510, 0.0333,
         0.0429, 0.0189, 0.0688, 0.0356, 0.0446, 0.0217, 0.0433]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0063],
        [0.0235],
        [0.0119],
        [0.0127],
        [0.0108],
        [0.0128],
        [0.0122],
        [0.0245],
        [0.0102],
        [0.0092],
        [0.0100],
        [0.0210],
        [0.0177],
        [0.0225],
        [0.0092],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0235, 0.0119, 0.0127, 0.0108, 0.0128, 0.0122, 0.0245, 0.0102,
         0.0092, 0.0100, 0.0210, 0.0177, 0.0225, 0.0092, 0.0142]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0193],
        [0.0131],
        [0.0222],
        [0.0325],
        [0.0210],
        [0.0196],
        [0.0127],
        [0.0307],
        [0.0108],
        [0.0168],
        [0.0079],
        [0.0197],
        [0.0207],
        [0.0209],
        [0.0160],
        [0.0187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0131, 0.0222, 0.0325, 0.0210, 0.0196, 0.0127, 0.0307, 0.0108,
         0.0168, 0.0079, 0.0197, 0.0207, 0.0209, 0.0160, 0.0187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0288, 0.0063, 0.0193],
        [0.0721, 0.0235, 0.0131],
        [0.0432, 0.0119, 0.0222],
        [0.0406, 0.0127, 0.0325],
        [0.0441, 0.0108, 0.0210],
        [0.0570, 0.0128, 0.0196],
        [0.0349, 0.0122, 0.0127],
        [0.0510, 0.0245, 0.0307],
        [0.0333, 0.0102, 0.0108],
        [0.0429, 0.0092, 0.0168],
        [0.0189, 0.0100, 0.0079],
        [0.0688, 0.0210, 0.0197],
        [0.0356, 0.0177, 0.0207],
        [0.0446, 0.0225, 0.0209],
        [0.0217, 0.0092, 0.0160],
        [0.0433, 0.0142, 0.0187]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0419],
        [0.0222],
        [0.0455],
        [0.0507],
        [0.0281],
        [0.0630],
        [0.0129],
        [0.0734],
        [0.0298],
        [0.0388],
        [0.0447],
        [0.0756],
        [0.0548],
        [0.0434],
        [0.0464],
        [0.0546]], device='cuda:0', dtype=torch.float16)/tensor([[0.0419, 0.0222, 0.0455, 0.0507, 0.0281, 0.0630, 0.0129, 0.0734, 0.0298,
         0.0388, 0.0447, 0.0756, 0.0548, 0.0434, 0.0464, 0.0546]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0152],
        [0.0179],
        [0.0098],
        [0.0146],
        [0.0086],
        [0.0151],
        [0.0155],
        [0.0113],
        [0.0118],
        [0.0121],
        [0.0187],
        [0.0179],
        [0.0162],
        [0.0178],
        [0.0195],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0152, 0.0179, 0.0098, 0.0146, 0.0086, 0.0151, 0.0155, 0.0113, 0.0118,
         0.0121, 0.0187, 0.0179, 0.0162, 0.0178, 0.0195, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0170],
        [0.0125],
        [0.0156],
        [0.0265],
        [0.0221],
        [0.0348],
        [0.0085],
        [0.0294],
        [0.0147],
        [0.0188],
        [0.0406],
        [0.0458],
        [0.0247],
        [0.0140],
        [0.0254],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0170, 0.0125, 0.0156, 0.0265, 0.0221, 0.0348, 0.0085, 0.0294, 0.0147,
         0.0188, 0.0406, 0.0458, 0.0247, 0.0140, 0.0254, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0419, 0.0152, 0.0170],
        [0.0222, 0.0179, 0.0125],
        [0.0455, 0.0098, 0.0156],
        [0.0507, 0.0146, 0.0265],
        [0.0281, 0.0086, 0.0221],
        [0.0630, 0.0151, 0.0348],
        [0.0129, 0.0155, 0.0085],
        [0.0734, 0.0113, 0.0294],
        [0.0298, 0.0118, 0.0147],
        [0.0388, 0.0121, 0.0188],
        [0.0447, 0.0187, 0.0406],
        [0.0756, 0.0179, 0.0458],
        [0.0548, 0.0162, 0.0247],
        [0.0434, 0.0178, 0.0140],
        [0.0464, 0.0195, 0.0254],
        [0.0546, 0.0179, 0.0168]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0744],
        [0.0313],
        [0.0294],
        [0.0379],
        [0.0219],
        [0.0524],
        [0.0150],
        [0.0328],
        [0.0328],
        [0.0634],
        [0.0533],
        [0.0442],
        [0.0304],
        [0.0492],
        [0.0310],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0744, 0.0313, 0.0294, 0.0379, 0.0219, 0.0524, 0.0150, 0.0328, 0.0328,
         0.0634, 0.0533, 0.0442, 0.0304, 0.0492, 0.0310, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0180],
        [0.0097],
        [0.0171],
        [0.0115],
        [0.0037],
        [0.0098],
        [0.0066],
        [0.0138],
        [0.0170],
        [0.0200],
        [0.0131],
        [0.0181],
        [0.0123],
        [0.0174],
        [0.0105],
        [0.0087]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0097, 0.0171, 0.0115, 0.0037, 0.0098, 0.0066, 0.0138, 0.0170,
         0.0200, 0.0131, 0.0181, 0.0123, 0.0174, 0.0105, 0.0087]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0251],
        [0.0178],
        [0.0187],
        [0.0122],
        [0.0129],
        [0.0294],
        [0.0149],
        [0.0181],
        [0.0214],
        [0.0289],
        [0.0269],
        [0.0176],
        [0.0144],
        [0.0399],
        [0.0130],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0178, 0.0187, 0.0122, 0.0129, 0.0294, 0.0149, 0.0181, 0.0214,
         0.0289, 0.0269, 0.0176, 0.0144, 0.0399, 0.0130, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0744, 0.0180, 0.0251],
        [0.0313, 0.0097, 0.0178],
        [0.0294, 0.0171, 0.0187],
        [0.0379, 0.0115, 0.0122],
        [0.0219, 0.0037, 0.0129],
        [0.0524, 0.0098, 0.0294],
        [0.0150, 0.0066, 0.0149],
        [0.0328, 0.0138, 0.0181],
        [0.0328, 0.0170, 0.0214],
        [0.0634, 0.0200, 0.0289],
        [0.0533, 0.0131, 0.0269],
        [0.0442, 0.0181, 0.0176],
        [0.0304, 0.0123, 0.0144],
        [0.0492, 0.0174, 0.0399],
        [0.0310, 0.0105, 0.0130],
        [0.0381, 0.0087, 0.0096]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0491],
        [0.0396],
        [0.0576],
        [0.0423],
        [0.0220],
        [0.0276],
        [0.0327],
        [0.0135],
        [0.0583],
        [0.0237],
        [0.0359],
        [0.0834],
        [0.0111],
        [0.0409],
        [0.0508],
        [0.0311]], device='cuda:0', dtype=torch.float16)/tensor([[0.0491, 0.0396, 0.0576, 0.0423, 0.0220, 0.0276, 0.0327, 0.0135, 0.0583,
         0.0237, 0.0359, 0.0834, 0.0111, 0.0409, 0.0508, 0.0311]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0155],
        [0.0138],
        [0.0229],
        [0.0120],
        [0.0074],
        [0.0079],
        [0.0124],
        [0.0075],
        [0.0251],
        [0.0060],
        [0.0108],
        [0.0204],
        [0.0067],
        [0.0098],
        [0.0270],
        [0.0182]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0138, 0.0229, 0.0120, 0.0074, 0.0079, 0.0124, 0.0075, 0.0251,
         0.0060, 0.0108, 0.0204, 0.0067, 0.0098, 0.0270, 0.0182]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0130],
        [0.0167],
        [0.0301],
        [0.0101],
        [0.0065],
        [0.0131],
        [0.0286],
        [0.0159],
        [0.0332],
        [0.0096],
        [0.0174],
        [0.0228],
        [0.0145],
        [0.0215],
        [0.0278],
        [0.0540]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0167, 0.0301, 0.0101, 0.0065, 0.0131, 0.0286, 0.0159, 0.0332,
         0.0096, 0.0174, 0.0228, 0.0145, 0.0215, 0.0278, 0.0540]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0491, 0.0155, 0.0130],
        [0.0396, 0.0138, 0.0167],
        [0.0576, 0.0229, 0.0301],
        [0.0423, 0.0120, 0.0101],
        [0.0220, 0.0074, 0.0065],
        [0.0276, 0.0079, 0.0131],
        [0.0327, 0.0124, 0.0286],
        [0.0135, 0.0075, 0.0159],
        [0.0583, 0.0251, 0.0332],
        [0.0237, 0.0060, 0.0096],
        [0.0359, 0.0108, 0.0174],
        [0.0834, 0.0204, 0.0228],
        [0.0111, 0.0067, 0.0145],
        [0.0409, 0.0098, 0.0215],
        [0.0508, 0.0270, 0.0278],
        [0.0311, 0.0182, 0.0540]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0425],
        [0.0568],
        [0.0377],
        [0.0500],
        [0.0715],
        [0.0373],
        [0.0491],
        [0.0296],
        [0.0747],
        [0.0715],
        [0.0266],
        [0.0677],
        [0.0204],
        [0.0110],
        [0.0559],
        [0.0329]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0568, 0.0377, 0.0500, 0.0715, 0.0373, 0.0491, 0.0296, 0.0747,
         0.0715, 0.0266, 0.0677, 0.0204, 0.0110, 0.0559, 0.0329]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0186],
        [0.0136],
        [0.0150],
        [0.0158],
        [0.0122],
        [0.0236],
        [0.0094],
        [0.0216],
        [0.0235],
        [0.0169],
        [0.0191],
        [0.0083],
        [0.0053],
        [0.0169],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0186, 0.0136, 0.0150, 0.0158, 0.0122, 0.0236, 0.0094, 0.0216,
         0.0235, 0.0169, 0.0191, 0.0083, 0.0053, 0.0169, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0137],
        [0.0432],
        [0.0178],
        [0.0084],
        [0.0280],
        [0.0189],
        [0.0228],
        [0.0213],
        [0.0297],
        [0.0310],
        [0.0187],
        [0.0325],
        [0.0131],
        [0.0070],
        [0.0199],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0137, 0.0432, 0.0178, 0.0084, 0.0280, 0.0189, 0.0228, 0.0213, 0.0297,
         0.0310, 0.0187, 0.0325, 0.0131, 0.0070, 0.0199, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0425, 0.0136, 0.0137],
        [0.0568, 0.0186, 0.0432],
        [0.0377, 0.0136, 0.0178],
        [0.0500, 0.0150, 0.0084],
        [0.0715, 0.0158, 0.0280],
        [0.0373, 0.0122, 0.0189],
        [0.0491, 0.0236, 0.0228],
        [0.0296, 0.0094, 0.0213],
        [0.0747, 0.0216, 0.0297],
        [0.0715, 0.0235, 0.0310],
        [0.0266, 0.0169, 0.0187],
        [0.0677, 0.0191, 0.0325],
        [0.0204, 0.0083, 0.0131],
        [0.0110, 0.0053, 0.0070],
        [0.0559, 0.0169, 0.0199],
        [0.0329, 0.0141, 0.0139]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0479],
        [0.0537],
        [0.0505],
        [0.0709],
        [0.0296],
        [0.0437],
        [0.0307],
        [0.0525],
        [0.0239],
        [0.0349],
        [0.0269],
        [0.0636],
        [0.0575],
        [0.0418],
        [0.0508],
        [0.0536]], device='cuda:0', dtype=torch.float16)/tensor([[0.0479, 0.0537, 0.0505, 0.0709, 0.0296, 0.0437, 0.0307, 0.0525, 0.0239,
         0.0349, 0.0269, 0.0636, 0.0575, 0.0418, 0.0508, 0.0536]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0137],
        [0.0150],
        [0.0136],
        [0.0181],
        [0.0108],
        [0.0162],
        [0.0121],
        [0.0215],
        [0.0069],
        [0.0179],
        [0.0091],
        [0.0226],
        [0.0142],
        [0.0164],
        [0.0137],
        [0.0242]], device='cuda:0', dtype=torch.float16)/tensor([[0.0137, 0.0150, 0.0136, 0.0181, 0.0108, 0.0162, 0.0121, 0.0215, 0.0069,
         0.0179, 0.0091, 0.0226, 0.0142, 0.0164, 0.0137, 0.0242]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0271],
        [0.0207],
        [0.0101],
        [0.0261],
        [0.0186],
        [0.0289],
        [0.0104],
        [0.0297],
        [0.0090],
        [0.0247],
        [0.0160],
        [0.0299],
        [0.0235],
        [0.0376],
        [0.0189],
        [0.0298]], device='cuda:0', dtype=torch.float16)/tensor([[0.0271, 0.0207, 0.0101, 0.0261, 0.0186, 0.0289, 0.0104, 0.0297, 0.0090,
         0.0247, 0.0160, 0.0299, 0.0235, 0.0376, 0.0189, 0.0298]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0479, 0.0137, 0.0271],
        [0.0537, 0.0150, 0.0207],
        [0.0505, 0.0136, 0.0101],
        [0.0709, 0.0181, 0.0261],
        [0.0296, 0.0108, 0.0186],
        [0.0437, 0.0162, 0.0289],
        [0.0307, 0.0121, 0.0104],
        [0.0525, 0.0215, 0.0297],
        [0.0239, 0.0069, 0.0090],
        [0.0349, 0.0179, 0.0247],
        [0.0269, 0.0091, 0.0160],
        [0.0636, 0.0226, 0.0299],
        [0.0575, 0.0142, 0.0235],
        [0.0418, 0.0164, 0.0376],
        [0.0508, 0.0137, 0.0189],
        [0.0536, 0.0242, 0.0298]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0434],
        [0.0473],
        [0.0521],
        [0.0501],
        [0.0230],
        [0.0407],
        [0.0667],
        [0.0338],
        [0.0352],
        [0.0522],
        [0.0479],
        [0.0686],
        [0.0547],
        [0.0367],
        [0.0341],
        [0.0250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0434, 0.0473, 0.0521, 0.0501, 0.0230, 0.0407, 0.0667, 0.0338, 0.0352,
         0.0522, 0.0479, 0.0686, 0.0547, 0.0367, 0.0341, 0.0250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0157],
        [0.0120],
        [0.0252],
        [0.0146],
        [0.0144],
        [0.0070],
        [0.0217],
        [0.0080],
        [0.0134],
        [0.0153],
        [0.0146],
        [0.0231],
        [0.0190],
        [0.0130],
        [0.0164],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0120, 0.0252, 0.0146, 0.0144, 0.0070, 0.0217, 0.0080, 0.0134,
         0.0153, 0.0146, 0.0231, 0.0190, 0.0130, 0.0164, 0.0171]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0191],
        [0.0177],
        [0.0210],
        [0.0214],
        [0.0119],
        [0.0184],
        [0.0320],
        [0.0098],
        [0.0183],
        [0.0192],
        [0.0186],
        [0.0367],
        [0.0241],
        [0.0149],
        [0.0167],
        [0.0160]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0177, 0.0210, 0.0214, 0.0119, 0.0184, 0.0320, 0.0098, 0.0183,
         0.0192, 0.0186, 0.0367, 0.0241, 0.0149, 0.0167, 0.0160]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0434, 0.0157, 0.0191],
        [0.0473, 0.0120, 0.0177],
        [0.0521, 0.0252, 0.0210],
        [0.0501, 0.0146, 0.0214],
        [0.0230, 0.0144, 0.0119],
        [0.0407, 0.0070, 0.0184],
        [0.0667, 0.0217, 0.0320],
        [0.0338, 0.0080, 0.0098],
        [0.0352, 0.0134, 0.0183],
        [0.0522, 0.0153, 0.0192],
        [0.0479, 0.0146, 0.0186],
        [0.0686, 0.0231, 0.0367],
        [0.0547, 0.0190, 0.0241],
        [0.0367, 0.0130, 0.0149],
        [0.0341, 0.0164, 0.0167],
        [0.0250, 0.0171, 0.0160]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0533],
        [0.0574],
        [0.0491],
        [0.0283],
        [0.0570],
        [0.0368],
        [0.0718],
        [0.0649],
        [0.0302],
        [0.0175],
        [0.0338],
        [0.0303],
        [0.0674],
        [0.0609],
        [0.0279],
        [0.0323]], device='cuda:0', dtype=torch.float16)/tensor([[0.0533, 0.0574, 0.0491, 0.0283, 0.0570, 0.0368, 0.0718, 0.0649, 0.0302,
         0.0175, 0.0338, 0.0303, 0.0674, 0.0609, 0.0279, 0.0323]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0274],
        [0.0179],
        [0.0172],
        [0.0179],
        [0.0198],
        [0.0172],
        [0.0221],
        [0.0161],
        [0.0154],
        [0.0128],
        [0.0093],
        [0.0161],
        [0.0209],
        [0.0110],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0274, 0.0179, 0.0172, 0.0179, 0.0198, 0.0172, 0.0221, 0.0161,
         0.0154, 0.0128, 0.0093, 0.0161, 0.0209, 0.0110, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0213],
        [0.0170],
        [0.0465],
        [0.0139],
        [0.0220],
        [0.0191],
        [0.0264],
        [0.0269],
        [0.0151],
        [0.0096],
        [0.0307],
        [0.0196],
        [0.0361],
        [0.0280],
        [0.0212],
        [0.0236]], device='cuda:0', dtype=torch.float16)/tensor([[0.0213, 0.0170, 0.0465, 0.0139, 0.0220, 0.0191, 0.0264, 0.0269, 0.0151,
         0.0096, 0.0307, 0.0196, 0.0361, 0.0280, 0.0212, 0.0236]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0533, 0.0134, 0.0213],
        [0.0574, 0.0274, 0.0170],
        [0.0491, 0.0179, 0.0465],
        [0.0283, 0.0172, 0.0139],
        [0.0570, 0.0179, 0.0220],
        [0.0368, 0.0198, 0.0191],
        [0.0718, 0.0172, 0.0264],
        [0.0649, 0.0221, 0.0269],
        [0.0302, 0.0161, 0.0151],
        [0.0175, 0.0154, 0.0096],
        [0.0338, 0.0128, 0.0307],
        [0.0303, 0.0093, 0.0196],
        [0.0674, 0.0161, 0.0361],
        [0.0609, 0.0209, 0.0280],
        [0.0279, 0.0110, 0.0212],
        [0.0323, 0.0121, 0.0236]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0145],
        [0.0556],
        [0.0640],
        [0.0398],
        [0.0470],
        [0.0258],
        [0.0381],
        [0.0906],
        [0.0285],
        [0.0271],
        [0.0483],
        [0.0132],
        [0.0396],
        [0.0421],
        [0.0392],
        [0.0475]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.0556, 0.0640, 0.0398, 0.0470, 0.0258, 0.0381, 0.0906, 0.0285,
         0.0271, 0.0483, 0.0132, 0.0396, 0.0421, 0.0392, 0.0475]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0057],
        [0.0181],
        [0.0219],
        [0.0066],
        [0.0181],
        [0.0141],
        [0.0180],
        [0.0274],
        [0.0088],
        [0.0118],
        [0.0202],
        [0.0064],
        [0.0219],
        [0.0083],
        [0.0204],
        [0.0125]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0181, 0.0219, 0.0066, 0.0181, 0.0141, 0.0180, 0.0274, 0.0088,
         0.0118, 0.0202, 0.0064, 0.0219, 0.0083, 0.0204, 0.0125]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0086],
        [0.0228],
        [0.0317],
        [0.0368],
        [0.0109],
        [0.0114],
        [0.0242],
        [0.0287],
        [0.0109],
        [0.0120],
        [0.0224],
        [0.0130],
        [0.0339],
        [0.0202],
        [0.0264],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0228, 0.0317, 0.0368, 0.0109, 0.0114, 0.0242, 0.0287, 0.0109,
         0.0120, 0.0224, 0.0130, 0.0339, 0.0202, 0.0264, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0145, 0.0057, 0.0086],
        [0.0556, 0.0181, 0.0228],
        [0.0640, 0.0219, 0.0317],
        [0.0398, 0.0066, 0.0368],
        [0.0470, 0.0181, 0.0109],
        [0.0258, 0.0141, 0.0114],
        [0.0381, 0.0180, 0.0242],
        [0.0906, 0.0274, 0.0287],
        [0.0285, 0.0088, 0.0109],
        [0.0271, 0.0118, 0.0120],
        [0.0483, 0.0202, 0.0224],
        [0.0132, 0.0064, 0.0130],
        [0.0396, 0.0219, 0.0339],
        [0.0421, 0.0083, 0.0202],
        [0.0392, 0.0204, 0.0264],
        [0.0475, 0.0125, 0.0092]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0511],
        [0.0548],
        [0.0325],
        [0.0362],
        [0.0546],
        [0.0560],
        [0.0297],
        [0.0598],
        [0.0491],
        [0.0598],
        [0.0428],
        [0.0338],
        [0.0573],
        [0.0561],
        [0.0439],
        [0.0392]], device='cuda:0', dtype=torch.float16)/tensor([[0.0511, 0.0548, 0.0325, 0.0362, 0.0546, 0.0560, 0.0297, 0.0598, 0.0491,
         0.0598, 0.0428, 0.0338, 0.0573, 0.0561, 0.0439, 0.0392]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0157],
        [0.0122],
        [0.0082],
        [0.0120],
        [0.0094],
        [0.0136],
        [0.0121],
        [0.0234],
        [0.0181],
        [0.0149],
        [0.0130],
        [0.0117],
        [0.0155],
        [0.0184],
        [0.0106],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0122, 0.0082, 0.0120, 0.0094, 0.0136, 0.0121, 0.0234, 0.0181,
         0.0149, 0.0130, 0.0117, 0.0155, 0.0184, 0.0106, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0330],
        [0.0331],
        [0.0173],
        [0.0120],
        [0.0336],
        [0.0216],
        [0.0211],
        [0.0407],
        [0.0331],
        [0.0272],
        [0.0182],
        [0.0144],
        [0.0291],
        [0.0234],
        [0.0195],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0330, 0.0331, 0.0173, 0.0120, 0.0336, 0.0216, 0.0211, 0.0407, 0.0331,
         0.0272, 0.0182, 0.0144, 0.0291, 0.0234, 0.0195, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0511, 0.0157, 0.0330],
        [0.0548, 0.0122, 0.0331],
        [0.0325, 0.0082, 0.0173],
        [0.0362, 0.0120, 0.0120],
        [0.0546, 0.0094, 0.0336],
        [0.0560, 0.0136, 0.0216],
        [0.0297, 0.0121, 0.0211],
        [0.0598, 0.0234, 0.0407],
        [0.0491, 0.0181, 0.0331],
        [0.0598, 0.0149, 0.0272],
        [0.0428, 0.0130, 0.0182],
        [0.0338, 0.0117, 0.0144],
        [0.0573, 0.0155, 0.0291],
        [0.0561, 0.0184, 0.0234],
        [0.0439, 0.0106, 0.0195],
        [0.0392, 0.0150, 0.0184]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0276],
        [0.0346],
        [0.0383],
        [0.0753],
        [0.0192],
        [0.0359],
        [0.0712],
        [0.0715],
        [0.0156],
        [0.0236],
        [0.0269],
        [0.0655],
        [0.0402],
        [0.0484],
        [0.0661],
        [0.0225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0276, 0.0346, 0.0383, 0.0753, 0.0192, 0.0359, 0.0712, 0.0715, 0.0156,
         0.0236, 0.0269, 0.0655, 0.0402, 0.0484, 0.0661, 0.0225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0130],
        [0.0156],
        [0.0076],
        [0.0140],
        [0.0082],
        [0.0147],
        [0.0231],
        [0.0168],
        [0.0050],
        [0.0113],
        [0.0066],
        [0.0227],
        [0.0160],
        [0.0186],
        [0.0181],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0156, 0.0076, 0.0140, 0.0082, 0.0147, 0.0231, 0.0168, 0.0050,
         0.0113, 0.0066, 0.0227, 0.0160, 0.0186, 0.0181, 0.0156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0159],
        [0.0204],
        [0.0174],
        [0.0293],
        [0.0168],
        [0.0191],
        [0.0396],
        [0.0362],
        [0.0079],
        [0.0163],
        [0.0062],
        [0.0242],
        [0.0184],
        [0.0170],
        [0.0298],
        [0.0130]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0204, 0.0174, 0.0293, 0.0168, 0.0191, 0.0396, 0.0362, 0.0079,
         0.0163, 0.0062, 0.0242, 0.0184, 0.0170, 0.0298, 0.0130]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0276, 0.0130, 0.0159],
        [0.0346, 0.0156, 0.0204],
        [0.0383, 0.0076, 0.0174],
        [0.0753, 0.0140, 0.0293],
        [0.0192, 0.0082, 0.0168],
        [0.0359, 0.0147, 0.0191],
        [0.0712, 0.0231, 0.0396],
        [0.0715, 0.0168, 0.0362],
        [0.0156, 0.0050, 0.0079],
        [0.0236, 0.0113, 0.0163],
        [0.0269, 0.0066, 0.0062],
        [0.0655, 0.0227, 0.0242],
        [0.0402, 0.0160, 0.0184],
        [0.0484, 0.0186, 0.0170],
        [0.0661, 0.0181, 0.0298],
        [0.0225, 0.0156, 0.0130]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0286],
        [0.0438],
        [0.0529],
        [0.0327],
        [0.0154],
        [0.0435]], device='cuda:0', dtype=torch.float16)/tensor([[0.0286, 0.0438, 0.0529, 0.0327, 0.0154, 0.0435]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0206],
        [0.0102],
        [0.0154],
        [0.0224],
        [0.0095],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0206, 0.0102, 0.0154, 0.0224, 0.0095, 0.0232]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0253],
        [0.0190],
        [0.0269],
        [0.0224],
        [0.0130],
        [0.0287]], device='cuda:0', dtype=torch.float16)/tensor([[0.0253, 0.0190, 0.0269, 0.0224, 0.0130, 0.0287]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0286, 0.0206, 0.0253],
        [0.0438, 0.0102, 0.0190],
        [0.0529, 0.0154, 0.0269],
        [0.0327, 0.0224, 0.0224],
        [0.0154, 0.0095, 0.0130],
        [0.0435, 0.0232, 0.0287]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type passive, variation 4 and batchsize 16: 0:03:03.277616
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI passive 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 316.09it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0240],
        [0.0152],
        [0.0952],
        [0.0123],
        [0.0128],
        [0.0134],
        [0.0180],
        [0.0110],
        [0.0901],
        [0.0207],
        [0.0673],
        [0.0217],
        [0.0190],
        [0.0241],
        [0.0174],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0240, 0.0152, 0.0952, 0.0123, 0.0128, 0.0134, 0.0180, 0.0110, 0.0901,
         0.0207, 0.0673, 0.0217, 0.0190, 0.0241, 0.0174, 0.0143]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0042],
        [0.0045],
        [0.0337],
        [0.0077],
        [0.0063],
        [0.0064],
        [0.0050],
        [0.0053],
        [0.0197],
        [0.0069],
        [0.0192],
        [0.0063],
        [0.0092],
        [0.0065],
        [0.0074],
        [0.0078]], device='cuda:0', dtype=torch.float16)/tensor([[0.0042, 0.0045, 0.0337, 0.0077, 0.0063, 0.0064, 0.0050, 0.0053, 0.0197,
         0.0069, 0.0192, 0.0063, 0.0092, 0.0065, 0.0074, 0.0078]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0139],
        [0.0038],
        [0.0295],
        [0.0033],
        [0.0058],
        [0.0032],
        [0.0040],
        [0.0036],
        [0.0194],
        [0.0057],
        [0.0139],
        [0.0073],
        [0.0070],
        [0.0080],
        [0.0029],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0038, 0.0295, 0.0033, 0.0058, 0.0032, 0.0040, 0.0036, 0.0194,
         0.0057, 0.0139, 0.0073, 0.0070, 0.0080, 0.0029, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0240, 0.0042, 0.0139],
        [0.0152, 0.0045, 0.0038],
        [0.0952, 0.0337, 0.0295],
        [0.0123, 0.0077, 0.0033],
        [0.0128, 0.0063, 0.0058],
        [0.0134, 0.0064, 0.0032],
        [0.0180, 0.0050, 0.0040],
        [0.0110, 0.0053, 0.0036],
        [0.0901, 0.0197, 0.0194],
        [0.0207, 0.0069, 0.0057],
        [0.0673, 0.0192, 0.0139],
        [0.0217, 0.0063, 0.0073],
        [0.0190, 0.0092, 0.0070],
        [0.0241, 0.0065, 0.0080],
        [0.0174, 0.0074, 0.0029],
        [0.0143, 0.0078, 0.0053]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0779],
        [0.0289],
        [0.0098],
        [0.0190],
        [0.0986],
        [0.0513],
        [0.0179],
        [0.0112],
        [0.0259],
        [0.0254],
        [0.0131],
        [0.0192],
        [0.0152],
        [0.0510],
        [0.0127],
        [0.0535]], device='cuda:0', dtype=torch.float16)/tensor([[0.0779, 0.0289, 0.0098, 0.0190, 0.0986, 0.0513, 0.0179, 0.0112, 0.0259,
         0.0254, 0.0131, 0.0192, 0.0152, 0.0510, 0.0127, 0.0535]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0234],
        [0.0098],
        [0.0043],
        [0.0052],
        [0.0354],
        [0.0072],
        [0.0056],
        [0.0049],
        [0.0132],
        [0.0027],
        [0.0065],
        [0.0076],
        [0.0056],
        [0.0126],
        [0.0047],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0234, 0.0098, 0.0043, 0.0052, 0.0354, 0.0072, 0.0056, 0.0049, 0.0132,
         0.0027, 0.0065, 0.0076, 0.0056, 0.0126, 0.0047, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0191],
        [0.0065],
        [0.0032],
        [0.0080],
        [0.0135],
        [0.0106],
        [0.0086],
        [0.0057],
        [0.0104],
        [0.0060],
        [0.0046],
        [0.0079],
        [0.0037],
        [0.0113],
        [0.0043],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0065, 0.0032, 0.0080, 0.0135, 0.0106, 0.0086, 0.0057, 0.0104,
         0.0060, 0.0046, 0.0079, 0.0037, 0.0113, 0.0043, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0779, 0.0234, 0.0191],
        [0.0289, 0.0098, 0.0065],
        [0.0098, 0.0043, 0.0032],
        [0.0190, 0.0052, 0.0080],
        [0.0986, 0.0354, 0.0135],
        [0.0513, 0.0072, 0.0106],
        [0.0179, 0.0056, 0.0086],
        [0.0112, 0.0049, 0.0057],
        [0.0259, 0.0132, 0.0104],
        [0.0254, 0.0027, 0.0060],
        [0.0131, 0.0065, 0.0046],
        [0.0192, 0.0076, 0.0079],
        [0.0152, 0.0056, 0.0037],
        [0.0510, 0.0126, 0.0113],
        [0.0127, 0.0047, 0.0043],
        [0.0535, 0.0120, 0.0118]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0088],
        [0.0724],
        [0.0976],
        [0.1031],
        [0.0641],
        [0.0665],
        [0.0203],
        [0.0078],
        [0.0115],
        [0.0116],
        [0.0796],
        [0.0252],
        [0.0041],
        [0.0057],
        [0.0139],
        [0.0106]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0724, 0.0976, 0.1031, 0.0641, 0.0665, 0.0203, 0.0078, 0.0115,
         0.0116, 0.0796, 0.0252, 0.0041, 0.0057, 0.0139, 0.0106]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0029],
        [0.0148],
        [0.0261],
        [0.0191],
        [0.0247],
        [0.0204],
        [0.0040],
        [0.0042],
        [0.0064],
        [0.0048],
        [0.0236],
        [0.0045],
        [0.0012],
        [0.0030],
        [0.0076],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0148, 0.0261, 0.0191, 0.0247, 0.0204, 0.0040, 0.0042, 0.0064,
         0.0048, 0.0236, 0.0045, 0.0012, 0.0030, 0.0076, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0014],
        [0.0103],
        [0.0327],
        [0.0237],
        [0.0151],
        [0.0152],
        [0.0051],
        [0.0032],
        [0.0046],
        [0.0048],
        [0.0247],
        [0.0056],
        [0.0005],
        [0.0015],
        [0.0043],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0014, 0.0103, 0.0327, 0.0237, 0.0151, 0.0152, 0.0051, 0.0032, 0.0046,
         0.0048, 0.0247, 0.0056, 0.0005, 0.0015, 0.0043, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0088, 0.0029, 0.0014],
        [0.0724, 0.0148, 0.0103],
        [0.0976, 0.0261, 0.0327],
        [0.1031, 0.0191, 0.0237],
        [0.0641, 0.0247, 0.0151],
        [0.0665, 0.0204, 0.0152],
        [0.0203, 0.0040, 0.0051],
        [0.0078, 0.0042, 0.0032],
        [0.0115, 0.0064, 0.0046],
        [0.0116, 0.0048, 0.0048],
        [0.0796, 0.0236, 0.0247],
        [0.0252, 0.0045, 0.0056],
        [0.0041, 0.0012, 0.0005],
        [0.0057, 0.0030, 0.0015],
        [0.0139, 0.0076, 0.0043],
        [0.0106, 0.0031, 0.0025]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0155],
        [0.0233],
        [0.0119],
        [0.0211],
        [0.0826],
        [0.0646],
        [0.0499],
        [0.0455],
        [0.0163],
        [0.0153],
        [0.0070],
        [0.0223],
        [0.0203],
        [0.0149],
        [0.0208],
        [0.0187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0233, 0.0119, 0.0211, 0.0826, 0.0646, 0.0499, 0.0455, 0.0163,
         0.0153, 0.0070, 0.0223, 0.0203, 0.0149, 0.0208, 0.0187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0037],
        [0.0080],
        [0.0061],
        [0.0051],
        [0.0169],
        [0.0197],
        [0.0223],
        [0.0065],
        [0.0033],
        [0.0054],
        [0.0030],
        [0.0122],
        [0.0059],
        [0.0058],
        [0.0044],
        [0.0057]], device='cuda:0', dtype=torch.float16)/tensor([[0.0037, 0.0080, 0.0061, 0.0051, 0.0169, 0.0197, 0.0223, 0.0065, 0.0033,
         0.0054, 0.0030, 0.0122, 0.0059, 0.0058, 0.0044, 0.0057]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0053],
        [0.0077],
        [0.0047],
        [0.0033],
        [0.0168],
        [0.0119],
        [0.0147],
        [0.0132],
        [0.0030],
        [0.0031],
        [0.0021],
        [0.0034],
        [0.0039],
        [0.0037],
        [0.0060],
        [0.0041]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0077, 0.0047, 0.0033, 0.0168, 0.0119, 0.0147, 0.0132, 0.0030,
         0.0031, 0.0021, 0.0034, 0.0039, 0.0037, 0.0060, 0.0041]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0155, 0.0037, 0.0053],
        [0.0233, 0.0080, 0.0077],
        [0.0119, 0.0061, 0.0047],
        [0.0211, 0.0051, 0.0033],
        [0.0826, 0.0169, 0.0168],
        [0.0646, 0.0197, 0.0119],
        [0.0499, 0.0223, 0.0147],
        [0.0455, 0.0065, 0.0132],
        [0.0163, 0.0033, 0.0030],
        [0.0153, 0.0054, 0.0031],
        [0.0070, 0.0030, 0.0021],
        [0.0223, 0.0122, 0.0034],
        [0.0203, 0.0059, 0.0039],
        [0.0149, 0.0058, 0.0037],
        [0.0208, 0.0044, 0.0060],
        [0.0187, 0.0057, 0.0041]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0081],
        [0.1204],
        [0.0151],
        [0.0240],
        [0.0101],
        [0.0194],
        [0.0587],
        [0.0758],
        [0.0870],
        [0.0099],
        [0.0161],
        [0.0070],
        [0.0127],
        [0.0033],
        [0.0086],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0081, 0.1204, 0.0151, 0.0240, 0.0101, 0.0194, 0.0587, 0.0758, 0.0870,
         0.0099, 0.0161, 0.0070, 0.0127, 0.0033, 0.0086, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0024],
        [0.0337],
        [0.0114],
        [0.0049],
        [0.0053],
        [0.0069],
        [0.0225],
        [0.0127],
        [0.0279],
        [0.0052],
        [0.0061],
        [0.0022],
        [0.0027],
        [0.0009],
        [0.0045],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0024, 0.0337, 0.0114, 0.0049, 0.0053, 0.0069, 0.0225, 0.0127, 0.0279,
         0.0052, 0.0061, 0.0022, 0.0027, 0.0009, 0.0045, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0018],
        [0.0394],
        [0.0083],
        [0.0050],
        [0.0029],
        [0.0057],
        [0.0119],
        [0.0144],
        [0.0333],
        [0.0026],
        [0.0070],
        [0.0015],
        [0.0012],
        [0.0003],
        [0.0042],
        [0.0071]], device='cuda:0', dtype=torch.float16)/tensor([[0.0018, 0.0394, 0.0083, 0.0050, 0.0029, 0.0057, 0.0119, 0.0144, 0.0333,
         0.0026, 0.0070, 0.0015, 0.0012, 0.0003, 0.0042, 0.0071]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0081, 0.0024, 0.0018],
        [0.1204, 0.0337, 0.0394],
        [0.0151, 0.0114, 0.0083],
        [0.0240, 0.0049, 0.0050],
        [0.0101, 0.0053, 0.0029],
        [0.0194, 0.0069, 0.0057],
        [0.0587, 0.0225, 0.0119],
        [0.0758, 0.0127, 0.0144],
        [0.0870, 0.0279, 0.0333],
        [0.0099, 0.0052, 0.0026],
        [0.0161, 0.0061, 0.0070],
        [0.0070, 0.0022, 0.0015],
        [0.0127, 0.0027, 0.0012],
        [0.0033, 0.0009, 0.0003],
        [0.0086, 0.0045, 0.0042],
        [0.0309, 0.0058, 0.0071]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0143],
        [0.0149],
        [0.1263],
        [0.0870],
        [0.0202],
        [0.0148],
        [0.0287],
        [0.1176],
        [0.1108],
        [0.0138],
        [0.0695],
        [0.0151],
        [0.0205],
        [0.0216],
        [0.0113],
        [0.0922]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0149, 0.1263, 0.0870, 0.0202, 0.0148, 0.0287, 0.1176, 0.1108,
         0.0138, 0.0695, 0.0151, 0.0205, 0.0216, 0.0113, 0.0922]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0049],
        [0.0090],
        [0.0216],
        [0.0253],
        [0.0055],
        [0.0040],
        [0.0121],
        [0.0200],
        [0.0374],
        [0.0058],
        [0.0223],
        [0.0043],
        [0.0055],
        [0.0075],
        [0.0085],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.0049, 0.0090, 0.0216, 0.0253, 0.0055, 0.0040, 0.0121, 0.0200, 0.0374,
         0.0058, 0.0223, 0.0043, 0.0055, 0.0075, 0.0085, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0053],
        [0.0055],
        [0.0341],
        [0.0232],
        [0.0047],
        [0.0055],
        [0.0076],
        [0.0269],
        [0.0496],
        [0.0038],
        [0.0105],
        [0.0040],
        [0.0029],
        [0.0042],
        [0.0058],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0055, 0.0341, 0.0232, 0.0047, 0.0055, 0.0076, 0.0269, 0.0496,
         0.0038, 0.0105, 0.0040, 0.0029, 0.0042, 0.0058, 0.0152]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0143, 0.0049, 0.0053],
        [0.0149, 0.0090, 0.0055],
        [0.1263, 0.0216, 0.0341],
        [0.0870, 0.0253, 0.0232],
        [0.0202, 0.0055, 0.0047],
        [0.0148, 0.0040, 0.0055],
        [0.0287, 0.0121, 0.0076],
        [0.1176, 0.0200, 0.0269],
        [0.1108, 0.0374, 0.0496],
        [0.0138, 0.0058, 0.0038],
        [0.0695, 0.0223, 0.0105],
        [0.0151, 0.0043, 0.0040],
        [0.0205, 0.0055, 0.0029],
        [0.0216, 0.0075, 0.0042],
        [0.0113, 0.0085, 0.0058],
        [0.0922, 0.0227, 0.0152]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0128],
        [0.0140],
        [0.0215],
        [0.0131],
        [0.0302],
        [0.0119],
        [0.0870],
        [0.0185],
        [0.0245],
        [0.0354],
        [0.0285],
        [0.0122],
        [0.0881],
        [0.0520],
        [0.0265],
        [0.0100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0140, 0.0215, 0.0131, 0.0302, 0.0119, 0.0870, 0.0185, 0.0245,
         0.0354, 0.0285, 0.0122, 0.0881, 0.0520, 0.0265, 0.0100]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0038],
        [0.0025],
        [0.0086],
        [0.0062],
        [0.0116],
        [0.0066],
        [0.0244],
        [0.0048],
        [0.0074],
        [0.0114],
        [0.0068],
        [0.0029],
        [0.0277],
        [0.0177],
        [0.0082],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0025, 0.0086, 0.0062, 0.0116, 0.0066, 0.0244, 0.0048, 0.0074,
         0.0114, 0.0068, 0.0029, 0.0277, 0.0177, 0.0082, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0027],
        [0.0046],
        [0.0063],
        [0.0039],
        [0.0156],
        [0.0041],
        [0.0239],
        [0.0083],
        [0.0024],
        [0.0079],
        [0.0055],
        [0.0045],
        [0.0188],
        [0.0355],
        [0.0092],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0027, 0.0046, 0.0063, 0.0039, 0.0156, 0.0041, 0.0239, 0.0083, 0.0024,
         0.0079, 0.0055, 0.0045, 0.0188, 0.0355, 0.0092, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0128, 0.0038, 0.0027],
        [0.0140, 0.0025, 0.0046],
        [0.0215, 0.0086, 0.0063],
        [0.0131, 0.0062, 0.0039],
        [0.0302, 0.0116, 0.0156],
        [0.0119, 0.0066, 0.0041],
        [0.0870, 0.0244, 0.0239],
        [0.0185, 0.0048, 0.0083],
        [0.0245, 0.0074, 0.0024],
        [0.0354, 0.0114, 0.0079],
        [0.0285, 0.0068, 0.0055],
        [0.0122, 0.0029, 0.0045],
        [0.0881, 0.0277, 0.0188],
        [0.0520, 0.0177, 0.0355],
        [0.0265, 0.0082, 0.0092],
        [0.0100, 0.0047, 0.0030]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1125],
        [0.0178],
        [0.0514],
        [0.0160],
        [0.1355],
        [0.0154],
        [0.0690],
        [0.0153],
        [0.0175],
        [0.0350],
        [0.0207],
        [0.0133],
        [0.0161],
        [0.0819],
        [0.0138],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.1125, 0.0178, 0.0514, 0.0160, 0.1355, 0.0154, 0.0690, 0.0153, 0.0175,
         0.0350, 0.0207, 0.0133, 0.0161, 0.0819, 0.0138, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0371],
        [0.0043],
        [0.0092],
        [0.0038],
        [0.0318],
        [0.0047],
        [0.0392],
        [0.0049],
        [0.0077],
        [0.0063],
        [0.0045],
        [0.0080],
        [0.0048],
        [0.0313],
        [0.0029],
        [0.0090]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0043, 0.0092, 0.0038, 0.0318, 0.0047, 0.0392, 0.0049, 0.0077,
         0.0063, 0.0045, 0.0080, 0.0048, 0.0313, 0.0029, 0.0090]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0256],
        [0.0050],
        [0.0112],
        [0.0047],
        [0.0269],
        [0.0050],
        [0.0284],
        [0.0045],
        [0.0081],
        [0.0076],
        [0.0056],
        [0.0073],
        [0.0027],
        [0.0232],
        [0.0040],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0050, 0.0112, 0.0047, 0.0269, 0.0050, 0.0284, 0.0045, 0.0081,
         0.0076, 0.0056, 0.0073, 0.0027, 0.0232, 0.0040, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1125, 0.0371, 0.0256],
        [0.0178, 0.0043, 0.0050],
        [0.0514, 0.0092, 0.0112],
        [0.0160, 0.0038, 0.0047],
        [0.1355, 0.0318, 0.0269],
        [0.0154, 0.0047, 0.0050],
        [0.0690, 0.0392, 0.0284],
        [0.0153, 0.0049, 0.0045],
        [0.0175, 0.0077, 0.0081],
        [0.0350, 0.0063, 0.0076],
        [0.0207, 0.0045, 0.0056],
        [0.0133, 0.0080, 0.0073],
        [0.0161, 0.0048, 0.0027],
        [0.0819, 0.0313, 0.0232],
        [0.0138, 0.0029, 0.0040],
        [0.0122, 0.0090, 0.0036]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0408],
        [0.0546],
        [0.0192],
        [0.0253],
        [0.0219],
        [0.0105],
        [0.0148],
        [0.0190],
        [0.0920],
        [0.0106],
        [0.0419],
        [0.0136],
        [0.0209],
        [0.1027],
        [0.0179],
        [0.0335]], device='cuda:0', dtype=torch.float16)/tensor([[0.0408, 0.0546, 0.0192, 0.0253, 0.0219, 0.0105, 0.0148, 0.0190, 0.0920,
         0.0106, 0.0419, 0.0136, 0.0209, 0.1027, 0.0179, 0.0335]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0125],
        [0.0121],
        [0.0078],
        [0.0145],
        [0.0053],
        [0.0013],
        [0.0057],
        [0.0056],
        [0.0160],
        [0.0036],
        [0.0163],
        [0.0054],
        [0.0105],
        [0.0295],
        [0.0050],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0125, 0.0121, 0.0078, 0.0145, 0.0053, 0.0013, 0.0057, 0.0056, 0.0160,
         0.0036, 0.0163, 0.0054, 0.0105, 0.0295, 0.0050, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0113],
        [0.0161],
        [0.0083],
        [0.0126],
        [0.0047],
        [0.0028],
        [0.0030],
        [0.0045],
        [0.0112],
        [0.0029],
        [0.0111],
        [0.0033],
        [0.0091],
        [0.0227],
        [0.0059],
        [0.0081]], device='cuda:0', dtype=torch.float16)/tensor([[0.0113, 0.0161, 0.0083, 0.0126, 0.0047, 0.0028, 0.0030, 0.0045, 0.0112,
         0.0029, 0.0111, 0.0033, 0.0091, 0.0227, 0.0059, 0.0081]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0408, 0.0125, 0.0113],
        [0.0546, 0.0121, 0.0161],
        [0.0192, 0.0078, 0.0083],
        [0.0253, 0.0145, 0.0126],
        [0.0219, 0.0053, 0.0047],
        [0.0105, 0.0013, 0.0028],
        [0.0148, 0.0057, 0.0030],
        [0.0190, 0.0056, 0.0045],
        [0.0920, 0.0160, 0.0112],
        [0.0106, 0.0036, 0.0029],
        [0.0419, 0.0163, 0.0111],
        [0.0136, 0.0054, 0.0033],
        [0.0209, 0.0105, 0.0091],
        [0.1027, 0.0295, 0.0227],
        [0.0179, 0.0050, 0.0059],
        [0.0335, 0.0096, 0.0081]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0179],
        [0.0342],
        [0.0198],
        [0.0463],
        [0.0146],
        [0.0867],
        [0.0195],
        [0.0662],
        [0.0126],
        [0.0211],
        [0.1025],
        [0.0109],
        [0.1205],
        [0.0536],
        [0.0094],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0179, 0.0342, 0.0198, 0.0463, 0.0146, 0.0867, 0.0195, 0.0662, 0.0126,
         0.0211, 0.1025, 0.0109, 0.1205, 0.0536, 0.0094, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0097],
        [0.0145],
        [0.0038],
        [0.0199],
        [0.0043],
        [0.0140],
        [0.0073],
        [0.0151],
        [0.0047],
        [0.0112],
        [0.0230],
        [0.0033],
        [0.0291],
        [0.0142],
        [0.0043],
        [0.0050]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0145, 0.0038, 0.0199, 0.0043, 0.0140, 0.0073, 0.0151, 0.0047,
         0.0112, 0.0230, 0.0033, 0.0291, 0.0142, 0.0043, 0.0050]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0066],
        [0.0076],
        [0.0032],
        [0.0168],
        [0.0038],
        [0.0147],
        [0.0094],
        [0.0175],
        [0.0030],
        [0.0060],
        [0.0223],
        [0.0023],
        [0.0500],
        [0.0120],
        [0.0049],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0076, 0.0032, 0.0168, 0.0038, 0.0147, 0.0094, 0.0175, 0.0030,
         0.0060, 0.0223, 0.0023, 0.0500, 0.0120, 0.0049, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0179, 0.0097, 0.0066],
        [0.0342, 0.0145, 0.0076],
        [0.0198, 0.0038, 0.0032],
        [0.0463, 0.0199, 0.0168],
        [0.0146, 0.0043, 0.0038],
        [0.0867, 0.0140, 0.0147],
        [0.0195, 0.0073, 0.0094],
        [0.0662, 0.0151, 0.0175],
        [0.0126, 0.0047, 0.0030],
        [0.0211, 0.0112, 0.0060],
        [0.1025, 0.0230, 0.0223],
        [0.0109, 0.0033, 0.0023],
        [0.1205, 0.0291, 0.0500],
        [0.0536, 0.0142, 0.0120],
        [0.0094, 0.0043, 0.0049],
        [0.0095, 0.0050, 0.0019]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0186],
        [0.0195],
        [0.0384],
        [0.0031],
        [0.0129],
        [0.0839],
        [0.0277],
        [0.0156],
        [0.1166],
        [0.0138],
        [0.0471],
        [0.0172],
        [0.0112],
        [0.0122],
        [0.0299],
        [0.0173]], device='cuda:0', dtype=torch.float16)/tensor([[0.0186, 0.0195, 0.0384, 0.0031, 0.0129, 0.0839, 0.0277, 0.0156, 0.1166,
         0.0138, 0.0471, 0.0172, 0.0112, 0.0122, 0.0299, 0.0173]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0089],
        [0.0069],
        [0.0072],
        [0.0016],
        [0.0036],
        [0.0225],
        [0.0062],
        [0.0049],
        [0.0249],
        [0.0055],
        [0.0148],
        [0.0059],
        [0.0161],
        [0.0039],
        [0.0079],
        [0.0054]], device='cuda:0', dtype=torch.float16)/tensor([[0.0089, 0.0069, 0.0072, 0.0016, 0.0036, 0.0225, 0.0062, 0.0049, 0.0249,
         0.0055, 0.0148, 0.0059, 0.0161, 0.0039, 0.0079, 0.0054]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0097],
        [0.0065],
        [0.0084],
        [0.0015],
        [0.0031],
        [0.0157],
        [0.0048],
        [0.0080],
        [0.0206],
        [0.0040],
        [0.0108],
        [0.0054],
        [0.0051],
        [0.0029],
        [0.0133],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0065, 0.0084, 0.0015, 0.0031, 0.0157, 0.0048, 0.0080, 0.0206,
         0.0040, 0.0108, 0.0054, 0.0051, 0.0029, 0.0133, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0186, 0.0089, 0.0097],
        [0.0195, 0.0069, 0.0065],
        [0.0384, 0.0072, 0.0084],
        [0.0031, 0.0016, 0.0015],
        [0.0129, 0.0036, 0.0031],
        [0.0839, 0.0225, 0.0157],
        [0.0277, 0.0062, 0.0048],
        [0.0156, 0.0049, 0.0080],
        [0.1166, 0.0249, 0.0206],
        [0.0138, 0.0055, 0.0040],
        [0.0471, 0.0148, 0.0108],
        [0.0172, 0.0059, 0.0054],
        [0.0112, 0.0161, 0.0051],
        [0.0122, 0.0039, 0.0029],
        [0.0299, 0.0079, 0.0133],
        [0.0173, 0.0054, 0.0025]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0252],
        [0.0123],
        [0.0784],
        [0.0032],
        [0.0113],
        [0.0182],
        [0.0071],
        [0.0211],
        [0.0498],
        [0.0216],
        [0.0213],
        [0.0160],
        [0.0196],
        [0.0181],
        [0.0119],
        [0.0183]], device='cuda:0', dtype=torch.float16)/tensor([[0.0252, 0.0123, 0.0784, 0.0032, 0.0113, 0.0182, 0.0071, 0.0211, 0.0498,
         0.0216, 0.0213, 0.0160, 0.0196, 0.0181, 0.0119, 0.0183]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0097],
        [0.0051],
        [0.0281],
        [0.0018],
        [0.0036],
        [0.0030],
        [0.0033],
        [0.0054],
        [0.0116],
        [0.0062],
        [0.0154],
        [0.0050],
        [0.0101],
        [0.0086],
        [0.0053],
        [0.0101]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0051, 0.0281, 0.0018, 0.0036, 0.0030, 0.0033, 0.0054, 0.0116,
         0.0062, 0.0154, 0.0050, 0.0101, 0.0086, 0.0053, 0.0101]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0116],
        [0.0036],
        [0.0253],
        [0.0012],
        [0.0023],
        [0.0047],
        [0.0024],
        [0.0064],
        [0.0085],
        [0.0057],
        [0.0119],
        [0.0069],
        [0.0065],
        [0.0058],
        [0.0059],
        [0.0100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0036, 0.0253, 0.0012, 0.0023, 0.0047, 0.0024, 0.0064, 0.0085,
         0.0057, 0.0119, 0.0069, 0.0065, 0.0058, 0.0059, 0.0100]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0252, 0.0097, 0.0116],
        [0.0123, 0.0051, 0.0036],
        [0.0784, 0.0281, 0.0253],
        [0.0032, 0.0018, 0.0012],
        [0.0113, 0.0036, 0.0023],
        [0.0182, 0.0030, 0.0047],
        [0.0071, 0.0033, 0.0024],
        [0.0211, 0.0054, 0.0064],
        [0.0498, 0.0116, 0.0085],
        [0.0216, 0.0062, 0.0057],
        [0.0213, 0.0154, 0.0119],
        [0.0160, 0.0050, 0.0069],
        [0.0196, 0.0101, 0.0065],
        [0.0181, 0.0086, 0.0058],
        [0.0119, 0.0053, 0.0059],
        [0.0183, 0.0101, 0.0100]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0207],
        [0.0127],
        [0.0135],
        [0.0098],
        [0.0103],
        [0.0724]], device='cuda:0', dtype=torch.float16)/tensor([[0.0207, 0.0127, 0.0135, 0.0098, 0.0103, 0.0724]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0061],
        [0.0070],
        [0.0061],
        [0.0051],
        [0.0041],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0061, 0.0070, 0.0061, 0.0051, 0.0041, 0.0149]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0045],
        [0.0050],
        [0.0042],
        [0.0060],
        [0.0060],
        [0.0148]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0050, 0.0042, 0.0060, 0.0060, 0.0148]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0207, 0.0061, 0.0045],
        [0.0127, 0.0070, 0.0050],
        [0.0135, 0.0061, 0.0042],
        [0.0098, 0.0051, 0.0060],
        [0.0103, 0.0041, 0.0060],
        [0.0724, 0.0149, 0.0148]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type passive, variation 5 and batchsize 16: 0:03:02.592350
path ['42', 'en', 'llama', 'NLI', 'passive', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI auxiliary 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 189.90it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0827],
        [0.0523],
        [0.0697],
        [0.0518],
        [0.0578],
        [0.0337],
        [0.0665],
        [0.0657],
        [0.1293],
        [0.0629],
        [0.0983],
        [0.0453],
        [0.0528],
        [0.0260],
        [0.0660],
        [0.0812]], device='cuda:0', dtype=torch.float16)/tensor([[0.0827, 0.0523, 0.0697, 0.0518, 0.0578, 0.0337, 0.0665, 0.0657, 0.1293,
         0.0629, 0.0983, 0.0453, 0.0528, 0.0260, 0.0660, 0.0812]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0385],
        [0.0143],
        [0.0170],
        [0.0275],
        [0.0221],
        [0.0172],
        [0.0190],
        [0.0148],
        [0.0391],
        [0.0221],
        [0.0182],
        [0.0162],
        [0.0150],
        [0.0112],
        [0.0255],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0385, 0.0143, 0.0170, 0.0275, 0.0221, 0.0172, 0.0190, 0.0148, 0.0391,
         0.0221, 0.0182, 0.0162, 0.0150, 0.0112, 0.0255, 0.0260]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0482],
        [0.0365],
        [0.0228],
        [0.0587],
        [0.0534],
        [0.0339],
        [0.0332],
        [0.0282],
        [0.1205],
        [0.0292],
        [0.0640],
        [0.0411],
        [0.0421],
        [0.0146],
        [0.0526],
        [0.0289]], device='cuda:0', dtype=torch.float16)/tensor([[0.0482, 0.0365, 0.0228, 0.0587, 0.0534, 0.0339, 0.0332, 0.0282, 0.1205,
         0.0292, 0.0640, 0.0411, 0.0421, 0.0146, 0.0526, 0.0289]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0827, 0.0385, 0.0482],
        [0.0523, 0.0143, 0.0365],
        [0.0697, 0.0170, 0.0228],
        [0.0518, 0.0275, 0.0587],
        [0.0578, 0.0221, 0.0534],
        [0.0337, 0.0172, 0.0339],
        [0.0665, 0.0190, 0.0332],
        [0.0657, 0.0148, 0.0282],
        [0.1293, 0.0391, 0.1205],
        [0.0629, 0.0221, 0.0292],
        [0.0983, 0.0182, 0.0640],
        [0.0453, 0.0162, 0.0411],
        [0.0528, 0.0150, 0.0421],
        [0.0260, 0.0112, 0.0146],
        [0.0660, 0.0255, 0.0526],
        [0.0812, 0.0260, 0.0289]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0316],
        [0.0718],
        [0.0623],
        [0.0619],
        [0.0751],
        [0.0482],
        [0.0867],
        [0.1301],
        [0.0905],
        [0.0531],
        [0.0327],
        [0.1141],
        [0.0538],
        [0.0734],
        [0.0518],
        [0.1211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0316, 0.0718, 0.0623, 0.0619, 0.0751, 0.0482, 0.0867, 0.1301, 0.0905,
         0.0531, 0.0327, 0.1141, 0.0538, 0.0734, 0.0518, 0.1211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0217],
        [0.0281],
        [0.0207],
        [0.0162],
        [0.0189],
        [0.0110],
        [0.0163],
        [0.0195],
        [0.0321],
        [0.0259],
        [0.0200],
        [0.0299],
        [0.0200],
        [0.0143],
        [0.0149],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0217, 0.0281, 0.0207, 0.0162, 0.0189, 0.0110, 0.0163, 0.0195, 0.0321,
         0.0259, 0.0200, 0.0299, 0.0200, 0.0143, 0.0149, 0.0238]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0283],
        [0.0449],
        [0.0251],
        [0.0334],
        [0.0260],
        [0.0373],
        [0.0665],
        [0.0397],
        [0.0481],
        [0.0640],
        [0.0309],
        [0.0190],
        [0.0446],
        [0.0435],
        [0.0351],
        [0.0390]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0449, 0.0251, 0.0334, 0.0260, 0.0373, 0.0665, 0.0397, 0.0481,
         0.0640, 0.0309, 0.0190, 0.0446, 0.0435, 0.0351, 0.0390]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0316, 0.0217, 0.0283],
        [0.0718, 0.0281, 0.0449],
        [0.0623, 0.0207, 0.0251],
        [0.0619, 0.0162, 0.0334],
        [0.0751, 0.0189, 0.0260],
        [0.0482, 0.0110, 0.0373],
        [0.0867, 0.0163, 0.0665],
        [0.1301, 0.0195, 0.0397],
        [0.0905, 0.0321, 0.0481],
        [0.0531, 0.0259, 0.0640],
        [0.0327, 0.0200, 0.0309],
        [0.1141, 0.0299, 0.0190],
        [0.0538, 0.0200, 0.0446],
        [0.0734, 0.0143, 0.0435],
        [0.0518, 0.0149, 0.0351],
        [0.1211, 0.0238, 0.0390]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0883],
        [0.0919],
        [0.0643],
        [0.0963],
        [0.1234],
        [0.1553],
        [0.0423],
        [0.0578],
        [0.1233],
        [0.1063],
        [0.0512],
        [0.0851],
        [0.1114],
        [0.1285],
        [0.1091],
        [0.1514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0883, 0.0919, 0.0643, 0.0963, 0.1234, 0.1553, 0.0423, 0.0578, 0.1233,
         0.1063, 0.0512, 0.0851, 0.1114, 0.1285, 0.1091, 0.1514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0157],
        [0.0178],
        [0.0156],
        [0.0185],
        [0.0171],
        [0.0219],
        [0.0129],
        [0.0141],
        [0.0249],
        [0.0309],
        [0.0195],
        [0.0341],
        [0.0479],
        [0.0267],
        [0.0312],
        [0.0202]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0178, 0.0156, 0.0185, 0.0171, 0.0219, 0.0129, 0.0141, 0.0249,
         0.0309, 0.0195, 0.0341, 0.0479, 0.0267, 0.0312, 0.0202]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0454],
        [0.0318],
        [0.0214],
        [0.0811],
        [0.0420],
        [0.0706],
        [0.0502],
        [0.0308],
        [0.0578],
        [0.0526],
        [0.0270],
        [0.0581],
        [0.0692],
        [0.0421],
        [0.0589],
        [0.0473]], device='cuda:0', dtype=torch.float16)/tensor([[0.0454, 0.0318, 0.0214, 0.0811, 0.0420, 0.0706, 0.0502, 0.0308, 0.0578,
         0.0526, 0.0270, 0.0581, 0.0692, 0.0421, 0.0589, 0.0473]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0883, 0.0157, 0.0454],
        [0.0919, 0.0178, 0.0318],
        [0.0643, 0.0156, 0.0214],
        [0.0963, 0.0185, 0.0811],
        [0.1234, 0.0171, 0.0420],
        [0.1553, 0.0219, 0.0706],
        [0.0423, 0.0129, 0.0502],
        [0.0578, 0.0141, 0.0308],
        [0.1233, 0.0249, 0.0578],
        [0.1063, 0.0309, 0.0526],
        [0.0512, 0.0195, 0.0270],
        [0.0851, 0.0341, 0.0581],
        [0.1114, 0.0479, 0.0692],
        [0.1285, 0.0267, 0.0421],
        [0.1091, 0.0312, 0.0589],
        [0.1514, 0.0202, 0.0473]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0515],
        [0.0498],
        [0.0642],
        [0.0631],
        [0.0917],
        [0.0336],
        [0.0646],
        [0.0533],
        [0.0536],
        [0.0767],
        [0.0988],
        [0.0525],
        [0.0399],
        [0.0945],
        [0.1614],
        [0.1047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0515, 0.0498, 0.0642, 0.0631, 0.0917, 0.0336, 0.0646, 0.0533, 0.0536,
         0.0767, 0.0988, 0.0525, 0.0399, 0.0945, 0.1614, 0.1047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0203],
        [0.0209],
        [0.0164],
        [0.0119],
        [0.0266],
        [0.0135],
        [0.0179],
        [0.0181],
        [0.0110],
        [0.0195],
        [0.0316],
        [0.0163],
        [0.0092],
        [0.0290],
        [0.0308],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0203, 0.0209, 0.0164, 0.0119, 0.0266, 0.0135, 0.0179, 0.0181, 0.0110,
         0.0195, 0.0316, 0.0163, 0.0092, 0.0290, 0.0308, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0308],
        [0.0305],
        [0.0303],
        [0.0374],
        [0.0543],
        [0.0207],
        [0.0255],
        [0.0595],
        [0.0168],
        [0.0282],
        [0.0456],
        [0.0568],
        [0.0614],
        [0.0530],
        [0.0315],
        [0.0450]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0305, 0.0303, 0.0374, 0.0543, 0.0207, 0.0255, 0.0595, 0.0168,
         0.0282, 0.0456, 0.0568, 0.0614, 0.0530, 0.0315, 0.0450]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0515, 0.0203, 0.0308],
        [0.0498, 0.0209, 0.0305],
        [0.0642, 0.0164, 0.0303],
        [0.0631, 0.0119, 0.0374],
        [0.0917, 0.0266, 0.0543],
        [0.0336, 0.0135, 0.0207],
        [0.0646, 0.0179, 0.0255],
        [0.0533, 0.0181, 0.0595],
        [0.0536, 0.0110, 0.0168],
        [0.0767, 0.0195, 0.0282],
        [0.0988, 0.0316, 0.0456],
        [0.0525, 0.0163, 0.0568],
        [0.0399, 0.0092, 0.0614],
        [0.0945, 0.0290, 0.0530],
        [0.1614, 0.0308, 0.0315],
        [0.1047, 0.0211, 0.0450]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0803],
        [0.1030],
        [0.0618],
        [0.0828],
        [0.1100],
        [0.0298],
        [0.0310],
        [0.0661],
        [0.0422],
        [0.0632],
        [0.0750],
        [0.0413],
        [0.0540],
        [0.0955],
        [0.1083],
        [0.1283]], device='cuda:0', dtype=torch.float16)/tensor([[0.0803, 0.1030, 0.0618, 0.0828, 0.1100, 0.0298, 0.0310, 0.0661, 0.0422,
         0.0632, 0.0750, 0.0413, 0.0540, 0.0955, 0.1083, 0.1283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0226],
        [0.0252],
        [0.0135],
        [0.0175],
        [0.0217],
        [0.0142],
        [0.0097],
        [0.0218],
        [0.0347],
        [0.0278],
        [0.0110],
        [0.0314],
        [0.0120],
        [0.0186],
        [0.0328],
        [0.0280]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0252, 0.0135, 0.0175, 0.0217, 0.0142, 0.0097, 0.0218, 0.0347,
         0.0278, 0.0110, 0.0314, 0.0120, 0.0186, 0.0328, 0.0280]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0457],
        [0.0665],
        [0.0474],
        [0.0279],
        [0.0637],
        [0.0495],
        [0.0237],
        [0.0371],
        [0.0277],
        [0.0266],
        [0.0407],
        [0.0364],
        [0.0417],
        [0.0495],
        [0.0536],
        [0.0465]], device='cuda:0', dtype=torch.float16)/tensor([[0.0457, 0.0665, 0.0474, 0.0279, 0.0637, 0.0495, 0.0237, 0.0371, 0.0277,
         0.0266, 0.0407, 0.0364, 0.0417, 0.0495, 0.0536, 0.0465]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0803, 0.0226, 0.0457],
        [0.1030, 0.0252, 0.0665],
        [0.0618, 0.0135, 0.0474],
        [0.0828, 0.0175, 0.0279],
        [0.1100, 0.0217, 0.0637],
        [0.0298, 0.0142, 0.0495],
        [0.0310, 0.0097, 0.0237],
        [0.0661, 0.0218, 0.0371],
        [0.0422, 0.0347, 0.0277],
        [0.0632, 0.0278, 0.0266],
        [0.0750, 0.0110, 0.0407],
        [0.0413, 0.0314, 0.0364],
        [0.0540, 0.0120, 0.0417],
        [0.0955, 0.0186, 0.0495],
        [0.1083, 0.0328, 0.0536],
        [0.1283, 0.0280, 0.0465]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0549],
        [0.0705],
        [0.1268],
        [0.0428],
        [0.0388],
        [0.1438],
        [0.0441],
        [0.0833],
        [0.0186],
        [0.0533],
        [0.1052],
        [0.0808],
        [0.1757],
        [0.1198],
        [0.0087],
        [0.1487]], device='cuda:0', dtype=torch.float16)/tensor([[0.0549, 0.0705, 0.1268, 0.0428, 0.0388, 0.1438, 0.0441, 0.0833, 0.0186,
         0.0533, 0.1052, 0.0808, 0.1757, 0.1198, 0.0087, 0.1487]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0316],
        [0.0249],
        [0.0219],
        [0.0173],
        [0.0141],
        [0.0323],
        [0.0118],
        [0.0342],
        [0.0172],
        [0.0277],
        [0.0235],
        [0.0228],
        [0.0188],
        [0.0151],
        [0.0060],
        [0.0312]], device='cuda:0', dtype=torch.float16)/tensor([[0.0316, 0.0249, 0.0219, 0.0173, 0.0141, 0.0323, 0.0118, 0.0342, 0.0172,
         0.0277, 0.0235, 0.0228, 0.0188, 0.0151, 0.0060, 0.0312]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0418],
        [0.0247],
        [0.0428],
        [0.0852],
        [0.0406],
        [0.0684],
        [0.0458],
        [0.0355],
        [0.0489],
        [0.0450],
        [0.0634],
        [0.0551],
        [0.0621],
        [0.0667],
        [0.0059],
        [0.0560]], device='cuda:0', dtype=torch.float16)/tensor([[0.0418, 0.0247, 0.0428, 0.0852, 0.0406, 0.0684, 0.0458, 0.0355, 0.0489,
         0.0450, 0.0634, 0.0551, 0.0621, 0.0667, 0.0059, 0.0560]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0549, 0.0316, 0.0418],
        [0.0705, 0.0249, 0.0247],
        [0.1268, 0.0219, 0.0428],
        [0.0428, 0.0173, 0.0852],
        [0.0388, 0.0141, 0.0406],
        [0.1438, 0.0323, 0.0684],
        [0.0441, 0.0118, 0.0458],
        [0.0833, 0.0342, 0.0355],
        [0.0186, 0.0172, 0.0489],
        [0.0533, 0.0277, 0.0450],
        [0.1052, 0.0235, 0.0634],
        [0.0808, 0.0228, 0.0551],
        [0.1757, 0.0188, 0.0621],
        [0.1198, 0.0151, 0.0667],
        [0.0087, 0.0060, 0.0059],
        [0.1487, 0.0312, 0.0560]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0320],
        [0.0329],
        [0.0322],
        [0.0716],
        [0.0960],
        [0.0525],
        [0.0525],
        [0.0540],
        [0.0889],
        [0.1021],
        [0.0805],
        [0.0616],
        [0.0823],
        [0.0589],
        [0.0154],
        [0.0603]], device='cuda:0', dtype=torch.float16)/tensor([[0.0320, 0.0329, 0.0322, 0.0716, 0.0960, 0.0525, 0.0525, 0.0540, 0.0889,
         0.1021, 0.0805, 0.0616, 0.0823, 0.0589, 0.0154, 0.0603]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0101],
        [0.0181],
        [0.0157],
        [0.0405],
        [0.0195],
        [0.0168],
        [0.0133],
        [0.0140],
        [0.0241],
        [0.0381],
        [0.0167],
        [0.0219],
        [0.0163],
        [0.0211],
        [0.0125],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0181, 0.0157, 0.0405, 0.0195, 0.0168, 0.0133, 0.0140, 0.0241,
         0.0381, 0.0167, 0.0219, 0.0163, 0.0211, 0.0125, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0180],
        [0.0269],
        [0.0318],
        [0.0496],
        [0.0382],
        [0.0350],
        [0.0375],
        [0.0365],
        [0.0483],
        [0.0456],
        [0.0280],
        [0.0243],
        [0.0295],
        [0.0458],
        [0.0156],
        [0.0408]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0269, 0.0318, 0.0496, 0.0382, 0.0350, 0.0375, 0.0365, 0.0483,
         0.0456, 0.0280, 0.0243, 0.0295, 0.0458, 0.0156, 0.0408]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0320, 0.0101, 0.0180],
        [0.0329, 0.0181, 0.0269],
        [0.0322, 0.0157, 0.0318],
        [0.0716, 0.0405, 0.0496],
        [0.0960, 0.0195, 0.0382],
        [0.0525, 0.0168, 0.0350],
        [0.0525, 0.0133, 0.0375],
        [0.0540, 0.0140, 0.0365],
        [0.0889, 0.0241, 0.0483],
        [0.1021, 0.0381, 0.0456],
        [0.0805, 0.0167, 0.0280],
        [0.0616, 0.0219, 0.0243],
        [0.0823, 0.0163, 0.0295],
        [0.0589, 0.0211, 0.0458],
        [0.0154, 0.0125, 0.0156],
        [0.0603, 0.0266, 0.0408]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0439],
        [0.0918],
        [0.1036],
        [0.0543],
        [0.0834],
        [0.0533],
        [0.1156],
        [0.0524],
        [0.0362],
        [0.0140],
        [0.0639],
        [0.0721],
        [0.0518],
        [0.1462],
        [0.1140],
        [0.1309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0439, 0.0918, 0.1036, 0.0543, 0.0834, 0.0533, 0.1156, 0.0524, 0.0362,
         0.0140, 0.0639, 0.0721, 0.0518, 0.1462, 0.1140, 0.1309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0221],
        [0.0232],
        [0.0328],
        [0.0362],
        [0.0248],
        [0.0155],
        [0.0270],
        [0.0105],
        [0.0187],
        [0.0078],
        [0.0179],
        [0.0305],
        [0.0123],
        [0.0229],
        [0.0175],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0221, 0.0232, 0.0328, 0.0362, 0.0248, 0.0155, 0.0270, 0.0105, 0.0187,
         0.0078, 0.0179, 0.0305, 0.0123, 0.0229, 0.0175, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0442],
        [0.0322],
        [0.0517],
        [0.0397],
        [0.0654],
        [0.0302],
        [0.0568],
        [0.0225],
        [0.0320],
        [0.0189],
        [0.0350],
        [0.0263],
        [0.0255],
        [0.0494],
        [0.0413],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.0442, 0.0322, 0.0517, 0.0397, 0.0654, 0.0302, 0.0568, 0.0225, 0.0320,
         0.0189, 0.0350, 0.0263, 0.0255, 0.0494, 0.0413, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0439, 0.0221, 0.0442],
        [0.0918, 0.0232, 0.0322],
        [0.1036, 0.0328, 0.0517],
        [0.0543, 0.0362, 0.0397],
        [0.0834, 0.0248, 0.0654],
        [0.0533, 0.0155, 0.0302],
        [0.1156, 0.0270, 0.0568],
        [0.0524, 0.0105, 0.0225],
        [0.0362, 0.0187, 0.0320],
        [0.0140, 0.0078, 0.0189],
        [0.0639, 0.0179, 0.0350],
        [0.0721, 0.0305, 0.0263],
        [0.0518, 0.0123, 0.0255],
        [0.1462, 0.0229, 0.0494],
        [0.1140, 0.0175, 0.0413],
        [0.1309, 0.0261, 0.0388]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0234],
        [0.0370],
        [0.0431],
        [0.0447],
        [0.0807],
        [0.0394],
        [0.0679],
        [0.0421],
        [0.0887],
        [0.0226],
        [0.0786],
        [0.1116],
        [0.1037],
        [0.1407],
        [0.0823],
        [0.0448]], device='cuda:0', dtype=torch.float16)/tensor([[0.0234, 0.0370, 0.0431, 0.0447, 0.0807, 0.0394, 0.0679, 0.0421, 0.0887,
         0.0226, 0.0786, 0.1116, 0.1037, 0.1407, 0.0823, 0.0448]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0088],
        [0.0192],
        [0.0220],
        [0.0104],
        [0.0132],
        [0.0127],
        [0.0209],
        [0.0128],
        [0.0159],
        [0.0249],
        [0.0199],
        [0.0317],
        [0.0233],
        [0.0169],
        [0.0311],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0192, 0.0220, 0.0104, 0.0132, 0.0127, 0.0209, 0.0128, 0.0159,
         0.0249, 0.0199, 0.0317, 0.0233, 0.0169, 0.0311, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0173],
        [0.0254],
        [0.0205],
        [0.0317],
        [0.0273],
        [0.0468],
        [0.0323],
        [0.0504],
        [0.0542],
        [0.0189],
        [0.0451],
        [0.0561],
        [0.0379],
        [0.0475],
        [0.0612],
        [0.0253]], device='cuda:0', dtype=torch.float16)/tensor([[0.0173, 0.0254, 0.0205, 0.0317, 0.0273, 0.0468, 0.0323, 0.0504, 0.0542,
         0.0189, 0.0451, 0.0561, 0.0379, 0.0475, 0.0612, 0.0253]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0234, 0.0088, 0.0173],
        [0.0370, 0.0192, 0.0254],
        [0.0431, 0.0220, 0.0205],
        [0.0447, 0.0104, 0.0317],
        [0.0807, 0.0132, 0.0273],
        [0.0394, 0.0127, 0.0468],
        [0.0679, 0.0209, 0.0323],
        [0.0421, 0.0128, 0.0504],
        [0.0887, 0.0159, 0.0542],
        [0.0226, 0.0249, 0.0189],
        [0.0786, 0.0199, 0.0451],
        [0.1116, 0.0317, 0.0561],
        [0.1037, 0.0233, 0.0379],
        [0.1407, 0.0169, 0.0475],
        [0.0823, 0.0311, 0.0612],
        [0.0448, 0.0179, 0.0253]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1259],
        [0.1365],
        [0.0483],
        [0.0532],
        [0.1415],
        [0.0742],
        [0.1044],
        [0.0731],
        [0.0853],
        [0.0767],
        [0.0583],
        [0.0848],
        [0.0660],
        [0.0867],
        [0.0773],
        [0.0272]], device='cuda:0', dtype=torch.float16)/tensor([[0.1259, 0.1365, 0.0483, 0.0532, 0.1415, 0.0742, 0.1044, 0.0731, 0.0853,
         0.0767, 0.0583, 0.0848, 0.0660, 0.0867, 0.0773, 0.0272]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0193],
        [0.0187],
        [0.0359],
        [0.0170],
        [0.0290],
        [0.0140],
        [0.0264],
        [0.0183],
        [0.0203],
        [0.0185],
        [0.0168],
        [0.0352],
        [0.0204],
        [0.0295],
        [0.0210],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0187, 0.0359, 0.0170, 0.0290, 0.0140, 0.0264, 0.0183, 0.0203,
         0.0185, 0.0168, 0.0352, 0.0204, 0.0295, 0.0210, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0482],
        [0.0450],
        [0.0578],
        [0.0303],
        [0.0497],
        [0.0440],
        [0.0679],
        [0.0278],
        [0.0457],
        [0.0414],
        [0.0351],
        [0.0583],
        [0.0279],
        [0.0482],
        [0.0392],
        [0.0294]], device='cuda:0', dtype=torch.float16)/tensor([[0.0482, 0.0450, 0.0578, 0.0303, 0.0497, 0.0440, 0.0679, 0.0278, 0.0457,
         0.0414, 0.0351, 0.0583, 0.0279, 0.0482, 0.0392, 0.0294]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1259, 0.0193, 0.0482],
        [0.1365, 0.0187, 0.0450],
        [0.0483, 0.0359, 0.0578],
        [0.0532, 0.0170, 0.0303],
        [0.1415, 0.0290, 0.0497],
        [0.0742, 0.0140, 0.0440],
        [0.1044, 0.0264, 0.0679],
        [0.0731, 0.0183, 0.0278],
        [0.0853, 0.0203, 0.0457],
        [0.0767, 0.0185, 0.0414],
        [0.0583, 0.0168, 0.0351],
        [0.0848, 0.0352, 0.0583],
        [0.0660, 0.0204, 0.0279],
        [0.0867, 0.0295, 0.0482],
        [0.0773, 0.0210, 0.0392],
        [0.0272, 0.0176, 0.0294]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1050],
        [0.0555],
        [0.0195],
        [0.0948],
        [0.1068],
        [0.0578],
        [0.1503],
        [0.0703],
        [0.1379],
        [0.1433],
        [0.1188],
        [0.0979],
        [0.0682],
        [0.0479],
        [0.0541],
        [0.1210]], device='cuda:0', dtype=torch.float16)/tensor([[0.1050, 0.0555, 0.0195, 0.0948, 0.1068, 0.0578, 0.1503, 0.0703, 0.1379,
         0.1433, 0.1188, 0.0979, 0.0682, 0.0479, 0.0541, 0.1210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0236],
        [0.0262],
        [0.0094],
        [0.0197],
        [0.0240],
        [0.0109],
        [0.0323],
        [0.0251],
        [0.0204],
        [0.0317],
        [0.0259],
        [0.0255],
        [0.0276],
        [0.0204],
        [0.0229],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0236, 0.0262, 0.0094, 0.0197, 0.0240, 0.0109, 0.0323, 0.0251, 0.0204,
         0.0317, 0.0259, 0.0255, 0.0276, 0.0204, 0.0229, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0392],
        [0.0344],
        [0.0108],
        [0.0716],
        [0.0529],
        [0.0367],
        [0.0667],
        [0.0296],
        [0.0584],
        [0.0499],
        [0.0310],
        [0.0662],
        [0.0473],
        [0.0397],
        [0.0415],
        [0.0648]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.0344, 0.0108, 0.0716, 0.0529, 0.0367, 0.0667, 0.0296, 0.0584,
         0.0499, 0.0310, 0.0662, 0.0473, 0.0397, 0.0415, 0.0648]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1050, 0.0236, 0.0392],
        [0.0555, 0.0262, 0.0344],
        [0.0195, 0.0094, 0.0108],
        [0.0948, 0.0197, 0.0716],
        [0.1068, 0.0240, 0.0529],
        [0.0578, 0.0109, 0.0367],
        [0.1503, 0.0323, 0.0667],
        [0.0703, 0.0251, 0.0296],
        [0.1379, 0.0204, 0.0584],
        [0.1433, 0.0317, 0.0499],
        [0.1188, 0.0259, 0.0310],
        [0.0979, 0.0255, 0.0662],
        [0.0682, 0.0276, 0.0473],
        [0.0479, 0.0204, 0.0397],
        [0.0541, 0.0229, 0.0415],
        [0.1210, 0.0206, 0.0648]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0296],
        [0.0666],
        [0.0930],
        [0.0701],
        [0.1379],
        [0.0854],
        [0.0262],
        [0.0605],
        [0.0660],
        [0.0688],
        [0.0920],
        [0.0179],
        [0.0747],
        [0.0830],
        [0.0833],
        [0.0545]], device='cuda:0', dtype=torch.float16)/tensor([[0.0296, 0.0666, 0.0930, 0.0701, 0.1379, 0.0854, 0.0262, 0.0605, 0.0660,
         0.0688, 0.0920, 0.0179, 0.0747, 0.0830, 0.0833, 0.0545]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0132],
        [0.0150],
        [0.0309],
        [0.0233],
        [0.0182],
        [0.0228],
        [0.0089],
        [0.0314],
        [0.0198],
        [0.0110],
        [0.0188],
        [0.0127],
        [0.0127],
        [0.0175],
        [0.0202],
        [0.0164]], device='cuda:0', dtype=torch.float16)/tensor([[0.0132, 0.0150, 0.0309, 0.0233, 0.0182, 0.0228, 0.0089, 0.0314, 0.0198,
         0.0110, 0.0188, 0.0127, 0.0127, 0.0175, 0.0202, 0.0164]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0249],
        [0.0336],
        [0.0502],
        [0.0428],
        [0.0411],
        [0.0282],
        [0.0329],
        [0.0453],
        [0.0426],
        [0.0549],
        [0.0470],
        [0.0244],
        [0.0490],
        [0.0272],
        [0.0497],
        [0.0257]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0336, 0.0502, 0.0428, 0.0411, 0.0282, 0.0329, 0.0453, 0.0426,
         0.0549, 0.0470, 0.0244, 0.0490, 0.0272, 0.0497, 0.0257]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0296, 0.0132, 0.0249],
        [0.0666, 0.0150, 0.0336],
        [0.0930, 0.0309, 0.0502],
        [0.0701, 0.0233, 0.0428],
        [0.1379, 0.0182, 0.0411],
        [0.0854, 0.0228, 0.0282],
        [0.0262, 0.0089, 0.0329],
        [0.0605, 0.0314, 0.0453],
        [0.0660, 0.0198, 0.0426],
        [0.0688, 0.0110, 0.0549],
        [0.0920, 0.0188, 0.0470],
        [0.0179, 0.0127, 0.0244],
        [0.0747, 0.0127, 0.0490],
        [0.0830, 0.0175, 0.0272],
        [0.0833, 0.0202, 0.0497],
        [0.0545, 0.0164, 0.0257]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0472],
        [0.0375],
        [0.1071],
        [0.0905],
        [0.1089],
        [0.0607]], device='cuda:0', dtype=torch.float16)/tensor([[0.0472, 0.0375, 0.1071, 0.0905, 0.1089, 0.0607]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0172],
        [0.0108],
        [0.0256],
        [0.0208],
        [0.0255],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0172, 0.0108, 0.0256, 0.0208, 0.0255, 0.0232]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0257],
        [0.0419],
        [0.0759],
        [0.0450],
        [0.0491],
        [0.0335]], device='cuda:0', dtype=torch.float16)/tensor([[0.0257, 0.0419, 0.0759, 0.0450, 0.0491, 0.0335]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0472, 0.0172, 0.0257],
        [0.0375, 0.0108, 0.0419],
        [0.1071, 0.0256, 0.0759],
        [0.0905, 0.0208, 0.0450],
        [0.1089, 0.0255, 0.0491],
        [0.0607, 0.0232, 0.0335]], device='cuda:0')
acc:  0.35353535353535354
Time taken to execute the en NLI task with prompt type auxiliary, variation 0 and batchsize 16: 0:03:02.418035
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI auxiliary 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 320.98it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0549],
        [0.0699],
        [0.0327],
        [0.0789],
        [0.0458],
        [0.0255],
        [0.0246],
        [0.0695],
        [0.0291],
        [0.0124],
        [0.0852],
        [0.0177],
        [0.0174],
        [0.0138],
        [0.0575],
        [0.0163]], device='cuda:0', dtype=torch.float16)/tensor([[0.0549, 0.0699, 0.0327, 0.0789, 0.0458, 0.0255, 0.0246, 0.0695, 0.0291,
         0.0124, 0.0852, 0.0177, 0.0174, 0.0138, 0.0575, 0.0163]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0136],
        [0.0323],
        [0.0064],
        [0.0204],
        [0.0212],
        [0.0079],
        [0.0078],
        [0.0219],
        [0.0054],
        [0.0080],
        [0.0290],
        [0.0053],
        [0.0053],
        [0.0038],
        [0.0167],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0323, 0.0064, 0.0204, 0.0212, 0.0079, 0.0078, 0.0219, 0.0054,
         0.0080, 0.0290, 0.0053, 0.0053, 0.0038, 0.0167, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0311],
        [0.0288],
        [0.0089],
        [0.0346],
        [0.0280],
        [0.0153],
        [0.0122],
        [0.0210],
        [0.0087],
        [0.0053],
        [0.0209],
        [0.0038],
        [0.0079],
        [0.0031],
        [0.0303],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0311, 0.0288, 0.0089, 0.0346, 0.0280, 0.0153, 0.0122, 0.0210, 0.0087,
         0.0053, 0.0209, 0.0038, 0.0079, 0.0031, 0.0303, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0549, 0.0136, 0.0311],
        [0.0699, 0.0323, 0.0288],
        [0.0327, 0.0064, 0.0089],
        [0.0789, 0.0204, 0.0346],
        [0.0458, 0.0212, 0.0280],
        [0.0255, 0.0079, 0.0153],
        [0.0246, 0.0078, 0.0122],
        [0.0695, 0.0219, 0.0210],
        [0.0291, 0.0054, 0.0087],
        [0.0124, 0.0080, 0.0053],
        [0.0852, 0.0290, 0.0209],
        [0.0177, 0.0053, 0.0038],
        [0.0174, 0.0053, 0.0079],
        [0.0138, 0.0038, 0.0031],
        [0.0575, 0.0167, 0.0303],
        [0.0163, 0.0048, 0.0074]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0273],
        [0.0167],
        [0.0551],
        [0.1719],
        [0.0176],
        [0.1337],
        [0.0457],
        [0.0112],
        [0.0252],
        [0.0112],
        [0.0279],
        [0.0414],
        [0.0397],
        [0.0370],
        [0.0103],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0273, 0.0167, 0.0551, 0.1719, 0.0176, 0.1337, 0.0457, 0.0112, 0.0252,
         0.0112, 0.0279, 0.0414, 0.0397, 0.0370, 0.0103, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0087],
        [0.0090],
        [0.0091],
        [0.0428],
        [0.0030],
        [0.0287],
        [0.0198],
        [0.0047],
        [0.0077],
        [0.0032],
        [0.0080],
        [0.0057],
        [0.0091],
        [0.0048],
        [0.0043],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0090, 0.0091, 0.0428, 0.0030, 0.0287, 0.0198, 0.0047, 0.0077,
         0.0032, 0.0080, 0.0057, 0.0091, 0.0048, 0.0043, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0103],
        [0.0107],
        [0.0387],
        [0.0336],
        [0.0038],
        [0.0316],
        [0.0370],
        [0.0048],
        [0.0078],
        [0.0060],
        [0.0137],
        [0.0146],
        [0.0072],
        [0.0098],
        [0.0035],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0103, 0.0107, 0.0387, 0.0336, 0.0038, 0.0316, 0.0370, 0.0048, 0.0078,
         0.0060, 0.0137, 0.0146, 0.0072, 0.0098, 0.0035, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0273, 0.0087, 0.0103],
        [0.0167, 0.0090, 0.0107],
        [0.0551, 0.0091, 0.0387],
        [0.1719, 0.0428, 0.0336],
        [0.0176, 0.0030, 0.0038],
        [0.1337, 0.0287, 0.0316],
        [0.0457, 0.0198, 0.0370],
        [0.0112, 0.0047, 0.0048],
        [0.0252, 0.0077, 0.0078],
        [0.0112, 0.0032, 0.0060],
        [0.0279, 0.0080, 0.0137],
        [0.0414, 0.0057, 0.0146],
        [0.0397, 0.0091, 0.0072],
        [0.0370, 0.0048, 0.0098],
        [0.0103, 0.0043, 0.0035],
        [0.0417, 0.0128, 0.0131]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0212],
        [0.0249],
        [0.0504],
        [0.0411],
        [0.1180],
        [0.0189],
        [0.0893],
        [0.0356],
        [0.0804],
        [0.0327],
        [0.0105],
        [0.0541],
        [0.0386],
        [0.0347],
        [0.0359],
        [0.1015]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0249, 0.0504, 0.0411, 0.1180, 0.0189, 0.0893, 0.0356, 0.0804,
         0.0327, 0.0105, 0.0541, 0.0386, 0.0347, 0.0359, 0.1015]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0155],
        [0.0096],
        [0.0115],
        [0.0100],
        [0.0380],
        [0.0031],
        [0.0315],
        [0.0092],
        [0.0200],
        [0.0082],
        [0.0049],
        [0.0168],
        [0.0048],
        [0.0166],
        [0.0064],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0096, 0.0115, 0.0100, 0.0380, 0.0031, 0.0315, 0.0092, 0.0200,
         0.0082, 0.0049, 0.0168, 0.0048, 0.0166, 0.0064, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0084],
        [0.0151],
        [0.0146],
        [0.0187],
        [0.0817],
        [0.0077],
        [0.0180],
        [0.0184],
        [0.0368],
        [0.0121],
        [0.0035],
        [0.0176],
        [0.0146],
        [0.0158],
        [0.0184],
        [0.0495]], device='cuda:0', dtype=torch.float16)/tensor([[0.0084, 0.0151, 0.0146, 0.0187, 0.0817, 0.0077, 0.0180, 0.0184, 0.0368,
         0.0121, 0.0035, 0.0176, 0.0146, 0.0158, 0.0184, 0.0495]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0212, 0.0155, 0.0084],
        [0.0249, 0.0096, 0.0151],
        [0.0504, 0.0115, 0.0146],
        [0.0411, 0.0100, 0.0187],
        [0.1180, 0.0380, 0.0817],
        [0.0189, 0.0031, 0.0077],
        [0.0893, 0.0315, 0.0180],
        [0.0356, 0.0092, 0.0184],
        [0.0804, 0.0200, 0.0368],
        [0.0327, 0.0082, 0.0121],
        [0.0105, 0.0049, 0.0035],
        [0.0541, 0.0168, 0.0176],
        [0.0386, 0.0048, 0.0146],
        [0.0347, 0.0166, 0.0158],
        [0.0359, 0.0064, 0.0184],
        [0.1015, 0.0217, 0.0495]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0200],
        [0.0230],
        [0.0352],
        [0.0611],
        [0.0831],
        [0.0039],
        [0.0192],
        [0.0544],
        [0.1312],
        [0.0178],
        [0.0550],
        [0.0580],
        [0.0368],
        [0.0375],
        [0.0234],
        [0.0403]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0230, 0.0352, 0.0611, 0.0831, 0.0039, 0.0192, 0.0544, 0.1312,
         0.0178, 0.0550, 0.0580, 0.0368, 0.0375, 0.0234, 0.0403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0097],
        [0.0092],
        [0.0141],
        [0.0190],
        [0.0366],
        [0.0020],
        [0.0080],
        [0.0207],
        [0.0218],
        [0.0041],
        [0.0066],
        [0.0098],
        [0.0078],
        [0.0092],
        [0.0058],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0092, 0.0141, 0.0190, 0.0366, 0.0020, 0.0080, 0.0207, 0.0218,
         0.0041, 0.0066, 0.0098, 0.0078, 0.0092, 0.0058, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0080],
        [0.0145],
        [0.0099],
        [0.0275],
        [0.0396],
        [0.0014],
        [0.0104],
        [0.0144],
        [0.0280],
        [0.0035],
        [0.0115],
        [0.0109],
        [0.0114],
        [0.0161],
        [0.0049],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0145, 0.0099, 0.0275, 0.0396, 0.0014, 0.0104, 0.0144, 0.0280,
         0.0035, 0.0115, 0.0109, 0.0114, 0.0161, 0.0049, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0200, 0.0097, 0.0080],
        [0.0230, 0.0092, 0.0145],
        [0.0352, 0.0141, 0.0099],
        [0.0611, 0.0190, 0.0275],
        [0.0831, 0.0366, 0.0396],
        [0.0039, 0.0020, 0.0014],
        [0.0192, 0.0080, 0.0104],
        [0.0544, 0.0207, 0.0144],
        [0.1312, 0.0218, 0.0280],
        [0.0178, 0.0041, 0.0035],
        [0.0550, 0.0066, 0.0115],
        [0.0580, 0.0098, 0.0109],
        [0.0368, 0.0078, 0.0114],
        [0.0375, 0.0092, 0.0161],
        [0.0234, 0.0058, 0.0049],
        [0.0403, 0.0129, 0.0133]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0166],
        [0.0229],
        [0.0143],
        [0.1625],
        [0.0246],
        [0.0315],
        [0.0217],
        [0.0793],
        [0.0151],
        [0.1124],
        [0.0892],
        [0.0522],
        [0.0451],
        [0.1191],
        [0.0645],
        [0.1033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0229, 0.0143, 0.1625, 0.0246, 0.0315, 0.0217, 0.0793, 0.0151,
         0.1124, 0.0892, 0.0522, 0.0451, 0.1191, 0.0645, 0.1033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0025],
        [0.0063],
        [0.0059],
        [0.0232],
        [0.0110],
        [0.0080],
        [0.0053],
        [0.0226],
        [0.0135],
        [0.0330],
        [0.0504],
        [0.0133],
        [0.0101],
        [0.0256],
        [0.0166],
        [0.0488]], device='cuda:0', dtype=torch.float16)/tensor([[0.0025, 0.0063, 0.0059, 0.0232, 0.0110, 0.0080, 0.0053, 0.0226, 0.0135,
         0.0330, 0.0504, 0.0133, 0.0101, 0.0256, 0.0166, 0.0488]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0014],
        [0.0088],
        [0.0045],
        [0.0291],
        [0.0147],
        [0.0108],
        [0.0065],
        [0.0196],
        [0.0099],
        [0.0828],
        [0.0481],
        [0.0198],
        [0.0224],
        [0.0572],
        [0.0205],
        [0.0549]], device='cuda:0', dtype=torch.float16)/tensor([[0.0014, 0.0088, 0.0045, 0.0291, 0.0147, 0.0108, 0.0065, 0.0196, 0.0099,
         0.0828, 0.0481, 0.0198, 0.0224, 0.0572, 0.0205, 0.0549]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0166, 0.0025, 0.0014],
        [0.0229, 0.0063, 0.0088],
        [0.0143, 0.0059, 0.0045],
        [0.1625, 0.0232, 0.0291],
        [0.0246, 0.0110, 0.0147],
        [0.0315, 0.0080, 0.0108],
        [0.0217, 0.0053, 0.0065],
        [0.0793, 0.0226, 0.0196],
        [0.0151, 0.0135, 0.0099],
        [0.1124, 0.0330, 0.0828],
        [0.0892, 0.0504, 0.0481],
        [0.0522, 0.0133, 0.0198],
        [0.0451, 0.0101, 0.0224],
        [0.1191, 0.0256, 0.0572],
        [0.0645, 0.0166, 0.0205],
        [0.1033, 0.0488, 0.0549]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1094],
        [0.0466],
        [0.0393],
        [0.0193],
        [0.0186],
        [0.0481],
        [0.0410],
        [0.0623],
        [0.0509],
        [0.0359],
        [0.1259],
        [0.1554],
        [0.0154],
        [0.0424],
        [0.1250],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.1094, 0.0466, 0.0393, 0.0193, 0.0186, 0.0481, 0.0410, 0.0623, 0.0509,
         0.0359, 0.1259, 0.1554, 0.0154, 0.0424, 0.1250, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0220],
        [0.0165],
        [0.0177],
        [0.0081],
        [0.0062],
        [0.0140],
        [0.0123],
        [0.0073],
        [0.0173],
        [0.0073],
        [0.0222],
        [0.0268],
        [0.0100],
        [0.0051],
        [0.0295],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0220, 0.0165, 0.0177, 0.0081, 0.0062, 0.0140, 0.0123, 0.0073, 0.0173,
         0.0073, 0.0222, 0.0268, 0.0100, 0.0051, 0.0295, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0277],
        [0.0202],
        [0.0136],
        [0.0087],
        [0.0091],
        [0.0140],
        [0.0130],
        [0.0242],
        [0.0084],
        [0.0137],
        [0.0283],
        [0.0257],
        [0.0077],
        [0.0093],
        [0.0456],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0202, 0.0136, 0.0087, 0.0091, 0.0140, 0.0130, 0.0242, 0.0084,
         0.0137, 0.0283, 0.0257, 0.0077, 0.0093, 0.0456, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1094, 0.0220, 0.0277],
        [0.0466, 0.0165, 0.0202],
        [0.0393, 0.0177, 0.0136],
        [0.0193, 0.0081, 0.0087],
        [0.0186, 0.0062, 0.0091],
        [0.0481, 0.0140, 0.0140],
        [0.0410, 0.0123, 0.0130],
        [0.0623, 0.0073, 0.0242],
        [0.0509, 0.0173, 0.0084],
        [0.0359, 0.0073, 0.0137],
        [0.1259, 0.0222, 0.0283],
        [0.1554, 0.0268, 0.0257],
        [0.0154, 0.0100, 0.0077],
        [0.0424, 0.0051, 0.0093],
        [0.1250, 0.0295, 0.0456],
        [0.0217, 0.0062, 0.0107]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0284],
        [0.0318],
        [0.0637],
        [0.0991],
        [0.0091],
        [0.1354],
        [0.0397],
        [0.0574],
        [0.1306],
        [0.1191],
        [0.1434],
        [0.0236],
        [0.0445],
        [0.1477],
        [0.0797],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0284, 0.0318, 0.0637, 0.0991, 0.0091, 0.1354, 0.0397, 0.0574, 0.1306,
         0.1191, 0.1434, 0.0236, 0.0445, 0.1477, 0.0797, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0090],
        [0.0114],
        [0.0150],
        [0.0243],
        [0.0044],
        [0.0212],
        [0.0162],
        [0.0064],
        [0.0569],
        [0.0183],
        [0.0222],
        [0.0089],
        [0.0122],
        [0.0257],
        [0.0343],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0114, 0.0150, 0.0243, 0.0044, 0.0212, 0.0162, 0.0064, 0.0569,
         0.0183, 0.0222, 0.0089, 0.0122, 0.0257, 0.0343, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0082],
        [0.0199],
        [0.0229],
        [0.0270],
        [0.0052],
        [0.0461],
        [0.0086],
        [0.0178],
        [0.0235],
        [0.0159],
        [0.0431],
        [0.0065],
        [0.0151],
        [0.0447],
        [0.0365],
        [0.0158]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0199, 0.0229, 0.0270, 0.0052, 0.0461, 0.0086, 0.0178, 0.0235,
         0.0159, 0.0431, 0.0065, 0.0151, 0.0447, 0.0365, 0.0158]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0284, 0.0090, 0.0082],
        [0.0318, 0.0114, 0.0199],
        [0.0637, 0.0150, 0.0229],
        [0.0991, 0.0243, 0.0270],
        [0.0091, 0.0044, 0.0052],
        [0.1354, 0.0212, 0.0461],
        [0.0397, 0.0162, 0.0086],
        [0.0574, 0.0064, 0.0178],
        [0.1306, 0.0569, 0.0235],
        [0.1191, 0.0183, 0.0159],
        [0.1434, 0.0222, 0.0431],
        [0.0236, 0.0089, 0.0065],
        [0.0445, 0.0122, 0.0151],
        [0.1477, 0.0257, 0.0447],
        [0.0797, 0.0343, 0.0365],
        [0.0217, 0.0108, 0.0158]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0260],
        [0.0292],
        [0.0192],
        [0.0194],
        [0.0831],
        [0.0329],
        [0.0167],
        [0.0089],
        [0.0277],
        [0.0294],
        [0.1210],
        [0.0467],
        [0.0412],
        [0.0822],
        [0.0191],
        [0.1371]], device='cuda:0', dtype=torch.float16)/tensor([[0.0260, 0.0292, 0.0192, 0.0194, 0.0831, 0.0329, 0.0167, 0.0089, 0.0277,
         0.0294, 0.1210, 0.0467, 0.0412, 0.0822, 0.0191, 0.1371]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0067],
        [0.0124],
        [0.0062],
        [0.0057],
        [0.0238],
        [0.0106],
        [0.0134],
        [0.0057],
        [0.0111],
        [0.0096],
        [0.0248],
        [0.0166],
        [0.0067],
        [0.0230],
        [0.0117],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0124, 0.0062, 0.0057, 0.0238, 0.0106, 0.0134, 0.0057, 0.0111,
         0.0096, 0.0248, 0.0166, 0.0067, 0.0230, 0.0117, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0052],
        [0.0142],
        [0.0077],
        [0.0129],
        [0.0477],
        [0.0116],
        [0.0083],
        [0.0083],
        [0.0151],
        [0.0164],
        [0.0585],
        [0.0202],
        [0.0111],
        [0.0416],
        [0.0128],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0142, 0.0077, 0.0129, 0.0477, 0.0116, 0.0083, 0.0083, 0.0151,
         0.0164, 0.0585, 0.0202, 0.0111, 0.0416, 0.0128, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0260, 0.0067, 0.0052],
        [0.0292, 0.0124, 0.0142],
        [0.0192, 0.0062, 0.0077],
        [0.0194, 0.0057, 0.0129],
        [0.0831, 0.0238, 0.0477],
        [0.0329, 0.0106, 0.0116],
        [0.0167, 0.0134, 0.0083],
        [0.0089, 0.0057, 0.0083],
        [0.0277, 0.0111, 0.0151],
        [0.0294, 0.0096, 0.0164],
        [0.1210, 0.0248, 0.0585],
        [0.0467, 0.0166, 0.0202],
        [0.0412, 0.0067, 0.0111],
        [0.0822, 0.0230, 0.0416],
        [0.0191, 0.0117, 0.0128],
        [0.1371, 0.0266, 0.0227]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0207],
        [0.0300],
        [0.0148],
        [0.1255],
        [0.0151],
        [0.0838],
        [0.0253],
        [0.0821],
        [0.0444],
        [0.0838],
        [0.0953],
        [0.0305],
        [0.0585],
        [0.0282],
        [0.0403],
        [0.0331]], device='cuda:0', dtype=torch.float16)/tensor([[0.0207, 0.0300, 0.0148, 0.1255, 0.0151, 0.0838, 0.0253, 0.0821, 0.0444,
         0.0838, 0.0953, 0.0305, 0.0585, 0.0282, 0.0403, 0.0331]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0069],
        [0.0114],
        [0.0059],
        [0.0222],
        [0.0054],
        [0.0233],
        [0.0040],
        [0.0382],
        [0.0053],
        [0.0246],
        [0.0132],
        [0.0081],
        [0.0072],
        [0.0068],
        [0.0143],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0114, 0.0059, 0.0222, 0.0054, 0.0233, 0.0040, 0.0382, 0.0053,
         0.0246, 0.0132, 0.0081, 0.0072, 0.0068, 0.0143, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0128],
        [0.0129],
        [0.0080],
        [0.0395],
        [0.0098],
        [0.0264],
        [0.0087],
        [0.0419],
        [0.0081],
        [0.0094],
        [0.0194],
        [0.0075],
        [0.0188],
        [0.0094],
        [0.0205],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0129, 0.0080, 0.0395, 0.0098, 0.0264, 0.0087, 0.0419, 0.0081,
         0.0094, 0.0194, 0.0075, 0.0188, 0.0094, 0.0205, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0207, 0.0069, 0.0128],
        [0.0300, 0.0114, 0.0129],
        [0.0148, 0.0059, 0.0080],
        [0.1255, 0.0222, 0.0395],
        [0.0151, 0.0054, 0.0098],
        [0.0838, 0.0233, 0.0264],
        [0.0253, 0.0040, 0.0087],
        [0.0821, 0.0382, 0.0419],
        [0.0444, 0.0053, 0.0081],
        [0.0838, 0.0246, 0.0094],
        [0.0953, 0.0132, 0.0194],
        [0.0305, 0.0081, 0.0075],
        [0.0585, 0.0072, 0.0188],
        [0.0282, 0.0068, 0.0094],
        [0.0403, 0.0143, 0.0205],
        [0.0331, 0.0112, 0.0149]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0671],
        [0.0428],
        [0.0412],
        [0.0161],
        [0.0551],
        [0.0914],
        [0.0242],
        [0.0370],
        [0.0447],
        [0.0255],
        [0.0295],
        [0.0156],
        [0.0518],
        [0.0533],
        [0.0375],
        [0.0645]], device='cuda:0', dtype=torch.float16)/tensor([[0.0671, 0.0428, 0.0412, 0.0161, 0.0551, 0.0914, 0.0242, 0.0370, 0.0447,
         0.0255, 0.0295, 0.0156, 0.0518, 0.0533, 0.0375, 0.0645]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0256],
        [0.0185],
        [0.0154],
        [0.0077],
        [0.0135],
        [0.0206],
        [0.0089],
        [0.0184],
        [0.0116],
        [0.0090],
        [0.0065],
        [0.0059],
        [0.0244],
        [0.0072],
        [0.0125],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0185, 0.0154, 0.0077, 0.0135, 0.0206, 0.0089, 0.0184, 0.0116,
         0.0090, 0.0065, 0.0059, 0.0244, 0.0072, 0.0125, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0489],
        [0.0271],
        [0.0252],
        [0.0062],
        [0.0200],
        [0.0217],
        [0.0074],
        [0.0220],
        [0.0147],
        [0.0037],
        [0.0037],
        [0.0048],
        [0.0262],
        [0.0220],
        [0.0215],
        [0.0154]], device='cuda:0', dtype=torch.float16)/tensor([[0.0489, 0.0271, 0.0252, 0.0062, 0.0200, 0.0217, 0.0074, 0.0220, 0.0147,
         0.0037, 0.0037, 0.0048, 0.0262, 0.0220, 0.0215, 0.0154]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0671, 0.0256, 0.0489],
        [0.0428, 0.0185, 0.0271],
        [0.0412, 0.0154, 0.0252],
        [0.0161, 0.0077, 0.0062],
        [0.0551, 0.0135, 0.0200],
        [0.0914, 0.0206, 0.0217],
        [0.0242, 0.0089, 0.0074],
        [0.0370, 0.0184, 0.0220],
        [0.0447, 0.0116, 0.0147],
        [0.0255, 0.0090, 0.0037],
        [0.0295, 0.0065, 0.0037],
        [0.0156, 0.0059, 0.0048],
        [0.0518, 0.0244, 0.0262],
        [0.0533, 0.0072, 0.0220],
        [0.0375, 0.0125, 0.0215],
        [0.0645, 0.0126, 0.0154]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1238],
        [0.0818],
        [0.1076],
        [0.0184],
        [0.0532],
        [0.0217],
        [0.0319],
        [0.0153],
        [0.0883],
        [0.0429],
        [0.0081],
        [0.0351],
        [0.0154],
        [0.0479],
        [0.0292],
        [0.0358]], device='cuda:0', dtype=torch.float16)/tensor([[0.1238, 0.0818, 0.1076, 0.0184, 0.0532, 0.0217, 0.0319, 0.0153, 0.0883,
         0.0429, 0.0081, 0.0351, 0.0154, 0.0479, 0.0292, 0.0358]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0223],
        [0.0132],
        [0.0340],
        [0.0052],
        [0.0180],
        [0.0074],
        [0.0141],
        [0.0046],
        [0.0387],
        [0.0085],
        [0.0032],
        [0.0054],
        [0.0077],
        [0.0104],
        [0.0130],
        [0.0072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0223, 0.0132, 0.0340, 0.0052, 0.0180, 0.0074, 0.0141, 0.0046, 0.0387,
         0.0085, 0.0032, 0.0054, 0.0077, 0.0104, 0.0130, 0.0072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0336],
        [0.0242],
        [0.0258],
        [0.0050],
        [0.0148],
        [0.0091],
        [0.0188],
        [0.0026],
        [0.0540],
        [0.0149],
        [0.0039],
        [0.0137],
        [0.0101],
        [0.0123],
        [0.0134],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0336, 0.0242, 0.0258, 0.0050, 0.0148, 0.0091, 0.0188, 0.0026, 0.0540,
         0.0149, 0.0039, 0.0137, 0.0101, 0.0123, 0.0134, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1238, 0.0223, 0.0336],
        [0.0818, 0.0132, 0.0242],
        [0.1076, 0.0340, 0.0258],
        [0.0184, 0.0052, 0.0050],
        [0.0532, 0.0180, 0.0148],
        [0.0217, 0.0074, 0.0091],
        [0.0319, 0.0141, 0.0188],
        [0.0153, 0.0046, 0.0026],
        [0.0883, 0.0387, 0.0540],
        [0.0429, 0.0085, 0.0149],
        [0.0081, 0.0032, 0.0039],
        [0.0351, 0.0054, 0.0137],
        [0.0154, 0.0077, 0.0101],
        [0.0479, 0.0104, 0.0123],
        [0.0292, 0.0130, 0.0134],
        [0.0358, 0.0072, 0.0123]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0175],
        [0.0200],
        [0.0279],
        [0.0630],
        [0.0161],
        [0.0089],
        [0.0748],
        [0.0314],
        [0.0461],
        [0.0221],
        [0.1121],
        [0.0199],
        [0.0956],
        [0.0243],
        [0.0367],
        [0.1370]], device='cuda:0', dtype=torch.float16)/tensor([[0.0175, 0.0200, 0.0279, 0.0630, 0.0161, 0.0089, 0.0748, 0.0314, 0.0461,
         0.0221, 0.1121, 0.0199, 0.0956, 0.0243, 0.0367, 0.1370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0128],
        [0.0067],
        [0.0109],
        [0.0169],
        [0.0095],
        [0.0042],
        [0.0426],
        [0.0113],
        [0.0145],
        [0.0097],
        [0.0304],
        [0.0146],
        [0.0360],
        [0.0070],
        [0.0105],
        [0.0225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0067, 0.0109, 0.0169, 0.0095, 0.0042, 0.0426, 0.0113, 0.0145,
         0.0097, 0.0304, 0.0146, 0.0360, 0.0070, 0.0105, 0.0225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0070],
        [0.0133],
        [0.0072],
        [0.0155],
        [0.0069],
        [0.0031],
        [0.0265],
        [0.0112],
        [0.0224],
        [0.0106],
        [0.0467],
        [0.0164],
        [0.0678],
        [0.0109],
        [0.0126],
        [0.0466]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0133, 0.0072, 0.0155, 0.0069, 0.0031, 0.0265, 0.0112, 0.0224,
         0.0106, 0.0467, 0.0164, 0.0678, 0.0109, 0.0126, 0.0466]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0175, 0.0128, 0.0070],
        [0.0200, 0.0067, 0.0133],
        [0.0279, 0.0109, 0.0072],
        [0.0630, 0.0169, 0.0155],
        [0.0161, 0.0095, 0.0069],
        [0.0089, 0.0042, 0.0031],
        [0.0748, 0.0426, 0.0265],
        [0.0314, 0.0113, 0.0112],
        [0.0461, 0.0145, 0.0224],
        [0.0221, 0.0097, 0.0106],
        [0.1121, 0.0304, 0.0467],
        [0.0199, 0.0146, 0.0164],
        [0.0956, 0.0360, 0.0678],
        [0.0243, 0.0070, 0.0109],
        [0.0367, 0.0105, 0.0126],
        [0.1370, 0.0225, 0.0466]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0124],
        [0.0448],
        [0.0150],
        [0.1210],
        [0.0285],
        [0.1293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0124, 0.0448, 0.0150, 0.1210, 0.0285, 0.1293]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0064],
        [0.0144],
        [0.0080],
        [0.0273],
        [0.0151],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0064, 0.0144, 0.0080, 0.0273, 0.0151, 0.0260]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0055],
        [0.0123],
        [0.0074],
        [0.0663],
        [0.0147],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0123, 0.0074, 0.0663, 0.0147, 0.0319]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0124, 0.0064, 0.0055],
        [0.0448, 0.0144, 0.0123],
        [0.0150, 0.0080, 0.0074],
        [0.1210, 0.0273, 0.0663],
        [0.0285, 0.0151, 0.0147],
        [0.1293, 0.0260, 0.0319]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type auxiliary, variation 1 and batchsize 16: 0:03:02.716479
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI auxiliary 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 326.00it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0641],
        [0.0762],
        [0.0632],
        [0.0522],
        [0.0459],
        [0.0287],
        [0.0859],
        [0.0449],
        [0.0268],
        [0.0418],
        [0.0806],
        [0.0620],
        [0.0492],
        [0.0427],
        [0.0524],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0641, 0.0762, 0.0632, 0.0522, 0.0459, 0.0287, 0.0859, 0.0449, 0.0268,
         0.0418, 0.0806, 0.0620, 0.0492, 0.0427, 0.0524, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0298],
        [0.0244],
        [0.0292],
        [0.0214],
        [0.0281],
        [0.0092],
        [0.0281],
        [0.0195],
        [0.0115],
        [0.0378],
        [0.0198],
        [0.0246],
        [0.0124],
        [0.0155],
        [0.0193],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0298, 0.0244, 0.0292, 0.0214, 0.0281, 0.0092, 0.0281, 0.0195, 0.0115,
         0.0378, 0.0198, 0.0246, 0.0124, 0.0155, 0.0193, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0357],
        [0.0395],
        [0.0344],
        [0.0139],
        [0.0283],
        [0.0113],
        [0.0316],
        [0.0156],
        [0.0102],
        [0.0345],
        [0.0264],
        [0.0148],
        [0.0224],
        [0.0320],
        [0.0263],
        [0.0140]], device='cuda:0', dtype=torch.float16)/tensor([[0.0357, 0.0395, 0.0344, 0.0139, 0.0283, 0.0113, 0.0316, 0.0156, 0.0102,
         0.0345, 0.0264, 0.0148, 0.0224, 0.0320, 0.0263, 0.0140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0641, 0.0298, 0.0357],
        [0.0762, 0.0244, 0.0395],
        [0.0632, 0.0292, 0.0344],
        [0.0522, 0.0214, 0.0139],
        [0.0459, 0.0281, 0.0283],
        [0.0287, 0.0092, 0.0113],
        [0.0859, 0.0281, 0.0316],
        [0.0449, 0.0195, 0.0156],
        [0.0268, 0.0115, 0.0102],
        [0.0418, 0.0378, 0.0345],
        [0.0806, 0.0198, 0.0264],
        [0.0620, 0.0246, 0.0148],
        [0.0492, 0.0124, 0.0224],
        [0.0427, 0.0155, 0.0320],
        [0.0524, 0.0193, 0.0263],
        [0.0293, 0.0121, 0.0140]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0781],
        [0.0376],
        [0.0399],
        [0.0455],
        [0.0363],
        [0.0716],
        [0.0416],
        [0.0507],
        [0.0370],
        [0.0388],
        [0.0662],
        [0.0474],
        [0.0528],
        [0.0717],
        [0.0622],
        [0.0514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0781, 0.0376, 0.0399, 0.0455, 0.0363, 0.0716, 0.0416, 0.0507, 0.0370,
         0.0388, 0.0662, 0.0474, 0.0528, 0.0717, 0.0622, 0.0514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0163],
        [0.0172],
        [0.0207],
        [0.0167],
        [0.0165],
        [0.0177],
        [0.0168],
        [0.0201],
        [0.0231],
        [0.0346],
        [0.0309],
        [0.0289],
        [0.0272],
        [0.0255],
        [0.0131],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0163, 0.0172, 0.0207, 0.0167, 0.0165, 0.0177, 0.0168, 0.0201, 0.0231,
         0.0346, 0.0309, 0.0289, 0.0272, 0.0255, 0.0131, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0381],
        [0.0213],
        [0.0145],
        [0.0230],
        [0.0227],
        [0.0242],
        [0.0218],
        [0.0230],
        [0.0227],
        [0.0356],
        [0.0219],
        [0.0383],
        [0.0330],
        [0.0184],
        [0.0197],
        [0.0197]], device='cuda:0', dtype=torch.float16)/tensor([[0.0381, 0.0213, 0.0145, 0.0230, 0.0227, 0.0242, 0.0218, 0.0230, 0.0227,
         0.0356, 0.0219, 0.0383, 0.0330, 0.0184, 0.0197, 0.0197]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0781, 0.0163, 0.0381],
        [0.0376, 0.0172, 0.0213],
        [0.0399, 0.0207, 0.0145],
        [0.0455, 0.0167, 0.0230],
        [0.0363, 0.0165, 0.0227],
        [0.0716, 0.0177, 0.0242],
        [0.0416, 0.0168, 0.0218],
        [0.0507, 0.0201, 0.0230],
        [0.0370, 0.0231, 0.0227],
        [0.0388, 0.0346, 0.0356],
        [0.0662, 0.0309, 0.0219],
        [0.0474, 0.0289, 0.0383],
        [0.0528, 0.0272, 0.0330],
        [0.0717, 0.0255, 0.0184],
        [0.0622, 0.0131, 0.0197],
        [0.0514, 0.0119, 0.0197]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0456],
        [0.0489],
        [0.0284],
        [0.0421],
        [0.0689],
        [0.0459],
        [0.0449],
        [0.0690],
        [0.0663],
        [0.0129],
        [0.0471],
        [0.0336],
        [0.0830],
        [0.0679],
        [0.0545],
        [0.0592]], device='cuda:0', dtype=torch.float16)/tensor([[0.0456, 0.0489, 0.0284, 0.0421, 0.0689, 0.0459, 0.0449, 0.0690, 0.0663,
         0.0129, 0.0471, 0.0336, 0.0830, 0.0679, 0.0545, 0.0592]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0256],
        [0.0281],
        [0.0100],
        [0.0203],
        [0.0216],
        [0.0242],
        [0.0184],
        [0.0206],
        [0.0193],
        [0.0110],
        [0.0302],
        [0.0133],
        [0.0380],
        [0.0172],
        [0.0249],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0281, 0.0100, 0.0203, 0.0216, 0.0242, 0.0184, 0.0206, 0.0193,
         0.0110, 0.0302, 0.0133, 0.0380, 0.0172, 0.0249, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0409],
        [0.0323],
        [0.0092],
        [0.0265],
        [0.0219],
        [0.0381],
        [0.0191],
        [0.0350],
        [0.0266],
        [0.0145],
        [0.0471],
        [0.0184],
        [0.0515],
        [0.0349],
        [0.0244],
        [0.0271]], device='cuda:0', dtype=torch.float16)/tensor([[0.0409, 0.0323, 0.0092, 0.0265, 0.0219, 0.0381, 0.0191, 0.0350, 0.0266,
         0.0145, 0.0471, 0.0184, 0.0515, 0.0349, 0.0244, 0.0271]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0456, 0.0256, 0.0409],
        [0.0489, 0.0281, 0.0323],
        [0.0284, 0.0100, 0.0092],
        [0.0421, 0.0203, 0.0265],
        [0.0689, 0.0216, 0.0219],
        [0.0459, 0.0242, 0.0381],
        [0.0449, 0.0184, 0.0191],
        [0.0690, 0.0206, 0.0350],
        [0.0663, 0.0193, 0.0266],
        [0.0129, 0.0110, 0.0145],
        [0.0471, 0.0302, 0.0471],
        [0.0336, 0.0133, 0.0184],
        [0.0830, 0.0380, 0.0515],
        [0.0679, 0.0172, 0.0349],
        [0.0545, 0.0249, 0.0244],
        [0.0592, 0.0210, 0.0271]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0860],
        [0.0449],
        [0.0610],
        [0.0370],
        [0.0723],
        [0.1003],
        [0.0257],
        [0.0393],
        [0.0366],
        [0.0377],
        [0.0262],
        [0.0489],
        [0.0987],
        [0.0533],
        [0.0316],
        [0.0570]], device='cuda:0', dtype=torch.float16)/tensor([[0.0860, 0.0449, 0.0610, 0.0370, 0.0723, 0.1003, 0.0257, 0.0393, 0.0366,
         0.0377, 0.0262, 0.0489, 0.0987, 0.0533, 0.0316, 0.0570]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0226],
        [0.0205],
        [0.0187],
        [0.0204],
        [0.0212],
        [0.0311],
        [0.0153],
        [0.0067],
        [0.0168],
        [0.0213],
        [0.0147],
        [0.0242],
        [0.0276],
        [0.0252],
        [0.0266],
        [0.0196]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0205, 0.0187, 0.0204, 0.0212, 0.0311, 0.0153, 0.0067, 0.0168,
         0.0213, 0.0147, 0.0242, 0.0276, 0.0252, 0.0266, 0.0196]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0321],
        [0.0161],
        [0.0238],
        [0.0197],
        [0.0231],
        [0.0250],
        [0.0129],
        [0.0113],
        [0.0299],
        [0.0241],
        [0.0118],
        [0.0435],
        [0.0533],
        [0.0237],
        [0.0172],
        [0.0437]], device='cuda:0', dtype=torch.float16)/tensor([[0.0321, 0.0161, 0.0238, 0.0197, 0.0231, 0.0250, 0.0129, 0.0113, 0.0299,
         0.0241, 0.0118, 0.0435, 0.0533, 0.0237, 0.0172, 0.0437]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0860, 0.0226, 0.0321],
        [0.0449, 0.0205, 0.0161],
        [0.0610, 0.0187, 0.0238],
        [0.0370, 0.0204, 0.0197],
        [0.0723, 0.0212, 0.0231],
        [0.1003, 0.0311, 0.0250],
        [0.0257, 0.0153, 0.0129],
        [0.0393, 0.0067, 0.0113],
        [0.0366, 0.0168, 0.0299],
        [0.0377, 0.0213, 0.0241],
        [0.0262, 0.0147, 0.0118],
        [0.0489, 0.0242, 0.0435],
        [0.0987, 0.0276, 0.0533],
        [0.0533, 0.0252, 0.0237],
        [0.0316, 0.0266, 0.0172],
        [0.0570, 0.0196, 0.0437]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0641],
        [0.0398],
        [0.0949],
        [0.0372],
        [0.0217],
        [0.0750],
        [0.0487],
        [0.0590],
        [0.0973],
        [0.0589],
        [0.0558],
        [0.0602],
        [0.0273],
        [0.0536],
        [0.0262],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0641, 0.0398, 0.0949, 0.0372, 0.0217, 0.0750, 0.0487, 0.0590, 0.0973,
         0.0589, 0.0558, 0.0602, 0.0273, 0.0536, 0.0262, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0245],
        [0.0188],
        [0.0283],
        [0.0125],
        [0.0117],
        [0.0247],
        [0.0128],
        [0.0235],
        [0.0181],
        [0.0280],
        [0.0141],
        [0.0203],
        [0.0192],
        [0.0166],
        [0.0096],
        [0.0235]], device='cuda:0', dtype=torch.float16)/tensor([[0.0245, 0.0188, 0.0283, 0.0125, 0.0117, 0.0247, 0.0128, 0.0235, 0.0181,
         0.0280, 0.0141, 0.0203, 0.0192, 0.0166, 0.0096, 0.0235]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0451],
        [0.0143],
        [0.0415],
        [0.0180],
        [0.0179],
        [0.0296],
        [0.0258],
        [0.0216],
        [0.0311],
        [0.0369],
        [0.0189],
        [0.0256],
        [0.0096],
        [0.0300],
        [0.0131],
        [0.0252]], device='cuda:0', dtype=torch.float16)/tensor([[0.0451, 0.0143, 0.0415, 0.0180, 0.0179, 0.0296, 0.0258, 0.0216, 0.0311,
         0.0369, 0.0189, 0.0256, 0.0096, 0.0300, 0.0131, 0.0252]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0641, 0.0245, 0.0451],
        [0.0398, 0.0188, 0.0143],
        [0.0949, 0.0283, 0.0415],
        [0.0372, 0.0125, 0.0180],
        [0.0217, 0.0117, 0.0179],
        [0.0750, 0.0247, 0.0296],
        [0.0487, 0.0128, 0.0258],
        [0.0590, 0.0235, 0.0216],
        [0.0973, 0.0181, 0.0311],
        [0.0589, 0.0280, 0.0369],
        [0.0558, 0.0141, 0.0189],
        [0.0602, 0.0203, 0.0256],
        [0.0273, 0.0192, 0.0096],
        [0.0536, 0.0166, 0.0300],
        [0.0262, 0.0096, 0.0131],
        [0.0419, 0.0235, 0.0252]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0371],
        [0.0234],
        [0.0580],
        [0.0749],
        [0.0244],
        [0.0338],
        [0.0374],
        [0.0744],
        [0.0250],
        [0.0490],
        [0.0665],
        [0.0621],
        [0.0472],
        [0.0947],
        [0.0528],
        [0.0999]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0234, 0.0580, 0.0749, 0.0244, 0.0338, 0.0374, 0.0744, 0.0250,
         0.0490, 0.0665, 0.0621, 0.0472, 0.0947, 0.0528, 0.0999]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0113],
        [0.0149],
        [0.0315],
        [0.0113],
        [0.0263],
        [0.0179],
        [0.0190],
        [0.0109],
        [0.0168],
        [0.0201],
        [0.0247],
        [0.0186],
        [0.0271],
        [0.0148],
        [0.0281]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0113, 0.0149, 0.0315, 0.0113, 0.0263, 0.0179, 0.0190, 0.0109,
         0.0168, 0.0201, 0.0247, 0.0186, 0.0271, 0.0148, 0.0281]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0186],
        [0.0054],
        [0.0272],
        [0.0519],
        [0.0188],
        [0.0167],
        [0.0185],
        [0.0312],
        [0.0075],
        [0.0201],
        [0.0251],
        [0.0387],
        [0.0197],
        [0.0362],
        [0.0179],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0186, 0.0054, 0.0272, 0.0519, 0.0188, 0.0167, 0.0185, 0.0312, 0.0075,
         0.0201, 0.0251, 0.0387, 0.0197, 0.0362, 0.0179, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0371, 0.0134, 0.0186],
        [0.0234, 0.0113, 0.0054],
        [0.0580, 0.0149, 0.0272],
        [0.0749, 0.0315, 0.0519],
        [0.0244, 0.0113, 0.0188],
        [0.0338, 0.0263, 0.0167],
        [0.0374, 0.0179, 0.0185],
        [0.0744, 0.0190, 0.0312],
        [0.0250, 0.0109, 0.0075],
        [0.0490, 0.0168, 0.0201],
        [0.0665, 0.0201, 0.0251],
        [0.0621, 0.0247, 0.0387],
        [0.0472, 0.0186, 0.0197],
        [0.0947, 0.0271, 0.0362],
        [0.0528, 0.0148, 0.0179],
        [0.0999, 0.0281, 0.0303]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0418],
        [0.0573],
        [0.0573],
        [0.0678],
        [0.0398],
        [0.0592],
        [0.0455],
        [0.0178],
        [0.0829],
        [0.0704],
        [0.0453],
        [0.0528],
        [0.0527],
        [0.0706],
        [0.0845],
        [0.0725]], device='cuda:0', dtype=torch.float16)/tensor([[0.0418, 0.0573, 0.0573, 0.0678, 0.0398, 0.0592, 0.0455, 0.0178, 0.0829,
         0.0704, 0.0453, 0.0528, 0.0527, 0.0706, 0.0845, 0.0725]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0168],
        [0.0243],
        [0.0196],
        [0.0164],
        [0.0175],
        [0.0265],
        [0.0307],
        [0.0081],
        [0.0330],
        [0.0247],
        [0.0214],
        [0.0199],
        [0.0210],
        [0.0277],
        [0.0331],
        [0.0185]], device='cuda:0', dtype=torch.float16)/tensor([[0.0168, 0.0243, 0.0196, 0.0164, 0.0175, 0.0265, 0.0307, 0.0081, 0.0330,
         0.0247, 0.0214, 0.0199, 0.0210, 0.0277, 0.0331, 0.0185]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0107],
        [0.0370],
        [0.0153],
        [0.0266],
        [0.0246],
        [0.0396],
        [0.0194],
        [0.0087],
        [0.0437],
        [0.0495],
        [0.0250],
        [0.0275],
        [0.0195],
        [0.0245],
        [0.0482],
        [0.0472]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0370, 0.0153, 0.0266, 0.0246, 0.0396, 0.0194, 0.0087, 0.0437,
         0.0495, 0.0250, 0.0275, 0.0195, 0.0245, 0.0482, 0.0472]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0418, 0.0168, 0.0107],
        [0.0573, 0.0243, 0.0370],
        [0.0573, 0.0196, 0.0153],
        [0.0678, 0.0164, 0.0266],
        [0.0398, 0.0175, 0.0246],
        [0.0592, 0.0265, 0.0396],
        [0.0455, 0.0307, 0.0194],
        [0.0178, 0.0081, 0.0087],
        [0.0829, 0.0330, 0.0437],
        [0.0704, 0.0247, 0.0495],
        [0.0453, 0.0214, 0.0250],
        [0.0528, 0.0199, 0.0275],
        [0.0527, 0.0210, 0.0195],
        [0.0706, 0.0277, 0.0245],
        [0.0845, 0.0331, 0.0482],
        [0.0725, 0.0185, 0.0472]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0881],
        [0.0598],
        [0.0668],
        [0.0630],
        [0.0234],
        [0.0671],
        [0.0660],
        [0.0300],
        [0.0289],
        [0.0278],
        [0.0271],
        [0.1025],
        [0.0585],
        [0.0432],
        [0.0606],
        [0.0573]], device='cuda:0', dtype=torch.float16)/tensor([[0.0881, 0.0598, 0.0668, 0.0630, 0.0234, 0.0671, 0.0660, 0.0300, 0.0289,
         0.0278, 0.0271, 0.1025, 0.0585, 0.0432, 0.0606, 0.0573]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0327],
        [0.0238],
        [0.0139],
        [0.0269],
        [0.0266],
        [0.0336],
        [0.0216],
        [0.0099],
        [0.0159],
        [0.0085],
        [0.0146],
        [0.0267],
        [0.0253],
        [0.0260],
        [0.0164],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0327, 0.0238, 0.0139, 0.0269, 0.0266, 0.0336, 0.0216, 0.0099, 0.0159,
         0.0085, 0.0146, 0.0267, 0.0253, 0.0260, 0.0164, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0328],
        [0.0285],
        [0.0375],
        [0.0291],
        [0.0108],
        [0.0266],
        [0.0183],
        [0.0128],
        [0.0155],
        [0.0088],
        [0.0217],
        [0.0402],
        [0.0308],
        [0.0256],
        [0.0228],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0328, 0.0285, 0.0375, 0.0291, 0.0108, 0.0266, 0.0183, 0.0128, 0.0155,
         0.0088, 0.0217, 0.0402, 0.0308, 0.0256, 0.0228, 0.0304]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0881, 0.0327, 0.0328],
        [0.0598, 0.0238, 0.0285],
        [0.0668, 0.0139, 0.0375],
        [0.0630, 0.0269, 0.0291],
        [0.0234, 0.0266, 0.0108],
        [0.0671, 0.0336, 0.0266],
        [0.0660, 0.0216, 0.0183],
        [0.0300, 0.0099, 0.0128],
        [0.0289, 0.0159, 0.0155],
        [0.0278, 0.0085, 0.0088],
        [0.0271, 0.0146, 0.0217],
        [0.1025, 0.0267, 0.0402],
        [0.0585, 0.0253, 0.0308],
        [0.0432, 0.0260, 0.0256],
        [0.0606, 0.0164, 0.0228],
        [0.0573, 0.0178, 0.0304]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0230],
        [0.1055],
        [0.0987],
        [0.0429],
        [0.0687],
        [0.0747],
        [0.0438],
        [0.0410],
        [0.0688],
        [0.0296],
        [0.0547],
        [0.0464],
        [0.0569],
        [0.0588],
        [0.0395],
        [0.0320]], device='cuda:0', dtype=torch.float16)/tensor([[0.0230, 0.1055, 0.0987, 0.0429, 0.0687, 0.0747, 0.0438, 0.0410, 0.0688,
         0.0296, 0.0547, 0.0464, 0.0569, 0.0588, 0.0395, 0.0320]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0100],
        [0.0317],
        [0.0336],
        [0.0171],
        [0.0290],
        [0.0288],
        [0.0139],
        [0.0251],
        [0.0184],
        [0.0303],
        [0.0281],
        [0.0142],
        [0.0345],
        [0.0186],
        [0.0136],
        [0.0186]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0317, 0.0336, 0.0171, 0.0290, 0.0288, 0.0139, 0.0251, 0.0184,
         0.0303, 0.0281, 0.0142, 0.0345, 0.0186, 0.0136, 0.0186]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0116],
        [0.0337],
        [0.0224],
        [0.0267],
        [0.0390],
        [0.0271],
        [0.0152],
        [0.0249],
        [0.0234],
        [0.0132],
        [0.0565],
        [0.0212],
        [0.0268],
        [0.0190],
        [0.0307],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0337, 0.0224, 0.0267, 0.0390, 0.0271, 0.0152, 0.0249, 0.0234,
         0.0132, 0.0565, 0.0212, 0.0268, 0.0190, 0.0307, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0230, 0.0100, 0.0116],
        [0.1055, 0.0317, 0.0337],
        [0.0987, 0.0336, 0.0224],
        [0.0429, 0.0171, 0.0267],
        [0.0687, 0.0290, 0.0390],
        [0.0747, 0.0288, 0.0271],
        [0.0438, 0.0139, 0.0152],
        [0.0410, 0.0251, 0.0249],
        [0.0688, 0.0184, 0.0234],
        [0.0296, 0.0303, 0.0132],
        [0.0547, 0.0281, 0.0565],
        [0.0464, 0.0142, 0.0212],
        [0.0569, 0.0345, 0.0268],
        [0.0588, 0.0186, 0.0190],
        [0.0395, 0.0136, 0.0307],
        [0.0320, 0.0186, 0.0184]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0237],
        [0.0774],
        [0.0514],
        [0.0666],
        [0.1002],
        [0.0671],
        [0.0638],
        [0.0798],
        [0.0943],
        [0.0804],
        [0.0586],
        [0.0482],
        [0.0472],
        [0.0635],
        [0.0651],
        [0.0912]], device='cuda:0', dtype=torch.float16)/tensor([[0.0237, 0.0774, 0.0514, 0.0666, 0.1002, 0.0671, 0.0638, 0.0798, 0.0943,
         0.0804, 0.0586, 0.0482, 0.0472, 0.0635, 0.0651, 0.0912]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0124],
        [0.0253],
        [0.0209],
        [0.0238],
        [0.0391],
        [0.0250],
        [0.0209],
        [0.0352],
        [0.0191],
        [0.0312],
        [0.0185],
        [0.0138],
        [0.0240],
        [0.0305],
        [0.0349],
        [0.0379]], device='cuda:0', dtype=torch.float16)/tensor([[0.0124, 0.0253, 0.0209, 0.0238, 0.0391, 0.0250, 0.0209, 0.0352, 0.0191,
         0.0312, 0.0185, 0.0138, 0.0240, 0.0305, 0.0349, 0.0379]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0104],
        [0.0261],
        [0.0156],
        [0.0241],
        [0.0247],
        [0.0316],
        [0.0265],
        [0.0617],
        [0.0418],
        [0.0261],
        [0.0153],
        [0.0186],
        [0.0195],
        [0.0284],
        [0.0360],
        [0.0391]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0261, 0.0156, 0.0241, 0.0247, 0.0316, 0.0265, 0.0617, 0.0418,
         0.0261, 0.0153, 0.0186, 0.0195, 0.0284, 0.0360, 0.0391]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0237, 0.0124, 0.0104],
        [0.0774, 0.0253, 0.0261],
        [0.0514, 0.0209, 0.0156],
        [0.0666, 0.0238, 0.0241],
        [0.1002, 0.0391, 0.0247],
        [0.0671, 0.0250, 0.0316],
        [0.0638, 0.0209, 0.0265],
        [0.0798, 0.0352, 0.0617],
        [0.0943, 0.0191, 0.0418],
        [0.0804, 0.0312, 0.0261],
        [0.0586, 0.0185, 0.0153],
        [0.0482, 0.0138, 0.0186],
        [0.0472, 0.0240, 0.0195],
        [0.0635, 0.0305, 0.0284],
        [0.0651, 0.0349, 0.0360],
        [0.0912, 0.0379, 0.0391]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0297],
        [0.0599],
        [0.0467],
        [0.0468],
        [0.0291],
        [0.0586],
        [0.0942],
        [0.0814],
        [0.0335],
        [0.0428],
        [0.0285],
        [0.0850],
        [0.0522],
        [0.0605],
        [0.0249],
        [0.0643]], device='cuda:0', dtype=torch.float16)/tensor([[0.0297, 0.0599, 0.0467, 0.0468, 0.0291, 0.0586, 0.0942, 0.0814, 0.0335,
         0.0428, 0.0285, 0.0850, 0.0522, 0.0605, 0.0249, 0.0643]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0145],
        [0.0312],
        [0.0180],
        [0.0184],
        [0.0164],
        [0.0197],
        [0.0210],
        [0.0285],
        [0.0109],
        [0.0257],
        [0.0085],
        [0.0263],
        [0.0230],
        [0.0180],
        [0.0160],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.0312, 0.0180, 0.0184, 0.0164, 0.0197, 0.0210, 0.0285, 0.0109,
         0.0257, 0.0085, 0.0263, 0.0230, 0.0180, 0.0160, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0180],
        [0.0244],
        [0.0187],
        [0.0240],
        [0.0057],
        [0.0216],
        [0.0563],
        [0.0301],
        [0.0092],
        [0.0333],
        [0.0080],
        [0.0354],
        [0.0252],
        [0.0253],
        [0.0115],
        [0.0219]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0244, 0.0187, 0.0240, 0.0057, 0.0216, 0.0563, 0.0301, 0.0092,
         0.0333, 0.0080, 0.0354, 0.0252, 0.0253, 0.0115, 0.0219]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0297, 0.0145, 0.0180],
        [0.0599, 0.0312, 0.0244],
        [0.0467, 0.0180, 0.0187],
        [0.0468, 0.0184, 0.0240],
        [0.0291, 0.0164, 0.0057],
        [0.0586, 0.0197, 0.0216],
        [0.0942, 0.0210, 0.0563],
        [0.0814, 0.0285, 0.0301],
        [0.0335, 0.0109, 0.0092],
        [0.0428, 0.0257, 0.0333],
        [0.0285, 0.0085, 0.0080],
        [0.0850, 0.0263, 0.0354],
        [0.0522, 0.0230, 0.0252],
        [0.0605, 0.0180, 0.0253],
        [0.0249, 0.0160, 0.0115],
        [0.0643, 0.0206, 0.0219]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0279],
        [0.0790],
        [0.0609],
        [0.0712],
        [0.0477],
        [0.0516],
        [0.0486],
        [0.0724],
        [0.0384],
        [0.0972],
        [0.0797],
        [0.0879],
        [0.0804],
        [0.0345],
        [0.0569],
        [0.0692]], device='cuda:0', dtype=torch.float16)/tensor([[0.0279, 0.0790, 0.0609, 0.0712, 0.0477, 0.0516, 0.0486, 0.0724, 0.0384,
         0.0972, 0.0797, 0.0879, 0.0804, 0.0345, 0.0569, 0.0692]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0122],
        [0.0294],
        [0.0232],
        [0.0258],
        [0.0243],
        [0.0146],
        [0.0207],
        [0.0247],
        [0.0217],
        [0.0229],
        [0.0382],
        [0.0361],
        [0.0260],
        [0.0173],
        [0.0154],
        [0.0230]], device='cuda:0', dtype=torch.float16)/tensor([[0.0122, 0.0294, 0.0232, 0.0258, 0.0243, 0.0146, 0.0207, 0.0247, 0.0217,
         0.0229, 0.0382, 0.0361, 0.0260, 0.0173, 0.0154, 0.0230]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0183],
        [0.0352],
        [0.0355],
        [0.0199],
        [0.0238],
        [0.0227],
        [0.0241],
        [0.0287],
        [0.0183],
        [0.0477],
        [0.0565],
        [0.0501],
        [0.0413],
        [0.0169],
        [0.0139],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0183, 0.0352, 0.0355, 0.0199, 0.0238, 0.0227, 0.0241, 0.0287, 0.0183,
         0.0477, 0.0565, 0.0501, 0.0413, 0.0169, 0.0139, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0279, 0.0122, 0.0183],
        [0.0790, 0.0294, 0.0352],
        [0.0609, 0.0232, 0.0355],
        [0.0712, 0.0258, 0.0199],
        [0.0477, 0.0243, 0.0238],
        [0.0516, 0.0146, 0.0227],
        [0.0486, 0.0207, 0.0241],
        [0.0724, 0.0247, 0.0287],
        [0.0384, 0.0217, 0.0183],
        [0.0972, 0.0229, 0.0477],
        [0.0797, 0.0382, 0.0565],
        [0.0879, 0.0361, 0.0501],
        [0.0804, 0.0260, 0.0413],
        [0.0345, 0.0173, 0.0169],
        [0.0569, 0.0154, 0.0139],
        [0.0692, 0.0230, 0.0302]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0657],
        [0.0548],
        [0.0398],
        [0.0538],
        [0.0469],
        [0.0659]], device='cuda:0', dtype=torch.float16)/tensor([[0.0657, 0.0548, 0.0398, 0.0538, 0.0469, 0.0659]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0238],
        [0.0182],
        [0.0211],
        [0.0249],
        [0.0135],
        [0.0235]], device='cuda:0', dtype=torch.float16)/tensor([[0.0238, 0.0182, 0.0211, 0.0249, 0.0135, 0.0235]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0377],
        [0.0222],
        [0.0145],
        [0.0287],
        [0.0213],
        [0.0307]], device='cuda:0', dtype=torch.float16)/tensor([[0.0377, 0.0222, 0.0145, 0.0287, 0.0213, 0.0307]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0657, 0.0238, 0.0377],
        [0.0548, 0.0182, 0.0222],
        [0.0398, 0.0211, 0.0145],
        [0.0538, 0.0249, 0.0287],
        [0.0469, 0.0135, 0.0213],
        [0.0659, 0.0235, 0.0307]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type auxiliary, variation 2 and batchsize 16: 0:03:02.577905
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI auxiliary 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 328.55it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0077],
        [0.0142],
        [0.0234],
        [0.0155],
        [0.0425],
        [0.0166],
        [0.0142],
        [0.0111],
        [0.0081],
        [0.0154],
        [0.0133],
        [0.0105],
        [0.0357],
        [0.0137],
        [0.0223],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0142, 0.0234, 0.0155, 0.0425, 0.0166, 0.0142, 0.0111, 0.0081,
         0.0154, 0.0133, 0.0105, 0.0357, 0.0137, 0.0223, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0034],
        [0.0072],
        [0.0097],
        [0.0046],
        [0.0196],
        [0.0145],
        [0.0043],
        [0.0057],
        [0.0041],
        [0.0032],
        [0.0068],
        [0.0030],
        [0.0122],
        [0.0114],
        [0.0044],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0072, 0.0097, 0.0046, 0.0196, 0.0145, 0.0043, 0.0057, 0.0041,
         0.0032, 0.0068, 0.0030, 0.0122, 0.0114, 0.0044, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0023],
        [0.0057],
        [0.0067],
        [0.0040],
        [0.0199],
        [0.0119],
        [0.0066],
        [0.0035],
        [0.0010],
        [0.0094],
        [0.0045],
        [0.0039],
        [0.0116],
        [0.0078],
        [0.0048],
        [0.0037]], device='cuda:0', dtype=torch.float16)/tensor([[0.0023, 0.0057, 0.0067, 0.0040, 0.0199, 0.0119, 0.0066, 0.0035, 0.0010,
         0.0094, 0.0045, 0.0039, 0.0116, 0.0078, 0.0048, 0.0037]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0077, 0.0034, 0.0023],
        [0.0142, 0.0072, 0.0057],
        [0.0234, 0.0097, 0.0067],
        [0.0155, 0.0046, 0.0040],
        [0.0425, 0.0196, 0.0199],
        [0.0166, 0.0145, 0.0119],
        [0.0142, 0.0043, 0.0066],
        [0.0111, 0.0057, 0.0035],
        [0.0081, 0.0041, 0.0010],
        [0.0154, 0.0032, 0.0094],
        [0.0133, 0.0068, 0.0045],
        [0.0105, 0.0030, 0.0039],
        [0.0357, 0.0122, 0.0116],
        [0.0137, 0.0114, 0.0078],
        [0.0223, 0.0044, 0.0048],
        [0.0169, 0.0036, 0.0037]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0200],
        [0.0103],
        [0.0126],
        [0.0123],
        [0.0242],
        [0.0069],
        [0.0097],
        [0.0131],
        [0.0109],
        [0.0507],
        [0.0110],
        [0.0105],
        [0.0191],
        [0.0103],
        [0.0161],
        [0.0145]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0103, 0.0126, 0.0123, 0.0242, 0.0069, 0.0097, 0.0131, 0.0109,
         0.0507, 0.0110, 0.0105, 0.0191, 0.0103, 0.0161, 0.0145]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0027],
        [0.0052],
        [0.0063],
        [0.0042],
        [0.0073],
        [0.0089],
        [0.0047],
        [0.0064],
        [0.0032],
        [0.0066],
        [0.0040],
        [0.0031],
        [0.0205],
        [0.0046],
        [0.0063],
        [0.0086]], device='cuda:0', dtype=torch.float16)/tensor([[0.0027, 0.0052, 0.0063, 0.0042, 0.0073, 0.0089, 0.0047, 0.0064, 0.0032,
         0.0066, 0.0040, 0.0031, 0.0205, 0.0046, 0.0063, 0.0086]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0056],
        [0.0025],
        [0.0076],
        [0.0034],
        [0.0045],
        [0.0080],
        [0.0029],
        [0.0049],
        [0.0073],
        [0.0173],
        [0.0036],
        [0.0016],
        [0.0083],
        [0.0041],
        [0.0050],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0056, 0.0025, 0.0076, 0.0034, 0.0045, 0.0080, 0.0029, 0.0049, 0.0073,
         0.0173, 0.0036, 0.0016, 0.0083, 0.0041, 0.0050, 0.0132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0200, 0.0027, 0.0056],
        [0.0103, 0.0052, 0.0025],
        [0.0126, 0.0063, 0.0076],
        [0.0123, 0.0042, 0.0034],
        [0.0242, 0.0073, 0.0045],
        [0.0069, 0.0089, 0.0080],
        [0.0097, 0.0047, 0.0029],
        [0.0131, 0.0064, 0.0049],
        [0.0109, 0.0032, 0.0073],
        [0.0507, 0.0066, 0.0173],
        [0.0110, 0.0040, 0.0036],
        [0.0105, 0.0031, 0.0016],
        [0.0191, 0.0205, 0.0083],
        [0.0103, 0.0046, 0.0041],
        [0.0161, 0.0063, 0.0050],
        [0.0145, 0.0086, 0.0132]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0088],
        [0.0086],
        [0.0121],
        [0.0178],
        [0.0167],
        [0.0091],
        [0.0121],
        [0.0332],
        [0.0130],
        [0.0131],
        [0.0231],
        [0.0462],
        [0.0152],
        [0.0270],
        [0.0390],
        [0.0067]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0086, 0.0121, 0.0178, 0.0167, 0.0091, 0.0121, 0.0332, 0.0130,
         0.0131, 0.0231, 0.0462, 0.0152, 0.0270, 0.0390, 0.0067]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0046],
        [0.0032],
        [0.0027],
        [0.0064],
        [0.0037],
        [0.0066],
        [0.0062],
        [0.0081],
        [0.0042],
        [0.0050],
        [0.0056],
        [0.0076],
        [0.0063],
        [0.0063],
        [0.0088],
        [0.0026]], device='cuda:0', dtype=torch.float16)/tensor([[0.0046, 0.0032, 0.0027, 0.0064, 0.0037, 0.0066, 0.0062, 0.0081, 0.0042,
         0.0050, 0.0056, 0.0076, 0.0063, 0.0063, 0.0088, 0.0026]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0042],
        [0.0041],
        [0.0032],
        [0.0110],
        [0.0056],
        [0.0071],
        [0.0057],
        [0.0156],
        [0.0033],
        [0.0040],
        [0.0057],
        [0.0112],
        [0.0032],
        [0.0119],
        [0.0076],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0042, 0.0041, 0.0032, 0.0110, 0.0056, 0.0071, 0.0057, 0.0156, 0.0033,
         0.0040, 0.0057, 0.0112, 0.0032, 0.0119, 0.0076, 0.0029]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0088, 0.0046, 0.0042],
        [0.0086, 0.0032, 0.0041],
        [0.0121, 0.0027, 0.0032],
        [0.0178, 0.0064, 0.0110],
        [0.0167, 0.0037, 0.0056],
        [0.0091, 0.0066, 0.0071],
        [0.0121, 0.0062, 0.0057],
        [0.0332, 0.0081, 0.0156],
        [0.0130, 0.0042, 0.0033],
        [0.0131, 0.0050, 0.0040],
        [0.0231, 0.0056, 0.0057],
        [0.0462, 0.0076, 0.0112],
        [0.0152, 0.0063, 0.0032],
        [0.0270, 0.0063, 0.0119],
        [0.0390, 0.0088, 0.0076],
        [0.0067, 0.0026, 0.0029]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0111],
        [0.0234],
        [0.0298],
        [0.0215],
        [0.0060],
        [0.0236],
        [0.0131],
        [0.0282],
        [0.0187],
        [0.0356],
        [0.0223],
        [0.0097],
        [0.0105],
        [0.0062],
        [0.0117],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.0234, 0.0298, 0.0215, 0.0060, 0.0236, 0.0131, 0.0282, 0.0187,
         0.0356, 0.0223, 0.0097, 0.0105, 0.0062, 0.0117, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0056],
        [0.0068],
        [0.0061],
        [0.0063],
        [0.0040],
        [0.0064],
        [0.0054],
        [0.0070],
        [0.0065],
        [0.0077],
        [0.0070],
        [0.0052],
        [0.0048],
        [0.0035],
        [0.0023],
        [0.0044]], device='cuda:0', dtype=torch.float16)/tensor([[0.0056, 0.0068, 0.0061, 0.0063, 0.0040, 0.0064, 0.0054, 0.0070, 0.0065,
         0.0077, 0.0070, 0.0052, 0.0048, 0.0035, 0.0023, 0.0044]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0053],
        [0.0059],
        [0.0086],
        [0.0073],
        [0.0020],
        [0.0093],
        [0.0035],
        [0.0080],
        [0.0067],
        [0.0171],
        [0.0042],
        [0.0061],
        [0.0027],
        [0.0025],
        [0.0058],
        [0.0158]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0059, 0.0086, 0.0073, 0.0020, 0.0093, 0.0035, 0.0080, 0.0067,
         0.0171, 0.0042, 0.0061, 0.0027, 0.0025, 0.0058, 0.0158]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0111, 0.0056, 0.0053],
        [0.0234, 0.0068, 0.0059],
        [0.0298, 0.0061, 0.0086],
        [0.0215, 0.0063, 0.0073],
        [0.0060, 0.0040, 0.0020],
        [0.0236, 0.0064, 0.0093],
        [0.0131, 0.0054, 0.0035],
        [0.0282, 0.0070, 0.0080],
        [0.0187, 0.0065, 0.0067],
        [0.0356, 0.0077, 0.0171],
        [0.0223, 0.0070, 0.0042],
        [0.0097, 0.0052, 0.0061],
        [0.0105, 0.0048, 0.0027],
        [0.0062, 0.0035, 0.0025],
        [0.0117, 0.0023, 0.0058],
        [0.0193, 0.0044, 0.0158]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0127],
        [0.0097],
        [0.0100],
        [0.0095],
        [0.0249],
        [0.0140],
        [0.0046],
        [0.0016],
        [0.0245],
        [0.0192],
        [0.0081],
        [0.0019],
        [0.0079],
        [0.0059],
        [0.0115],
        [0.0281]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0097, 0.0100, 0.0095, 0.0249, 0.0140, 0.0046, 0.0016, 0.0245,
         0.0192, 0.0081, 0.0019, 0.0079, 0.0059, 0.0115, 0.0281]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0071],
        [0.0068],
        [0.0069],
        [0.0039],
        [0.0112],
        [0.0063],
        [0.0033],
        [0.0012],
        [0.0060],
        [0.0040],
        [0.0051],
        [0.0020],
        [0.0040],
        [0.0047],
        [0.0015],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0071, 0.0068, 0.0069, 0.0039, 0.0112, 0.0063, 0.0033, 0.0012, 0.0060,
         0.0040, 0.0051, 0.0020, 0.0040, 0.0047, 0.0015, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0118],
        [0.0041],
        [0.0024],
        [0.0038],
        [0.0088],
        [0.0032],
        [0.0020],
        [0.0012],
        [0.0081],
        [0.0052],
        [0.0033],
        [0.0006],
        [0.0038],
        [0.0027],
        [0.0031],
        [0.0134]], device='cuda:0', dtype=torch.float16)/tensor([[0.0118, 0.0041, 0.0024, 0.0038, 0.0088, 0.0032, 0.0020, 0.0012, 0.0081,
         0.0052, 0.0033, 0.0006, 0.0038, 0.0027, 0.0031, 0.0134]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0127, 0.0071, 0.0118],
        [0.0097, 0.0068, 0.0041],
        [0.0100, 0.0069, 0.0024],
        [0.0095, 0.0039, 0.0038],
        [0.0249, 0.0112, 0.0088],
        [0.0140, 0.0063, 0.0032],
        [0.0046, 0.0033, 0.0020],
        [0.0016, 0.0012, 0.0012],
        [0.0245, 0.0060, 0.0081],
        [0.0192, 0.0040, 0.0052],
        [0.0081, 0.0051, 0.0033],
        [0.0019, 0.0020, 0.0006],
        [0.0079, 0.0040, 0.0038],
        [0.0059, 0.0047, 0.0027],
        [0.0115, 0.0015, 0.0031],
        [0.0281, 0.0062, 0.0134]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0102],
        [0.0149],
        [0.0212],
        [0.0262],
        [0.0068],
        [0.0066],
        [0.0084],
        [0.0279],
        [0.0065],
        [0.0130],
        [0.0070],
        [0.0062],
        [0.0189],
        [0.0250],
        [0.0140],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0149, 0.0212, 0.0262, 0.0068, 0.0066, 0.0084, 0.0279, 0.0065,
         0.0130, 0.0070, 0.0062, 0.0189, 0.0250, 0.0140, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0080],
        [0.0162],
        [0.0050],
        [0.0045],
        [0.0067],
        [0.0047],
        [0.0094],
        [0.0028],
        [0.0121],
        [0.0023],
        [0.0037],
        [0.0084],
        [0.0045],
        [0.0050],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0080, 0.0162, 0.0050, 0.0045, 0.0067, 0.0047, 0.0094, 0.0028,
         0.0121, 0.0023, 0.0037, 0.0084, 0.0045, 0.0050, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0104],
        [0.0080],
        [0.0084],
        [0.0110],
        [0.0044],
        [0.0035],
        [0.0030],
        [0.0075],
        [0.0034],
        [0.0073],
        [0.0033],
        [0.0026],
        [0.0059],
        [0.0102],
        [0.0033],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0080, 0.0084, 0.0110, 0.0044, 0.0035, 0.0030, 0.0075, 0.0034,
         0.0073, 0.0033, 0.0026, 0.0059, 0.0102, 0.0033, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0102, 0.0077, 0.0104],
        [0.0149, 0.0080, 0.0080],
        [0.0212, 0.0162, 0.0084],
        [0.0262, 0.0050, 0.0110],
        [0.0068, 0.0045, 0.0044],
        [0.0066, 0.0067, 0.0035],
        [0.0084, 0.0047, 0.0030],
        [0.0279, 0.0094, 0.0075],
        [0.0065, 0.0028, 0.0034],
        [0.0130, 0.0121, 0.0073],
        [0.0070, 0.0023, 0.0033],
        [0.0062, 0.0037, 0.0026],
        [0.0189, 0.0084, 0.0059],
        [0.0250, 0.0045, 0.0102],
        [0.0140, 0.0050, 0.0033],
        [0.0109, 0.0047, 0.0053]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0177],
        [0.0086],
        [0.0096],
        [0.0088],
        [0.0144],
        [0.0087],
        [0.0089],
        [0.0176],
        [0.0168],
        [0.0071],
        [0.0180],
        [0.0210],
        [0.0209],
        [0.0268],
        [0.0206],
        [0.0130]], device='cuda:0', dtype=torch.float16)/tensor([[0.0177, 0.0086, 0.0096, 0.0088, 0.0144, 0.0087, 0.0089, 0.0176, 0.0168,
         0.0071, 0.0180, 0.0210, 0.0209, 0.0268, 0.0206, 0.0130]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0093],
        [0.0028],
        [0.0051],
        [0.0075],
        [0.0076],
        [0.0107],
        [0.0041],
        [0.0102],
        [0.0058],
        [0.0043],
        [0.0055],
        [0.0043],
        [0.0069],
        [0.0078],
        [0.0052],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0093, 0.0028, 0.0051, 0.0075, 0.0076, 0.0107, 0.0041, 0.0102, 0.0058,
         0.0043, 0.0055, 0.0043, 0.0069, 0.0078, 0.0052, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0062],
        [0.0022],
        [0.0046],
        [0.0037],
        [0.0074],
        [0.0076],
        [0.0027],
        [0.0092],
        [0.0063],
        [0.0028],
        [0.0029],
        [0.0077],
        [0.0057],
        [0.0082],
        [0.0087],
        [0.0028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0022, 0.0046, 0.0037, 0.0074, 0.0076, 0.0027, 0.0092, 0.0063,
         0.0028, 0.0029, 0.0077, 0.0057, 0.0082, 0.0087, 0.0028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0177, 0.0093, 0.0062],
        [0.0086, 0.0028, 0.0022],
        [0.0096, 0.0051, 0.0046],
        [0.0088, 0.0075, 0.0037],
        [0.0144, 0.0076, 0.0074],
        [0.0087, 0.0107, 0.0076],
        [0.0089, 0.0041, 0.0027],
        [0.0176, 0.0102, 0.0092],
        [0.0168, 0.0058, 0.0063],
        [0.0071, 0.0043, 0.0028],
        [0.0180, 0.0055, 0.0029],
        [0.0210, 0.0043, 0.0077],
        [0.0209, 0.0069, 0.0057],
        [0.0268, 0.0078, 0.0082],
        [0.0206, 0.0052, 0.0087],
        [0.0130, 0.0027, 0.0028]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0025],
        [0.0129],
        [0.0035],
        [0.0059],
        [0.0100],
        [0.0132],
        [0.0064],
        [0.0238],
        [0.0176],
        [0.0107],
        [0.0087],
        [0.0149],
        [0.0100],
        [0.0245],
        [0.0138],
        [0.0044]], device='cuda:0', dtype=torch.float16)/tensor([[0.0025, 0.0129, 0.0035, 0.0059, 0.0100, 0.0132, 0.0064, 0.0238, 0.0176,
         0.0107, 0.0087, 0.0149, 0.0100, 0.0245, 0.0138, 0.0044]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0019],
        [0.0036],
        [0.0081],
        [0.0084],
        [0.0042],
        [0.0076],
        [0.0046],
        [0.0180],
        [0.0076],
        [0.0068],
        [0.0049],
        [0.0096],
        [0.0077],
        [0.0103],
        [0.0044],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0019, 0.0036, 0.0081, 0.0084, 0.0042, 0.0076, 0.0046, 0.0180, 0.0076,
         0.0068, 0.0049, 0.0096, 0.0077, 0.0103, 0.0044, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0011],
        [0.0036],
        [0.0015],
        [0.0041],
        [0.0031],
        [0.0090],
        [0.0053],
        [0.0060],
        [0.0061],
        [0.0066],
        [0.0038],
        [0.0086],
        [0.0041],
        [0.0076],
        [0.0055],
        [0.0017]], device='cuda:0', dtype=torch.float16)/tensor([[0.0011, 0.0036, 0.0015, 0.0041, 0.0031, 0.0090, 0.0053, 0.0060, 0.0061,
         0.0066, 0.0038, 0.0086, 0.0041, 0.0076, 0.0055, 0.0017]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0025, 0.0019, 0.0011],
        [0.0129, 0.0036, 0.0036],
        [0.0035, 0.0081, 0.0015],
        [0.0059, 0.0084, 0.0041],
        [0.0100, 0.0042, 0.0031],
        [0.0132, 0.0076, 0.0090],
        [0.0064, 0.0046, 0.0053],
        [0.0238, 0.0180, 0.0060],
        [0.0176, 0.0076, 0.0061],
        [0.0107, 0.0068, 0.0066],
        [0.0087, 0.0049, 0.0038],
        [0.0149, 0.0096, 0.0086],
        [0.0100, 0.0077, 0.0041],
        [0.0245, 0.0103, 0.0076],
        [0.0138, 0.0044, 0.0055],
        [0.0044, 0.0034, 0.0017]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0103],
        [0.0117],
        [0.0237],
        [0.0098],
        [0.0196],
        [0.0154],
        [0.0448],
        [0.0019],
        [0.0057],
        [0.0059],
        [0.0137],
        [0.0152],
        [0.0397],
        [0.0063],
        [0.0334],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0103, 0.0117, 0.0237, 0.0098, 0.0196, 0.0154, 0.0448, 0.0019, 0.0057,
         0.0059, 0.0137, 0.0152, 0.0397, 0.0063, 0.0334, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0048],
        [0.0036],
        [0.0091],
        [0.0071],
        [0.0053],
        [0.0052],
        [0.0125],
        [0.0011],
        [0.0042],
        [0.0043],
        [0.0049],
        [0.0048],
        [0.0106],
        [0.0037],
        [0.0114],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0048, 0.0036, 0.0091, 0.0071, 0.0053, 0.0052, 0.0125, 0.0011, 0.0042,
         0.0043, 0.0049, 0.0048, 0.0106, 0.0037, 0.0114, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0045],
        [0.0061],
        [0.0075],
        [0.0068],
        [0.0041],
        [0.0123],
        [0.0065],
        [0.0009],
        [0.0030],
        [0.0035],
        [0.0046],
        [0.0051],
        [0.0136],
        [0.0021],
        [0.0110],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0061, 0.0075, 0.0068, 0.0041, 0.0123, 0.0065, 0.0009, 0.0030,
         0.0035, 0.0046, 0.0051, 0.0136, 0.0021, 0.0110, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0103, 0.0048, 0.0045],
        [0.0117, 0.0036, 0.0061],
        [0.0237, 0.0091, 0.0075],
        [0.0098, 0.0071, 0.0068],
        [0.0196, 0.0053, 0.0041],
        [0.0154, 0.0052, 0.0123],
        [0.0448, 0.0125, 0.0065],
        [0.0019, 0.0011, 0.0009],
        [0.0057, 0.0042, 0.0030],
        [0.0059, 0.0043, 0.0035],
        [0.0137, 0.0049, 0.0046],
        [0.0152, 0.0048, 0.0051],
        [0.0397, 0.0106, 0.0136],
        [0.0063, 0.0037, 0.0021],
        [0.0334, 0.0114, 0.0110],
        [0.0036, 0.0025, 0.0031]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0133],
        [0.0181],
        [0.0118],
        [0.0150],
        [0.0142],
        [0.0090],
        [0.0141],
        [0.0064],
        [0.0083],
        [0.0083],
        [0.0466],
        [0.0067],
        [0.0082],
        [0.0173],
        [0.0329],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0181, 0.0118, 0.0150, 0.0142, 0.0090, 0.0141, 0.0064, 0.0083,
         0.0083, 0.0466, 0.0067, 0.0082, 0.0173, 0.0329, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0052],
        [0.0114],
        [0.0034],
        [0.0070],
        [0.0104],
        [0.0034],
        [0.0117],
        [0.0036],
        [0.0073],
        [0.0040],
        [0.0060],
        [0.0032],
        [0.0087],
        [0.0048],
        [0.0099],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0114, 0.0034, 0.0070, 0.0104, 0.0034, 0.0117, 0.0036, 0.0073,
         0.0040, 0.0060, 0.0032, 0.0087, 0.0048, 0.0099, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0027],
        [0.0184],
        [0.0029],
        [0.0079],
        [0.0059],
        [0.0024],
        [0.0032],
        [0.0042],
        [0.0034],
        [0.0026],
        [0.0125],
        [0.0035],
        [0.0041],
        [0.0041],
        [0.0128],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0027, 0.0184, 0.0029, 0.0079, 0.0059, 0.0024, 0.0032, 0.0042, 0.0034,
         0.0026, 0.0125, 0.0035, 0.0041, 0.0041, 0.0128, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0133, 0.0052, 0.0027],
        [0.0181, 0.0114, 0.0184],
        [0.0118, 0.0034, 0.0029],
        [0.0150, 0.0070, 0.0079],
        [0.0142, 0.0104, 0.0059],
        [0.0090, 0.0034, 0.0024],
        [0.0141, 0.0117, 0.0032],
        [0.0064, 0.0036, 0.0042],
        [0.0083, 0.0073, 0.0034],
        [0.0083, 0.0040, 0.0026],
        [0.0466, 0.0060, 0.0125],
        [0.0067, 0.0032, 0.0035],
        [0.0082, 0.0087, 0.0041],
        [0.0173, 0.0048, 0.0041],
        [0.0329, 0.0099, 0.0128],
        [0.0124, 0.0053, 0.0033]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0046],
        [0.0086],
        [0.0224],
        [0.0043],
        [0.0443],
        [0.0213],
        [0.0217],
        [0.0134],
        [0.0138],
        [0.0065],
        [0.0115],
        [0.0076],
        [0.0059],
        [0.0147],
        [0.0154],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0046, 0.0086, 0.0224, 0.0043, 0.0443, 0.0213, 0.0217, 0.0134, 0.0138,
         0.0065, 0.0115, 0.0076, 0.0059, 0.0147, 0.0154, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0038],
        [0.0034],
        [0.0045],
        [0.0059],
        [0.0104],
        [0.0068],
        [0.0101],
        [0.0031],
        [0.0051],
        [0.0030],
        [0.0040],
        [0.0039],
        [0.0025],
        [0.0061],
        [0.0032],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0034, 0.0045, 0.0059, 0.0104, 0.0068, 0.0101, 0.0031, 0.0051,
         0.0030, 0.0040, 0.0039, 0.0025, 0.0061, 0.0032, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0038],
        [0.0061],
        [0.0071],
        [0.0030],
        [0.0169],
        [0.0073],
        [0.0062],
        [0.0051],
        [0.0053],
        [0.0046],
        [0.0025],
        [0.0042],
        [0.0036],
        [0.0072],
        [0.0052],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0061, 0.0071, 0.0030, 0.0169, 0.0073, 0.0062, 0.0051, 0.0053,
         0.0046, 0.0025, 0.0042, 0.0036, 0.0072, 0.0052, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0046, 0.0038, 0.0038],
        [0.0086, 0.0034, 0.0061],
        [0.0224, 0.0045, 0.0071],
        [0.0043, 0.0059, 0.0030],
        [0.0443, 0.0104, 0.0169],
        [0.0213, 0.0068, 0.0073],
        [0.0217, 0.0101, 0.0062],
        [0.0134, 0.0031, 0.0051],
        [0.0138, 0.0051, 0.0053],
        [0.0065, 0.0030, 0.0046],
        [0.0115, 0.0040, 0.0025],
        [0.0076, 0.0039, 0.0042],
        [0.0059, 0.0025, 0.0036],
        [0.0147, 0.0061, 0.0072],
        [0.0154, 0.0032, 0.0052],
        [0.0109, 0.0034, 0.0033]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0127],
        [0.0275],
        [0.0059],
        [0.0124],
        [0.0140],
        [0.0320],
        [0.0201],
        [0.0059],
        [0.0068],
        [0.0085],
        [0.0060],
        [0.0142],
        [0.0076],
        [0.0095],
        [0.0050],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0275, 0.0059, 0.0124, 0.0140, 0.0320, 0.0201, 0.0059, 0.0068,
         0.0085, 0.0060, 0.0142, 0.0076, 0.0095, 0.0050, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0051],
        [0.0059],
        [0.0060],
        [0.0082],
        [0.0039],
        [0.0099],
        [0.0075],
        [0.0044],
        [0.0093],
        [0.0054],
        [0.0054],
        [0.0064],
        [0.0026],
        [0.0061],
        [0.0028],
        [0.0081]], device='cuda:0', dtype=torch.float16)/tensor([[0.0051, 0.0059, 0.0060, 0.0082, 0.0039, 0.0099, 0.0075, 0.0044, 0.0093,
         0.0054, 0.0054, 0.0064, 0.0026, 0.0061, 0.0028, 0.0081]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0044],
        [0.0087],
        [0.0048],
        [0.0047],
        [0.0039],
        [0.0141],
        [0.0055],
        [0.0017],
        [0.0029],
        [0.0047],
        [0.0042],
        [0.0064],
        [0.0057],
        [0.0080],
        [0.0033],
        [0.0080]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0087, 0.0048, 0.0047, 0.0039, 0.0141, 0.0055, 0.0017, 0.0029,
         0.0047, 0.0042, 0.0064, 0.0057, 0.0080, 0.0033, 0.0080]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0127, 0.0051, 0.0044],
        [0.0275, 0.0059, 0.0087],
        [0.0059, 0.0060, 0.0048],
        [0.0124, 0.0082, 0.0047],
        [0.0140, 0.0039, 0.0039],
        [0.0320, 0.0099, 0.0141],
        [0.0201, 0.0075, 0.0055],
        [0.0059, 0.0044, 0.0017],
        [0.0068, 0.0093, 0.0029],
        [0.0085, 0.0054, 0.0047],
        [0.0060, 0.0054, 0.0042],
        [0.0142, 0.0064, 0.0064],
        [0.0076, 0.0026, 0.0057],
        [0.0095, 0.0061, 0.0080],
        [0.0050, 0.0028, 0.0033],
        [0.0114, 0.0081, 0.0080]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0100],
        [0.0142],
        [0.0205],
        [0.0133],
        [0.0058],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0142, 0.0205, 0.0133, 0.0058, 0.0068]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0052],
        [0.0072],
        [0.0068],
        [0.0047],
        [0.0047],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0072, 0.0068, 0.0047, 0.0047, 0.0043]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0025],
        [0.0103],
        [0.0040],
        [0.0041],
        [0.0061],
        [0.0020]], device='cuda:0', dtype=torch.float16)/tensor([[0.0025, 0.0103, 0.0040, 0.0041, 0.0061, 0.0020]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0100, 0.0052, 0.0025],
        [0.0142, 0.0072, 0.0103],
        [0.0205, 0.0068, 0.0040],
        [0.0133, 0.0047, 0.0041],
        [0.0058, 0.0047, 0.0061],
        [0.0068, 0.0043, 0.0020]], device='cuda:0')
acc:  0.3787878787878788
Time taken to execute the en NLI task with prompt type auxiliary, variation 3 and batchsize 16: 0:03:02.621639
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI auxiliary 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 324.34it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0657],
        [0.0499],
        [0.0923],
        [0.0789],
        [0.0428],
        [0.0455],
        [0.0880],
        [0.0528],
        [0.0589],
        [0.0379],
        [0.0780],
        [0.0514],
        [0.0588],
        [0.0539],
        [0.0854],
        [0.0500]], device='cuda:0', dtype=torch.float16)/tensor([[0.0657, 0.0499, 0.0923, 0.0789, 0.0428, 0.0455, 0.0880, 0.0528, 0.0589,
         0.0379, 0.0780, 0.0514, 0.0588, 0.0539, 0.0854, 0.0500]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0224],
        [0.0218],
        [0.0251],
        [0.0345],
        [0.0294],
        [0.0230],
        [0.0299],
        [0.0224],
        [0.0135],
        [0.0211],
        [0.0151],
        [0.0102],
        [0.0114],
        [0.0125],
        [0.0302],
        [0.0270]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0218, 0.0251, 0.0345, 0.0294, 0.0230, 0.0299, 0.0224, 0.0135,
         0.0211, 0.0151, 0.0102, 0.0114, 0.0125, 0.0302, 0.0270]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0257],
        [0.0251],
        [0.0345],
        [0.0169],
        [0.0159],
        [0.0202],
        [0.0279],
        [0.0246],
        [0.0215],
        [0.0203],
        [0.0255],
        [0.0129],
        [0.0107],
        [0.0166],
        [0.0397],
        [0.0287]], device='cuda:0', dtype=torch.float16)/tensor([[0.0257, 0.0251, 0.0345, 0.0169, 0.0159, 0.0202, 0.0279, 0.0246, 0.0215,
         0.0203, 0.0255, 0.0129, 0.0107, 0.0166, 0.0397, 0.0287]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0657, 0.0224, 0.0257],
        [0.0499, 0.0218, 0.0251],
        [0.0923, 0.0251, 0.0345],
        [0.0789, 0.0345, 0.0169],
        [0.0428, 0.0294, 0.0159],
        [0.0455, 0.0230, 0.0202],
        [0.0880, 0.0299, 0.0279],
        [0.0528, 0.0224, 0.0246],
        [0.0589, 0.0135, 0.0215],
        [0.0379, 0.0211, 0.0203],
        [0.0780, 0.0151, 0.0255],
        [0.0514, 0.0102, 0.0129],
        [0.0588, 0.0114, 0.0107],
        [0.0539, 0.0125, 0.0166],
        [0.0854, 0.0302, 0.0397],
        [0.0500, 0.0270, 0.0287]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0762],
        [0.0701],
        [0.0446],
        [0.0344],
        [0.0547],
        [0.0419],
        [0.0859],
        [0.0554],
        [0.0889],
        [0.1212],
        [0.0406],
        [0.1009],
        [0.0655],
        [0.0538],
        [0.0561],
        [0.0848]], device='cuda:0', dtype=torch.float16)/tensor([[0.0762, 0.0701, 0.0446, 0.0344, 0.0547, 0.0419, 0.0859, 0.0554, 0.0889,
         0.1212, 0.0406, 0.1009, 0.0655, 0.0538, 0.0561, 0.0848]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0403],
        [0.0178],
        [0.0092],
        [0.0130],
        [0.0195],
        [0.0319],
        [0.0256],
        [0.0267],
        [0.0331],
        [0.0208],
        [0.0265],
        [0.0233],
        [0.0144],
        [0.0220],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0403, 0.0178, 0.0092, 0.0130, 0.0195, 0.0319, 0.0256, 0.0267,
         0.0331, 0.0208, 0.0265, 0.0233, 0.0144, 0.0220, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0336],
        [0.0180],
        [0.0146],
        [0.0081],
        [0.0241],
        [0.0221],
        [0.0290],
        [0.0504],
        [0.0271],
        [0.0573],
        [0.0122],
        [0.0305],
        [0.0391],
        [0.0152],
        [0.0298],
        [0.0223]], device='cuda:0', dtype=torch.float16)/tensor([[0.0336, 0.0180, 0.0146, 0.0081, 0.0241, 0.0221, 0.0290, 0.0504, 0.0271,
         0.0573, 0.0122, 0.0305, 0.0391, 0.0152, 0.0298, 0.0223]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0762, 0.0212, 0.0336],
        [0.0701, 0.0403, 0.0180],
        [0.0446, 0.0178, 0.0146],
        [0.0344, 0.0092, 0.0081],
        [0.0547, 0.0130, 0.0241],
        [0.0419, 0.0195, 0.0221],
        [0.0859, 0.0319, 0.0290],
        [0.0554, 0.0256, 0.0504],
        [0.0889, 0.0267, 0.0271],
        [0.1212, 0.0331, 0.0573],
        [0.0406, 0.0208, 0.0122],
        [0.1009, 0.0265, 0.0305],
        [0.0655, 0.0233, 0.0391],
        [0.0538, 0.0144, 0.0152],
        [0.0561, 0.0220, 0.0298],
        [0.0848, 0.0302, 0.0223]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0604],
        [0.0565],
        [0.0555],
        [0.0748],
        [0.0751],
        [0.0959],
        [0.0535],
        [0.0296],
        [0.1111],
        [0.0392],
        [0.0401],
        [0.0732],
        [0.0933],
        [0.0545],
        [0.0740],
        [0.0503]], device='cuda:0', dtype=torch.float16)/tensor([[0.0604, 0.0565, 0.0555, 0.0748, 0.0751, 0.0959, 0.0535, 0.0296, 0.1111,
         0.0392, 0.0401, 0.0732, 0.0933, 0.0545, 0.0740, 0.0503]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0082],
        [0.0243],
        [0.0229],
        [0.0151],
        [0.0143],
        [0.0177],
        [0.0145],
        [0.0304],
        [0.0334],
        [0.0097],
        [0.0135],
        [0.0269],
        [0.0265],
        [0.0162],
        [0.0270],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0243, 0.0229, 0.0151, 0.0143, 0.0177, 0.0145, 0.0304, 0.0334,
         0.0097, 0.0135, 0.0269, 0.0265, 0.0162, 0.0270, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0091],
        [0.0374],
        [0.0416],
        [0.0342],
        [0.0352],
        [0.0260],
        [0.0122],
        [0.0094],
        [0.0266],
        [0.0107],
        [0.0225],
        [0.0427],
        [0.0291],
        [0.0194],
        [0.0135],
        [0.0157]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0374, 0.0416, 0.0342, 0.0352, 0.0260, 0.0122, 0.0094, 0.0266,
         0.0107, 0.0225, 0.0427, 0.0291, 0.0194, 0.0135, 0.0157]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0604, 0.0082, 0.0091],
        [0.0565, 0.0243, 0.0374],
        [0.0555, 0.0229, 0.0416],
        [0.0748, 0.0151, 0.0342],
        [0.0751, 0.0143, 0.0352],
        [0.0959, 0.0177, 0.0260],
        [0.0535, 0.0145, 0.0122],
        [0.0296, 0.0304, 0.0094],
        [0.1111, 0.0334, 0.0266],
        [0.0392, 0.0097, 0.0107],
        [0.0401, 0.0135, 0.0225],
        [0.0732, 0.0269, 0.0427],
        [0.0933, 0.0265, 0.0291],
        [0.0545, 0.0162, 0.0194],
        [0.0740, 0.0270, 0.0135],
        [0.0503, 0.0096, 0.0157]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0734],
        [0.0479],
        [0.0595],
        [0.0455],
        [0.1081],
        [0.1154],
        [0.0463],
        [0.0720],
        [0.0282],
        [0.0391],
        [0.0690],
        [0.1075],
        [0.1564],
        [0.0416],
        [0.0713],
        [0.1203]], device='cuda:0', dtype=torch.float16)/tensor([[0.0734, 0.0479, 0.0595, 0.0455, 0.1081, 0.1154, 0.0463, 0.0720, 0.0282,
         0.0391, 0.0690, 0.1075, 0.1564, 0.0416, 0.0713, 0.1203]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0186],
        [0.0271],
        [0.0231],
        [0.0194],
        [0.0298],
        [0.0428],
        [0.0161],
        [0.0151],
        [0.0128],
        [0.0195],
        [0.0134],
        [0.0333],
        [0.0223],
        [0.0116],
        [0.0209],
        [0.0138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0186, 0.0271, 0.0231, 0.0194, 0.0298, 0.0428, 0.0161, 0.0151, 0.0128,
         0.0195, 0.0134, 0.0333, 0.0223, 0.0116, 0.0209, 0.0138]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0306],
        [0.0293],
        [0.0302],
        [0.0213],
        [0.0300],
        [0.0421],
        [0.0132],
        [0.0178],
        [0.0116],
        [0.0235],
        [0.0159],
        [0.0399],
        [0.0380],
        [0.0152],
        [0.0337],
        [0.0273]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0293, 0.0302, 0.0213, 0.0300, 0.0421, 0.0132, 0.0178, 0.0116,
         0.0235, 0.0159, 0.0399, 0.0380, 0.0152, 0.0337, 0.0273]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0734, 0.0186, 0.0306],
        [0.0479, 0.0271, 0.0293],
        [0.0595, 0.0231, 0.0302],
        [0.0455, 0.0194, 0.0213],
        [0.1081, 0.0298, 0.0300],
        [0.1154, 0.0428, 0.0421],
        [0.0463, 0.0161, 0.0132],
        [0.0720, 0.0151, 0.0178],
        [0.0282, 0.0128, 0.0116],
        [0.0391, 0.0195, 0.0235],
        [0.0690, 0.0134, 0.0159],
        [0.1075, 0.0333, 0.0399],
        [0.1564, 0.0223, 0.0380],
        [0.0416, 0.0116, 0.0152],
        [0.0713, 0.0209, 0.0337],
        [0.1203, 0.0138, 0.0273]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0504],
        [0.0538],
        [0.0809],
        [0.0804],
        [0.0498],
        [0.0396],
        [0.1005],
        [0.0532],
        [0.0778],
        [0.0471],
        [0.0784],
        [0.0825],
        [0.0309],
        [0.0720],
        [0.0936],
        [0.0897]], device='cuda:0', dtype=torch.float16)/tensor([[0.0504, 0.0538, 0.0809, 0.0804, 0.0498, 0.0396, 0.1005, 0.0532, 0.0778,
         0.0471, 0.0784, 0.0825, 0.0309, 0.0720, 0.0936, 0.0897]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0272],
        [0.0323],
        [0.0247],
        [0.0271],
        [0.0195],
        [0.0165],
        [0.0293],
        [0.0197],
        [0.0154],
        [0.0191],
        [0.0124],
        [0.0164],
        [0.0188],
        [0.0269],
        [0.0316],
        [0.0188]], device='cuda:0', dtype=torch.float16)/tensor([[0.0272, 0.0323, 0.0247, 0.0271, 0.0195, 0.0165, 0.0293, 0.0197, 0.0154,
         0.0191, 0.0124, 0.0164, 0.0188, 0.0269, 0.0316, 0.0188]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0299],
        [0.0295],
        [0.0300],
        [0.0357],
        [0.0284],
        [0.0186],
        [0.0331],
        [0.0154],
        [0.0327],
        [0.0362],
        [0.0153],
        [0.0172],
        [0.0146],
        [0.0241],
        [0.0210],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0299, 0.0295, 0.0300, 0.0357, 0.0284, 0.0186, 0.0331, 0.0154, 0.0327,
         0.0362, 0.0153, 0.0172, 0.0146, 0.0241, 0.0210, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0504, 0.0272, 0.0299],
        [0.0538, 0.0323, 0.0295],
        [0.0809, 0.0247, 0.0300],
        [0.0804, 0.0271, 0.0357],
        [0.0498, 0.0195, 0.0284],
        [0.0396, 0.0165, 0.0186],
        [0.1005, 0.0293, 0.0331],
        [0.0532, 0.0197, 0.0154],
        [0.0778, 0.0154, 0.0327],
        [0.0471, 0.0191, 0.0362],
        [0.0784, 0.0124, 0.0153],
        [0.0825, 0.0164, 0.0172],
        [0.0309, 0.0188, 0.0146],
        [0.0720, 0.0269, 0.0241],
        [0.0936, 0.0316, 0.0210],
        [0.0897, 0.0188, 0.0112]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0928],
        [0.0646],
        [0.0167],
        [0.0809],
        [0.0569],
        [0.0760],
        [0.0649],
        [0.0582],
        [0.0837],
        [0.0641],
        [0.0845],
        [0.0505],
        [0.0653],
        [0.0786],
        [0.0619],
        [0.1140]], device='cuda:0', dtype=torch.float16)/tensor([[0.0928, 0.0646, 0.0167, 0.0809, 0.0569, 0.0760, 0.0649, 0.0582, 0.0837,
         0.0641, 0.0845, 0.0505, 0.0653, 0.0786, 0.0619, 0.1140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0246],
        [0.0285],
        [0.0054],
        [0.0186],
        [0.0233],
        [0.0298],
        [0.0169],
        [0.0176],
        [0.0267],
        [0.0124],
        [0.0199],
        [0.0279],
        [0.0150],
        [0.0259],
        [0.0139],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0285, 0.0054, 0.0186, 0.0233, 0.0298, 0.0169, 0.0176, 0.0267,
         0.0124, 0.0199, 0.0279, 0.0150, 0.0259, 0.0139, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0372],
        [0.0285],
        [0.0062],
        [0.0334],
        [0.0267],
        [0.0226],
        [0.0097],
        [0.0155],
        [0.0389],
        [0.0184],
        [0.0311],
        [0.0176],
        [0.0119],
        [0.0330],
        [0.0198],
        [0.0359]], device='cuda:0', dtype=torch.float16)/tensor([[0.0372, 0.0285, 0.0062, 0.0334, 0.0267, 0.0226, 0.0097, 0.0155, 0.0389,
         0.0184, 0.0311, 0.0176, 0.0119, 0.0330, 0.0198, 0.0359]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0928, 0.0246, 0.0372],
        [0.0646, 0.0285, 0.0285],
        [0.0167, 0.0054, 0.0062],
        [0.0809, 0.0186, 0.0334],
        [0.0569, 0.0233, 0.0267],
        [0.0760, 0.0298, 0.0226],
        [0.0649, 0.0169, 0.0097],
        [0.0582, 0.0176, 0.0155],
        [0.0837, 0.0267, 0.0389],
        [0.0641, 0.0124, 0.0184],
        [0.0845, 0.0199, 0.0311],
        [0.0505, 0.0279, 0.0176],
        [0.0653, 0.0150, 0.0119],
        [0.0786, 0.0259, 0.0330],
        [0.0619, 0.0139, 0.0198],
        [0.1140, 0.0309, 0.0359]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0723],
        [0.0580],
        [0.0602],
        [0.0693],
        [0.0667],
        [0.0660],
        [0.0427],
        [0.0645],
        [0.0319],
        [0.0654],
        [0.0471],
        [0.0623],
        [0.0577],
        [0.0923],
        [0.0664],
        [0.0504]], device='cuda:0', dtype=torch.float16)/tensor([[0.0723, 0.0580, 0.0602, 0.0693, 0.0667, 0.0660, 0.0427, 0.0645, 0.0319,
         0.0654, 0.0471, 0.0623, 0.0577, 0.0923, 0.0664, 0.0504]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0214],
        [0.0061],
        [0.0164],
        [0.0269],
        [0.0167],
        [0.0159],
        [0.0210],
        [0.0286],
        [0.0209],
        [0.0099],
        [0.0121],
        [0.0155],
        [0.0139],
        [0.0251],
        [0.0237],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0061, 0.0164, 0.0269, 0.0167, 0.0159, 0.0210, 0.0286, 0.0209,
         0.0099, 0.0121, 0.0155, 0.0139, 0.0251, 0.0237, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0288],
        [0.0124],
        [0.0185],
        [0.0199],
        [0.0272],
        [0.0275],
        [0.0181],
        [0.0265],
        [0.0162],
        [0.0182],
        [0.0210],
        [0.0153],
        [0.0168],
        [0.0288],
        [0.0198],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0288, 0.0124, 0.0185, 0.0199, 0.0272, 0.0275, 0.0181, 0.0265, 0.0162,
         0.0182, 0.0210, 0.0153, 0.0168, 0.0288, 0.0198, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0723, 0.0214, 0.0288],
        [0.0580, 0.0061, 0.0124],
        [0.0602, 0.0164, 0.0185],
        [0.0693, 0.0269, 0.0199],
        [0.0667, 0.0167, 0.0272],
        [0.0660, 0.0159, 0.0275],
        [0.0427, 0.0210, 0.0181],
        [0.0645, 0.0286, 0.0265],
        [0.0319, 0.0209, 0.0162],
        [0.0654, 0.0099, 0.0182],
        [0.0471, 0.0121, 0.0210],
        [0.0623, 0.0155, 0.0153],
        [0.0577, 0.0139, 0.0168],
        [0.0923, 0.0251, 0.0288],
        [0.0664, 0.0237, 0.0198],
        [0.0504, 0.0177, 0.0210]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0492],
        [0.1038],
        [0.0743],
        [0.0531],
        [0.0450],
        [0.0996],
        [0.0671],
        [0.1188],
        [0.0638],
        [0.0648],
        [0.0526],
        [0.0642],
        [0.0955],
        [0.0861],
        [0.0380],
        [0.0975]], device='cuda:0', dtype=torch.float16)/tensor([[0.0492, 0.1038, 0.0743, 0.0531, 0.0450, 0.0996, 0.0671, 0.1188, 0.0638,
         0.0648, 0.0526, 0.0642, 0.0955, 0.0861, 0.0380, 0.0975]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0176],
        [0.0339],
        [0.0392],
        [0.0146],
        [0.0167],
        [0.0212],
        [0.0203],
        [0.0188],
        [0.0189],
        [0.0197],
        [0.0143],
        [0.0289],
        [0.0300],
        [0.0295],
        [0.0180],
        [0.0284]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0339, 0.0392, 0.0146, 0.0167, 0.0212, 0.0203, 0.0188, 0.0189,
         0.0197, 0.0143, 0.0289, 0.0300, 0.0295, 0.0180, 0.0284]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0067],
        [0.0388],
        [0.0430],
        [0.0170],
        [0.0192],
        [0.0463],
        [0.0351],
        [0.0263],
        [0.0214],
        [0.0185],
        [0.0157],
        [0.0170],
        [0.0310],
        [0.0479],
        [0.0126],
        [0.0436]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0388, 0.0430, 0.0170, 0.0192, 0.0463, 0.0351, 0.0263, 0.0214,
         0.0185, 0.0157, 0.0170, 0.0310, 0.0479, 0.0126, 0.0436]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0492, 0.0176, 0.0067],
        [0.1038, 0.0339, 0.0388],
        [0.0743, 0.0392, 0.0430],
        [0.0531, 0.0146, 0.0170],
        [0.0450, 0.0167, 0.0192],
        [0.0996, 0.0212, 0.0463],
        [0.0671, 0.0203, 0.0351],
        [0.1188, 0.0188, 0.0263],
        [0.0638, 0.0189, 0.0214],
        [0.0648, 0.0197, 0.0185],
        [0.0526, 0.0143, 0.0157],
        [0.0642, 0.0289, 0.0170],
        [0.0955, 0.0300, 0.0310],
        [0.0861, 0.0295, 0.0479],
        [0.0380, 0.0180, 0.0126],
        [0.0975, 0.0284, 0.0436]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0421],
        [0.0994],
        [0.0671],
        [0.0372],
        [0.0351],
        [0.0971],
        [0.0725],
        [0.0558],
        [0.0693],
        [0.0436],
        [0.0670],
        [0.0720],
        [0.0213],
        [0.0610],
        [0.0752],
        [0.0364]], device='cuda:0', dtype=torch.float16)/tensor([[0.0421, 0.0994, 0.0671, 0.0372, 0.0351, 0.0971, 0.0725, 0.0558, 0.0693,
         0.0436, 0.0670, 0.0720, 0.0213, 0.0610, 0.0752, 0.0364]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0267],
        [0.0125],
        [0.0220],
        [0.0119],
        [0.0280],
        [0.0109],
        [0.0215],
        [0.0472],
        [0.0168],
        [0.0350],
        [0.0154],
        [0.0156],
        [0.0275],
        [0.0246],
        [0.0090]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0267, 0.0125, 0.0220, 0.0119, 0.0280, 0.0109, 0.0215, 0.0472,
         0.0168, 0.0350, 0.0154, 0.0156, 0.0275, 0.0246, 0.0090]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0215],
        [0.0261],
        [0.0230],
        [0.0242],
        [0.0205],
        [0.0336],
        [0.0104],
        [0.0220],
        [0.0325],
        [0.0214],
        [0.0299],
        [0.0239],
        [0.0126],
        [0.0337],
        [0.0422],
        [0.0188]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0261, 0.0230, 0.0242, 0.0205, 0.0336, 0.0104, 0.0220, 0.0325,
         0.0214, 0.0299, 0.0239, 0.0126, 0.0337, 0.0422, 0.0188]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0421, 0.0133, 0.0215],
        [0.0994, 0.0267, 0.0261],
        [0.0671, 0.0125, 0.0230],
        [0.0372, 0.0220, 0.0242],
        [0.0351, 0.0119, 0.0205],
        [0.0971, 0.0280, 0.0336],
        [0.0725, 0.0109, 0.0104],
        [0.0558, 0.0215, 0.0220],
        [0.0693, 0.0472, 0.0325],
        [0.0436, 0.0168, 0.0214],
        [0.0670, 0.0350, 0.0299],
        [0.0720, 0.0154, 0.0239],
        [0.0213, 0.0156, 0.0126],
        [0.0610, 0.0275, 0.0337],
        [0.0752, 0.0246, 0.0422],
        [0.0364, 0.0090, 0.0188]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0936],
        [0.0535],
        [0.0662],
        [0.0706],
        [0.0526],
        [0.0629],
        [0.0517],
        [0.1102],
        [0.0878],
        [0.0640],
        [0.0586],
        [0.0591],
        [0.0345],
        [0.0859],
        [0.0822],
        [0.0412]], device='cuda:0', dtype=torch.float16)/tensor([[0.0936, 0.0535, 0.0662, 0.0706, 0.0526, 0.0629, 0.0517, 0.1102, 0.0878,
         0.0640, 0.0586, 0.0591, 0.0345, 0.0859, 0.0822, 0.0412]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0246],
        [0.0133],
        [0.0124],
        [0.0220],
        [0.0204],
        [0.0256],
        [0.0192],
        [0.0272],
        [0.0125],
        [0.0135],
        [0.0133],
        [0.0361],
        [0.0275],
        [0.0190],
        [0.0142],
        [0.0187]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0133, 0.0124, 0.0220, 0.0204, 0.0256, 0.0192, 0.0272, 0.0125,
         0.0135, 0.0133, 0.0361, 0.0275, 0.0190, 0.0142, 0.0187]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0384],
        [0.0147],
        [0.0227],
        [0.0384],
        [0.0158],
        [0.0283],
        [0.0198],
        [0.0369],
        [0.0244],
        [0.0172],
        [0.0270],
        [0.0239],
        [0.0183],
        [0.0174],
        [0.0510],
        [0.0102]], device='cuda:0', dtype=torch.float16)/tensor([[0.0384, 0.0147, 0.0227, 0.0384, 0.0158, 0.0283, 0.0198, 0.0369, 0.0244,
         0.0172, 0.0270, 0.0239, 0.0183, 0.0174, 0.0510, 0.0102]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0936, 0.0246, 0.0384],
        [0.0535, 0.0133, 0.0147],
        [0.0662, 0.0124, 0.0227],
        [0.0706, 0.0220, 0.0384],
        [0.0526, 0.0204, 0.0158],
        [0.0629, 0.0256, 0.0283],
        [0.0517, 0.0192, 0.0198],
        [0.1102, 0.0272, 0.0369],
        [0.0878, 0.0125, 0.0244],
        [0.0640, 0.0135, 0.0172],
        [0.0586, 0.0133, 0.0270],
        [0.0591, 0.0361, 0.0239],
        [0.0345, 0.0275, 0.0183],
        [0.0859, 0.0190, 0.0174],
        [0.0822, 0.0142, 0.0510],
        [0.0412, 0.0187, 0.0102]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0718],
        [0.0547],
        [0.0511],
        [0.0316],
        [0.0331],
        [0.0420],
        [0.0497],
        [0.0746],
        [0.0714],
        [0.0619],
        [0.0634],
        [0.0969],
        [0.0705],
        [0.1041],
        [0.0486],
        [0.0648]], device='cuda:0', dtype=torch.float16)/tensor([[0.0718, 0.0547, 0.0511, 0.0316, 0.0331, 0.0420, 0.0497, 0.0746, 0.0714,
         0.0619, 0.0634, 0.0969, 0.0705, 0.1041, 0.0486, 0.0648]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0345],
        [0.0136],
        [0.0148],
        [0.0162],
        [0.0122],
        [0.0133],
        [0.0231],
        [0.0257],
        [0.0139],
        [0.0125],
        [0.0399],
        [0.0300],
        [0.0205],
        [0.0202],
        [0.0209],
        [0.0250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0345, 0.0136, 0.0148, 0.0162, 0.0122, 0.0133, 0.0231, 0.0257, 0.0139,
         0.0125, 0.0399, 0.0300, 0.0205, 0.0202, 0.0209, 0.0250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0364],
        [0.0339],
        [0.0222],
        [0.0231],
        [0.0220],
        [0.0138],
        [0.0212],
        [0.0205],
        [0.0100],
        [0.0115],
        [0.0319],
        [0.0343],
        [0.0255],
        [0.0427],
        [0.0179],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0364, 0.0339, 0.0222, 0.0231, 0.0220, 0.0138, 0.0212, 0.0205, 0.0100,
         0.0115, 0.0319, 0.0343, 0.0255, 0.0427, 0.0179, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0718, 0.0345, 0.0364],
        [0.0547, 0.0136, 0.0339],
        [0.0511, 0.0148, 0.0222],
        [0.0316, 0.0162, 0.0231],
        [0.0331, 0.0122, 0.0220],
        [0.0420, 0.0133, 0.0138],
        [0.0497, 0.0231, 0.0212],
        [0.0746, 0.0257, 0.0205],
        [0.0714, 0.0139, 0.0100],
        [0.0619, 0.0125, 0.0115],
        [0.0634, 0.0399, 0.0319],
        [0.0969, 0.0300, 0.0343],
        [0.0705, 0.0205, 0.0255],
        [0.1041, 0.0202, 0.0427],
        [0.0486, 0.0209, 0.0179],
        [0.0648, 0.0250, 0.0177]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0801],
        [0.0938],
        [0.0957],
        [0.0912],
        [0.0599],
        [0.0766],
        [0.0629],
        [0.0473],
        [0.0758],
        [0.0753],
        [0.0607],
        [0.0522],
        [0.0591],
        [0.0634],
        [0.0530],
        [0.0718]], device='cuda:0', dtype=torch.float16)/tensor([[0.0801, 0.0938, 0.0957, 0.0912, 0.0599, 0.0766, 0.0629, 0.0473, 0.0758,
         0.0753, 0.0607, 0.0522, 0.0591, 0.0634, 0.0530, 0.0718]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0201],
        [0.0177],
        [0.0184],
        [0.0253],
        [0.0214],
        [0.0457],
        [0.0216],
        [0.0251],
        [0.0182],
        [0.0226],
        [0.0181],
        [0.0263],
        [0.0232],
        [0.0173],
        [0.0221],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0201, 0.0177, 0.0184, 0.0253, 0.0214, 0.0457, 0.0216, 0.0251, 0.0182,
         0.0226, 0.0181, 0.0263, 0.0232, 0.0173, 0.0221, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0416],
        [0.0350],
        [0.0222],
        [0.0371],
        [0.0199],
        [0.0198],
        [0.0391],
        [0.0213],
        [0.0136],
        [0.0290],
        [0.0255],
        [0.0368],
        [0.0198],
        [0.0173],
        [0.0198],
        [0.0219]], device='cuda:0', dtype=torch.float16)/tensor([[0.0416, 0.0350, 0.0222, 0.0371, 0.0199, 0.0198, 0.0391, 0.0213, 0.0136,
         0.0290, 0.0255, 0.0368, 0.0198, 0.0173, 0.0198, 0.0219]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0801, 0.0201, 0.0416],
        [0.0938, 0.0177, 0.0350],
        [0.0957, 0.0184, 0.0222],
        [0.0912, 0.0253, 0.0371],
        [0.0599, 0.0214, 0.0199],
        [0.0766, 0.0457, 0.0198],
        [0.0629, 0.0216, 0.0391],
        [0.0473, 0.0251, 0.0213],
        [0.0758, 0.0182, 0.0136],
        [0.0753, 0.0226, 0.0290],
        [0.0607, 0.0181, 0.0255],
        [0.0522, 0.0263, 0.0368],
        [0.0591, 0.0232, 0.0198],
        [0.0634, 0.0173, 0.0173],
        [0.0530, 0.0221, 0.0198],
        [0.0718, 0.0133, 0.0219]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0645],
        [0.0439],
        [0.0385],
        [0.0610],
        [0.0520],
        [0.0864]], device='cuda:0', dtype=torch.float16)/tensor([[0.0645, 0.0439, 0.0385, 0.0610, 0.0520, 0.0864]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0182],
        [0.0160],
        [0.0091],
        [0.0168],
        [0.0301],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0182, 0.0160, 0.0091, 0.0168, 0.0301, 0.0210]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0167],
        [0.0128],
        [0.0211],
        [0.0233],
        [0.0191],
        [0.0262]], device='cuda:0', dtype=torch.float16)/tensor([[0.0167, 0.0128, 0.0211, 0.0233, 0.0191, 0.0262]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0645, 0.0182, 0.0167],
        [0.0439, 0.0160, 0.0128],
        [0.0385, 0.0091, 0.0211],
        [0.0610, 0.0168, 0.0233],
        [0.0520, 0.0301, 0.0191],
        [0.0864, 0.0210, 0.0262]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type auxiliary, variation 4 and batchsize 16: 0:03:02.741604
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI auxiliary 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 346.33it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0278],
        [0.0652],
        [0.0150],
        [0.0303],
        [0.0238],
        [0.0372],
        [0.0720],
        [0.0367],
        [0.0502],
        [0.0518],
        [0.0318],
        [0.0589],
        [0.0264],
        [0.0140],
        [0.0264],
        [0.0543]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0652, 0.0150, 0.0303, 0.0238, 0.0372, 0.0720, 0.0367, 0.0502,
         0.0518, 0.0318, 0.0589, 0.0264, 0.0140, 0.0264, 0.0543]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0170],
        [0.0115],
        [0.0025],
        [0.0208],
        [0.0143],
        [0.0221],
        [0.0235],
        [0.0242],
        [0.0247],
        [0.0151],
        [0.0173],
        [0.0155],
        [0.0089],
        [0.0116],
        [0.0124],
        [0.0203]], device='cuda:0', dtype=torch.float16)/tensor([[0.0170, 0.0115, 0.0025, 0.0208, 0.0143, 0.0221, 0.0235, 0.0242, 0.0247,
         0.0151, 0.0173, 0.0155, 0.0089, 0.0116, 0.0124, 0.0203]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0074],
        [0.0122],
        [0.0038],
        [0.0157],
        [0.0089],
        [0.0113],
        [0.0161],
        [0.0075],
        [0.0121],
        [0.0136],
        [0.0075],
        [0.0116],
        [0.0074],
        [0.0060],
        [0.0089],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0074, 0.0122, 0.0038, 0.0157, 0.0089, 0.0113, 0.0161, 0.0075, 0.0121,
         0.0136, 0.0075, 0.0116, 0.0074, 0.0060, 0.0089, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0278, 0.0170, 0.0074],
        [0.0652, 0.0115, 0.0122],
        [0.0150, 0.0025, 0.0038],
        [0.0303, 0.0208, 0.0157],
        [0.0238, 0.0143, 0.0089],
        [0.0372, 0.0221, 0.0113],
        [0.0720, 0.0235, 0.0161],
        [0.0367, 0.0242, 0.0075],
        [0.0502, 0.0247, 0.0121],
        [0.0518, 0.0151, 0.0136],
        [0.0318, 0.0173, 0.0075],
        [0.0589, 0.0155, 0.0116],
        [0.0264, 0.0089, 0.0074],
        [0.0140, 0.0116, 0.0060],
        [0.0264, 0.0124, 0.0089],
        [0.0543, 0.0203, 0.0074]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0391],
        [0.0235],
        [0.0346],
        [0.0105],
        [0.0390],
        [0.0608],
        [0.0654],
        [0.0371],
        [0.0269],
        [0.0417],
        [0.0377],
        [0.1028],
        [0.0223],
        [0.0594],
        [0.0648],
        [0.0594]], device='cuda:0', dtype=torch.float16)/tensor([[0.0391, 0.0235, 0.0346, 0.0105, 0.0390, 0.0608, 0.0654, 0.0371, 0.0269,
         0.0417, 0.0377, 0.1028, 0.0223, 0.0594, 0.0648, 0.0594]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0142],
        [0.0119],
        [0.0136],
        [0.0090],
        [0.0133],
        [0.0185],
        [0.0177],
        [0.0139],
        [0.0091],
        [0.0105],
        [0.0184],
        [0.0189],
        [0.0102],
        [0.0130],
        [0.0192],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0119, 0.0136, 0.0090, 0.0133, 0.0185, 0.0177, 0.0139, 0.0091,
         0.0105, 0.0184, 0.0189, 0.0102, 0.0130, 0.0192, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0120],
        [0.0121],
        [0.0077],
        [0.0030],
        [0.0144],
        [0.0121],
        [0.0094],
        [0.0097],
        [0.0083],
        [0.0091],
        [0.0112],
        [0.0339],
        [0.0082],
        [0.0174],
        [0.0173],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0121, 0.0077, 0.0030, 0.0144, 0.0121, 0.0094, 0.0097, 0.0083,
         0.0091, 0.0112, 0.0339, 0.0082, 0.0174, 0.0173, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0391, 0.0142, 0.0120],
        [0.0235, 0.0119, 0.0121],
        [0.0346, 0.0136, 0.0077],
        [0.0105, 0.0090, 0.0030],
        [0.0390, 0.0133, 0.0144],
        [0.0608, 0.0185, 0.0121],
        [0.0654, 0.0177, 0.0094],
        [0.0371, 0.0139, 0.0097],
        [0.0269, 0.0091, 0.0083],
        [0.0417, 0.0105, 0.0091],
        [0.0377, 0.0184, 0.0112],
        [0.1028, 0.0189, 0.0339],
        [0.0223, 0.0102, 0.0082],
        [0.0594, 0.0130, 0.0174],
        [0.0648, 0.0192, 0.0173],
        [0.0594, 0.0169, 0.0085]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0279],
        [0.0248],
        [0.0136],
        [0.0411],
        [0.0345],
        [0.0224],
        [0.0574],
        [0.0519],
        [0.0660],
        [0.0051],
        [0.0426],
        [0.0544],
        [0.0249],
        [0.0372],
        [0.0384],
        [0.0837]], device='cuda:0', dtype=torch.float16)/tensor([[0.0279, 0.0248, 0.0136, 0.0411, 0.0345, 0.0224, 0.0574, 0.0519, 0.0660,
         0.0051, 0.0426, 0.0544, 0.0249, 0.0372, 0.0384, 0.0837]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.0110],
        [0.0079],
        [0.0054],
        [0.0077],
        [0.0152],
        [0.0085],
        [0.0251],
        [0.0158],
        [0.0023],
        [0.0180],
        [0.0211],
        [0.0193],
        [0.0104],
        [0.0137],
        [0.0357]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0110, 0.0079, 0.0054, 0.0077, 0.0152, 0.0085, 0.0251, 0.0158,
         0.0023, 0.0180, 0.0211, 0.0193, 0.0104, 0.0137, 0.0357]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0049],
        [0.0085],
        [0.0074],
        [0.0093],
        [0.0061],
        [0.0093],
        [0.0251],
        [0.0234],
        [0.0120],
        [0.0011],
        [0.0100],
        [0.0078],
        [0.0051],
        [0.0137],
        [0.0058],
        [0.0154]], device='cuda:0', dtype=torch.float16)/tensor([[0.0049, 0.0085, 0.0074, 0.0093, 0.0061, 0.0093, 0.0251, 0.0234, 0.0120,
         0.0011, 0.0100, 0.0078, 0.0051, 0.0137, 0.0058, 0.0154]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0279, 0.0053, 0.0049],
        [0.0248, 0.0110, 0.0085],
        [0.0136, 0.0079, 0.0074],
        [0.0411, 0.0054, 0.0093],
        [0.0345, 0.0077, 0.0061],
        [0.0224, 0.0152, 0.0093],
        [0.0574, 0.0085, 0.0251],
        [0.0519, 0.0251, 0.0234],
        [0.0660, 0.0158, 0.0120],
        [0.0051, 0.0023, 0.0011],
        [0.0426, 0.0180, 0.0100],
        [0.0544, 0.0211, 0.0078],
        [0.0249, 0.0193, 0.0051],
        [0.0372, 0.0104, 0.0137],
        [0.0384, 0.0137, 0.0058],
        [0.0837, 0.0357, 0.0154]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0278],
        [0.0746],
        [0.0526],
        [0.0397],
        [0.0815],
        [0.0345],
        [0.0477],
        [0.0142],
        [0.0441],
        [0.0206],
        [0.0160],
        [0.0512],
        [0.0138],
        [0.0467],
        [0.1063],
        [0.0389]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0746, 0.0526, 0.0397, 0.0815, 0.0345, 0.0477, 0.0142, 0.0441,
         0.0206, 0.0160, 0.0512, 0.0138, 0.0467, 0.1063, 0.0389]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0096],
        [0.0277],
        [0.0096],
        [0.0125],
        [0.0281],
        [0.0140],
        [0.0242],
        [0.0092],
        [0.0181],
        [0.0126],
        [0.0153],
        [0.0215],
        [0.0060],
        [0.0097],
        [0.0219],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0096, 0.0277, 0.0096, 0.0125, 0.0281, 0.0140, 0.0242, 0.0092, 0.0181,
         0.0126, 0.0153, 0.0215, 0.0060, 0.0097, 0.0219, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0055],
        [0.0187],
        [0.0087],
        [0.0151],
        [0.0159],
        [0.0063],
        [0.0200],
        [0.0053],
        [0.0156],
        [0.0038],
        [0.0015],
        [0.0113],
        [0.0053],
        [0.0190],
        [0.0226],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0187, 0.0087, 0.0151, 0.0159, 0.0063, 0.0200, 0.0053, 0.0156,
         0.0038, 0.0015, 0.0113, 0.0053, 0.0190, 0.0226, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0278, 0.0096, 0.0055],
        [0.0746, 0.0277, 0.0187],
        [0.0526, 0.0096, 0.0087],
        [0.0397, 0.0125, 0.0151],
        [0.0815, 0.0281, 0.0159],
        [0.0345, 0.0140, 0.0063],
        [0.0477, 0.0242, 0.0200],
        [0.0142, 0.0092, 0.0053],
        [0.0441, 0.0181, 0.0156],
        [0.0206, 0.0126, 0.0038],
        [0.0160, 0.0153, 0.0015],
        [0.0512, 0.0215, 0.0113],
        [0.0138, 0.0060, 0.0053],
        [0.0467, 0.0097, 0.0190],
        [0.1063, 0.0219, 0.0226],
        [0.0389, 0.0195, 0.0206]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0326],
        [0.0445],
        [0.0103],
        [0.0518],
        [0.0268],
        [0.0083],
        [0.0484],
        [0.0524],
        [0.0643],
        [0.0524],
        [0.0418],
        [0.0652],
        [0.0405],
        [0.0311],
        [0.0415],
        [0.0280]], device='cuda:0', dtype=torch.float16)/tensor([[0.0326, 0.0445, 0.0103, 0.0518, 0.0268, 0.0083, 0.0484, 0.0524, 0.0643,
         0.0524, 0.0418, 0.0652, 0.0405, 0.0311, 0.0415, 0.0280]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0150],
        [0.0120],
        [0.0041],
        [0.0216],
        [0.0144],
        [0.0096],
        [0.0123],
        [0.0213],
        [0.0304],
        [0.0121],
        [0.0120],
        [0.0333],
        [0.0160],
        [0.0207],
        [0.0099],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0120, 0.0041, 0.0216, 0.0144, 0.0096, 0.0123, 0.0213, 0.0304,
         0.0121, 0.0120, 0.0333, 0.0160, 0.0207, 0.0099, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0101],
        [0.0088],
        [0.0023],
        [0.0091],
        [0.0067],
        [0.0047],
        [0.0122],
        [0.0106],
        [0.0153],
        [0.0112],
        [0.0285],
        [0.0215],
        [0.0093],
        [0.0098],
        [0.0068],
        [0.0086]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0088, 0.0023, 0.0091, 0.0067, 0.0047, 0.0122, 0.0106, 0.0153,
         0.0112, 0.0285, 0.0215, 0.0093, 0.0098, 0.0068, 0.0086]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0326, 0.0150, 0.0101],
        [0.0445, 0.0120, 0.0088],
        [0.0103, 0.0041, 0.0023],
        [0.0518, 0.0216, 0.0091],
        [0.0268, 0.0144, 0.0067],
        [0.0083, 0.0096, 0.0047],
        [0.0484, 0.0123, 0.0122],
        [0.0524, 0.0213, 0.0106],
        [0.0643, 0.0304, 0.0153],
        [0.0524, 0.0121, 0.0112],
        [0.0418, 0.0120, 0.0285],
        [0.0652, 0.0333, 0.0215],
        [0.0405, 0.0160, 0.0093],
        [0.0311, 0.0207, 0.0098],
        [0.0415, 0.0099, 0.0068],
        [0.0280, 0.0121, 0.0086]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0572],
        [0.0261],
        [0.0372],
        [0.0542],
        [0.0790],
        [0.0397],
        [0.0325],
        [0.0356],
        [0.0328],
        [0.0206],
        [0.0663],
        [0.0409],
        [0.0836],
        [0.0663],
        [0.0134],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0572, 0.0261, 0.0372, 0.0542, 0.0790, 0.0397, 0.0325, 0.0356, 0.0328,
         0.0206, 0.0663, 0.0409, 0.0836, 0.0663, 0.0134, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0210],
        [0.0109],
        [0.0125],
        [0.0149],
        [0.0239],
        [0.0129],
        [0.0201],
        [0.0120],
        [0.0224],
        [0.0063],
        [0.0236],
        [0.0103],
        [0.0115],
        [0.0191],
        [0.0115],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0109, 0.0125, 0.0149, 0.0239, 0.0129, 0.0201, 0.0120, 0.0224,
         0.0063, 0.0236, 0.0103, 0.0115, 0.0191, 0.0115, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0130],
        [0.0085],
        [0.0108],
        [0.0100],
        [0.0154],
        [0.0125],
        [0.0086],
        [0.0081],
        [0.0119],
        [0.0062],
        [0.0170],
        [0.0092],
        [0.0227],
        [0.0198],
        [0.0036],
        [0.0081]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0085, 0.0108, 0.0100, 0.0154, 0.0125, 0.0086, 0.0081, 0.0119,
         0.0062, 0.0170, 0.0092, 0.0227, 0.0198, 0.0036, 0.0081]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0572, 0.0210, 0.0130],
        [0.0261, 0.0109, 0.0085],
        [0.0372, 0.0125, 0.0108],
        [0.0542, 0.0149, 0.0100],
        [0.0790, 0.0239, 0.0154],
        [0.0397, 0.0129, 0.0125],
        [0.0325, 0.0201, 0.0086],
        [0.0356, 0.0120, 0.0081],
        [0.0328, 0.0224, 0.0119],
        [0.0206, 0.0063, 0.0062],
        [0.0663, 0.0236, 0.0170],
        [0.0409, 0.0103, 0.0092],
        [0.0836, 0.0115, 0.0227],
        [0.0663, 0.0191, 0.0198],
        [0.0134, 0.0115, 0.0036],
        [0.0195, 0.0068, 0.0081]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0371],
        [0.0365],
        [0.0752],
        [0.0519],
        [0.0215],
        [0.0876],
        [0.0309],
        [0.0341],
        [0.0421],
        [0.0763],
        [0.0302],
        [0.0211],
        [0.0551],
        [0.0252],
        [0.0357],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0365, 0.0752, 0.0519, 0.0215, 0.0876, 0.0309, 0.0341, 0.0421,
         0.0763, 0.0302, 0.0211, 0.0551, 0.0252, 0.0357, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0200],
        [0.0113],
        [0.0174],
        [0.0151],
        [0.0110],
        [0.0191],
        [0.0227],
        [0.0056],
        [0.0172],
        [0.0161],
        [0.0111],
        [0.0122],
        [0.0150],
        [0.0083],
        [0.0099],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0113, 0.0174, 0.0151, 0.0110, 0.0191, 0.0227, 0.0056, 0.0172,
         0.0161, 0.0111, 0.0122, 0.0150, 0.0083, 0.0099, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0108],
        [0.0097],
        [0.0145],
        [0.0090],
        [0.0092],
        [0.0259],
        [0.0108],
        [0.0041],
        [0.0118],
        [0.0449],
        [0.0065],
        [0.0050],
        [0.0126],
        [0.0063],
        [0.0044],
        [0.0013]], device='cuda:0', dtype=torch.float16)/tensor([[0.0108, 0.0097, 0.0145, 0.0090, 0.0092, 0.0259, 0.0108, 0.0041, 0.0118,
         0.0449, 0.0065, 0.0050, 0.0126, 0.0063, 0.0044, 0.0013]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0371, 0.0200, 0.0108],
        [0.0365, 0.0113, 0.0097],
        [0.0752, 0.0174, 0.0145],
        [0.0519, 0.0151, 0.0090],
        [0.0215, 0.0110, 0.0092],
        [0.0876, 0.0191, 0.0259],
        [0.0309, 0.0227, 0.0108],
        [0.0341, 0.0056, 0.0041],
        [0.0421, 0.0172, 0.0118],
        [0.0763, 0.0161, 0.0449],
        [0.0302, 0.0111, 0.0065],
        [0.0211, 0.0122, 0.0050],
        [0.0551, 0.0150, 0.0126],
        [0.0252, 0.0083, 0.0063],
        [0.0357, 0.0099, 0.0044],
        [0.0068, 0.0027, 0.0013]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0430],
        [0.0439],
        [0.0206],
        [0.0377],
        [0.0329],
        [0.0094],
        [0.0916],
        [0.0442],
        [0.0297],
        [0.0118],
        [0.0586],
        [0.0352],
        [0.0475],
        [0.0482],
        [0.0634],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0430, 0.0439, 0.0206, 0.0377, 0.0329, 0.0094, 0.0916, 0.0442, 0.0297,
         0.0118, 0.0586, 0.0352, 0.0475, 0.0482, 0.0634, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0280],
        [0.0384],
        [0.0118],
        [0.0051],
        [0.0168],
        [0.0064],
        [0.0212],
        [0.0132],
        [0.0172],
        [0.0054],
        [0.0228],
        [0.0138],
        [0.0208],
        [0.0168],
        [0.0182],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0280, 0.0384, 0.0118, 0.0051, 0.0168, 0.0064, 0.0212, 0.0132, 0.0172,
         0.0054, 0.0228, 0.0138, 0.0208, 0.0168, 0.0182, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0066],
        [0.0112],
        [0.0079],
        [0.0067],
        [0.0084],
        [0.0079],
        [0.0426],
        [0.0094],
        [0.0164],
        [0.0031],
        [0.0067],
        [0.0041],
        [0.0144],
        [0.0093],
        [0.0159],
        [0.0041]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0112, 0.0079, 0.0067, 0.0084, 0.0079, 0.0426, 0.0094, 0.0164,
         0.0031, 0.0067, 0.0041, 0.0144, 0.0093, 0.0159, 0.0041]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0430, 0.0280, 0.0066],
        [0.0439, 0.0384, 0.0112],
        [0.0206, 0.0118, 0.0079],
        [0.0377, 0.0051, 0.0067],
        [0.0329, 0.0168, 0.0084],
        [0.0094, 0.0064, 0.0079],
        [0.0916, 0.0212, 0.0426],
        [0.0442, 0.0132, 0.0094],
        [0.0297, 0.0172, 0.0164],
        [0.0118, 0.0054, 0.0031],
        [0.0586, 0.0228, 0.0067],
        [0.0352, 0.0138, 0.0041],
        [0.0475, 0.0208, 0.0144],
        [0.0482, 0.0168, 0.0093],
        [0.0634, 0.0182, 0.0159],
        [0.0120, 0.0084, 0.0041]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0184],
        [0.0180],
        [0.0241],
        [0.0264],
        [0.0535],
        [0.0652],
        [0.0320],
        [0.0233],
        [0.0743],
        [0.0355],
        [0.0213],
        [0.0274],
        [0.0715],
        [0.0173],
        [0.0528],
        [0.0452]], device='cuda:0', dtype=torch.float16)/tensor([[0.0184, 0.0180, 0.0241, 0.0264, 0.0535, 0.0652, 0.0320, 0.0233, 0.0743,
         0.0355, 0.0213, 0.0274, 0.0715, 0.0173, 0.0528, 0.0452]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0094],
        [0.0095],
        [0.0134],
        [0.0095],
        [0.0133],
        [0.0082],
        [0.0104],
        [0.0209],
        [0.0194],
        [0.0182],
        [0.0080],
        [0.0095],
        [0.0220],
        [0.0141],
        [0.0153],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0094, 0.0095, 0.0134, 0.0095, 0.0133, 0.0082, 0.0104, 0.0209, 0.0194,
         0.0182, 0.0080, 0.0095, 0.0220, 0.0141, 0.0153, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0098],
        [0.0035],
        [0.0063],
        [0.0061],
        [0.0145],
        [0.0238],
        [0.0139],
        [0.0075],
        [0.0243],
        [0.0062],
        [0.0091],
        [0.0055],
        [0.0206],
        [0.0054],
        [0.0118],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0098, 0.0035, 0.0063, 0.0061, 0.0145, 0.0238, 0.0139, 0.0075, 0.0243,
         0.0062, 0.0091, 0.0055, 0.0206, 0.0054, 0.0118, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0184, 0.0094, 0.0098],
        [0.0180, 0.0095, 0.0035],
        [0.0241, 0.0134, 0.0063],
        [0.0264, 0.0095, 0.0061],
        [0.0535, 0.0133, 0.0145],
        [0.0652, 0.0082, 0.0238],
        [0.0320, 0.0104, 0.0139],
        [0.0233, 0.0209, 0.0075],
        [0.0743, 0.0194, 0.0243],
        [0.0355, 0.0182, 0.0062],
        [0.0213, 0.0080, 0.0091],
        [0.0274, 0.0095, 0.0055],
        [0.0715, 0.0220, 0.0206],
        [0.0173, 0.0141, 0.0054],
        [0.0528, 0.0153, 0.0118],
        [0.0452, 0.0243, 0.0209]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0177],
        [0.0602],
        [0.0353],
        [0.0515],
        [0.0789],
        [0.0572],
        [0.0350],
        [0.0180],
        [0.0156],
        [0.0256],
        [0.0707],
        [0.0313],
        [0.0352],
        [0.0809],
        [0.0360],
        [0.0340]], device='cuda:0', dtype=torch.float16)/tensor([[0.0177, 0.0602, 0.0353, 0.0515, 0.0789, 0.0572, 0.0350, 0.0180, 0.0156,
         0.0256, 0.0707, 0.0313, 0.0352, 0.0809, 0.0360, 0.0340]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0073],
        [0.0187],
        [0.0139],
        [0.0206],
        [0.0192],
        [0.0252],
        [0.0283],
        [0.0103],
        [0.0105],
        [0.0158],
        [0.0199],
        [0.0167],
        [0.0244],
        [0.0232],
        [0.0200],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0187, 0.0139, 0.0206, 0.0192, 0.0252, 0.0283, 0.0103, 0.0105,
         0.0158, 0.0199, 0.0167, 0.0244, 0.0232, 0.0200, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0072],
        [0.0116],
        [0.0074],
        [0.0083],
        [0.0133],
        [0.0137],
        [0.0174],
        [0.0068],
        [0.0092],
        [0.0067],
        [0.0125],
        [0.0103],
        [0.0191],
        [0.0232],
        [0.0085],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0072, 0.0116, 0.0074, 0.0083, 0.0133, 0.0137, 0.0174, 0.0068, 0.0092,
         0.0067, 0.0125, 0.0103, 0.0191, 0.0232, 0.0085, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0177, 0.0073, 0.0072],
        [0.0602, 0.0187, 0.0116],
        [0.0353, 0.0139, 0.0074],
        [0.0515, 0.0206, 0.0083],
        [0.0789, 0.0192, 0.0133],
        [0.0572, 0.0252, 0.0137],
        [0.0350, 0.0283, 0.0174],
        [0.0180, 0.0103, 0.0068],
        [0.0156, 0.0105, 0.0092],
        [0.0256, 0.0158, 0.0067],
        [0.0707, 0.0199, 0.0125],
        [0.0313, 0.0167, 0.0103],
        [0.0352, 0.0244, 0.0191],
        [0.0809, 0.0232, 0.0232],
        [0.0360, 0.0200, 0.0085],
        [0.0340, 0.0169, 0.0084]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0390],
        [0.1078],
        [0.0315],
        [0.0299],
        [0.0511],
        [0.0614],
        [0.0756],
        [0.0305],
        [0.0225],
        [0.0720],
        [0.0436],
        [0.0383],
        [0.0408],
        [0.0150],
        [0.0381],
        [0.0407]], device='cuda:0', dtype=torch.float16)/tensor([[0.0390, 0.1078, 0.0315, 0.0299, 0.0511, 0.0614, 0.0756, 0.0305, 0.0225,
         0.0720, 0.0436, 0.0383, 0.0408, 0.0150, 0.0381, 0.0407]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0143],
        [0.0146],
        [0.0177],
        [0.0178],
        [0.0088],
        [0.0103],
        [0.0269],
        [0.0076],
        [0.0181],
        [0.0275],
        [0.0214],
        [0.0191],
        [0.0107],
        [0.0080],
        [0.0162],
        [0.0070]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0146, 0.0177, 0.0178, 0.0088, 0.0103, 0.0269, 0.0076, 0.0181,
         0.0275, 0.0214, 0.0191, 0.0107, 0.0080, 0.0162, 0.0070]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0115],
        [0.0244],
        [0.0134],
        [0.0068],
        [0.0163],
        [0.0092],
        [0.0140],
        [0.0073],
        [0.0040],
        [0.0388],
        [0.0079],
        [0.0120],
        [0.0121],
        [0.0035],
        [0.0075],
        [0.0091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0115, 0.0244, 0.0134, 0.0068, 0.0163, 0.0092, 0.0140, 0.0073, 0.0040,
         0.0388, 0.0079, 0.0120, 0.0121, 0.0035, 0.0075, 0.0091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0390, 0.0143, 0.0115],
        [0.1078, 0.0146, 0.0244],
        [0.0315, 0.0177, 0.0134],
        [0.0299, 0.0178, 0.0068],
        [0.0511, 0.0088, 0.0163],
        [0.0614, 0.0103, 0.0092],
        [0.0756, 0.0269, 0.0140],
        [0.0305, 0.0076, 0.0073],
        [0.0225, 0.0181, 0.0040],
        [0.0720, 0.0275, 0.0388],
        [0.0436, 0.0214, 0.0079],
        [0.0383, 0.0191, 0.0120],
        [0.0408, 0.0107, 0.0121],
        [0.0150, 0.0080, 0.0035],
        [0.0381, 0.0162, 0.0075],
        [0.0407, 0.0070, 0.0091]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0282],
        [0.0124],
        [0.0217],
        [0.0594],
        [0.0498],
        [0.0578],
        [0.0500],
        [0.0701],
        [0.0294],
        [0.0246],
        [0.0297],
        [0.0433],
        [0.0346],
        [0.0116],
        [0.0472],
        [0.0331]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0124, 0.0217, 0.0594, 0.0498, 0.0578, 0.0500, 0.0701, 0.0294,
         0.0246, 0.0297, 0.0433, 0.0346, 0.0116, 0.0472, 0.0331]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0045],
        [0.0084],
        [0.0198],
        [0.0116],
        [0.0157],
        [0.0293],
        [0.0158],
        [0.0095],
        [0.0169],
        [0.0096],
        [0.0249],
        [0.0119],
        [0.0125],
        [0.0129],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0045, 0.0084, 0.0198, 0.0116, 0.0157, 0.0293, 0.0158, 0.0095,
         0.0169, 0.0096, 0.0249, 0.0119, 0.0125, 0.0129, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0211],
        [0.0043],
        [0.0063],
        [0.0200],
        [0.0140],
        [0.0092],
        [0.0177],
        [0.0098],
        [0.0039],
        [0.0119],
        [0.0053],
        [0.0146],
        [0.0079],
        [0.0025],
        [0.0079],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0043, 0.0063, 0.0200, 0.0140, 0.0092, 0.0177, 0.0098, 0.0039,
         0.0119, 0.0053, 0.0146, 0.0079, 0.0025, 0.0079, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0282, 0.0160, 0.0211],
        [0.0124, 0.0045, 0.0043],
        [0.0217, 0.0084, 0.0063],
        [0.0594, 0.0198, 0.0200],
        [0.0498, 0.0116, 0.0140],
        [0.0578, 0.0157, 0.0092],
        [0.0500, 0.0293, 0.0177],
        [0.0701, 0.0158, 0.0098],
        [0.0294, 0.0095, 0.0039],
        [0.0246, 0.0169, 0.0119],
        [0.0297, 0.0096, 0.0053],
        [0.0433, 0.0249, 0.0146],
        [0.0346, 0.0119, 0.0079],
        [0.0116, 0.0125, 0.0025],
        [0.0472, 0.0129, 0.0079],
        [0.0331, 0.0058, 0.0068]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0361],
        [0.0326],
        [0.0338],
        [0.0131],
        [0.0668],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0361, 0.0326, 0.0338, 0.0131, 0.0668, 0.0238]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0136],
        [0.0171],
        [0.0173],
        [0.0117],
        [0.0163],
        [0.0147]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0171, 0.0173, 0.0117, 0.0163, 0.0147]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0108],
        [0.0061],
        [0.0091],
        [0.0090],
        [0.0155],
        [0.0057]], device='cuda:0', dtype=torch.float16)/tensor([[0.0108, 0.0061, 0.0091, 0.0090, 0.0155, 0.0057]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0361, 0.0136, 0.0108],
        [0.0326, 0.0171, 0.0061],
        [0.0338, 0.0173, 0.0091],
        [0.0131, 0.0117, 0.0090],
        [0.0668, 0.0163, 0.0155],
        [0.0238, 0.0147, 0.0057]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type auxiliary, variation 5 and batchsize 16: 0:03:02.805359
path ['42', 'en', 'llama', 'NLI', 'auxiliary', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI modal 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 318.08it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0403],
        [0.0382],
        [0.0994],
        [0.0771],
        [0.0366],
        [0.0254],
        [0.0854],
        [0.0903],
        [0.0413],
        [0.0066],
        [0.0067],
        [0.0370],
        [0.0651],
        [0.0514],
        [0.0290],
        [0.0406]], device='cuda:0', dtype=torch.float16)/tensor([[0.0403, 0.0382, 0.0994, 0.0771, 0.0366, 0.0254, 0.0854, 0.0903, 0.0413,
         0.0066, 0.0067, 0.0370, 0.0651, 0.0514, 0.0290, 0.0406]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0226],
        [0.0117],
        [0.0320],
        [0.0258],
        [0.0140],
        [0.0118],
        [0.0293],
        [0.0327],
        [0.0241],
        [0.0041],
        [0.0051],
        [0.0213],
        [0.0303],
        [0.0277],
        [0.0095],
        [0.0242]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0117, 0.0320, 0.0258, 0.0140, 0.0118, 0.0293, 0.0327, 0.0241,
         0.0041, 0.0051, 0.0213, 0.0303, 0.0277, 0.0095, 0.0242]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0202],
        [0.0300],
        [0.0744],
        [0.0600],
        [0.0231],
        [0.0213],
        [0.0592],
        [0.0385],
        [0.0454],
        [0.0123],
        [0.0064],
        [0.0556],
        [0.0565],
        [0.0423],
        [0.0174],
        [0.0299]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0300, 0.0744, 0.0600, 0.0231, 0.0213, 0.0592, 0.0385, 0.0454,
         0.0123, 0.0064, 0.0556, 0.0565, 0.0423, 0.0174, 0.0299]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0403, 0.0226, 0.0202],
        [0.0382, 0.0117, 0.0300],
        [0.0994, 0.0320, 0.0744],
        [0.0771, 0.0258, 0.0600],
        [0.0366, 0.0140, 0.0231],
        [0.0254, 0.0118, 0.0213],
        [0.0854, 0.0293, 0.0592],
        [0.0903, 0.0327, 0.0385],
        [0.0413, 0.0241, 0.0454],
        [0.0066, 0.0041, 0.0123],
        [0.0067, 0.0051, 0.0064],
        [0.0370, 0.0213, 0.0556],
        [0.0651, 0.0303, 0.0565],
        [0.0514, 0.0277, 0.0423],
        [0.0290, 0.0095, 0.0174],
        [0.0406, 0.0242, 0.0299]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0645],
        [0.0326],
        [0.0314],
        [0.0334],
        [0.0429],
        [0.0413],
        [0.0626],
        [0.0335],
        [0.0196],
        [0.0671],
        [0.0471],
        [0.0434],
        [0.0223],
        [0.0320],
        [0.0546],
        [0.0632]], device='cuda:0', dtype=torch.float16)/tensor([[0.0645, 0.0326, 0.0314, 0.0334, 0.0429, 0.0413, 0.0626, 0.0335, 0.0196,
         0.0671, 0.0471, 0.0434, 0.0223, 0.0320, 0.0546, 0.0632]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0247],
        [0.0234],
        [0.0121],
        [0.0151],
        [0.0345],
        [0.0136],
        [0.0451],
        [0.0147],
        [0.0103],
        [0.0206],
        [0.0187],
        [0.0221],
        [0.0090],
        [0.0145],
        [0.0149],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0247, 0.0234, 0.0121, 0.0151, 0.0345, 0.0136, 0.0451, 0.0147, 0.0103,
         0.0206, 0.0187, 0.0221, 0.0090, 0.0145, 0.0149, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0549],
        [0.0312],
        [0.0216],
        [0.0225],
        [0.0226],
        [0.0273],
        [0.0417],
        [0.0172],
        [0.0116],
        [0.0465],
        [0.0184],
        [0.0252],
        [0.0156],
        [0.0291],
        [0.0328],
        [0.0371]], device='cuda:0', dtype=torch.float16)/tensor([[0.0549, 0.0312, 0.0216, 0.0225, 0.0226, 0.0273, 0.0417, 0.0172, 0.0116,
         0.0465, 0.0184, 0.0252, 0.0156, 0.0291, 0.0328, 0.0371]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0645, 0.0247, 0.0549],
        [0.0326, 0.0234, 0.0312],
        [0.0314, 0.0121, 0.0216],
        [0.0334, 0.0151, 0.0225],
        [0.0429, 0.0345, 0.0226],
        [0.0413, 0.0136, 0.0273],
        [0.0626, 0.0451, 0.0417],
        [0.0335, 0.0147, 0.0172],
        [0.0196, 0.0103, 0.0116],
        [0.0671, 0.0206, 0.0465],
        [0.0471, 0.0187, 0.0184],
        [0.0434, 0.0221, 0.0252],
        [0.0223, 0.0090, 0.0156],
        [0.0320, 0.0145, 0.0291],
        [0.0546, 0.0149, 0.0328],
        [0.0632, 0.0261, 0.0371]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1508],
        [0.0275],
        [0.0493],
        [0.0462],
        [0.0369],
        [0.0255],
        [0.0363],
        [0.0577],
        [0.0825],
        [0.0341],
        [0.0265],
        [0.1022],
        [0.0614],
        [0.0261],
        [0.0566],
        [0.0969]], device='cuda:0', dtype=torch.float16)/tensor([[0.1508, 0.0275, 0.0493, 0.0462, 0.0369, 0.0255, 0.0363, 0.0577, 0.0825,
         0.0341, 0.0265, 0.1022, 0.0614, 0.0261, 0.0566, 0.0969]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0199],
        [0.0291],
        [0.0285],
        [0.0191],
        [0.0168],
        [0.0111],
        [0.0178],
        [0.0169],
        [0.0162],
        [0.0266],
        [0.0080],
        [0.0170],
        [0.0390],
        [0.0058],
        [0.0177],
        [0.0427]], device='cuda:0', dtype=torch.float16)/tensor([[0.0199, 0.0291, 0.0285, 0.0191, 0.0168, 0.0111, 0.0178, 0.0169, 0.0162,
         0.0266, 0.0080, 0.0170, 0.0390, 0.0058, 0.0177, 0.0427]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0446],
        [0.0190],
        [0.0247],
        [0.0325],
        [0.0235],
        [0.0305],
        [0.0210],
        [0.0410],
        [0.0558],
        [0.0222],
        [0.0239],
        [0.0403],
        [0.0378],
        [0.0390],
        [0.0190],
        [0.0992]], device='cuda:0', dtype=torch.float16)/tensor([[0.0446, 0.0190, 0.0247, 0.0325, 0.0235, 0.0305, 0.0210, 0.0410, 0.0558,
         0.0222, 0.0239, 0.0403, 0.0378, 0.0390, 0.0190, 0.0992]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1508, 0.0199, 0.0446],
        [0.0275, 0.0291, 0.0190],
        [0.0493, 0.0285, 0.0247],
        [0.0462, 0.0191, 0.0325],
        [0.0369, 0.0168, 0.0235],
        [0.0255, 0.0111, 0.0305],
        [0.0363, 0.0178, 0.0210],
        [0.0577, 0.0169, 0.0410],
        [0.0825, 0.0162, 0.0558],
        [0.0341, 0.0266, 0.0222],
        [0.0265, 0.0080, 0.0239],
        [0.1022, 0.0170, 0.0403],
        [0.0614, 0.0390, 0.0378],
        [0.0261, 0.0058, 0.0390],
        [0.0566, 0.0177, 0.0190],
        [0.0969, 0.0427, 0.0992]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0224],
        [0.0380],
        [0.0561],
        [0.0268],
        [0.0448],
        [0.0091],
        [0.0162],
        [0.0814],
        [0.0732],
        [0.0581],
        [0.0051],
        [0.0909],
        [0.0771],
        [0.0431],
        [0.0448],
        [0.0326]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0380, 0.0561, 0.0268, 0.0448, 0.0091, 0.0162, 0.0814, 0.0732,
         0.0581, 0.0051, 0.0909, 0.0771, 0.0431, 0.0448, 0.0326]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0154],
        [0.0171],
        [0.0206],
        [0.0095],
        [0.0097],
        [0.0065],
        [0.0047],
        [0.0179],
        [0.0311],
        [0.0302],
        [0.0033],
        [0.0178],
        [0.0262],
        [0.0245],
        [0.0202],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0171, 0.0206, 0.0095, 0.0097, 0.0065, 0.0047, 0.0179, 0.0311,
         0.0302, 0.0033, 0.0178, 0.0262, 0.0245, 0.0202, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0139],
        [0.0230],
        [0.0374],
        [0.0568],
        [0.0209],
        [0.0079],
        [0.0168],
        [0.0432],
        [0.0386],
        [0.0439],
        [0.0029],
        [0.0359],
        [0.0391],
        [0.0450],
        [0.0210],
        [0.0522]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0230, 0.0374, 0.0568, 0.0209, 0.0079, 0.0168, 0.0432, 0.0386,
         0.0439, 0.0029, 0.0359, 0.0391, 0.0450, 0.0210, 0.0522]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0224, 0.0154, 0.0139],
        [0.0380, 0.0171, 0.0230],
        [0.0561, 0.0206, 0.0374],
        [0.0268, 0.0095, 0.0568],
        [0.0448, 0.0097, 0.0209],
        [0.0091, 0.0065, 0.0079],
        [0.0162, 0.0047, 0.0168],
        [0.0814, 0.0179, 0.0432],
        [0.0732, 0.0311, 0.0386],
        [0.0581, 0.0302, 0.0439],
        [0.0051, 0.0033, 0.0029],
        [0.0909, 0.0178, 0.0359],
        [0.0771, 0.0262, 0.0391],
        [0.0431, 0.0245, 0.0450],
        [0.0448, 0.0202, 0.0210],
        [0.0326, 0.0074, 0.0522]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0270],
        [0.0286],
        [0.0389],
        [0.0511],
        [0.0568],
        [0.0499],
        [0.0391],
        [0.0709],
        [0.0642],
        [0.0832],
        [0.0934],
        [0.0415],
        [0.0780],
        [0.0977],
        [0.0306],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0270, 0.0286, 0.0389, 0.0511, 0.0568, 0.0499, 0.0391, 0.0709, 0.0642,
         0.0832, 0.0934, 0.0415, 0.0780, 0.0977, 0.0306, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0157],
        [0.0105],
        [0.0173],
        [0.0269],
        [0.0152],
        [0.0155],
        [0.0108],
        [0.0121],
        [0.0155],
        [0.0168],
        [0.0233],
        [0.0279],
        [0.0204],
        [0.0253],
        [0.0137],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0105, 0.0173, 0.0269, 0.0152, 0.0155, 0.0108, 0.0121, 0.0155,
         0.0168, 0.0233, 0.0279, 0.0204, 0.0253, 0.0137, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0213],
        [0.0367],
        [0.0286],
        [0.0283],
        [0.0364],
        [0.0196],
        [0.0267],
        [0.0283],
        [0.0374],
        [0.0272],
        [0.0294],
        [0.0277],
        [0.0236],
        [0.0495],
        [0.0170],
        [0.0234]], device='cuda:0', dtype=torch.float16)/tensor([[0.0213, 0.0367, 0.0286, 0.0283, 0.0364, 0.0196, 0.0267, 0.0283, 0.0374,
         0.0272, 0.0294, 0.0277, 0.0236, 0.0495, 0.0170, 0.0234]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0270, 0.0157, 0.0213],
        [0.0286, 0.0105, 0.0367],
        [0.0389, 0.0173, 0.0286],
        [0.0511, 0.0269, 0.0283],
        [0.0568, 0.0152, 0.0364],
        [0.0499, 0.0155, 0.0196],
        [0.0391, 0.0108, 0.0267],
        [0.0709, 0.0121, 0.0283],
        [0.0642, 0.0155, 0.0374],
        [0.0832, 0.0168, 0.0272],
        [0.0934, 0.0233, 0.0294],
        [0.0415, 0.0279, 0.0277],
        [0.0780, 0.0204, 0.0236],
        [0.0977, 0.0253, 0.0495],
        [0.0306, 0.0137, 0.0170],
        [0.0291, 0.0110, 0.0234]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0249],
        [0.0350],
        [0.0649],
        [0.0432],
        [0.0354],
        [0.0496],
        [0.0952],
        [0.0537],
        [0.0704],
        [0.0570],
        [0.0703],
        [0.0542],
        [0.1012],
        [0.0553],
        [0.0812],
        [0.0447]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0350, 0.0649, 0.0432, 0.0354, 0.0496, 0.0952, 0.0537, 0.0704,
         0.0570, 0.0703, 0.0542, 0.1012, 0.0553, 0.0812, 0.0447]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0106],
        [0.0270],
        [0.0201],
        [0.0172],
        [0.0197],
        [0.0286],
        [0.0250],
        [0.0230],
        [0.0285],
        [0.0305],
        [0.0269],
        [0.0180],
        [0.0375],
        [0.0216],
        [0.0338],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0106, 0.0270, 0.0201, 0.0172, 0.0197, 0.0286, 0.0250, 0.0230, 0.0285,
         0.0305, 0.0269, 0.0180, 0.0375, 0.0216, 0.0338, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0347],
        [0.0471],
        [0.0435],
        [0.0250],
        [0.0242],
        [0.0417],
        [0.0573],
        [0.0317],
        [0.0414],
        [0.0194],
        [0.0186],
        [0.0228],
        [0.0422],
        [0.0321],
        [0.0424],
        [0.0138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0471, 0.0435, 0.0250, 0.0242, 0.0417, 0.0573, 0.0317, 0.0414,
         0.0194, 0.0186, 0.0228, 0.0422, 0.0321, 0.0424, 0.0138]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0249, 0.0106, 0.0347],
        [0.0350, 0.0270, 0.0471],
        [0.0649, 0.0201, 0.0435],
        [0.0432, 0.0172, 0.0250],
        [0.0354, 0.0197, 0.0242],
        [0.0496, 0.0286, 0.0417],
        [0.0952, 0.0250, 0.0573],
        [0.0537, 0.0230, 0.0317],
        [0.0704, 0.0285, 0.0414],
        [0.0570, 0.0305, 0.0194],
        [0.0703, 0.0269, 0.0186],
        [0.0542, 0.0180, 0.0228],
        [0.1012, 0.0375, 0.0422],
        [0.0553, 0.0216, 0.0321],
        [0.0812, 0.0338, 0.0424],
        [0.0447, 0.0121, 0.0138]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1063],
        [0.0596],
        [0.0461],
        [0.0678],
        [0.0749],
        [0.0390],
        [0.0454],
        [0.0176],
        [0.0502],
        [0.0609],
        [0.0434],
        [0.0923],
        [0.0740],
        [0.0473],
        [0.0435],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.1063, 0.0596, 0.0461, 0.0678, 0.0749, 0.0390, 0.0454, 0.0176, 0.0502,
         0.0609, 0.0434, 0.0923, 0.0740, 0.0473, 0.0435, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0373],
        [0.0216],
        [0.0109],
        [0.0276],
        [0.0216],
        [0.0211],
        [0.0157],
        [0.0058],
        [0.0258],
        [0.0339],
        [0.0263],
        [0.0291],
        [0.0316],
        [0.0189],
        [0.0173],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0373, 0.0216, 0.0109, 0.0276, 0.0216, 0.0211, 0.0157, 0.0058, 0.0258,
         0.0339, 0.0263, 0.0291, 0.0316, 0.0189, 0.0173, 0.0156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0518],
        [0.0486],
        [0.0342],
        [0.0338],
        [0.0335],
        [0.0139],
        [0.0249],
        [0.0190],
        [0.0245],
        [0.0369],
        [0.0255],
        [0.0453],
        [0.0537],
        [0.0473],
        [0.0341],
        [0.0451]], device='cuda:0', dtype=torch.float16)/tensor([[0.0518, 0.0486, 0.0342, 0.0338, 0.0335, 0.0139, 0.0249, 0.0190, 0.0245,
         0.0369, 0.0255, 0.0453, 0.0537, 0.0473, 0.0341, 0.0451]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1063, 0.0373, 0.0518],
        [0.0596, 0.0216, 0.0486],
        [0.0461, 0.0109, 0.0342],
        [0.0678, 0.0276, 0.0338],
        [0.0749, 0.0216, 0.0335],
        [0.0390, 0.0211, 0.0139],
        [0.0454, 0.0157, 0.0249],
        [0.0176, 0.0058, 0.0190],
        [0.0502, 0.0258, 0.0245],
        [0.0609, 0.0339, 0.0369],
        [0.0434, 0.0263, 0.0255],
        [0.0923, 0.0291, 0.0453],
        [0.0740, 0.0316, 0.0537],
        [0.0473, 0.0189, 0.0473],
        [0.0435, 0.0173, 0.0341],
        [0.0136, 0.0156, 0.0451]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0329],
        [0.0202],
        [0.0483],
        [0.0502],
        [0.0462],
        [0.0145],
        [0.0895],
        [0.0144],
        [0.0454],
        [0.0270],
        [0.0124],
        [0.0546],
        [0.1021],
        [0.0504],
        [0.0441],
        [0.0390]], device='cuda:0', dtype=torch.float16)/tensor([[0.0329, 0.0202, 0.0483, 0.0502, 0.0462, 0.0145, 0.0895, 0.0144, 0.0454,
         0.0270, 0.0124, 0.0546, 0.1021, 0.0504, 0.0441, 0.0390]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0161],
        [0.0104],
        [0.0211],
        [0.0327],
        [0.0148],
        [0.0128],
        [0.0189],
        [0.0095],
        [0.0197],
        [0.0130],
        [0.0048],
        [0.0283],
        [0.0412],
        [0.0117],
        [0.0155],
        [0.0252]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0104, 0.0211, 0.0327, 0.0148, 0.0128, 0.0189, 0.0095, 0.0197,
         0.0130, 0.0048, 0.0283, 0.0412, 0.0117, 0.0155, 0.0252]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0308],
        [0.0196],
        [0.0208],
        [0.0410],
        [0.0363],
        [0.0247],
        [0.0475],
        [0.0227],
        [0.0206],
        [0.0250],
        [0.0119],
        [0.0207],
        [0.0471],
        [0.0210],
        [0.0338],
        [0.0244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0308, 0.0196, 0.0208, 0.0410, 0.0363, 0.0247, 0.0475, 0.0227, 0.0206,
         0.0250, 0.0119, 0.0207, 0.0471, 0.0210, 0.0338, 0.0244]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0329, 0.0161, 0.0308],
        [0.0202, 0.0104, 0.0196],
        [0.0483, 0.0211, 0.0208],
        [0.0502, 0.0327, 0.0410],
        [0.0462, 0.0148, 0.0363],
        [0.0145, 0.0128, 0.0247],
        [0.0895, 0.0189, 0.0475],
        [0.0144, 0.0095, 0.0227],
        [0.0454, 0.0197, 0.0206],
        [0.0270, 0.0130, 0.0250],
        [0.0124, 0.0048, 0.0119],
        [0.0546, 0.0283, 0.0207],
        [0.1021, 0.0412, 0.0471],
        [0.0504, 0.0117, 0.0210],
        [0.0441, 0.0155, 0.0338],
        [0.0390, 0.0252, 0.0244]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0836],
        [0.0577],
        [0.0518],
        [0.0911],
        [0.0174],
        [0.0357],
        [0.0723],
        [0.0267],
        [0.0340],
        [0.0594],
        [0.0908],
        [0.0446],
        [0.0815],
        [0.0895],
        [0.0388],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0836, 0.0577, 0.0518, 0.0911, 0.0174, 0.0357, 0.0723, 0.0267, 0.0340,
         0.0594, 0.0908, 0.0446, 0.0815, 0.0895, 0.0388, 0.0319]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0320],
        [0.0154],
        [0.0303],
        [0.0249],
        [0.0136],
        [0.0242],
        [0.0180],
        [0.0156],
        [0.0228],
        [0.0208],
        [0.0264],
        [0.0260],
        [0.0252],
        [0.0382],
        [0.0133],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0320, 0.0154, 0.0303, 0.0249, 0.0136, 0.0242, 0.0180, 0.0156, 0.0228,
         0.0208, 0.0264, 0.0260, 0.0252, 0.0382, 0.0133, 0.0142]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0441],
        [0.0250],
        [0.0291],
        [0.0322],
        [0.0240],
        [0.0466],
        [0.0294],
        [0.0241],
        [0.0241],
        [0.0414],
        [0.0416],
        [0.0356],
        [0.0353],
        [0.0436],
        [0.0273],
        [0.0440]], device='cuda:0', dtype=torch.float16)/tensor([[0.0441, 0.0250, 0.0291, 0.0322, 0.0240, 0.0466, 0.0294, 0.0241, 0.0241,
         0.0414, 0.0416, 0.0356, 0.0353, 0.0436, 0.0273, 0.0440]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0836, 0.0320, 0.0441],
        [0.0577, 0.0154, 0.0250],
        [0.0518, 0.0303, 0.0291],
        [0.0911, 0.0249, 0.0322],
        [0.0174, 0.0136, 0.0240],
        [0.0357, 0.0242, 0.0466],
        [0.0723, 0.0180, 0.0294],
        [0.0267, 0.0156, 0.0241],
        [0.0340, 0.0228, 0.0241],
        [0.0594, 0.0208, 0.0414],
        [0.0908, 0.0264, 0.0416],
        [0.0446, 0.0260, 0.0356],
        [0.0815, 0.0252, 0.0353],
        [0.0895, 0.0382, 0.0436],
        [0.0388, 0.0133, 0.0273],
        [0.0319, 0.0142, 0.0440]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0970],
        [0.0392],
        [0.0279],
        [0.0436],
        [0.0316],
        [0.0685],
        [0.0599],
        [0.0613],
        [0.0555],
        [0.0401],
        [0.0257],
        [0.0626],
        [0.0892],
        [0.0851],
        [0.0358],
        [0.0512]], device='cuda:0', dtype=torch.float16)/tensor([[0.0970, 0.0392, 0.0279, 0.0436, 0.0316, 0.0685, 0.0599, 0.0613, 0.0555,
         0.0401, 0.0257, 0.0626, 0.0892, 0.0851, 0.0358, 0.0512]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0194],
        [0.0132],
        [0.0061],
        [0.0189],
        [0.0089],
        [0.0227],
        [0.0107],
        [0.0089],
        [0.0271],
        [0.0118],
        [0.0098],
        [0.0320],
        [0.0253],
        [0.0287],
        [0.0172],
        [0.0199]], device='cuda:0', dtype=torch.float16)/tensor([[0.0194, 0.0132, 0.0061, 0.0189, 0.0089, 0.0227, 0.0107, 0.0089, 0.0271,
         0.0118, 0.0098, 0.0320, 0.0253, 0.0287, 0.0172, 0.0199]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0575],
        [0.0427],
        [0.0367],
        [0.0275],
        [0.0353],
        [0.0339],
        [0.0341],
        [0.0431],
        [0.0201],
        [0.0246],
        [0.0333],
        [0.0395],
        [0.0272],
        [0.0126],
        [0.0316],
        [0.0252]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0427, 0.0367, 0.0275, 0.0353, 0.0339, 0.0341, 0.0431, 0.0201,
         0.0246, 0.0333, 0.0395, 0.0272, 0.0126, 0.0316, 0.0252]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0970, 0.0194, 0.0575],
        [0.0392, 0.0132, 0.0427],
        [0.0279, 0.0061, 0.0367],
        [0.0436, 0.0189, 0.0275],
        [0.0316, 0.0089, 0.0353],
        [0.0685, 0.0227, 0.0339],
        [0.0599, 0.0107, 0.0341],
        [0.0613, 0.0089, 0.0431],
        [0.0555, 0.0271, 0.0201],
        [0.0401, 0.0118, 0.0246],
        [0.0257, 0.0098, 0.0333],
        [0.0626, 0.0320, 0.0395],
        [0.0892, 0.0253, 0.0272],
        [0.0851, 0.0287, 0.0126],
        [0.0358, 0.0172, 0.0316],
        [0.0512, 0.0199, 0.0252]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0757],
        [0.0491],
        [0.0197],
        [0.0282],
        [0.0645],
        [0.0204],
        [0.0338],
        [0.0503],
        [0.0448],
        [0.0236],
        [0.0395],
        [0.0654],
        [0.0778],
        [0.0371],
        [0.0558],
        [0.0897]], device='cuda:0', dtype=torch.float16)/tensor([[0.0757, 0.0491, 0.0197, 0.0282, 0.0645, 0.0204, 0.0338, 0.0503, 0.0448,
         0.0236, 0.0395, 0.0654, 0.0778, 0.0371, 0.0558, 0.0897]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0387],
        [0.0186],
        [0.0089],
        [0.0135],
        [0.0299],
        [0.0130],
        [0.0134],
        [0.0213],
        [0.0234],
        [0.0126],
        [0.0168],
        [0.0216],
        [0.0220],
        [0.0114],
        [0.0215],
        [0.0166]], device='cuda:0', dtype=torch.float16)/tensor([[0.0387, 0.0186, 0.0089, 0.0135, 0.0299, 0.0130, 0.0134, 0.0213, 0.0234,
         0.0126, 0.0168, 0.0216, 0.0220, 0.0114, 0.0215, 0.0166]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0572],
        [0.0208],
        [0.0169],
        [0.0210],
        [0.0477],
        [0.0234],
        [0.0362],
        [0.0404],
        [0.0308],
        [0.0267],
        [0.0383],
        [0.0370],
        [0.0247],
        [0.0320],
        [0.0214],
        [0.0540]], device='cuda:0', dtype=torch.float16)/tensor([[0.0572, 0.0208, 0.0169, 0.0210, 0.0477, 0.0234, 0.0362, 0.0404, 0.0308,
         0.0267, 0.0383, 0.0370, 0.0247, 0.0320, 0.0214, 0.0540]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0757, 0.0387, 0.0572],
        [0.0491, 0.0186, 0.0208],
        [0.0197, 0.0089, 0.0169],
        [0.0282, 0.0135, 0.0210],
        [0.0645, 0.0299, 0.0477],
        [0.0204, 0.0130, 0.0234],
        [0.0338, 0.0134, 0.0362],
        [0.0503, 0.0213, 0.0404],
        [0.0448, 0.0234, 0.0308],
        [0.0236, 0.0126, 0.0267],
        [0.0395, 0.0168, 0.0383],
        [0.0654, 0.0216, 0.0370],
        [0.0778, 0.0220, 0.0247],
        [0.0371, 0.0114, 0.0320],
        [0.0558, 0.0215, 0.0214],
        [0.0897, 0.0166, 0.0540]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0953],
        [0.0928],
        [0.0318],
        [0.0718],
        [0.0556],
        [0.0335],
        [0.0485],
        [0.0243],
        [0.0665],
        [0.0756],
        [0.0533],
        [0.0815],
        [0.0126],
        [0.0590],
        [0.0553],
        [0.0271]], device='cuda:0', dtype=torch.float16)/tensor([[0.0953, 0.0928, 0.0318, 0.0718, 0.0556, 0.0335, 0.0485, 0.0243, 0.0665,
         0.0756, 0.0533, 0.0815, 0.0126, 0.0590, 0.0553, 0.0271]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0197],
        [0.0240],
        [0.0289],
        [0.0294],
        [0.0241],
        [0.0289],
        [0.0213],
        [0.0175],
        [0.0301],
        [0.0274],
        [0.0117],
        [0.0423],
        [0.0158],
        [0.0229],
        [0.0240],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0197, 0.0240, 0.0289, 0.0294, 0.0241, 0.0289, 0.0213, 0.0175, 0.0301,
         0.0274, 0.0117, 0.0423, 0.0158, 0.0229, 0.0240, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0342],
        [0.0390],
        [0.0244],
        [0.0590],
        [0.0134],
        [0.0421],
        [0.0278],
        [0.0319],
        [0.0379],
        [0.0524],
        [0.0321],
        [0.0539],
        [0.0096],
        [0.0563],
        [0.0287],
        [0.0207]], device='cuda:0', dtype=torch.float16)/tensor([[0.0342, 0.0390, 0.0244, 0.0590, 0.0134, 0.0421, 0.0278, 0.0319, 0.0379,
         0.0524, 0.0321, 0.0539, 0.0096, 0.0563, 0.0287, 0.0207]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0953, 0.0197, 0.0342],
        [0.0928, 0.0240, 0.0390],
        [0.0318, 0.0289, 0.0244],
        [0.0718, 0.0294, 0.0590],
        [0.0556, 0.0241, 0.0134],
        [0.0335, 0.0289, 0.0421],
        [0.0485, 0.0213, 0.0278],
        [0.0243, 0.0175, 0.0319],
        [0.0665, 0.0301, 0.0379],
        [0.0756, 0.0274, 0.0524],
        [0.0533, 0.0117, 0.0321],
        [0.0815, 0.0423, 0.0539],
        [0.0126, 0.0158, 0.0096],
        [0.0590, 0.0229, 0.0563],
        [0.0553, 0.0240, 0.0287],
        [0.0271, 0.0115, 0.0207]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0136],
        [0.0197],
        [0.0360],
        [0.0578],
        [0.0471],
        [0.0649]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0197, 0.0360, 0.0578, 0.0471, 0.0649]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0069],
        [0.0115],
        [0.0136],
        [0.0226],
        [0.0121],
        [0.0138]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0115, 0.0136, 0.0226, 0.0121, 0.0138]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0070],
        [0.0321],
        [0.0289],
        [0.0465],
        [0.0509],
        [0.0361]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0321, 0.0289, 0.0465, 0.0509, 0.0361]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0136, 0.0069, 0.0070],
        [0.0197, 0.0115, 0.0321],
        [0.0360, 0.0136, 0.0289],
        [0.0578, 0.0226, 0.0465],
        [0.0471, 0.0121, 0.0509],
        [0.0649, 0.0138, 0.0361]], device='cuda:0')
acc:  0.37373737373737376
Time taken to execute the en NLI task with prompt type modal, variation 0 and batchsize 16: 0:03:03.538707
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI modal 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 311.11it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0173],
        [0.0242],
        [0.1324],
        [0.0190],
        [0.0373],
        [0.0078],
        [0.1024],
        [0.0067],
        [0.0815],
        [0.0197],
        [0.0239],
        [0.0402],
        [0.1786],
        [0.0316],
        [0.0286],
        [0.1453]], device='cuda:0', dtype=torch.float16)/tensor([[0.0173, 0.0242, 0.1324, 0.0190, 0.0373, 0.0078, 0.1024, 0.0067, 0.0815,
         0.0197, 0.0239, 0.0402, 0.1786, 0.0316, 0.0286, 0.1453]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0036],
        [0.0051],
        [0.0238],
        [0.0067],
        [0.0106],
        [0.0028],
        [0.0401],
        [0.0052],
        [0.0302],
        [0.0082],
        [0.0088],
        [0.0080],
        [0.0227],
        [0.0160],
        [0.0092],
        [0.0197]], device='cuda:0', dtype=torch.float16)/tensor([[0.0036, 0.0051, 0.0238, 0.0067, 0.0106, 0.0028, 0.0401, 0.0052, 0.0302,
         0.0082, 0.0088, 0.0080, 0.0227, 0.0160, 0.0092, 0.0197]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0060],
        [0.0039],
        [0.0491],
        [0.0088],
        [0.0103],
        [0.0040],
        [0.0310],
        [0.0043],
        [0.0382],
        [0.0132],
        [0.0117],
        [0.0096],
        [0.0338],
        [0.0164],
        [0.0085],
        [0.0370]], device='cuda:0', dtype=torch.float16)/tensor([[0.0060, 0.0039, 0.0491, 0.0088, 0.0103, 0.0040, 0.0310, 0.0043, 0.0382,
         0.0132, 0.0117, 0.0096, 0.0338, 0.0164, 0.0085, 0.0370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0173, 0.0036, 0.0060],
        [0.0242, 0.0051, 0.0039],
        [0.1324, 0.0238, 0.0491],
        [0.0190, 0.0067, 0.0088],
        [0.0373, 0.0106, 0.0103],
        [0.0078, 0.0028, 0.0040],
        [0.1024, 0.0401, 0.0310],
        [0.0067, 0.0052, 0.0043],
        [0.0815, 0.0302, 0.0382],
        [0.0197, 0.0082, 0.0132],
        [0.0239, 0.0088, 0.0117],
        [0.0402, 0.0080, 0.0096],
        [0.1786, 0.0227, 0.0338],
        [0.0316, 0.0160, 0.0164],
        [0.0286, 0.0092, 0.0085],
        [0.1453, 0.0197, 0.0370]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1047],
        [0.0328],
        [0.0279],
        [0.0187],
        [0.0947],
        [0.0204],
        [0.0982],
        [0.0339],
        [0.0265],
        [0.0078],
        [0.0132],
        [0.0981],
        [0.1135],
        [0.0269],
        [0.0433],
        [0.0219]], device='cuda:0', dtype=torch.float16)/tensor([[0.1047, 0.0328, 0.0279, 0.0187, 0.0947, 0.0204, 0.0982, 0.0339, 0.0265,
         0.0078, 0.0132, 0.0981, 0.1135, 0.0269, 0.0433, 0.0219]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0079],
        [0.0075],
        [0.0046],
        [0.0210],
        [0.0059],
        [0.0288],
        [0.0092],
        [0.0038],
        [0.0046],
        [0.0066],
        [0.0207],
        [0.0292],
        [0.0105],
        [0.0045],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0079, 0.0075, 0.0046, 0.0210, 0.0059, 0.0288, 0.0092, 0.0038,
         0.0046, 0.0066, 0.0207, 0.0292, 0.0105, 0.0045, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0205],
        [0.0059],
        [0.0106],
        [0.0062],
        [0.0238],
        [0.0058],
        [0.0337],
        [0.0121],
        [0.0075],
        [0.0056],
        [0.0051],
        [0.0292],
        [0.0805],
        [0.0141],
        [0.0091],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0205, 0.0059, 0.0106, 0.0062, 0.0238, 0.0058, 0.0337, 0.0121, 0.0075,
         0.0056, 0.0051, 0.0292, 0.0805, 0.0141, 0.0091, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1047, 0.0134, 0.0205],
        [0.0328, 0.0079, 0.0059],
        [0.0279, 0.0075, 0.0106],
        [0.0187, 0.0046, 0.0062],
        [0.0947, 0.0210, 0.0238],
        [0.0204, 0.0059, 0.0058],
        [0.0982, 0.0288, 0.0337],
        [0.0339, 0.0092, 0.0121],
        [0.0265, 0.0038, 0.0075],
        [0.0078, 0.0046, 0.0056],
        [0.0132, 0.0066, 0.0051],
        [0.0981, 0.0207, 0.0292],
        [0.1135, 0.0292, 0.0805],
        [0.0269, 0.0105, 0.0141],
        [0.0433, 0.0045, 0.0091],
        [0.0219, 0.0062, 0.0027]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0306],
        [0.0353],
        [0.0184],
        [0.0283],
        [0.1058],
        [0.0228],
        [0.0291],
        [0.1400],
        [0.0163],
        [0.0363],
        [0.1238],
        [0.1248],
        [0.1353],
        [0.0450],
        [0.0305],
        [0.0087]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0353, 0.0184, 0.0283, 0.1058, 0.0228, 0.0291, 0.1400, 0.0163,
         0.0363, 0.1238, 0.1248, 0.1353, 0.0450, 0.0305, 0.0087]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0108],
        [0.0045],
        [0.0060],
        [0.0057],
        [0.0315],
        [0.0077],
        [0.0087],
        [0.0215],
        [0.0051],
        [0.0071],
        [0.0174],
        [0.0336],
        [0.0186],
        [0.0074],
        [0.0047],
        [0.0035]], device='cuda:0', dtype=torch.float16)/tensor([[0.0108, 0.0045, 0.0060, 0.0057, 0.0315, 0.0077, 0.0087, 0.0215, 0.0051,
         0.0071, 0.0174, 0.0336, 0.0186, 0.0074, 0.0047, 0.0035]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0150],
        [0.0094],
        [0.0057],
        [0.0109],
        [0.0540],
        [0.0097],
        [0.0086],
        [0.0326],
        [0.0077],
        [0.0085],
        [0.0237],
        [0.0781],
        [0.0374],
        [0.0172],
        [0.0087],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0094, 0.0057, 0.0109, 0.0540, 0.0097, 0.0086, 0.0326, 0.0077,
         0.0085, 0.0237, 0.0781, 0.0374, 0.0172, 0.0087, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0306, 0.0108, 0.0150],
        [0.0353, 0.0045, 0.0094],
        [0.0184, 0.0060, 0.0057],
        [0.0283, 0.0057, 0.0109],
        [0.1058, 0.0315, 0.0540],
        [0.0228, 0.0077, 0.0097],
        [0.0291, 0.0087, 0.0086],
        [0.1400, 0.0215, 0.0326],
        [0.0163, 0.0051, 0.0077],
        [0.0363, 0.0071, 0.0085],
        [0.1238, 0.0174, 0.0237],
        [0.1248, 0.0336, 0.0781],
        [0.1353, 0.0186, 0.0374],
        [0.0450, 0.0074, 0.0172],
        [0.0305, 0.0047, 0.0087],
        [0.0087, 0.0035, 0.0025]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0119],
        [0.0642],
        [0.0403],
        [0.0240],
        [0.1676],
        [0.0236],
        [0.0258],
        [0.0866],
        [0.0292],
        [0.1451],
        [0.0166],
        [0.0135],
        [0.1328],
        [0.0511],
        [0.1521],
        [0.1088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0119, 0.0642, 0.0403, 0.0240, 0.1676, 0.0236, 0.0258, 0.0866, 0.0292,
         0.1451, 0.0166, 0.0135, 0.1328, 0.0511, 0.1521, 0.1088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0030],
        [0.0178],
        [0.0064],
        [0.0043],
        [0.0317],
        [0.0084],
        [0.0066],
        [0.0167],
        [0.0111],
        [0.0195],
        [0.0046],
        [0.0043],
        [0.0229],
        [0.0072],
        [0.0255],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.0030, 0.0178, 0.0064, 0.0043, 0.0317, 0.0084, 0.0066, 0.0167, 0.0111,
         0.0195, 0.0046, 0.0043, 0.0229, 0.0072, 0.0255, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0026],
        [0.0315],
        [0.0159],
        [0.0070],
        [0.0335],
        [0.0098],
        [0.0101],
        [0.0258],
        [0.0079],
        [0.0446],
        [0.0079],
        [0.0031],
        [0.0668],
        [0.0181],
        [0.0251],
        [0.0526]], device='cuda:0', dtype=torch.float16)/tensor([[0.0026, 0.0315, 0.0159, 0.0070, 0.0335, 0.0098, 0.0101, 0.0258, 0.0079,
         0.0446, 0.0079, 0.0031, 0.0668, 0.0181, 0.0251, 0.0526]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0119, 0.0030, 0.0026],
        [0.0642, 0.0178, 0.0315],
        [0.0403, 0.0064, 0.0159],
        [0.0240, 0.0043, 0.0070],
        [0.1676, 0.0317, 0.0335],
        [0.0236, 0.0084, 0.0098],
        [0.0258, 0.0066, 0.0101],
        [0.0866, 0.0167, 0.0258],
        [0.0292, 0.0111, 0.0079],
        [0.1451, 0.0195, 0.0446],
        [0.0166, 0.0046, 0.0079],
        [0.0135, 0.0043, 0.0031],
        [0.1328, 0.0229, 0.0668],
        [0.0511, 0.0072, 0.0181],
        [0.1521, 0.0255, 0.0251],
        [0.1088, 0.0388, 0.0526]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0246],
        [0.0128],
        [0.0901],
        [0.0076],
        [0.0132],
        [0.0175],
        [0.0266],
        [0.1136],
        [0.0355],
        [0.0137],
        [0.0220],
        [0.0212],
        [0.0848],
        [0.0134],
        [0.1514],
        [0.0322]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0128, 0.0901, 0.0076, 0.0132, 0.0175, 0.0266, 0.1136, 0.0355,
         0.0137, 0.0220, 0.0212, 0.0848, 0.0134, 0.1514, 0.0322]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0057],
        [0.0107],
        [0.0230],
        [0.0046],
        [0.0041],
        [0.0116],
        [0.0105],
        [0.0178],
        [0.0089],
        [0.0083],
        [0.0128],
        [0.0156],
        [0.0179],
        [0.0051],
        [0.0427],
        [0.0113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0107, 0.0230, 0.0046, 0.0041, 0.0116, 0.0105, 0.0178, 0.0089,
         0.0083, 0.0128, 0.0156, 0.0179, 0.0051, 0.0427, 0.0113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0086],
        [0.0042],
        [0.0468],
        [0.0028],
        [0.0030],
        [0.0131],
        [0.0103],
        [0.0294],
        [0.0137],
        [0.0107],
        [0.0111],
        [0.0118],
        [0.0226],
        [0.0051],
        [0.0265],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0042, 0.0468, 0.0028, 0.0030, 0.0131, 0.0103, 0.0294, 0.0137,
         0.0107, 0.0111, 0.0118, 0.0226, 0.0051, 0.0265, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0246, 0.0057, 0.0086],
        [0.0128, 0.0107, 0.0042],
        [0.0901, 0.0230, 0.0468],
        [0.0076, 0.0046, 0.0028],
        [0.0132, 0.0041, 0.0030],
        [0.0175, 0.0116, 0.0131],
        [0.0266, 0.0105, 0.0103],
        [0.1136, 0.0178, 0.0294],
        [0.0355, 0.0089, 0.0137],
        [0.0137, 0.0083, 0.0107],
        [0.0220, 0.0128, 0.0111],
        [0.0212, 0.0156, 0.0118],
        [0.0848, 0.0179, 0.0226],
        [0.0134, 0.0051, 0.0051],
        [0.1514, 0.0427, 0.0265],
        [0.0322, 0.0113, 0.0115]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0290],
        [0.0876],
        [0.0071],
        [0.0221],
        [0.0522],
        [0.0905],
        [0.1344],
        [0.0136],
        [0.0276],
        [0.0984],
        [0.0986],
        [0.0221],
        [0.0514],
        [0.0464],
        [0.0288],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0290, 0.0876, 0.0071, 0.0221, 0.0522, 0.0905, 0.1344, 0.0136, 0.0276,
         0.0984, 0.0986, 0.0221, 0.0514, 0.0464, 0.0288, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0105],
        [0.0164],
        [0.0029],
        [0.0064],
        [0.0146],
        [0.0217],
        [0.0197],
        [0.0052],
        [0.0122],
        [0.0327],
        [0.0201],
        [0.0052],
        [0.0074],
        [0.0181],
        [0.0050],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0105, 0.0164, 0.0029, 0.0064, 0.0146, 0.0217, 0.0197, 0.0052, 0.0122,
         0.0327, 0.0201, 0.0052, 0.0074, 0.0181, 0.0050, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0089],
        [0.0305],
        [0.0022],
        [0.0060],
        [0.0170],
        [0.0106],
        [0.0447],
        [0.0065],
        [0.0175],
        [0.0291],
        [0.0224],
        [0.0123],
        [0.0305],
        [0.0098],
        [0.0075],
        [0.0061]], device='cuda:0', dtype=torch.float16)/tensor([[0.0089, 0.0305, 0.0022, 0.0060, 0.0170, 0.0106, 0.0447, 0.0065, 0.0175,
         0.0291, 0.0224, 0.0123, 0.0305, 0.0098, 0.0075, 0.0061]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0290, 0.0105, 0.0089],
        [0.0876, 0.0164, 0.0305],
        [0.0071, 0.0029, 0.0022],
        [0.0221, 0.0064, 0.0060],
        [0.0522, 0.0146, 0.0170],
        [0.0905, 0.0217, 0.0106],
        [0.1344, 0.0197, 0.0447],
        [0.0136, 0.0052, 0.0065],
        [0.0276, 0.0122, 0.0175],
        [0.0984, 0.0327, 0.0291],
        [0.0986, 0.0201, 0.0224],
        [0.0221, 0.0052, 0.0123],
        [0.0514, 0.0074, 0.0305],
        [0.0464, 0.0181, 0.0098],
        [0.0288, 0.0050, 0.0075],
        [0.0162, 0.0120, 0.0061]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0254],
        [0.0169],
        [0.0487],
        [0.0300],
        [0.0176],
        [0.0403],
        [0.0311],
        [0.0175],
        [0.0524],
        [0.0214],
        [0.0229],
        [0.0028],
        [0.0989],
        [0.0511],
        [0.0321],
        [0.0300]], device='cuda:0', dtype=torch.float16)/tensor([[0.0254, 0.0169, 0.0487, 0.0300, 0.0176, 0.0403, 0.0311, 0.0175, 0.0524,
         0.0214, 0.0229, 0.0028, 0.0989, 0.0511, 0.0321, 0.0300]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0040],
        [0.0051],
        [0.0140],
        [0.0139],
        [0.0038],
        [0.0149],
        [0.0058],
        [0.0071],
        [0.0088],
        [0.0065],
        [0.0068],
        [0.0011],
        [0.0270],
        [0.0112],
        [0.0089],
        [0.0043]], device='cuda:0', dtype=torch.float16)/tensor([[0.0040, 0.0051, 0.0140, 0.0139, 0.0038, 0.0149, 0.0058, 0.0071, 0.0088,
         0.0065, 0.0068, 0.0011, 0.0270, 0.0112, 0.0089, 0.0043]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0080],
        [0.0060],
        [0.0230],
        [0.0225],
        [0.0054],
        [0.0139],
        [0.0118],
        [0.0050],
        [0.0126],
        [0.0112],
        [0.0114],
        [0.0007],
        [0.0230],
        [0.0141],
        [0.0169],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0060, 0.0230, 0.0225, 0.0054, 0.0139, 0.0118, 0.0050, 0.0126,
         0.0112, 0.0114, 0.0007, 0.0230, 0.0141, 0.0169, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0254, 0.0040, 0.0080],
        [0.0169, 0.0051, 0.0060],
        [0.0487, 0.0140, 0.0230],
        [0.0300, 0.0139, 0.0225],
        [0.0176, 0.0038, 0.0054],
        [0.0403, 0.0149, 0.0139],
        [0.0311, 0.0058, 0.0118],
        [0.0175, 0.0071, 0.0050],
        [0.0524, 0.0088, 0.0126],
        [0.0214, 0.0065, 0.0112],
        [0.0229, 0.0068, 0.0114],
        [0.0028, 0.0011, 0.0007],
        [0.0989, 0.0270, 0.0230],
        [0.0511, 0.0112, 0.0141],
        [0.0321, 0.0089, 0.0169],
        [0.0300, 0.0043, 0.0092]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0099],
        [0.0461],
        [0.0177],
        [0.0506],
        [0.0396],
        [0.0346],
        [0.0398],
        [0.0213],
        [0.0235],
        [0.0547],
        [0.0301],
        [0.0415],
        [0.1108],
        [0.0170],
        [0.0916],
        [0.0260]], device='cuda:0', dtype=torch.float16)/tensor([[0.0099, 0.0461, 0.0177, 0.0506, 0.0396, 0.0346, 0.0398, 0.0213, 0.0235,
         0.0547, 0.0301, 0.0415, 0.1108, 0.0170, 0.0916, 0.0260]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0045],
        [0.0053],
        [0.0046],
        [0.0123],
        [0.0132],
        [0.0126],
        [0.0059],
        [0.0037],
        [0.0054],
        [0.0137],
        [0.0091],
        [0.0059],
        [0.0411],
        [0.0050],
        [0.0187],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0053, 0.0046, 0.0123, 0.0132, 0.0126, 0.0059, 0.0037, 0.0054,
         0.0137, 0.0091, 0.0059, 0.0411, 0.0050, 0.0187, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0029],
        [0.0136],
        [0.0046],
        [0.0212],
        [0.0074],
        [0.0222],
        [0.0134],
        [0.0101],
        [0.0071],
        [0.0211],
        [0.0165],
        [0.0070],
        [0.0488],
        [0.0079],
        [0.0367],
        [0.0037]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0136, 0.0046, 0.0212, 0.0074, 0.0222, 0.0134, 0.0101, 0.0071,
         0.0211, 0.0165, 0.0070, 0.0488, 0.0079, 0.0367, 0.0037]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0099, 0.0045, 0.0029],
        [0.0461, 0.0053, 0.0136],
        [0.0177, 0.0046, 0.0046],
        [0.0506, 0.0123, 0.0212],
        [0.0396, 0.0132, 0.0074],
        [0.0346, 0.0126, 0.0222],
        [0.0398, 0.0059, 0.0134],
        [0.0213, 0.0037, 0.0101],
        [0.0235, 0.0054, 0.0071],
        [0.0547, 0.0137, 0.0211],
        [0.0301, 0.0091, 0.0165],
        [0.0415, 0.0059, 0.0070],
        [0.1108, 0.0411, 0.0488],
        [0.0170, 0.0050, 0.0079],
        [0.0916, 0.0187, 0.0367],
        [0.0260, 0.0027, 0.0037]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0131],
        [0.0141],
        [0.1220],
        [0.0124],
        [0.1364],
        [0.0086],
        [0.1183],
        [0.0357],
        [0.0462],
        [0.0158],
        [0.0107],
        [0.0066],
        [0.0873],
        [0.0154],
        [0.0398],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0131, 0.0141, 0.1220, 0.0124, 0.1364, 0.0086, 0.1183, 0.0357, 0.0462,
         0.0158, 0.0107, 0.0066, 0.0873, 0.0154, 0.0398, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0055],
        [0.0042],
        [0.0202],
        [0.0022],
        [0.0204],
        [0.0024],
        [0.0168],
        [0.0079],
        [0.0185],
        [0.0043],
        [0.0024],
        [0.0024],
        [0.0266],
        [0.0033],
        [0.0098],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0042, 0.0202, 0.0022, 0.0204, 0.0024, 0.0168, 0.0079, 0.0185,
         0.0043, 0.0024, 0.0024, 0.0266, 0.0033, 0.0098, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0051],
        [0.0054],
        [0.0508],
        [0.0027],
        [0.0332],
        [0.0037],
        [0.0164],
        [0.0111],
        [0.0368],
        [0.0030],
        [0.0021],
        [0.0025],
        [0.0619],
        [0.0036],
        [0.0115],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0051, 0.0054, 0.0508, 0.0027, 0.0332, 0.0037, 0.0164, 0.0111, 0.0368,
         0.0030, 0.0021, 0.0025, 0.0619, 0.0036, 0.0115, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0131, 0.0055, 0.0051],
        [0.0141, 0.0042, 0.0054],
        [0.1220, 0.0202, 0.0508],
        [0.0124, 0.0022, 0.0027],
        [0.1364, 0.0204, 0.0332],
        [0.0086, 0.0024, 0.0037],
        [0.1183, 0.0168, 0.0164],
        [0.0357, 0.0079, 0.0111],
        [0.0462, 0.0185, 0.0368],
        [0.0158, 0.0043, 0.0030],
        [0.0107, 0.0024, 0.0021],
        [0.0066, 0.0024, 0.0025],
        [0.0873, 0.0266, 0.0619],
        [0.0154, 0.0033, 0.0036],
        [0.0398, 0.0098, 0.0115],
        [0.0267, 0.0085, 0.0107]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0469],
        [0.1296],
        [0.1273],
        [0.0128],
        [0.0208],
        [0.0401],
        [0.0326],
        [0.0291],
        [0.0265],
        [0.1439],
        [0.0425],
        [0.0660],
        [0.0141],
        [0.0171],
        [0.0443],
        [0.0715]], device='cuda:0', dtype=torch.float16)/tensor([[0.0469, 0.1296, 0.1273, 0.0128, 0.0208, 0.0401, 0.0326, 0.0291, 0.0265,
         0.1439, 0.0425, 0.0660, 0.0141, 0.0171, 0.0443, 0.0715]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0065],
        [0.0246],
        [0.0228],
        [0.0024],
        [0.0114],
        [0.0118],
        [0.0142],
        [0.0072],
        [0.0059],
        [0.0252],
        [0.0080],
        [0.0176],
        [0.0043],
        [0.0022],
        [0.0111],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0065, 0.0246, 0.0228, 0.0024, 0.0114, 0.0118, 0.0142, 0.0072, 0.0059,
         0.0252, 0.0080, 0.0176, 0.0043, 0.0022, 0.0111, 0.0089]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0112],
        [0.0414],
        [0.0253],
        [0.0013],
        [0.0149],
        [0.0170],
        [0.0087],
        [0.0088],
        [0.0102],
        [0.0555],
        [0.0110],
        [0.0144],
        [0.0041],
        [0.0048],
        [0.0147],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0112, 0.0414, 0.0253, 0.0013, 0.0149, 0.0170, 0.0087, 0.0088, 0.0102,
         0.0555, 0.0110, 0.0144, 0.0041, 0.0048, 0.0147, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0469, 0.0065, 0.0112],
        [0.1296, 0.0246, 0.0414],
        [0.1273, 0.0228, 0.0253],
        [0.0128, 0.0024, 0.0013],
        [0.0208, 0.0114, 0.0149],
        [0.0401, 0.0118, 0.0170],
        [0.0326, 0.0142, 0.0087],
        [0.0291, 0.0072, 0.0088],
        [0.0265, 0.0059, 0.0102],
        [0.1439, 0.0252, 0.0555],
        [0.0425, 0.0080, 0.0110],
        [0.0660, 0.0176, 0.0144],
        [0.0141, 0.0043, 0.0041],
        [0.0171, 0.0022, 0.0048],
        [0.0443, 0.0111, 0.0147],
        [0.0715, 0.0089, 0.0159]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0304],
        [0.1298],
        [0.0479],
        [0.1400],
        [0.0462],
        [0.1234],
        [0.0124],
        [0.0232],
        [0.0160],
        [0.1414],
        [0.0466],
        [0.0183],
        [0.0187],
        [0.0131],
        [0.0278],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0304, 0.1298, 0.0479, 0.1400, 0.0462, 0.1234, 0.0124, 0.0232, 0.0160,
         0.1414, 0.0466, 0.0183, 0.0187, 0.0131, 0.0278, 0.0171]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0082],
        [0.0190],
        [0.0118],
        [0.0247],
        [0.0107],
        [0.0273],
        [0.0046],
        [0.0086],
        [0.0059],
        [0.0276],
        [0.0129],
        [0.0070],
        [0.0092],
        [0.0046],
        [0.0067],
        [0.0076]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0190, 0.0118, 0.0247, 0.0107, 0.0273, 0.0046, 0.0086, 0.0059,
         0.0276, 0.0129, 0.0070, 0.0092, 0.0046, 0.0067, 0.0076]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0091],
        [0.0412],
        [0.0262],
        [0.0249],
        [0.0120],
        [0.0320],
        [0.0046],
        [0.0035],
        [0.0051],
        [0.0369],
        [0.0133],
        [0.0083],
        [0.0116],
        [0.0041],
        [0.0079],
        [0.0091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0412, 0.0262, 0.0249, 0.0120, 0.0320, 0.0046, 0.0035, 0.0051,
         0.0369, 0.0133, 0.0083, 0.0116, 0.0041, 0.0079, 0.0091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0304, 0.0082, 0.0091],
        [0.1298, 0.0190, 0.0412],
        [0.0479, 0.0118, 0.0262],
        [0.1400, 0.0247, 0.0249],
        [0.0462, 0.0107, 0.0120],
        [0.1234, 0.0273, 0.0320],
        [0.0124, 0.0046, 0.0046],
        [0.0232, 0.0086, 0.0035],
        [0.0160, 0.0059, 0.0051],
        [0.1414, 0.0276, 0.0369],
        [0.0466, 0.0129, 0.0133],
        [0.0183, 0.0070, 0.0083],
        [0.0187, 0.0092, 0.0116],
        [0.0131, 0.0046, 0.0041],
        [0.0278, 0.0067, 0.0079],
        [0.0171, 0.0076, 0.0091]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0316],
        [0.0500],
        [0.0179],
        [0.1032],
        [0.0237],
        [0.0328],
        [0.0062],
        [0.1025],
        [0.0184],
        [0.0367],
        [0.1643],
        [0.0238],
        [0.0474],
        [0.0255],
        [0.0399],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0316, 0.0500, 0.0179, 0.1032, 0.0237, 0.0328, 0.0062, 0.1025, 0.0184,
         0.0367, 0.1643, 0.0238, 0.0474, 0.0255, 0.0399, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0053],
        [0.0197],
        [0.0052],
        [0.0398],
        [0.0061],
        [0.0064],
        [0.0027],
        [0.0255],
        [0.0085],
        [0.0170],
        [0.0229],
        [0.0083],
        [0.0049],
        [0.0070],
        [0.0094],
        [0.0056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0197, 0.0052, 0.0398, 0.0061, 0.0064, 0.0027, 0.0255, 0.0085,
         0.0170, 0.0229, 0.0083, 0.0049, 0.0070, 0.0094, 0.0056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0091],
        [0.0184],
        [0.0061],
        [0.0451],
        [0.0112],
        [0.0095],
        [0.0043],
        [0.0242],
        [0.0063],
        [0.0182],
        [0.0304],
        [0.0070],
        [0.0128],
        [0.0056],
        [0.0105],
        [0.0040]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0184, 0.0061, 0.0451, 0.0112, 0.0095, 0.0043, 0.0242, 0.0063,
         0.0182, 0.0304, 0.0070, 0.0128, 0.0056, 0.0105, 0.0040]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0316, 0.0053, 0.0091],
        [0.0500, 0.0197, 0.0184],
        [0.0179, 0.0052, 0.0061],
        [0.1032, 0.0398, 0.0451],
        [0.0237, 0.0061, 0.0112],
        [0.0328, 0.0064, 0.0095],
        [0.0062, 0.0027, 0.0043],
        [0.1025, 0.0255, 0.0242],
        [0.0184, 0.0085, 0.0063],
        [0.0367, 0.0170, 0.0182],
        [0.1643, 0.0229, 0.0304],
        [0.0238, 0.0083, 0.0070],
        [0.0474, 0.0049, 0.0128],
        [0.0255, 0.0070, 0.0056],
        [0.0399, 0.0094, 0.0105],
        [0.0155, 0.0056, 0.0040]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0365],
        [0.0149],
        [0.0484],
        [0.1156],
        [0.0276],
        [0.0198]], device='cuda:0', dtype=torch.float16)/tensor([[0.0365, 0.0149, 0.0484, 0.1156, 0.0276, 0.0198]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0087],
        [0.0048],
        [0.0122],
        [0.0425],
        [0.0089],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0048, 0.0122, 0.0425, 0.0089, 0.0065]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0128],
        [0.0053],
        [0.0066],
        [0.0555],
        [0.0117],
        [0.0079]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0053, 0.0066, 0.0555, 0.0117, 0.0079]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0365, 0.0087, 0.0128],
        [0.0149, 0.0048, 0.0053],
        [0.0484, 0.0122, 0.0066],
        [0.1156, 0.0425, 0.0555],
        [0.0276, 0.0089, 0.0117],
        [0.0198, 0.0065, 0.0079]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type modal, variation 1 and batchsize 16: 0:03:03.685351
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI modal 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 343.17it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0536],
        [0.0547],
        [0.0281],
        [0.0406],
        [0.0443],
        [0.0462],
        [0.0415],
        [0.0390],
        [0.0864],
        [0.0391],
        [0.0199],
        [0.0707],
        [0.0396],
        [0.0789],
        [0.0407],
        [0.0364]], device='cuda:0', dtype=torch.float16)/tensor([[0.0536, 0.0547, 0.0281, 0.0406, 0.0443, 0.0462, 0.0415, 0.0390, 0.0864,
         0.0391, 0.0199, 0.0707, 0.0396, 0.0789, 0.0407, 0.0364]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0121],
        [0.0101],
        [0.0150],
        [0.0218],
        [0.0185],
        [0.0122],
        [0.0119],
        [0.0224],
        [0.0146],
        [0.0205],
        [0.0235],
        [0.0193],
        [0.0181],
        [0.0138],
        [0.0233]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0121, 0.0101, 0.0150, 0.0218, 0.0185, 0.0122, 0.0119, 0.0224,
         0.0146, 0.0205, 0.0235, 0.0193, 0.0181, 0.0138, 0.0233]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0095],
        [0.0188],
        [0.0169],
        [0.0152],
        [0.0234],
        [0.0182],
        [0.0125],
        [0.0109],
        [0.0207],
        [0.0107],
        [0.0081],
        [0.0170],
        [0.0173],
        [0.0179],
        [0.0132],
        [0.0201]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0188, 0.0169, 0.0152, 0.0234, 0.0182, 0.0125, 0.0109, 0.0207,
         0.0107, 0.0081, 0.0170, 0.0173, 0.0179, 0.0132, 0.0201]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0536, 0.0133, 0.0095],
        [0.0547, 0.0121, 0.0188],
        [0.0281, 0.0101, 0.0169],
        [0.0406, 0.0150, 0.0152],
        [0.0443, 0.0218, 0.0234],
        [0.0462, 0.0185, 0.0182],
        [0.0415, 0.0122, 0.0125],
        [0.0390, 0.0119, 0.0109],
        [0.0864, 0.0224, 0.0207],
        [0.0391, 0.0146, 0.0107],
        [0.0199, 0.0205, 0.0081],
        [0.0707, 0.0235, 0.0170],
        [0.0396, 0.0193, 0.0173],
        [0.0789, 0.0181, 0.0179],
        [0.0407, 0.0138, 0.0132],
        [0.0364, 0.0233, 0.0201]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0267],
        [0.0641],
        [0.0215],
        [0.1084],
        [0.1058],
        [0.0702],
        [0.0509],
        [0.0558],
        [0.0585],
        [0.0401],
        [0.0686],
        [0.0822],
        [0.0441],
        [0.0770],
        [0.0537],
        [0.0725]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0641, 0.0215, 0.1084, 0.1058, 0.0702, 0.0509, 0.0558, 0.0585,
         0.0401, 0.0686, 0.0822, 0.0441, 0.0770, 0.0537, 0.0725]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0147],
        [0.0209],
        [0.0083],
        [0.0344],
        [0.0255],
        [0.0171],
        [0.0214],
        [0.0227],
        [0.0170],
        [0.0227],
        [0.0197],
        [0.0289],
        [0.0159],
        [0.0304],
        [0.0156],
        [0.0219]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0209, 0.0083, 0.0344, 0.0255, 0.0171, 0.0214, 0.0227, 0.0170,
         0.0227, 0.0197, 0.0289, 0.0159, 0.0304, 0.0156, 0.0219]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0073],
        [0.0377],
        [0.0044],
        [0.0186],
        [0.0221],
        [0.0247],
        [0.0204],
        [0.0330],
        [0.0143],
        [0.0306],
        [0.0182],
        [0.0327],
        [0.0128],
        [0.0309],
        [0.0146],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0377, 0.0044, 0.0186, 0.0221, 0.0247, 0.0204, 0.0330, 0.0143,
         0.0306, 0.0182, 0.0327, 0.0128, 0.0309, 0.0146, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0267, 0.0147, 0.0073],
        [0.0641, 0.0209, 0.0377],
        [0.0215, 0.0083, 0.0044],
        [0.1084, 0.0344, 0.0186],
        [0.1058, 0.0255, 0.0221],
        [0.0702, 0.0171, 0.0247],
        [0.0509, 0.0214, 0.0204],
        [0.0558, 0.0227, 0.0330],
        [0.0585, 0.0170, 0.0143],
        [0.0401, 0.0227, 0.0306],
        [0.0686, 0.0197, 0.0182],
        [0.0822, 0.0289, 0.0327],
        [0.0441, 0.0159, 0.0128],
        [0.0770, 0.0304, 0.0309],
        [0.0537, 0.0156, 0.0146],
        [0.0725, 0.0219, 0.0127]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0651],
        [0.0929],
        [0.0317],
        [0.0512],
        [0.0826],
        [0.0211],
        [0.0906],
        [0.0562],
        [0.0296],
        [0.0745],
        [0.0383],
        [0.0748],
        [0.0531],
        [0.0504],
        [0.0269],
        [0.0234]], device='cuda:0', dtype=torch.float16)/tensor([[0.0651, 0.0929, 0.0317, 0.0512, 0.0826, 0.0211, 0.0906, 0.0562, 0.0296,
         0.0745, 0.0383, 0.0748, 0.0531, 0.0504, 0.0269, 0.0234]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0235],
        [0.0258],
        [0.0118],
        [0.0235],
        [0.0222],
        [0.0107],
        [0.0193],
        [0.0136],
        [0.0112],
        [0.0214],
        [0.0146],
        [0.0222],
        [0.0196],
        [0.0205],
        [0.0082],
        [0.0146]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0258, 0.0118, 0.0235, 0.0222, 0.0107, 0.0193, 0.0136, 0.0112,
         0.0214, 0.0146, 0.0222, 0.0196, 0.0205, 0.0082, 0.0146]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0134],
        [0.0252],
        [0.0133],
        [0.0347],
        [0.0272],
        [0.0107],
        [0.0316],
        [0.0137],
        [0.0141],
        [0.0274],
        [0.0304],
        [0.0178],
        [0.0170],
        [0.0199],
        [0.0092],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0252, 0.0133, 0.0347, 0.0272, 0.0107, 0.0316, 0.0137, 0.0141,
         0.0274, 0.0304, 0.0178, 0.0170, 0.0199, 0.0092, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0651, 0.0235, 0.0134],
        [0.0929, 0.0258, 0.0252],
        [0.0317, 0.0118, 0.0133],
        [0.0512, 0.0235, 0.0347],
        [0.0826, 0.0222, 0.0272],
        [0.0211, 0.0107, 0.0107],
        [0.0906, 0.0193, 0.0316],
        [0.0562, 0.0136, 0.0137],
        [0.0296, 0.0112, 0.0141],
        [0.0745, 0.0214, 0.0274],
        [0.0383, 0.0146, 0.0304],
        [0.0748, 0.0222, 0.0178],
        [0.0531, 0.0196, 0.0170],
        [0.0504, 0.0205, 0.0199],
        [0.0269, 0.0082, 0.0092],
        [0.0234, 0.0146, 0.0124]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0760],
        [0.0678],
        [0.0503],
        [0.0573],
        [0.0369],
        [0.0829],
        [0.0623],
        [0.0452],
        [0.0444],
        [0.0396],
        [0.0565],
        [0.0706],
        [0.0496],
        [0.0502],
        [0.0787],
        [0.0653]], device='cuda:0', dtype=torch.float16)/tensor([[0.0760, 0.0678, 0.0503, 0.0573, 0.0369, 0.0829, 0.0623, 0.0452, 0.0444,
         0.0396, 0.0565, 0.0706, 0.0496, 0.0502, 0.0787, 0.0653]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0216],
        [0.0178],
        [0.0147],
        [0.0115],
        [0.0097],
        [0.0182],
        [0.0179],
        [0.0114],
        [0.0149],
        [0.0220],
        [0.0153],
        [0.0260],
        [0.0227],
        [0.0100],
        [0.0341],
        [0.0186]], device='cuda:0', dtype=torch.float16)/tensor([[0.0216, 0.0178, 0.0147, 0.0115, 0.0097, 0.0182, 0.0179, 0.0114, 0.0149,
         0.0220, 0.0153, 0.0260, 0.0227, 0.0100, 0.0341, 0.0186]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0334],
        [0.0180],
        [0.0151],
        [0.0130],
        [0.0067],
        [0.0185],
        [0.0359],
        [0.0186],
        [0.0094],
        [0.0121],
        [0.0119],
        [0.0174],
        [0.0184],
        [0.0140],
        [0.0425],
        [0.0183]], device='cuda:0', dtype=torch.float16)/tensor([[0.0334, 0.0180, 0.0151, 0.0130, 0.0067, 0.0185, 0.0359, 0.0186, 0.0094,
         0.0121, 0.0119, 0.0174, 0.0184, 0.0140, 0.0425, 0.0183]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0760, 0.0216, 0.0334],
        [0.0678, 0.0178, 0.0180],
        [0.0503, 0.0147, 0.0151],
        [0.0573, 0.0115, 0.0130],
        [0.0369, 0.0097, 0.0067],
        [0.0829, 0.0182, 0.0185],
        [0.0623, 0.0179, 0.0359],
        [0.0452, 0.0114, 0.0186],
        [0.0444, 0.0149, 0.0094],
        [0.0396, 0.0220, 0.0121],
        [0.0565, 0.0153, 0.0119],
        [0.0706, 0.0260, 0.0174],
        [0.0496, 0.0227, 0.0184],
        [0.0502, 0.0100, 0.0140],
        [0.0787, 0.0341, 0.0425],
        [0.0653, 0.0186, 0.0183]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0654],
        [0.0573],
        [0.0726],
        [0.0888],
        [0.0341],
        [0.0560],
        [0.0225],
        [0.0874],
        [0.0464],
        [0.0206],
        [0.0675],
        [0.0541],
        [0.0591],
        [0.0415],
        [0.0490],
        [0.0671]], device='cuda:0', dtype=torch.float16)/tensor([[0.0654, 0.0573, 0.0726, 0.0888, 0.0341, 0.0560, 0.0225, 0.0874, 0.0464,
         0.0206, 0.0675, 0.0541, 0.0591, 0.0415, 0.0490, 0.0671]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0171],
        [0.0157],
        [0.0271],
        [0.0232],
        [0.0170],
        [0.0167],
        [0.0094],
        [0.0272],
        [0.0219],
        [0.0084],
        [0.0269],
        [0.0213],
        [0.0160],
        [0.0104],
        [0.0214],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0157, 0.0271, 0.0232, 0.0170, 0.0167, 0.0094, 0.0272, 0.0219,
         0.0084, 0.0269, 0.0213, 0.0160, 0.0104, 0.0214, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0173],
        [0.0195],
        [0.0362],
        [0.0234],
        [0.0144],
        [0.0096],
        [0.0144],
        [0.0220],
        [0.0262],
        [0.0074],
        [0.0243],
        [0.0219],
        [0.0162],
        [0.0110],
        [0.0178],
        [0.0218]], device='cuda:0', dtype=torch.float16)/tensor([[0.0173, 0.0195, 0.0362, 0.0234, 0.0144, 0.0096, 0.0144, 0.0220, 0.0262,
         0.0074, 0.0243, 0.0219, 0.0162, 0.0110, 0.0178, 0.0218]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0654, 0.0171, 0.0173],
        [0.0573, 0.0157, 0.0195],
        [0.0726, 0.0271, 0.0362],
        [0.0888, 0.0232, 0.0234],
        [0.0341, 0.0170, 0.0144],
        [0.0560, 0.0167, 0.0096],
        [0.0225, 0.0094, 0.0144],
        [0.0874, 0.0272, 0.0220],
        [0.0464, 0.0219, 0.0262],
        [0.0206, 0.0084, 0.0074],
        [0.0675, 0.0269, 0.0243],
        [0.0541, 0.0213, 0.0219],
        [0.0591, 0.0160, 0.0162],
        [0.0415, 0.0104, 0.0110],
        [0.0490, 0.0214, 0.0178],
        [0.0671, 0.0206, 0.0218]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0603],
        [0.0997],
        [0.0387],
        [0.0736],
        [0.0781],
        [0.0771],
        [0.0641],
        [0.0797],
        [0.0688],
        [0.0385],
        [0.0408],
        [0.0422],
        [0.0394],
        [0.0400],
        [0.0439],
        [0.0402]], device='cuda:0', dtype=torch.float16)/tensor([[0.0603, 0.0997, 0.0387, 0.0736, 0.0781, 0.0771, 0.0641, 0.0797, 0.0688,
         0.0385, 0.0408, 0.0422, 0.0394, 0.0400, 0.0439, 0.0402]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0211],
        [0.0173],
        [0.0264],
        [0.0195],
        [0.0199],
        [0.0133],
        [0.0119],
        [0.0226],
        [0.0177],
        [0.0218],
        [0.0165],
        [0.0192],
        [0.0140],
        [0.0168],
        [0.0101],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0173, 0.0264, 0.0195, 0.0199, 0.0133, 0.0119, 0.0226, 0.0177,
         0.0218, 0.0165, 0.0192, 0.0140, 0.0168, 0.0101, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0164],
        [0.0256],
        [0.0147],
        [0.0218],
        [0.0210],
        [0.0275],
        [0.0125],
        [0.0236],
        [0.0178],
        [0.0163],
        [0.0173],
        [0.0125],
        [0.0163],
        [0.0104],
        [0.0150],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0164, 0.0256, 0.0147, 0.0218, 0.0210, 0.0275, 0.0125, 0.0236, 0.0178,
         0.0163, 0.0173, 0.0125, 0.0163, 0.0104, 0.0150, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0603, 0.0211, 0.0164],
        [0.0997, 0.0173, 0.0256],
        [0.0387, 0.0264, 0.0147],
        [0.0736, 0.0195, 0.0218],
        [0.0781, 0.0199, 0.0210],
        [0.0771, 0.0133, 0.0275],
        [0.0641, 0.0119, 0.0125],
        [0.0797, 0.0226, 0.0236],
        [0.0688, 0.0177, 0.0178],
        [0.0385, 0.0218, 0.0163],
        [0.0408, 0.0165, 0.0173],
        [0.0422, 0.0192, 0.0125],
        [0.0394, 0.0140, 0.0163],
        [0.0400, 0.0168, 0.0104],
        [0.0439, 0.0101, 0.0150],
        [0.0402, 0.0123, 0.0128]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0580],
        [0.0472],
        [0.0957],
        [0.0260],
        [0.0570],
        [0.0620],
        [0.0777],
        [0.0488],
        [0.0540],
        [0.0457],
        [0.0627],
        [0.0440],
        [0.0652],
        [0.0921],
        [0.0688],
        [0.0549]], device='cuda:0', dtype=torch.float16)/tensor([[0.0580, 0.0472, 0.0957, 0.0260, 0.0570, 0.0620, 0.0777, 0.0488, 0.0540,
         0.0457, 0.0627, 0.0440, 0.0652, 0.0921, 0.0688, 0.0549]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0161],
        [0.0149],
        [0.0201],
        [0.0087],
        [0.0231],
        [0.0295],
        [0.0293],
        [0.0227],
        [0.0272],
        [0.0054],
        [0.0251],
        [0.0136],
        [0.0150],
        [0.0260],
        [0.0203],
        [0.0236]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0149, 0.0201, 0.0087, 0.0231, 0.0295, 0.0293, 0.0227, 0.0272,
         0.0054, 0.0251, 0.0136, 0.0150, 0.0260, 0.0203, 0.0236]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0183],
        [0.0175],
        [0.0229],
        [0.0048],
        [0.0223],
        [0.0410],
        [0.0337],
        [0.0146],
        [0.0176],
        [0.0062],
        [0.0208],
        [0.0117],
        [0.0124],
        [0.0187],
        [0.0291],
        [0.0259]], device='cuda:0', dtype=torch.float16)/tensor([[0.0183, 0.0175, 0.0229, 0.0048, 0.0223, 0.0410, 0.0337, 0.0146, 0.0176,
         0.0062, 0.0208, 0.0117, 0.0124, 0.0187, 0.0291, 0.0259]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0580, 0.0161, 0.0183],
        [0.0472, 0.0149, 0.0175],
        [0.0957, 0.0201, 0.0229],
        [0.0260, 0.0087, 0.0048],
        [0.0570, 0.0231, 0.0223],
        [0.0620, 0.0295, 0.0410],
        [0.0777, 0.0293, 0.0337],
        [0.0488, 0.0227, 0.0146],
        [0.0540, 0.0272, 0.0176],
        [0.0457, 0.0054, 0.0062],
        [0.0627, 0.0251, 0.0208],
        [0.0440, 0.0136, 0.0117],
        [0.0652, 0.0150, 0.0124],
        [0.0921, 0.0260, 0.0187],
        [0.0688, 0.0203, 0.0291],
        [0.0549, 0.0236, 0.0259]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0539],
        [0.0687],
        [0.0455],
        [0.0985],
        [0.0452],
        [0.0256],
        [0.0717],
        [0.0265],
        [0.0243],
        [0.0305],
        [0.0214],
        [0.0515],
        [0.0336],
        [0.0503],
        [0.0788],
        [0.0791]], device='cuda:0', dtype=torch.float16)/tensor([[0.0539, 0.0687, 0.0455, 0.0985, 0.0452, 0.0256, 0.0717, 0.0265, 0.0243,
         0.0305, 0.0214, 0.0515, 0.0336, 0.0503, 0.0788, 0.0791]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0179],
        [0.0144],
        [0.0223],
        [0.0259],
        [0.0237],
        [0.0072],
        [0.0206],
        [0.0079],
        [0.0090],
        [0.0138],
        [0.0100],
        [0.0102],
        [0.0185],
        [0.0167],
        [0.0190],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0179, 0.0144, 0.0223, 0.0259, 0.0237, 0.0072, 0.0206, 0.0079, 0.0090,
         0.0138, 0.0100, 0.0102, 0.0185, 0.0167, 0.0190, 0.0143]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0116],
        [0.0340],
        [0.0220],
        [0.0335],
        [0.0183],
        [0.0068],
        [0.0287],
        [0.0080],
        [0.0134],
        [0.0153],
        [0.0084],
        [0.0128],
        [0.0143],
        [0.0147],
        [0.0177],
        [0.0325]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0340, 0.0220, 0.0335, 0.0183, 0.0068, 0.0287, 0.0080, 0.0134,
         0.0153, 0.0084, 0.0128, 0.0143, 0.0147, 0.0177, 0.0325]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0539, 0.0179, 0.0116],
        [0.0687, 0.0144, 0.0340],
        [0.0455, 0.0223, 0.0220],
        [0.0985, 0.0259, 0.0335],
        [0.0452, 0.0237, 0.0183],
        [0.0256, 0.0072, 0.0068],
        [0.0717, 0.0206, 0.0287],
        [0.0265, 0.0079, 0.0080],
        [0.0243, 0.0090, 0.0134],
        [0.0305, 0.0138, 0.0153],
        [0.0214, 0.0100, 0.0084],
        [0.0515, 0.0102, 0.0128],
        [0.0336, 0.0185, 0.0143],
        [0.0503, 0.0167, 0.0147],
        [0.0788, 0.0190, 0.0177],
        [0.0791, 0.0143, 0.0325]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0679],
        [0.0333],
        [0.0508],
        [0.0308],
        [0.0823],
        [0.0099],
        [0.0432],
        [0.0862],
        [0.0654],
        [0.0908],
        [0.0822],
        [0.0740],
        [0.0501],
        [0.0727],
        [0.0230],
        [0.0682]], device='cuda:0', dtype=torch.float16)/tensor([[0.0679, 0.0333, 0.0508, 0.0308, 0.0823, 0.0099, 0.0432, 0.0862, 0.0654,
         0.0908, 0.0822, 0.0740, 0.0501, 0.0727, 0.0230, 0.0682]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0251],
        [0.0176],
        [0.0111],
        [0.0212],
        [0.0263],
        [0.0088],
        [0.0141],
        [0.0292],
        [0.0228],
        [0.0267],
        [0.0231],
        [0.0205],
        [0.0237],
        [0.0301],
        [0.0112],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0176, 0.0111, 0.0212, 0.0263, 0.0088, 0.0141, 0.0292, 0.0228,
         0.0267, 0.0231, 0.0205, 0.0237, 0.0301, 0.0112, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0306],
        [0.0167],
        [0.0117],
        [0.0139],
        [0.0198],
        [0.0110],
        [0.0079],
        [0.0260],
        [0.0238],
        [0.0244],
        [0.0200],
        [0.0166],
        [0.0222],
        [0.0323],
        [0.0089],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0167, 0.0117, 0.0139, 0.0198, 0.0110, 0.0079, 0.0260, 0.0238,
         0.0244, 0.0200, 0.0166, 0.0222, 0.0323, 0.0089, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0679, 0.0251, 0.0306],
        [0.0333, 0.0176, 0.0167],
        [0.0508, 0.0111, 0.0117],
        [0.0308, 0.0212, 0.0139],
        [0.0823, 0.0263, 0.0198],
        [0.0099, 0.0088, 0.0110],
        [0.0432, 0.0141, 0.0079],
        [0.0862, 0.0292, 0.0260],
        [0.0654, 0.0228, 0.0238],
        [0.0908, 0.0267, 0.0244],
        [0.0822, 0.0231, 0.0200],
        [0.0740, 0.0205, 0.0166],
        [0.0501, 0.0237, 0.0222],
        [0.0727, 0.0301, 0.0323],
        [0.0230, 0.0112, 0.0089],
        [0.0682, 0.0155, 0.0176]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0410],
        [0.0455],
        [0.0300],
        [0.0320],
        [0.0600],
        [0.0671],
        [0.0755],
        [0.0817],
        [0.0693],
        [0.0501],
        [0.0966],
        [0.0438],
        [0.0545],
        [0.0562],
        [0.0404],
        [0.0300]], device='cuda:0', dtype=torch.float16)/tensor([[0.0410, 0.0455, 0.0300, 0.0320, 0.0600, 0.0671, 0.0755, 0.0817, 0.0693,
         0.0501, 0.0966, 0.0438, 0.0545, 0.0562, 0.0404, 0.0300]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0140],
        [0.0164],
        [0.0222],
        [0.0156],
        [0.0170],
        [0.0204],
        [0.0278],
        [0.0299],
        [0.0221],
        [0.0170],
        [0.0306],
        [0.0182],
        [0.0173],
        [0.0137],
        [0.0143],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0140, 0.0164, 0.0222, 0.0156, 0.0170, 0.0204, 0.0278, 0.0299, 0.0221,
         0.0170, 0.0306, 0.0182, 0.0173, 0.0137, 0.0143, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0147],
        [0.0144],
        [0.0107],
        [0.0045],
        [0.0287],
        [0.0186],
        [0.0377],
        [0.0399],
        [0.0124],
        [0.0099],
        [0.0345],
        [0.0205],
        [0.0169],
        [0.0229],
        [0.0153],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0144, 0.0107, 0.0045, 0.0287, 0.0186, 0.0377, 0.0399, 0.0124,
         0.0099, 0.0345, 0.0205, 0.0169, 0.0229, 0.0153, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0410, 0.0140, 0.0147],
        [0.0455, 0.0164, 0.0144],
        [0.0300, 0.0222, 0.0107],
        [0.0320, 0.0156, 0.0045],
        [0.0600, 0.0170, 0.0287],
        [0.0671, 0.0204, 0.0186],
        [0.0755, 0.0278, 0.0377],
        [0.0817, 0.0299, 0.0399],
        [0.0693, 0.0221, 0.0124],
        [0.0501, 0.0170, 0.0099],
        [0.0966, 0.0306, 0.0345],
        [0.0438, 0.0182, 0.0205],
        [0.0545, 0.0173, 0.0169],
        [0.0562, 0.0137, 0.0229],
        [0.0404, 0.0143, 0.0153],
        [0.0300, 0.0096, 0.0109]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0791],
        [0.0690],
        [0.0551],
        [0.0763],
        [0.0350],
        [0.0740],
        [0.0740],
        [0.0478],
        [0.0414],
        [0.0692],
        [0.0269],
        [0.0539],
        [0.0854],
        [0.0567],
        [0.0595],
        [0.0680]], device='cuda:0', dtype=torch.float16)/tensor([[0.0791, 0.0690, 0.0551, 0.0763, 0.0350, 0.0740, 0.0740, 0.0478, 0.0414,
         0.0692, 0.0269, 0.0539, 0.0854, 0.0567, 0.0595, 0.0680]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0297],
        [0.0202],
        [0.0149],
        [0.0272],
        [0.0126],
        [0.0152],
        [0.0195],
        [0.0172],
        [0.0148],
        [0.0184],
        [0.0102],
        [0.0156],
        [0.0135],
        [0.0222],
        [0.0195],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0297, 0.0202, 0.0149, 0.0272, 0.0126, 0.0152, 0.0195, 0.0172, 0.0148,
         0.0184, 0.0102, 0.0156, 0.0135, 0.0222, 0.0195, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0347],
        [0.0152],
        [0.0189],
        [0.0299],
        [0.0126],
        [0.0136],
        [0.0206],
        [0.0136],
        [0.0146],
        [0.0166],
        [0.0117],
        [0.0198],
        [0.0196],
        [0.0190],
        [0.0135],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0152, 0.0189, 0.0299, 0.0126, 0.0136, 0.0206, 0.0136, 0.0146,
         0.0166, 0.0117, 0.0198, 0.0196, 0.0190, 0.0135, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0791, 0.0297, 0.0347],
        [0.0690, 0.0202, 0.0152],
        [0.0551, 0.0149, 0.0189],
        [0.0763, 0.0272, 0.0299],
        [0.0350, 0.0126, 0.0126],
        [0.0740, 0.0152, 0.0136],
        [0.0740, 0.0195, 0.0206],
        [0.0478, 0.0172, 0.0136],
        [0.0414, 0.0148, 0.0146],
        [0.0692, 0.0184, 0.0166],
        [0.0269, 0.0102, 0.0117],
        [0.0539, 0.0156, 0.0198],
        [0.0854, 0.0135, 0.0196],
        [0.0567, 0.0222, 0.0190],
        [0.0595, 0.0195, 0.0135],
        [0.0680, 0.0168, 0.0136]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0683],
        [0.0377],
        [0.0568],
        [0.0468],
        [0.0294],
        [0.0411],
        [0.0838],
        [0.0393],
        [0.0477],
        [0.0449],
        [0.0419],
        [0.0773],
        [0.0760],
        [0.0622],
        [0.0460],
        [0.1034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0683, 0.0377, 0.0568, 0.0468, 0.0294, 0.0411, 0.0838, 0.0393, 0.0477,
         0.0449, 0.0419, 0.0773, 0.0760, 0.0622, 0.0460, 0.1034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0231],
        [0.0192],
        [0.0223],
        [0.0204],
        [0.0121],
        [0.0155],
        [0.0153],
        [0.0124],
        [0.0277],
        [0.0322],
        [0.0167],
        [0.0253],
        [0.0158],
        [0.0114],
        [0.0138],
        [0.0319]], device='cuda:0', dtype=torch.float16)/tensor([[0.0231, 0.0192, 0.0223, 0.0204, 0.0121, 0.0155, 0.0153, 0.0124, 0.0277,
         0.0322, 0.0167, 0.0253, 0.0158, 0.0114, 0.0138, 0.0319]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0261],
        [0.0110],
        [0.0219],
        [0.0192],
        [0.0097],
        [0.0182],
        [0.0189],
        [0.0160],
        [0.0233],
        [0.0235],
        [0.0129],
        [0.0194],
        [0.0216],
        [0.0150],
        [0.0242],
        [0.0188]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0110, 0.0219, 0.0192, 0.0097, 0.0182, 0.0189, 0.0160, 0.0233,
         0.0235, 0.0129, 0.0194, 0.0216, 0.0150, 0.0242, 0.0188]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0683, 0.0231, 0.0261],
        [0.0377, 0.0192, 0.0110],
        [0.0568, 0.0223, 0.0219],
        [0.0468, 0.0204, 0.0192],
        [0.0294, 0.0121, 0.0097],
        [0.0411, 0.0155, 0.0182],
        [0.0838, 0.0153, 0.0189],
        [0.0393, 0.0124, 0.0160],
        [0.0477, 0.0277, 0.0233],
        [0.0449, 0.0322, 0.0235],
        [0.0419, 0.0167, 0.0129],
        [0.0773, 0.0253, 0.0194],
        [0.0760, 0.0158, 0.0216],
        [0.0622, 0.0114, 0.0150],
        [0.0460, 0.0138, 0.0242],
        [0.1034, 0.0319, 0.0188]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0748],
        [0.0970],
        [0.0641],
        [0.0574],
        [0.0392],
        [0.1021]], device='cuda:0', dtype=torch.float16)/tensor([[0.0748, 0.0970, 0.0641, 0.0574, 0.0392, 0.1021]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0224],
        [0.0223],
        [0.0160],
        [0.0206],
        [0.0106],
        [0.0297]], device='cuda:0', dtype=torch.float16)/tensor([[0.0224, 0.0223, 0.0160, 0.0206, 0.0106, 0.0297]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0118],
        [0.0421],
        [0.0168],
        [0.0259],
        [0.0096],
        [0.0246]], device='cuda:0', dtype=torch.float16)/tensor([[0.0118, 0.0421, 0.0168, 0.0259, 0.0096, 0.0246]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0748, 0.0224, 0.0118],
        [0.0970, 0.0223, 0.0421],
        [0.0641, 0.0160, 0.0168],
        [0.0574, 0.0206, 0.0259],
        [0.0392, 0.0106, 0.0096],
        [0.1021, 0.0297, 0.0246]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type modal, variation 2 and batchsize 16: 0:03:02.874762
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI modal 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 324.80it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0045],
        [0.0318],
        [0.0084],
        [0.0059],
        [0.0145],
        [0.0139],
        [0.0253],
        [0.0111],
        [0.0050],
        [0.0067],
        [0.0087],
        [0.0233],
        [0.0101],
        [0.0145],
        [0.0028],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0318, 0.0084, 0.0059, 0.0145, 0.0139, 0.0253, 0.0111, 0.0050,
         0.0067, 0.0087, 0.0233, 0.0101, 0.0145, 0.0028, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0035],
        [0.0112],
        [0.0089],
        [0.0022],
        [0.0052],
        [0.0048],
        [0.0055],
        [0.0061],
        [0.0026],
        [0.0027],
        [0.0067],
        [0.0101],
        [0.0130],
        [0.0038],
        [0.0024],
        [0.0078]], device='cuda:0', dtype=torch.float16)/tensor([[0.0035, 0.0112, 0.0089, 0.0022, 0.0052, 0.0048, 0.0055, 0.0061, 0.0026,
         0.0027, 0.0067, 0.0101, 0.0130, 0.0038, 0.0024, 0.0078]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0017],
        [0.0102],
        [0.0036],
        [0.0027],
        [0.0051],
        [0.0040],
        [0.0070],
        [0.0026],
        [0.0033],
        [0.0017],
        [0.0046],
        [0.0061],
        [0.0061],
        [0.0028],
        [0.0021],
        [0.0080]], device='cuda:0', dtype=torch.float16)/tensor([[0.0017, 0.0102, 0.0036, 0.0027, 0.0051, 0.0040, 0.0070, 0.0026, 0.0033,
         0.0017, 0.0046, 0.0061, 0.0061, 0.0028, 0.0021, 0.0080]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0045, 0.0035, 0.0017],
        [0.0318, 0.0112, 0.0102],
        [0.0084, 0.0089, 0.0036],
        [0.0059, 0.0022, 0.0027],
        [0.0145, 0.0052, 0.0051],
        [0.0139, 0.0048, 0.0040],
        [0.0253, 0.0055, 0.0070],
        [0.0111, 0.0061, 0.0026],
        [0.0050, 0.0026, 0.0033],
        [0.0067, 0.0027, 0.0017],
        [0.0087, 0.0067, 0.0046],
        [0.0233, 0.0101, 0.0061],
        [0.0101, 0.0130, 0.0061],
        [0.0145, 0.0038, 0.0028],
        [0.0028, 0.0024, 0.0021],
        [0.0126, 0.0078, 0.0080]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0082],
        [0.0173],
        [0.0071],
        [0.0083],
        [0.0068],
        [0.0067],
        [0.0416],
        [0.0172],
        [0.0147],
        [0.0148],
        [0.0095],
        [0.0124],
        [0.0367],
        [0.0124],
        [0.0246],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0173, 0.0071, 0.0083, 0.0068, 0.0067, 0.0416, 0.0172, 0.0147,
         0.0148, 0.0095, 0.0124, 0.0367, 0.0124, 0.0246, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0054],
        [0.0040],
        [0.0045],
        [0.0037],
        [0.0041],
        [0.0030],
        [0.0160],
        [0.0109],
        [0.0052],
        [0.0057],
        [0.0047],
        [0.0050],
        [0.0208],
        [0.0040],
        [0.0064],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0040, 0.0045, 0.0037, 0.0041, 0.0030, 0.0160, 0.0109, 0.0052,
         0.0057, 0.0047, 0.0050, 0.0208, 0.0040, 0.0064, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0105],
        [0.0038],
        [0.0029],
        [0.0010],
        [0.0025],
        [0.0065],
        [0.0066],
        [0.0036],
        [0.0025],
        [0.0028],
        [0.0043],
        [0.0177],
        [0.0029],
        [0.0081],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0105, 0.0038, 0.0029, 0.0010, 0.0025, 0.0065, 0.0066, 0.0036,
         0.0025, 0.0028, 0.0043, 0.0177, 0.0029, 0.0081, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0082, 0.0054, 0.0034],
        [0.0173, 0.0040, 0.0105],
        [0.0071, 0.0045, 0.0038],
        [0.0083, 0.0037, 0.0029],
        [0.0068, 0.0041, 0.0010],
        [0.0067, 0.0030, 0.0025],
        [0.0416, 0.0160, 0.0065],
        [0.0172, 0.0109, 0.0066],
        [0.0147, 0.0052, 0.0036],
        [0.0148, 0.0057, 0.0025],
        [0.0095, 0.0047, 0.0028],
        [0.0124, 0.0050, 0.0043],
        [0.0367, 0.0208, 0.0177],
        [0.0124, 0.0040, 0.0029],
        [0.0246, 0.0064, 0.0081],
        [0.0068, 0.0034, 0.0030]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0051],
        [0.0096],
        [0.0085],
        [0.0137],
        [0.0526],
        [0.0128],
        [0.0090],
        [0.0128],
        [0.0123],
        [0.0176],
        [0.0051],
        [0.0103],
        [0.0167],
        [0.0051],
        [0.0151],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0051, 0.0096, 0.0085, 0.0137, 0.0526, 0.0128, 0.0090, 0.0128, 0.0123,
         0.0176, 0.0051, 0.0103, 0.0167, 0.0051, 0.0151, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0040],
        [0.0038],
        [0.0039],
        [0.0044],
        [0.0063],
        [0.0061],
        [0.0082],
        [0.0100],
        [0.0102],
        [0.0048],
        [0.0039],
        [0.0055],
        [0.0059],
        [0.0079],
        [0.0070],
        [0.0067]], device='cuda:0', dtype=torch.float16)/tensor([[0.0040, 0.0038, 0.0039, 0.0044, 0.0063, 0.0061, 0.0082, 0.0100, 0.0102,
         0.0048, 0.0039, 0.0055, 0.0059, 0.0079, 0.0070, 0.0067]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0012],
        [0.0052],
        [0.0021],
        [0.0050],
        [0.0167],
        [0.0032],
        [0.0035],
        [0.0048],
        [0.0059],
        [0.0047],
        [0.0018],
        [0.0031],
        [0.0041],
        [0.0053],
        [0.0041],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0012, 0.0052, 0.0021, 0.0050, 0.0167, 0.0032, 0.0035, 0.0048, 0.0059,
         0.0047, 0.0018, 0.0031, 0.0041, 0.0053, 0.0041, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0051, 0.0040, 0.0012],
        [0.0096, 0.0038, 0.0052],
        [0.0085, 0.0039, 0.0021],
        [0.0137, 0.0044, 0.0050],
        [0.0526, 0.0063, 0.0167],
        [0.0128, 0.0061, 0.0032],
        [0.0090, 0.0082, 0.0035],
        [0.0128, 0.0100, 0.0048],
        [0.0123, 0.0102, 0.0059],
        [0.0176, 0.0048, 0.0047],
        [0.0051, 0.0039, 0.0018],
        [0.0103, 0.0055, 0.0031],
        [0.0167, 0.0059, 0.0041],
        [0.0051, 0.0079, 0.0053],
        [0.0151, 0.0070, 0.0041],
        [0.0128, 0.0067, 0.0048]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0237],
        [0.0017],
        [0.0300],
        [0.0069],
        [0.0215],
        [0.0065],
        [0.0323],
        [0.0104],
        [0.0107],
        [0.0148],
        [0.0270],
        [0.0082],
        [0.0118],
        [0.0113],
        [0.0058],
        [0.0154]], device='cuda:0', dtype=torch.float16)/tensor([[0.0237, 0.0017, 0.0300, 0.0069, 0.0215, 0.0065, 0.0323, 0.0104, 0.0107,
         0.0148, 0.0270, 0.0082, 0.0118, 0.0113, 0.0058, 0.0154]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0085],
        [0.0010],
        [0.0092],
        [0.0085],
        [0.0091],
        [0.0098],
        [0.0065],
        [0.0053],
        [0.0038],
        [0.0203],
        [0.0088],
        [0.0044],
        [0.0112],
        [0.0091],
        [0.0026],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0085, 0.0010, 0.0092, 0.0085, 0.0091, 0.0098, 0.0065, 0.0053, 0.0038,
         0.0203, 0.0088, 0.0044, 0.0112, 0.0091, 0.0026, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0063],
        [0.0008],
        [0.0061],
        [0.0031],
        [0.0051],
        [0.0053],
        [0.0137],
        [0.0033],
        [0.0046],
        [0.0073],
        [0.0070],
        [0.0019],
        [0.0028],
        [0.0105],
        [0.0043],
        [0.0072]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0008, 0.0061, 0.0031, 0.0051, 0.0053, 0.0137, 0.0033, 0.0046,
         0.0073, 0.0070, 0.0019, 0.0028, 0.0105, 0.0043, 0.0072]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0237, 0.0085, 0.0063],
        [0.0017, 0.0010, 0.0008],
        [0.0300, 0.0092, 0.0061],
        [0.0069, 0.0085, 0.0031],
        [0.0215, 0.0091, 0.0051],
        [0.0065, 0.0098, 0.0053],
        [0.0323, 0.0065, 0.0137],
        [0.0104, 0.0053, 0.0033],
        [0.0107, 0.0038, 0.0046],
        [0.0148, 0.0203, 0.0073],
        [0.0270, 0.0088, 0.0070],
        [0.0082, 0.0044, 0.0019],
        [0.0118, 0.0112, 0.0028],
        [0.0113, 0.0091, 0.0105],
        [0.0058, 0.0026, 0.0043],
        [0.0154, 0.0095, 0.0072]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0079],
        [0.0055],
        [0.0124],
        [0.0183],
        [0.0201],
        [0.0119],
        [0.0366],
        [0.0126],
        [0.0061],
        [0.0088],
        [0.0131],
        [0.0128],
        [0.0153],
        [0.0079],
        [0.0109],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0079, 0.0055, 0.0124, 0.0183, 0.0201, 0.0119, 0.0366, 0.0126, 0.0061,
         0.0088, 0.0131, 0.0128, 0.0153, 0.0079, 0.0109, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0056],
        [0.0027],
        [0.0055],
        [0.0074],
        [0.0057],
        [0.0061],
        [0.0088],
        [0.0049],
        [0.0064],
        [0.0060],
        [0.0061],
        [0.0065],
        [0.0089],
        [0.0051],
        [0.0070],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0056, 0.0027, 0.0055, 0.0074, 0.0057, 0.0061, 0.0088, 0.0049, 0.0064,
         0.0060, 0.0061, 0.0065, 0.0089, 0.0051, 0.0070, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0014],
        [0.0032],
        [0.0036],
        [0.0073],
        [0.0031],
        [0.0170],
        [0.0039],
        [0.0046],
        [0.0031],
        [0.0134],
        [0.0057],
        [0.0049],
        [0.0031],
        [0.0060],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0014, 0.0032, 0.0036, 0.0073, 0.0031, 0.0170, 0.0039, 0.0046,
         0.0031, 0.0134, 0.0057, 0.0049, 0.0031, 0.0060, 0.0065]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0079, 0.0056, 0.0034],
        [0.0055, 0.0027, 0.0014],
        [0.0124, 0.0055, 0.0032],
        [0.0183, 0.0074, 0.0036],
        [0.0201, 0.0057, 0.0073],
        [0.0119, 0.0061, 0.0031],
        [0.0366, 0.0088, 0.0170],
        [0.0126, 0.0049, 0.0039],
        [0.0061, 0.0064, 0.0046],
        [0.0088, 0.0060, 0.0031],
        [0.0131, 0.0061, 0.0134],
        [0.0128, 0.0065, 0.0057],
        [0.0153, 0.0089, 0.0049],
        [0.0079, 0.0051, 0.0031],
        [0.0109, 0.0070, 0.0060],
        [0.0118, 0.0109, 0.0065]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0190],
        [0.0097],
        [0.0045],
        [0.0082],
        [0.0089],
        [0.0178],
        [0.0103],
        [0.0129],
        [0.0140],
        [0.0075],
        [0.0184],
        [0.0113],
        [0.0314],
        [0.0175],
        [0.0059],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0097, 0.0045, 0.0082, 0.0089, 0.0178, 0.0103, 0.0129, 0.0140,
         0.0075, 0.0184, 0.0113, 0.0314, 0.0175, 0.0059, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0043],
        [0.0055],
        [0.0042],
        [0.0069],
        [0.0057],
        [0.0056],
        [0.0046],
        [0.0051],
        [0.0062],
        [0.0043],
        [0.0141],
        [0.0056],
        [0.0110],
        [0.0066],
        [0.0032],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0043, 0.0055, 0.0042, 0.0069, 0.0057, 0.0056, 0.0046, 0.0051, 0.0062,
         0.0043, 0.0141, 0.0056, 0.0110, 0.0066, 0.0032, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0071],
        [0.0048],
        [0.0019],
        [0.0038],
        [0.0040],
        [0.0031],
        [0.0027],
        [0.0058],
        [0.0083],
        [0.0022],
        [0.0075],
        [0.0032],
        [0.0082],
        [0.0058],
        [0.0028],
        [0.0026]], device='cuda:0', dtype=torch.float16)/tensor([[0.0071, 0.0048, 0.0019, 0.0038, 0.0040, 0.0031, 0.0027, 0.0058, 0.0083,
         0.0022, 0.0075, 0.0032, 0.0082, 0.0058, 0.0028, 0.0026]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0190, 0.0043, 0.0071],
        [0.0097, 0.0055, 0.0048],
        [0.0045, 0.0042, 0.0019],
        [0.0082, 0.0069, 0.0038],
        [0.0089, 0.0057, 0.0040],
        [0.0178, 0.0056, 0.0031],
        [0.0103, 0.0046, 0.0027],
        [0.0129, 0.0051, 0.0058],
        [0.0140, 0.0062, 0.0083],
        [0.0075, 0.0043, 0.0022],
        [0.0184, 0.0141, 0.0075],
        [0.0113, 0.0056, 0.0032],
        [0.0314, 0.0110, 0.0082],
        [0.0175, 0.0066, 0.0058],
        [0.0059, 0.0032, 0.0028],
        [0.0114, 0.0046, 0.0026]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0131],
        [0.0016],
        [0.0270],
        [0.0485],
        [0.0061],
        [0.0192],
        [0.0207],
        [0.0136],
        [0.0187],
        [0.0294],
        [0.0134],
        [0.0104],
        [0.0164],
        [0.0199],
        [0.0093],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0131, 0.0016, 0.0270, 0.0485, 0.0061, 0.0192, 0.0207, 0.0136, 0.0187,
         0.0294, 0.0134, 0.0104, 0.0164, 0.0199, 0.0093, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0072],
        [0.0014],
        [0.0095],
        [0.0079],
        [0.0038],
        [0.0040],
        [0.0117],
        [0.0087],
        [0.0049],
        [0.0082],
        [0.0048],
        [0.0058],
        [0.0039],
        [0.0067],
        [0.0047],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0072, 0.0014, 0.0095, 0.0079, 0.0038, 0.0040, 0.0117, 0.0087, 0.0049,
         0.0082, 0.0048, 0.0058, 0.0039, 0.0067, 0.0047, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0048],
        [0.0006],
        [0.0072],
        [0.0154],
        [0.0022],
        [0.0044],
        [0.0081],
        [0.0066],
        [0.0042],
        [0.0100],
        [0.0036],
        [0.0086],
        [0.0046],
        [0.0036],
        [0.0038],
        [0.0045]], device='cuda:0', dtype=torch.float16)/tensor([[0.0048, 0.0006, 0.0072, 0.0154, 0.0022, 0.0044, 0.0081, 0.0066, 0.0042,
         0.0100, 0.0036, 0.0086, 0.0046, 0.0036, 0.0038, 0.0045]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0131, 0.0072, 0.0048],
        [0.0016, 0.0014, 0.0006],
        [0.0270, 0.0095, 0.0072],
        [0.0485, 0.0079, 0.0154],
        [0.0061, 0.0038, 0.0022],
        [0.0192, 0.0040, 0.0044],
        [0.0207, 0.0117, 0.0081],
        [0.0136, 0.0087, 0.0066],
        [0.0187, 0.0049, 0.0042],
        [0.0294, 0.0082, 0.0100],
        [0.0134, 0.0048, 0.0036],
        [0.0104, 0.0058, 0.0086],
        [0.0164, 0.0039, 0.0046],
        [0.0199, 0.0067, 0.0036],
        [0.0093, 0.0047, 0.0038],
        [0.0135, 0.0060, 0.0045]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0139],
        [0.0108],
        [0.0193],
        [0.0079],
        [0.0190],
        [0.0016],
        [0.0061],
        [0.0075],
        [0.0193],
        [0.0161],
        [0.0084],
        [0.0114],
        [0.0051],
        [0.0070],
        [0.0132],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0139, 0.0108, 0.0193, 0.0079, 0.0190, 0.0016, 0.0061, 0.0075, 0.0193,
         0.0161, 0.0084, 0.0114, 0.0051, 0.0070, 0.0132, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0172],
        [0.0018],
        [0.0063],
        [0.0073],
        [0.0067],
        [0.0016],
        [0.0041],
        [0.0045],
        [0.0061],
        [0.0054],
        [0.0074],
        [0.0090],
        [0.0098],
        [0.0080],
        [0.0076],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0172, 0.0018, 0.0063, 0.0073, 0.0067, 0.0016, 0.0041, 0.0045, 0.0061,
         0.0054, 0.0074, 0.0090, 0.0098, 0.0080, 0.0076, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0100],
        [0.0023],
        [0.0040],
        [0.0022],
        [0.0055],
        [0.0011],
        [0.0032],
        [0.0024],
        [0.0077],
        [0.0038],
        [0.0059],
        [0.0044],
        [0.0025],
        [0.0033],
        [0.0030],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0023, 0.0040, 0.0022, 0.0055, 0.0011, 0.0032, 0.0024, 0.0077,
         0.0038, 0.0059, 0.0044, 0.0025, 0.0033, 0.0030, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0139, 0.0172, 0.0100],
        [0.0108, 0.0018, 0.0023],
        [0.0193, 0.0063, 0.0040],
        [0.0079, 0.0073, 0.0022],
        [0.0190, 0.0067, 0.0055],
        [0.0016, 0.0016, 0.0011],
        [0.0061, 0.0041, 0.0032],
        [0.0075, 0.0045, 0.0024],
        [0.0193, 0.0061, 0.0077],
        [0.0161, 0.0054, 0.0038],
        [0.0084, 0.0074, 0.0059],
        [0.0114, 0.0090, 0.0044],
        [0.0051, 0.0098, 0.0025],
        [0.0070, 0.0080, 0.0033],
        [0.0132, 0.0076, 0.0030],
        [0.0172, 0.0048, 0.0135]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0093],
        [0.0095],
        [0.0121],
        [0.0126],
        [0.0018],
        [0.0106],
        [0.0098],
        [0.0064],
        [0.0108],
        [0.0080],
        [0.0157],
        [0.0205],
        [0.0044],
        [0.0366],
        [0.0135],
        [0.0181]], device='cuda:0', dtype=torch.float16)/tensor([[0.0093, 0.0095, 0.0121, 0.0126, 0.0018, 0.0106, 0.0098, 0.0064, 0.0108,
         0.0080, 0.0157, 0.0205, 0.0044, 0.0366, 0.0135, 0.0181]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0036],
        [0.0039],
        [0.0127],
        [0.0042],
        [0.0017],
        [0.0055],
        [0.0032],
        [0.0043],
        [0.0028],
        [0.0098],
        [0.0071],
        [0.0081],
        [0.0099],
        [0.0087],
        [0.0086],
        [0.0104]], device='cuda:0', dtype=torch.float16)/tensor([[0.0036, 0.0039, 0.0127, 0.0042, 0.0017, 0.0055, 0.0032, 0.0043, 0.0028,
         0.0098, 0.0071, 0.0081, 0.0099, 0.0087, 0.0086, 0.0104]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0027],
        [0.0018],
        [0.0054],
        [0.0048],
        [0.0004],
        [0.0029],
        [0.0033],
        [0.0014],
        [0.0027],
        [0.0083],
        [0.0068],
        [0.0044],
        [0.0033],
        [0.0172],
        [0.0083],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0027, 0.0018, 0.0054, 0.0048, 0.0004, 0.0029, 0.0033, 0.0014, 0.0027,
         0.0083, 0.0068, 0.0044, 0.0033, 0.0172, 0.0083, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0093, 0.0036, 0.0027],
        [0.0095, 0.0039, 0.0018],
        [0.0121, 0.0127, 0.0054],
        [0.0126, 0.0042, 0.0048],
        [0.0018, 0.0017, 0.0004],
        [0.0106, 0.0055, 0.0029],
        [0.0098, 0.0032, 0.0033],
        [0.0064, 0.0043, 0.0014],
        [0.0108, 0.0028, 0.0027],
        [0.0080, 0.0098, 0.0083],
        [0.0157, 0.0071, 0.0068],
        [0.0205, 0.0081, 0.0044],
        [0.0044, 0.0099, 0.0033],
        [0.0366, 0.0087, 0.0172],
        [0.0135, 0.0086, 0.0083],
        [0.0181, 0.0104, 0.0048]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0095],
        [0.0067],
        [0.0060],
        [0.0279],
        [0.0140],
        [0.0067],
        [0.0054],
        [0.0094],
        [0.0131],
        [0.0154],
        [0.0064],
        [0.0428],
        [0.0104],
        [0.0088],
        [0.0066],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0067, 0.0060, 0.0279, 0.0140, 0.0067, 0.0054, 0.0094, 0.0131,
         0.0154, 0.0064, 0.0428, 0.0104, 0.0088, 0.0066, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0041],
        [0.0037],
        [0.0062],
        [0.0095],
        [0.0068],
        [0.0047],
        [0.0049],
        [0.0049],
        [0.0078],
        [0.0040],
        [0.0029],
        [0.0097],
        [0.0083],
        [0.0067],
        [0.0032],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0037, 0.0062, 0.0095, 0.0068, 0.0047, 0.0049, 0.0049, 0.0078,
         0.0040, 0.0029, 0.0097, 0.0083, 0.0067, 0.0032, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0018],
        [0.0034],
        [0.0028],
        [0.0109],
        [0.0036],
        [0.0022],
        [0.0037],
        [0.0035],
        [0.0058],
        [0.0046],
        [0.0030],
        [0.0106],
        [0.0070],
        [0.0041],
        [0.0042],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0018, 0.0034, 0.0028, 0.0109, 0.0036, 0.0022, 0.0037, 0.0035, 0.0058,
         0.0046, 0.0030, 0.0106, 0.0070, 0.0041, 0.0042, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0095, 0.0041, 0.0018],
        [0.0067, 0.0037, 0.0034],
        [0.0060, 0.0062, 0.0028],
        [0.0279, 0.0095, 0.0109],
        [0.0140, 0.0068, 0.0036],
        [0.0067, 0.0047, 0.0022],
        [0.0054, 0.0049, 0.0037],
        [0.0094, 0.0049, 0.0035],
        [0.0131, 0.0078, 0.0058],
        [0.0154, 0.0040, 0.0046],
        [0.0064, 0.0029, 0.0030],
        [0.0428, 0.0097, 0.0106],
        [0.0104, 0.0083, 0.0070],
        [0.0088, 0.0067, 0.0041],
        [0.0066, 0.0032, 0.0042],
        [0.0159, 0.0128, 0.0149]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0128],
        [0.0053],
        [0.0266],
        [0.0101],
        [0.0111],
        [0.0117],
        [0.0064],
        [0.0253],
        [0.0101],
        [0.0090],
        [0.0049],
        [0.0143],
        [0.0058],
        [0.0061],
        [0.0047],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0053, 0.0266, 0.0101, 0.0111, 0.0117, 0.0064, 0.0253, 0.0101,
         0.0090, 0.0049, 0.0143, 0.0058, 0.0061, 0.0047, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0058],
        [0.0051],
        [0.0052],
        [0.0079],
        [0.0030],
        [0.0044],
        [0.0051],
        [0.0055],
        [0.0038],
        [0.0047],
        [0.0066],
        [0.0112],
        [0.0053],
        [0.0045],
        [0.0051],
        [0.0052]], device='cuda:0', dtype=torch.float16)/tensor([[0.0058, 0.0051, 0.0052, 0.0079, 0.0030, 0.0044, 0.0051, 0.0055, 0.0038,
         0.0047, 0.0066, 0.0112, 0.0053, 0.0045, 0.0051, 0.0052]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0033],
        [0.0035],
        [0.0106],
        [0.0088],
        [0.0025],
        [0.0023],
        [0.0033],
        [0.0091],
        [0.0031],
        [0.0021],
        [0.0041],
        [0.0072],
        [0.0030],
        [0.0017],
        [0.0042],
        [0.0021]], device='cuda:0', dtype=torch.float16)/tensor([[0.0033, 0.0035, 0.0106, 0.0088, 0.0025, 0.0023, 0.0033, 0.0091, 0.0031,
         0.0021, 0.0041, 0.0072, 0.0030, 0.0017, 0.0042, 0.0021]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0128, 0.0058, 0.0033],
        [0.0053, 0.0051, 0.0035],
        [0.0266, 0.0052, 0.0106],
        [0.0101, 0.0079, 0.0088],
        [0.0111, 0.0030, 0.0025],
        [0.0117, 0.0044, 0.0023],
        [0.0064, 0.0051, 0.0033],
        [0.0253, 0.0055, 0.0091],
        [0.0101, 0.0038, 0.0031],
        [0.0090, 0.0047, 0.0021],
        [0.0049, 0.0066, 0.0041],
        [0.0143, 0.0112, 0.0072],
        [0.0058, 0.0053, 0.0030],
        [0.0061, 0.0045, 0.0017],
        [0.0047, 0.0051, 0.0042],
        [0.0034, 0.0052, 0.0021]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0238],
        [0.0057],
        [0.0100],
        [0.0299],
        [0.0056],
        [0.0113],
        [0.0104],
        [0.0094],
        [0.0085],
        [0.0228],
        [0.0334],
        [0.0043],
        [0.0088],
        [0.0167],
        [0.0051],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0238, 0.0057, 0.0100, 0.0299, 0.0056, 0.0113, 0.0104, 0.0094, 0.0085,
         0.0228, 0.0334, 0.0043, 0.0088, 0.0167, 0.0051, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0068],
        [0.0040],
        [0.0071],
        [0.0107],
        [0.0047],
        [0.0024],
        [0.0041],
        [0.0057],
        [0.0076],
        [0.0059],
        [0.0127],
        [0.0028],
        [0.0038],
        [0.0154],
        [0.0037],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0068, 0.0040, 0.0071, 0.0107, 0.0047, 0.0024, 0.0041, 0.0057, 0.0076,
         0.0059, 0.0127, 0.0028, 0.0038, 0.0154, 0.0037, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0104],
        [0.0019],
        [0.0037],
        [0.0146],
        [0.0040],
        [0.0039],
        [0.0032],
        [0.0026],
        [0.0060],
        [0.0073],
        [0.0104],
        [0.0025],
        [0.0025],
        [0.0046],
        [0.0028],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0019, 0.0037, 0.0146, 0.0040, 0.0039, 0.0032, 0.0026, 0.0060,
         0.0073, 0.0104, 0.0025, 0.0025, 0.0046, 0.0028, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0238, 0.0068, 0.0104],
        [0.0057, 0.0040, 0.0019],
        [0.0100, 0.0071, 0.0037],
        [0.0299, 0.0107, 0.0146],
        [0.0056, 0.0047, 0.0040],
        [0.0113, 0.0024, 0.0039],
        [0.0104, 0.0041, 0.0032],
        [0.0094, 0.0057, 0.0026],
        [0.0085, 0.0076, 0.0060],
        [0.0228, 0.0059, 0.0073],
        [0.0334, 0.0127, 0.0104],
        [0.0043, 0.0028, 0.0025],
        [0.0088, 0.0038, 0.0025],
        [0.0167, 0.0154, 0.0046],
        [0.0051, 0.0037, 0.0028],
        [0.0048, 0.0048, 0.0019]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0054],
        [0.0080],
        [0.0109],
        [0.0398],
        [0.0029],
        [0.0221]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0080, 0.0109, 0.0398, 0.0029, 0.0221]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0041],
        [0.0062],
        [0.0042],
        [0.0101],
        [0.0071],
        [0.0064]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0062, 0.0042, 0.0101, 0.0071, 0.0064]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0018],
        [0.0051],
        [0.0065],
        [0.0142],
        [0.0013],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0018, 0.0051, 0.0065, 0.0142, 0.0013, 0.0062]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0054, 0.0041, 0.0018],
        [0.0080, 0.0062, 0.0051],
        [0.0109, 0.0042, 0.0065],
        [0.0398, 0.0101, 0.0142],
        [0.0029, 0.0071, 0.0013],
        [0.0221, 0.0064, 0.0062]], device='cuda:0')
acc:  0.3939393939393939
Time taken to execute the en NLI task with prompt type modal, variation 3 and batchsize 16: 0:03:02.838427
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI modal 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 313.92it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0502],
        [0.0385],
        [0.0818],
        [0.0423],
        [0.0569],
        [0.0649],
        [0.0471],
        [0.0779],
        [0.0511],
        [0.0354],
        [0.0565],
        [0.0337],
        [0.0402],
        [0.0922],
        [0.0428],
        [0.0735]], device='cuda:0', dtype=torch.float16)/tensor([[0.0502, 0.0385, 0.0818, 0.0423, 0.0569, 0.0649, 0.0471, 0.0779, 0.0511,
         0.0354, 0.0565, 0.0337, 0.0402, 0.0922, 0.0428, 0.0735]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0233],
        [0.0203],
        [0.0234],
        [0.0186],
        [0.0173],
        [0.0219],
        [0.0126],
        [0.0218],
        [0.0138],
        [0.0175],
        [0.0440],
        [0.0099],
        [0.0135],
        [0.0270],
        [0.0092],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0233, 0.0203, 0.0234, 0.0186, 0.0173, 0.0219, 0.0126, 0.0218, 0.0138,
         0.0175, 0.0440, 0.0099, 0.0135, 0.0270, 0.0092, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0151],
        [0.0183],
        [0.0313],
        [0.0078],
        [0.0197],
        [0.0370],
        [0.0123],
        [0.0261],
        [0.0118],
        [0.0143],
        [0.0202],
        [0.0122],
        [0.0140],
        [0.0319],
        [0.0152],
        [0.0334]], device='cuda:0', dtype=torch.float16)/tensor([[0.0151, 0.0183, 0.0313, 0.0078, 0.0197, 0.0370, 0.0123, 0.0261, 0.0118,
         0.0143, 0.0202, 0.0122, 0.0140, 0.0319, 0.0152, 0.0334]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0502, 0.0233, 0.0151],
        [0.0385, 0.0203, 0.0183],
        [0.0818, 0.0234, 0.0313],
        [0.0423, 0.0186, 0.0078],
        [0.0569, 0.0173, 0.0197],
        [0.0649, 0.0219, 0.0370],
        [0.0471, 0.0126, 0.0123],
        [0.0779, 0.0218, 0.0261],
        [0.0511, 0.0138, 0.0118],
        [0.0354, 0.0175, 0.0143],
        [0.0565, 0.0440, 0.0202],
        [0.0337, 0.0099, 0.0122],
        [0.0402, 0.0135, 0.0140],
        [0.0922, 0.0270, 0.0319],
        [0.0428, 0.0092, 0.0152],
        [0.0735, 0.0231, 0.0334]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0360],
        [0.0377],
        [0.0309],
        [0.0347],
        [0.0556],
        [0.0389],
        [0.0446],
        [0.0517],
        [0.0421],
        [0.0580],
        [0.1031],
        [0.0483],
        [0.0922],
        [0.0486],
        [0.0347],
        [0.0529]], device='cuda:0', dtype=torch.float16)/tensor([[0.0360, 0.0377, 0.0309, 0.0347, 0.0556, 0.0389, 0.0446, 0.0517, 0.0421,
         0.0580, 0.1031, 0.0483, 0.0922, 0.0486, 0.0347, 0.0529]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0088],
        [0.0202],
        [0.0254],
        [0.0169],
        [0.0359],
        [0.0162],
        [0.0203],
        [0.0224],
        [0.0272],
        [0.0256],
        [0.0284],
        [0.0211],
        [0.0254],
        [0.0223],
        [0.0121],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0202, 0.0254, 0.0169, 0.0359, 0.0162, 0.0203, 0.0224, 0.0272,
         0.0256, 0.0284, 0.0211, 0.0254, 0.0223, 0.0121, 0.0153]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0222],
        [0.0178],
        [0.0155],
        [0.0194],
        [0.0170],
        [0.0193],
        [0.0212],
        [0.0176],
        [0.0259],
        [0.0283],
        [0.0320],
        [0.0219],
        [0.0309],
        [0.0233],
        [0.0201],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0222, 0.0178, 0.0155, 0.0194, 0.0170, 0.0193, 0.0212, 0.0176, 0.0259,
         0.0283, 0.0320, 0.0219, 0.0309, 0.0233, 0.0201, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0360, 0.0088, 0.0222],
        [0.0377, 0.0202, 0.0178],
        [0.0309, 0.0254, 0.0155],
        [0.0347, 0.0169, 0.0194],
        [0.0556, 0.0359, 0.0170],
        [0.0389, 0.0162, 0.0193],
        [0.0446, 0.0203, 0.0212],
        [0.0517, 0.0224, 0.0176],
        [0.0421, 0.0272, 0.0259],
        [0.0580, 0.0256, 0.0283],
        [0.1031, 0.0284, 0.0320],
        [0.0483, 0.0211, 0.0219],
        [0.0922, 0.0254, 0.0309],
        [0.0486, 0.0223, 0.0233],
        [0.0347, 0.0121, 0.0201],
        [0.0529, 0.0153, 0.0210]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0494],
        [0.0793],
        [0.0533],
        [0.0692],
        [0.0698],
        [0.0501],
        [0.0429],
        [0.0598],
        [0.0252],
        [0.0374],
        [0.0622],
        [0.0665],
        [0.0516],
        [0.0538],
        [0.0825],
        [0.0617]], device='cuda:0', dtype=torch.float16)/tensor([[0.0494, 0.0793, 0.0533, 0.0692, 0.0698, 0.0501, 0.0429, 0.0598, 0.0252,
         0.0374, 0.0622, 0.0665, 0.0516, 0.0538, 0.0825, 0.0617]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0176],
        [0.0224],
        [0.0150],
        [0.0413],
        [0.0223],
        [0.0204],
        [0.0271],
        [0.0249],
        [0.0198],
        [0.0205],
        [0.0276],
        [0.0160],
        [0.0160],
        [0.0140],
        [0.0145],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0224, 0.0150, 0.0413, 0.0223, 0.0204, 0.0271, 0.0249, 0.0198,
         0.0205, 0.0276, 0.0160, 0.0160, 0.0140, 0.0145, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0214],
        [0.0381],
        [0.0196],
        [0.0433],
        [0.0370],
        [0.0169],
        [0.0185],
        [0.0119],
        [0.0136],
        [0.0227],
        [0.0289],
        [0.0324],
        [0.0180],
        [0.0239],
        [0.0357],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0381, 0.0196, 0.0433, 0.0370, 0.0169, 0.0185, 0.0119, 0.0136,
         0.0227, 0.0289, 0.0324, 0.0180, 0.0239, 0.0357, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0494, 0.0176, 0.0214],
        [0.0793, 0.0224, 0.0381],
        [0.0533, 0.0150, 0.0196],
        [0.0692, 0.0413, 0.0433],
        [0.0698, 0.0223, 0.0370],
        [0.0501, 0.0204, 0.0169],
        [0.0429, 0.0271, 0.0185],
        [0.0598, 0.0249, 0.0119],
        [0.0252, 0.0198, 0.0136],
        [0.0374, 0.0205, 0.0227],
        [0.0622, 0.0276, 0.0289],
        [0.0665, 0.0160, 0.0324],
        [0.0516, 0.0160, 0.0180],
        [0.0538, 0.0140, 0.0239],
        [0.0825, 0.0145, 0.0357],
        [0.0617, 0.0178, 0.0123]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0437],
        [0.0347],
        [0.0861],
        [0.0686],
        [0.0958],
        [0.1416],
        [0.0478],
        [0.0430],
        [0.0393],
        [0.0508],
        [0.0475],
        [0.0655],
        [0.0426],
        [0.0627],
        [0.1010],
        [0.0804]], device='cuda:0', dtype=torch.float16)/tensor([[0.0437, 0.0347, 0.0861, 0.0686, 0.0958, 0.1416, 0.0478, 0.0430, 0.0393,
         0.0508, 0.0475, 0.0655, 0.0426, 0.0627, 0.1010, 0.0804]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0146],
        [0.0098],
        [0.0295],
        [0.0228],
        [0.0297],
        [0.0193],
        [0.0238],
        [0.0239],
        [0.0212],
        [0.0187],
        [0.0193],
        [0.0129],
        [0.0216],
        [0.0119],
        [0.0424],
        [0.0202]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0098, 0.0295, 0.0228, 0.0297, 0.0193, 0.0238, 0.0239, 0.0212,
         0.0187, 0.0193, 0.0129, 0.0216, 0.0119, 0.0424, 0.0202]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0155],
        [0.0219],
        [0.0324],
        [0.0403],
        [0.0435],
        [0.0375],
        [0.0283],
        [0.0249],
        [0.0206],
        [0.0126],
        [0.0201],
        [0.0340],
        [0.0185],
        [0.0109],
        [0.0463],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0219, 0.0324, 0.0403, 0.0435, 0.0375, 0.0283, 0.0249, 0.0206,
         0.0126, 0.0201, 0.0340, 0.0185, 0.0109, 0.0463, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0437, 0.0146, 0.0155],
        [0.0347, 0.0098, 0.0219],
        [0.0861, 0.0295, 0.0324],
        [0.0686, 0.0228, 0.0403],
        [0.0958, 0.0297, 0.0435],
        [0.1416, 0.0193, 0.0375],
        [0.0478, 0.0238, 0.0283],
        [0.0430, 0.0239, 0.0249],
        [0.0393, 0.0212, 0.0206],
        [0.0508, 0.0187, 0.0126],
        [0.0475, 0.0193, 0.0201],
        [0.0655, 0.0129, 0.0340],
        [0.0426, 0.0216, 0.0185],
        [0.0627, 0.0119, 0.0109],
        [0.1010, 0.0424, 0.0463],
        [0.0804, 0.0202, 0.0127]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0570],
        [0.0676],
        [0.0845],
        [0.1004],
        [0.0393],
        [0.0806],
        [0.0720],
        [0.0428],
        [0.0746],
        [0.0481],
        [0.0574],
        [0.1012],
        [0.0712],
        [0.0408],
        [0.0536],
        [0.0610]], device='cuda:0', dtype=torch.float16)/tensor([[0.0570, 0.0676, 0.0845, 0.1004, 0.0393, 0.0806, 0.0720, 0.0428, 0.0746,
         0.0481, 0.0574, 0.1012, 0.0712, 0.0408, 0.0536, 0.0610]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0178],
        [0.0262],
        [0.0294],
        [0.0161],
        [0.0119],
        [0.0139],
        [0.0143],
        [0.0122],
        [0.0211],
        [0.0132],
        [0.0304],
        [0.0341],
        [0.0246],
        [0.0091],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0178, 0.0262, 0.0294, 0.0161, 0.0119, 0.0139, 0.0143, 0.0122,
         0.0211, 0.0132, 0.0304, 0.0341, 0.0246, 0.0091, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0110],
        [0.0182],
        [0.0347],
        [0.0299],
        [0.0123],
        [0.0438],
        [0.0351],
        [0.0222],
        [0.0231],
        [0.0187],
        [0.0213],
        [0.0369],
        [0.0366],
        [0.0145],
        [0.0158],
        [0.0297]], device='cuda:0', dtype=torch.float16)/tensor([[0.0110, 0.0182, 0.0347, 0.0299, 0.0123, 0.0438, 0.0351, 0.0222, 0.0231,
         0.0187, 0.0213, 0.0369, 0.0366, 0.0145, 0.0158, 0.0297]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0570, 0.0166, 0.0110],
        [0.0676, 0.0178, 0.0182],
        [0.0845, 0.0262, 0.0347],
        [0.1004, 0.0294, 0.0299],
        [0.0393, 0.0161, 0.0123],
        [0.0806, 0.0119, 0.0438],
        [0.0720, 0.0139, 0.0351],
        [0.0428, 0.0143, 0.0222],
        [0.0746, 0.0122, 0.0231],
        [0.0481, 0.0211, 0.0187],
        [0.0574, 0.0132, 0.0213],
        [0.1012, 0.0304, 0.0369],
        [0.0712, 0.0341, 0.0366],
        [0.0408, 0.0246, 0.0145],
        [0.0536, 0.0091, 0.0158],
        [0.0610, 0.0266, 0.0297]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0922],
        [0.0411],
        [0.0995],
        [0.0299],
        [0.0453],
        [0.0256],
        [0.0508],
        [0.0397],
        [0.0743],
        [0.0538],
        [0.0472],
        [0.0378],
        [0.1037],
        [0.0580],
        [0.0732],
        [0.0472]], device='cuda:0', dtype=torch.float16)/tensor([[0.0922, 0.0411, 0.0995, 0.0299, 0.0453, 0.0256, 0.0508, 0.0397, 0.0743,
         0.0538, 0.0472, 0.0378, 0.1037, 0.0580, 0.0732, 0.0472]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0279],
        [0.0251],
        [0.0308],
        [0.0091],
        [0.0216],
        [0.0130],
        [0.0140],
        [0.0136],
        [0.0312],
        [0.0219],
        [0.0078],
        [0.0193],
        [0.0324],
        [0.0135],
        [0.0178],
        [0.0269]], device='cuda:0', dtype=torch.float16)/tensor([[0.0279, 0.0251, 0.0308, 0.0091, 0.0216, 0.0130, 0.0140, 0.0136, 0.0312,
         0.0219, 0.0078, 0.0193, 0.0324, 0.0135, 0.0178, 0.0269]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0347],
        [0.0244],
        [0.0281],
        [0.0086],
        [0.0339],
        [0.0115],
        [0.0153],
        [0.0120],
        [0.0255],
        [0.0173],
        [0.0106],
        [0.0147],
        [0.0242],
        [0.0174],
        [0.0315],
        [0.0345]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0244, 0.0281, 0.0086, 0.0339, 0.0115, 0.0153, 0.0120, 0.0255,
         0.0173, 0.0106, 0.0147, 0.0242, 0.0174, 0.0315, 0.0345]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0922, 0.0279, 0.0347],
        [0.0411, 0.0251, 0.0244],
        [0.0995, 0.0308, 0.0281],
        [0.0299, 0.0091, 0.0086],
        [0.0453, 0.0216, 0.0339],
        [0.0256, 0.0130, 0.0115],
        [0.0508, 0.0140, 0.0153],
        [0.0397, 0.0136, 0.0120],
        [0.0743, 0.0312, 0.0255],
        [0.0538, 0.0219, 0.0173],
        [0.0472, 0.0078, 0.0106],
        [0.0378, 0.0193, 0.0147],
        [0.1037, 0.0324, 0.0242],
        [0.0580, 0.0135, 0.0174],
        [0.0732, 0.0178, 0.0315],
        [0.0472, 0.0269, 0.0345]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0828],
        [0.0509],
        [0.0308],
        [0.0774],
        [0.0784],
        [0.0542],
        [0.0143],
        [0.0399],
        [0.0354],
        [0.0514],
        [0.0292],
        [0.0346],
        [0.0738],
        [0.0566],
        [0.0574],
        [0.0327]], device='cuda:0', dtype=torch.float16)/tensor([[0.0828, 0.0509, 0.0308, 0.0774, 0.0784, 0.0542, 0.0143, 0.0399, 0.0354,
         0.0514, 0.0292, 0.0346, 0.0738, 0.0566, 0.0574, 0.0327]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0182],
        [0.0229],
        [0.0173],
        [0.0294],
        [0.0251],
        [0.0228],
        [0.0055],
        [0.0114],
        [0.0259],
        [0.0269],
        [0.0280],
        [0.0200],
        [0.0347],
        [0.0207],
        [0.0125],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0182, 0.0229, 0.0173, 0.0294, 0.0251, 0.0228, 0.0055, 0.0114, 0.0259,
         0.0269, 0.0280, 0.0200, 0.0347, 0.0207, 0.0125, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0211],
        [0.0281],
        [0.0208],
        [0.0261],
        [0.0249],
        [0.0364],
        [0.0055],
        [0.0164],
        [0.0130],
        [0.0153],
        [0.0102],
        [0.0229],
        [0.0199],
        [0.0249],
        [0.0163],
        [0.0091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0281, 0.0208, 0.0261, 0.0249, 0.0364, 0.0055, 0.0164, 0.0130,
         0.0153, 0.0102, 0.0229, 0.0199, 0.0249, 0.0163, 0.0091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0828, 0.0182, 0.0211],
        [0.0509, 0.0229, 0.0281],
        [0.0308, 0.0173, 0.0208],
        [0.0774, 0.0294, 0.0261],
        [0.0784, 0.0251, 0.0249],
        [0.0542, 0.0228, 0.0364],
        [0.0143, 0.0055, 0.0055],
        [0.0399, 0.0114, 0.0164],
        [0.0354, 0.0259, 0.0130],
        [0.0514, 0.0269, 0.0153],
        [0.0292, 0.0280, 0.0102],
        [0.0346, 0.0200, 0.0229],
        [0.0738, 0.0347, 0.0199],
        [0.0566, 0.0207, 0.0249],
        [0.0574, 0.0125, 0.0163],
        [0.0327, 0.0172, 0.0091]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0511],
        [0.0437],
        [0.0651],
        [0.0690],
        [0.0344],
        [0.0458],
        [0.0588],
        [0.0635],
        [0.0439],
        [0.0616],
        [0.0514],
        [0.0448],
        [0.0481],
        [0.0844],
        [0.0803],
        [0.0416]], device='cuda:0', dtype=torch.float16)/tensor([[0.0511, 0.0437, 0.0651, 0.0690, 0.0344, 0.0458, 0.0588, 0.0635, 0.0439,
         0.0616, 0.0514, 0.0448, 0.0481, 0.0844, 0.0803, 0.0416]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0197],
        [0.0121],
        [0.0245],
        [0.0195],
        [0.0164],
        [0.0166],
        [0.0131],
        [0.0286],
        [0.0111],
        [0.0437],
        [0.0187],
        [0.0184],
        [0.0112],
        [0.0181],
        [0.0286],
        [0.0250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0197, 0.0121, 0.0245, 0.0195, 0.0164, 0.0166, 0.0131, 0.0286, 0.0111,
         0.0437, 0.0187, 0.0184, 0.0112, 0.0181, 0.0286, 0.0250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0261],
        [0.0119],
        [0.0267],
        [0.0334],
        [0.0209],
        [0.0197],
        [0.0223],
        [0.0368],
        [0.0242],
        [0.0255],
        [0.0193],
        [0.0140],
        [0.0102],
        [0.0516],
        [0.0468],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0119, 0.0267, 0.0334, 0.0209, 0.0197, 0.0223, 0.0368, 0.0242,
         0.0255, 0.0193, 0.0140, 0.0102, 0.0516, 0.0468, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0511, 0.0197, 0.0261],
        [0.0437, 0.0121, 0.0119],
        [0.0651, 0.0245, 0.0267],
        [0.0690, 0.0195, 0.0334],
        [0.0344, 0.0164, 0.0209],
        [0.0458, 0.0166, 0.0197],
        [0.0588, 0.0131, 0.0223],
        [0.0635, 0.0286, 0.0368],
        [0.0439, 0.0111, 0.0242],
        [0.0616, 0.0437, 0.0255],
        [0.0514, 0.0187, 0.0193],
        [0.0448, 0.0184, 0.0140],
        [0.0481, 0.0112, 0.0102],
        [0.0844, 0.0181, 0.0516],
        [0.0803, 0.0286, 0.0468],
        [0.0416, 0.0250, 0.0180]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0421],
        [0.0715],
        [0.0470],
        [0.0430],
        [0.0576],
        [0.0511],
        [0.0591],
        [0.0510],
        [0.0782],
        [0.0196],
        [0.0602],
        [0.0345],
        [0.0908],
        [0.0560],
        [0.0488],
        [0.0666]], device='cuda:0', dtype=torch.float16)/tensor([[0.0421, 0.0715, 0.0470, 0.0430, 0.0576, 0.0511, 0.0591, 0.0510, 0.0782,
         0.0196, 0.0602, 0.0345, 0.0908, 0.0560, 0.0488, 0.0666]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0185],
        [0.0253],
        [0.0371],
        [0.0134],
        [0.0279],
        [0.0191],
        [0.0126],
        [0.0177],
        [0.0196],
        [0.0156],
        [0.0267],
        [0.0239],
        [0.0299],
        [0.0117],
        [0.0133],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0185, 0.0253, 0.0371, 0.0134, 0.0279, 0.0191, 0.0126, 0.0177, 0.0196,
         0.0156, 0.0267, 0.0239, 0.0299, 0.0117, 0.0133, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0148],
        [0.0251],
        [0.0231],
        [0.0228],
        [0.0170],
        [0.0155],
        [0.0212],
        [0.0192],
        [0.0239],
        [0.0137],
        [0.0253],
        [0.0239],
        [0.0337],
        [0.0172],
        [0.0146],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0251, 0.0231, 0.0228, 0.0170, 0.0155, 0.0212, 0.0192, 0.0239,
         0.0137, 0.0253, 0.0239, 0.0337, 0.0172, 0.0146, 0.0156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0421, 0.0185, 0.0148],
        [0.0715, 0.0253, 0.0251],
        [0.0470, 0.0371, 0.0231],
        [0.0430, 0.0134, 0.0228],
        [0.0576, 0.0279, 0.0170],
        [0.0511, 0.0191, 0.0155],
        [0.0591, 0.0126, 0.0212],
        [0.0510, 0.0177, 0.0192],
        [0.0782, 0.0196, 0.0239],
        [0.0196, 0.0156, 0.0137],
        [0.0602, 0.0267, 0.0253],
        [0.0345, 0.0239, 0.0239],
        [0.0908, 0.0299, 0.0337],
        [0.0560, 0.0117, 0.0172],
        [0.0488, 0.0133, 0.0146],
        [0.0666, 0.0128, 0.0156]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0239],
        [0.0404],
        [0.0952],
        [0.0732],
        [0.0546],
        [0.1029],
        [0.0875],
        [0.0829],
        [0.0654],
        [0.0472],
        [0.1129],
        [0.0303],
        [0.0521],
        [0.0280],
        [0.0401],
        [0.0590]], device='cuda:0', dtype=torch.float16)/tensor([[0.0239, 0.0404, 0.0952, 0.0732, 0.0546, 0.1029, 0.0875, 0.0829, 0.0654,
         0.0472, 0.1129, 0.0303, 0.0521, 0.0280, 0.0401, 0.0590]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0200],
        [0.0101],
        [0.0329],
        [0.0205],
        [0.0192],
        [0.0130],
        [0.0232],
        [0.0188],
        [0.0169],
        [0.0210],
        [0.0146],
        [0.0163],
        [0.0237],
        [0.0118],
        [0.0224],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0101, 0.0329, 0.0205, 0.0192, 0.0130, 0.0232, 0.0188, 0.0169,
         0.0210, 0.0146, 0.0163, 0.0237, 0.0118, 0.0224, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0130],
        [0.0128],
        [0.0370],
        [0.0232],
        [0.0345],
        [0.0252],
        [0.0356],
        [0.0179],
        [0.0345],
        [0.0230],
        [0.0254],
        [0.0138],
        [0.0192],
        [0.0191],
        [0.0229],
        [0.0285]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0128, 0.0370, 0.0232, 0.0345, 0.0252, 0.0356, 0.0179, 0.0345,
         0.0230, 0.0254, 0.0138, 0.0192, 0.0191, 0.0229, 0.0285]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0239, 0.0200, 0.0130],
        [0.0404, 0.0101, 0.0128],
        [0.0952, 0.0329, 0.0370],
        [0.0732, 0.0205, 0.0232],
        [0.0546, 0.0192, 0.0345],
        [0.1029, 0.0130, 0.0252],
        [0.0875, 0.0232, 0.0356],
        [0.0829, 0.0188, 0.0179],
        [0.0654, 0.0169, 0.0345],
        [0.0472, 0.0210, 0.0230],
        [0.1129, 0.0146, 0.0254],
        [0.0303, 0.0163, 0.0138],
        [0.0521, 0.0237, 0.0192],
        [0.0280, 0.0118, 0.0191],
        [0.0401, 0.0224, 0.0229],
        [0.0590, 0.0161, 0.0285]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0781],
        [0.0354],
        [0.0634],
        [0.0814],
        [0.0712],
        [0.0617],
        [0.0818],
        [0.0263],
        [0.0589],
        [0.0684],
        [0.0479],
        [0.0913],
        [0.0591],
        [0.0364],
        [0.0648],
        [0.0444]], device='cuda:0', dtype=torch.float16)/tensor([[0.0781, 0.0354, 0.0634, 0.0814, 0.0712, 0.0617, 0.0818, 0.0263, 0.0589,
         0.0684, 0.0479, 0.0913, 0.0591, 0.0364, 0.0648, 0.0444]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0240],
        [0.0191],
        [0.0168],
        [0.0223],
        [0.0275],
        [0.0178],
        [0.0251],
        [0.0112],
        [0.0208],
        [0.0347],
        [0.0127],
        [0.0194],
        [0.0182],
        [0.0091],
        [0.0212],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0240, 0.0191, 0.0168, 0.0223, 0.0275, 0.0178, 0.0251, 0.0112, 0.0208,
         0.0347, 0.0127, 0.0194, 0.0182, 0.0091, 0.0212, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0281],
        [0.0213],
        [0.0271],
        [0.0277],
        [0.0170],
        [0.0292],
        [0.0331],
        [0.0200],
        [0.0408],
        [0.0278],
        [0.0324],
        [0.0418],
        [0.0256],
        [0.0103],
        [0.0268],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0281, 0.0213, 0.0271, 0.0277, 0.0170, 0.0292, 0.0331, 0.0200, 0.0408,
         0.0278, 0.0324, 0.0418, 0.0256, 0.0103, 0.0268, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0781, 0.0240, 0.0281],
        [0.0354, 0.0191, 0.0213],
        [0.0634, 0.0168, 0.0271],
        [0.0814, 0.0223, 0.0277],
        [0.0712, 0.0275, 0.0170],
        [0.0617, 0.0178, 0.0292],
        [0.0818, 0.0251, 0.0331],
        [0.0263, 0.0112, 0.0200],
        [0.0589, 0.0208, 0.0408],
        [0.0684, 0.0347, 0.0278],
        [0.0479, 0.0127, 0.0324],
        [0.0913, 0.0194, 0.0418],
        [0.0591, 0.0182, 0.0256],
        [0.0364, 0.0091, 0.0103],
        [0.0648, 0.0212, 0.0268],
        [0.0444, 0.0291, 0.0261]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0387],
        [0.0617],
        [0.1166],
        [0.0740],
        [0.0610],
        [0.0400],
        [0.0984],
        [0.0741],
        [0.0391],
        [0.0544],
        [0.0555],
        [0.0501],
        [0.0754],
        [0.0369],
        [0.0555]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0387, 0.0617, 0.1166, 0.0740, 0.0610, 0.0400, 0.0984, 0.0741,
         0.0391, 0.0544, 0.0555, 0.0501, 0.0754, 0.0369, 0.0555]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0143],
        [0.0244],
        [0.0229],
        [0.0350],
        [0.0240],
        [0.0154],
        [0.0159],
        [0.0237],
        [0.0130],
        [0.0153],
        [0.0257],
        [0.0226],
        [0.0053],
        [0.0282],
        [0.0306],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0244, 0.0229, 0.0350, 0.0240, 0.0154, 0.0159, 0.0237, 0.0130,
         0.0153, 0.0257, 0.0226, 0.0053, 0.0282, 0.0306, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0267],
        [0.0192],
        [0.0355],
        [0.0534],
        [0.0323],
        [0.0247],
        [0.0327],
        [0.0314],
        [0.0244],
        [0.0206],
        [0.0333],
        [0.0501],
        [0.0097],
        [0.0245],
        [0.0156],
        [0.0080]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0192, 0.0355, 0.0534, 0.0323, 0.0247, 0.0327, 0.0314, 0.0244,
         0.0206, 0.0333, 0.0501, 0.0097, 0.0245, 0.0156, 0.0080]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0575, 0.0143, 0.0267],
        [0.0387, 0.0244, 0.0192],
        [0.0617, 0.0229, 0.0355],
        [0.1166, 0.0350, 0.0534],
        [0.0740, 0.0240, 0.0323],
        [0.0610, 0.0154, 0.0247],
        [0.0400, 0.0159, 0.0327],
        [0.0984, 0.0237, 0.0314],
        [0.0741, 0.0130, 0.0244],
        [0.0391, 0.0153, 0.0206],
        [0.0544, 0.0257, 0.0333],
        [0.0555, 0.0226, 0.0501],
        [0.0501, 0.0053, 0.0097],
        [0.0754, 0.0282, 0.0245],
        [0.0369, 0.0306, 0.0156],
        [0.0555, 0.0133, 0.0080]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0330],
        [0.0592],
        [0.0970],
        [0.0499],
        [0.0303],
        [0.0610]], device='cuda:0', dtype=torch.float16)/tensor([[0.0330, 0.0592, 0.0970, 0.0499, 0.0303, 0.0610]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0203],
        [0.0380],
        [0.0154],
        [0.0215],
        [0.0107],
        [0.0378]], device='cuda:0', dtype=torch.float16)/tensor([[0.0203, 0.0380, 0.0154, 0.0215, 0.0107, 0.0378]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0194],
        [0.0259],
        [0.0232],
        [0.0175],
        [0.0110],
        [0.0173]], device='cuda:0', dtype=torch.float16)/tensor([[0.0194, 0.0259, 0.0232, 0.0175, 0.0110, 0.0173]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0330, 0.0203, 0.0194],
        [0.0592, 0.0380, 0.0259],
        [0.0970, 0.0154, 0.0232],
        [0.0499, 0.0215, 0.0175],
        [0.0303, 0.0107, 0.0110],
        [0.0610, 0.0378, 0.0173]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type modal, variation 4 and batchsize 16: 0:03:02.874740
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI modal 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 247.11it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0616],
        [0.0699],
        [0.0158],
        [0.0311],
        [0.0324],
        [0.0219],
        [0.0343],
        [0.0213],
        [0.0228],
        [0.0280],
        [0.0577],
        [0.0389],
        [0.0162],
        [0.0570],
        [0.0601],
        [0.0272]], device='cuda:0', dtype=torch.float16)/tensor([[0.0616, 0.0699, 0.0158, 0.0311, 0.0324, 0.0219, 0.0343, 0.0213, 0.0228,
         0.0280, 0.0577, 0.0389, 0.0162, 0.0570, 0.0601, 0.0272]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0120],
        [0.0069],
        [0.0133],
        [0.0070],
        [0.0096],
        [0.0124],
        [0.0108],
        [0.0087],
        [0.0099],
        [0.0135],
        [0.0070],
        [0.0087],
        [0.0169],
        [0.0184],
        [0.0111]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0120, 0.0069, 0.0133, 0.0070, 0.0096, 0.0124, 0.0108, 0.0087,
         0.0099, 0.0135, 0.0070, 0.0087, 0.0169, 0.0184, 0.0111]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0188],
        [0.0185],
        [0.0084],
        [0.0078],
        [0.0083],
        [0.0041],
        [0.0082],
        [0.0050],
        [0.0076],
        [0.0098],
        [0.0086],
        [0.0155],
        [0.0060],
        [0.0179],
        [0.0301],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0188, 0.0185, 0.0084, 0.0078, 0.0083, 0.0041, 0.0082, 0.0050, 0.0076,
         0.0098, 0.0086, 0.0155, 0.0060, 0.0179, 0.0301, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0616, 0.0160, 0.0188],
        [0.0699, 0.0120, 0.0185],
        [0.0158, 0.0069, 0.0084],
        [0.0311, 0.0133, 0.0078],
        [0.0324, 0.0070, 0.0083],
        [0.0219, 0.0096, 0.0041],
        [0.0343, 0.0124, 0.0082],
        [0.0213, 0.0108, 0.0050],
        [0.0228, 0.0087, 0.0076],
        [0.0280, 0.0099, 0.0098],
        [0.0577, 0.0135, 0.0086],
        [0.0389, 0.0070, 0.0155],
        [0.0162, 0.0087, 0.0060],
        [0.0570, 0.0169, 0.0179],
        [0.0601, 0.0184, 0.0301],
        [0.0272, 0.0111, 0.0123]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0712],
        [0.0081],
        [0.0552],
        [0.0275],
        [0.0512],
        [0.0511],
        [0.0040],
        [0.0518],
        [0.0453],
        [0.0434],
        [0.0329],
        [0.0411],
        [0.0050],
        [0.0687],
        [0.0296],
        [0.0389]], device='cuda:0', dtype=torch.float16)/tensor([[0.0712, 0.0081, 0.0552, 0.0275, 0.0512, 0.0511, 0.0040, 0.0518, 0.0453,
         0.0434, 0.0329, 0.0411, 0.0050, 0.0687, 0.0296, 0.0389]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0012],
        [0.0164],
        [0.0120],
        [0.0124],
        [0.0105],
        [0.0019],
        [0.0190],
        [0.0099],
        [0.0068],
        [0.0093],
        [0.0105],
        [0.0020],
        [0.0143],
        [0.0149],
        [0.0111]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0012, 0.0164, 0.0120, 0.0124, 0.0105, 0.0019, 0.0190, 0.0099,
         0.0068, 0.0093, 0.0105, 0.0020, 0.0143, 0.0149, 0.0111]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0275],
        [0.0024],
        [0.0163],
        [0.0084],
        [0.0153],
        [0.0127],
        [0.0011],
        [0.0231],
        [0.0121],
        [0.0119],
        [0.0105],
        [0.0079],
        [0.0013],
        [0.0151],
        [0.0084],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0275, 0.0024, 0.0163, 0.0084, 0.0153, 0.0127, 0.0011, 0.0231, 0.0121,
         0.0119, 0.0105, 0.0079, 0.0013, 0.0151, 0.0084, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0712, 0.0160, 0.0275],
        [0.0081, 0.0012, 0.0024],
        [0.0552, 0.0164, 0.0163],
        [0.0275, 0.0120, 0.0084],
        [0.0512, 0.0124, 0.0153],
        [0.0511, 0.0105, 0.0127],
        [0.0040, 0.0019, 0.0011],
        [0.0518, 0.0190, 0.0231],
        [0.0453, 0.0099, 0.0121],
        [0.0434, 0.0068, 0.0119],
        [0.0329, 0.0093, 0.0105],
        [0.0411, 0.0105, 0.0079],
        [0.0050, 0.0020, 0.0013],
        [0.0687, 0.0143, 0.0151],
        [0.0296, 0.0149, 0.0084],
        [0.0389, 0.0111, 0.0066]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0293],
        [0.0216],
        [0.0632],
        [0.0098],
        [0.0573],
        [0.0638],
        [0.0075],
        [0.0265],
        [0.0370],
        [0.0616],
        [0.0302],
        [0.0067],
        [0.0225],
        [0.0417],
        [0.0746],
        [0.0768]], device='cuda:0', dtype=torch.float16)/tensor([[0.0293, 0.0216, 0.0632, 0.0098, 0.0573, 0.0638, 0.0075, 0.0265, 0.0370,
         0.0616, 0.0302, 0.0067, 0.0225, 0.0417, 0.0746, 0.0768]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0146],
        [0.0068],
        [0.0175],
        [0.0053],
        [0.0246],
        [0.0142],
        [0.0081],
        [0.0125],
        [0.0131],
        [0.0132],
        [0.0134],
        [0.0024],
        [0.0127],
        [0.0055],
        [0.0105],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0068, 0.0175, 0.0053, 0.0246, 0.0142, 0.0081, 0.0125, 0.0131,
         0.0132, 0.0134, 0.0024, 0.0127, 0.0055, 0.0105, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0063],
        [0.0051],
        [0.0126],
        [0.0036],
        [0.0196],
        [0.0107],
        [0.0017],
        [0.0076],
        [0.0082],
        [0.0117],
        [0.0102],
        [0.0013],
        [0.0032],
        [0.0094],
        [0.0145],
        [0.0202]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0051, 0.0126, 0.0036, 0.0196, 0.0107, 0.0017, 0.0076, 0.0082,
         0.0117, 0.0102, 0.0013, 0.0032, 0.0094, 0.0145, 0.0202]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0293, 0.0146, 0.0063],
        [0.0216, 0.0068, 0.0051],
        [0.0632, 0.0175, 0.0126],
        [0.0098, 0.0053, 0.0036],
        [0.0573, 0.0246, 0.0196],
        [0.0638, 0.0142, 0.0107],
        [0.0075, 0.0081, 0.0017],
        [0.0265, 0.0125, 0.0076],
        [0.0370, 0.0131, 0.0082],
        [0.0616, 0.0132, 0.0117],
        [0.0302, 0.0134, 0.0102],
        [0.0067, 0.0024, 0.0013],
        [0.0225, 0.0127, 0.0032],
        [0.0417, 0.0055, 0.0094],
        [0.0746, 0.0105, 0.0145],
        [0.0768, 0.0127, 0.0202]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0602],
        [0.0281],
        [0.0160],
        [0.0320],
        [0.0391],
        [0.0358],
        [0.0233],
        [0.0401],
        [0.0330],
        [0.0189],
        [0.0185],
        [0.0264],
        [0.0571],
        [0.0194],
        [0.0273],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0602, 0.0281, 0.0160, 0.0320, 0.0391, 0.0358, 0.0233, 0.0401, 0.0330,
         0.0189, 0.0185, 0.0264, 0.0571, 0.0194, 0.0273, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0054],
        [0.0145],
        [0.0064],
        [0.0106],
        [0.0107],
        [0.0133],
        [0.0082],
        [0.0210],
        [0.0086],
        [0.0117],
        [0.0122],
        [0.0133],
        [0.0105],
        [0.0131],
        [0.0120],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0145, 0.0064, 0.0106, 0.0107, 0.0133, 0.0082, 0.0210, 0.0086,
         0.0117, 0.0122, 0.0133, 0.0105, 0.0131, 0.0120, 0.0132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0202],
        [0.0102],
        [0.0094],
        [0.0048],
        [0.0051],
        [0.0078],
        [0.0076],
        [0.0156],
        [0.0152],
        [0.0042],
        [0.0013],
        [0.0061],
        [0.0138],
        [0.0055],
        [0.0068],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0102, 0.0094, 0.0048, 0.0051, 0.0078, 0.0076, 0.0156, 0.0152,
         0.0042, 0.0013, 0.0061, 0.0138, 0.0055, 0.0068, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0602, 0.0054, 0.0202],
        [0.0281, 0.0145, 0.0102],
        [0.0160, 0.0064, 0.0094],
        [0.0320, 0.0106, 0.0048],
        [0.0391, 0.0107, 0.0051],
        [0.0358, 0.0133, 0.0078],
        [0.0233, 0.0082, 0.0076],
        [0.0401, 0.0210, 0.0156],
        [0.0330, 0.0086, 0.0152],
        [0.0189, 0.0117, 0.0042],
        [0.0185, 0.0122, 0.0013],
        [0.0264, 0.0133, 0.0061],
        [0.0571, 0.0105, 0.0138],
        [0.0194, 0.0131, 0.0055],
        [0.0273, 0.0120, 0.0068],
        [0.0189, 0.0132, 0.0095]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0568],
        [0.0387],
        [0.0546],
        [0.0189],
        [0.0309],
        [0.0181],
        [0.0589],
        [0.0488],
        [0.0247],
        [0.0285],
        [0.0477],
        [0.0278],
        [0.0174],
        [0.0406],
        [0.0377],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0568, 0.0387, 0.0546, 0.0189, 0.0309, 0.0181, 0.0589, 0.0488, 0.0247,
         0.0285, 0.0477, 0.0278, 0.0174, 0.0406, 0.0377, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0154],
        [0.0166],
        [0.0246],
        [0.0054],
        [0.0114],
        [0.0053],
        [0.0173],
        [0.0105],
        [0.0083],
        [0.0067],
        [0.0127],
        [0.0121],
        [0.0081],
        [0.0200],
        [0.0078],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0166, 0.0246, 0.0054, 0.0114, 0.0053, 0.0173, 0.0105, 0.0083,
         0.0067, 0.0127, 0.0121, 0.0081, 0.0200, 0.0078, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0136],
        [0.0070],
        [0.0116],
        [0.0030],
        [0.0072],
        [0.0039],
        [0.0147],
        [0.0073],
        [0.0053],
        [0.0101],
        [0.0092],
        [0.0237],
        [0.0071],
        [0.0153],
        [0.0068],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0136, 0.0070, 0.0116, 0.0030, 0.0072, 0.0039, 0.0147, 0.0073, 0.0053,
         0.0101, 0.0092, 0.0237, 0.0071, 0.0153, 0.0068, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0568, 0.0154, 0.0136],
        [0.0387, 0.0166, 0.0070],
        [0.0546, 0.0246, 0.0116],
        [0.0189, 0.0054, 0.0030],
        [0.0309, 0.0114, 0.0072],
        [0.0181, 0.0053, 0.0039],
        [0.0589, 0.0173, 0.0147],
        [0.0488, 0.0105, 0.0073],
        [0.0247, 0.0083, 0.0053],
        [0.0285, 0.0067, 0.0101],
        [0.0477, 0.0127, 0.0092],
        [0.0278, 0.0121, 0.0237],
        [0.0174, 0.0081, 0.0071],
        [0.0406, 0.0200, 0.0153],
        [0.0377, 0.0078, 0.0068],
        [0.0381, 0.0209, 0.0149]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0121],
        [0.0159],
        [0.0071],
        [0.0174],
        [0.0233],
        [0.0346],
        [0.0195],
        [0.0342],
        [0.0265],
        [0.0144],
        [0.0164],
        [0.0169],
        [0.0172],
        [0.0069],
        [0.0403],
        [0.0527]], device='cuda:0', dtype=torch.float16)/tensor([[0.0121, 0.0159, 0.0071, 0.0174, 0.0233, 0.0346, 0.0195, 0.0342, 0.0265,
         0.0144, 0.0164, 0.0169, 0.0172, 0.0069, 0.0403, 0.0527]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0047],
        [0.0048],
        [0.0056],
        [0.0050],
        [0.0066],
        [0.0085],
        [0.0059],
        [0.0073],
        [0.0153],
        [0.0069],
        [0.0103],
        [0.0068],
        [0.0106],
        [0.0075],
        [0.0079],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0047, 0.0048, 0.0056, 0.0050, 0.0066, 0.0085, 0.0059, 0.0073, 0.0153,
         0.0069, 0.0103, 0.0068, 0.0106, 0.0075, 0.0079, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0058],
        [0.0043],
        [0.0026],
        [0.0060],
        [0.0123],
        [0.0100],
        [0.0065],
        [0.0065],
        [0.0077],
        [0.0022],
        [0.0191],
        [0.0056],
        [0.0102],
        [0.0035],
        [0.0124],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0058, 0.0043, 0.0026, 0.0060, 0.0123, 0.0100, 0.0065, 0.0065, 0.0077,
         0.0022, 0.0191, 0.0056, 0.0102, 0.0035, 0.0124, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0121, 0.0047, 0.0058],
        [0.0159, 0.0048, 0.0043],
        [0.0071, 0.0056, 0.0026],
        [0.0174, 0.0050, 0.0060],
        [0.0233, 0.0066, 0.0123],
        [0.0346, 0.0085, 0.0100],
        [0.0195, 0.0059, 0.0065],
        [0.0342, 0.0073, 0.0065],
        [0.0265, 0.0153, 0.0077],
        [0.0144, 0.0069, 0.0022],
        [0.0164, 0.0103, 0.0191],
        [0.0169, 0.0068, 0.0056],
        [0.0172, 0.0106, 0.0102],
        [0.0069, 0.0075, 0.0035],
        [0.0403, 0.0079, 0.0124],
        [0.0527, 0.0085, 0.0108]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0397],
        [0.0627],
        [0.0387],
        [0.0689],
        [0.0283],
        [0.0579],
        [0.0229],
        [0.0259],
        [0.0513],
        [0.0261],
        [0.0200],
        [0.0307],
        [0.0442],
        [0.0487],
        [0.0547],
        [0.0507]], device='cuda:0', dtype=torch.float16)/tensor([[0.0397, 0.0627, 0.0387, 0.0689, 0.0283, 0.0579, 0.0229, 0.0259, 0.0513,
         0.0261, 0.0200, 0.0307, 0.0442, 0.0487, 0.0547, 0.0507]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0098],
        [0.0121],
        [0.0086],
        [0.0099],
        [0.0096],
        [0.0066],
        [0.0056],
        [0.0073],
        [0.0120],
        [0.0105],
        [0.0074],
        [0.0027],
        [0.0108],
        [0.0135],
        [0.0109],
        [0.0055]], device='cuda:0', dtype=torch.float16)/tensor([[0.0098, 0.0121, 0.0086, 0.0099, 0.0096, 0.0066, 0.0056, 0.0073, 0.0120,
         0.0105, 0.0074, 0.0027, 0.0108, 0.0135, 0.0109, 0.0055]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0076],
        [0.0089],
        [0.0098],
        [0.0415],
        [0.0123],
        [0.0081],
        [0.0107],
        [0.0065],
        [0.0074],
        [0.0071],
        [0.0057],
        [0.0061],
        [0.0321],
        [0.0097],
        [0.0111],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0076, 0.0089, 0.0098, 0.0415, 0.0123, 0.0081, 0.0107, 0.0065, 0.0074,
         0.0071, 0.0057, 0.0061, 0.0321, 0.0097, 0.0111, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0397, 0.0098, 0.0076],
        [0.0627, 0.0121, 0.0089],
        [0.0387, 0.0086, 0.0098],
        [0.0689, 0.0099, 0.0415],
        [0.0283, 0.0096, 0.0123],
        [0.0579, 0.0066, 0.0081],
        [0.0229, 0.0056, 0.0107],
        [0.0259, 0.0073, 0.0065],
        [0.0513, 0.0120, 0.0074],
        [0.0261, 0.0105, 0.0071],
        [0.0200, 0.0074, 0.0057],
        [0.0307, 0.0027, 0.0061],
        [0.0442, 0.0108, 0.0321],
        [0.0487, 0.0135, 0.0097],
        [0.0547, 0.0109, 0.0111],
        [0.0507, 0.0055, 0.0211]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0389],
        [0.0240],
        [0.0922],
        [0.0394],
        [0.0083],
        [0.0313],
        [0.0568],
        [0.0247],
        [0.0322],
        [0.0318],
        [0.0385],
        [0.0368],
        [0.0450],
        [0.0378],
        [0.0340],
        [0.0418]], device='cuda:0', dtype=torch.float16)/tensor([[0.0389, 0.0240, 0.0922, 0.0394, 0.0083, 0.0313, 0.0568, 0.0247, 0.0322,
         0.0318, 0.0385, 0.0368, 0.0450, 0.0378, 0.0340, 0.0418]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0306],
        [0.0024],
        [0.0157],
        [0.0142],
        [0.0030],
        [0.0064],
        [0.0123],
        [0.0190],
        [0.0037],
        [0.0109],
        [0.0190],
        [0.0067],
        [0.0132],
        [0.0185],
        [0.0142],
        [0.0163]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0024, 0.0157, 0.0142, 0.0030, 0.0064, 0.0123, 0.0190, 0.0037,
         0.0109, 0.0190, 0.0067, 0.0132, 0.0185, 0.0142, 0.0163]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0143],
        [0.0037],
        [0.0432],
        [0.0089],
        [0.0022],
        [0.0086],
        [0.0109],
        [0.0128],
        [0.0079],
        [0.0043],
        [0.0078],
        [0.0114],
        [0.0092],
        [0.0106],
        [0.0104],
        [0.0069]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0037, 0.0432, 0.0089, 0.0022, 0.0086, 0.0109, 0.0128, 0.0079,
         0.0043, 0.0078, 0.0114, 0.0092, 0.0106, 0.0104, 0.0069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0389, 0.0306, 0.0143],
        [0.0240, 0.0024, 0.0037],
        [0.0922, 0.0157, 0.0432],
        [0.0394, 0.0142, 0.0089],
        [0.0083, 0.0030, 0.0022],
        [0.0313, 0.0064, 0.0086],
        [0.0568, 0.0123, 0.0109],
        [0.0247, 0.0190, 0.0128],
        [0.0322, 0.0037, 0.0079],
        [0.0318, 0.0109, 0.0043],
        [0.0385, 0.0190, 0.0078],
        [0.0368, 0.0067, 0.0114],
        [0.0450, 0.0132, 0.0092],
        [0.0378, 0.0185, 0.0106],
        [0.0340, 0.0142, 0.0104],
        [0.0418, 0.0163, 0.0069]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0442],
        [0.0662],
        [0.0371],
        [0.0164],
        [0.0079],
        [0.0233],
        [0.0310],
        [0.0186],
        [0.0229],
        [0.0818],
        [0.0429],
        [0.0190],
        [0.0292],
        [0.0463],
        [0.0311],
        [0.0254]], device='cuda:0', dtype=torch.float16)/tensor([[0.0442, 0.0662, 0.0371, 0.0164, 0.0079, 0.0233, 0.0310, 0.0186, 0.0229,
         0.0818, 0.0429, 0.0190, 0.0292, 0.0463, 0.0311, 0.0254]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0101],
        [0.0212],
        [0.0121],
        [0.0113],
        [0.0048],
        [0.0037],
        [0.0127],
        [0.0031],
        [0.0071],
        [0.0118],
        [0.0135],
        [0.0100],
        [0.0065],
        [0.0074],
        [0.0161],
        [0.0117]], device='cuda:0', dtype=torch.float16)/tensor([[0.0101, 0.0212, 0.0121, 0.0113, 0.0048, 0.0037, 0.0127, 0.0031, 0.0071,
         0.0118, 0.0135, 0.0100, 0.0065, 0.0074, 0.0161, 0.0117]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0092],
        [0.0141],
        [0.0098],
        [0.0062],
        [0.0065],
        [0.0048],
        [0.0097],
        [0.0037],
        [0.0040],
        [0.0326],
        [0.0089],
        [0.0049],
        [0.0064],
        [0.0079],
        [0.0181],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0141, 0.0098, 0.0062, 0.0065, 0.0048, 0.0097, 0.0037, 0.0040,
         0.0326, 0.0089, 0.0049, 0.0064, 0.0079, 0.0181, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0442, 0.0101, 0.0092],
        [0.0662, 0.0212, 0.0141],
        [0.0371, 0.0121, 0.0098],
        [0.0164, 0.0113, 0.0062],
        [0.0079, 0.0048, 0.0065],
        [0.0233, 0.0037, 0.0048],
        [0.0310, 0.0127, 0.0097],
        [0.0186, 0.0031, 0.0037],
        [0.0229, 0.0071, 0.0040],
        [0.0818, 0.0118, 0.0326],
        [0.0429, 0.0135, 0.0089],
        [0.0190, 0.0100, 0.0049],
        [0.0292, 0.0065, 0.0064],
        [0.0463, 0.0074, 0.0079],
        [0.0311, 0.0161, 0.0181],
        [0.0254, 0.0117, 0.0053]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0168],
        [0.0282],
        [0.0198],
        [0.0471],
        [0.0143],
        [0.0176],
        [0.0344],
        [0.0351],
        [0.0246],
        [0.0131],
        [0.0421],
        [0.0238],
        [0.0197],
        [0.0298],
        [0.0522],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0168, 0.0282, 0.0198, 0.0471, 0.0143, 0.0176, 0.0344, 0.0351, 0.0246,
         0.0131, 0.0421, 0.0238, 0.0197, 0.0298, 0.0522, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0071],
        [0.0088],
        [0.0042],
        [0.0104],
        [0.0069],
        [0.0110],
        [0.0154],
        [0.0157],
        [0.0058],
        [0.0053],
        [0.0136],
        [0.0210],
        [0.0096],
        [0.0139],
        [0.0165],
        [0.0039]], device='cuda:0', dtype=torch.float16)/tensor([[0.0071, 0.0088, 0.0042, 0.0104, 0.0069, 0.0110, 0.0154, 0.0157, 0.0058,
         0.0053, 0.0136, 0.0210, 0.0096, 0.0139, 0.0165, 0.0039]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0070],
        [0.0062],
        [0.0032],
        [0.0122],
        [0.0043],
        [0.0044],
        [0.0202],
        [0.0174],
        [0.0043],
        [0.0025],
        [0.0094],
        [0.0130],
        [0.0032],
        [0.0074],
        [0.0068],
        [0.0024]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0062, 0.0032, 0.0122, 0.0043, 0.0044, 0.0202, 0.0174, 0.0043,
         0.0025, 0.0094, 0.0130, 0.0032, 0.0074, 0.0068, 0.0024]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0168, 0.0071, 0.0070],
        [0.0282, 0.0088, 0.0062],
        [0.0198, 0.0042, 0.0032],
        [0.0471, 0.0104, 0.0122],
        [0.0143, 0.0069, 0.0043],
        [0.0176, 0.0110, 0.0044],
        [0.0344, 0.0154, 0.0202],
        [0.0351, 0.0157, 0.0174],
        [0.0246, 0.0058, 0.0043],
        [0.0131, 0.0053, 0.0025],
        [0.0421, 0.0136, 0.0094],
        [0.0238, 0.0210, 0.0130],
        [0.0197, 0.0096, 0.0032],
        [0.0298, 0.0139, 0.0074],
        [0.0522, 0.0165, 0.0068],
        [0.0092, 0.0039, 0.0024]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0267],
        [0.0409],
        [0.0113],
        [0.0124],
        [0.0674],
        [0.0689],
        [0.0262],
        [0.0252],
        [0.0318],
        [0.0270],
        [0.0143],
        [0.0517],
        [0.0293],
        [0.0384],
        [0.0201],
        [0.0276]], device='cuda:0', dtype=torch.float16)/tensor([[0.0267, 0.0409, 0.0113, 0.0124, 0.0674, 0.0689, 0.0262, 0.0252, 0.0318,
         0.0270, 0.0143, 0.0517, 0.0293, 0.0384, 0.0201, 0.0276]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0142],
        [0.0136],
        [0.0059],
        [0.0043],
        [0.0133],
        [0.0172],
        [0.0060],
        [0.0129],
        [0.0092],
        [0.0079],
        [0.0105],
        [0.0117],
        [0.0081],
        [0.0164],
        [0.0128],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0136, 0.0059, 0.0043, 0.0133, 0.0172, 0.0060, 0.0129, 0.0092,
         0.0079, 0.0105, 0.0117, 0.0081, 0.0164, 0.0128, 0.0168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0066],
        [0.0069],
        [0.0065],
        [0.0046],
        [0.0181],
        [0.0176],
        [0.0068],
        [0.0075],
        [0.0083],
        [0.0055],
        [0.0091],
        [0.0090],
        [0.0091],
        [0.0121],
        [0.0108],
        [0.0091]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0069, 0.0065, 0.0046, 0.0181, 0.0176, 0.0068, 0.0075, 0.0083,
         0.0055, 0.0091, 0.0090, 0.0091, 0.0121, 0.0108, 0.0091]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0267, 0.0142, 0.0066],
        [0.0409, 0.0136, 0.0069],
        [0.0113, 0.0059, 0.0065],
        [0.0124, 0.0043, 0.0046],
        [0.0674, 0.0133, 0.0181],
        [0.0689, 0.0172, 0.0176],
        [0.0262, 0.0060, 0.0068],
        [0.0252, 0.0129, 0.0075],
        [0.0318, 0.0092, 0.0083],
        [0.0270, 0.0079, 0.0055],
        [0.0143, 0.0105, 0.0091],
        [0.0517, 0.0117, 0.0090],
        [0.0293, 0.0081, 0.0091],
        [0.0384, 0.0164, 0.0121],
        [0.0201, 0.0128, 0.0108],
        [0.0276, 0.0168, 0.0091]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0259],
        [0.0157],
        [0.0217],
        [0.0131],
        [0.0340],
        [0.0458],
        [0.0287],
        [0.0361],
        [0.0659],
        [0.0656],
        [0.0202],
        [0.0517],
        [0.0415],
        [0.0334],
        [0.0225],
        [0.0445]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0157, 0.0217, 0.0131, 0.0340, 0.0458, 0.0287, 0.0361, 0.0659,
         0.0656, 0.0202, 0.0517, 0.0415, 0.0334, 0.0225, 0.0445]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0049],
        [0.0059],
        [0.0066],
        [0.0096],
        [0.0192],
        [0.0143],
        [0.0085],
        [0.0076],
        [0.0274],
        [0.0069],
        [0.0120],
        [0.0106],
        [0.0134],
        [0.0098],
        [0.0097],
        [0.0169]], device='cuda:0', dtype=torch.float16)/tensor([[0.0049, 0.0059, 0.0066, 0.0096, 0.0192, 0.0143, 0.0085, 0.0076, 0.0274,
         0.0069, 0.0120, 0.0106, 0.0134, 0.0098, 0.0097, 0.0169]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0029],
        [0.0077],
        [0.0053],
        [0.0050],
        [0.0052],
        [0.0083],
        [0.0071],
        [0.0071],
        [0.0149],
        [0.0187],
        [0.0037],
        [0.0080],
        [0.0062],
        [0.0100],
        [0.0056],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0077, 0.0053, 0.0050, 0.0052, 0.0083, 0.0071, 0.0071, 0.0149,
         0.0187, 0.0037, 0.0080, 0.0062, 0.0100, 0.0056, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0259, 0.0049, 0.0029],
        [0.0157, 0.0059, 0.0077],
        [0.0217, 0.0066, 0.0053],
        [0.0131, 0.0096, 0.0050],
        [0.0340, 0.0192, 0.0052],
        [0.0458, 0.0143, 0.0083],
        [0.0287, 0.0085, 0.0071],
        [0.0361, 0.0076, 0.0071],
        [0.0659, 0.0274, 0.0149],
        [0.0656, 0.0069, 0.0187],
        [0.0202, 0.0120, 0.0037],
        [0.0517, 0.0106, 0.0080],
        [0.0415, 0.0134, 0.0062],
        [0.0334, 0.0098, 0.0100],
        [0.0225, 0.0097, 0.0056],
        [0.0445, 0.0169, 0.0096]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0091],
        [0.0903],
        [0.0210],
        [0.0102],
        [0.0492],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0903, 0.0210, 0.0102, 0.0492, 0.0261]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0025],
        [0.0080],
        [0.0149],
        [0.0079],
        [0.0138],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0025, 0.0080, 0.0149, 0.0079, 0.0138, 0.0089]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0030],
        [0.0186],
        [0.0178],
        [0.0039],
        [0.0066],
        [0.0100]], device='cuda:0', dtype=torch.float16)/tensor([[0.0030, 0.0186, 0.0178, 0.0039, 0.0066, 0.0100]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0091, 0.0025, 0.0030],
        [0.0903, 0.0080, 0.0186],
        [0.0210, 0.0149, 0.0178],
        [0.0102, 0.0079, 0.0039],
        [0.0492, 0.0138, 0.0066],
        [0.0261, 0.0089, 0.0100]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type modal, variation 5 and batchsize 16: 0:03:03.133649
path ['42', 'en', 'llama', 'NLI', 'modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI common 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 323.59it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0389],
        [0.0440],
        [0.0421],
        [0.0269],
        [0.0812],
        [0.0790],
        [0.0447],
        [0.0640],
        [0.0657],
        [0.0524],
        [0.0290],
        [0.0596],
        [0.0411],
        [0.0557],
        [0.0411],
        [0.0789]], device='cuda:0', dtype=torch.float16)/tensor([[0.0389, 0.0440, 0.0421, 0.0269, 0.0812, 0.0790, 0.0447, 0.0640, 0.0657,
         0.0524, 0.0290, 0.0596, 0.0411, 0.0557, 0.0411, 0.0789]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0123],
        [0.0311],
        [0.0213],
        [0.0170],
        [0.0164],
        [0.0312],
        [0.0147],
        [0.0130],
        [0.0206],
        [0.0157],
        [0.0093],
        [0.0256],
        [0.0195],
        [0.0265],
        [0.0173],
        [0.0213]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0311, 0.0213, 0.0170, 0.0164, 0.0312, 0.0147, 0.0130, 0.0206,
         0.0157, 0.0093, 0.0256, 0.0195, 0.0265, 0.0173, 0.0213]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0143],
        [0.0271],
        [0.0333],
        [0.0129],
        [0.0195],
        [0.0280],
        [0.0088],
        [0.0203],
        [0.0266],
        [0.0324],
        [0.0111],
        [0.0286],
        [0.0176],
        [0.0139],
        [0.0184],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0271, 0.0333, 0.0129, 0.0195, 0.0280, 0.0088, 0.0203, 0.0266,
         0.0324, 0.0111, 0.0286, 0.0176, 0.0139, 0.0184, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0389, 0.0123, 0.0143],
        [0.0440, 0.0311, 0.0271],
        [0.0421, 0.0213, 0.0333],
        [0.0269, 0.0170, 0.0129],
        [0.0812, 0.0164, 0.0195],
        [0.0790, 0.0312, 0.0280],
        [0.0447, 0.0147, 0.0088],
        [0.0640, 0.0130, 0.0203],
        [0.0657, 0.0206, 0.0266],
        [0.0524, 0.0157, 0.0324],
        [0.0290, 0.0093, 0.0111],
        [0.0596, 0.0256, 0.0286],
        [0.0411, 0.0195, 0.0176],
        [0.0557, 0.0265, 0.0139],
        [0.0411, 0.0173, 0.0184],
        [0.0789, 0.0213, 0.0177]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0405],
        [0.0408],
        [0.0657],
        [0.0549],
        [0.0368],
        [0.0652],
        [0.0779],
        [0.0679],
        [0.1013],
        [0.0783],
        [0.0797],
        [0.0229],
        [0.0494],
        [0.0390],
        [0.0427],
        [0.0487]], device='cuda:0', dtype=torch.float16)/tensor([[0.0405, 0.0408, 0.0657, 0.0549, 0.0368, 0.0652, 0.0779, 0.0679, 0.1013,
         0.0783, 0.0797, 0.0229, 0.0494, 0.0390, 0.0427, 0.0487]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0141],
        [0.0152],
        [0.0181],
        [0.0278],
        [0.0113],
        [0.0175],
        [0.0179],
        [0.0194],
        [0.0165],
        [0.0262],
        [0.0214],
        [0.0068],
        [0.0127],
        [0.0187],
        [0.0113],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0141, 0.0152, 0.0181, 0.0278, 0.0113, 0.0175, 0.0179, 0.0194, 0.0165,
         0.0262, 0.0214, 0.0068, 0.0127, 0.0187, 0.0113, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0113],
        [0.0272],
        [0.0134],
        [0.0155],
        [0.0149],
        [0.0167],
        [0.0232],
        [0.0257],
        [0.0232],
        [0.0382],
        [0.0305],
        [0.0080],
        [0.0128],
        [0.0120],
        [0.0151],
        [0.0130]], device='cuda:0', dtype=torch.float16)/tensor([[0.0113, 0.0272, 0.0134, 0.0155, 0.0149, 0.0167, 0.0232, 0.0257, 0.0232,
         0.0382, 0.0305, 0.0080, 0.0128, 0.0120, 0.0151, 0.0130]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0405, 0.0141, 0.0113],
        [0.0408, 0.0152, 0.0272],
        [0.0657, 0.0181, 0.0134],
        [0.0549, 0.0278, 0.0155],
        [0.0368, 0.0113, 0.0149],
        [0.0652, 0.0175, 0.0167],
        [0.0779, 0.0179, 0.0232],
        [0.0679, 0.0194, 0.0257],
        [0.1013, 0.0165, 0.0232],
        [0.0783, 0.0262, 0.0382],
        [0.0797, 0.0214, 0.0305],
        [0.0229, 0.0068, 0.0080],
        [0.0494, 0.0127, 0.0128],
        [0.0390, 0.0187, 0.0120],
        [0.0427, 0.0113, 0.0151],
        [0.0487, 0.0095, 0.0130]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0147],
        [0.0652],
        [0.0454],
        [0.0620],
        [0.0631],
        [0.0154],
        [0.0571],
        [0.0650],
        [0.0367],
        [0.0191],
        [0.0245],
        [0.0584],
        [0.0963],
        [0.0516],
        [0.0395],
        [0.0508]], device='cuda:0', dtype=torch.float16)/tensor([[0.0147, 0.0652, 0.0454, 0.0620, 0.0631, 0.0154, 0.0571, 0.0650, 0.0367,
         0.0191, 0.0245, 0.0584, 0.0963, 0.0516, 0.0395, 0.0508]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0058],
        [0.0124],
        [0.0195],
        [0.0165],
        [0.0200],
        [0.0084],
        [0.0151],
        [0.0205],
        [0.0138],
        [0.0088],
        [0.0137],
        [0.0225],
        [0.0301],
        [0.0136],
        [0.0099],
        [0.0098]], device='cuda:0', dtype=torch.float16)/tensor([[0.0058, 0.0124, 0.0195, 0.0165, 0.0200, 0.0084, 0.0151, 0.0205, 0.0138,
         0.0088, 0.0137, 0.0225, 0.0301, 0.0136, 0.0099, 0.0098]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0045],
        [0.0173],
        [0.0242],
        [0.0167],
        [0.0290],
        [0.0037],
        [0.0186],
        [0.0276],
        [0.0183],
        [0.0044],
        [0.0092],
        [0.0202],
        [0.0484],
        [0.0109],
        [0.0123],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0045, 0.0173, 0.0242, 0.0167, 0.0290, 0.0037, 0.0186, 0.0276, 0.0183,
         0.0044, 0.0092, 0.0202, 0.0484, 0.0109, 0.0123, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0147, 0.0058, 0.0045],
        [0.0652, 0.0124, 0.0173],
        [0.0454, 0.0195, 0.0242],
        [0.0620, 0.0165, 0.0167],
        [0.0631, 0.0200, 0.0290],
        [0.0154, 0.0084, 0.0037],
        [0.0571, 0.0151, 0.0186],
        [0.0650, 0.0205, 0.0276],
        [0.0367, 0.0138, 0.0183],
        [0.0191, 0.0088, 0.0044],
        [0.0245, 0.0137, 0.0092],
        [0.0584, 0.0225, 0.0202],
        [0.0963, 0.0301, 0.0484],
        [0.0516, 0.0136, 0.0109],
        [0.0395, 0.0099, 0.0123],
        [0.0508, 0.0098, 0.0109]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0929],
        [0.0401],
        [0.0557],
        [0.0493],
        [0.0902],
        [0.0611],
        [0.0267],
        [0.0100],
        [0.0339],
        [0.0391],
        [0.0149],
        [0.0616],
        [0.0529],
        [0.0145],
        [0.0564],
        [0.0617]], device='cuda:0', dtype=torch.float16)/tensor([[0.0929, 0.0401, 0.0557, 0.0493, 0.0902, 0.0611, 0.0267, 0.0100, 0.0339,
         0.0391, 0.0149, 0.0616, 0.0529, 0.0145, 0.0564, 0.0617]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0215],
        [0.0138],
        [0.0149],
        [0.0093],
        [0.0137],
        [0.0159],
        [0.0095],
        [0.0083],
        [0.0123],
        [0.0193],
        [0.0093],
        [0.0233],
        [0.0114],
        [0.0081],
        [0.0257],
        [0.0109]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0138, 0.0149, 0.0093, 0.0137, 0.0159, 0.0095, 0.0083, 0.0123,
         0.0193, 0.0093, 0.0233, 0.0114, 0.0081, 0.0257, 0.0109]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0204],
        [0.0146],
        [0.0151],
        [0.0130],
        [0.0302],
        [0.0173],
        [0.0100],
        [0.0097],
        [0.0132],
        [0.0192],
        [0.0042],
        [0.0359],
        [0.0140],
        [0.0083],
        [0.0197],
        [0.0101]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0146, 0.0151, 0.0130, 0.0302, 0.0173, 0.0100, 0.0097, 0.0132,
         0.0192, 0.0042, 0.0359, 0.0140, 0.0083, 0.0197, 0.0101]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0929, 0.0215, 0.0204],
        [0.0401, 0.0138, 0.0146],
        [0.0557, 0.0149, 0.0151],
        [0.0493, 0.0093, 0.0130],
        [0.0902, 0.0137, 0.0302],
        [0.0611, 0.0159, 0.0173],
        [0.0267, 0.0095, 0.0100],
        [0.0100, 0.0083, 0.0097],
        [0.0339, 0.0123, 0.0132],
        [0.0391, 0.0193, 0.0192],
        [0.0149, 0.0093, 0.0042],
        [0.0616, 0.0233, 0.0359],
        [0.0529, 0.0114, 0.0140],
        [0.0145, 0.0081, 0.0083],
        [0.0564, 0.0257, 0.0197],
        [0.0617, 0.0109, 0.0101]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1017],
        [0.0572],
        [0.0843],
        [0.0364],
        [0.0684],
        [0.0624],
        [0.0215],
        [0.0490],
        [0.0601],
        [0.0876],
        [0.0313],
        [0.0516],
        [0.0462],
        [0.0319],
        [0.0785],
        [0.0652]], device='cuda:0', dtype=torch.float16)/tensor([[0.1017, 0.0572, 0.0843, 0.0364, 0.0684, 0.0624, 0.0215, 0.0490, 0.0601,
         0.0876, 0.0313, 0.0516, 0.0462, 0.0319, 0.0785, 0.0652]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0174],
        [0.0256],
        [0.0163],
        [0.0134],
        [0.0224],
        [0.0228],
        [0.0074],
        [0.0211],
        [0.0150],
        [0.0282],
        [0.0142],
        [0.0165],
        [0.0169],
        [0.0075],
        [0.0330],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0174, 0.0256, 0.0163, 0.0134, 0.0224, 0.0228, 0.0074, 0.0211, 0.0150,
         0.0282, 0.0142, 0.0165, 0.0169, 0.0075, 0.0330, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0368],
        [0.0323],
        [0.0253],
        [0.0263],
        [0.0162],
        [0.0243],
        [0.0095],
        [0.0148],
        [0.0130],
        [0.0317],
        [0.0093],
        [0.0172],
        [0.0205],
        [0.0087],
        [0.0253],
        [0.0223]], device='cuda:0', dtype=torch.float16)/tensor([[0.0368, 0.0323, 0.0253, 0.0263, 0.0162, 0.0243, 0.0095, 0.0148, 0.0130,
         0.0317, 0.0093, 0.0172, 0.0205, 0.0087, 0.0253, 0.0223]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1017, 0.0174, 0.0368],
        [0.0572, 0.0256, 0.0323],
        [0.0843, 0.0163, 0.0253],
        [0.0364, 0.0134, 0.0263],
        [0.0684, 0.0224, 0.0162],
        [0.0624, 0.0228, 0.0243],
        [0.0215, 0.0074, 0.0095],
        [0.0490, 0.0211, 0.0148],
        [0.0601, 0.0150, 0.0130],
        [0.0876, 0.0282, 0.0317],
        [0.0313, 0.0142, 0.0093],
        [0.0516, 0.0165, 0.0172],
        [0.0462, 0.0169, 0.0205],
        [0.0319, 0.0075, 0.0087],
        [0.0785, 0.0330, 0.0253],
        [0.0652, 0.0129, 0.0223]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0515],
        [0.0674],
        [0.0439],
        [0.0831],
        [0.0709],
        [0.0527],
        [0.0833],
        [0.0253],
        [0.0734],
        [0.0682],
        [0.0557],
        [0.0615],
        [0.0997],
        [0.0242],
        [0.0534],
        [0.0645]], device='cuda:0', dtype=torch.float16)/tensor([[0.0515, 0.0674, 0.0439, 0.0831, 0.0709, 0.0527, 0.0833, 0.0253, 0.0734,
         0.0682, 0.0557, 0.0615, 0.0997, 0.0242, 0.0534, 0.0645]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0205],
        [0.0134],
        [0.0120],
        [0.0172],
        [0.0300],
        [0.0149],
        [0.0207],
        [0.0112],
        [0.0262],
        [0.0238],
        [0.0218],
        [0.0182],
        [0.0333],
        [0.0135],
        [0.0196],
        [0.0144]], device='cuda:0', dtype=torch.float16)/tensor([[0.0205, 0.0134, 0.0120, 0.0172, 0.0300, 0.0149, 0.0207, 0.0112, 0.0262,
         0.0238, 0.0218, 0.0182, 0.0333, 0.0135, 0.0196, 0.0144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0161],
        [0.0152],
        [0.0250],
        [0.0293],
        [0.0410],
        [0.0191],
        [0.0212],
        [0.0097],
        [0.0386],
        [0.0127],
        [0.0199],
        [0.0322],
        [0.0233],
        [0.0121],
        [0.0193],
        [0.0271]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0152, 0.0250, 0.0293, 0.0410, 0.0191, 0.0212, 0.0097, 0.0386,
         0.0127, 0.0199, 0.0322, 0.0233, 0.0121, 0.0193, 0.0271]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0515, 0.0205, 0.0161],
        [0.0674, 0.0134, 0.0152],
        [0.0439, 0.0120, 0.0250],
        [0.0831, 0.0172, 0.0293],
        [0.0709, 0.0300, 0.0410],
        [0.0527, 0.0149, 0.0191],
        [0.0833, 0.0207, 0.0212],
        [0.0253, 0.0112, 0.0097],
        [0.0734, 0.0262, 0.0386],
        [0.0682, 0.0238, 0.0127],
        [0.0557, 0.0218, 0.0199],
        [0.0615, 0.0182, 0.0322],
        [0.0997, 0.0333, 0.0233],
        [0.0242, 0.0135, 0.0121],
        [0.0534, 0.0196, 0.0193],
        [0.0645, 0.0144, 0.0271]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0352],
        [0.0743],
        [0.0724],
        [0.0460],
        [0.0275],
        [0.0571],
        [0.0610],
        [0.0521],
        [0.0647],
        [0.0714],
        [0.0729],
        [0.0498],
        [0.0646],
        [0.0635],
        [0.0833],
        [0.0464]], device='cuda:0', dtype=torch.float16)/tensor([[0.0352, 0.0743, 0.0724, 0.0460, 0.0275, 0.0571, 0.0610, 0.0521, 0.0647,
         0.0714, 0.0729, 0.0498, 0.0646, 0.0635, 0.0833, 0.0464]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0135],
        [0.0172],
        [0.0239],
        [0.0113],
        [0.0139],
        [0.0185],
        [0.0166],
        [0.0139],
        [0.0248],
        [0.0189],
        [0.0205],
        [0.0204],
        [0.0184],
        [0.0213],
        [0.0246],
        [0.0111]], device='cuda:0', dtype=torch.float16)/tensor([[0.0135, 0.0172, 0.0239, 0.0113, 0.0139, 0.0185, 0.0166, 0.0139, 0.0248,
         0.0189, 0.0205, 0.0204, 0.0184, 0.0213, 0.0246, 0.0111]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0114],
        [0.0338],
        [0.0210],
        [0.0286],
        [0.0124],
        [0.0185],
        [0.0182],
        [0.0142],
        [0.0308],
        [0.0153],
        [0.0139],
        [0.0161],
        [0.0221],
        [0.0220],
        [0.0151],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0114, 0.0338, 0.0210, 0.0286, 0.0124, 0.0185, 0.0182, 0.0142, 0.0308,
         0.0153, 0.0139, 0.0161, 0.0221, 0.0220, 0.0151, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0352, 0.0135, 0.0114],
        [0.0743, 0.0172, 0.0338],
        [0.0724, 0.0239, 0.0210],
        [0.0460, 0.0113, 0.0286],
        [0.0275, 0.0139, 0.0124],
        [0.0571, 0.0185, 0.0185],
        [0.0610, 0.0166, 0.0182],
        [0.0521, 0.0139, 0.0142],
        [0.0647, 0.0248, 0.0308],
        [0.0714, 0.0189, 0.0153],
        [0.0729, 0.0205, 0.0139],
        [0.0498, 0.0204, 0.0161],
        [0.0646, 0.0184, 0.0221],
        [0.0635, 0.0213, 0.0220],
        [0.0833, 0.0246, 0.0151],
        [0.0464, 0.0111, 0.0195]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0773],
        [0.0404],
        [0.0647],
        [0.0404],
        [0.0467],
        [0.0191],
        [0.1053],
        [0.0202],
        [0.0215],
        [0.0925],
        [0.0658],
        [0.0356],
        [0.0275],
        [0.0316],
        [0.0718],
        [0.0498]], device='cuda:0', dtype=torch.float16)/tensor([[0.0773, 0.0404, 0.0647, 0.0404, 0.0467, 0.0191, 0.1053, 0.0202, 0.0215,
         0.0925, 0.0658, 0.0356, 0.0275, 0.0316, 0.0718, 0.0498]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0301],
        [0.0125],
        [0.0255],
        [0.0166],
        [0.0214],
        [0.0064],
        [0.0297],
        [0.0209],
        [0.0106],
        [0.0154],
        [0.0183],
        [0.0141],
        [0.0101],
        [0.0079],
        [0.0192],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0301, 0.0125, 0.0255, 0.0166, 0.0214, 0.0064, 0.0297, 0.0209, 0.0106,
         0.0154, 0.0183, 0.0141, 0.0101, 0.0079, 0.0192, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0289],
        [0.0165],
        [0.0298],
        [0.0164],
        [0.0175],
        [0.0039],
        [0.0367],
        [0.0080],
        [0.0110],
        [0.0228],
        [0.0190],
        [0.0090],
        [0.0220],
        [0.0102],
        [0.0162],
        [0.0288]], device='cuda:0', dtype=torch.float16)/tensor([[0.0289, 0.0165, 0.0298, 0.0164, 0.0175, 0.0039, 0.0367, 0.0080, 0.0110,
         0.0228, 0.0190, 0.0090, 0.0220, 0.0102, 0.0162, 0.0288]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0773, 0.0301, 0.0289],
        [0.0404, 0.0125, 0.0165],
        [0.0647, 0.0255, 0.0298],
        [0.0404, 0.0166, 0.0164],
        [0.0467, 0.0214, 0.0175],
        [0.0191, 0.0064, 0.0039],
        [0.1053, 0.0297, 0.0367],
        [0.0202, 0.0209, 0.0080],
        [0.0215, 0.0106, 0.0110],
        [0.0925, 0.0154, 0.0228],
        [0.0658, 0.0183, 0.0190],
        [0.0356, 0.0141, 0.0090],
        [0.0275, 0.0101, 0.0220],
        [0.0316, 0.0079, 0.0102],
        [0.0718, 0.0192, 0.0162],
        [0.0498, 0.0243, 0.0288]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0519],
        [0.0341],
        [0.0523],
        [0.0420],
        [0.0482],
        [0.0583],
        [0.0325],
        [0.0456],
        [0.0797],
        [0.0597],
        [0.1109],
        [0.0422],
        [0.0840],
        [0.0525],
        [0.0338],
        [0.0919]], device='cuda:0', dtype=torch.float16)/tensor([[0.0519, 0.0341, 0.0523, 0.0420, 0.0482, 0.0583, 0.0325, 0.0456, 0.0797,
         0.0597, 0.1109, 0.0422, 0.0840, 0.0525, 0.0338, 0.0919]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0201],
        [0.0175],
        [0.0187],
        [0.0087],
        [0.0111],
        [0.0120],
        [0.0127],
        [0.0190],
        [0.0179],
        [0.0109],
        [0.0328],
        [0.0153],
        [0.0290],
        [0.0126],
        [0.0107],
        [0.0180]], device='cuda:0', dtype=torch.float16)/tensor([[0.0201, 0.0175, 0.0187, 0.0087, 0.0111, 0.0120, 0.0127, 0.0190, 0.0179,
         0.0109, 0.0328, 0.0153, 0.0290, 0.0126, 0.0107, 0.0180]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0175],
        [0.0257],
        [0.0103],
        [0.0176],
        [0.0136],
        [0.0145],
        [0.0092],
        [0.0164],
        [0.0144],
        [0.0336],
        [0.0512],
        [0.0099],
        [0.0297],
        [0.0212],
        [0.0132],
        [0.0357]], device='cuda:0', dtype=torch.float16)/tensor([[0.0175, 0.0257, 0.0103, 0.0176, 0.0136, 0.0145, 0.0092, 0.0164, 0.0144,
         0.0336, 0.0512, 0.0099, 0.0297, 0.0212, 0.0132, 0.0357]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0519, 0.0201, 0.0175],
        [0.0341, 0.0175, 0.0257],
        [0.0523, 0.0187, 0.0103],
        [0.0420, 0.0087, 0.0176],
        [0.0482, 0.0111, 0.0136],
        [0.0583, 0.0120, 0.0145],
        [0.0325, 0.0127, 0.0092],
        [0.0456, 0.0190, 0.0164],
        [0.0797, 0.0179, 0.0144],
        [0.0597, 0.0109, 0.0336],
        [0.1109, 0.0328, 0.0512],
        [0.0422, 0.0153, 0.0099],
        [0.0840, 0.0290, 0.0297],
        [0.0525, 0.0126, 0.0212],
        [0.0338, 0.0107, 0.0132],
        [0.0919, 0.0180, 0.0357]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0768],
        [0.0362],
        [0.0634],
        [0.0959],
        [0.0376],
        [0.0161],
        [0.0443],
        [0.0859],
        [0.0406],
        [0.0520],
        [0.0529],
        [0.0323],
        [0.0786],
        [0.0556],
        [0.0597],
        [0.1064]], device='cuda:0', dtype=torch.float16)/tensor([[0.0768, 0.0362, 0.0634, 0.0959, 0.0376, 0.0161, 0.0443, 0.0859, 0.0406,
         0.0520, 0.0529, 0.0323, 0.0786, 0.0556, 0.0597, 0.1064]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0244],
        [0.0172],
        [0.0185],
        [0.0293],
        [0.0224],
        [0.0070],
        [0.0171],
        [0.0262],
        [0.0086],
        [0.0169],
        [0.0169],
        [0.0177],
        [0.0216],
        [0.0267],
        [0.0256],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0172, 0.0185, 0.0293, 0.0224, 0.0070, 0.0171, 0.0262, 0.0086,
         0.0169, 0.0169, 0.0177, 0.0216, 0.0267, 0.0256, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0283],
        [0.0191],
        [0.0147],
        [0.0307],
        [0.0145],
        [0.0097],
        [0.0170],
        [0.0321],
        [0.0137],
        [0.0169],
        [0.0181],
        [0.0146],
        [0.0222],
        [0.0253],
        [0.0184],
        [0.0487]], device='cuda:0', dtype=torch.float16)/tensor([[0.0283, 0.0191, 0.0147, 0.0307, 0.0145, 0.0097, 0.0170, 0.0321, 0.0137,
         0.0169, 0.0181, 0.0146, 0.0222, 0.0253, 0.0184, 0.0487]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0768, 0.0244, 0.0283],
        [0.0362, 0.0172, 0.0191],
        [0.0634, 0.0185, 0.0147],
        [0.0959, 0.0293, 0.0307],
        [0.0376, 0.0224, 0.0145],
        [0.0161, 0.0070, 0.0097],
        [0.0443, 0.0171, 0.0170],
        [0.0859, 0.0262, 0.0321],
        [0.0406, 0.0086, 0.0137],
        [0.0520, 0.0169, 0.0169],
        [0.0529, 0.0169, 0.0181],
        [0.0323, 0.0177, 0.0146],
        [0.0786, 0.0216, 0.0222],
        [0.0556, 0.0267, 0.0253],
        [0.0597, 0.0256, 0.0184],
        [0.1064, 0.0351, 0.0487]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0471],
        [0.0495],
        [0.0617],
        [0.0782],
        [0.0155],
        [0.0654],
        [0.0897],
        [0.0442],
        [0.0240],
        [0.0468],
        [0.0211],
        [0.0456],
        [0.0521],
        [0.0309],
        [0.0467],
        [0.0395]], device='cuda:0', dtype=torch.float16)/tensor([[0.0471, 0.0495, 0.0617, 0.0782, 0.0155, 0.0654, 0.0897, 0.0442, 0.0240,
         0.0468, 0.0211, 0.0456, 0.0521, 0.0309, 0.0467, 0.0395]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0232],
        [0.0198],
        [0.0213],
        [0.0192],
        [0.0068],
        [0.0158],
        [0.0237],
        [0.0317],
        [0.0085],
        [0.0123],
        [0.0147],
        [0.0130],
        [0.0154],
        [0.0148],
        [0.0250],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0232, 0.0198, 0.0213, 0.0192, 0.0068, 0.0158, 0.0237, 0.0317, 0.0085,
         0.0123, 0.0147, 0.0130, 0.0154, 0.0148, 0.0250, 0.0156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0173],
        [0.0161],
        [0.0148],
        [0.0189],
        [0.0061],
        [0.0227],
        [0.0238],
        [0.0312],
        [0.0039],
        [0.0143],
        [0.0177],
        [0.0224],
        [0.0201],
        [0.0148],
        [0.0183],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0173, 0.0161, 0.0148, 0.0189, 0.0061, 0.0227, 0.0238, 0.0312, 0.0039,
         0.0143, 0.0177, 0.0224, 0.0201, 0.0148, 0.0183, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0471, 0.0232, 0.0173],
        [0.0495, 0.0198, 0.0161],
        [0.0617, 0.0213, 0.0148],
        [0.0782, 0.0192, 0.0189],
        [0.0155, 0.0068, 0.0061],
        [0.0654, 0.0158, 0.0227],
        [0.0897, 0.0237, 0.0238],
        [0.0442, 0.0317, 0.0312],
        [0.0240, 0.0085, 0.0039],
        [0.0468, 0.0123, 0.0143],
        [0.0211, 0.0147, 0.0177],
        [0.0456, 0.0130, 0.0224],
        [0.0521, 0.0154, 0.0201],
        [0.0309, 0.0148, 0.0148],
        [0.0467, 0.0250, 0.0183],
        [0.0395, 0.0156, 0.0136]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0464],
        [0.0916],
        [0.0138],
        [0.0408],
        [0.0565],
        [0.0923],
        [0.0583],
        [0.0850],
        [0.0494],
        [0.0272],
        [0.0245],
        [0.0313],
        [0.0989],
        [0.0421],
        [0.0286],
        [0.0709]], device='cuda:0', dtype=torch.float16)/tensor([[0.0464, 0.0916, 0.0138, 0.0408, 0.0565, 0.0923, 0.0583, 0.0850, 0.0494,
         0.0272, 0.0245, 0.0313, 0.0989, 0.0421, 0.0286, 0.0709]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0095],
        [0.0273],
        [0.0074],
        [0.0117],
        [0.0129],
        [0.0254],
        [0.0284],
        [0.0150],
        [0.0194],
        [0.0115],
        [0.0173],
        [0.0161],
        [0.0198],
        [0.0141],
        [0.0121],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0273, 0.0074, 0.0117, 0.0129, 0.0254, 0.0284, 0.0150, 0.0194,
         0.0115, 0.0173, 0.0161, 0.0198, 0.0141, 0.0121, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0171],
        [0.0290],
        [0.0063],
        [0.0130],
        [0.0242],
        [0.0348],
        [0.0168],
        [0.0226],
        [0.0144],
        [0.0100],
        [0.0074],
        [0.0118],
        [0.0356],
        [0.0171],
        [0.0106],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0290, 0.0063, 0.0130, 0.0242, 0.0348, 0.0168, 0.0226, 0.0144,
         0.0100, 0.0074, 0.0118, 0.0356, 0.0171, 0.0106, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0464, 0.0095, 0.0171],
        [0.0916, 0.0273, 0.0290],
        [0.0138, 0.0074, 0.0063],
        [0.0408, 0.0117, 0.0130],
        [0.0565, 0.0129, 0.0242],
        [0.0923, 0.0254, 0.0348],
        [0.0583, 0.0284, 0.0168],
        [0.0850, 0.0150, 0.0226],
        [0.0494, 0.0194, 0.0144],
        [0.0272, 0.0115, 0.0100],
        [0.0245, 0.0173, 0.0074],
        [0.0313, 0.0161, 0.0118],
        [0.0989, 0.0198, 0.0356],
        [0.0421, 0.0141, 0.0171],
        [0.0286, 0.0121, 0.0106],
        [0.0709, 0.0206, 0.0189]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0290],
        [0.0885],
        [0.0379],
        [0.0728],
        [0.1084],
        [0.1201]], device='cuda:0', dtype=torch.float16)/tensor([[0.0290, 0.0885, 0.0379, 0.0728, 0.1084, 0.1201]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0138],
        [0.0269],
        [0.0144],
        [0.0208],
        [0.0248],
        [0.0296]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0269, 0.0144, 0.0208, 0.0248, 0.0296]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0148],
        [0.0474],
        [0.0187],
        [0.0276],
        [0.0402],
        [0.0313]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0474, 0.0187, 0.0276, 0.0402, 0.0313]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0290, 0.0138, 0.0148],
        [0.0885, 0.0269, 0.0474],
        [0.0379, 0.0144, 0.0187],
        [0.0728, 0.0208, 0.0276],
        [0.1084, 0.0248, 0.0402],
        [0.1201, 0.0296, 0.0313]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type common, variation 0 and batchsize 16: 0:03:03.206759
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI common 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 308.33it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0582],
        [0.0815],
        [0.0519],
        [0.0566],
        [0.0685],
        [0.0662],
        [0.0394],
        [0.0503],
        [0.0695],
        [0.0440],
        [0.0185],
        [0.0555],
        [0.0806],
        [0.0889],
        [0.0604],
        [0.0334]], device='cuda:0', dtype=torch.float16)/tensor([[0.0582, 0.0815, 0.0519, 0.0566, 0.0685, 0.0662, 0.0394, 0.0503, 0.0695,
         0.0440, 0.0185, 0.0555, 0.0806, 0.0889, 0.0604, 0.0334]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0158],
        [0.0190],
        [0.0234],
        [0.0120],
        [0.0143],
        [0.0115],
        [0.0155],
        [0.0182],
        [0.0140],
        [0.0073],
        [0.0129],
        [0.0156],
        [0.0253],
        [0.0104],
        [0.0154]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0158, 0.0190, 0.0234, 0.0120, 0.0143, 0.0115, 0.0155, 0.0182,
         0.0140, 0.0073, 0.0129, 0.0156, 0.0253, 0.0104, 0.0154]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0176],
        [0.0295],
        [0.0170],
        [0.0266],
        [0.0172],
        [0.0132],
        [0.0262],
        [0.0127],
        [0.0268],
        [0.0144],
        [0.0223],
        [0.0219],
        [0.0246],
        [0.0401],
        [0.0210],
        [0.0246]], device='cuda:0', dtype=torch.float16)/tensor([[0.0176, 0.0295, 0.0170, 0.0266, 0.0172, 0.0132, 0.0262, 0.0127, 0.0268,
         0.0144, 0.0223, 0.0219, 0.0246, 0.0401, 0.0210, 0.0246]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0582, 0.0117, 0.0176],
        [0.0815, 0.0158, 0.0295],
        [0.0519, 0.0190, 0.0170],
        [0.0566, 0.0234, 0.0266],
        [0.0685, 0.0120, 0.0172],
        [0.0662, 0.0143, 0.0132],
        [0.0394, 0.0115, 0.0262],
        [0.0503, 0.0155, 0.0127],
        [0.0695, 0.0182, 0.0268],
        [0.0440, 0.0140, 0.0144],
        [0.0185, 0.0073, 0.0223],
        [0.0555, 0.0129, 0.0219],
        [0.0806, 0.0156, 0.0246],
        [0.0889, 0.0253, 0.0401],
        [0.0604, 0.0104, 0.0210],
        [0.0334, 0.0154, 0.0246]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0676],
        [0.0577],
        [0.0668],
        [0.0279],
        [0.0313],
        [0.0415],
        [0.0356],
        [0.0467],
        [0.0283],
        [0.0359],
        [0.0516],
        [0.0506],
        [0.0872],
        [0.0633],
        [0.0208],
        [0.0626]], device='cuda:0', dtype=torch.float16)/tensor([[0.0676, 0.0577, 0.0668, 0.0279, 0.0313, 0.0415, 0.0356, 0.0467, 0.0283,
         0.0359, 0.0516, 0.0506, 0.0872, 0.0633, 0.0208, 0.0626]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0269],
        [0.0151],
        [0.0155],
        [0.0070],
        [0.0143],
        [0.0086],
        [0.0093],
        [0.0106],
        [0.0189],
        [0.0251],
        [0.0180],
        [0.0237],
        [0.0181],
        [0.0181],
        [0.0049],
        [0.0175]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0151, 0.0155, 0.0070, 0.0143, 0.0086, 0.0093, 0.0106, 0.0189,
         0.0251, 0.0180, 0.0237, 0.0181, 0.0181, 0.0049, 0.0175]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0376],
        [0.0140],
        [0.0187],
        [0.0095],
        [0.0103],
        [0.0133],
        [0.0159],
        [0.0272],
        [0.0141],
        [0.0319],
        [0.0161],
        [0.0454],
        [0.0290],
        [0.0224],
        [0.0092],
        [0.0134]], device='cuda:0', dtype=torch.float16)/tensor([[0.0376, 0.0140, 0.0187, 0.0095, 0.0103, 0.0133, 0.0159, 0.0272, 0.0141,
         0.0319, 0.0161, 0.0454, 0.0290, 0.0224, 0.0092, 0.0134]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0676, 0.0269, 0.0376],
        [0.0577, 0.0151, 0.0140],
        [0.0668, 0.0155, 0.0187],
        [0.0279, 0.0070, 0.0095],
        [0.0313, 0.0143, 0.0103],
        [0.0415, 0.0086, 0.0133],
        [0.0356, 0.0093, 0.0159],
        [0.0467, 0.0106, 0.0272],
        [0.0283, 0.0189, 0.0141],
        [0.0359, 0.0251, 0.0319],
        [0.0516, 0.0180, 0.0161],
        [0.0506, 0.0237, 0.0454],
        [0.0872, 0.0181, 0.0290],
        [0.0633, 0.0181, 0.0224],
        [0.0208, 0.0049, 0.0092],
        [0.0626, 0.0175, 0.0134]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0726],
        [0.0528],
        [0.0301],
        [0.0350],
        [0.0344],
        [0.0353],
        [0.0202],
        [0.0356],
        [0.0774],
        [0.0686],
        [0.0760],
        [0.0629],
        [0.0702],
        [0.0235],
        [0.0433],
        [0.0511]], device='cuda:0', dtype=torch.float16)/tensor([[0.0726, 0.0528, 0.0301, 0.0350, 0.0344, 0.0353, 0.0202, 0.0356, 0.0774,
         0.0686, 0.0760, 0.0629, 0.0702, 0.0235, 0.0433, 0.0511]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0182],
        [0.0126],
        [0.0053],
        [0.0205],
        [0.0168],
        [0.0098],
        [0.0048],
        [0.0238],
        [0.0108],
        [0.0146],
        [0.0099],
        [0.0170],
        [0.0203],
        [0.0081],
        [0.0089],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0182, 0.0126, 0.0053, 0.0205, 0.0168, 0.0098, 0.0048, 0.0238, 0.0108,
         0.0146, 0.0099, 0.0170, 0.0203, 0.0081, 0.0089, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0343],
        [0.0246],
        [0.0101],
        [0.0232],
        [0.0078],
        [0.0127],
        [0.0113],
        [0.0171],
        [0.0357],
        [0.0197],
        [0.0267],
        [0.0256],
        [0.0233],
        [0.0069],
        [0.0154],
        [0.0137]], device='cuda:0', dtype=torch.float16)/tensor([[0.0343, 0.0246, 0.0101, 0.0232, 0.0078, 0.0127, 0.0113, 0.0171, 0.0357,
         0.0197, 0.0267, 0.0256, 0.0233, 0.0069, 0.0154, 0.0137]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0726, 0.0182, 0.0343],
        [0.0528, 0.0126, 0.0246],
        [0.0301, 0.0053, 0.0101],
        [0.0350, 0.0205, 0.0232],
        [0.0344, 0.0168, 0.0078],
        [0.0353, 0.0098, 0.0127],
        [0.0202, 0.0048, 0.0113],
        [0.0356, 0.0238, 0.0171],
        [0.0774, 0.0108, 0.0357],
        [0.0686, 0.0146, 0.0197],
        [0.0760, 0.0099, 0.0267],
        [0.0629, 0.0170, 0.0256],
        [0.0702, 0.0203, 0.0233],
        [0.0235, 0.0081, 0.0069],
        [0.0433, 0.0089, 0.0154],
        [0.0511, 0.0149, 0.0137]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0622],
        [0.0646],
        [0.0471],
        [0.0872],
        [0.0118],
        [0.0404],
        [0.0419],
        [0.0800],
        [0.0243],
        [0.0292],
        [0.0369],
        [0.0336],
        [0.0769],
        [0.0558],
        [0.0789],
        [0.0826]], device='cuda:0', dtype=torch.float16)/tensor([[0.0622, 0.0646, 0.0471, 0.0872, 0.0118, 0.0404, 0.0419, 0.0800, 0.0243,
         0.0292, 0.0369, 0.0336, 0.0769, 0.0558, 0.0789, 0.0826]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0154],
        [0.0190],
        [0.0111],
        [0.0220],
        [0.0052],
        [0.0113],
        [0.0210],
        [0.0281],
        [0.0103],
        [0.0079],
        [0.0130],
        [0.0090],
        [0.0187],
        [0.0151],
        [0.0211],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0190, 0.0111, 0.0220, 0.0052, 0.0113, 0.0210, 0.0281, 0.0103,
         0.0079, 0.0130, 0.0090, 0.0187, 0.0151, 0.0211, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0278],
        [0.0189],
        [0.0198],
        [0.0775],
        [0.0058],
        [0.0096],
        [0.0178],
        [0.0528],
        [0.0110],
        [0.0092],
        [0.0244],
        [0.0107],
        [0.0202],
        [0.0194],
        [0.0229],
        [0.0505]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0189, 0.0198, 0.0775, 0.0058, 0.0096, 0.0178, 0.0528, 0.0110,
         0.0092, 0.0244, 0.0107, 0.0202, 0.0194, 0.0229, 0.0505]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0622, 0.0154, 0.0278],
        [0.0646, 0.0190, 0.0189],
        [0.0471, 0.0111, 0.0198],
        [0.0872, 0.0220, 0.0775],
        [0.0118, 0.0052, 0.0058],
        [0.0404, 0.0113, 0.0096],
        [0.0419, 0.0210, 0.0178],
        [0.0800, 0.0281, 0.0528],
        [0.0243, 0.0103, 0.0110],
        [0.0292, 0.0079, 0.0092],
        [0.0369, 0.0130, 0.0244],
        [0.0336, 0.0090, 0.0107],
        [0.0769, 0.0187, 0.0202],
        [0.0558, 0.0151, 0.0194],
        [0.0789, 0.0211, 0.0229],
        [0.0826, 0.0159, 0.0505]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0872],
        [0.0760],
        [0.0754],
        [0.0584],
        [0.0258],
        [0.0543],
        [0.0779],
        [0.0857],
        [0.0608],
        [0.0223],
        [0.0704],
        [0.0504],
        [0.1024],
        [0.0361],
        [0.0645],
        [0.0602]], device='cuda:0', dtype=torch.float16)/tensor([[0.0872, 0.0760, 0.0754, 0.0584, 0.0258, 0.0543, 0.0779, 0.0857, 0.0608,
         0.0223, 0.0704, 0.0504, 0.1024, 0.0361, 0.0645, 0.0602]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0150],
        [0.0123],
        [0.0209],
        [0.0187],
        [0.0106],
        [0.0169],
        [0.0174],
        [0.0225],
        [0.0174],
        [0.0100],
        [0.0194],
        [0.0101],
        [0.0159],
        [0.0149],
        [0.0172],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0123, 0.0209, 0.0187, 0.0106, 0.0169, 0.0174, 0.0225, 0.0174,
         0.0100, 0.0194, 0.0101, 0.0159, 0.0149, 0.0172, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0446],
        [0.0362],
        [0.0233],
        [0.0242],
        [0.0217],
        [0.0235],
        [0.0221],
        [0.0331],
        [0.0301],
        [0.0101],
        [0.0218],
        [0.0155],
        [0.0251],
        [0.0201],
        [0.0307],
        [0.0273]], device='cuda:0', dtype=torch.float16)/tensor([[0.0446, 0.0362, 0.0233, 0.0242, 0.0217, 0.0235, 0.0221, 0.0331, 0.0301,
         0.0101, 0.0218, 0.0155, 0.0251, 0.0201, 0.0307, 0.0273]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0872, 0.0150, 0.0446],
        [0.0760, 0.0123, 0.0362],
        [0.0754, 0.0209, 0.0233],
        [0.0584, 0.0187, 0.0242],
        [0.0258, 0.0106, 0.0217],
        [0.0543, 0.0169, 0.0235],
        [0.0779, 0.0174, 0.0221],
        [0.0857, 0.0225, 0.0331],
        [0.0608, 0.0174, 0.0301],
        [0.0223, 0.0100, 0.0101],
        [0.0704, 0.0194, 0.0218],
        [0.0504, 0.0101, 0.0155],
        [0.1024, 0.0159, 0.0251],
        [0.0361, 0.0149, 0.0201],
        [0.0645, 0.0172, 0.0307],
        [0.0602, 0.0177, 0.0273]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0684],
        [0.0415],
        [0.0160],
        [0.0632],
        [0.0637],
        [0.0298],
        [0.0580],
        [0.0429],
        [0.0293],
        [0.0341],
        [0.0334],
        [0.0809],
        [0.0912],
        [0.1181],
        [0.0351],
        [0.0526]], device='cuda:0', dtype=torch.float16)/tensor([[0.0684, 0.0415, 0.0160, 0.0632, 0.0637, 0.0298, 0.0580, 0.0429, 0.0293,
         0.0341, 0.0334, 0.0809, 0.0912, 0.1181, 0.0351, 0.0526]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0097],
        [0.0048],
        [0.0145],
        [0.0180],
        [0.0197],
        [0.0097],
        [0.0170],
        [0.0128],
        [0.0115],
        [0.0129],
        [0.0143],
        [0.0213],
        [0.0182],
        [0.0161],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0097, 0.0048, 0.0145, 0.0180, 0.0197, 0.0097, 0.0170, 0.0128,
         0.0115, 0.0129, 0.0143, 0.0213, 0.0182, 0.0161, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0128],
        [0.0212],
        [0.0130],
        [0.0184],
        [0.0372],
        [0.0211],
        [0.0283],
        [0.0426],
        [0.0163],
        [0.0192],
        [0.0198],
        [0.0170],
        [0.0392],
        [0.0346],
        [0.0142],
        [0.0230]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0212, 0.0130, 0.0184, 0.0372, 0.0211, 0.0283, 0.0426, 0.0163,
         0.0192, 0.0198, 0.0170, 0.0392, 0.0346, 0.0142, 0.0230]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0684, 0.0160, 0.0128],
        [0.0415, 0.0097, 0.0212],
        [0.0160, 0.0048, 0.0130],
        [0.0632, 0.0145, 0.0184],
        [0.0637, 0.0180, 0.0372],
        [0.0298, 0.0197, 0.0211],
        [0.0580, 0.0097, 0.0283],
        [0.0429, 0.0170, 0.0426],
        [0.0293, 0.0128, 0.0163],
        [0.0341, 0.0115, 0.0192],
        [0.0334, 0.0129, 0.0198],
        [0.0809, 0.0143, 0.0170],
        [0.0912, 0.0213, 0.0392],
        [0.1181, 0.0182, 0.0346],
        [0.0351, 0.0161, 0.0142],
        [0.0526, 0.0179, 0.0230]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0406],
        [0.0474],
        [0.0337],
        [0.0448],
        [0.0386],
        [0.0548],
        [0.0748],
        [0.0721],
        [0.0486],
        [0.0872],
        [0.0604],
        [0.0566],
        [0.0745],
        [0.0124],
        [0.0669],
        [0.0533]], device='cuda:0', dtype=torch.float16)/tensor([[0.0406, 0.0474, 0.0337, 0.0448, 0.0386, 0.0548, 0.0748, 0.0721, 0.0486,
         0.0872, 0.0604, 0.0566, 0.0745, 0.0124, 0.0669, 0.0533]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0189],
        [0.0281],
        [0.0100],
        [0.0132],
        [0.0141],
        [0.0203],
        [0.0178],
        [0.0160],
        [0.0126],
        [0.0212],
        [0.0201],
        [0.0184],
        [0.0161],
        [0.0057],
        [0.0153],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0189, 0.0281, 0.0100, 0.0132, 0.0141, 0.0203, 0.0178, 0.0160, 0.0126,
         0.0212, 0.0201, 0.0184, 0.0161, 0.0057, 0.0153, 0.0156]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0309],
        [0.0352],
        [0.0198],
        [0.0274],
        [0.0118],
        [0.0239],
        [0.0397],
        [0.0259],
        [0.0172],
        [0.0301],
        [0.0321],
        [0.0223],
        [0.0392],
        [0.0220],
        [0.0304],
        [0.0212]], device='cuda:0', dtype=torch.float16)/tensor([[0.0309, 0.0352, 0.0198, 0.0274, 0.0118, 0.0239, 0.0397, 0.0259, 0.0172,
         0.0301, 0.0321, 0.0223, 0.0392, 0.0220, 0.0304, 0.0212]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0406, 0.0189, 0.0309],
        [0.0474, 0.0281, 0.0352],
        [0.0337, 0.0100, 0.0198],
        [0.0448, 0.0132, 0.0274],
        [0.0386, 0.0141, 0.0118],
        [0.0548, 0.0203, 0.0239],
        [0.0748, 0.0178, 0.0397],
        [0.0721, 0.0160, 0.0259],
        [0.0486, 0.0126, 0.0172],
        [0.0872, 0.0212, 0.0301],
        [0.0604, 0.0201, 0.0321],
        [0.0566, 0.0184, 0.0223],
        [0.0745, 0.0161, 0.0392],
        [0.0124, 0.0057, 0.0220],
        [0.0669, 0.0153, 0.0304],
        [0.0533, 0.0156, 0.0212]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0316],
        [0.0337],
        [0.0728],
        [0.0792],
        [0.0108],
        [0.0496],
        [0.0616],
        [0.0633],
        [0.1085],
        [0.0480],
        [0.0957],
        [0.0405],
        [0.0850],
        [0.0477],
        [0.0687],
        [0.0827]], device='cuda:0', dtype=torch.float16)/tensor([[0.0316, 0.0337, 0.0728, 0.0792, 0.0108, 0.0496, 0.0616, 0.0633, 0.1085,
         0.0480, 0.0957, 0.0405, 0.0850, 0.0477, 0.0687, 0.0827]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0107],
        [0.0066],
        [0.0140],
        [0.0173],
        [0.0056],
        [0.0121],
        [0.0152],
        [0.0181],
        [0.0159],
        [0.0172],
        [0.0197],
        [0.0113],
        [0.0194],
        [0.0150],
        [0.0153],
        [0.0172]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0066, 0.0140, 0.0173, 0.0056, 0.0121, 0.0152, 0.0181, 0.0159,
         0.0172, 0.0197, 0.0113, 0.0194, 0.0150, 0.0153, 0.0172]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0092],
        [0.0190],
        [0.0233],
        [0.0231],
        [0.0101],
        [0.0392],
        [0.0165],
        [0.0157],
        [0.0246],
        [0.0160],
        [0.0209],
        [0.0159],
        [0.0352],
        [0.0155],
        [0.0140],
        [0.0230]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0190, 0.0233, 0.0231, 0.0101, 0.0392, 0.0165, 0.0157, 0.0246,
         0.0160, 0.0209, 0.0159, 0.0352, 0.0155, 0.0140, 0.0230]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0316, 0.0107, 0.0092],
        [0.0337, 0.0066, 0.0190],
        [0.0728, 0.0140, 0.0233],
        [0.0792, 0.0173, 0.0231],
        [0.0108, 0.0056, 0.0101],
        [0.0496, 0.0121, 0.0392],
        [0.0616, 0.0152, 0.0165],
        [0.0633, 0.0181, 0.0157],
        [0.1085, 0.0159, 0.0246],
        [0.0480, 0.0172, 0.0160],
        [0.0957, 0.0197, 0.0209],
        [0.0405, 0.0113, 0.0159],
        [0.0850, 0.0194, 0.0352],
        [0.0477, 0.0150, 0.0155],
        [0.0687, 0.0153, 0.0140],
        [0.0827, 0.0172, 0.0230]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0870],
        [0.0303],
        [0.0892],
        [0.0533],
        [0.0673],
        [0.0685],
        [0.0513],
        [0.0782],
        [0.0536],
        [0.0486],
        [0.0773],
        [0.0209],
        [0.0829],
        [0.0935],
        [0.0376],
        [0.0384]], device='cuda:0', dtype=torch.float16)/tensor([[0.0870, 0.0303, 0.0892, 0.0533, 0.0673, 0.0685, 0.0513, 0.0782, 0.0536,
         0.0486, 0.0773, 0.0209, 0.0829, 0.0935, 0.0376, 0.0384]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0180],
        [0.0147],
        [0.0160],
        [0.0143],
        [0.0114],
        [0.0166],
        [0.0099],
        [0.0152],
        [0.0177],
        [0.0216],
        [0.0220],
        [0.0180],
        [0.0322],
        [0.0283],
        [0.0172],
        [0.0057]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0147, 0.0160, 0.0143, 0.0114, 0.0166, 0.0099, 0.0152, 0.0177,
         0.0216, 0.0220, 0.0180, 0.0322, 0.0283, 0.0172, 0.0057]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0255],
        [0.0215],
        [0.0274],
        [0.0294],
        [0.0285],
        [0.0183],
        [0.0084],
        [0.0350],
        [0.0316],
        [0.0183],
        [0.0386],
        [0.0164],
        [0.0296],
        [0.0281],
        [0.0292],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0255, 0.0215, 0.0274, 0.0294, 0.0285, 0.0183, 0.0084, 0.0350, 0.0316,
         0.0183, 0.0386, 0.0164, 0.0296, 0.0281, 0.0292, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0870, 0.0180, 0.0255],
        [0.0303, 0.0147, 0.0215],
        [0.0892, 0.0160, 0.0274],
        [0.0533, 0.0143, 0.0294],
        [0.0673, 0.0114, 0.0285],
        [0.0685, 0.0166, 0.0183],
        [0.0513, 0.0099, 0.0084],
        [0.0782, 0.0152, 0.0350],
        [0.0536, 0.0177, 0.0316],
        [0.0486, 0.0216, 0.0183],
        [0.0773, 0.0220, 0.0386],
        [0.0209, 0.0180, 0.0164],
        [0.0829, 0.0322, 0.0296],
        [0.0935, 0.0283, 0.0281],
        [0.0376, 0.0172, 0.0292],
        [0.0384, 0.0057, 0.0177]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0916],
        [0.0617],
        [0.0575],
        [0.0458],
        [0.0820],
        [0.0487],
        [0.0581],
        [0.0549],
        [0.0669],
        [0.0174],
        [0.0365],
        [0.0549],
        [0.1254],
        [0.0230],
        [0.0459],
        [0.0728]], device='cuda:0', dtype=torch.float16)/tensor([[0.0916, 0.0617, 0.0575, 0.0458, 0.0820, 0.0487, 0.0581, 0.0549, 0.0669,
         0.0174, 0.0365, 0.0549, 0.1254, 0.0230, 0.0459, 0.0728]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0277],
        [0.0180],
        [0.0170],
        [0.0135],
        [0.0201],
        [0.0139],
        [0.0140],
        [0.0205],
        [0.0314],
        [0.0038],
        [0.0097],
        [0.0145],
        [0.0309],
        [0.0147],
        [0.0210],
        [0.0160]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0180, 0.0170, 0.0135, 0.0201, 0.0139, 0.0140, 0.0205, 0.0314,
         0.0038, 0.0097, 0.0145, 0.0309, 0.0147, 0.0210, 0.0160]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0340],
        [0.0207],
        [0.0276],
        [0.0158],
        [0.0156],
        [0.0348],
        [0.0179],
        [0.0185],
        [0.0226],
        [0.0109],
        [0.0174],
        [0.0252],
        [0.0348],
        [0.0298],
        [0.0194],
        [0.0224]], device='cuda:0', dtype=torch.float16)/tensor([[0.0340, 0.0207, 0.0276, 0.0158, 0.0156, 0.0348, 0.0179, 0.0185, 0.0226,
         0.0109, 0.0174, 0.0252, 0.0348, 0.0298, 0.0194, 0.0224]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0916, 0.0277, 0.0340],
        [0.0617, 0.0180, 0.0207],
        [0.0575, 0.0170, 0.0276],
        [0.0458, 0.0135, 0.0158],
        [0.0820, 0.0201, 0.0156],
        [0.0487, 0.0139, 0.0348],
        [0.0581, 0.0140, 0.0179],
        [0.0549, 0.0205, 0.0185],
        [0.0669, 0.0314, 0.0226],
        [0.0174, 0.0038, 0.0109],
        [0.0365, 0.0097, 0.0174],
        [0.0549, 0.0145, 0.0252],
        [0.1254, 0.0309, 0.0348],
        [0.0230, 0.0147, 0.0298],
        [0.0459, 0.0210, 0.0194],
        [0.0728, 0.0160, 0.0224]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0266],
        [0.0591],
        [0.0524],
        [0.0446],
        [0.0638],
        [0.0416],
        [0.0304],
        [0.0440],
        [0.0282],
        [0.0456],
        [0.0425],
        [0.0698],
        [0.0538],
        [0.0587],
        [0.0606],
        [0.0604]], device='cuda:0', dtype=torch.float16)/tensor([[0.0266, 0.0591, 0.0524, 0.0446, 0.0638, 0.0416, 0.0304, 0.0440, 0.0282,
         0.0456, 0.0425, 0.0698, 0.0538, 0.0587, 0.0606, 0.0604]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0091],
        [0.0209],
        [0.0161],
        [0.0192],
        [0.0126],
        [0.0088],
        [0.0108],
        [0.0153],
        [0.0111],
        [0.0176],
        [0.0106],
        [0.0142],
        [0.0104],
        [0.0107],
        [0.0125],
        [0.0191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0209, 0.0161, 0.0192, 0.0126, 0.0088, 0.0108, 0.0153, 0.0111,
         0.0176, 0.0106, 0.0142, 0.0104, 0.0107, 0.0125, 0.0191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0084],
        [0.0214],
        [0.0199],
        [0.0224],
        [0.0138],
        [0.0376],
        [0.0108],
        [0.0468],
        [0.0118],
        [0.0201],
        [0.0109],
        [0.0178],
        [0.0113],
        [0.0284],
        [0.0209],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0084, 0.0214, 0.0199, 0.0224, 0.0138, 0.0376, 0.0108, 0.0468, 0.0118,
         0.0201, 0.0109, 0.0178, 0.0113, 0.0284, 0.0209, 0.0153]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0266, 0.0091, 0.0084],
        [0.0591, 0.0209, 0.0214],
        [0.0524, 0.0161, 0.0199],
        [0.0446, 0.0192, 0.0224],
        [0.0638, 0.0126, 0.0138],
        [0.0416, 0.0088, 0.0376],
        [0.0304, 0.0108, 0.0108],
        [0.0440, 0.0153, 0.0468],
        [0.0282, 0.0111, 0.0118],
        [0.0456, 0.0176, 0.0201],
        [0.0425, 0.0106, 0.0109],
        [0.0698, 0.0142, 0.0178],
        [0.0538, 0.0104, 0.0113],
        [0.0587, 0.0107, 0.0284],
        [0.0606, 0.0125, 0.0209],
        [0.0604, 0.0191, 0.0153]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0983],
        [0.0253],
        [0.1144],
        [0.0718],
        [0.0509],
        [0.0743],
        [0.0182],
        [0.0404],
        [0.0161],
        [0.0492],
        [0.1087],
        [0.0459],
        [0.0550],
        [0.0721],
        [0.0745],
        [0.0489]], device='cuda:0', dtype=torch.float16)/tensor([[0.0983, 0.0253, 0.1144, 0.0718, 0.0509, 0.0743, 0.0182, 0.0404, 0.0161,
         0.0492, 0.1087, 0.0459, 0.0550, 0.0721, 0.0745, 0.0489]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0167],
        [0.0142],
        [0.0159],
        [0.0246],
        [0.0152],
        [0.0127],
        [0.0108],
        [0.0199],
        [0.0114],
        [0.0146],
        [0.0242],
        [0.0176],
        [0.0129],
        [0.0149],
        [0.0188],
        [0.0107]], device='cuda:0', dtype=torch.float16)/tensor([[0.0167, 0.0142, 0.0159, 0.0246, 0.0152, 0.0127, 0.0108, 0.0199, 0.0114,
         0.0146, 0.0242, 0.0176, 0.0129, 0.0149, 0.0188, 0.0107]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0450],
        [0.0119],
        [0.0349],
        [0.0237],
        [0.0271],
        [0.0160],
        [0.0085],
        [0.0128],
        [0.0175],
        [0.0240],
        [0.0286],
        [0.0155],
        [0.0164],
        [0.0291],
        [0.0220],
        [0.0328]], device='cuda:0', dtype=torch.float16)/tensor([[0.0450, 0.0119, 0.0349, 0.0237, 0.0271, 0.0160, 0.0085, 0.0128, 0.0175,
         0.0240, 0.0286, 0.0155, 0.0164, 0.0291, 0.0220, 0.0328]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0983, 0.0167, 0.0450],
        [0.0253, 0.0142, 0.0119],
        [0.1144, 0.0159, 0.0349],
        [0.0718, 0.0246, 0.0237],
        [0.0509, 0.0152, 0.0271],
        [0.0743, 0.0127, 0.0160],
        [0.0182, 0.0108, 0.0085],
        [0.0404, 0.0199, 0.0128],
        [0.0161, 0.0114, 0.0175],
        [0.0492, 0.0146, 0.0240],
        [0.1087, 0.0242, 0.0286],
        [0.0459, 0.0176, 0.0155],
        [0.0550, 0.0129, 0.0164],
        [0.0721, 0.0149, 0.0291],
        [0.0745, 0.0188, 0.0220],
        [0.0489, 0.0107, 0.0328]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0875],
        [0.0625],
        [0.0931],
        [0.0235],
        [0.0841],
        [0.0443]], device='cuda:0', dtype=torch.float16)/tensor([[0.0875, 0.0625, 0.0931, 0.0235, 0.0841, 0.0443]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0200],
        [0.0163],
        [0.0461],
        [0.0101],
        [0.0121],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0163, 0.0461, 0.0101, 0.0121, 0.0142]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0277],
        [0.0185],
        [0.0367],
        [0.0269],
        [0.0265],
        [0.0361]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0185, 0.0367, 0.0269, 0.0265, 0.0361]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0875, 0.0200, 0.0277],
        [0.0625, 0.0163, 0.0185],
        [0.0931, 0.0461, 0.0367],
        [0.0235, 0.0101, 0.0269],
        [0.0841, 0.0121, 0.0265],
        [0.0443, 0.0142, 0.0361]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type common, variation 1 and batchsize 16: 0:03:03.045719
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI common 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 321.73it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0380],
        [0.0507],
        [0.0529],
        [0.1057],
        [0.0668],
        [0.0524],
        [0.0813],
        [0.0245],
        [0.0470],
        [0.0633],
        [0.0481],
        [0.0688],
        [0.0768],
        [0.0914],
        [0.1295],
        [0.0818]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0507, 0.0529, 0.1057, 0.0668, 0.0524, 0.0813, 0.0245, 0.0470,
         0.0633, 0.0481, 0.0688, 0.0768, 0.0914, 0.1295, 0.0818]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0233],
        [0.0322],
        [0.0201],
        [0.0373],
        [0.0306],
        [0.0235],
        [0.0242],
        [0.0208],
        [0.0153],
        [0.0137],
        [0.0328],
        [0.0266],
        [0.0202],
        [0.0194],
        [0.0253],
        [0.0223]], device='cuda:0', dtype=torch.float16)/tensor([[0.0233, 0.0322, 0.0201, 0.0373, 0.0306, 0.0235, 0.0242, 0.0208, 0.0153,
         0.0137, 0.0328, 0.0266, 0.0202, 0.0194, 0.0253, 0.0223]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0148],
        [0.0311],
        [0.0121],
        [0.0303],
        [0.0194],
        [0.0082],
        [0.0269],
        [0.0155],
        [0.0209],
        [0.0148],
        [0.0322],
        [0.0473],
        [0.0178],
        [0.0254],
        [0.0341],
        [0.0316]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0311, 0.0121, 0.0303, 0.0194, 0.0082, 0.0269, 0.0155, 0.0209,
         0.0148, 0.0322, 0.0473, 0.0178, 0.0254, 0.0341, 0.0316]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0380, 0.0233, 0.0148],
        [0.0507, 0.0322, 0.0311],
        [0.0529, 0.0201, 0.0121],
        [0.1057, 0.0373, 0.0303],
        [0.0668, 0.0306, 0.0194],
        [0.0524, 0.0235, 0.0082],
        [0.0813, 0.0242, 0.0269],
        [0.0245, 0.0208, 0.0155],
        [0.0470, 0.0153, 0.0209],
        [0.0633, 0.0137, 0.0148],
        [0.0481, 0.0328, 0.0322],
        [0.0688, 0.0266, 0.0473],
        [0.0768, 0.0202, 0.0178],
        [0.0914, 0.0194, 0.0254],
        [0.1295, 0.0253, 0.0341],
        [0.0818, 0.0223, 0.0316]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0771],
        [0.0690],
        [0.0721],
        [0.0435],
        [0.0442],
        [0.0651],
        [0.0826],
        [0.0446],
        [0.0525],
        [0.1111],
        [0.0452],
        [0.0399],
        [0.1375],
        [0.1173],
        [0.0803],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0771, 0.0690, 0.0721, 0.0435, 0.0442, 0.0651, 0.0826, 0.0446, 0.0525,
         0.1111, 0.0452, 0.0399, 0.1375, 0.1173, 0.0803, 0.0369]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0222],
        [0.0222],
        [0.0312],
        [0.0278],
        [0.0188],
        [0.0190],
        [0.0131],
        [0.0345],
        [0.0304],
        [0.0264],
        [0.0201],
        [0.0317],
        [0.0332],
        [0.0227],
        [0.0272],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0222, 0.0222, 0.0312, 0.0278, 0.0188, 0.0190, 0.0131, 0.0345, 0.0304,
         0.0264, 0.0201, 0.0317, 0.0332, 0.0227, 0.0272, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0252],
        [0.0076],
        [0.0144],
        [0.0377],
        [0.0184],
        [0.0198],
        [0.0230],
        [0.0194],
        [0.0304],
        [0.0425],
        [0.0274],
        [0.0087],
        [0.0446],
        [0.0258],
        [0.0186],
        [0.0084]], device='cuda:0', dtype=torch.float16)/tensor([[0.0252, 0.0076, 0.0144, 0.0377, 0.0184, 0.0198, 0.0230, 0.0194, 0.0304,
         0.0425, 0.0274, 0.0087, 0.0446, 0.0258, 0.0186, 0.0084]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0771, 0.0222, 0.0252],
        [0.0690, 0.0222, 0.0076],
        [0.0721, 0.0312, 0.0144],
        [0.0435, 0.0278, 0.0377],
        [0.0442, 0.0188, 0.0184],
        [0.0651, 0.0190, 0.0198],
        [0.0826, 0.0131, 0.0230],
        [0.0446, 0.0345, 0.0194],
        [0.0525, 0.0304, 0.0304],
        [0.1111, 0.0264, 0.0425],
        [0.0452, 0.0201, 0.0274],
        [0.0399, 0.0317, 0.0087],
        [0.1375, 0.0332, 0.0446],
        [0.1173, 0.0227, 0.0258],
        [0.0803, 0.0272, 0.0186],
        [0.0369, 0.0074, 0.0084]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0994],
        [0.0704],
        [0.0518],
        [0.0468],
        [0.0762],
        [0.0430],
        [0.0605],
        [0.0396],
        [0.1192],
        [0.0372],
        [0.0538],
        [0.2128],
        [0.0985],
        [0.0480],
        [0.0428],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0994, 0.0704, 0.0518, 0.0468, 0.0762, 0.0430, 0.0605, 0.0396, 0.1192,
         0.0372, 0.0538, 0.2128, 0.0985, 0.0480, 0.0428, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0352],
        [0.0211],
        [0.0468],
        [0.0195],
        [0.0260],
        [0.0270],
        [0.0141],
        [0.0347],
        [0.0399],
        [0.0348],
        [0.0347],
        [0.0182],
        [0.0195],
        [0.0212],
        [0.0117],
        [0.0258]], device='cuda:0', dtype=torch.float16)/tensor([[0.0352, 0.0211, 0.0468, 0.0195, 0.0260, 0.0270, 0.0141, 0.0347, 0.0399,
         0.0348, 0.0347, 0.0182, 0.0195, 0.0212, 0.0117, 0.0258]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0338],
        [0.0119],
        [0.0303],
        [0.0255],
        [0.0094],
        [0.0313],
        [0.0392],
        [0.0300],
        [0.0381],
        [0.0114],
        [0.0460],
        [0.0729],
        [0.0225],
        [0.0158],
        [0.0099],
        [0.0102]], device='cuda:0', dtype=torch.float16)/tensor([[0.0338, 0.0119, 0.0303, 0.0255, 0.0094, 0.0313, 0.0392, 0.0300, 0.0381,
         0.0114, 0.0460, 0.0729, 0.0225, 0.0158, 0.0099, 0.0102]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0994, 0.0352, 0.0338],
        [0.0704, 0.0211, 0.0119],
        [0.0518, 0.0468, 0.0303],
        [0.0468, 0.0195, 0.0255],
        [0.0762, 0.0260, 0.0094],
        [0.0430, 0.0270, 0.0313],
        [0.0605, 0.0141, 0.0392],
        [0.0396, 0.0347, 0.0300],
        [0.1192, 0.0399, 0.0381],
        [0.0372, 0.0348, 0.0114],
        [0.0538, 0.0347, 0.0460],
        [0.2128, 0.0182, 0.0729],
        [0.0985, 0.0195, 0.0225],
        [0.0480, 0.0212, 0.0158],
        [0.0428, 0.0117, 0.0099],
        [0.0208, 0.0258, 0.0102]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0473],
        [0.0674],
        [0.0501],
        [0.0688],
        [0.0895],
        [0.0546],
        [0.0671],
        [0.0561],
        [0.1014],
        [0.0468],
        [0.1019],
        [0.0443],
        [0.0960],
        [0.0761],
        [0.1678],
        [0.0771]], device='cuda:0', dtype=torch.float16)/tensor([[0.0473, 0.0674, 0.0501, 0.0688, 0.0895, 0.0546, 0.0671, 0.0561, 0.1014,
         0.0468, 0.1019, 0.0443, 0.0960, 0.0761, 0.1678, 0.0771]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0295],
        [0.0330],
        [0.0189],
        [0.0213],
        [0.0296],
        [0.0119],
        [0.0142],
        [0.0210],
        [0.0247],
        [0.0220],
        [0.0147],
        [0.0297],
        [0.0185],
        [0.0123],
        [0.0253],
        [0.0264]], device='cuda:0', dtype=torch.float16)/tensor([[0.0295, 0.0330, 0.0189, 0.0213, 0.0296, 0.0119, 0.0142, 0.0210, 0.0247,
         0.0220, 0.0147, 0.0297, 0.0185, 0.0123, 0.0253, 0.0264]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0235],
        [0.0429],
        [0.0147],
        [0.0127],
        [0.0173],
        [0.0188],
        [0.0060],
        [0.0303],
        [0.0253],
        [0.0166],
        [0.0328],
        [0.0227],
        [0.0240],
        [0.0186],
        [0.0352],
        [0.0117]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0429, 0.0147, 0.0127, 0.0173, 0.0188, 0.0060, 0.0303, 0.0253,
         0.0166, 0.0328, 0.0227, 0.0240, 0.0186, 0.0352, 0.0117]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0473, 0.0295, 0.0235],
        [0.0674, 0.0330, 0.0429],
        [0.0501, 0.0189, 0.0147],
        [0.0688, 0.0213, 0.0127],
        [0.0895, 0.0296, 0.0173],
        [0.0546, 0.0119, 0.0188],
        [0.0671, 0.0142, 0.0060],
        [0.0561, 0.0210, 0.0303],
        [0.1014, 0.0247, 0.0253],
        [0.0468, 0.0220, 0.0166],
        [0.1019, 0.0147, 0.0328],
        [0.0443, 0.0297, 0.0227],
        [0.0960, 0.0185, 0.0240],
        [0.0761, 0.0123, 0.0186],
        [0.1678, 0.0253, 0.0352],
        [0.0771, 0.0264, 0.0117]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0491],
        [0.1029],
        [0.0816],
        [0.0914],
        [0.0739],
        [0.0523],
        [0.0519],
        [0.0520],
        [0.0748],
        [0.0541],
        [0.1240],
        [0.0442],
        [0.0627],
        [0.0763],
        [0.0332],
        [0.0934]], device='cuda:0', dtype=torch.float16)/tensor([[0.0491, 0.1029, 0.0816, 0.0914, 0.0739, 0.0523, 0.0519, 0.0520, 0.0748,
         0.0541, 0.1240, 0.0442, 0.0627, 0.0763, 0.0332, 0.0934]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0260],
        [0.0078],
        [0.0227],
        [0.0151],
        [0.0276],
        [0.0240],
        [0.0208],
        [0.0144],
        [0.0143],
        [0.0180],
        [0.0249],
        [0.0262],
        [0.0086],
        [0.0234],
        [0.0092],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0260, 0.0078, 0.0227, 0.0151, 0.0276, 0.0240, 0.0208, 0.0144, 0.0143,
         0.0180, 0.0249, 0.0262, 0.0086, 0.0234, 0.0092, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0069],
        [0.0175],
        [0.0118],
        [0.0114],
        [0.0106],
        [0.0240],
        [0.0110],
        [0.0095],
        [0.0118],
        [0.0229],
        [0.0385],
        [0.0206],
        [0.0101],
        [0.0109],
        [0.0181],
        [0.0182]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0175, 0.0118, 0.0114, 0.0106, 0.0240, 0.0110, 0.0095, 0.0118,
         0.0229, 0.0385, 0.0206, 0.0101, 0.0109, 0.0181, 0.0182]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0491, 0.0260, 0.0069],
        [0.1029, 0.0078, 0.0175],
        [0.0816, 0.0227, 0.0118],
        [0.0914, 0.0151, 0.0114],
        [0.0739, 0.0276, 0.0106],
        [0.0523, 0.0240, 0.0240],
        [0.0519, 0.0208, 0.0110],
        [0.0520, 0.0144, 0.0095],
        [0.0748, 0.0143, 0.0118],
        [0.0541, 0.0180, 0.0229],
        [0.1240, 0.0249, 0.0385],
        [0.0442, 0.0262, 0.0206],
        [0.0627, 0.0086, 0.0101],
        [0.0763, 0.0234, 0.0109],
        [0.0332, 0.0092, 0.0181],
        [0.0934, 0.0127, 0.0182]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0756],
        [0.0474],
        [0.0649],
        [0.0906],
        [0.0663],
        [0.0748],
        [0.1196],
        [0.0415],
        [0.0655],
        [0.0687],
        [0.0822],
        [0.0609],
        [0.1188],
        [0.0581],
        [0.0748],
        [0.0859]], device='cuda:0', dtype=torch.float16)/tensor([[0.0756, 0.0474, 0.0649, 0.0906, 0.0663, 0.0748, 0.1196, 0.0415, 0.0655,
         0.0687, 0.0822, 0.0609, 0.1188, 0.0581, 0.0748, 0.0859]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0177],
        [0.0232],
        [0.0150],
        [0.0155],
        [0.0235],
        [0.0166],
        [0.0353],
        [0.0176],
        [0.0182],
        [0.0260],
        [0.0318],
        [0.0184],
        [0.0095],
        [0.0261],
        [0.0182],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0177, 0.0232, 0.0150, 0.0155, 0.0235, 0.0166, 0.0353, 0.0176, 0.0182,
         0.0260, 0.0318, 0.0184, 0.0095, 0.0261, 0.0182, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0226],
        [0.0038],
        [0.0253],
        [0.0545],
        [0.0250],
        [0.0231],
        [0.0298],
        [0.0103],
        [0.0319],
        [0.0223],
        [0.0154],
        [0.0143],
        [0.0144],
        [0.0145],
        [0.0257],
        [0.0141]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0038, 0.0253, 0.0545, 0.0250, 0.0231, 0.0298, 0.0103, 0.0319,
         0.0223, 0.0154, 0.0143, 0.0144, 0.0145, 0.0257, 0.0141]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0756, 0.0177, 0.0226],
        [0.0474, 0.0232, 0.0038],
        [0.0649, 0.0150, 0.0253],
        [0.0906, 0.0155, 0.0545],
        [0.0663, 0.0235, 0.0250],
        [0.0748, 0.0166, 0.0231],
        [0.1196, 0.0353, 0.0298],
        [0.0415, 0.0176, 0.0103],
        [0.0655, 0.0182, 0.0319],
        [0.0687, 0.0260, 0.0223],
        [0.0822, 0.0318, 0.0154],
        [0.0609, 0.0184, 0.0143],
        [0.1188, 0.0095, 0.0144],
        [0.0581, 0.0261, 0.0145],
        [0.0748, 0.0182, 0.0257],
        [0.0859, 0.0351, 0.0141]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0504],
        [0.0305],
        [0.0418],
        [0.0392],
        [0.0533],
        [0.0538],
        [0.1061],
        [0.0831],
        [0.0306],
        [0.0892],
        [0.0483],
        [0.0771],
        [0.0431],
        [0.0604],
        [0.0365],
        [0.0518]], device='cuda:0', dtype=torch.float16)/tensor([[0.0504, 0.0305, 0.0418, 0.0392, 0.0533, 0.0538, 0.1061, 0.0831, 0.0306,
         0.0892, 0.0483, 0.0771, 0.0431, 0.0604, 0.0365, 0.0518]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0188],
        [0.0338],
        [0.0190],
        [0.0161],
        [0.0184],
        [0.0439],
        [0.0216],
        [0.0372],
        [0.0237],
        [0.0237],
        [0.0197],
        [0.0226],
        [0.0238],
        [0.0199],
        [0.0248],
        [0.0388]], device='cuda:0', dtype=torch.float16)/tensor([[0.0188, 0.0338, 0.0190, 0.0161, 0.0184, 0.0439, 0.0216, 0.0372, 0.0237,
         0.0237, 0.0197, 0.0226, 0.0238, 0.0199, 0.0248, 0.0388]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0191],
        [0.0511],
        [0.0233],
        [0.0178],
        [0.0206],
        [0.0163],
        [0.0169],
        [0.0657],
        [0.0115],
        [0.0320],
        [0.0073],
        [0.0156],
        [0.0182],
        [0.0088],
        [0.0299],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0191, 0.0511, 0.0233, 0.0178, 0.0206, 0.0163, 0.0169, 0.0657, 0.0115,
         0.0320, 0.0073, 0.0156, 0.0182, 0.0088, 0.0299, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0504, 0.0188, 0.0191],
        [0.0305, 0.0338, 0.0511],
        [0.0418, 0.0190, 0.0233],
        [0.0392, 0.0161, 0.0178],
        [0.0533, 0.0184, 0.0206],
        [0.0538, 0.0439, 0.0163],
        [0.1061, 0.0216, 0.0169],
        [0.0831, 0.0372, 0.0657],
        [0.0306, 0.0237, 0.0115],
        [0.0892, 0.0237, 0.0320],
        [0.0483, 0.0197, 0.0073],
        [0.0771, 0.0226, 0.0156],
        [0.0431, 0.0238, 0.0182],
        [0.0604, 0.0199, 0.0088],
        [0.0365, 0.0248, 0.0299],
        [0.0518, 0.0388, 0.0136]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0457],
        [0.0609],
        [0.1582],
        [0.0718],
        [0.1282],
        [0.0735],
        [0.0736],
        [0.1083],
        [0.0834],
        [0.0309],
        [0.0659],
        [0.0498],
        [0.1155],
        [0.0435],
        [0.0550],
        [0.0328]], device='cuda:0', dtype=torch.float16)/tensor([[0.0457, 0.0609, 0.1582, 0.0718, 0.1282, 0.0735, 0.0736, 0.1083, 0.0834,
         0.0309, 0.0659, 0.0498, 0.1155, 0.0435, 0.0550, 0.0328]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0381],
        [0.0206],
        [0.0241],
        [0.0103],
        [0.0510],
        [0.0213],
        [0.0379],
        [0.0371],
        [0.0139],
        [0.0148],
        [0.0160],
        [0.0224],
        [0.0305],
        [0.0261],
        [0.0235],
        [0.0284]], device='cuda:0', dtype=torch.float16)/tensor([[0.0381, 0.0206, 0.0241, 0.0103, 0.0510, 0.0213, 0.0379, 0.0371, 0.0139,
         0.0148, 0.0160, 0.0224, 0.0305, 0.0261, 0.0235, 0.0284]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0227],
        [0.0110],
        [0.0498],
        [0.0183],
        [0.0287],
        [0.0134],
        [0.0215],
        [0.0202],
        [0.0236],
        [0.0139],
        [0.0072],
        [0.0045],
        [0.0197],
        [0.0151],
        [0.0106],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0227, 0.0110, 0.0498, 0.0183, 0.0287, 0.0134, 0.0215, 0.0202, 0.0236,
         0.0139, 0.0072, 0.0045, 0.0197, 0.0151, 0.0106, 0.0152]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0457, 0.0381, 0.0227],
        [0.0609, 0.0206, 0.0110],
        [0.1582, 0.0241, 0.0498],
        [0.0718, 0.0103, 0.0183],
        [0.1282, 0.0510, 0.0287],
        [0.0735, 0.0213, 0.0134],
        [0.0736, 0.0379, 0.0215],
        [0.1083, 0.0371, 0.0202],
        [0.0834, 0.0139, 0.0236],
        [0.0309, 0.0148, 0.0139],
        [0.0659, 0.0160, 0.0072],
        [0.0498, 0.0224, 0.0045],
        [0.1155, 0.0305, 0.0197],
        [0.0435, 0.0261, 0.0151],
        [0.0550, 0.0235, 0.0106],
        [0.0328, 0.0284, 0.0152]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0790],
        [0.0682],
        [0.0634],
        [0.0880],
        [0.0384],
        [0.0804],
        [0.0124],
        [0.0888],
        [0.0186],
        [0.0558],
        [0.1086],
        [0.0337],
        [0.0953],
        [0.0635],
        [0.0426],
        [0.0803]], device='cuda:0', dtype=torch.float16)/tensor([[0.0790, 0.0682, 0.0634, 0.0880, 0.0384, 0.0804, 0.0124, 0.0888, 0.0186,
         0.0558, 0.1086, 0.0337, 0.0953, 0.0635, 0.0426, 0.0803]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0200],
        [0.0407],
        [0.0169],
        [0.0230],
        [0.0109],
        [0.0337],
        [0.0283],
        [0.0191],
        [0.0069],
        [0.0382],
        [0.0415],
        [0.0308],
        [0.0163],
        [0.0293],
        [0.0281],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0200, 0.0407, 0.0169, 0.0230, 0.0109, 0.0337, 0.0283, 0.0191, 0.0069,
         0.0382, 0.0415, 0.0308, 0.0163, 0.0293, 0.0281, 0.0149]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0222],
        [0.0215],
        [0.0099],
        [0.0158],
        [0.0111],
        [0.0170],
        [0.0051],
        [0.0220],
        [0.0032],
        [0.0393],
        [0.0185],
        [0.0228],
        [0.0314],
        [0.0334],
        [0.0665],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0222, 0.0215, 0.0099, 0.0158, 0.0111, 0.0170, 0.0051, 0.0220, 0.0032,
         0.0393, 0.0185, 0.0228, 0.0314, 0.0334, 0.0665, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0790, 0.0200, 0.0222],
        [0.0682, 0.0407, 0.0215],
        [0.0634, 0.0169, 0.0099],
        [0.0880, 0.0230, 0.0158],
        [0.0384, 0.0109, 0.0111],
        [0.0804, 0.0337, 0.0170],
        [0.0124, 0.0283, 0.0051],
        [0.0888, 0.0191, 0.0220],
        [0.0186, 0.0069, 0.0032],
        [0.0558, 0.0382, 0.0393],
        [0.1086, 0.0415, 0.0185],
        [0.0337, 0.0308, 0.0228],
        [0.0953, 0.0163, 0.0314],
        [0.0635, 0.0293, 0.0334],
        [0.0426, 0.0281, 0.0665],
        [0.0803, 0.0149, 0.0303]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0609],
        [0.0656],
        [0.0458],
        [0.1655],
        [0.0451],
        [0.0547],
        [0.0533],
        [0.1030],
        [0.0548],
        [0.1254],
        [0.0316],
        [0.0919],
        [0.0723],
        [0.0692],
        [0.0446],
        [0.0350]], device='cuda:0', dtype=torch.float16)/tensor([[0.0609, 0.0656, 0.0458, 0.1655, 0.0451, 0.0547, 0.0533, 0.1030, 0.0548,
         0.1254, 0.0316, 0.0919, 0.0723, 0.0692, 0.0446, 0.0350]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0195],
        [0.0287],
        [0.0278],
        [0.0347],
        [0.0469],
        [0.0348],
        [0.0388],
        [0.0392],
        [0.0291],
        [0.0172],
        [0.0183],
        [0.0209],
        [0.0239],
        [0.0363],
        [0.0490],
        [0.0242]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0287, 0.0278, 0.0347, 0.0469, 0.0348, 0.0388, 0.0392, 0.0291,
         0.0172, 0.0183, 0.0209, 0.0239, 0.0363, 0.0490, 0.0242]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0251],
        [0.0217],
        [0.0282],
        [0.0538],
        [0.0129],
        [0.0342],
        [0.0073],
        [0.0323],
        [0.0241],
        [0.0178],
        [0.0145],
        [0.0226],
        [0.0154],
        [0.0327],
        [0.0219],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0217, 0.0282, 0.0538, 0.0129, 0.0342, 0.0073, 0.0323, 0.0241,
         0.0178, 0.0145, 0.0226, 0.0154, 0.0327, 0.0219, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0609, 0.0195, 0.0251],
        [0.0656, 0.0287, 0.0217],
        [0.0458, 0.0278, 0.0282],
        [0.1655, 0.0347, 0.0538],
        [0.0451, 0.0469, 0.0129],
        [0.0547, 0.0348, 0.0342],
        [0.0533, 0.0388, 0.0073],
        [0.1030, 0.0392, 0.0323],
        [0.0548, 0.0291, 0.0241],
        [0.1254, 0.0172, 0.0178],
        [0.0316, 0.0183, 0.0145],
        [0.0919, 0.0209, 0.0226],
        [0.0723, 0.0239, 0.0154],
        [0.0692, 0.0363, 0.0327],
        [0.0446, 0.0490, 0.0219],
        [0.0350, 0.0242, 0.0267]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1299],
        [0.1187],
        [0.0230],
        [0.0535],
        [0.0546],
        [0.1190],
        [0.0712],
        [0.0417],
        [0.0752],
        [0.1176],
        [0.0862],
        [0.0570],
        [0.1161],
        [0.0756],
        [0.0410],
        [0.0558]], device='cuda:0', dtype=torch.float16)/tensor([[0.1299, 0.1187, 0.0230, 0.0535, 0.0546, 0.1190, 0.0712, 0.0417, 0.0752,
         0.1176, 0.0862, 0.0570, 0.1161, 0.0756, 0.0410, 0.0558]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0112],
        [0.0303],
        [0.0169],
        [0.0262],
        [0.0158],
        [0.0452],
        [0.0242],
        [0.0243],
        [0.0316],
        [0.0388],
        [0.0221],
        [0.0447],
        [0.0141],
        [0.0295],
        [0.0399],
        [0.0251]], device='cuda:0', dtype=torch.float16)/tensor([[0.0112, 0.0303, 0.0169, 0.0262, 0.0158, 0.0452, 0.0242, 0.0243, 0.0316,
         0.0388, 0.0221, 0.0447, 0.0141, 0.0295, 0.0399, 0.0251]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0453],
        [0.0253],
        [0.0100],
        [0.0412],
        [0.0146],
        [0.0492],
        [0.0210],
        [0.0297],
        [0.0430],
        [0.0175],
        [0.0341],
        [0.0275],
        [0.0279],
        [0.0112],
        [0.0382],
        [0.0125]], device='cuda:0', dtype=torch.float16)/tensor([[0.0453, 0.0253, 0.0100, 0.0412, 0.0146, 0.0492, 0.0210, 0.0297, 0.0430,
         0.0175, 0.0341, 0.0275, 0.0279, 0.0112, 0.0382, 0.0125]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1299, 0.0112, 0.0453],
        [0.1187, 0.0303, 0.0253],
        [0.0230, 0.0169, 0.0100],
        [0.0535, 0.0262, 0.0412],
        [0.0546, 0.0158, 0.0146],
        [0.1190, 0.0452, 0.0492],
        [0.0712, 0.0242, 0.0210],
        [0.0417, 0.0243, 0.0297],
        [0.0752, 0.0316, 0.0430],
        [0.1176, 0.0388, 0.0175],
        [0.0862, 0.0221, 0.0341],
        [0.0570, 0.0447, 0.0275],
        [0.1161, 0.0141, 0.0279],
        [0.0756, 0.0295, 0.0112],
        [0.0410, 0.0399, 0.0382],
        [0.0558, 0.0251, 0.0125]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0301],
        [0.0452],
        [0.1475],
        [0.0872],
        [0.0912],
        [0.0540],
        [0.0650],
        [0.0355],
        [0.0551],
        [0.0711],
        [0.0484],
        [0.0531],
        [0.1003],
        [0.0613],
        [0.0742],
        [0.0876]], device='cuda:0', dtype=torch.float16)/tensor([[0.0301, 0.0452, 0.1475, 0.0872, 0.0912, 0.0540, 0.0650, 0.0355, 0.0551,
         0.0711, 0.0484, 0.0531, 0.1003, 0.0613, 0.0742, 0.0876]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0128],
        [0.0420],
        [0.0071],
        [0.0142],
        [0.0247],
        [0.0184],
        [0.0170],
        [0.0268],
        [0.0344],
        [0.0292],
        [0.0272],
        [0.0136],
        [0.0260],
        [0.0375],
        [0.0159],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0128, 0.0420, 0.0071, 0.0142, 0.0247, 0.0184, 0.0170, 0.0268, 0.0344,
         0.0292, 0.0272, 0.0136, 0.0260, 0.0375, 0.0159, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0058],
        [0.0201],
        [0.0494],
        [0.0362],
        [0.0470],
        [0.0377],
        [0.0214],
        [0.0075],
        [0.0140],
        [0.0261],
        [0.0334],
        [0.0167],
        [0.0204],
        [0.0146],
        [0.0169],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0058, 0.0201, 0.0494, 0.0362, 0.0470, 0.0377, 0.0214, 0.0075, 0.0140,
         0.0261, 0.0334, 0.0167, 0.0204, 0.0146, 0.0169, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0301, 0.0128, 0.0058],
        [0.0452, 0.0420, 0.0201],
        [0.1475, 0.0071, 0.0494],
        [0.0872, 0.0142, 0.0362],
        [0.0912, 0.0247, 0.0470],
        [0.0540, 0.0184, 0.0377],
        [0.0650, 0.0170, 0.0214],
        [0.0355, 0.0268, 0.0075],
        [0.0551, 0.0344, 0.0140],
        [0.0711, 0.0292, 0.0261],
        [0.0484, 0.0272, 0.0334],
        [0.0531, 0.0136, 0.0167],
        [0.1003, 0.0260, 0.0204],
        [0.0613, 0.0375, 0.0146],
        [0.0742, 0.0159, 0.0169],
        [0.0876, 0.0150, 0.0193]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0548],
        [0.0804],
        [0.0355],
        [0.0609],
        [0.0465],
        [0.0742]], device='cuda:0', dtype=torch.float16)/tensor([[0.0548, 0.0804, 0.0355, 0.0609, 0.0465, 0.0742]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0360],
        [0.0732],
        [0.0156],
        [0.0318],
        [0.0307],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0360, 0.0732, 0.0156, 0.0318, 0.0307, 0.0168]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0370],
        [0.0265],
        [0.0126],
        [0.0222],
        [0.0135],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0370, 0.0265, 0.0126, 0.0222, 0.0135, 0.0143]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0548, 0.0360, 0.0370],
        [0.0804, 0.0732, 0.0265],
        [0.0355, 0.0156, 0.0126],
        [0.0609, 0.0318, 0.0222],
        [0.0465, 0.0307, 0.0135],
        [0.0742, 0.0168, 0.0143]], device='cuda:0')
acc:  0.35858585858585856
Time taken to execute the en NLI task with prompt type common, variation 2 and batchsize 16: 0:03:02.642615
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI common 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 321.70it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0569],
        [0.0433],
        [0.0516],
        [0.0687],
        [0.0594],
        [0.0615],
        [0.0660],
        [0.0153],
        [0.0147],
        [0.0343],
        [0.0495],
        [0.0532],
        [0.0567],
        [0.0720],
        [0.0325],
        [0.0497]], device='cuda:0', dtype=torch.float16)/tensor([[0.0569, 0.0433, 0.0516, 0.0687, 0.0594, 0.0615, 0.0660, 0.0153, 0.0147,
         0.0343, 0.0495, 0.0532, 0.0567, 0.0720, 0.0325, 0.0497]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0235],
        [0.0223],
        [0.0075],
        [0.0213],
        [0.0130],
        [0.0157],
        [0.0113],
        [0.0063],
        [0.0103],
        [0.0087],
        [0.0141],
        [0.0149],
        [0.0149],
        [0.0164],
        [0.0093],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0235, 0.0223, 0.0075, 0.0213, 0.0130, 0.0157, 0.0113, 0.0063, 0.0103,
         0.0087, 0.0141, 0.0149, 0.0149, 0.0164, 0.0093, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0400],
        [0.0401],
        [0.0147],
        [0.0547],
        [0.0225],
        [0.0291],
        [0.0197],
        [0.0055],
        [0.0144],
        [0.0111],
        [0.0251],
        [0.0286],
        [0.0341],
        [0.0451],
        [0.0162],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0400, 0.0401, 0.0147, 0.0547, 0.0225, 0.0291, 0.0197, 0.0055, 0.0144,
         0.0111, 0.0251, 0.0286, 0.0341, 0.0451, 0.0162, 0.0304]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0569, 0.0235, 0.0400],
        [0.0433, 0.0223, 0.0401],
        [0.0516, 0.0075, 0.0147],
        [0.0687, 0.0213, 0.0547],
        [0.0594, 0.0130, 0.0225],
        [0.0615, 0.0157, 0.0291],
        [0.0660, 0.0113, 0.0197],
        [0.0153, 0.0063, 0.0055],
        [0.0147, 0.0103, 0.0144],
        [0.0343, 0.0087, 0.0111],
        [0.0495, 0.0141, 0.0251],
        [0.0532, 0.0149, 0.0286],
        [0.0567, 0.0149, 0.0341],
        [0.0720, 0.0164, 0.0451],
        [0.0325, 0.0093, 0.0162],
        [0.0497, 0.0176, 0.0304]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0334],
        [0.0615],
        [0.0338],
        [0.0367],
        [0.0653],
        [0.0394],
        [0.0704],
        [0.0413],
        [0.0436],
        [0.0307],
        [0.0204],
        [0.0375],
        [0.0358],
        [0.0193],
        [0.0134],
        [0.0917]], device='cuda:0', dtype=torch.float16)/tensor([[0.0334, 0.0615, 0.0338, 0.0367, 0.0653, 0.0394, 0.0704, 0.0413, 0.0436,
         0.0307, 0.0204, 0.0375, 0.0358, 0.0193, 0.0134, 0.0917]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0145],
        [0.0388],
        [0.0061],
        [0.0110],
        [0.0129],
        [0.0051],
        [0.0124],
        [0.0136],
        [0.0111],
        [0.0135],
        [0.0120],
        [0.0190],
        [0.0171],
        [0.0040],
        [0.0061],
        [0.0228]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.0388, 0.0061, 0.0110, 0.0129, 0.0051, 0.0124, 0.0136, 0.0111,
         0.0135, 0.0120, 0.0190, 0.0171, 0.0040, 0.0061, 0.0228]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0140],
        [0.0305],
        [0.0138],
        [0.0173],
        [0.0215],
        [0.0093],
        [0.0182],
        [0.0226],
        [0.0289],
        [0.0235],
        [0.0081],
        [0.0235],
        [0.0144],
        [0.0064],
        [0.0057],
        [0.0293]], device='cuda:0', dtype=torch.float16)/tensor([[0.0140, 0.0305, 0.0138, 0.0173, 0.0215, 0.0093, 0.0182, 0.0226, 0.0289,
         0.0235, 0.0081, 0.0235, 0.0144, 0.0064, 0.0057, 0.0293]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0334, 0.0145, 0.0140],
        [0.0615, 0.0388, 0.0305],
        [0.0338, 0.0061, 0.0138],
        [0.0367, 0.0110, 0.0173],
        [0.0653, 0.0129, 0.0215],
        [0.0394, 0.0051, 0.0093],
        [0.0704, 0.0124, 0.0182],
        [0.0413, 0.0136, 0.0226],
        [0.0436, 0.0111, 0.0289],
        [0.0307, 0.0135, 0.0235],
        [0.0204, 0.0120, 0.0081],
        [0.0375, 0.0190, 0.0235],
        [0.0358, 0.0171, 0.0144],
        [0.0193, 0.0040, 0.0064],
        [0.0134, 0.0061, 0.0057],
        [0.0917, 0.0228, 0.0293]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0584],
        [0.0565],
        [0.0765],
        [0.0296],
        [0.0226],
        [0.0426],
        [0.0643],
        [0.0160],
        [0.0170],
        [0.0396],
        [0.0564],
        [0.0778],
        [0.0459],
        [0.0327],
        [0.0307],
        [0.0676]], device='cuda:0', dtype=torch.float16)/tensor([[0.0584, 0.0565, 0.0765, 0.0296, 0.0226, 0.0426, 0.0643, 0.0160, 0.0170,
         0.0396, 0.0564, 0.0778, 0.0459, 0.0327, 0.0307, 0.0676]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0152],
        [0.0139],
        [0.0192],
        [0.0112],
        [0.0155],
        [0.0195],
        [0.0133],
        [0.0079],
        [0.0089],
        [0.0214],
        [0.0151],
        [0.0101],
        [0.0093],
        [0.0091],
        [0.0168],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0152, 0.0139, 0.0192, 0.0112, 0.0155, 0.0195, 0.0133, 0.0079, 0.0089,
         0.0214, 0.0151, 0.0101, 0.0093, 0.0091, 0.0168, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0167],
        [0.0117],
        [0.0670],
        [0.0130],
        [0.0090],
        [0.0306],
        [0.0173],
        [0.0127],
        [0.0084],
        [0.0156],
        [0.0294],
        [0.0351],
        [0.0371],
        [0.0137],
        [0.0175],
        [0.0204]], device='cuda:0', dtype=torch.float16)/tensor([[0.0167, 0.0117, 0.0670, 0.0130, 0.0090, 0.0306, 0.0173, 0.0127, 0.0084,
         0.0156, 0.0294, 0.0351, 0.0371, 0.0137, 0.0175, 0.0204]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0584, 0.0152, 0.0167],
        [0.0565, 0.0139, 0.0117],
        [0.0765, 0.0192, 0.0670],
        [0.0296, 0.0112, 0.0130],
        [0.0226, 0.0155, 0.0090],
        [0.0426, 0.0195, 0.0306],
        [0.0643, 0.0133, 0.0173],
        [0.0160, 0.0079, 0.0127],
        [0.0170, 0.0089, 0.0084],
        [0.0396, 0.0214, 0.0156],
        [0.0564, 0.0151, 0.0294],
        [0.0778, 0.0101, 0.0351],
        [0.0459, 0.0093, 0.0371],
        [0.0327, 0.0091, 0.0137],
        [0.0307, 0.0168, 0.0175],
        [0.0676, 0.0195, 0.0204]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0866],
        [0.0706],
        [0.0677],
        [0.0573],
        [0.0501],
        [0.0568],
        [0.0562],
        [0.0706],
        [0.0723],
        [0.0389],
        [0.0316],
        [0.0411],
        [0.0656],
        [0.0462],
        [0.0253],
        [0.1168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0866, 0.0706, 0.0677, 0.0573, 0.0501, 0.0568, 0.0562, 0.0706, 0.0723,
         0.0389, 0.0316, 0.0411, 0.0656, 0.0462, 0.0253, 0.1168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0174],
        [0.0122],
        [0.0145],
        [0.0207],
        [0.0084],
        [0.0142],
        [0.0065],
        [0.0149],
        [0.0139],
        [0.0079],
        [0.0093],
        [0.0131],
        [0.0261],
        [0.0195],
        [0.0095],
        [0.0295]], device='cuda:0', dtype=torch.float16)/tensor([[0.0174, 0.0122, 0.0145, 0.0207, 0.0084, 0.0142, 0.0065, 0.0149, 0.0139,
         0.0079, 0.0093, 0.0131, 0.0261, 0.0195, 0.0095, 0.0295]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0268],
        [0.0331],
        [0.0247],
        [0.0309],
        [0.0232],
        [0.0054],
        [0.0151],
        [0.0285],
        [0.0221],
        [0.0238],
        [0.0180],
        [0.0277],
        [0.0247],
        [0.0343],
        [0.0169],
        [0.0163]], device='cuda:0', dtype=torch.float16)/tensor([[0.0268, 0.0331, 0.0247, 0.0309, 0.0232, 0.0054, 0.0151, 0.0285, 0.0221,
         0.0238, 0.0180, 0.0277, 0.0247, 0.0343, 0.0169, 0.0163]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0866, 0.0174, 0.0268],
        [0.0706, 0.0122, 0.0331],
        [0.0677, 0.0145, 0.0247],
        [0.0573, 0.0207, 0.0309],
        [0.0501, 0.0084, 0.0232],
        [0.0568, 0.0142, 0.0054],
        [0.0562, 0.0065, 0.0151],
        [0.0706, 0.0149, 0.0285],
        [0.0723, 0.0139, 0.0221],
        [0.0389, 0.0079, 0.0238],
        [0.0316, 0.0093, 0.0180],
        [0.0411, 0.0131, 0.0277],
        [0.0656, 0.0261, 0.0247],
        [0.0462, 0.0195, 0.0343],
        [0.0253, 0.0095, 0.0169],
        [0.1168, 0.0295, 0.0163]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0617],
        [0.0692],
        [0.0286],
        [0.0739],
        [0.0257],
        [0.0545],
        [0.0709],
        [0.0522],
        [0.0449],
        [0.0583],
        [0.0335],
        [0.0780],
        [0.0771],
        [0.0656],
        [0.0415],
        [0.0255]], device='cuda:0', dtype=torch.float16)/tensor([[0.0617, 0.0692, 0.0286, 0.0739, 0.0257, 0.0545, 0.0709, 0.0522, 0.0449,
         0.0583, 0.0335, 0.0780, 0.0771, 0.0656, 0.0415, 0.0255]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0169],
        [0.0340],
        [0.0054],
        [0.0210],
        [0.0103],
        [0.0127],
        [0.0081],
        [0.0157],
        [0.0090],
        [0.0186],
        [0.0086],
        [0.0145],
        [0.0268],
        [0.0121],
        [0.0107],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0169, 0.0340, 0.0054, 0.0210, 0.0103, 0.0127, 0.0081, 0.0157, 0.0090,
         0.0186, 0.0086, 0.0145, 0.0268, 0.0121, 0.0107, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0354],
        [0.0203],
        [0.0126],
        [0.0428],
        [0.0164],
        [0.0161],
        [0.0293],
        [0.0249],
        [0.0195],
        [0.0255],
        [0.0169],
        [0.0287],
        [0.0388],
        [0.0245],
        [0.0318],
        [0.0158]], device='cuda:0', dtype=torch.float16)/tensor([[0.0354, 0.0203, 0.0126, 0.0428, 0.0164, 0.0161, 0.0293, 0.0249, 0.0195,
         0.0255, 0.0169, 0.0287, 0.0388, 0.0245, 0.0318, 0.0158]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0617, 0.0169, 0.0354],
        [0.0692, 0.0340, 0.0203],
        [0.0286, 0.0054, 0.0126],
        [0.0739, 0.0210, 0.0428],
        [0.0257, 0.0103, 0.0164],
        [0.0545, 0.0127, 0.0161],
        [0.0709, 0.0081, 0.0293],
        [0.0522, 0.0157, 0.0249],
        [0.0449, 0.0090, 0.0195],
        [0.0583, 0.0186, 0.0255],
        [0.0335, 0.0086, 0.0169],
        [0.0780, 0.0145, 0.0287],
        [0.0771, 0.0268, 0.0388],
        [0.0656, 0.0121, 0.0245],
        [0.0415, 0.0107, 0.0318],
        [0.0255, 0.0139, 0.0158]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0818],
        [0.0224],
        [0.0222],
        [0.0347],
        [0.0325],
        [0.0704],
        [0.0512],
        [0.0343],
        [0.0710],
        [0.0532],
        [0.0541],
        [0.0546],
        [0.0573],
        [0.0581],
        [0.0202],
        [0.0356]], device='cuda:0', dtype=torch.float16)/tensor([[0.0818, 0.0224, 0.0222, 0.0347, 0.0325, 0.0704, 0.0512, 0.0343, 0.0710,
         0.0532, 0.0541, 0.0546, 0.0573, 0.0581, 0.0202, 0.0356]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0173],
        [0.0082],
        [0.0187],
        [0.0107],
        [0.0175],
        [0.0114],
        [0.0147],
        [0.0142],
        [0.0140],
        [0.0187],
        [0.0116],
        [0.0234],
        [0.0173],
        [0.0145],
        [0.0058],
        [0.0140]], device='cuda:0', dtype=torch.float16)/tensor([[0.0173, 0.0082, 0.0187, 0.0107, 0.0175, 0.0114, 0.0147, 0.0142, 0.0140,
         0.0187, 0.0116, 0.0234, 0.0173, 0.0145, 0.0058, 0.0140]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0227],
        [0.0058],
        [0.0183],
        [0.0155],
        [0.0149],
        [0.0280],
        [0.0154],
        [0.0227],
        [0.0218],
        [0.0251],
        [0.0289],
        [0.0187],
        [0.0367],
        [0.0193],
        [0.0127],
        [0.0266]], device='cuda:0', dtype=torch.float16)/tensor([[0.0227, 0.0058, 0.0183, 0.0155, 0.0149, 0.0280, 0.0154, 0.0227, 0.0218,
         0.0251, 0.0289, 0.0187, 0.0367, 0.0193, 0.0127, 0.0266]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0818, 0.0173, 0.0227],
        [0.0224, 0.0082, 0.0058],
        [0.0222, 0.0187, 0.0183],
        [0.0347, 0.0107, 0.0155],
        [0.0325, 0.0175, 0.0149],
        [0.0704, 0.0114, 0.0280],
        [0.0512, 0.0147, 0.0154],
        [0.0343, 0.0142, 0.0227],
        [0.0710, 0.0140, 0.0218],
        [0.0532, 0.0187, 0.0251],
        [0.0541, 0.0116, 0.0289],
        [0.0546, 0.0234, 0.0187],
        [0.0573, 0.0173, 0.0367],
        [0.0581, 0.0145, 0.0193],
        [0.0202, 0.0058, 0.0127],
        [0.0356, 0.0140, 0.0266]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0760],
        [0.0635],
        [0.0160],
        [0.0635],
        [0.0404],
        [0.0255],
        [0.0451],
        [0.0685],
        [0.0624],
        [0.0153],
        [0.0767],
        [0.0273],
        [0.0306],
        [0.0518],
        [0.0536],
        [0.0322]], device='cuda:0', dtype=torch.float16)/tensor([[0.0760, 0.0635, 0.0160, 0.0635, 0.0404, 0.0255, 0.0451, 0.0685, 0.0624,
         0.0153, 0.0767, 0.0273, 0.0306, 0.0518, 0.0536, 0.0322]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0114],
        [0.0209],
        [0.0080],
        [0.0172],
        [0.0072],
        [0.0195],
        [0.0095],
        [0.0185],
        [0.0110],
        [0.0202],
        [0.0167],
        [0.0175],
        [0.0204],
        [0.0129],
        [0.0140],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0114, 0.0209, 0.0080, 0.0172, 0.0072, 0.0195, 0.0095, 0.0185, 0.0110,
         0.0202, 0.0167, 0.0175, 0.0204, 0.0129, 0.0140, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0271],
        [0.0198],
        [0.0107],
        [0.0188],
        [0.0163],
        [0.0146],
        [0.0186],
        [0.0232],
        [0.0309],
        [0.0082],
        [0.0230],
        [0.0119],
        [0.0274],
        [0.0178],
        [0.0303],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0271, 0.0198, 0.0107, 0.0188, 0.0163, 0.0146, 0.0186, 0.0232, 0.0309,
         0.0082, 0.0230, 0.0119, 0.0274, 0.0178, 0.0303, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0760, 0.0114, 0.0271],
        [0.0635, 0.0209, 0.0198],
        [0.0160, 0.0080, 0.0107],
        [0.0635, 0.0172, 0.0188],
        [0.0404, 0.0072, 0.0163],
        [0.0255, 0.0195, 0.0146],
        [0.0451, 0.0095, 0.0186],
        [0.0685, 0.0185, 0.0232],
        [0.0624, 0.0110, 0.0309],
        [0.0153, 0.0202, 0.0082],
        [0.0767, 0.0167, 0.0230],
        [0.0273, 0.0175, 0.0119],
        [0.0306, 0.0204, 0.0274],
        [0.0518, 0.0129, 0.0178],
        [0.0536, 0.0140, 0.0303],
        [0.0322, 0.0094, 0.0211]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0497],
        [0.0508],
        [0.0710],
        [0.0289],
        [0.0261],
        [0.0622],
        [0.0572],
        [0.0336],
        [0.0235],
        [0.0676],
        [0.0435],
        [0.0393],
        [0.0616],
        [0.0455],
        [0.0626],
        [0.0654]], device='cuda:0', dtype=torch.float16)/tensor([[0.0497, 0.0508, 0.0710, 0.0289, 0.0261, 0.0622, 0.0572, 0.0336, 0.0235,
         0.0676, 0.0435, 0.0393, 0.0616, 0.0455, 0.0626, 0.0654]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0103],
        [0.0157],
        [0.0238],
        [0.0094],
        [0.0066],
        [0.0234],
        [0.0266],
        [0.0146],
        [0.0122],
        [0.0172],
        [0.0248],
        [0.0110],
        [0.0204],
        [0.0208],
        [0.0118],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0103, 0.0157, 0.0238, 0.0094, 0.0066, 0.0234, 0.0266, 0.0146, 0.0122,
         0.0172, 0.0248, 0.0110, 0.0204, 0.0208, 0.0118, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0274],
        [0.0177],
        [0.0296],
        [0.0193],
        [0.0149],
        [0.0380],
        [0.0260],
        [0.0106],
        [0.0184],
        [0.0388],
        [0.0153],
        [0.0316],
        [0.0297],
        [0.0259],
        [0.0280],
        [0.0234]], device='cuda:0', dtype=torch.float16)/tensor([[0.0274, 0.0177, 0.0296, 0.0193, 0.0149, 0.0380, 0.0260, 0.0106, 0.0184,
         0.0388, 0.0153, 0.0316, 0.0297, 0.0259, 0.0280, 0.0234]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0497, 0.0103, 0.0274],
        [0.0508, 0.0157, 0.0177],
        [0.0710, 0.0238, 0.0296],
        [0.0289, 0.0094, 0.0193],
        [0.0261, 0.0066, 0.0149],
        [0.0622, 0.0234, 0.0380],
        [0.0572, 0.0266, 0.0260],
        [0.0336, 0.0146, 0.0106],
        [0.0235, 0.0122, 0.0184],
        [0.0676, 0.0172, 0.0388],
        [0.0435, 0.0248, 0.0153],
        [0.0393, 0.0110, 0.0316],
        [0.0616, 0.0204, 0.0297],
        [0.0455, 0.0208, 0.0259],
        [0.0626, 0.0118, 0.0280],
        [0.0654, 0.0195, 0.0234]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0352],
        [0.0094],
        [0.0098],
        [0.0192],
        [0.0906],
        [0.0430],
        [0.1166],
        [0.0250],
        [0.0443],
        [0.0430],
        [0.0452],
        [0.0383],
        [0.0374],
        [0.0438],
        [0.0742],
        [0.0191]], device='cuda:0', dtype=torch.float16)/tensor([[0.0352, 0.0094, 0.0098, 0.0192, 0.0906, 0.0430, 0.1166, 0.0250, 0.0443,
         0.0430, 0.0452, 0.0383, 0.0374, 0.0438, 0.0742, 0.0191]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0126],
        [0.0067],
        [0.0058],
        [0.0059],
        [0.0166],
        [0.0115],
        [0.0260],
        [0.0172],
        [0.0136],
        [0.0059],
        [0.0119],
        [0.0063],
        [0.0234],
        [0.0233],
        [0.0248],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0126, 0.0067, 0.0058, 0.0059, 0.0166, 0.0115, 0.0260, 0.0172, 0.0136,
         0.0059, 0.0119, 0.0063, 0.0234, 0.0233, 0.0248, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0214],
        [0.0122],
        [0.0083],
        [0.0063],
        [0.0331],
        [0.0238],
        [0.0348],
        [0.0136],
        [0.0164],
        [0.0102],
        [0.0194],
        [0.0164],
        [0.0301],
        [0.0341],
        [0.0479],
        [0.0145]], device='cuda:0', dtype=torch.float16)/tensor([[0.0214, 0.0122, 0.0083, 0.0063, 0.0331, 0.0238, 0.0348, 0.0136, 0.0164,
         0.0102, 0.0194, 0.0164, 0.0301, 0.0341, 0.0479, 0.0145]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0352, 0.0126, 0.0214],
        [0.0094, 0.0067, 0.0122],
        [0.0098, 0.0058, 0.0083],
        [0.0192, 0.0059, 0.0063],
        [0.0906, 0.0166, 0.0331],
        [0.0430, 0.0115, 0.0238],
        [0.1166, 0.0260, 0.0348],
        [0.0250, 0.0172, 0.0136],
        [0.0443, 0.0136, 0.0164],
        [0.0430, 0.0059, 0.0102],
        [0.0452, 0.0119, 0.0194],
        [0.0383, 0.0063, 0.0164],
        [0.0374, 0.0234, 0.0301],
        [0.0438, 0.0233, 0.0341],
        [0.0742, 0.0248, 0.0479],
        [0.0191, 0.0131, 0.0145]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0777],
        [0.0731],
        [0.0634],
        [0.0391],
        [0.1018],
        [0.0508],
        [0.0537],
        [0.0304],
        [0.0436],
        [0.0561],
        [0.0406],
        [0.0965],
        [0.0559],
        [0.0536],
        [0.0483],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0777, 0.0731, 0.0634, 0.0391, 0.1018, 0.0508, 0.0537, 0.0304, 0.0436,
         0.0561, 0.0406, 0.0965, 0.0559, 0.0536, 0.0483, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0118],
        [0.0247],
        [0.0174],
        [0.0117],
        [0.0134],
        [0.0165],
        [0.0157],
        [0.0147],
        [0.0126],
        [0.0102],
        [0.0199],
        [0.0129],
        [0.0145],
        [0.0085],
        [0.0080],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0118, 0.0247, 0.0174, 0.0117, 0.0134, 0.0165, 0.0157, 0.0147, 0.0126,
         0.0102, 0.0199, 0.0129, 0.0145, 0.0085, 0.0080, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0356],
        [0.0307],
        [0.0233],
        [0.0152],
        [0.0349],
        [0.0333],
        [0.0258],
        [0.0202],
        [0.0192],
        [0.0199],
        [0.0316],
        [0.0313],
        [0.0104],
        [0.0294],
        [0.0335],
        [0.0244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0356, 0.0307, 0.0233, 0.0152, 0.0349, 0.0333, 0.0258, 0.0202, 0.0192,
         0.0199, 0.0316, 0.0313, 0.0104, 0.0294, 0.0335, 0.0244]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0777, 0.0118, 0.0356],
        [0.0731, 0.0247, 0.0307],
        [0.0634, 0.0174, 0.0233],
        [0.0391, 0.0117, 0.0152],
        [0.1018, 0.0134, 0.0349],
        [0.0508, 0.0165, 0.0333],
        [0.0537, 0.0157, 0.0258],
        [0.0304, 0.0147, 0.0202],
        [0.0436, 0.0126, 0.0192],
        [0.0561, 0.0102, 0.0199],
        [0.0406, 0.0199, 0.0316],
        [0.0965, 0.0129, 0.0313],
        [0.0559, 0.0145, 0.0104],
        [0.0536, 0.0085, 0.0294],
        [0.0483, 0.0080, 0.0335],
        [0.0381, 0.0209, 0.0244]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0269],
        [0.0646],
        [0.0152],
        [0.0315],
        [0.0239],
        [0.0342],
        [0.0250],
        [0.0295],
        [0.0734],
        [0.0622],
        [0.0326],
        [0.0659],
        [0.0305],
        [0.0418],
        [0.0341],
        [0.0387]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0646, 0.0152, 0.0315, 0.0239, 0.0342, 0.0250, 0.0295, 0.0734,
         0.0622, 0.0326, 0.0659, 0.0305, 0.0418, 0.0341, 0.0387]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0148],
        [0.0152],
        [0.0085],
        [0.0187],
        [0.0068],
        [0.0095],
        [0.0108],
        [0.0189],
        [0.0227],
        [0.0142],
        [0.0265],
        [0.0118],
        [0.0075],
        [0.0059],
        [0.0164],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0152, 0.0085, 0.0187, 0.0068, 0.0095, 0.0108, 0.0189, 0.0227,
         0.0142, 0.0265, 0.0118, 0.0075, 0.0059, 0.0164, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0277],
        [0.0227],
        [0.0076],
        [0.0225],
        [0.0165],
        [0.0179],
        [0.0092],
        [0.0244],
        [0.0287],
        [0.0159],
        [0.0210],
        [0.0460],
        [0.0058],
        [0.0079],
        [0.0131],
        [0.0409]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0227, 0.0076, 0.0225, 0.0165, 0.0179, 0.0092, 0.0244, 0.0287,
         0.0159, 0.0210, 0.0460, 0.0058, 0.0079, 0.0131, 0.0409]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0269, 0.0148, 0.0277],
        [0.0646, 0.0152, 0.0227],
        [0.0152, 0.0085, 0.0076],
        [0.0315, 0.0187, 0.0225],
        [0.0239, 0.0068, 0.0165],
        [0.0342, 0.0095, 0.0179],
        [0.0250, 0.0108, 0.0092],
        [0.0295, 0.0189, 0.0244],
        [0.0734, 0.0227, 0.0287],
        [0.0622, 0.0142, 0.0159],
        [0.0326, 0.0265, 0.0210],
        [0.0659, 0.0118, 0.0460],
        [0.0305, 0.0075, 0.0058],
        [0.0418, 0.0059, 0.0079],
        [0.0341, 0.0164, 0.0131],
        [0.0387, 0.0227, 0.0409]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0425],
        [0.0323],
        [0.0763],
        [0.0345],
        [0.0643],
        [0.0466],
        [0.0575],
        [0.0790],
        [0.0194],
        [0.0668],
        [0.0682],
        [0.0486],
        [0.0392],
        [0.0523],
        [0.0610],
        [0.0500]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0323, 0.0763, 0.0345, 0.0643, 0.0466, 0.0575, 0.0790, 0.0194,
         0.0668, 0.0682, 0.0486, 0.0392, 0.0523, 0.0610, 0.0500]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0206],
        [0.0140],
        [0.0172],
        [0.0167],
        [0.0163],
        [0.0167],
        [0.0076],
        [0.0267],
        [0.0100],
        [0.0172],
        [0.0236],
        [0.0337],
        [0.0125],
        [0.0194],
        [0.0250],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0206, 0.0140, 0.0172, 0.0167, 0.0163, 0.0167, 0.0076, 0.0267, 0.0100,
         0.0172, 0.0236, 0.0337, 0.0125, 0.0194, 0.0250, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0246],
        [0.0118],
        [0.0299],
        [0.0201],
        [0.0236],
        [0.0227],
        [0.0166],
        [0.0284],
        [0.0167],
        [0.0294],
        [0.0351],
        [0.0176],
        [0.0187],
        [0.0201],
        [0.0511],
        [0.0278]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0118, 0.0299, 0.0201, 0.0236, 0.0227, 0.0166, 0.0284, 0.0167,
         0.0294, 0.0351, 0.0176, 0.0187, 0.0201, 0.0511, 0.0278]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0425, 0.0206, 0.0246],
        [0.0323, 0.0140, 0.0118],
        [0.0763, 0.0172, 0.0299],
        [0.0345, 0.0167, 0.0201],
        [0.0643, 0.0163, 0.0236],
        [0.0466, 0.0167, 0.0227],
        [0.0575, 0.0076, 0.0166],
        [0.0790, 0.0267, 0.0284],
        [0.0194, 0.0100, 0.0167],
        [0.0668, 0.0172, 0.0294],
        [0.0682, 0.0236, 0.0351],
        [0.0486, 0.0337, 0.0176],
        [0.0392, 0.0125, 0.0187],
        [0.0523, 0.0194, 0.0201],
        [0.0610, 0.0250, 0.0511],
        [0.0500, 0.0139, 0.0278]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0436],
        [0.0436],
        [0.0431],
        [0.0534],
        [0.0297],
        [0.0443]], device='cuda:0', dtype=torch.float16)/tensor([[0.0436, 0.0436, 0.0431, 0.0534, 0.0297, 0.0443]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0102],
        [0.0134],
        [0.0151],
        [0.0129],
        [0.0122],
        [0.0197]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0134, 0.0151, 0.0129, 0.0122, 0.0197]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0192],
        [0.0180],
        [0.0220],
        [0.0266],
        [0.0105],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0180, 0.0220, 0.0266, 0.0105, 0.0150]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0436, 0.0102, 0.0192],
        [0.0436, 0.0134, 0.0180],
        [0.0431, 0.0151, 0.0220],
        [0.0534, 0.0129, 0.0266],
        [0.0297, 0.0122, 0.0105],
        [0.0443, 0.0197, 0.0150]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type common, variation 3 and batchsize 16: 0:03:02.823123
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI common 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 330.90it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0474],
        [0.0802],
        [0.0293],
        [0.0592],
        [0.0410],
        [0.0428],
        [0.0607],
        [0.0339],
        [0.0275],
        [0.0604],
        [0.0421],
        [0.0514],
        [0.0402],
        [0.0471],
        [0.0520],
        [0.0475]], device='cuda:0', dtype=torch.float16)/tensor([[0.0474, 0.0802, 0.0293, 0.0592, 0.0410, 0.0428, 0.0607, 0.0339, 0.0275,
         0.0604, 0.0421, 0.0514, 0.0402, 0.0471, 0.0520, 0.0475]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0190],
        [0.0231],
        [0.0081],
        [0.0178],
        [0.0142],
        [0.0236],
        [0.0205],
        [0.0145],
        [0.0274],
        [0.0242],
        [0.0109],
        [0.0139],
        [0.0181],
        [0.0231],
        [0.0134],
        [0.0081]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0231, 0.0081, 0.0178, 0.0142, 0.0236, 0.0205, 0.0145, 0.0274,
         0.0242, 0.0109, 0.0139, 0.0181, 0.0231, 0.0134, 0.0081]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0180],
        [0.0144],
        [0.0075],
        [0.0226],
        [0.0156],
        [0.0313],
        [0.0255],
        [0.0109],
        [0.0115],
        [0.0254],
        [0.0067],
        [0.0154],
        [0.0266],
        [0.0154],
        [0.0190],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0144, 0.0075, 0.0226, 0.0156, 0.0313, 0.0255, 0.0109, 0.0115,
         0.0254, 0.0067, 0.0154, 0.0266, 0.0154, 0.0190, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0474, 0.0190, 0.0180],
        [0.0802, 0.0231, 0.0144],
        [0.0293, 0.0081, 0.0075],
        [0.0592, 0.0178, 0.0226],
        [0.0410, 0.0142, 0.0156],
        [0.0428, 0.0236, 0.0313],
        [0.0607, 0.0205, 0.0255],
        [0.0339, 0.0145, 0.0109],
        [0.0275, 0.0274, 0.0115],
        [0.0604, 0.0242, 0.0254],
        [0.0421, 0.0109, 0.0067],
        [0.0514, 0.0139, 0.0154],
        [0.0402, 0.0181, 0.0266],
        [0.0471, 0.0231, 0.0154],
        [0.0520, 0.0134, 0.0190],
        [0.0475, 0.0081, 0.0184]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0741],
        [0.0421],
        [0.0362],
        [0.0967],
        [0.0458],
        [0.0358],
        [0.0720],
        [0.0579],
        [0.0535],
        [0.0604],
        [0.0505],
        [0.0563],
        [0.0542],
        [0.0182],
        [0.0406],
        [0.0485]], device='cuda:0', dtype=torch.float16)/tensor([[0.0741, 0.0421, 0.0362, 0.0967, 0.0458, 0.0358, 0.0720, 0.0579, 0.0535,
         0.0604, 0.0505, 0.0563, 0.0542, 0.0182, 0.0406, 0.0485]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0259],
        [0.0168],
        [0.0152],
        [0.0183],
        [0.0109],
        [0.0212],
        [0.0245],
        [0.0251],
        [0.0170],
        [0.0250],
        [0.0199],
        [0.0149],
        [0.0114],
        [0.0071],
        [0.0231],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0168, 0.0152, 0.0183, 0.0109, 0.0212, 0.0245, 0.0251, 0.0170,
         0.0250, 0.0199, 0.0149, 0.0114, 0.0071, 0.0231, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0245],
        [0.0061],
        [0.0210],
        [0.0450],
        [0.0243],
        [0.0136],
        [0.0210],
        [0.0182],
        [0.0239],
        [0.0347],
        [0.0274],
        [0.0174],
        [0.0252],
        [0.0098],
        [0.0393],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0245, 0.0061, 0.0210, 0.0450, 0.0243, 0.0136, 0.0210, 0.0182, 0.0239,
         0.0347, 0.0274, 0.0174, 0.0252, 0.0098, 0.0393, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0741, 0.0259, 0.0245],
        [0.0421, 0.0168, 0.0061],
        [0.0362, 0.0152, 0.0210],
        [0.0967, 0.0183, 0.0450],
        [0.0458, 0.0109, 0.0243],
        [0.0358, 0.0212, 0.0136],
        [0.0720, 0.0245, 0.0210],
        [0.0579, 0.0251, 0.0182],
        [0.0535, 0.0170, 0.0239],
        [0.0604, 0.0250, 0.0347],
        [0.0505, 0.0199, 0.0274],
        [0.0563, 0.0149, 0.0174],
        [0.0542, 0.0114, 0.0252],
        [0.0182, 0.0071, 0.0098],
        [0.0406, 0.0231, 0.0393],
        [0.0485, 0.0193, 0.0139]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0420],
        [0.1100],
        [0.0728],
        [0.0446],
        [0.0524],
        [0.0802],
        [0.0789],
        [0.0355],
        [0.0663],
        [0.0381],
        [0.0549],
        [0.0754],
        [0.1045],
        [0.0608],
        [0.0710],
        [0.0490]], device='cuda:0', dtype=torch.float16)/tensor([[0.0420, 0.1100, 0.0728, 0.0446, 0.0524, 0.0802, 0.0789, 0.0355, 0.0663,
         0.0381, 0.0549, 0.0754, 0.1045, 0.0608, 0.0710, 0.0490]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0194],
        [0.0165],
        [0.0194],
        [0.0171],
        [0.0146],
        [0.0310],
        [0.0252],
        [0.0109],
        [0.0235],
        [0.0177],
        [0.0240],
        [0.0262],
        [0.0228],
        [0.0233],
        [0.0175],
        [0.0175]], device='cuda:0', dtype=torch.float16)/tensor([[0.0194, 0.0165, 0.0194, 0.0171, 0.0146, 0.0310, 0.0252, 0.0109, 0.0235,
         0.0177, 0.0240, 0.0262, 0.0228, 0.0233, 0.0175, 0.0175]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0269],
        [0.0265],
        [0.0146],
        [0.0217],
        [0.0299],
        [0.0204],
        [0.0229],
        [0.0107],
        [0.0196],
        [0.0126],
        [0.0298],
        [0.0233],
        [0.0609],
        [0.0196],
        [0.0363],
        [0.0314]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0265, 0.0146, 0.0217, 0.0299, 0.0204, 0.0229, 0.0107, 0.0196,
         0.0126, 0.0298, 0.0233, 0.0609, 0.0196, 0.0363, 0.0314]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0420, 0.0194, 0.0269],
        [0.1100, 0.0165, 0.0265],
        [0.0728, 0.0194, 0.0146],
        [0.0446, 0.0171, 0.0217],
        [0.0524, 0.0146, 0.0299],
        [0.0802, 0.0310, 0.0204],
        [0.0789, 0.0252, 0.0229],
        [0.0355, 0.0109, 0.0107],
        [0.0663, 0.0235, 0.0196],
        [0.0381, 0.0177, 0.0126],
        [0.0549, 0.0240, 0.0298],
        [0.0754, 0.0262, 0.0233],
        [0.1045, 0.0228, 0.0609],
        [0.0608, 0.0233, 0.0196],
        [0.0710, 0.0175, 0.0363],
        [0.0490, 0.0175, 0.0314]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0500],
        [0.0497],
        [0.0246],
        [0.0369],
        [0.0453],
        [0.0317],
        [0.0756],
        [0.0310],
        [0.0283],
        [0.0310],
        [0.0736],
        [0.0238],
        [0.0235],
        [0.0586],
        [0.0787],
        [0.0421]], device='cuda:0', dtype=torch.float16)/tensor([[0.0500, 0.0497, 0.0246, 0.0369, 0.0453, 0.0317, 0.0756, 0.0310, 0.0283,
         0.0310, 0.0736, 0.0238, 0.0235, 0.0586, 0.0787, 0.0421]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0202],
        [0.0299],
        [0.0142],
        [0.0116],
        [0.0223],
        [0.0087],
        [0.0249],
        [0.0184],
        [0.0082],
        [0.0208],
        [0.0457],
        [0.0155],
        [0.0115],
        [0.0192],
        [0.0240],
        [0.0164]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0299, 0.0142, 0.0116, 0.0223, 0.0087, 0.0249, 0.0184, 0.0082,
         0.0208, 0.0457, 0.0155, 0.0115, 0.0192, 0.0240, 0.0164]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0146],
        [0.0216],
        [0.0190],
        [0.0126],
        [0.0246],
        [0.0221],
        [0.0227],
        [0.0289],
        [0.0112],
        [0.0123],
        [0.0208],
        [0.0097],
        [0.0192],
        [0.0209],
        [0.0341],
        [0.0131]], device='cuda:0', dtype=torch.float16)/tensor([[0.0146, 0.0216, 0.0190, 0.0126, 0.0246, 0.0221, 0.0227, 0.0289, 0.0112,
         0.0123, 0.0208, 0.0097, 0.0192, 0.0209, 0.0341, 0.0131]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0500, 0.0202, 0.0146],
        [0.0497, 0.0299, 0.0216],
        [0.0246, 0.0142, 0.0190],
        [0.0369, 0.0116, 0.0126],
        [0.0453, 0.0223, 0.0246],
        [0.0317, 0.0087, 0.0221],
        [0.0756, 0.0249, 0.0227],
        [0.0310, 0.0184, 0.0289],
        [0.0283, 0.0082, 0.0112],
        [0.0310, 0.0208, 0.0123],
        [0.0736, 0.0457, 0.0208],
        [0.0238, 0.0155, 0.0097],
        [0.0235, 0.0115, 0.0192],
        [0.0586, 0.0192, 0.0209],
        [0.0787, 0.0240, 0.0341],
        [0.0421, 0.0164, 0.0131]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0285],
        [0.0457],
        [0.0665],
        [0.0178],
        [0.0265],
        [0.0684],
        [0.0397],
        [0.0681],
        [0.0414],
        [0.0706],
        [0.1051],
        [0.0413],
        [0.0663],
        [0.0881],
        [0.0801],
        [0.0523]], device='cuda:0', dtype=torch.float16)/tensor([[0.0285, 0.0457, 0.0665, 0.0178, 0.0265, 0.0684, 0.0397, 0.0681, 0.0414,
         0.0706, 0.1051, 0.0413, 0.0663, 0.0881, 0.0801, 0.0523]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0137],
        [0.0170],
        [0.0193],
        [0.0111],
        [0.0105],
        [0.0201],
        [0.0106],
        [0.0150],
        [0.0298],
        [0.0248],
        [0.0202],
        [0.0216],
        [0.0287],
        [0.0201],
        [0.0228],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0137, 0.0170, 0.0193, 0.0111, 0.0105, 0.0201, 0.0106, 0.0150, 0.0298,
         0.0248, 0.0202, 0.0216, 0.0287, 0.0201, 0.0228, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0138],
        [0.0333],
        [0.0400],
        [0.0140],
        [0.0127],
        [0.0363],
        [0.0122],
        [0.0195],
        [0.0263],
        [0.0358],
        [0.0393],
        [0.0184],
        [0.0375],
        [0.0280],
        [0.0299],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0333, 0.0400, 0.0140, 0.0127, 0.0363, 0.0122, 0.0195, 0.0263,
         0.0358, 0.0393, 0.0184, 0.0375, 0.0280, 0.0299, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0285, 0.0137, 0.0138],
        [0.0457, 0.0170, 0.0333],
        [0.0665, 0.0193, 0.0400],
        [0.0178, 0.0111, 0.0140],
        [0.0265, 0.0105, 0.0127],
        [0.0684, 0.0201, 0.0363],
        [0.0397, 0.0106, 0.0122],
        [0.0681, 0.0150, 0.0195],
        [0.0414, 0.0298, 0.0263],
        [0.0706, 0.0248, 0.0358],
        [0.1051, 0.0202, 0.0393],
        [0.0413, 0.0216, 0.0184],
        [0.0663, 0.0287, 0.0375],
        [0.0881, 0.0201, 0.0280],
        [0.0801, 0.0228, 0.0299],
        [0.0523, 0.0124, 0.0208]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0325],
        [0.0534],
        [0.0319],
        [0.0382],
        [0.0650],
        [0.1083],
        [0.0424],
        [0.0723],
        [0.0550],
        [0.0950],
        [0.0348],
        [0.0865],
        [0.0814],
        [0.0890],
        [0.0606],
        [0.0428]], device='cuda:0', dtype=torch.float16)/tensor([[0.0325, 0.0534, 0.0319, 0.0382, 0.0650, 0.1083, 0.0424, 0.0723, 0.0550,
         0.0950, 0.0348, 0.0865, 0.0814, 0.0890, 0.0606, 0.0428]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0273],
        [0.0125],
        [0.0192],
        [0.0152],
        [0.0216],
        [0.0178],
        [0.0192],
        [0.0237],
        [0.0186],
        [0.0283],
        [0.0101],
        [0.0196],
        [0.0244],
        [0.0171],
        [0.0275],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0273, 0.0125, 0.0192, 0.0152, 0.0216, 0.0178, 0.0192, 0.0237, 0.0186,
         0.0283, 0.0101, 0.0196, 0.0244, 0.0171, 0.0275, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0123],
        [0.0230],
        [0.0267],
        [0.0152],
        [0.0239],
        [0.0257],
        [0.0155],
        [0.0344],
        [0.0452],
        [0.0299],
        [0.0159],
        [0.0409],
        [0.0217],
        [0.0487],
        [0.0300],
        [0.0113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0230, 0.0267, 0.0152, 0.0239, 0.0257, 0.0155, 0.0344, 0.0452,
         0.0299, 0.0159, 0.0409, 0.0217, 0.0487, 0.0300, 0.0113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0325, 0.0273, 0.0123],
        [0.0534, 0.0125, 0.0230],
        [0.0319, 0.0192, 0.0267],
        [0.0382, 0.0152, 0.0152],
        [0.0650, 0.0216, 0.0239],
        [0.1083, 0.0178, 0.0257],
        [0.0424, 0.0192, 0.0155],
        [0.0723, 0.0237, 0.0344],
        [0.0550, 0.0186, 0.0452],
        [0.0950, 0.0283, 0.0299],
        [0.0348, 0.0101, 0.0159],
        [0.0865, 0.0196, 0.0409],
        [0.0814, 0.0244, 0.0217],
        [0.0890, 0.0171, 0.0487],
        [0.0606, 0.0275, 0.0300],
        [0.0428, 0.0176, 0.0113]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0714],
        [0.0500],
        [0.0513],
        [0.0671],
        [0.0246],
        [0.0544],
        [0.0610],
        [0.0737],
        [0.0534],
        [0.0660],
        [0.0429],
        [0.0665],
        [0.0363],
        [0.0515],
        [0.0764],
        [0.0241]], device='cuda:0', dtype=torch.float16)/tensor([[0.0714, 0.0500, 0.0513, 0.0671, 0.0246, 0.0544, 0.0610, 0.0737, 0.0534,
         0.0660, 0.0429, 0.0665, 0.0363, 0.0515, 0.0764, 0.0241]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0213],
        [0.0128],
        [0.0174],
        [0.0332],
        [0.0088],
        [0.0166],
        [0.0230],
        [0.0241],
        [0.0166],
        [0.0211],
        [0.0110],
        [0.0223],
        [0.0146],
        [0.0174],
        [0.0219],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0213, 0.0128, 0.0174, 0.0332, 0.0088, 0.0166, 0.0230, 0.0241, 0.0166,
         0.0211, 0.0110, 0.0223, 0.0146, 0.0174, 0.0219, 0.0092]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0319],
        [0.0224],
        [0.0311],
        [0.0226],
        [0.0129],
        [0.0171],
        [0.0388],
        [0.0356],
        [0.0200],
        [0.0376],
        [0.0231],
        [0.0256],
        [0.0125],
        [0.0205],
        [0.0329],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0319, 0.0224, 0.0311, 0.0226, 0.0129, 0.0171, 0.0388, 0.0356, 0.0200,
         0.0376, 0.0231, 0.0256, 0.0125, 0.0205, 0.0329, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0714, 0.0213, 0.0319],
        [0.0500, 0.0128, 0.0224],
        [0.0513, 0.0174, 0.0311],
        [0.0671, 0.0332, 0.0226],
        [0.0246, 0.0088, 0.0129],
        [0.0544, 0.0166, 0.0171],
        [0.0610, 0.0230, 0.0388],
        [0.0737, 0.0241, 0.0356],
        [0.0534, 0.0166, 0.0200],
        [0.0660, 0.0211, 0.0376],
        [0.0429, 0.0110, 0.0231],
        [0.0665, 0.0223, 0.0256],
        [0.0363, 0.0146, 0.0125],
        [0.0515, 0.0174, 0.0205],
        [0.0764, 0.0219, 0.0329],
        [0.0241, 0.0092, 0.0066]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0199],
        [0.0488],
        [0.0566],
        [0.0417],
        [0.0514],
        [0.0435],
        [0.0400],
        [0.0558],
        [0.0508],
        [0.0406],
        [0.0570],
        [0.0446],
        [0.0508],
        [0.0640],
        [0.0639],
        [0.0807]], device='cuda:0', dtype=torch.float16)/tensor([[0.0199, 0.0488, 0.0566, 0.0417, 0.0514, 0.0435, 0.0400, 0.0558, 0.0508,
         0.0406, 0.0570, 0.0446, 0.0508, 0.0640, 0.0639, 0.0807]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0082],
        [0.0227],
        [0.0208],
        [0.0210],
        [0.0164],
        [0.0187],
        [0.0135],
        [0.0260],
        [0.0170],
        [0.0211],
        [0.0166],
        [0.0154],
        [0.0257],
        [0.0188],
        [0.0226],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0227, 0.0208, 0.0210, 0.0164, 0.0187, 0.0135, 0.0260, 0.0170,
         0.0211, 0.0166, 0.0154, 0.0257, 0.0188, 0.0226, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0159],
        [0.0161],
        [0.0341],
        [0.0315],
        [0.0241],
        [0.0127],
        [0.0286],
        [0.0262],
        [0.0199],
        [0.0248],
        [0.0122],
        [0.0210],
        [0.0161],
        [0.0168],
        [0.0246],
        [0.0460]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0161, 0.0341, 0.0315, 0.0241, 0.0127, 0.0286, 0.0262, 0.0199,
         0.0248, 0.0122, 0.0210, 0.0161, 0.0168, 0.0246, 0.0460]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0199, 0.0082, 0.0159],
        [0.0488, 0.0227, 0.0161],
        [0.0566, 0.0208, 0.0341],
        [0.0417, 0.0210, 0.0315],
        [0.0514, 0.0164, 0.0241],
        [0.0435, 0.0187, 0.0127],
        [0.0400, 0.0135, 0.0286],
        [0.0558, 0.0260, 0.0262],
        [0.0508, 0.0170, 0.0199],
        [0.0406, 0.0211, 0.0248],
        [0.0570, 0.0166, 0.0122],
        [0.0446, 0.0154, 0.0210],
        [0.0508, 0.0257, 0.0161],
        [0.0640, 0.0188, 0.0168],
        [0.0639, 0.0226, 0.0246],
        [0.0807, 0.0217, 0.0460]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0616],
        [0.0814],
        [0.0578],
        [0.1007],
        [0.0630],
        [0.0662],
        [0.0572],
        [0.0634],
        [0.0550],
        [0.0619],
        [0.0357],
        [0.0463],
        [0.0651],
        [0.0556],
        [0.0640]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0616, 0.0814, 0.0578, 0.1007, 0.0630, 0.0662, 0.0572, 0.0634,
         0.0550, 0.0619, 0.0357, 0.0463, 0.0651, 0.0556, 0.0640]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0296],
        [0.0143],
        [0.0250],
        [0.0173],
        [0.0327],
        [0.0202],
        [0.0193],
        [0.0170],
        [0.0131],
        [0.0177],
        [0.0200],
        [0.0178],
        [0.0231],
        [0.0197],
        [0.0319],
        [0.0291]], device='cuda:0', dtype=torch.float16)/tensor([[0.0296, 0.0143, 0.0250, 0.0173, 0.0327, 0.0202, 0.0193, 0.0170, 0.0131,
         0.0177, 0.0200, 0.0178, 0.0231, 0.0197, 0.0319, 0.0291]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0338],
        [0.0269],
        [0.0275],
        [0.0095],
        [0.0450],
        [0.0181],
        [0.0292],
        [0.0082],
        [0.0299],
        [0.0096],
        [0.0143],
        [0.0484],
        [0.0204],
        [0.0205],
        [0.0240],
        [0.0353]], device='cuda:0', dtype=torch.float16)/tensor([[0.0338, 0.0269, 0.0275, 0.0095, 0.0450, 0.0181, 0.0292, 0.0082, 0.0299,
         0.0096, 0.0143, 0.0484, 0.0204, 0.0205, 0.0240, 0.0353]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0575, 0.0296, 0.0338],
        [0.0616, 0.0143, 0.0269],
        [0.0814, 0.0250, 0.0275],
        [0.0578, 0.0173, 0.0095],
        [0.1007, 0.0327, 0.0450],
        [0.0630, 0.0202, 0.0181],
        [0.0662, 0.0193, 0.0292],
        [0.0572, 0.0170, 0.0082],
        [0.0634, 0.0131, 0.0299],
        [0.0550, 0.0177, 0.0096],
        [0.0619, 0.0200, 0.0143],
        [0.0357, 0.0178, 0.0484],
        [0.0463, 0.0231, 0.0204],
        [0.0651, 0.0197, 0.0205],
        [0.0556, 0.0319, 0.0240],
        [0.0640, 0.0291, 0.0353]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0523],
        [0.0498],
        [0.0392],
        [0.0406],
        [0.0573],
        [0.0394],
        [0.0876],
        [0.0766],
        [0.0750],
        [0.0606],
        [0.0510],
        [0.0447],
        [0.0464],
        [0.0571],
        [0.1010],
        [0.0401]], device='cuda:0', dtype=torch.float16)/tensor([[0.0523, 0.0498, 0.0392, 0.0406, 0.0573, 0.0394, 0.0876, 0.0766, 0.0750,
         0.0606, 0.0510, 0.0447, 0.0464, 0.0571, 0.1010, 0.0401]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0236],
        [0.0177],
        [0.0274],
        [0.0102],
        [0.0204],
        [0.0171],
        [0.0300],
        [0.0178],
        [0.0217],
        [0.0216],
        [0.0198],
        [0.0070],
        [0.0225],
        [0.0180],
        [0.0225],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0236, 0.0177, 0.0274, 0.0102, 0.0204, 0.0171, 0.0300, 0.0178, 0.0217,
         0.0216, 0.0198, 0.0070, 0.0225, 0.0180, 0.0225, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0240],
        [0.0120],
        [0.0227],
        [0.0150],
        [0.0135],
        [0.0155],
        [0.0280],
        [0.0502],
        [0.0200],
        [0.0288],
        [0.0170],
        [0.0134],
        [0.0131],
        [0.0210],
        [0.0344],
        [0.0333]], device='cuda:0', dtype=torch.float16)/tensor([[0.0240, 0.0120, 0.0227, 0.0150, 0.0135, 0.0155, 0.0280, 0.0502, 0.0200,
         0.0288, 0.0170, 0.0134, 0.0131, 0.0210, 0.0344, 0.0333]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0523, 0.0236, 0.0240],
        [0.0498, 0.0177, 0.0120],
        [0.0392, 0.0274, 0.0227],
        [0.0406, 0.0102, 0.0150],
        [0.0573, 0.0204, 0.0135],
        [0.0394, 0.0171, 0.0155],
        [0.0876, 0.0300, 0.0280],
        [0.0766, 0.0178, 0.0502],
        [0.0750, 0.0217, 0.0200],
        [0.0606, 0.0216, 0.0288],
        [0.0510, 0.0198, 0.0170],
        [0.0447, 0.0070, 0.0134],
        [0.0464, 0.0225, 0.0131],
        [0.0571, 0.0180, 0.0210],
        [0.1010, 0.0225, 0.0344],
        [0.0401, 0.0122, 0.0333]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0707],
        [0.0978],
        [0.0596],
        [0.0786],
        [0.0573],
        [0.0389],
        [0.0441],
        [0.0579],
        [0.0669],
        [0.0478],
        [0.0857],
        [0.0703],
        [0.0230],
        [0.0249],
        [0.0711],
        [0.0565]], device='cuda:0', dtype=torch.float16)/tensor([[0.0707, 0.0978, 0.0596, 0.0786, 0.0573, 0.0389, 0.0441, 0.0579, 0.0669,
         0.0478, 0.0857, 0.0703, 0.0230, 0.0249, 0.0711, 0.0565]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0158],
        [0.0255],
        [0.0203],
        [0.0156],
        [0.0306],
        [0.0172],
        [0.0191],
        [0.0200],
        [0.0306],
        [0.0173],
        [0.0263],
        [0.0153],
        [0.0078],
        [0.0174],
        [0.0242],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0158, 0.0255, 0.0203, 0.0156, 0.0306, 0.0172, 0.0191, 0.0200, 0.0306,
         0.0173, 0.0263, 0.0153, 0.0078, 0.0174, 0.0242, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0204],
        [0.0455],
        [0.0232],
        [0.0139],
        [0.0229],
        [0.0227],
        [0.0208],
        [0.0354],
        [0.0187],
        [0.0264],
        [0.0343],
        [0.0197],
        [0.0188],
        [0.0159],
        [0.0222],
        [0.0137]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0455, 0.0232, 0.0139, 0.0229, 0.0227, 0.0208, 0.0354, 0.0187,
         0.0264, 0.0343, 0.0197, 0.0188, 0.0159, 0.0222, 0.0137]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0707, 0.0158, 0.0204],
        [0.0978, 0.0255, 0.0455],
        [0.0596, 0.0203, 0.0232],
        [0.0786, 0.0156, 0.0139],
        [0.0573, 0.0306, 0.0229],
        [0.0389, 0.0172, 0.0227],
        [0.0441, 0.0191, 0.0208],
        [0.0579, 0.0200, 0.0354],
        [0.0669, 0.0306, 0.0187],
        [0.0478, 0.0173, 0.0264],
        [0.0857, 0.0263, 0.0343],
        [0.0703, 0.0153, 0.0197],
        [0.0230, 0.0078, 0.0188],
        [0.0249, 0.0174, 0.0159],
        [0.0711, 0.0242, 0.0222],
        [0.0565, 0.0120, 0.0137]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0709],
        [0.0411],
        [0.0491],
        [0.0341],
        [0.0588],
        [0.0702],
        [0.0486],
        [0.0402],
        [0.0479],
        [0.0787],
        [0.0352],
        [0.0660],
        [0.0591],
        [0.0478],
        [0.0378],
        [0.0467]], device='cuda:0', dtype=torch.float16)/tensor([[0.0709, 0.0411, 0.0491, 0.0341, 0.0588, 0.0702, 0.0486, 0.0402, 0.0479,
         0.0787, 0.0352, 0.0660, 0.0591, 0.0478, 0.0378, 0.0467]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0166],
        [0.0148],
        [0.0201],
        [0.0166],
        [0.0141],
        [0.0140],
        [0.0186],
        [0.0193],
        [0.0104],
        [0.0178],
        [0.0158],
        [0.0226],
        [0.0152],
        [0.0093],
        [0.0137],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0148, 0.0201, 0.0166, 0.0141, 0.0140, 0.0186, 0.0193, 0.0104,
         0.0178, 0.0158, 0.0226, 0.0152, 0.0093, 0.0137, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0221],
        [0.0265],
        [0.0305],
        [0.0296],
        [0.0310],
        [0.0248],
        [0.0122],
        [0.0155],
        [0.0126],
        [0.0268],
        [0.0104],
        [0.0172],
        [0.0186],
        [0.0091],
        [0.0246],
        [0.0097]], device='cuda:0', dtype=torch.float16)/tensor([[0.0221, 0.0265, 0.0305, 0.0296, 0.0310, 0.0248, 0.0122, 0.0155, 0.0126,
         0.0268, 0.0104, 0.0172, 0.0186, 0.0091, 0.0246, 0.0097]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0709, 0.0166, 0.0221],
        [0.0411, 0.0148, 0.0265],
        [0.0491, 0.0201, 0.0305],
        [0.0341, 0.0166, 0.0296],
        [0.0588, 0.0141, 0.0310],
        [0.0702, 0.0140, 0.0248],
        [0.0486, 0.0186, 0.0122],
        [0.0402, 0.0193, 0.0155],
        [0.0479, 0.0104, 0.0126],
        [0.0787, 0.0178, 0.0268],
        [0.0352, 0.0158, 0.0104],
        [0.0660, 0.0226, 0.0172],
        [0.0591, 0.0152, 0.0186],
        [0.0478, 0.0093, 0.0091],
        [0.0378, 0.0137, 0.0246],
        [0.0467, 0.0129, 0.0097]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0505],
        [0.0454],
        [0.1345],
        [0.0405],
        [0.0488],
        [0.0525]], device='cuda:0', dtype=torch.float16)/tensor([[0.0505, 0.0454, 0.1345, 0.0405, 0.0488, 0.0525]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0175],
        [0.0147],
        [0.0305],
        [0.0129],
        [0.0128],
        [0.0156]], device='cuda:0', dtype=torch.float16)/tensor([[0.0175, 0.0147, 0.0305, 0.0129, 0.0128, 0.0156]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0187],
        [0.0195],
        [0.0461],
        [0.0193],
        [0.0142],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0187, 0.0195, 0.0461, 0.0193, 0.0142, 0.0237]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0505, 0.0175, 0.0187],
        [0.0454, 0.0147, 0.0195],
        [0.1345, 0.0305, 0.0461],
        [0.0405, 0.0129, 0.0193],
        [0.0488, 0.0128, 0.0142],
        [0.0525, 0.0156, 0.0237]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type common, variation 4 and batchsize 16: 0:03:03.247780
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI common 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 324.44it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0425],
        [0.0336],
        [0.0435],
        [0.0099],
        [0.0453],
        [0.0367],
        [0.0696],
        [0.0199],
        [0.0738],
        [0.0431],
        [0.0289],
        [0.0987],
        [0.0931],
        [0.0420],
        [0.0614],
        [0.1015]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0336, 0.0435, 0.0099, 0.0453, 0.0367, 0.0696, 0.0199, 0.0738,
         0.0431, 0.0289, 0.0987, 0.0931, 0.0420, 0.0614, 0.1015]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0154],
        [0.0079],
        [0.0131],
        [0.0054],
        [0.0103],
        [0.0209],
        [0.0183],
        [0.0066],
        [0.0185],
        [0.0096],
        [0.0156],
        [0.0188],
        [0.0195],
        [0.0163],
        [0.0124],
        [0.0241]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0079, 0.0131, 0.0054, 0.0103, 0.0209, 0.0183, 0.0066, 0.0185,
         0.0096, 0.0156, 0.0188, 0.0195, 0.0163, 0.0124, 0.0241]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0215],
        [0.0138],
        [0.0254],
        [0.0119],
        [0.0121],
        [0.0237],
        [0.0337],
        [0.0085],
        [0.0368],
        [0.0365],
        [0.0192],
        [0.0492],
        [0.0665],
        [0.0190],
        [0.0214],
        [0.0365]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0138, 0.0254, 0.0119, 0.0121, 0.0237, 0.0337, 0.0085, 0.0368,
         0.0365, 0.0192, 0.0492, 0.0665, 0.0190, 0.0214, 0.0365]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0425, 0.0154, 0.0215],
        [0.0336, 0.0079, 0.0138],
        [0.0435, 0.0131, 0.0254],
        [0.0099, 0.0054, 0.0119],
        [0.0453, 0.0103, 0.0121],
        [0.0367, 0.0209, 0.0237],
        [0.0696, 0.0183, 0.0337],
        [0.0199, 0.0066, 0.0085],
        [0.0738, 0.0185, 0.0368],
        [0.0431, 0.0096, 0.0365],
        [0.0289, 0.0156, 0.0192],
        [0.0987, 0.0188, 0.0492],
        [0.0931, 0.0195, 0.0665],
        [0.0420, 0.0163, 0.0190],
        [0.0614, 0.0124, 0.0214],
        [0.1015, 0.0241, 0.0365]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1184],
        [0.0365],
        [0.1015],
        [0.0392],
        [0.0403],
        [0.0343],
        [0.0850],
        [0.0571],
        [0.0751],
        [0.1110],
        [0.0351],
        [0.0569],
        [0.0442],
        [0.0447],
        [0.0806],
        [0.0885]], device='cuda:0', dtype=torch.float16)/tensor([[0.1184, 0.0365, 0.1015, 0.0392, 0.0403, 0.0343, 0.0850, 0.0571, 0.0751,
         0.1110, 0.0351, 0.0569, 0.0442, 0.0447, 0.0806, 0.0885]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0212],
        [0.0100],
        [0.0280],
        [0.0127],
        [0.0256],
        [0.0120],
        [0.0129],
        [0.0209],
        [0.0226],
        [0.0287],
        [0.0137],
        [0.0201],
        [0.0073],
        [0.0104],
        [0.0193],
        [0.0222]], device='cuda:0', dtype=torch.float16)/tensor([[0.0212, 0.0100, 0.0280, 0.0127, 0.0256, 0.0120, 0.0129, 0.0209, 0.0226,
         0.0287, 0.0137, 0.0201, 0.0073, 0.0104, 0.0193, 0.0222]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0471],
        [0.0176],
        [0.0440],
        [0.0131],
        [0.0277],
        [0.0174],
        [0.0268],
        [0.0418],
        [0.0274],
        [0.0402],
        [0.0163],
        [0.0172],
        [0.0181],
        [0.0267],
        [0.0554],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0471, 0.0176, 0.0440, 0.0131, 0.0277, 0.0174, 0.0268, 0.0418, 0.0274,
         0.0402, 0.0163, 0.0172, 0.0181, 0.0267, 0.0554, 0.0369]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1184, 0.0212, 0.0471],
        [0.0365, 0.0100, 0.0176],
        [0.1015, 0.0280, 0.0440],
        [0.0392, 0.0127, 0.0131],
        [0.0403, 0.0256, 0.0277],
        [0.0343, 0.0120, 0.0174],
        [0.0850, 0.0129, 0.0268],
        [0.0571, 0.0209, 0.0418],
        [0.0751, 0.0226, 0.0274],
        [0.1110, 0.0287, 0.0402],
        [0.0351, 0.0137, 0.0163],
        [0.0569, 0.0201, 0.0172],
        [0.0442, 0.0073, 0.0181],
        [0.0447, 0.0104, 0.0267],
        [0.0806, 0.0193, 0.0554],
        [0.0885, 0.0222, 0.0369]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0892],
        [0.1149],
        [0.0302],
        [0.0746],
        [0.0690],
        [0.0946],
        [0.0602],
        [0.0247],
        [0.0385],
        [0.0759],
        [0.0471],
        [0.1138],
        [0.0148],
        [0.1117],
        [0.0721],
        [0.1113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0892, 0.1149, 0.0302, 0.0746, 0.0690, 0.0946, 0.0602, 0.0247, 0.0385,
         0.0759, 0.0471, 0.1138, 0.0148, 0.1117, 0.0721, 0.1113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0181],
        [0.0327],
        [0.0098],
        [0.0229],
        [0.0292],
        [0.0253],
        [0.0131],
        [0.0117],
        [0.0095],
        [0.0200],
        [0.0266],
        [0.0215],
        [0.0064],
        [0.0231],
        [0.0213],
        [0.0147]], device='cuda:0', dtype=torch.float16)/tensor([[0.0181, 0.0327, 0.0098, 0.0229, 0.0292, 0.0253, 0.0131, 0.0117, 0.0095,
         0.0200, 0.0266, 0.0215, 0.0064, 0.0231, 0.0213, 0.0147]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0393],
        [0.0640],
        [0.0083],
        [0.0244],
        [0.0283],
        [0.0310],
        [0.0147],
        [0.0155],
        [0.0182],
        [0.0265],
        [0.0290],
        [0.0302],
        [0.0179],
        [0.0383],
        [0.0515],
        [0.0475]], device='cuda:0', dtype=torch.float16)/tensor([[0.0393, 0.0640, 0.0083, 0.0244, 0.0283, 0.0310, 0.0147, 0.0155, 0.0182,
         0.0265, 0.0290, 0.0302, 0.0179, 0.0383, 0.0515, 0.0475]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0892, 0.0181, 0.0393],
        [0.1149, 0.0327, 0.0640],
        [0.0302, 0.0098, 0.0083],
        [0.0746, 0.0229, 0.0244],
        [0.0690, 0.0292, 0.0283],
        [0.0946, 0.0253, 0.0310],
        [0.0602, 0.0131, 0.0147],
        [0.0247, 0.0117, 0.0155],
        [0.0385, 0.0095, 0.0182],
        [0.0759, 0.0200, 0.0265],
        [0.0471, 0.0266, 0.0290],
        [0.1138, 0.0215, 0.0302],
        [0.0148, 0.0064, 0.0179],
        [0.1117, 0.0231, 0.0383],
        [0.0721, 0.0213, 0.0515],
        [0.1113, 0.0147, 0.0475]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0215],
        [0.0665],
        [0.0893],
        [0.0596],
        [0.0568],
        [0.0555],
        [0.0326],
        [0.0176],
        [0.0627],
        [0.0182],
        [0.0629],
        [0.0590],
        [0.0256],
        [0.0319],
        [0.0319],
        [0.0612]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0665, 0.0893, 0.0596, 0.0568, 0.0555, 0.0326, 0.0176, 0.0627,
         0.0182, 0.0629, 0.0590, 0.0256, 0.0319, 0.0319, 0.0612]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0097],
        [0.0189],
        [0.0219],
        [0.0084],
        [0.0206],
        [0.0157],
        [0.0095],
        [0.0120],
        [0.0133],
        [0.0074],
        [0.0137],
        [0.0088],
        [0.0084],
        [0.0079],
        [0.0100],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0189, 0.0219, 0.0084, 0.0206, 0.0157, 0.0095, 0.0120, 0.0133,
         0.0074, 0.0137, 0.0088, 0.0084, 0.0079, 0.0100, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0163],
        [0.0388],
        [0.0283],
        [0.0188],
        [0.0199],
        [0.0231],
        [0.0224],
        [0.0232],
        [0.0157],
        [0.0071],
        [0.0279],
        [0.0177],
        [0.0112],
        [0.0113],
        [0.0193],
        [0.0190]], device='cuda:0', dtype=torch.float16)/tensor([[0.0163, 0.0388, 0.0283, 0.0188, 0.0199, 0.0231, 0.0224, 0.0232, 0.0157,
         0.0071, 0.0279, 0.0177, 0.0112, 0.0113, 0.0193, 0.0190]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0215, 0.0097, 0.0163],
        [0.0665, 0.0189, 0.0388],
        [0.0893, 0.0219, 0.0283],
        [0.0596, 0.0084, 0.0188],
        [0.0568, 0.0206, 0.0199],
        [0.0555, 0.0157, 0.0231],
        [0.0326, 0.0095, 0.0224],
        [0.0176, 0.0120, 0.0232],
        [0.0627, 0.0133, 0.0157],
        [0.0182, 0.0074, 0.0071],
        [0.0629, 0.0137, 0.0279],
        [0.0590, 0.0088, 0.0177],
        [0.0256, 0.0084, 0.0112],
        [0.0319, 0.0079, 0.0113],
        [0.0319, 0.0100, 0.0193],
        [0.0612, 0.0121, 0.0190]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1191],
        [0.0657],
        [0.0632],
        [0.0614],
        [0.0550],
        [0.0532],
        [0.0487],
        [0.0386],
        [0.1041],
        [0.0526],
        [0.0577],
        [0.0825],
        [0.0276],
        [0.0680],
        [0.0378],
        [0.0555]], device='cuda:0', dtype=torch.float16)/tensor([[0.1191, 0.0657, 0.0632, 0.0614, 0.0550, 0.0532, 0.0487, 0.0386, 0.1041,
         0.0526, 0.0577, 0.0825, 0.0276, 0.0680, 0.0378, 0.0555]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0294],
        [0.0105],
        [0.0195],
        [0.0170],
        [0.0154],
        [0.0127],
        [0.0141],
        [0.0130],
        [0.0226],
        [0.0222],
        [0.0143],
        [0.0213],
        [0.0072],
        [0.0164],
        [0.0128],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0294, 0.0105, 0.0195, 0.0170, 0.0154, 0.0127, 0.0141, 0.0130, 0.0226,
         0.0222, 0.0143, 0.0213, 0.0072, 0.0164, 0.0128, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0210],
        [0.0369],
        [0.0265],
        [0.0384],
        [0.0209],
        [0.0170],
        [0.0186],
        [0.0188],
        [0.0357],
        [0.0163],
        [0.0238],
        [0.0372],
        [0.0123],
        [0.0222],
        [0.0140],
        [0.0304]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0369, 0.0265, 0.0384, 0.0209, 0.0170, 0.0186, 0.0188, 0.0357,
         0.0163, 0.0238, 0.0372, 0.0123, 0.0222, 0.0140, 0.0304]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1191, 0.0294, 0.0210],
        [0.0657, 0.0105, 0.0369],
        [0.0632, 0.0195, 0.0265],
        [0.0614, 0.0170, 0.0384],
        [0.0550, 0.0154, 0.0209],
        [0.0532, 0.0127, 0.0170],
        [0.0487, 0.0141, 0.0186],
        [0.0386, 0.0130, 0.0188],
        [0.1041, 0.0226, 0.0357],
        [0.0526, 0.0222, 0.0163],
        [0.0577, 0.0143, 0.0238],
        [0.0825, 0.0213, 0.0372],
        [0.0276, 0.0072, 0.0123],
        [0.0680, 0.0164, 0.0222],
        [0.0378, 0.0128, 0.0140],
        [0.0555, 0.0256, 0.0304]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0754],
        [0.0630],
        [0.0922],
        [0.0915],
        [0.0782],
        [0.1057],
        [0.0602],
        [0.0610],
        [0.0158],
        [0.0157],
        [0.0661],
        [0.0246],
        [0.1006],
        [0.0396],
        [0.0865],
        [0.0475]], device='cuda:0', dtype=torch.float16)/tensor([[0.0754, 0.0630, 0.0922, 0.0915, 0.0782, 0.1057, 0.0602, 0.0610, 0.0158,
         0.0157, 0.0661, 0.0246, 0.1006, 0.0396, 0.0865, 0.0475]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0120],
        [0.0150],
        [0.0158],
        [0.0221],
        [0.0221],
        [0.0257],
        [0.0144],
        [0.0130],
        [0.0076],
        [0.0108],
        [0.0145],
        [0.0107],
        [0.0273],
        [0.0174],
        [0.0148],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0150, 0.0158, 0.0221, 0.0221, 0.0257, 0.0144, 0.0130, 0.0076,
         0.0108, 0.0145, 0.0107, 0.0273, 0.0174, 0.0148, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0410],
        [0.0330],
        [0.0396],
        [0.0432],
        [0.0450],
        [0.0435],
        [0.0206],
        [0.0176],
        [0.0132],
        [0.0142],
        [0.0317],
        [0.0106],
        [0.0645],
        [0.0172],
        [0.0318],
        [0.0230]], device='cuda:0', dtype=torch.float16)/tensor([[0.0410, 0.0330, 0.0396, 0.0432, 0.0450, 0.0435, 0.0206, 0.0176, 0.0132,
         0.0142, 0.0317, 0.0106, 0.0645, 0.0172, 0.0318, 0.0230]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0754, 0.0120, 0.0410],
        [0.0630, 0.0150, 0.0330],
        [0.0922, 0.0158, 0.0396],
        [0.0915, 0.0221, 0.0432],
        [0.0782, 0.0221, 0.0450],
        [0.1057, 0.0257, 0.0435],
        [0.0602, 0.0144, 0.0206],
        [0.0610, 0.0130, 0.0176],
        [0.0158, 0.0076, 0.0132],
        [0.0157, 0.0108, 0.0142],
        [0.0661, 0.0145, 0.0317],
        [0.0246, 0.0107, 0.0106],
        [0.1006, 0.0273, 0.0645],
        [0.0396, 0.0174, 0.0172],
        [0.0865, 0.0148, 0.0318],
        [0.0475, 0.0155, 0.0230]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0428],
        [0.0248],
        [0.0294],
        [0.0757],
        [0.0604],
        [0.0352],
        [0.0540],
        [0.0226],
        [0.0320],
        [0.0387],
        [0.0192],
        [0.0230],
        [0.0696],
        [0.1067],
        [0.0125],
        [0.0514]], device='cuda:0', dtype=torch.float16)/tensor([[0.0428, 0.0248, 0.0294, 0.0757, 0.0604, 0.0352, 0.0540, 0.0226, 0.0320,
         0.0387, 0.0192, 0.0230, 0.0696, 0.1067, 0.0125, 0.0514]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0082],
        [0.0076],
        [0.0156],
        [0.0156],
        [0.0202],
        [0.0087],
        [0.0158],
        [0.0096],
        [0.0108],
        [0.0109],
        [0.0089],
        [0.0085],
        [0.0144],
        [0.0231],
        [0.0088],
        [0.0139]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0076, 0.0156, 0.0156, 0.0202, 0.0087, 0.0158, 0.0096, 0.0108,
         0.0109, 0.0089, 0.0085, 0.0144, 0.0231, 0.0088, 0.0139]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0185],
        [0.0157],
        [0.0184],
        [0.0452],
        [0.0406],
        [0.0145],
        [0.0315],
        [0.0079],
        [0.0143],
        [0.0101],
        [0.0105],
        [0.0088],
        [0.0403],
        [0.0411],
        [0.0118],
        [0.0273]], device='cuda:0', dtype=torch.float16)/tensor([[0.0185, 0.0157, 0.0184, 0.0452, 0.0406, 0.0145, 0.0315, 0.0079, 0.0143,
         0.0101, 0.0105, 0.0088, 0.0403, 0.0411, 0.0118, 0.0273]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0428, 0.0082, 0.0185],
        [0.0248, 0.0076, 0.0157],
        [0.0294, 0.0156, 0.0184],
        [0.0757, 0.0156, 0.0452],
        [0.0604, 0.0202, 0.0406],
        [0.0352, 0.0087, 0.0145],
        [0.0540, 0.0158, 0.0315],
        [0.0226, 0.0096, 0.0079],
        [0.0320, 0.0108, 0.0143],
        [0.0387, 0.0109, 0.0101],
        [0.0192, 0.0089, 0.0105],
        [0.0230, 0.0085, 0.0088],
        [0.0696, 0.0144, 0.0403],
        [0.1067, 0.0231, 0.0411],
        [0.0125, 0.0088, 0.0118],
        [0.0514, 0.0139, 0.0273]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0487],
        [0.0428],
        [0.0590],
        [0.1205],
        [0.0764],
        [0.0788],
        [0.0286],
        [0.0551],
        [0.0417],
        [0.0659],
        [0.1041],
        [0.0493],
        [0.0194],
        [0.0767],
        [0.0571],
        [0.0322]], device='cuda:0', dtype=torch.float16)/tensor([[0.0487, 0.0428, 0.0590, 0.1205, 0.0764, 0.0788, 0.0286, 0.0551, 0.0417,
         0.0659, 0.1041, 0.0493, 0.0194, 0.0767, 0.0571, 0.0322]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0170],
        [0.0118],
        [0.0105],
        [0.0154],
        [0.0238],
        [0.0180],
        [0.0097],
        [0.0140],
        [0.0105],
        [0.0202],
        [0.0346],
        [0.0199],
        [0.0089],
        [0.0156],
        [0.0155],
        [0.0056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0170, 0.0118, 0.0105, 0.0154, 0.0238, 0.0180, 0.0097, 0.0140, 0.0105,
         0.0202, 0.0346, 0.0199, 0.0089, 0.0156, 0.0155, 0.0056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0378],
        [0.0202],
        [0.0229],
        [0.0373],
        [0.0302],
        [0.0537],
        [0.0184],
        [0.0268],
        [0.0238],
        [0.0304],
        [0.0575],
        [0.0295],
        [0.0079],
        [0.0362],
        [0.0305],
        [0.0077]], device='cuda:0', dtype=torch.float16)/tensor([[0.0378, 0.0202, 0.0229, 0.0373, 0.0302, 0.0537, 0.0184, 0.0268, 0.0238,
         0.0304, 0.0575, 0.0295, 0.0079, 0.0362, 0.0305, 0.0077]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0487, 0.0170, 0.0378],
        [0.0428, 0.0118, 0.0202],
        [0.0590, 0.0105, 0.0229],
        [0.1205, 0.0154, 0.0373],
        [0.0764, 0.0238, 0.0302],
        [0.0788, 0.0180, 0.0537],
        [0.0286, 0.0097, 0.0184],
        [0.0551, 0.0140, 0.0268],
        [0.0417, 0.0105, 0.0238],
        [0.0659, 0.0202, 0.0304],
        [0.1041, 0.0346, 0.0575],
        [0.0493, 0.0199, 0.0295],
        [0.0194, 0.0089, 0.0079],
        [0.0767, 0.0156, 0.0362],
        [0.0571, 0.0155, 0.0305],
        [0.0322, 0.0056, 0.0077]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0604],
        [0.0854],
        [0.0337],
        [0.0837],
        [0.0588],
        [0.0652],
        [0.0685],
        [0.0760],
        [0.0643],
        [0.0383],
        [0.0307],
        [0.0423],
        [0.0493],
        [0.0378],
        [0.0432],
        [0.0399]], device='cuda:0', dtype=torch.float16)/tensor([[0.0604, 0.0854, 0.0337, 0.0837, 0.0588, 0.0652, 0.0685, 0.0760, 0.0643,
         0.0383, 0.0307, 0.0423, 0.0493, 0.0378, 0.0432, 0.0399]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0229],
        [0.0182],
        [0.0118],
        [0.0129],
        [0.0157],
        [0.0171],
        [0.0236],
        [0.0162],
        [0.0175],
        [0.0189],
        [0.0067],
        [0.0110],
        [0.0155],
        [0.0059],
        [0.0151],
        [0.0125]], device='cuda:0', dtype=torch.float16)/tensor([[0.0229, 0.0182, 0.0118, 0.0129, 0.0157, 0.0171, 0.0236, 0.0162, 0.0175,
         0.0189, 0.0067, 0.0110, 0.0155, 0.0059, 0.0151, 0.0125]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0229],
        [0.0440],
        [0.0191],
        [0.0289],
        [0.0174],
        [0.0132],
        [0.0339],
        [0.0280],
        [0.0271],
        [0.0287],
        [0.0113],
        [0.0179],
        [0.0264],
        [0.0149],
        [0.0200],
        [0.0261]], device='cuda:0', dtype=torch.float16)/tensor([[0.0229, 0.0440, 0.0191, 0.0289, 0.0174, 0.0132, 0.0339, 0.0280, 0.0271,
         0.0287, 0.0113, 0.0179, 0.0264, 0.0149, 0.0200, 0.0261]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0604, 0.0229, 0.0229],
        [0.0854, 0.0182, 0.0440],
        [0.0337, 0.0118, 0.0191],
        [0.0837, 0.0129, 0.0289],
        [0.0588, 0.0157, 0.0174],
        [0.0652, 0.0171, 0.0132],
        [0.0685, 0.0236, 0.0339],
        [0.0760, 0.0162, 0.0280],
        [0.0643, 0.0175, 0.0271],
        [0.0383, 0.0189, 0.0287],
        [0.0307, 0.0067, 0.0113],
        [0.0423, 0.0110, 0.0179],
        [0.0493, 0.0155, 0.0264],
        [0.0378, 0.0059, 0.0149],
        [0.0432, 0.0151, 0.0200],
        [0.0399, 0.0125, 0.0261]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0619],
        [0.0439],
        [0.0307],
        [0.1000],
        [0.0814],
        [0.0275],
        [0.0482],
        [0.0869],
        [0.0466],
        [0.0534],
        [0.1083],
        [0.0251],
        [0.0476],
        [0.0841],
        [0.0493],
        [0.0523]], device='cuda:0', dtype=torch.float16)/tensor([[0.0619, 0.0439, 0.0307, 0.1000, 0.0814, 0.0275, 0.0482, 0.0869, 0.0466,
         0.0534, 0.1083, 0.0251, 0.0476, 0.0841, 0.0493, 0.0523]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0089],
        [0.0179],
        [0.0103],
        [0.0227],
        [0.0200],
        [0.0180],
        [0.0149],
        [0.0205],
        [0.0197],
        [0.0109],
        [0.0180],
        [0.0164],
        [0.0191],
        [0.0182],
        [0.0199],
        [0.0192]], device='cuda:0', dtype=torch.float16)/tensor([[0.0089, 0.0179, 0.0103, 0.0227, 0.0200, 0.0180, 0.0149, 0.0205, 0.0197,
         0.0109, 0.0180, 0.0164, 0.0191, 0.0182, 0.0199, 0.0192]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0268],
        [0.0231],
        [0.0163],
        [0.0407],
        [0.0464],
        [0.0157],
        [0.0202],
        [0.0378],
        [0.0268],
        [0.0199],
        [0.0417],
        [0.0094],
        [0.0160],
        [0.0376],
        [0.0155],
        [0.0307]], device='cuda:0', dtype=torch.float16)/tensor([[0.0268, 0.0231, 0.0163, 0.0407, 0.0464, 0.0157, 0.0202, 0.0378, 0.0268,
         0.0199, 0.0417, 0.0094, 0.0160, 0.0376, 0.0155, 0.0307]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0619, 0.0089, 0.0268],
        [0.0439, 0.0179, 0.0231],
        [0.0307, 0.0103, 0.0163],
        [0.1000, 0.0227, 0.0407],
        [0.0814, 0.0200, 0.0464],
        [0.0275, 0.0180, 0.0157],
        [0.0482, 0.0149, 0.0202],
        [0.0869, 0.0205, 0.0378],
        [0.0466, 0.0197, 0.0268],
        [0.0534, 0.0109, 0.0199],
        [0.1083, 0.0180, 0.0417],
        [0.0251, 0.0164, 0.0094],
        [0.0476, 0.0191, 0.0160],
        [0.0841, 0.0182, 0.0376],
        [0.0493, 0.0199, 0.0155],
        [0.0523, 0.0192, 0.0307]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0314],
        [0.0659],
        [0.0817],
        [0.0673],
        [0.0255],
        [0.0352],
        [0.0286],
        [0.0632],
        [0.0697],
        [0.0479],
        [0.0903],
        [0.0361],
        [0.0197],
        [0.0435],
        [0.0469],
        [0.0396]], device='cuda:0', dtype=torch.float16)/tensor([[0.0314, 0.0659, 0.0817, 0.0673, 0.0255, 0.0352, 0.0286, 0.0632, 0.0697,
         0.0479, 0.0903, 0.0361, 0.0197, 0.0435, 0.0469, 0.0396]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0091],
        [0.0145],
        [0.0254],
        [0.0178],
        [0.0090],
        [0.0106],
        [0.0115],
        [0.0158],
        [0.0161],
        [0.0157],
        [0.0159],
        [0.0115],
        [0.0087],
        [0.0120],
        [0.0191],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0145, 0.0254, 0.0178, 0.0090, 0.0106, 0.0115, 0.0158, 0.0161,
         0.0157, 0.0159, 0.0115, 0.0087, 0.0120, 0.0191, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0102],
        [0.0214],
        [0.0380],
        [0.0242],
        [0.0101],
        [0.0153],
        [0.0229],
        [0.0215],
        [0.0257],
        [0.0175],
        [0.0377],
        [0.0193],
        [0.0103],
        [0.0194],
        [0.0323],
        [0.0253]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0214, 0.0380, 0.0242, 0.0101, 0.0153, 0.0229, 0.0215, 0.0257,
         0.0175, 0.0377, 0.0193, 0.0103, 0.0194, 0.0323, 0.0253]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0314, 0.0091, 0.0102],
        [0.0659, 0.0145, 0.0214],
        [0.0817, 0.0254, 0.0380],
        [0.0673, 0.0178, 0.0242],
        [0.0255, 0.0090, 0.0101],
        [0.0352, 0.0106, 0.0153],
        [0.0286, 0.0115, 0.0229],
        [0.0632, 0.0158, 0.0215],
        [0.0697, 0.0161, 0.0257],
        [0.0479, 0.0157, 0.0175],
        [0.0903, 0.0159, 0.0377],
        [0.0361, 0.0115, 0.0193],
        [0.0197, 0.0087, 0.0103],
        [0.0435, 0.0120, 0.0194],
        [0.0469, 0.0191, 0.0323],
        [0.0396, 0.0162, 0.0253]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0395],
        [0.0693],
        [0.0410],
        [0.0448],
        [0.0395],
        [0.0587],
        [0.0311],
        [0.0215],
        [0.0811],
        [0.0172],
        [0.0423],
        [0.0894],
        [0.0570],
        [0.0827],
        [0.1089],
        [0.0735]], device='cuda:0', dtype=torch.float16)/tensor([[0.0395, 0.0693, 0.0410, 0.0448, 0.0395, 0.0587, 0.0311, 0.0215, 0.0811,
         0.0172, 0.0423, 0.0894, 0.0570, 0.0827, 0.1089, 0.0735]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0130],
        [0.0178],
        [0.0102],
        [0.0089],
        [0.0080],
        [0.0129],
        [0.0090],
        [0.0122],
        [0.0120],
        [0.0081],
        [0.0129],
        [0.0198],
        [0.0192],
        [0.0180],
        [0.0151],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0130, 0.0178, 0.0102, 0.0089, 0.0080, 0.0129, 0.0090, 0.0122, 0.0120,
         0.0081, 0.0129, 0.0198, 0.0192, 0.0180, 0.0151, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0315],
        [0.0243],
        [0.0171],
        [0.0222],
        [0.0110],
        [0.0362],
        [0.0202],
        [0.0101],
        [0.0320],
        [0.0087],
        [0.0476],
        [0.0319],
        [0.0255],
        [0.0207],
        [0.0376],
        [0.0300]], device='cuda:0', dtype=torch.float16)/tensor([[0.0315, 0.0243, 0.0171, 0.0222, 0.0110, 0.0362, 0.0202, 0.0101, 0.0320,
         0.0087, 0.0476, 0.0319, 0.0255, 0.0207, 0.0376, 0.0300]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0395, 0.0130, 0.0315],
        [0.0693, 0.0178, 0.0243],
        [0.0410, 0.0102, 0.0171],
        [0.0448, 0.0089, 0.0222],
        [0.0395, 0.0080, 0.0110],
        [0.0587, 0.0129, 0.0362],
        [0.0311, 0.0090, 0.0202],
        [0.0215, 0.0122, 0.0101],
        [0.0811, 0.0120, 0.0320],
        [0.0172, 0.0081, 0.0087],
        [0.0423, 0.0129, 0.0476],
        [0.0894, 0.0198, 0.0319],
        [0.0570, 0.0192, 0.0255],
        [0.0827, 0.0180, 0.0207],
        [0.1089, 0.0151, 0.0376],
        [0.0735, 0.0155, 0.0300]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0282],
        [0.0297],
        [0.0268],
        [0.0188],
        [0.1136],
        [0.0714]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0297, 0.0268, 0.0188, 0.1136, 0.0714]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0093],
        [0.0089],
        [0.0125],
        [0.0171],
        [0.0242],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0093, 0.0089, 0.0125, 0.0171, 0.0242, 0.0206]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0129],
        [0.0138],
        [0.0181],
        [0.0094],
        [0.0270],
        [0.0340]], device='cuda:0', dtype=torch.float16)/tensor([[0.0129, 0.0138, 0.0181, 0.0094, 0.0270, 0.0340]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0282, 0.0093, 0.0129],
        [0.0297, 0.0089, 0.0138],
        [0.0268, 0.0125, 0.0181],
        [0.0188, 0.0171, 0.0094],
        [0.1136, 0.0242, 0.0270],
        [0.0714, 0.0206, 0.0340]], device='cuda:0')
acc:  0.3282828282828283
Time taken to execute the en NLI task with prompt type common, variation 5 and batchsize 16: 0:03:03.069887
path ['42', 'en', 'llama', 'NLI', 'common', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 294.28it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0338],
        [0.0319],
        [0.0605],
        [0.0577],
        [0.0827],
        [0.1183],
        [0.0620],
        [0.0783],
        [0.0408],
        [0.1094],
        [0.0536],
        [0.1276],
        [0.1190],
        [0.0833],
        [0.0345],
        [0.0492]], device='cuda:0', dtype=torch.float16)/tensor([[0.0338, 0.0319, 0.0605, 0.0577, 0.0827, 0.1183, 0.0620, 0.0783, 0.0408,
         0.1094, 0.0536, 0.1276, 0.1190, 0.0833, 0.0345, 0.0492]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0125],
        [0.0162],
        [0.0127],
        [0.0131],
        [0.0336],
        [0.0149],
        [0.0272],
        [0.0157],
        [0.0341],
        [0.0117],
        [0.0291],
        [0.0237],
        [0.0254],
        [0.0203],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0125, 0.0162, 0.0127, 0.0131, 0.0336, 0.0149, 0.0272, 0.0157,
         0.0341, 0.0117, 0.0291, 0.0237, 0.0254, 0.0203, 0.0132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0157],
        [0.0104],
        [0.0080],
        [0.0203],
        [0.0169],
        [0.0248],
        [0.0136],
        [0.0231],
        [0.0429],
        [0.0406],
        [0.0271],
        [0.0450],
        [0.0273],
        [0.0334],
        [0.0156],
        [0.0152]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0104, 0.0080, 0.0203, 0.0169, 0.0248, 0.0136, 0.0231, 0.0429,
         0.0406, 0.0271, 0.0450, 0.0273, 0.0334, 0.0156, 0.0152]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0338, 0.0134, 0.0157],
        [0.0319, 0.0125, 0.0104],
        [0.0605, 0.0162, 0.0080],
        [0.0577, 0.0127, 0.0203],
        [0.0827, 0.0131, 0.0169],
        [0.1183, 0.0336, 0.0248],
        [0.0620, 0.0149, 0.0136],
        [0.0783, 0.0272, 0.0231],
        [0.0408, 0.0157, 0.0429],
        [0.1094, 0.0341, 0.0406],
        [0.0536, 0.0117, 0.0271],
        [0.1276, 0.0291, 0.0450],
        [0.1190, 0.0237, 0.0273],
        [0.0833, 0.0254, 0.0334],
        [0.0345, 0.0203, 0.0156],
        [0.0492, 0.0132, 0.0152]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0885],
        [0.0773],
        [0.0947],
        [0.1570],
        [0.0859],
        [0.0632],
        [0.0800],
        [0.0616],
        [0.0889],
        [0.0712],
        [0.0807],
        [0.0771],
        [0.0717],
        [0.0586],
        [0.0610],
        [0.0431]], device='cuda:0', dtype=torch.float16)/tensor([[0.0885, 0.0773, 0.0947, 0.1570, 0.0859, 0.0632, 0.0800, 0.0616, 0.0889,
         0.0712, 0.0807, 0.0771, 0.0717, 0.0586, 0.0610, 0.0431]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0381],
        [0.0216],
        [0.0192],
        [0.0367],
        [0.0190],
        [0.0112],
        [0.0235],
        [0.0124],
        [0.0194],
        [0.0167],
        [0.0194],
        [0.0228],
        [0.0182],
        [0.0271],
        [0.0151],
        [0.0225]], device='cuda:0', dtype=torch.float16)/tensor([[0.0381, 0.0216, 0.0192, 0.0367, 0.0190, 0.0112, 0.0235, 0.0124, 0.0194,
         0.0167, 0.0194, 0.0228, 0.0182, 0.0271, 0.0151, 0.0225]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0481],
        [0.0244],
        [0.0365],
        [0.0466],
        [0.0378],
        [0.0223],
        [0.0188],
        [0.0276],
        [0.0206],
        [0.0161],
        [0.0203],
        [0.0295],
        [0.0396],
        [0.0421],
        [0.0283],
        [0.0083]], device='cuda:0', dtype=torch.float16)/tensor([[0.0481, 0.0244, 0.0365, 0.0466, 0.0378, 0.0223, 0.0188, 0.0276, 0.0206,
         0.0161, 0.0203, 0.0295, 0.0396, 0.0421, 0.0283, 0.0083]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0885, 0.0381, 0.0481],
        [0.0773, 0.0216, 0.0244],
        [0.0947, 0.0192, 0.0365],
        [0.1570, 0.0367, 0.0466],
        [0.0859, 0.0190, 0.0378],
        [0.0632, 0.0112, 0.0223],
        [0.0800, 0.0235, 0.0188],
        [0.0616, 0.0124, 0.0276],
        [0.0889, 0.0194, 0.0206],
        [0.0712, 0.0167, 0.0161],
        [0.0807, 0.0194, 0.0203],
        [0.0771, 0.0228, 0.0295],
        [0.0717, 0.0182, 0.0396],
        [0.0586, 0.0271, 0.0421],
        [0.0610, 0.0151, 0.0283],
        [0.0431, 0.0225, 0.0083]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0663],
        [0.0767],
        [0.0602],
        [0.0679],
        [0.0624],
        [0.0370],
        [0.0794],
        [0.1080],
        [0.0770],
        [0.0589],
        [0.1035],
        [0.0981],
        [0.0432],
        [0.0865],
        [0.0356],
        [0.0748]], device='cuda:0', dtype=torch.float16)/tensor([[0.0663, 0.0767, 0.0602, 0.0679, 0.0624, 0.0370, 0.0794, 0.1080, 0.0770,
         0.0589, 0.1035, 0.0981, 0.0432, 0.0865, 0.0356, 0.0748]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0175],
        [0.0317],
        [0.0319],
        [0.0225],
        [0.0138],
        [0.0135],
        [0.0341],
        [0.0347],
        [0.0193],
        [0.0307],
        [0.0210],
        [0.0199],
        [0.0167],
        [0.0214],
        [0.0137],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0175, 0.0317, 0.0319, 0.0225, 0.0138, 0.0135, 0.0341, 0.0347, 0.0193,
         0.0307, 0.0210, 0.0199, 0.0167, 0.0214, 0.0137, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0324],
        [0.0299],
        [0.0271],
        [0.0238],
        [0.0200],
        [0.0194],
        [0.0341],
        [0.0650],
        [0.0241],
        [0.0505],
        [0.0370],
        [0.0461],
        [0.0114],
        [0.0289],
        [0.0172],
        [0.0483]], device='cuda:0', dtype=torch.float16)/tensor([[0.0324, 0.0299, 0.0271, 0.0238, 0.0200, 0.0194, 0.0341, 0.0650, 0.0241,
         0.0505, 0.0370, 0.0461, 0.0114, 0.0289, 0.0172, 0.0483]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0663, 0.0175, 0.0324],
        [0.0767, 0.0317, 0.0299],
        [0.0602, 0.0319, 0.0271],
        [0.0679, 0.0225, 0.0238],
        [0.0624, 0.0138, 0.0200],
        [0.0370, 0.0135, 0.0194],
        [0.0794, 0.0341, 0.0341],
        [0.1080, 0.0347, 0.0650],
        [0.0770, 0.0193, 0.0241],
        [0.0589, 0.0307, 0.0505],
        [0.1035, 0.0210, 0.0370],
        [0.0981, 0.0199, 0.0461],
        [0.0432, 0.0167, 0.0114],
        [0.0865, 0.0214, 0.0289],
        [0.0356, 0.0137, 0.0172],
        [0.0748, 0.0123, 0.0483]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0731],
        [0.0817],
        [0.0526],
        [0.0718],
        [0.0609],
        [0.1161],
        [0.0806],
        [0.0881],
        [0.0728],
        [0.0247],
        [0.1167],
        [0.0953],
        [0.0619],
        [0.0900],
        [0.0646],
        [0.0601]], device='cuda:0', dtype=torch.float16)/tensor([[0.0731, 0.0817, 0.0526, 0.0718, 0.0609, 0.1161, 0.0806, 0.0881, 0.0728,
         0.0247, 0.1167, 0.0953, 0.0619, 0.0900, 0.0646, 0.0601]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0240],
        [0.0174],
        [0.0107],
        [0.0342],
        [0.0316],
        [0.0170],
        [0.0184],
        [0.0150],
        [0.0266],
        [0.0230],
        [0.0295],
        [0.0342],
        [0.0209],
        [0.0194],
        [0.0233],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0240, 0.0174, 0.0107, 0.0342, 0.0316, 0.0170, 0.0184, 0.0150, 0.0266,
         0.0230, 0.0295, 0.0342, 0.0209, 0.0194, 0.0233, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0341],
        [0.0341],
        [0.0166],
        [0.0338],
        [0.0222],
        [0.0259],
        [0.0363],
        [0.0417],
        [0.0271],
        [0.0132],
        [0.0594],
        [0.0468],
        [0.0232],
        [0.0315],
        [0.0256],
        [0.0487]], device='cuda:0', dtype=torch.float16)/tensor([[0.0341, 0.0341, 0.0166, 0.0338, 0.0222, 0.0259, 0.0363, 0.0417, 0.0271,
         0.0132, 0.0594, 0.0468, 0.0232, 0.0315, 0.0256, 0.0487]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0731, 0.0240, 0.0341],
        [0.0817, 0.0174, 0.0341],
        [0.0526, 0.0107, 0.0166],
        [0.0718, 0.0342, 0.0338],
        [0.0609, 0.0316, 0.0222],
        [0.1161, 0.0170, 0.0259],
        [0.0806, 0.0184, 0.0363],
        [0.0881, 0.0150, 0.0417],
        [0.0728, 0.0266, 0.0271],
        [0.0247, 0.0230, 0.0132],
        [0.1167, 0.0295, 0.0594],
        [0.0953, 0.0342, 0.0468],
        [0.0619, 0.0209, 0.0232],
        [0.0900, 0.0194, 0.0315],
        [0.0646, 0.0233, 0.0256],
        [0.0601, 0.0178, 0.0487]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0740],
        [0.1188],
        [0.0813],
        [0.0593],
        [0.0859],
        [0.0874],
        [0.1055],
        [0.0734],
        [0.0868],
        [0.0169],
        [0.0567],
        [0.0696],
        [0.0590],
        [0.0768],
        [0.0758],
        [0.1287]], device='cuda:0', dtype=torch.float16)/tensor([[0.0740, 0.1188, 0.0813, 0.0593, 0.0859, 0.0874, 0.1055, 0.0734, 0.0868,
         0.0169, 0.0567, 0.0696, 0.0590, 0.0768, 0.0758, 0.1287]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0091],
        [0.0349],
        [0.0335],
        [0.0100],
        [0.0199],
        [0.0143],
        [0.0223],
        [0.0186],
        [0.0300],
        [0.0098],
        [0.0150],
        [0.0236],
        [0.0185],
        [0.0148],
        [0.0240],
        [0.0311]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0349, 0.0335, 0.0100, 0.0199, 0.0143, 0.0223, 0.0186, 0.0300,
         0.0098, 0.0150, 0.0236, 0.0185, 0.0148, 0.0240, 0.0311]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0210],
        [0.0409],
        [0.0703],
        [0.0135],
        [0.0265],
        [0.0269],
        [0.0235],
        [0.0132],
        [0.0415],
        [0.0078],
        [0.0270],
        [0.0381],
        [0.0344],
        [0.0143],
        [0.0330],
        [0.0424]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0409, 0.0703, 0.0135, 0.0265, 0.0269, 0.0235, 0.0132, 0.0415,
         0.0078, 0.0270, 0.0381, 0.0344, 0.0143, 0.0330, 0.0424]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0740, 0.0091, 0.0210],
        [0.1188, 0.0349, 0.0409],
        [0.0813, 0.0335, 0.0703],
        [0.0593, 0.0100, 0.0135],
        [0.0859, 0.0199, 0.0265],
        [0.0874, 0.0143, 0.0269],
        [0.1055, 0.0223, 0.0235],
        [0.0734, 0.0186, 0.0132],
        [0.0868, 0.0300, 0.0415],
        [0.0169, 0.0098, 0.0078],
        [0.0567, 0.0150, 0.0270],
        [0.0696, 0.0236, 0.0381],
        [0.0590, 0.0185, 0.0344],
        [0.0768, 0.0148, 0.0143],
        [0.0758, 0.0240, 0.0330],
        [0.1287, 0.0311, 0.0424]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0687],
        [0.0607],
        [0.0504],
        [0.0594],
        [0.1104],
        [0.1003],
        [0.0494],
        [0.0326],
        [0.0947],
        [0.1106],
        [0.0471],
        [0.0629],
        [0.0165],
        [0.0434],
        [0.1500],
        [0.0670]], device='cuda:0', dtype=torch.float16)/tensor([[0.0687, 0.0607, 0.0504, 0.0594, 0.1104, 0.1003, 0.0494, 0.0326, 0.0947,
         0.1106, 0.0471, 0.0629, 0.0165, 0.0434, 0.1500, 0.0670]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0294],
        [0.0179],
        [0.0152],
        [0.0144],
        [0.0331],
        [0.0274],
        [0.0144],
        [0.0167],
        [0.0230],
        [0.0264],
        [0.0135],
        [0.0195],
        [0.0041],
        [0.0213],
        [0.0254],
        [0.0248]], device='cuda:0', dtype=torch.float16)/tensor([[0.0294, 0.0179, 0.0152, 0.0144, 0.0331, 0.0274, 0.0144, 0.0167, 0.0230,
         0.0264, 0.0135, 0.0195, 0.0041, 0.0213, 0.0254, 0.0248]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0239],
        [0.0261],
        [0.0213],
        [0.0199],
        [0.0480],
        [0.0424],
        [0.0219],
        [0.0170],
        [0.0325],
        [0.0335],
        [0.0137],
        [0.0352],
        [0.0010],
        [0.0236],
        [0.0460],
        [0.0258]], device='cuda:0', dtype=torch.float16)/tensor([[0.0239, 0.0261, 0.0213, 0.0199, 0.0480, 0.0424, 0.0219, 0.0170, 0.0325,
         0.0335, 0.0137, 0.0352, 0.0010, 0.0236, 0.0460, 0.0258]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0687, 0.0294, 0.0239],
        [0.0607, 0.0179, 0.0261],
        [0.0504, 0.0152, 0.0213],
        [0.0594, 0.0144, 0.0199],
        [0.1104, 0.0331, 0.0480],
        [0.1003, 0.0274, 0.0424],
        [0.0494, 0.0144, 0.0219],
        [0.0326, 0.0167, 0.0170],
        [0.0947, 0.0230, 0.0325],
        [0.1106, 0.0264, 0.0335],
        [0.0471, 0.0135, 0.0137],
        [0.0629, 0.0195, 0.0352],
        [0.0165, 0.0041, 0.0010],
        [0.0434, 0.0213, 0.0236],
        [0.1500, 0.0254, 0.0460],
        [0.0670, 0.0248, 0.0258]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0502],
        [0.0839],
        [0.0734],
        [0.0859],
        [0.0517],
        [0.1176],
        [0.0869],
        [0.0658],
        [0.0521],
        [0.0389],
        [0.0613],
        [0.0746],
        [0.0781],
        [0.1232],
        [0.0407],
        [0.0956]], device='cuda:0', dtype=torch.float16)/tensor([[0.0502, 0.0839, 0.0734, 0.0859, 0.0517, 0.1176, 0.0869, 0.0658, 0.0521,
         0.0389, 0.0613, 0.0746, 0.0781, 0.1232, 0.0407, 0.0956]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0181],
        [0.0159],
        [0.0328],
        [0.0177],
        [0.0189],
        [0.0293],
        [0.0287],
        [0.0177],
        [0.0087],
        [0.0145],
        [0.0174],
        [0.0194],
        [0.0140],
        [0.0193],
        [0.0110],
        [0.0233]], device='cuda:0', dtype=torch.float16)/tensor([[0.0181, 0.0159, 0.0328, 0.0177, 0.0189, 0.0293, 0.0287, 0.0177, 0.0087,
         0.0145, 0.0174, 0.0194, 0.0140, 0.0193, 0.0110, 0.0233]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0195],
        [0.0277],
        [0.0253],
        [0.0300],
        [0.0446],
        [0.0312],
        [0.0358],
        [0.0262],
        [0.0387],
        [0.0258],
        [0.0341],
        [0.0317],
        [0.0257],
        [0.0654],
        [0.0105],
        [0.0382]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0277, 0.0253, 0.0300, 0.0446, 0.0312, 0.0358, 0.0262, 0.0387,
         0.0258, 0.0341, 0.0317, 0.0257, 0.0654, 0.0105, 0.0382]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0502, 0.0181, 0.0195],
        [0.0839, 0.0159, 0.0277],
        [0.0734, 0.0328, 0.0253],
        [0.0859, 0.0177, 0.0300],
        [0.0517, 0.0189, 0.0446],
        [0.1176, 0.0293, 0.0312],
        [0.0869, 0.0287, 0.0358],
        [0.0658, 0.0177, 0.0262],
        [0.0521, 0.0087, 0.0387],
        [0.0389, 0.0145, 0.0258],
        [0.0613, 0.0174, 0.0341],
        [0.0746, 0.0194, 0.0317],
        [0.0781, 0.0140, 0.0257],
        [0.1232, 0.0193, 0.0654],
        [0.0407, 0.0110, 0.0105],
        [0.0956, 0.0233, 0.0382]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0159],
        [0.1227],
        [0.0241],
        [0.0568],
        [0.1302],
        [0.0365],
        [0.0869],
        [0.0695],
        [0.0952],
        [0.1191],
        [0.0511],
        [0.0243],
        [0.0495],
        [0.0731],
        [0.0588],
        [0.0578]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.1227, 0.0241, 0.0568, 0.1302, 0.0365, 0.0869, 0.0695, 0.0952,
         0.1191, 0.0511, 0.0243, 0.0495, 0.0731, 0.0588, 0.0578]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0092],
        [0.0250],
        [0.0095],
        [0.0121],
        [0.0251],
        [0.0135],
        [0.0272],
        [0.0295],
        [0.0356],
        [0.0338],
        [0.0253],
        [0.0079],
        [0.0234],
        [0.0331],
        [0.0271],
        [0.0246]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0250, 0.0095, 0.0121, 0.0251, 0.0135, 0.0272, 0.0295, 0.0356,
         0.0338, 0.0253, 0.0079, 0.0234, 0.0331, 0.0271, 0.0246]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0063],
        [0.0341],
        [0.0069],
        [0.0206],
        [0.0316],
        [0.0105],
        [0.0427],
        [0.0364],
        [0.0414],
        [0.0369],
        [0.0410],
        [0.0017],
        [0.0165],
        [0.0501],
        [0.0345],
        [0.0652]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0341, 0.0069, 0.0206, 0.0316, 0.0105, 0.0427, 0.0364, 0.0414,
         0.0369, 0.0410, 0.0017, 0.0165, 0.0501, 0.0345, 0.0652]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0159, 0.0092, 0.0063],
        [0.1227, 0.0250, 0.0341],
        [0.0241, 0.0095, 0.0069],
        [0.0568, 0.0121, 0.0206],
        [0.1302, 0.0251, 0.0316],
        [0.0365, 0.0135, 0.0105],
        [0.0869, 0.0272, 0.0427],
        [0.0695, 0.0295, 0.0364],
        [0.0952, 0.0356, 0.0414],
        [0.1191, 0.0338, 0.0369],
        [0.0511, 0.0253, 0.0410],
        [0.0243, 0.0079, 0.0017],
        [0.0495, 0.0234, 0.0165],
        [0.0731, 0.0331, 0.0501],
        [0.0588, 0.0271, 0.0345],
        [0.0578, 0.0246, 0.0652]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0953],
        [0.0413],
        [0.0745],
        [0.0757],
        [0.0760],
        [0.0397],
        [0.0969],
        [0.1368],
        [0.0966],
        [0.0851],
        [0.1008],
        [0.0605],
        [0.0796],
        [0.1021],
        [0.0652],
        [0.0496]], device='cuda:0', dtype=torch.float16)/tensor([[0.0953, 0.0413, 0.0745, 0.0757, 0.0760, 0.0397, 0.0969, 0.1368, 0.0966,
         0.0851, 0.1008, 0.0605, 0.0796, 0.1021, 0.0652, 0.0496]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0108],
        [0.0224],
        [0.0249],
        [0.0175],
        [0.0179],
        [0.0287],
        [0.0230],
        [0.0252],
        [0.0234],
        [0.0309],
        [0.0099],
        [0.0211],
        [0.0214],
        [0.0188],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0108, 0.0224, 0.0249, 0.0175, 0.0179, 0.0287, 0.0230, 0.0252,
         0.0234, 0.0309, 0.0099, 0.0211, 0.0214, 0.0188, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0216],
        [0.0223],
        [0.0210],
        [0.0289],
        [0.0332],
        [0.0124],
        [0.0446],
        [0.0458],
        [0.0407],
        [0.0369],
        [0.0340],
        [0.0171],
        [0.0270],
        [0.0308],
        [0.0202],
        [0.0076]], device='cuda:0', dtype=torch.float16)/tensor([[0.0216, 0.0223, 0.0210, 0.0289, 0.0332, 0.0124, 0.0446, 0.0458, 0.0407,
         0.0369, 0.0340, 0.0171, 0.0270, 0.0308, 0.0202, 0.0076]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0953, 0.0134, 0.0216],
        [0.0413, 0.0108, 0.0223],
        [0.0745, 0.0224, 0.0210],
        [0.0757, 0.0249, 0.0289],
        [0.0760, 0.0175, 0.0332],
        [0.0397, 0.0179, 0.0124],
        [0.0969, 0.0287, 0.0446],
        [0.1368, 0.0230, 0.0458],
        [0.0966, 0.0252, 0.0407],
        [0.0851, 0.0234, 0.0369],
        [0.1008, 0.0309, 0.0340],
        [0.0605, 0.0099, 0.0171],
        [0.0796, 0.0211, 0.0270],
        [0.1021, 0.0214, 0.0308],
        [0.0652, 0.0188, 0.0202],
        [0.0496, 0.0112, 0.0076]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0678],
        [0.0334],
        [0.0586],
        [0.0745],
        [0.0572],
        [0.0208],
        [0.0742],
        [0.0592],
        [0.0768],
        [0.1072],
        [0.1268],
        [0.0916],
        [0.1213],
        [0.0676],
        [0.0477],
        [0.0894]], device='cuda:0', dtype=torch.float16)/tensor([[0.0678, 0.0334, 0.0586, 0.0745, 0.0572, 0.0208, 0.0742, 0.0592, 0.0768,
         0.1072, 0.1268, 0.0916, 0.1213, 0.0676, 0.0477, 0.0894]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0188],
        [0.0109],
        [0.0113],
        [0.0298],
        [0.0171],
        [0.0065],
        [0.0119],
        [0.0200],
        [0.0135],
        [0.0263],
        [0.0307],
        [0.0242],
        [0.0202],
        [0.0247],
        [0.0164],
        [0.0144]], device='cuda:0', dtype=torch.float16)/tensor([[0.0188, 0.0109, 0.0113, 0.0298, 0.0171, 0.0065, 0.0119, 0.0200, 0.0135,
         0.0263, 0.0307, 0.0242, 0.0202, 0.0247, 0.0164, 0.0144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0215],
        [0.0091],
        [0.0161],
        [0.0472],
        [0.0082],
        [0.0032],
        [0.0227],
        [0.0340],
        [0.0196],
        [0.0246],
        [0.0552],
        [0.0235],
        [0.0591],
        [0.0253],
        [0.0197],
        [0.0177]], device='cuda:0', dtype=torch.float16)/tensor([[0.0215, 0.0091, 0.0161, 0.0472, 0.0082, 0.0032, 0.0227, 0.0340, 0.0196,
         0.0246, 0.0552, 0.0235, 0.0591, 0.0253, 0.0197, 0.0177]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0678, 0.0188, 0.0215],
        [0.0334, 0.0109, 0.0091],
        [0.0586, 0.0113, 0.0161],
        [0.0745, 0.0298, 0.0472],
        [0.0572, 0.0171, 0.0082],
        [0.0208, 0.0065, 0.0032],
        [0.0742, 0.0119, 0.0227],
        [0.0592, 0.0200, 0.0340],
        [0.0768, 0.0135, 0.0196],
        [0.1072, 0.0263, 0.0246],
        [0.1268, 0.0307, 0.0552],
        [0.0916, 0.0242, 0.0235],
        [0.1213, 0.0202, 0.0591],
        [0.0676, 0.0247, 0.0253],
        [0.0477, 0.0164, 0.0197],
        [0.0894, 0.0144, 0.0177]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0855],
        [0.0456],
        [0.0300],
        [0.0906],
        [0.0479],
        [0.0733],
        [0.0201],
        [0.0840],
        [0.1160],
        [0.0663],
        [0.0847],
        [0.0562],
        [0.0978],
        [0.1024],
        [0.0591],
        [0.0917]], device='cuda:0', dtype=torch.float16)/tensor([[0.0855, 0.0456, 0.0300, 0.0906, 0.0479, 0.0733, 0.0201, 0.0840, 0.1160,
         0.0663, 0.0847, 0.0562, 0.0978, 0.1024, 0.0591, 0.0917]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0127],
        [0.0161],
        [0.0108],
        [0.0112],
        [0.0153],
        [0.0213],
        [0.0117],
        [0.0204],
        [0.0287],
        [0.0206],
        [0.0184],
        [0.0212],
        [0.0280],
        [0.0246],
        [0.0236],
        [0.0205]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0161, 0.0108, 0.0112, 0.0153, 0.0213, 0.0117, 0.0204, 0.0287,
         0.0206, 0.0184, 0.0212, 0.0280, 0.0246, 0.0236, 0.0205]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0192],
        [0.0227],
        [0.0137],
        [0.0257],
        [0.0129],
        [0.0280],
        [0.0084],
        [0.0300],
        [0.0428],
        [0.0276],
        [0.0279],
        [0.0261],
        [0.0208],
        [0.0339],
        [0.0215],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0227, 0.0137, 0.0257, 0.0129, 0.0280, 0.0084, 0.0300, 0.0428,
         0.0276, 0.0279, 0.0261, 0.0208, 0.0339, 0.0215, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0855, 0.0127, 0.0192],
        [0.0456, 0.0161, 0.0227],
        [0.0300, 0.0108, 0.0137],
        [0.0906, 0.0112, 0.0257],
        [0.0479, 0.0153, 0.0129],
        [0.0733, 0.0213, 0.0280],
        [0.0201, 0.0117, 0.0084],
        [0.0840, 0.0204, 0.0300],
        [0.1160, 0.0287, 0.0428],
        [0.0663, 0.0206, 0.0276],
        [0.0847, 0.0184, 0.0279],
        [0.0562, 0.0212, 0.0261],
        [0.0978, 0.0280, 0.0208],
        [0.1024, 0.0246, 0.0339],
        [0.0591, 0.0236, 0.0215],
        [0.0917, 0.0205, 0.0303]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0799],
        [0.0213],
        [0.0902],
        [0.0791],
        [0.1110],
        [0.1067],
        [0.0535],
        [0.0969],
        [0.0955],
        [0.0433],
        [0.0645],
        [0.0554],
        [0.0880],
        [0.0611],
        [0.0681],
        [0.0890]], device='cuda:0', dtype=torch.float16)/tensor([[0.0799, 0.0213, 0.0902, 0.0791, 0.1110, 0.1067, 0.0535, 0.0969, 0.0955,
         0.0433, 0.0645, 0.0554, 0.0880, 0.0611, 0.0681, 0.0890]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0162],
        [0.0126],
        [0.0273],
        [0.0156],
        [0.0286],
        [0.0251],
        [0.0321],
        [0.0268],
        [0.0230],
        [0.0130],
        [0.0198],
        [0.0205],
        [0.0146],
        [0.0127],
        [0.0165],
        [0.0173]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0126, 0.0273, 0.0156, 0.0286, 0.0251, 0.0321, 0.0268, 0.0230,
         0.0130, 0.0198, 0.0205, 0.0146, 0.0127, 0.0165, 0.0173]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0245],
        [0.0180],
        [0.0394],
        [0.0194],
        [0.0335],
        [0.0220],
        [0.0283],
        [0.0424],
        [0.0424],
        [0.0139],
        [0.0274],
        [0.0271],
        [0.0245],
        [0.0198],
        [0.0151],
        [0.0378]], device='cuda:0', dtype=torch.float16)/tensor([[0.0245, 0.0180, 0.0394, 0.0194, 0.0335, 0.0220, 0.0283, 0.0424, 0.0424,
         0.0139, 0.0274, 0.0271, 0.0245, 0.0198, 0.0151, 0.0378]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0799, 0.0162, 0.0245],
        [0.0213, 0.0126, 0.0180],
        [0.0902, 0.0273, 0.0394],
        [0.0791, 0.0156, 0.0194],
        [0.1110, 0.0286, 0.0335],
        [0.1067, 0.0251, 0.0220],
        [0.0535, 0.0321, 0.0283],
        [0.0969, 0.0268, 0.0424],
        [0.0955, 0.0230, 0.0424],
        [0.0433, 0.0130, 0.0139],
        [0.0645, 0.0198, 0.0274],
        [0.0554, 0.0205, 0.0271],
        [0.0880, 0.0146, 0.0245],
        [0.0611, 0.0127, 0.0198],
        [0.0681, 0.0165, 0.0151],
        [0.0890, 0.0173, 0.0378]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0392],
        [0.0937],
        [0.0723],
        [0.0760],
        [0.0714],
        [0.0433]], device='cuda:0', dtype=torch.float16)/tensor([[0.0392, 0.0937, 0.0723, 0.0760, 0.0714, 0.0433]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0159],
        [0.0276],
        [0.0172],
        [0.0206],
        [0.0339],
        [0.0137]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0276, 0.0172, 0.0206, 0.0339, 0.0137]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0195],
        [0.0469],
        [0.0251],
        [0.0472],
        [0.0237],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0469, 0.0251, 0.0472, 0.0237, 0.0153]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0392, 0.0159, 0.0195],
        [0.0937, 0.0276, 0.0469],
        [0.0723, 0.0172, 0.0251],
        [0.0760, 0.0206, 0.0472],
        [0.0714, 0.0339, 0.0237],
        [0.0433, 0.0137, 0.0153]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 0 and batchsize 16: 0:03:02.896088
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 327.18it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0402],
        [0.0208],
        [0.0177],
        [0.0127],
        [0.0076],
        [0.0487],
        [0.0430],
        [0.0307],
        [0.0201],
        [0.0237],
        [0.0019],
        [0.0311],
        [0.0200],
        [0.0172],
        [0.0219],
        [0.0324]], device='cuda:0', dtype=torch.float16)/tensor([[0.0402, 0.0208, 0.0177, 0.0127, 0.0076, 0.0487, 0.0430, 0.0307, 0.0201,
         0.0237, 0.0019, 0.0311, 0.0200, 0.0172, 0.0219, 0.0324]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0158],
        [0.0142],
        [0.0065],
        [0.0036],
        [0.0027],
        [0.0096],
        [0.0124],
        [0.0080],
        [0.0076],
        [0.0179],
        [0.0025],
        [0.0167],
        [0.0138],
        [0.0061],
        [0.0137],
        [0.0123]], device='cuda:0', dtype=torch.float16)/tensor([[0.0158, 0.0142, 0.0065, 0.0036, 0.0027, 0.0096, 0.0124, 0.0080, 0.0076,
         0.0179, 0.0025, 0.0167, 0.0138, 0.0061, 0.0137, 0.0123]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0183],
        [0.0327],
        [0.0142],
        [0.0083],
        [0.0056],
        [0.0229],
        [0.0300],
        [0.0154],
        [0.0190],
        [0.0212],
        [0.0036],
        [0.0175],
        [0.0191],
        [0.0195],
        [0.0207],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0183, 0.0327, 0.0142, 0.0083, 0.0056, 0.0229, 0.0300, 0.0154, 0.0190,
         0.0212, 0.0036, 0.0175, 0.0191, 0.0195, 0.0207, 0.0132]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0402, 0.0158, 0.0183],
        [0.0208, 0.0142, 0.0327],
        [0.0177, 0.0065, 0.0142],
        [0.0127, 0.0036, 0.0083],
        [0.0076, 0.0027, 0.0056],
        [0.0487, 0.0096, 0.0229],
        [0.0430, 0.0124, 0.0300],
        [0.0307, 0.0080, 0.0154],
        [0.0201, 0.0076, 0.0190],
        [0.0237, 0.0179, 0.0212],
        [0.0019, 0.0025, 0.0036],
        [0.0311, 0.0167, 0.0175],
        [0.0200, 0.0138, 0.0191],
        [0.0172, 0.0061, 0.0195],
        [0.0219, 0.0137, 0.0207],
        [0.0324, 0.0123, 0.0132]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0433],
        [0.0520],
        [0.0296],
        [0.0354],
        [0.0197],
        [0.0433],
        [0.0349],
        [0.0330],
        [0.0237],
        [0.0031],
        [0.0232],
        [0.0591],
        [0.0307],
        [0.0215],
        [0.0695],
        [0.0318]], device='cuda:0', dtype=torch.float16)/tensor([[0.0433, 0.0520, 0.0296, 0.0354, 0.0197, 0.0433, 0.0349, 0.0330, 0.0237,
         0.0031, 0.0232, 0.0591, 0.0307, 0.0215, 0.0695, 0.0318]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0091],
        [0.0153],
        [0.0167],
        [0.0040],
        [0.0126],
        [0.0166],
        [0.0066],
        [0.0118],
        [0.0047],
        [0.0030],
        [0.0090],
        [0.0210],
        [0.0084],
        [0.0121],
        [0.0176],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0153, 0.0167, 0.0040, 0.0126, 0.0166, 0.0066, 0.0118, 0.0047,
         0.0030, 0.0090, 0.0210, 0.0084, 0.0121, 0.0176, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0246],
        [0.0280],
        [0.0038],
        [0.0236],
        [0.0253],
        [0.0286],
        [0.0152],
        [0.0174],
        [0.0274],
        [0.0018],
        [0.0295],
        [0.0234],
        [0.0203],
        [0.0189],
        [0.0262],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0280, 0.0038, 0.0236, 0.0253, 0.0286, 0.0152, 0.0174, 0.0274,
         0.0018, 0.0295, 0.0234, 0.0203, 0.0189, 0.0262, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0433, 0.0091, 0.0246],
        [0.0520, 0.0153, 0.0280],
        [0.0296, 0.0167, 0.0038],
        [0.0354, 0.0040, 0.0236],
        [0.0197, 0.0126, 0.0253],
        [0.0433, 0.0166, 0.0286],
        [0.0349, 0.0066, 0.0152],
        [0.0330, 0.0118, 0.0174],
        [0.0237, 0.0047, 0.0274],
        [0.0031, 0.0030, 0.0018],
        [0.0232, 0.0090, 0.0295],
        [0.0591, 0.0210, 0.0234],
        [0.0307, 0.0084, 0.0203],
        [0.0215, 0.0121, 0.0189],
        [0.0695, 0.0176, 0.0262],
        [0.0318, 0.0060, 0.0094]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0259],
        [0.0246],
        [0.0078],
        [0.0414],
        [0.0534],
        [0.0305],
        [0.0248],
        [0.0224],
        [0.0252],
        [0.0393],
        [0.0103],
        [0.0371],
        [0.0213],
        [0.0573],
        [0.0165],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0246, 0.0078, 0.0414, 0.0534, 0.0305, 0.0248, 0.0224, 0.0252,
         0.0393, 0.0103, 0.0371, 0.0213, 0.0573, 0.0165, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0149],
        [0.0111],
        [0.0194],
        [0.0125],
        [0.0121],
        [0.0031],
        [0.0087],
        [0.0022],
        [0.0033],
        [0.0061],
        [0.0112],
        [0.0136],
        [0.0246],
        [0.0207],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0149, 0.0111, 0.0194, 0.0125, 0.0121, 0.0031, 0.0087, 0.0022,
         0.0033, 0.0061, 0.0112, 0.0136, 0.0246, 0.0207, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0169],
        [0.0113],
        [0.0103],
        [0.0246],
        [0.0203],
        [0.0446],
        [0.0200],
        [0.0166],
        [0.0167],
        [0.0297],
        [0.0125],
        [0.0181],
        [0.0100],
        [0.0110],
        [0.0160],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0169, 0.0113, 0.0103, 0.0246, 0.0203, 0.0446, 0.0200, 0.0166, 0.0167,
         0.0297, 0.0125, 0.0181, 0.0100, 0.0110, 0.0160, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0259, 0.0117, 0.0169],
        [0.0246, 0.0149, 0.0113],
        [0.0078, 0.0111, 0.0103],
        [0.0414, 0.0194, 0.0246],
        [0.0534, 0.0125, 0.0203],
        [0.0305, 0.0121, 0.0446],
        [0.0248, 0.0031, 0.0200],
        [0.0224, 0.0087, 0.0166],
        [0.0252, 0.0022, 0.0167],
        [0.0393, 0.0033, 0.0297],
        [0.0103, 0.0061, 0.0125],
        [0.0371, 0.0112, 0.0181],
        [0.0213, 0.0136, 0.0100],
        [0.0573, 0.0246, 0.0110],
        [0.0165, 0.0207, 0.0160],
        [0.0227, 0.0053, 0.0155]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0437],
        [0.0088],
        [0.0453],
        [0.0858],
        [0.0602],
        [0.0610],
        [0.0146],
        [0.0351],
        [0.0201],
        [0.0180],
        [0.0689],
        [0.0277],
        [0.0717],
        [0.0444],
        [0.0269],
        [0.0272]], device='cuda:0', dtype=torch.float16)/tensor([[0.0437, 0.0088, 0.0453, 0.0858, 0.0602, 0.0610, 0.0146, 0.0351, 0.0201,
         0.0180, 0.0689, 0.0277, 0.0717, 0.0444, 0.0269, 0.0272]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0086],
        [0.0054],
        [0.0127],
        [0.0138],
        [0.0091],
        [0.0275],
        [0.0051],
        [0.0166],
        [0.0079],
        [0.0075],
        [0.0202],
        [0.0100],
        [0.0290],
        [0.0063],
        [0.0077],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0054, 0.0127, 0.0138, 0.0091, 0.0275, 0.0051, 0.0166, 0.0079,
         0.0075, 0.0202, 0.0100, 0.0290, 0.0063, 0.0077, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0160],
        [0.0073],
        [0.0149],
        [0.0236],
        [0.0186],
        [0.0208],
        [0.0118],
        [0.0287],
        [0.0183],
        [0.0194],
        [0.0466],
        [0.0134],
        [0.0195],
        [0.0300],
        [0.0174],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0073, 0.0149, 0.0236, 0.0186, 0.0208, 0.0118, 0.0287, 0.0183,
         0.0194, 0.0466, 0.0134, 0.0195, 0.0300, 0.0174, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0437, 0.0086, 0.0160],
        [0.0088, 0.0054, 0.0073],
        [0.0453, 0.0127, 0.0149],
        [0.0858, 0.0138, 0.0236],
        [0.0602, 0.0091, 0.0186],
        [0.0610, 0.0275, 0.0208],
        [0.0146, 0.0051, 0.0118],
        [0.0351, 0.0166, 0.0287],
        [0.0201, 0.0079, 0.0183],
        [0.0180, 0.0075, 0.0194],
        [0.0689, 0.0202, 0.0466],
        [0.0277, 0.0100, 0.0134],
        [0.0717, 0.0290, 0.0195],
        [0.0444, 0.0063, 0.0300],
        [0.0269, 0.0077, 0.0174],
        [0.0272, 0.0162, 0.0341]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0657],
        [0.0289],
        [0.0476],
        [0.0018],
        [0.0384],
        [0.0196],
        [0.0289],
        [0.1168],
        [0.0645],
        [0.0204],
        [0.0181],
        [0.0676],
        [0.0837],
        [0.0298],
        [0.0942],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0657, 0.0289, 0.0476, 0.0018, 0.0384, 0.0196, 0.0289, 0.1168, 0.0645,
         0.0204, 0.0181, 0.0676, 0.0837, 0.0298, 0.0942, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0259],
        [0.0142],
        [0.0119],
        [0.0009],
        [0.0069],
        [0.0124],
        [0.0152],
        [0.0286],
        [0.0076],
        [0.0087],
        [0.0047],
        [0.0160],
        [0.0093],
        [0.0090],
        [0.0363],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0142, 0.0119, 0.0009, 0.0069, 0.0124, 0.0152, 0.0286, 0.0076,
         0.0087, 0.0047, 0.0160, 0.0093, 0.0090, 0.0363, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0249],
        [0.0227],
        [0.0183],
        [0.0008],
        [0.0166],
        [0.0133],
        [0.0102],
        [0.0539],
        [0.0213],
        [0.0114],
        [0.0068],
        [0.0215],
        [0.0261],
        [0.0302],
        [0.0320],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0227, 0.0183, 0.0008, 0.0166, 0.0133, 0.0102, 0.0539, 0.0213,
         0.0114, 0.0068, 0.0215, 0.0261, 0.0302, 0.0320, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0657, 0.0259, 0.0249],
        [0.0289, 0.0142, 0.0227],
        [0.0476, 0.0119, 0.0183],
        [0.0018, 0.0009, 0.0008],
        [0.0384, 0.0069, 0.0166],
        [0.0196, 0.0124, 0.0133],
        [0.0289, 0.0152, 0.0102],
        [0.1168, 0.0286, 0.0539],
        [0.0645, 0.0076, 0.0213],
        [0.0204, 0.0087, 0.0114],
        [0.0181, 0.0047, 0.0068],
        [0.0676, 0.0160, 0.0215],
        [0.0837, 0.0093, 0.0261],
        [0.0298, 0.0090, 0.0302],
        [0.0942, 0.0363, 0.0320],
        [0.0162, 0.0047, 0.0136]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0351],
        [0.0316],
        [0.0490],
        [0.0586],
        [0.0335],
        [0.0278],
        [0.0792],
        [0.0367],
        [0.0465],
        [0.0201],
        [0.0370],
        [0.0420],
        [0.0920],
        [0.0356],
        [0.0424],
        [0.0365]], device='cuda:0', dtype=torch.float16)/tensor([[0.0351, 0.0316, 0.0490, 0.0586, 0.0335, 0.0278, 0.0792, 0.0367, 0.0465,
         0.0201, 0.0370, 0.0420, 0.0920, 0.0356, 0.0424, 0.0365]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0135],
        [0.0199],
        [0.0099],
        [0.0334],
        [0.0183],
        [0.0056],
        [0.0105],
        [0.0193],
        [0.0202],
        [0.0037],
        [0.0117],
        [0.0130],
        [0.0176],
        [0.0133],
        [0.0140],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0135, 0.0199, 0.0099, 0.0334, 0.0183, 0.0056, 0.0105, 0.0193, 0.0202,
         0.0037, 0.0117, 0.0130, 0.0176, 0.0133, 0.0140, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0298],
        [0.0263],
        [0.0083],
        [0.0361],
        [0.0130],
        [0.0172],
        [0.0434],
        [0.0229],
        [0.0410],
        [0.0142],
        [0.0127],
        [0.0096],
        [0.0264],
        [0.0319],
        [0.0264],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0298, 0.0263, 0.0083, 0.0361, 0.0130, 0.0172, 0.0434, 0.0229, 0.0410,
         0.0142, 0.0127, 0.0096, 0.0264, 0.0319, 0.0264, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0351, 0.0135, 0.0298],
        [0.0316, 0.0199, 0.0263],
        [0.0490, 0.0099, 0.0083],
        [0.0586, 0.0334, 0.0361],
        [0.0335, 0.0183, 0.0130],
        [0.0278, 0.0056, 0.0172],
        [0.0792, 0.0105, 0.0434],
        [0.0367, 0.0193, 0.0229],
        [0.0465, 0.0202, 0.0410],
        [0.0201, 0.0037, 0.0142],
        [0.0370, 0.0117, 0.0127],
        [0.0420, 0.0130, 0.0096],
        [0.0920, 0.0176, 0.0264],
        [0.0356, 0.0133, 0.0319],
        [0.0424, 0.0140, 0.0264],
        [0.0365, 0.0110, 0.0136]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0190],
        [0.0174],
        [0.0090],
        [0.0437],
        [0.0246],
        [0.0271],
        [0.0662],
        [0.0309],
        [0.0230],
        [0.0330],
        [0.0190],
        [0.0266],
        [0.0491],
        [0.0220],
        [0.0388],
        [0.0350]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0174, 0.0090, 0.0437, 0.0246, 0.0271, 0.0662, 0.0309, 0.0230,
         0.0330, 0.0190, 0.0266, 0.0491, 0.0220, 0.0388, 0.0350]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0108],
        [0.0045],
        [0.0033],
        [0.0065],
        [0.0043],
        [0.0017],
        [0.0096],
        [0.0172],
        [0.0135],
        [0.0120],
        [0.0075],
        [0.0158],
        [0.0109],
        [0.0086],
        [0.0104],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0108, 0.0045, 0.0033, 0.0065, 0.0043, 0.0017, 0.0096, 0.0172, 0.0135,
         0.0120, 0.0075, 0.0158, 0.0109, 0.0086, 0.0104, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0180],
        [0.0090],
        [0.0071],
        [0.0264],
        [0.0094],
        [0.0122],
        [0.0290],
        [0.0322],
        [0.0131],
        [0.0127],
        [0.0088],
        [0.0137],
        [0.0164],
        [0.0079],
        [0.0095],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0180, 0.0090, 0.0071, 0.0264, 0.0094, 0.0122, 0.0290, 0.0322, 0.0131,
         0.0127, 0.0088, 0.0137, 0.0164, 0.0079, 0.0095, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0190, 0.0108, 0.0180],
        [0.0174, 0.0045, 0.0090],
        [0.0090, 0.0033, 0.0071],
        [0.0437, 0.0065, 0.0264],
        [0.0246, 0.0043, 0.0094],
        [0.0271, 0.0017, 0.0122],
        [0.0662, 0.0096, 0.0290],
        [0.0309, 0.0172, 0.0322],
        [0.0230, 0.0135, 0.0131],
        [0.0330, 0.0120, 0.0127],
        [0.0190, 0.0075, 0.0088],
        [0.0266, 0.0158, 0.0137],
        [0.0491, 0.0109, 0.0164],
        [0.0220, 0.0086, 0.0079],
        [0.0388, 0.0104, 0.0095],
        [0.0350, 0.0031, 0.0119]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0244],
        [0.0869],
        [0.0550],
        [0.0256],
        [0.0584],
        [0.0335],
        [0.0409],
        [0.0464],
        [0.0452],
        [0.0149],
        [0.0412],
        [0.0353],
        [0.0486],
        [0.0457],
        [0.0140],
        [0.0267]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0869, 0.0550, 0.0256, 0.0584, 0.0335, 0.0409, 0.0464, 0.0452,
         0.0149, 0.0412, 0.0353, 0.0486, 0.0457, 0.0140, 0.0267]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0044],
        [0.0152],
        [0.0113],
        [0.0048],
        [0.0183],
        [0.0100],
        [0.0148],
        [0.0050],
        [0.0136],
        [0.0057],
        [0.0243],
        [0.0075],
        [0.0137],
        [0.0105],
        [0.0109],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0152, 0.0113, 0.0048, 0.0183, 0.0100, 0.0148, 0.0050, 0.0136,
         0.0057, 0.0243, 0.0075, 0.0137, 0.0105, 0.0109, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0193],
        [0.0320],
        [0.0256],
        [0.0163],
        [0.0298],
        [0.0125],
        [0.0246],
        [0.0152],
        [0.0181],
        [0.0196],
        [0.0337],
        [0.0117],
        [0.0224],
        [0.0104],
        [0.0085],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0320, 0.0256, 0.0163, 0.0298, 0.0125, 0.0246, 0.0152, 0.0181,
         0.0196, 0.0337, 0.0117, 0.0224, 0.0104, 0.0085, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0244, 0.0044, 0.0193],
        [0.0869, 0.0152, 0.0320],
        [0.0550, 0.0113, 0.0256],
        [0.0256, 0.0048, 0.0163],
        [0.0584, 0.0183, 0.0298],
        [0.0335, 0.0100, 0.0125],
        [0.0409, 0.0148, 0.0246],
        [0.0464, 0.0050, 0.0152],
        [0.0452, 0.0136, 0.0181],
        [0.0149, 0.0057, 0.0196],
        [0.0412, 0.0243, 0.0337],
        [0.0353, 0.0075, 0.0117],
        [0.0486, 0.0137, 0.0224],
        [0.0457, 0.0105, 0.0104],
        [0.0140, 0.0109, 0.0085],
        [0.0267, 0.0243, 0.0121]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0293],
        [0.0296],
        [0.0380],
        [0.0477],
        [0.0280],
        [0.0393],
        [0.0289],
        [0.0399],
        [0.0246],
        [0.0542],
        [0.0303],
        [0.0673],
        [0.0391],
        [0.0333],
        [0.0182],
        [0.0196]], device='cuda:0', dtype=torch.float16)/tensor([[0.0293, 0.0296, 0.0380, 0.0477, 0.0280, 0.0393, 0.0289, 0.0399, 0.0246,
         0.0542, 0.0303, 0.0673, 0.0391, 0.0333, 0.0182, 0.0196]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0259],
        [0.0070],
        [0.0131],
        [0.0089],
        [0.0071],
        [0.0079],
        [0.0106],
        [0.0109],
        [0.0045],
        [0.0209],
        [0.0132],
        [0.0199],
        [0.0046],
        [0.0045],
        [0.0087],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0259, 0.0070, 0.0131, 0.0089, 0.0071, 0.0079, 0.0106, 0.0109, 0.0045,
         0.0209, 0.0132, 0.0199, 0.0046, 0.0045, 0.0087, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0115],
        [0.0292],
        [0.0178],
        [0.0318],
        [0.0168],
        [0.0213],
        [0.0284],
        [0.0256],
        [0.0123],
        [0.0177],
        [0.0208],
        [0.0268],
        [0.0217],
        [0.0202],
        [0.0135],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0115, 0.0292, 0.0178, 0.0318, 0.0168, 0.0213, 0.0284, 0.0256, 0.0123,
         0.0177, 0.0208, 0.0268, 0.0217, 0.0202, 0.0135, 0.0088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0293, 0.0259, 0.0115],
        [0.0296, 0.0070, 0.0292],
        [0.0380, 0.0131, 0.0178],
        [0.0477, 0.0089, 0.0318],
        [0.0280, 0.0071, 0.0168],
        [0.0393, 0.0079, 0.0213],
        [0.0289, 0.0106, 0.0284],
        [0.0399, 0.0109, 0.0256],
        [0.0246, 0.0045, 0.0123],
        [0.0542, 0.0209, 0.0177],
        [0.0303, 0.0132, 0.0208],
        [0.0673, 0.0199, 0.0268],
        [0.0391, 0.0046, 0.0217],
        [0.0333, 0.0045, 0.0202],
        [0.0182, 0.0087, 0.0135],
        [0.0196, 0.0120, 0.0088]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0801],
        [0.0710],
        [0.0246],
        [0.0211],
        [0.0468],
        [0.0368],
        [0.0419],
        [0.0479],
        [0.0381],
        [0.0685],
        [0.0110],
        [0.0413],
        [0.0471],
        [0.0247],
        [0.0406],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0801, 0.0710, 0.0246, 0.0211, 0.0468, 0.0368, 0.0419, 0.0479, 0.0381,
         0.0685, 0.0110, 0.0413, 0.0471, 0.0247, 0.0406, 0.0237]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0250],
        [0.0101],
        [0.0038],
        [0.0145],
        [0.0056],
        [0.0170],
        [0.0111],
        [0.0129],
        [0.0118],
        [0.0245],
        [0.0095],
        [0.0204],
        [0.0077],
        [0.0039],
        [0.0226],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0250, 0.0101, 0.0038, 0.0145, 0.0056, 0.0170, 0.0111, 0.0129, 0.0118,
         0.0245, 0.0095, 0.0204, 0.0077, 0.0039, 0.0226, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0488],
        [0.0452],
        [0.0102],
        [0.0104],
        [0.0298],
        [0.0175],
        [0.0351],
        [0.0117],
        [0.0207],
        [0.0331],
        [0.0110],
        [0.0118],
        [0.0213],
        [0.0141],
        [0.0389],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0488, 0.0452, 0.0102, 0.0104, 0.0298, 0.0175, 0.0351, 0.0117, 0.0207,
         0.0331, 0.0110, 0.0118, 0.0213, 0.0141, 0.0389, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0801, 0.0250, 0.0488],
        [0.0710, 0.0101, 0.0452],
        [0.0246, 0.0038, 0.0102],
        [0.0211, 0.0145, 0.0104],
        [0.0468, 0.0056, 0.0298],
        [0.0368, 0.0170, 0.0175],
        [0.0419, 0.0111, 0.0351],
        [0.0479, 0.0129, 0.0117],
        [0.0381, 0.0118, 0.0207],
        [0.0685, 0.0245, 0.0331],
        [0.0110, 0.0095, 0.0110],
        [0.0413, 0.0204, 0.0118],
        [0.0471, 0.0077, 0.0213],
        [0.0247, 0.0039, 0.0141],
        [0.0406, 0.0226, 0.0389],
        [0.0237, 0.0046, 0.0136]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0228],
        [0.0134],
        [0.0199],
        [0.0232],
        [0.0306],
        [0.0654],
        [0.0310],
        [0.0181],
        [0.0750],
        [0.0367],
        [0.0158],
        [0.0208],
        [0.0481],
        [0.0196],
        [0.0351],
        [0.0610]], device='cuda:0', dtype=torch.float16)/tensor([[0.0228, 0.0134, 0.0199, 0.0232, 0.0306, 0.0654, 0.0310, 0.0181, 0.0750,
         0.0367, 0.0158, 0.0208, 0.0481, 0.0196, 0.0351, 0.0610]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0086],
        [0.0061],
        [0.0129],
        [0.0033],
        [0.0128],
        [0.0126],
        [0.0105],
        [0.0084],
        [0.0131],
        [0.0229],
        [0.0055],
        [0.0097],
        [0.0153],
        [0.0085],
        [0.0214],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0061, 0.0129, 0.0033, 0.0128, 0.0126, 0.0105, 0.0084, 0.0131,
         0.0229, 0.0055, 0.0097, 0.0153, 0.0085, 0.0214, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0096],
        [0.0152],
        [0.0175],
        [0.0182],
        [0.0278],
        [0.0096],
        [0.0164],
        [0.0267],
        [0.0126],
        [0.0194],
        [0.0132],
        [0.0170],
        [0.0236],
        [0.0116],
        [0.0208],
        [0.0279]], device='cuda:0', dtype=torch.float16)/tensor([[0.0096, 0.0152, 0.0175, 0.0182, 0.0278, 0.0096, 0.0164, 0.0267, 0.0126,
         0.0194, 0.0132, 0.0170, 0.0236, 0.0116, 0.0208, 0.0279]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0228, 0.0086, 0.0096],
        [0.0134, 0.0061, 0.0152],
        [0.0199, 0.0129, 0.0175],
        [0.0232, 0.0033, 0.0182],
        [0.0306, 0.0128, 0.0278],
        [0.0654, 0.0126, 0.0096],
        [0.0310, 0.0105, 0.0164],
        [0.0181, 0.0084, 0.0267],
        [0.0750, 0.0131, 0.0126],
        [0.0367, 0.0229, 0.0194],
        [0.0158, 0.0055, 0.0132],
        [0.0208, 0.0097, 0.0170],
        [0.0481, 0.0153, 0.0236],
        [0.0196, 0.0085, 0.0116],
        [0.0351, 0.0214, 0.0208],
        [0.0610, 0.0189, 0.0279]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0369],
        [0.0570],
        [0.0582],
        [0.0569],
        [0.1116],
        [0.0096],
        [0.0911],
        [0.0304],
        [0.0367],
        [0.0154],
        [0.0609],
        [0.0209],
        [0.0164],
        [0.0278],
        [0.0193],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0369, 0.0570, 0.0582, 0.0569, 0.1116, 0.0096, 0.0911, 0.0304, 0.0367,
         0.0154, 0.0609, 0.0209, 0.0164, 0.0278, 0.0193, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0178],
        [0.0141],
        [0.0157],
        [0.0216],
        [0.0398],
        [0.0044],
        [0.0152],
        [0.0123],
        [0.0132],
        [0.0140],
        [0.0168],
        [0.0073],
        [0.0133],
        [0.0059],
        [0.0058],
        [0.0120]], device='cuda:0', dtype=torch.float16)/tensor([[0.0178, 0.0141, 0.0157, 0.0216, 0.0398, 0.0044, 0.0152, 0.0123, 0.0132,
         0.0140, 0.0168, 0.0073, 0.0133, 0.0059, 0.0058, 0.0120]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0263],
        [0.0291],
        [0.0243],
        [0.0298],
        [0.0515],
        [0.0072],
        [0.0462],
        [0.0156],
        [0.0073],
        [0.0122],
        [0.0270],
        [0.0145],
        [0.0145],
        [0.0191],
        [0.0213],
        [0.0087]], device='cuda:0', dtype=torch.float16)/tensor([[0.0263, 0.0291, 0.0243, 0.0298, 0.0515, 0.0072, 0.0462, 0.0156, 0.0073,
         0.0122, 0.0270, 0.0145, 0.0145, 0.0191, 0.0213, 0.0087]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0369, 0.0178, 0.0263],
        [0.0570, 0.0141, 0.0291],
        [0.0582, 0.0157, 0.0243],
        [0.0569, 0.0216, 0.0298],
        [0.1116, 0.0398, 0.0515],
        [0.0096, 0.0044, 0.0072],
        [0.0911, 0.0152, 0.0462],
        [0.0304, 0.0123, 0.0156],
        [0.0367, 0.0132, 0.0073],
        [0.0154, 0.0140, 0.0122],
        [0.0609, 0.0168, 0.0270],
        [0.0209, 0.0073, 0.0145],
        [0.0164, 0.0133, 0.0145],
        [0.0278, 0.0059, 0.0191],
        [0.0193, 0.0058, 0.0213],
        [0.0231, 0.0120, 0.0087]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0280],
        [0.0279],
        [0.0444],
        [0.0237],
        [0.0176],
        [0.0415]], device='cuda:0', dtype=torch.float16)/tensor([[0.0280, 0.0279, 0.0444, 0.0237, 0.0176, 0.0415]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0049],
        [0.0029],
        [0.0235],
        [0.0170],
        [0.0051],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0049, 0.0029, 0.0235, 0.0170, 0.0051, 0.0121]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0087],
        [0.0098],
        [0.0155],
        [0.0272],
        [0.0142],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0098, 0.0155, 0.0272, 0.0142, 0.0195]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0280, 0.0049, 0.0087],
        [0.0279, 0.0029, 0.0098],
        [0.0444, 0.0235, 0.0155],
        [0.0237, 0.0170, 0.0272],
        [0.0176, 0.0051, 0.0142],
        [0.0415, 0.0121, 0.0195]], device='cuda:0')
acc:  0.36363636363636365
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 1 and batchsize 16: 0:03:02.794532
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 324.86it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0892],
        [0.1671],
        [0.1300],
        [0.0518],
        [0.0897],
        [0.1622],
        [0.0534],
        [0.1101],
        [0.0933],
        [0.0623],
        [0.0806],
        [0.0521],
        [0.0978],
        [0.0754],
        [0.1326],
        [0.0612]], device='cuda:0', dtype=torch.float16)/tensor([[0.0892, 0.1671, 0.1300, 0.0518, 0.0897, 0.1622, 0.0534, 0.1101, 0.0933,
         0.0623, 0.0806, 0.0521, 0.0978, 0.0754, 0.1326, 0.0612]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0295],
        [0.0376],
        [0.0451],
        [0.0249],
        [0.0287],
        [0.0172],
        [0.0617],
        [0.0411],
        [0.0311],
        [0.0368],
        [0.0366],
        [0.0395],
        [0.0222],
        [0.0436],
        [0.0528],
        [0.0354]], device='cuda:0', dtype=torch.float16)/tensor([[0.0295, 0.0376, 0.0451, 0.0249, 0.0287, 0.0172, 0.0617, 0.0411, 0.0311,
         0.0368, 0.0366, 0.0395, 0.0222, 0.0436, 0.0528, 0.0354]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0107],
        [0.0577],
        [0.0278],
        [0.0212],
        [0.0237],
        [0.0280],
        [0.0328],
        [0.0445],
        [0.0180],
        [0.0537],
        [0.0183],
        [0.0393],
        [0.0172],
        [0.0665],
        [0.0612],
        [0.0305]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0577, 0.0278, 0.0212, 0.0237, 0.0280, 0.0328, 0.0445, 0.0180,
         0.0537, 0.0183, 0.0393, 0.0172, 0.0665, 0.0612, 0.0305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0892, 0.0295, 0.0107],
        [0.1671, 0.0376, 0.0577],
        [0.1300, 0.0451, 0.0278],
        [0.0518, 0.0249, 0.0212],
        [0.0897, 0.0287, 0.0237],
        [0.1622, 0.0172, 0.0280],
        [0.0534, 0.0617, 0.0328],
        [0.1101, 0.0411, 0.0445],
        [0.0933, 0.0311, 0.0180],
        [0.0623, 0.0368, 0.0537],
        [0.0806, 0.0366, 0.0183],
        [0.0521, 0.0395, 0.0393],
        [0.0978, 0.0222, 0.0172],
        [0.0754, 0.0436, 0.0665],
        [0.1326, 0.0528, 0.0612],
        [0.0612, 0.0354, 0.0305]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0819],
        [0.1220],
        [0.1393],
        [0.0746],
        [0.0565],
        [0.0662],
        [0.0502],
        [0.0652],
        [0.0854],
        [0.0628],
        [0.0631],
        [0.0609],
        [0.0859],
        [0.0341],
        [0.0739],
        [0.1290]], device='cuda:0', dtype=torch.float16)/tensor([[0.0819, 0.1220, 0.1393, 0.0746, 0.0565, 0.0662, 0.0502, 0.0652, 0.0854,
         0.0628, 0.0631, 0.0609, 0.0859, 0.0341, 0.0739, 0.1290]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0595],
        [0.0297],
        [0.0241],
        [0.0476],
        [0.0274],
        [0.0753],
        [0.0341],
        [0.0359],
        [0.0490],
        [0.0396],
        [0.0197],
        [0.0134],
        [0.0287],
        [0.0461],
        [0.0382],
        [0.0298]], device='cuda:0', dtype=torch.float16)/tensor([[0.0595, 0.0297, 0.0241, 0.0476, 0.0274, 0.0753, 0.0341, 0.0359, 0.0490,
         0.0396, 0.0197, 0.0134, 0.0287, 0.0461, 0.0382, 0.0298]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0102],
        [0.0117],
        [0.0079],
        [0.0355],
        [0.0269],
        [0.0247],
        [0.0127],
        [0.0249],
        [0.0326],
        [0.0089],
        [0.0141],
        [0.0059],
        [0.0150],
        [0.0142],
        [0.0410],
        [0.0136]], device='cuda:0', dtype=torch.float16)/tensor([[0.0102, 0.0117, 0.0079, 0.0355, 0.0269, 0.0247, 0.0127, 0.0249, 0.0326,
         0.0089, 0.0141, 0.0059, 0.0150, 0.0142, 0.0410, 0.0136]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0819, 0.0595, 0.0102],
        [0.1220, 0.0297, 0.0117],
        [0.1393, 0.0241, 0.0079],
        [0.0746, 0.0476, 0.0355],
        [0.0565, 0.0274, 0.0269],
        [0.0662, 0.0753, 0.0247],
        [0.0502, 0.0341, 0.0127],
        [0.0652, 0.0359, 0.0249],
        [0.0854, 0.0490, 0.0326],
        [0.0628, 0.0396, 0.0089],
        [0.0631, 0.0197, 0.0141],
        [0.0609, 0.0134, 0.0059],
        [0.0859, 0.0287, 0.0150],
        [0.0341, 0.0461, 0.0142],
        [0.0739, 0.0382, 0.0410],
        [0.1290, 0.0298, 0.0136]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1368],
        [0.1201],
        [0.0541],
        [0.1030],
        [0.1066],
        [0.1251],
        [0.0745],
        [0.0740],
        [0.0873],
        [0.0915],
        [0.0778],
        [0.0826],
        [0.0851],
        [0.0380],
        [0.0797],
        [0.1062]], device='cuda:0', dtype=torch.float16)/tensor([[0.1368, 0.1201, 0.0541, 0.1030, 0.1066, 0.1251, 0.0745, 0.0740, 0.0873,
         0.0915, 0.0778, 0.0826, 0.0851, 0.0380, 0.0797, 0.1062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0607],
        [0.0450],
        [0.0209],
        [0.0625],
        [0.0300],
        [0.0122],
        [0.0668],
        [0.0299],
        [0.0312],
        [0.0284],
        [0.0642],
        [0.0164],
        [0.0197],
        [0.0329],
        [0.0226],
        [0.0471]], device='cuda:0', dtype=torch.float16)/tensor([[0.0607, 0.0450, 0.0209, 0.0625, 0.0300, 0.0122, 0.0668, 0.0299, 0.0312,
         0.0284, 0.0642, 0.0164, 0.0197, 0.0329, 0.0226, 0.0471]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0371],
        [0.0295],
        [0.0237],
        [0.0282],
        [0.0126],
        [0.0171],
        [0.0405],
        [0.0043],
        [0.0345],
        [0.0393],
        [0.0164],
        [0.0285],
        [0.0180],
        [0.0318],
        [0.0211],
        [0.0153]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0295, 0.0237, 0.0282, 0.0126, 0.0171, 0.0405, 0.0043, 0.0345,
         0.0393, 0.0164, 0.0285, 0.0180, 0.0318, 0.0211, 0.0153]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1368, 0.0607, 0.0371],
        [0.1201, 0.0450, 0.0295],
        [0.0541, 0.0209, 0.0237],
        [0.1030, 0.0625, 0.0282],
        [0.1066, 0.0300, 0.0126],
        [0.1251, 0.0122, 0.0171],
        [0.0745, 0.0668, 0.0405],
        [0.0740, 0.0299, 0.0043],
        [0.0873, 0.0312, 0.0345],
        [0.0915, 0.0284, 0.0393],
        [0.0778, 0.0642, 0.0164],
        [0.0826, 0.0164, 0.0285],
        [0.0851, 0.0197, 0.0180],
        [0.0380, 0.0329, 0.0318],
        [0.0797, 0.0226, 0.0211],
        [0.1062, 0.0471, 0.0153]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0745],
        [0.0418],
        [0.0369],
        [0.0333],
        [0.0580],
        [0.0133],
        [0.0513],
        [0.0702],
        [0.0864],
        [0.0489],
        [0.0462],
        [0.1041],
        [0.0864],
        [0.0730],
        [0.1112],
        [0.1058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0745, 0.0418, 0.0369, 0.0333, 0.0580, 0.0133, 0.0513, 0.0702, 0.0864,
         0.0489, 0.0462, 0.1041, 0.0864, 0.0730, 0.1112, 0.1058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0401],
        [0.0491],
        [0.0313],
        [0.0341],
        [0.0370],
        [0.0330],
        [0.0526],
        [0.0498],
        [0.0238],
        [0.0264],
        [0.0327],
        [0.0317],
        [0.0224],
        [0.0765],
        [0.0317],
        [0.0320]], device='cuda:0', dtype=torch.float16)/tensor([[0.0401, 0.0491, 0.0313, 0.0341, 0.0370, 0.0330, 0.0526, 0.0498, 0.0238,
         0.0264, 0.0327, 0.0317, 0.0224, 0.0765, 0.0317, 0.0320]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0140],
        [0.0522],
        [0.0291],
        [0.0031],
        [0.0291],
        [0.0060],
        [0.0477],
        [0.0394],
        [0.0189],
        [0.0226],
        [0.0225],
        [0.0323],
        [0.0258],
        [0.0111],
        [0.0209],
        [0.0632]], device='cuda:0', dtype=torch.float16)/tensor([[0.0140, 0.0522, 0.0291, 0.0031, 0.0291, 0.0060, 0.0477, 0.0394, 0.0189,
         0.0226, 0.0225, 0.0323, 0.0258, 0.0111, 0.0209, 0.0632]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0745, 0.0401, 0.0140],
        [0.0418, 0.0491, 0.0522],
        [0.0369, 0.0313, 0.0291],
        [0.0333, 0.0341, 0.0031],
        [0.0580, 0.0370, 0.0291],
        [0.0133, 0.0330, 0.0060],
        [0.0513, 0.0526, 0.0477],
        [0.0702, 0.0498, 0.0394],
        [0.0864, 0.0238, 0.0189],
        [0.0489, 0.0264, 0.0226],
        [0.0462, 0.0327, 0.0225],
        [0.1041, 0.0317, 0.0323],
        [0.0864, 0.0224, 0.0258],
        [0.0730, 0.0765, 0.0111],
        [0.1112, 0.0317, 0.0209],
        [0.1058, 0.0320, 0.0632]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0966],
        [0.0879],
        [0.0279],
        [0.1246],
        [0.0536],
        [0.0447],
        [0.0551],
        [0.0792],
        [0.0357],
        [0.0663],
        [0.1090],
        [0.0583],
        [0.0833],
        [0.0793],
        [0.0645],
        [0.1144]], device='cuda:0', dtype=torch.float16)/tensor([[0.0966, 0.0879, 0.0279, 0.1246, 0.0536, 0.0447, 0.0551, 0.0792, 0.0357,
         0.0663, 0.1090, 0.0583, 0.0833, 0.0793, 0.0645, 0.1144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0501],
        [0.0338],
        [0.0123],
        [0.0316],
        [0.0310],
        [0.0317],
        [0.0261],
        [0.0542],
        [0.0224],
        [0.0250],
        [0.0303],
        [0.0358],
        [0.0378],
        [0.0221],
        [0.0535],
        [0.0381]], device='cuda:0', dtype=torch.float16)/tensor([[0.0501, 0.0338, 0.0123, 0.0316, 0.0310, 0.0317, 0.0261, 0.0542, 0.0224,
         0.0250, 0.0303, 0.0358, 0.0378, 0.0221, 0.0535, 0.0381]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0148],
        [0.0576],
        [0.0028],
        [0.0202],
        [0.0133],
        [0.0216],
        [0.0131],
        [0.0448],
        [0.0244],
        [0.0404],
        [0.0424],
        [0.0363],
        [0.0211],
        [0.0266],
        [0.0301],
        [0.0417]], device='cuda:0', dtype=torch.float16)/tensor([[0.0148, 0.0576, 0.0028, 0.0202, 0.0133, 0.0216, 0.0131, 0.0448, 0.0244,
         0.0404, 0.0424, 0.0363, 0.0211, 0.0266, 0.0301, 0.0417]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0966, 0.0501, 0.0148],
        [0.0879, 0.0338, 0.0576],
        [0.0279, 0.0123, 0.0028],
        [0.1246, 0.0316, 0.0202],
        [0.0536, 0.0310, 0.0133],
        [0.0447, 0.0317, 0.0216],
        [0.0551, 0.0261, 0.0131],
        [0.0792, 0.0542, 0.0448],
        [0.0357, 0.0224, 0.0244],
        [0.0663, 0.0250, 0.0404],
        [0.1090, 0.0303, 0.0424],
        [0.0583, 0.0358, 0.0363],
        [0.0833, 0.0378, 0.0211],
        [0.0793, 0.0221, 0.0266],
        [0.0645, 0.0535, 0.0301],
        [0.1144, 0.0381, 0.0417]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0955],
        [0.1742],
        [0.0497],
        [0.1520],
        [0.0400],
        [0.0423],
        [0.0761],
        [0.0317],
        [0.1255],
        [0.0435],
        [0.0566],
        [0.0600],
        [0.0616],
        [0.0412],
        [0.0195],
        [0.1283]], device='cuda:0', dtype=torch.float16)/tensor([[0.0955, 0.1742, 0.0497, 0.1520, 0.0400, 0.0423, 0.0761, 0.0317, 0.1255,
         0.0435, 0.0566, 0.0600, 0.0616, 0.0412, 0.0195, 0.1283]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0160],
        [0.0118],
        [0.0251],
        [0.0475],
        [0.0203],
        [0.0288],
        [0.0453],
        [0.0284],
        [0.0572],
        [0.0191],
        [0.0506],
        [0.0447],
        [0.0447],
        [0.0428],
        [0.0378],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0118, 0.0251, 0.0475, 0.0203, 0.0288, 0.0453, 0.0284, 0.0572,
         0.0191, 0.0506, 0.0447, 0.0447, 0.0428, 0.0378, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0417],
        [0.0616],
        [0.0062],
        [0.0501],
        [0.0184],
        [0.0039],
        [0.0327],
        [0.0146],
        [0.0368],
        [0.0148],
        [0.0262],
        [0.0045],
        [0.0368],
        [0.0214],
        [0.0039],
        [0.0466]], device='cuda:0', dtype=torch.float16)/tensor([[0.0417, 0.0616, 0.0062, 0.0501, 0.0184, 0.0039, 0.0327, 0.0146, 0.0368,
         0.0148, 0.0262, 0.0045, 0.0368, 0.0214, 0.0039, 0.0466]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0955, 0.0160, 0.0417],
        [0.1742, 0.0118, 0.0616],
        [0.0497, 0.0251, 0.0062],
        [0.1520, 0.0475, 0.0501],
        [0.0400, 0.0203, 0.0184],
        [0.0423, 0.0288, 0.0039],
        [0.0761, 0.0453, 0.0327],
        [0.0317, 0.0284, 0.0146],
        [0.1255, 0.0572, 0.0368],
        [0.0435, 0.0191, 0.0148],
        [0.0566, 0.0506, 0.0262],
        [0.0600, 0.0447, 0.0045],
        [0.0616, 0.0447, 0.0368],
        [0.0412, 0.0428, 0.0214],
        [0.0195, 0.0378, 0.0039],
        [0.1283, 0.0275, 0.0466]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0350],
        [0.1189],
        [0.0928],
        [0.0956],
        [0.1735],
        [0.0269],
        [0.1097],
        [0.0729],
        [0.1100],
        [0.0784],
        [0.1051],
        [0.0323],
        [0.0512],
        [0.0363],
        [0.0562],
        [0.0769]], device='cuda:0', dtype=torch.float16)/tensor([[0.0350, 0.1189, 0.0928, 0.0956, 0.1735, 0.0269, 0.1097, 0.0729, 0.1100,
         0.0784, 0.1051, 0.0323, 0.0512, 0.0363, 0.0562, 0.0769]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0150],
        [0.0670],
        [0.0781],
        [0.0524],
        [0.0285],
        [0.0663],
        [0.0442],
        [0.0350],
        [0.0473],
        [0.0319],
        [0.0256],
        [0.0202],
        [0.0543],
        [0.0250],
        [0.0280],
        [0.0351]], device='cuda:0', dtype=torch.float16)/tensor([[0.0150, 0.0670, 0.0781, 0.0524, 0.0285, 0.0663, 0.0442, 0.0350, 0.0473,
         0.0319, 0.0256, 0.0202, 0.0543, 0.0250, 0.0280, 0.0351]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0186],
        [0.0321],
        [0.0466],
        [0.0086],
        [0.0059],
        [0.0174],
        [0.0196],
        [0.0406],
        [0.0075],
        [0.0263],
        [0.0108],
        [0.0307],
        [0.0193],
        [0.0338],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0186, 0.0321, 0.0466, 0.0086, 0.0059, 0.0174, 0.0196, 0.0406,
         0.0075, 0.0263, 0.0108, 0.0307, 0.0193, 0.0338, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0350, 0.0150, 0.0034],
        [0.1189, 0.0670, 0.0186],
        [0.0928, 0.0781, 0.0321],
        [0.0956, 0.0524, 0.0466],
        [0.1735, 0.0285, 0.0086],
        [0.0269, 0.0663, 0.0059],
        [0.1097, 0.0442, 0.0174],
        [0.0729, 0.0350, 0.0196],
        [0.1100, 0.0473, 0.0406],
        [0.0784, 0.0319, 0.0075],
        [0.1051, 0.0256, 0.0263],
        [0.0323, 0.0202, 0.0108],
        [0.0512, 0.0543, 0.0307],
        [0.0363, 0.0250, 0.0193],
        [0.0562, 0.0280, 0.0338],
        [0.0769, 0.0351, 0.0124]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0985],
        [0.0876],
        [0.0967],
        [0.1224],
        [0.0916],
        [0.0903],
        [0.0992],
        [0.1147],
        [0.0627],
        [0.2281],
        [0.0731],
        [0.0597],
        [0.0743],
        [0.0790],
        [0.0580],
        [0.0831]], device='cuda:0', dtype=torch.float16)/tensor([[0.0985, 0.0876, 0.0967, 0.1224, 0.0916, 0.0903, 0.0992, 0.1147, 0.0627,
         0.2281, 0.0731, 0.0597, 0.0743, 0.0790, 0.0580, 0.0831]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0420],
        [0.0270],
        [0.0257],
        [0.0340],
        [0.0264],
        [0.0237],
        [0.0379],
        [0.0735],
        [0.0331],
        [0.0242],
        [0.0470],
        [0.0254],
        [0.0199],
        [0.0529],
        [0.0397],
        [0.0324]], device='cuda:0', dtype=torch.float16)/tensor([[0.0420, 0.0270, 0.0257, 0.0340, 0.0264, 0.0237, 0.0379, 0.0735, 0.0331,
         0.0242, 0.0470, 0.0254, 0.0199, 0.0529, 0.0397, 0.0324]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0149],
        [0.0304],
        [0.0260],
        [0.0552],
        [0.0285],
        [0.0088],
        [0.0210],
        [0.0451],
        [0.0097],
        [0.0753],
        [0.0103],
        [0.0101],
        [0.0103],
        [0.0254],
        [0.0899],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0149, 0.0304, 0.0260, 0.0552, 0.0285, 0.0088, 0.0210, 0.0451, 0.0097,
         0.0753, 0.0103, 0.0101, 0.0103, 0.0254, 0.0899, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0985, 0.0420, 0.0149],
        [0.0876, 0.0270, 0.0304],
        [0.0967, 0.0257, 0.0260],
        [0.1224, 0.0340, 0.0552],
        [0.0916, 0.0264, 0.0285],
        [0.0903, 0.0237, 0.0088],
        [0.0992, 0.0379, 0.0210],
        [0.1147, 0.0735, 0.0451],
        [0.0627, 0.0331, 0.0097],
        [0.2281, 0.0242, 0.0753],
        [0.0731, 0.0470, 0.0103],
        [0.0597, 0.0254, 0.0101],
        [0.0743, 0.0199, 0.0103],
        [0.0790, 0.0529, 0.0254],
        [0.0580, 0.0397, 0.0899],
        [0.0831, 0.0324, 0.0231]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0992],
        [0.0871],
        [0.0817],
        [0.1360],
        [0.1220],
        [0.0593],
        [0.0597],
        [0.0494],
        [0.0979],
        [0.0756],
        [0.1182],
        [0.0644],
        [0.0685],
        [0.0829],
        [0.0861],
        [0.0625]], device='cuda:0', dtype=torch.float16)/tensor([[0.0992, 0.0871, 0.0817, 0.1360, 0.1220, 0.0593, 0.0597, 0.0494, 0.0979,
         0.0756, 0.1182, 0.0644, 0.0685, 0.0829, 0.0861, 0.0625]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0277],
        [0.0303],
        [0.0312],
        [0.0326],
        [0.0278],
        [0.0316],
        [0.0461],
        [0.0464],
        [0.0468],
        [0.0302],
        [0.0258],
        [0.0354],
        [0.0386],
        [0.0453],
        [0.0157],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0277, 0.0303, 0.0312, 0.0326, 0.0278, 0.0316, 0.0461, 0.0464, 0.0468,
         0.0302, 0.0258, 0.0354, 0.0386, 0.0453, 0.0157, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0382],
        [0.0665],
        [0.0120],
        [0.0331],
        [0.0296],
        [0.0354],
        [0.0039],
        [0.0443],
        [0.0204],
        [0.0208],
        [0.0128],
        [0.0273],
        [0.0278],
        [0.0040],
        [0.0196],
        [0.0512]], device='cuda:0', dtype=torch.float16)/tensor([[0.0382, 0.0665, 0.0120, 0.0331, 0.0296, 0.0354, 0.0039, 0.0443, 0.0204,
         0.0208, 0.0128, 0.0273, 0.0278, 0.0040, 0.0196, 0.0512]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0992, 0.0277, 0.0382],
        [0.0871, 0.0303, 0.0665],
        [0.0817, 0.0312, 0.0120],
        [0.1360, 0.0326, 0.0331],
        [0.1220, 0.0278, 0.0296],
        [0.0593, 0.0316, 0.0354],
        [0.0597, 0.0461, 0.0039],
        [0.0494, 0.0464, 0.0443],
        [0.0979, 0.0468, 0.0204],
        [0.0756, 0.0302, 0.0208],
        [0.1182, 0.0258, 0.0128],
        [0.0644, 0.0354, 0.0273],
        [0.0685, 0.0386, 0.0278],
        [0.0829, 0.0453, 0.0040],
        [0.0861, 0.0157, 0.0196],
        [0.0625, 0.0423, 0.0512]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0458],
        [0.1001],
        [0.0696],
        [0.0368],
        [0.1022],
        [0.0460],
        [0.0499],
        [0.1018],
        [0.0719],
        [0.0900],
        [0.0430],
        [0.0765],
        [0.1049],
        [0.0701],
        [0.0549],
        [0.0435]], device='cuda:0', dtype=torch.float16)/tensor([[0.0458, 0.1001, 0.0696, 0.0368, 0.1022, 0.0460, 0.0499, 0.1018, 0.0719,
         0.0900, 0.0430, 0.0765, 0.1049, 0.0701, 0.0549, 0.0435]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0531],
        [0.0320],
        [0.0249],
        [0.0199],
        [0.0166],
        [0.0511],
        [0.0285],
        [0.0204],
        [0.0248],
        [0.0186],
        [0.0278],
        [0.0492],
        [0.0454],
        [0.0424],
        [0.0361],
        [0.0403]], device='cuda:0', dtype=torch.float16)/tensor([[0.0531, 0.0320, 0.0249, 0.0199, 0.0166, 0.0511, 0.0285, 0.0204, 0.0248,
         0.0186, 0.0278, 0.0492, 0.0454, 0.0424, 0.0361, 0.0403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0138],
        [0.0371],
        [0.0274],
        [0.0281],
        [0.0143],
        [0.0115],
        [0.0160],
        [0.0163],
        [0.0366],
        [0.0451],
        [0.0312],
        [0.0239],
        [0.0344],
        [0.0177],
        [0.0389],
        [0.0179]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0371, 0.0274, 0.0281, 0.0143, 0.0115, 0.0160, 0.0163, 0.0366,
         0.0451, 0.0312, 0.0239, 0.0344, 0.0177, 0.0389, 0.0179]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0458, 0.0531, 0.0138],
        [0.1001, 0.0320, 0.0371],
        [0.0696, 0.0249, 0.0274],
        [0.0368, 0.0199, 0.0281],
        [0.1022, 0.0166, 0.0143],
        [0.0460, 0.0511, 0.0115],
        [0.0499, 0.0285, 0.0160],
        [0.1018, 0.0204, 0.0163],
        [0.0719, 0.0248, 0.0366],
        [0.0900, 0.0186, 0.0451],
        [0.0430, 0.0278, 0.0312],
        [0.0765, 0.0492, 0.0239],
        [0.1049, 0.0454, 0.0344],
        [0.0701, 0.0424, 0.0177],
        [0.0549, 0.0361, 0.0389],
        [0.0435, 0.0403, 0.0179]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0640],
        [0.1117],
        [0.1065],
        [0.0608],
        [0.0578],
        [0.0450],
        [0.0706],
        [0.0569],
        [0.0819],
        [0.0953],
        [0.0512],
        [0.0942],
        [0.0917],
        [0.0728],
        [0.0527],
        [0.0659]], device='cuda:0', dtype=torch.float16)/tensor([[0.0640, 0.1117, 0.1065, 0.0608, 0.0578, 0.0450, 0.0706, 0.0569, 0.0819,
         0.0953, 0.0512, 0.0942, 0.0917, 0.0728, 0.0527, 0.0659]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0454],
        [0.0602],
        [0.0362],
        [0.0301],
        [0.0403],
        [0.0323],
        [0.0440],
        [0.0635],
        [0.0623],
        [0.0245],
        [0.0246],
        [0.0330],
        [0.0467],
        [0.0438],
        [0.0246],
        [0.0517]], device='cuda:0', dtype=torch.float16)/tensor([[0.0454, 0.0602, 0.0362, 0.0301, 0.0403, 0.0323, 0.0440, 0.0635, 0.0623,
         0.0245, 0.0246, 0.0330, 0.0467, 0.0438, 0.0246, 0.0517]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0269],
        [0.0223],
        [0.0259],
        [0.0313],
        [0.0452],
        [0.0251],
        [0.0539],
        [0.0269],
        [0.0174],
        [0.0168],
        [0.0179],
        [0.0327],
        [0.0151],
        [0.0246],
        [0.0087],
        [0.0182]], device='cuda:0', dtype=torch.float16)/tensor([[0.0269, 0.0223, 0.0259, 0.0313, 0.0452, 0.0251, 0.0539, 0.0269, 0.0174,
         0.0168, 0.0179, 0.0327, 0.0151, 0.0246, 0.0087, 0.0182]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0640, 0.0454, 0.0269],
        [0.1117, 0.0602, 0.0223],
        [0.1065, 0.0362, 0.0259],
        [0.0608, 0.0301, 0.0313],
        [0.0578, 0.0403, 0.0452],
        [0.0450, 0.0323, 0.0251],
        [0.0706, 0.0440, 0.0539],
        [0.0569, 0.0635, 0.0269],
        [0.0819, 0.0623, 0.0174],
        [0.0953, 0.0245, 0.0168],
        [0.0512, 0.0246, 0.0179],
        [0.0942, 0.0330, 0.0327],
        [0.0917, 0.0467, 0.0151],
        [0.0728, 0.0438, 0.0246],
        [0.0527, 0.0246, 0.0087],
        [0.0659, 0.0517, 0.0182]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0497],
        [0.0842],
        [0.0690],
        [0.1968],
        [0.1370],
        [0.0626],
        [0.1014],
        [0.0394],
        [0.0952],
        [0.0977],
        [0.0565],
        [0.0322],
        [0.0283],
        [0.0527],
        [0.0963],
        [0.0603]], device='cuda:0', dtype=torch.float16)/tensor([[0.0497, 0.0842, 0.0690, 0.1968, 0.1370, 0.0626, 0.1014, 0.0394, 0.0952,
         0.0977, 0.0565, 0.0322, 0.0283, 0.0527, 0.0963, 0.0603]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0609],
        [0.0270],
        [0.0345],
        [0.0435],
        [0.0635],
        [0.0392],
        [0.0318],
        [0.0464],
        [0.0346],
        [0.0499],
        [0.0442],
        [0.0090],
        [0.0390],
        [0.0172],
        [0.0469],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0609, 0.0270, 0.0345, 0.0435, 0.0635, 0.0392, 0.0318, 0.0464, 0.0346,
         0.0499, 0.0442, 0.0090, 0.0390, 0.0172, 0.0469, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0491],
        [0.0322],
        [0.0045],
        [0.0619],
        [0.0360],
        [0.0197],
        [0.0242],
        [0.0222],
        [0.0182],
        [0.0194],
        [0.0024],
        [0.0040],
        [0.0706],
        [0.0120],
        [0.0204],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0491, 0.0322, 0.0045, 0.0619, 0.0360, 0.0197, 0.0242, 0.0222, 0.0182,
         0.0194, 0.0024, 0.0040, 0.0706, 0.0120, 0.0204, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0497, 0.0609, 0.0491],
        [0.0842, 0.0270, 0.0322],
        [0.0690, 0.0345, 0.0045],
        [0.1968, 0.0435, 0.0619],
        [0.1370, 0.0635, 0.0360],
        [0.0626, 0.0392, 0.0197],
        [0.1014, 0.0318, 0.0242],
        [0.0394, 0.0464, 0.0222],
        [0.0952, 0.0346, 0.0182],
        [0.0977, 0.0499, 0.0194],
        [0.0565, 0.0442, 0.0024],
        [0.0322, 0.0090, 0.0040],
        [0.0283, 0.0390, 0.0706],
        [0.0527, 0.0172, 0.0120],
        [0.0963, 0.0469, 0.0204],
        [0.0603, 0.0184, 0.0051]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0555],
        [0.0797],
        [0.1318],
        [0.0462],
        [0.0938],
        [0.0804]], device='cuda:0', dtype=torch.float16)/tensor([[0.0555, 0.0797, 0.1318, 0.0462, 0.0938, 0.0804]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0422],
        [0.0301],
        [0.0497],
        [0.0243],
        [0.0325],
        [0.0662]], device='cuda:0', dtype=torch.float16)/tensor([[0.0422, 0.0301, 0.0497, 0.0243, 0.0325, 0.0662]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0323],
        [0.0296],
        [0.0160],
        [0.0285],
        [0.0253],
        [0.0149]], device='cuda:0', dtype=torch.float16)/tensor([[0.0323, 0.0296, 0.0160, 0.0285, 0.0253, 0.0149]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0555, 0.0422, 0.0323],
        [0.0797, 0.0301, 0.0296],
        [0.1318, 0.0497, 0.0160],
        [0.0462, 0.0243, 0.0285],
        [0.0938, 0.0325, 0.0253],
        [0.0804, 0.0662, 0.0149]], device='cuda:0')
acc:  0.41414141414141414
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 2 and batchsize 16: 0:03:02.849470
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 323.68it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0209],
        [0.0292],
        [0.0480],
        [0.0289],
        [0.0175],
        [0.0255],
        [0.0362],
        [0.0215],
        [0.0128],
        [0.0063],
        [0.0518],
        [0.0290],
        [0.0175],
        [0.0450],
        [0.0271],
        [0.0247]], device='cuda:0', dtype=torch.float16)/tensor([[0.0209, 0.0292, 0.0480, 0.0289, 0.0175, 0.0255, 0.0362, 0.0215, 0.0128,
         0.0063, 0.0518, 0.0290, 0.0175, 0.0450, 0.0271, 0.0247]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0134],
        [0.0151],
        [0.0090],
        [0.0096],
        [0.0033],
        [0.0109],
        [0.0093],
        [0.0157],
        [0.0038],
        [0.0054],
        [0.0100],
        [0.0177],
        [0.0102],
        [0.0110],
        [0.0152],
        [0.0115]], device='cuda:0', dtype=torch.float16)/tensor([[0.0134, 0.0151, 0.0090, 0.0096, 0.0033, 0.0109, 0.0093, 0.0157, 0.0038,
         0.0054, 0.0100, 0.0177, 0.0102, 0.0110, 0.0152, 0.0115]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0052],
        [0.0155],
        [0.0142],
        [0.0100],
        [0.0069],
        [0.0135],
        [0.0130],
        [0.0196],
        [0.0049],
        [0.0035],
        [0.0032],
        [0.0105],
        [0.0137],
        [0.0202],
        [0.0207],
        [0.0159]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0155, 0.0142, 0.0100, 0.0069, 0.0135, 0.0130, 0.0196, 0.0049,
         0.0035, 0.0032, 0.0105, 0.0137, 0.0202, 0.0207, 0.0159]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0209, 0.0134, 0.0052],
        [0.0292, 0.0151, 0.0155],
        [0.0480, 0.0090, 0.0142],
        [0.0289, 0.0096, 0.0100],
        [0.0175, 0.0033, 0.0069],
        [0.0255, 0.0109, 0.0135],
        [0.0362, 0.0093, 0.0130],
        [0.0215, 0.0157, 0.0196],
        [0.0128, 0.0038, 0.0049],
        [0.0063, 0.0054, 0.0035],
        [0.0518, 0.0100, 0.0032],
        [0.0290, 0.0177, 0.0105],
        [0.0175, 0.0102, 0.0137],
        [0.0450, 0.0110, 0.0202],
        [0.0271, 0.0152, 0.0207],
        [0.0247, 0.0115, 0.0159]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0347],
        [0.0378],
        [0.0246],
        [0.0239],
        [0.0393],
        [0.0129],
        [0.0305],
        [0.0060],
        [0.0416],
        [0.0134],
        [0.0202],
        [0.0118],
        [0.0255],
        [0.0548],
        [0.0805],
        [0.0500]], device='cuda:0', dtype=torch.float16)/tensor([[0.0347, 0.0378, 0.0246, 0.0239, 0.0393, 0.0129, 0.0305, 0.0060, 0.0416,
         0.0134, 0.0202, 0.0118, 0.0255, 0.0548, 0.0805, 0.0500]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0052],
        [0.0083],
        [0.0066],
        [0.0070],
        [0.0066],
        [0.0060],
        [0.0031],
        [0.0034],
        [0.0097],
        [0.0068],
        [0.0031],
        [0.0047],
        [0.0051],
        [0.0077],
        [0.0074],
        [0.0146]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0083, 0.0066, 0.0070, 0.0066, 0.0060, 0.0031, 0.0034, 0.0097,
         0.0068, 0.0031, 0.0047, 0.0051, 0.0077, 0.0074, 0.0146]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0090],
        [0.0129],
        [0.0153],
        [0.0189],
        [0.0084],
        [0.0098],
        [0.0111],
        [0.0025],
        [0.0067],
        [0.0075],
        [0.0085],
        [0.0026],
        [0.0059],
        [0.0094],
        [0.0287],
        [0.0299]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0129, 0.0153, 0.0189, 0.0084, 0.0098, 0.0111, 0.0025, 0.0067,
         0.0075, 0.0085, 0.0026, 0.0059, 0.0094, 0.0287, 0.0299]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0347, 0.0052, 0.0090],
        [0.0378, 0.0083, 0.0129],
        [0.0246, 0.0066, 0.0153],
        [0.0239, 0.0070, 0.0189],
        [0.0393, 0.0066, 0.0084],
        [0.0129, 0.0060, 0.0098],
        [0.0305, 0.0031, 0.0111],
        [0.0060, 0.0034, 0.0025],
        [0.0416, 0.0097, 0.0067],
        [0.0134, 0.0068, 0.0075],
        [0.0202, 0.0031, 0.0085],
        [0.0118, 0.0047, 0.0026],
        [0.0255, 0.0051, 0.0059],
        [0.0548, 0.0077, 0.0094],
        [0.0805, 0.0074, 0.0287],
        [0.0500, 0.0146, 0.0299]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0158],
        [0.0410],
        [0.0433],
        [0.0437],
        [0.0296],
        [0.0374],
        [0.0336],
        [0.0330],
        [0.0348],
        [0.0219],
        [0.0228],
        [0.0314],
        [0.0497],
        [0.0275],
        [0.0633],
        [0.0263]], device='cuda:0', dtype=torch.float16)/tensor([[0.0158, 0.0410, 0.0433, 0.0437, 0.0296, 0.0374, 0.0336, 0.0330, 0.0348,
         0.0219, 0.0228, 0.0314, 0.0497, 0.0275, 0.0633, 0.0263]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0097],
        [0.0115],
        [0.0100],
        [0.0071],
        [0.0080],
        [0.0072],
        [0.0040],
        [0.0233],
        [0.0046],
        [0.0093],
        [0.0154],
        [0.0064],
        [0.0055],
        [0.0125],
        [0.0181],
        [0.0174]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0115, 0.0100, 0.0071, 0.0080, 0.0072, 0.0040, 0.0233, 0.0046,
         0.0093, 0.0154, 0.0064, 0.0055, 0.0125, 0.0181, 0.0174]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0159],
        [0.0098],
        [0.0104],
        [0.0130],
        [0.0085],
        [0.0162],
        [0.0143],
        [0.0175],
        [0.0136],
        [0.0075],
        [0.0246],
        [0.0116],
        [0.0206],
        [0.0146],
        [0.0274],
        [0.0271]], device='cuda:0', dtype=torch.float16)/tensor([[0.0159, 0.0098, 0.0104, 0.0130, 0.0085, 0.0162, 0.0143, 0.0175, 0.0136,
         0.0075, 0.0246, 0.0116, 0.0206, 0.0146, 0.0274, 0.0271]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0158, 0.0097, 0.0159],
        [0.0410, 0.0115, 0.0098],
        [0.0433, 0.0100, 0.0104],
        [0.0437, 0.0071, 0.0130],
        [0.0296, 0.0080, 0.0085],
        [0.0374, 0.0072, 0.0162],
        [0.0336, 0.0040, 0.0143],
        [0.0330, 0.0233, 0.0175],
        [0.0348, 0.0046, 0.0136],
        [0.0219, 0.0093, 0.0075],
        [0.0228, 0.0154, 0.0246],
        [0.0314, 0.0064, 0.0116],
        [0.0497, 0.0055, 0.0206],
        [0.0275, 0.0125, 0.0146],
        [0.0633, 0.0181, 0.0274],
        [0.0263, 0.0174, 0.0271]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0244],
        [0.0134],
        [0.0302],
        [0.0254],
        [0.0211],
        [0.0479],
        [0.0259],
        [0.0183],
        [0.0229],
        [0.0048],
        [0.0399],
        [0.0111],
        [0.0311],
        [0.0228],
        [0.0111],
        [0.0228]], device='cuda:0', dtype=torch.float16)/tensor([[0.0244, 0.0134, 0.0302, 0.0254, 0.0211, 0.0479, 0.0259, 0.0183, 0.0229,
         0.0048, 0.0399, 0.0111, 0.0311, 0.0228, 0.0111, 0.0228]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0092],
        [0.0081],
        [0.0133],
        [0.0093],
        [0.0160],
        [0.0073],
        [0.0097],
        [0.0063],
        [0.0032],
        [0.0147],
        [0.0048],
        [0.0071],
        [0.0097],
        [0.0057],
        [0.0076]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0092, 0.0081, 0.0133, 0.0093, 0.0160, 0.0073, 0.0097, 0.0063,
         0.0032, 0.0147, 0.0048, 0.0071, 0.0097, 0.0057, 0.0076]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0123],
        [0.0108],
        [0.0136],
        [0.0177],
        [0.0128],
        [0.0335],
        [0.0053],
        [0.0275],
        [0.0125],
        [0.0061],
        [0.0151],
        [0.0069],
        [0.0140],
        [0.0103],
        [0.0086],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0108, 0.0136, 0.0177, 0.0128, 0.0335, 0.0053, 0.0275, 0.0125,
         0.0061, 0.0151, 0.0069, 0.0140, 0.0103, 0.0086, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0244, 0.0077, 0.0123],
        [0.0134, 0.0092, 0.0108],
        [0.0302, 0.0081, 0.0136],
        [0.0254, 0.0133, 0.0177],
        [0.0211, 0.0093, 0.0128],
        [0.0479, 0.0160, 0.0335],
        [0.0259, 0.0073, 0.0053],
        [0.0183, 0.0097, 0.0275],
        [0.0229, 0.0063, 0.0125],
        [0.0048, 0.0032, 0.0061],
        [0.0399, 0.0147, 0.0151],
        [0.0111, 0.0048, 0.0069],
        [0.0311, 0.0071, 0.0140],
        [0.0228, 0.0097, 0.0103],
        [0.0111, 0.0057, 0.0086],
        [0.0228, 0.0076, 0.0085]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0256],
        [0.0276],
        [0.0233],
        [0.0111],
        [0.0124],
        [0.0411],
        [0.0325],
        [0.0093],
        [0.0236],
        [0.0142],
        [0.0307],
        [0.0446],
        [0.0186],
        [0.0159],
        [0.0257],
        [0.0696]], device='cuda:0', dtype=torch.float16)/tensor([[0.0256, 0.0276, 0.0233, 0.0111, 0.0124, 0.0411, 0.0325, 0.0093, 0.0236,
         0.0142, 0.0307, 0.0446, 0.0186, 0.0159, 0.0257, 0.0696]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0090],
        [0.0029],
        [0.0086],
        [0.0048],
        [0.0073],
        [0.0050],
        [0.0100],
        [0.0018],
        [0.0098],
        [0.0078],
        [0.0076],
        [0.0160],
        [0.0052],
        [0.0062],
        [0.0066],
        [0.0237]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0029, 0.0086, 0.0048, 0.0073, 0.0050, 0.0100, 0.0018, 0.0098,
         0.0078, 0.0076, 0.0160, 0.0052, 0.0062, 0.0066, 0.0237]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0226],
        [0.0109],
        [0.0162],
        [0.0084],
        [0.0079],
        [0.0083],
        [0.0164],
        [0.0046],
        [0.0109],
        [0.0071],
        [0.0144],
        [0.0132],
        [0.0064],
        [0.0172],
        [0.0031],
        [0.0302]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0109, 0.0162, 0.0084, 0.0079, 0.0083, 0.0164, 0.0046, 0.0109,
         0.0071, 0.0144, 0.0132, 0.0064, 0.0172, 0.0031, 0.0302]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0256, 0.0090, 0.0226],
        [0.0276, 0.0029, 0.0109],
        [0.0233, 0.0086, 0.0162],
        [0.0111, 0.0048, 0.0084],
        [0.0124, 0.0073, 0.0079],
        [0.0411, 0.0050, 0.0083],
        [0.0325, 0.0100, 0.0164],
        [0.0093, 0.0018, 0.0046],
        [0.0236, 0.0098, 0.0109],
        [0.0142, 0.0078, 0.0071],
        [0.0307, 0.0076, 0.0144],
        [0.0446, 0.0160, 0.0132],
        [0.0186, 0.0052, 0.0064],
        [0.0159, 0.0062, 0.0172],
        [0.0257, 0.0066, 0.0031],
        [0.0696, 0.0237, 0.0302]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0092],
        [0.0230],
        [0.0512],
        [0.0404],
        [0.0192],
        [0.0422],
        [0.0413],
        [0.0226],
        [0.0242],
        [0.0280],
        [0.0415],
        [0.0373],
        [0.0407],
        [0.0182],
        [0.0359],
        [0.0063]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0230, 0.0512, 0.0404, 0.0192, 0.0422, 0.0413, 0.0226, 0.0242,
         0.0280, 0.0415, 0.0373, 0.0407, 0.0182, 0.0359, 0.0063]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0067],
        [0.0124],
        [0.0082],
        [0.0046],
        [0.0087],
        [0.0181],
        [0.0079],
        [0.0058],
        [0.0047],
        [0.0157],
        [0.0090],
        [0.0126],
        [0.0045],
        [0.0089],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0067, 0.0124, 0.0082, 0.0046, 0.0087, 0.0181, 0.0079, 0.0058,
         0.0047, 0.0157, 0.0090, 0.0126, 0.0045, 0.0089, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0091],
        [0.0110],
        [0.0156],
        [0.0282],
        [0.0051],
        [0.0145],
        [0.0200],
        [0.0136],
        [0.0135],
        [0.0089],
        [0.0262],
        [0.0156],
        [0.0556],
        [0.0053],
        [0.0184],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0091, 0.0110, 0.0156, 0.0282, 0.0051, 0.0145, 0.0200, 0.0136, 0.0135,
         0.0089, 0.0262, 0.0156, 0.0556, 0.0053, 0.0184, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0092, 0.0077, 0.0091],
        [0.0230, 0.0067, 0.0110],
        [0.0512, 0.0124, 0.0156],
        [0.0404, 0.0082, 0.0282],
        [0.0192, 0.0046, 0.0051],
        [0.0422, 0.0087, 0.0145],
        [0.0413, 0.0181, 0.0200],
        [0.0226, 0.0079, 0.0136],
        [0.0242, 0.0058, 0.0135],
        [0.0280, 0.0047, 0.0089],
        [0.0415, 0.0157, 0.0262],
        [0.0373, 0.0090, 0.0156],
        [0.0407, 0.0126, 0.0556],
        [0.0182, 0.0045, 0.0053],
        [0.0359, 0.0089, 0.0184],
        [0.0063, 0.0036, 0.0030]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0199],
        [0.0364],
        [0.0299],
        [0.0526],
        [0.0249],
        [0.0262],
        [0.0462],
        [0.0585],
        [0.0424],
        [0.0212],
        [0.0186],
        [0.0273],
        [0.0445],
        [0.0334],
        [0.0404],
        [0.0318]], device='cuda:0', dtype=torch.float16)/tensor([[0.0199, 0.0364, 0.0299, 0.0526, 0.0249, 0.0262, 0.0462, 0.0585, 0.0424,
         0.0212, 0.0186, 0.0273, 0.0445, 0.0334, 0.0404, 0.0318]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0101],
        [0.0090],
        [0.0148],
        [0.0023],
        [0.0112],
        [0.0093],
        [0.0196],
        [0.0064],
        [0.0080],
        [0.0077],
        [0.0060],
        [0.0040],
        [0.0135],
        [0.0109],
        [0.0036]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0101, 0.0090, 0.0148, 0.0023, 0.0112, 0.0093, 0.0196, 0.0064,
         0.0080, 0.0077, 0.0060, 0.0040, 0.0135, 0.0109, 0.0036]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0046],
        [0.0078],
        [0.0094],
        [0.0169],
        [0.0055],
        [0.0214],
        [0.0096],
        [0.0246],
        [0.0120],
        [0.0121],
        [0.0095],
        [0.0093],
        [0.0102],
        [0.0216],
        [0.0146],
        [0.0108]], device='cuda:0', dtype=torch.float16)/tensor([[0.0046, 0.0078, 0.0094, 0.0169, 0.0055, 0.0214, 0.0096, 0.0246, 0.0120,
         0.0121, 0.0095, 0.0093, 0.0102, 0.0216, 0.0146, 0.0108]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0199, 0.0062, 0.0046],
        [0.0364, 0.0101, 0.0078],
        [0.0299, 0.0090, 0.0094],
        [0.0526, 0.0148, 0.0169],
        [0.0249, 0.0023, 0.0055],
        [0.0262, 0.0112, 0.0214],
        [0.0462, 0.0093, 0.0096],
        [0.0585, 0.0196, 0.0246],
        [0.0424, 0.0064, 0.0120],
        [0.0212, 0.0080, 0.0121],
        [0.0186, 0.0077, 0.0095],
        [0.0273, 0.0060, 0.0093],
        [0.0445, 0.0040, 0.0102],
        [0.0334, 0.0135, 0.0216],
        [0.0404, 0.0109, 0.0146],
        [0.0318, 0.0036, 0.0108]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0246],
        [0.0153],
        [0.0423],
        [0.0181],
        [0.0243],
        [0.0500],
        [0.0111],
        [0.0203],
        [0.0341],
        [0.0186],
        [0.0475],
        [0.0556],
        [0.0370],
        [0.0209],
        [0.0555],
        [0.0081]], device='cuda:0', dtype=torch.float16)/tensor([[0.0246, 0.0153, 0.0423, 0.0181, 0.0243, 0.0500, 0.0111, 0.0203, 0.0341,
         0.0186, 0.0475, 0.0556, 0.0370, 0.0209, 0.0555, 0.0081]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0076],
        [0.0116],
        [0.0078],
        [0.0141],
        [0.0021],
        [0.0088],
        [0.0125],
        [0.0094],
        [0.0084],
        [0.0080],
        [0.0091],
        [0.0125],
        [0.0068],
        [0.0066],
        [0.0080],
        [0.0026]], device='cuda:0', dtype=torch.float16)/tensor([[0.0076, 0.0116, 0.0078, 0.0141, 0.0021, 0.0088, 0.0125, 0.0094, 0.0084,
         0.0080, 0.0091, 0.0125, 0.0068, 0.0066, 0.0080, 0.0026]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0118],
        [0.0096],
        [0.0099],
        [0.0225],
        [0.0090],
        [0.0235],
        [0.0050],
        [0.0379],
        [0.0072],
        [0.0123],
        [0.0193],
        [0.0407],
        [0.0109],
        [0.0162],
        [0.0311],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0118, 0.0096, 0.0099, 0.0225, 0.0090, 0.0235, 0.0050, 0.0379, 0.0072,
         0.0123, 0.0193, 0.0407, 0.0109, 0.0162, 0.0311, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0246, 0.0076, 0.0118],
        [0.0153, 0.0116, 0.0096],
        [0.0423, 0.0078, 0.0099],
        [0.0181, 0.0141, 0.0225],
        [0.0243, 0.0021, 0.0090],
        [0.0500, 0.0088, 0.0235],
        [0.0111, 0.0125, 0.0050],
        [0.0203, 0.0094, 0.0379],
        [0.0341, 0.0084, 0.0072],
        [0.0186, 0.0080, 0.0123],
        [0.0475, 0.0091, 0.0193],
        [0.0556, 0.0125, 0.0407],
        [0.0370, 0.0068, 0.0109],
        [0.0209, 0.0066, 0.0162],
        [0.0555, 0.0080, 0.0311],
        [0.0081, 0.0026, 0.0030]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0390],
        [0.0424],
        [0.0657],
        [0.0567],
        [0.0456],
        [0.0149],
        [0.0197],
        [0.0441],
        [0.0371],
        [0.0084],
        [0.0353],
        [0.0198],
        [0.0542],
        [0.0321],
        [0.0231],
        [0.0472]], device='cuda:0', dtype=torch.float16)/tensor([[0.0390, 0.0424, 0.0657, 0.0567, 0.0456, 0.0149, 0.0197, 0.0441, 0.0371,
         0.0084, 0.0353, 0.0198, 0.0542, 0.0321, 0.0231, 0.0472]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0116],
        [0.0136],
        [0.0122],
        [0.0057],
        [0.0150],
        [0.0055],
        [0.0043],
        [0.0154],
        [0.0092],
        [0.0033],
        [0.0088],
        [0.0095],
        [0.0132],
        [0.0113],
        [0.0110],
        [0.0059]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0136, 0.0122, 0.0057, 0.0150, 0.0055, 0.0043, 0.0154, 0.0092,
         0.0033, 0.0088, 0.0095, 0.0132, 0.0113, 0.0110, 0.0059]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0306],
        [0.0264],
        [0.0434],
        [0.0362],
        [0.0352],
        [0.0056],
        [0.0173],
        [0.0282],
        [0.0108],
        [0.0012],
        [0.0132],
        [0.0119],
        [0.0250],
        [0.0179],
        [0.0372],
        [0.0215]], device='cuda:0', dtype=torch.float16)/tensor([[0.0306, 0.0264, 0.0434, 0.0362, 0.0352, 0.0056, 0.0173, 0.0282, 0.0108,
         0.0012, 0.0132, 0.0119, 0.0250, 0.0179, 0.0372, 0.0215]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0390, 0.0116, 0.0306],
        [0.0424, 0.0136, 0.0264],
        [0.0657, 0.0122, 0.0434],
        [0.0567, 0.0057, 0.0362],
        [0.0456, 0.0150, 0.0352],
        [0.0149, 0.0055, 0.0056],
        [0.0197, 0.0043, 0.0173],
        [0.0441, 0.0154, 0.0282],
        [0.0371, 0.0092, 0.0108],
        [0.0084, 0.0033, 0.0012],
        [0.0353, 0.0088, 0.0132],
        [0.0198, 0.0095, 0.0119],
        [0.0542, 0.0132, 0.0250],
        [0.0321, 0.0113, 0.0179],
        [0.0231, 0.0110, 0.0372],
        [0.0472, 0.0059, 0.0215]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0414],
        [0.0226],
        [0.0446],
        [0.0162],
        [0.0341],
        [0.0276],
        [0.0220],
        [0.0293],
        [0.0238],
        [0.0348],
        [0.0294],
        [0.0336],
        [0.0300],
        [0.0311],
        [0.0464],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0414, 0.0226, 0.0446, 0.0162, 0.0341, 0.0276, 0.0220, 0.0293, 0.0238,
         0.0348, 0.0294, 0.0336, 0.0300, 0.0311, 0.0464, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0116],
        [0.0060],
        [0.0112],
        [0.0042],
        [0.0068],
        [0.0111],
        [0.0117],
        [0.0095],
        [0.0036],
        [0.0144],
        [0.0095],
        [0.0077],
        [0.0102],
        [0.0053],
        [0.0071],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0060, 0.0112, 0.0042, 0.0068, 0.0111, 0.0117, 0.0095, 0.0036,
         0.0144, 0.0095, 0.0077, 0.0102, 0.0053, 0.0071, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0133],
        [0.0082],
        [0.0175],
        [0.0034],
        [0.0226],
        [0.0100],
        [0.0072],
        [0.0128],
        [0.0052],
        [0.0184],
        [0.0123],
        [0.0092],
        [0.0135],
        [0.0207],
        [0.0164],
        [0.0175]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0082, 0.0175, 0.0034, 0.0226, 0.0100, 0.0072, 0.0128, 0.0052,
         0.0184, 0.0123, 0.0092, 0.0135, 0.0207, 0.0164, 0.0175]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0414, 0.0116, 0.0133],
        [0.0226, 0.0060, 0.0082],
        [0.0446, 0.0112, 0.0175],
        [0.0162, 0.0042, 0.0034],
        [0.0341, 0.0068, 0.0226],
        [0.0276, 0.0111, 0.0100],
        [0.0220, 0.0117, 0.0072],
        [0.0293, 0.0095, 0.0128],
        [0.0238, 0.0036, 0.0052],
        [0.0348, 0.0144, 0.0184],
        [0.0294, 0.0095, 0.0123],
        [0.0336, 0.0077, 0.0092],
        [0.0300, 0.0102, 0.0135],
        [0.0311, 0.0053, 0.0207],
        [0.0464, 0.0071, 0.0164],
        [0.0341, 0.0094, 0.0175]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0380],
        [0.0263],
        [0.0475],
        [0.0214],
        [0.0350],
        [0.0173],
        [0.0221],
        [0.0115],
        [0.0553],
        [0.0271],
        [0.0276],
        [0.0312],
        [0.0078],
        [0.0110],
        [0.0040],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0263, 0.0475, 0.0214, 0.0350, 0.0173, 0.0221, 0.0115, 0.0553,
         0.0271, 0.0276, 0.0312, 0.0078, 0.0110, 0.0040, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0075],
        [0.0147],
        [0.0064],
        [0.0077],
        [0.0048],
        [0.0054],
        [0.0062],
        [0.0040],
        [0.0041],
        [0.0072],
        [0.0052],
        [0.0080],
        [0.0042],
        [0.0056],
        [0.0025],
        [0.0070]], device='cuda:0', dtype=torch.float16)/tensor([[0.0075, 0.0147, 0.0064, 0.0077, 0.0048, 0.0054, 0.0062, 0.0040, 0.0041,
         0.0072, 0.0052, 0.0080, 0.0042, 0.0056, 0.0025, 0.0070]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0165],
        [0.0078],
        [0.0096],
        [0.0110],
        [0.0106],
        [0.0083],
        [0.0136],
        [0.0092],
        [0.0261],
        [0.0114],
        [0.0089],
        [0.0155],
        [0.0025],
        [0.0041],
        [0.0011],
        [0.0079]], device='cuda:0', dtype=torch.float16)/tensor([[0.0165, 0.0078, 0.0096, 0.0110, 0.0106, 0.0083, 0.0136, 0.0092, 0.0261,
         0.0114, 0.0089, 0.0155, 0.0025, 0.0041, 0.0011, 0.0079]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0380, 0.0075, 0.0165],
        [0.0263, 0.0147, 0.0078],
        [0.0475, 0.0064, 0.0096],
        [0.0214, 0.0077, 0.0110],
        [0.0350, 0.0048, 0.0106],
        [0.0173, 0.0054, 0.0083],
        [0.0221, 0.0062, 0.0136],
        [0.0115, 0.0040, 0.0092],
        [0.0553, 0.0041, 0.0261],
        [0.0271, 0.0072, 0.0114],
        [0.0276, 0.0052, 0.0089],
        [0.0312, 0.0080, 0.0155],
        [0.0078, 0.0042, 0.0025],
        [0.0110, 0.0056, 0.0041],
        [0.0040, 0.0025, 0.0011],
        [0.0124, 0.0070, 0.0079]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0268],
        [0.0238],
        [0.0252],
        [0.0443],
        [0.0258],
        [0.0112],
        [0.0250],
        [0.0185],
        [0.0263],
        [0.0198],
        [0.0710],
        [0.0496],
        [0.0146],
        [0.0145],
        [0.0355],
        [0.0446]], device='cuda:0', dtype=torch.float16)/tensor([[0.0268, 0.0238, 0.0252, 0.0443, 0.0258, 0.0112, 0.0250, 0.0185, 0.0263,
         0.0198, 0.0710, 0.0496, 0.0146, 0.0145, 0.0355, 0.0446]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0153],
        [0.0074],
        [0.0034],
        [0.0125],
        [0.0150],
        [0.0076],
        [0.0157],
        [0.0055],
        [0.0073],
        [0.0084],
        [0.0101],
        [0.0062],
        [0.0045],
        [0.0069],
        [0.0030],
        [0.0162]], device='cuda:0', dtype=torch.float16)/tensor([[0.0153, 0.0074, 0.0034, 0.0125, 0.0150, 0.0076, 0.0157, 0.0055, 0.0073,
         0.0084, 0.0101, 0.0062, 0.0045, 0.0069, 0.0030, 0.0162]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0161],
        [0.0158],
        [0.0038],
        [0.0348],
        [0.0131],
        [0.0081],
        [0.0071],
        [0.0130],
        [0.0080],
        [0.0108],
        [0.0257],
        [0.0357],
        [0.0035],
        [0.0063],
        [0.0060],
        [0.0250]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0158, 0.0038, 0.0348, 0.0131, 0.0081, 0.0071, 0.0130, 0.0080,
         0.0108, 0.0257, 0.0357, 0.0035, 0.0063, 0.0060, 0.0250]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0268, 0.0153, 0.0161],
        [0.0238, 0.0074, 0.0158],
        [0.0252, 0.0034, 0.0038],
        [0.0443, 0.0125, 0.0348],
        [0.0258, 0.0150, 0.0131],
        [0.0112, 0.0076, 0.0081],
        [0.0250, 0.0157, 0.0071],
        [0.0185, 0.0055, 0.0130],
        [0.0263, 0.0073, 0.0080],
        [0.0198, 0.0084, 0.0108],
        [0.0710, 0.0101, 0.0257],
        [0.0496, 0.0062, 0.0357],
        [0.0146, 0.0045, 0.0035],
        [0.0145, 0.0069, 0.0063],
        [0.0355, 0.0030, 0.0060],
        [0.0446, 0.0162, 0.0250]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0707],
        [0.0288],
        [0.0210],
        [0.0367],
        [0.0580],
        [0.0398]], device='cuda:0', dtype=torch.float16)/tensor([[0.0707, 0.0288, 0.0210, 0.0367, 0.0580, 0.0398]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0093],
        [0.0074],
        [0.0093],
        [0.0084],
        [0.0110],
        [0.0117]], device='cuda:0', dtype=torch.float16)/tensor([[0.0093, 0.0074, 0.0093, 0.0084, 0.0110, 0.0117]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0204],
        [0.0073],
        [0.0087],
        [0.0113],
        [0.0117],
        [0.0163]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0073, 0.0087, 0.0113, 0.0117, 0.0163]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0707, 0.0093, 0.0204],
        [0.0288, 0.0074, 0.0073],
        [0.0210, 0.0093, 0.0087],
        [0.0367, 0.0084, 0.0113],
        [0.0580, 0.0110, 0.0117],
        [0.0398, 0.0117, 0.0163]], device='cuda:0')
acc:  0.35353535353535354
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 3 and batchsize 16: 0:03:03.016400
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 314.24it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0665],
        [0.0273],
        [0.1085],
        [0.0573],
        [0.0606],
        [0.0858],
        [0.0214],
        [0.0589],
        [0.0756],
        [0.0495],
        [0.0458],
        [0.0769],
        [0.1158],
        [0.0931],
        [0.0397],
        [0.0681]], device='cuda:0', dtype=torch.float16)/tensor([[0.0665, 0.0273, 0.1085, 0.0573, 0.0606, 0.0858, 0.0214, 0.0589, 0.0756,
         0.0495, 0.0458, 0.0769, 0.1158, 0.0931, 0.0397, 0.0681]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0182],
        [0.0204],
        [0.0250],
        [0.0180],
        [0.0132],
        [0.0154],
        [0.0115],
        [0.0071],
        [0.0257],
        [0.0181],
        [0.0200],
        [0.0214],
        [0.0228],
        [0.0198],
        [0.0084],
        [0.0209]], device='cuda:0', dtype=torch.float16)/tensor([[0.0182, 0.0204, 0.0250, 0.0180, 0.0132, 0.0154, 0.0115, 0.0071, 0.0257,
         0.0181, 0.0200, 0.0214, 0.0228, 0.0198, 0.0084, 0.0209]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0189],
        [0.0147],
        [0.0172],
        [0.0071],
        [0.0174],
        [0.0179],
        [0.0059],
        [0.0121],
        [0.0434],
        [0.0145],
        [0.0146],
        [0.0140],
        [0.0166],
        [0.0154],
        [0.0075],
        [0.0126]], device='cuda:0', dtype=torch.float16)/tensor([[0.0189, 0.0147, 0.0172, 0.0071, 0.0174, 0.0179, 0.0059, 0.0121, 0.0434,
         0.0145, 0.0146, 0.0140, 0.0166, 0.0154, 0.0075, 0.0126]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0665, 0.0182, 0.0189],
        [0.0273, 0.0204, 0.0147],
        [0.1085, 0.0250, 0.0172],
        [0.0573, 0.0180, 0.0071],
        [0.0606, 0.0132, 0.0174],
        [0.0858, 0.0154, 0.0179],
        [0.0214, 0.0115, 0.0059],
        [0.0589, 0.0071, 0.0121],
        [0.0756, 0.0257, 0.0434],
        [0.0495, 0.0181, 0.0145],
        [0.0458, 0.0200, 0.0146],
        [0.0769, 0.0214, 0.0140],
        [0.1158, 0.0228, 0.0166],
        [0.0931, 0.0198, 0.0154],
        [0.0397, 0.0084, 0.0075],
        [0.0681, 0.0209, 0.0126]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1185],
        [0.0667],
        [0.0377],
        [0.0490],
        [0.0668],
        [0.0834],
        [0.0463],
        [0.0745],
        [0.0627],
        [0.0465],
        [0.0327],
        [0.0456],
        [0.0318],
        [0.0820],
        [0.0880],
        [0.0721]], device='cuda:0', dtype=torch.float16)/tensor([[0.1185, 0.0667, 0.0377, 0.0490, 0.0668, 0.0834, 0.0463, 0.0745, 0.0627,
         0.0465, 0.0327, 0.0456, 0.0318, 0.0820, 0.0880, 0.0721]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0446],
        [0.0244],
        [0.0131],
        [0.0095],
        [0.0334],
        [0.0181],
        [0.0132],
        [0.0226],
        [0.0207],
        [0.0143],
        [0.0116],
        [0.0130],
        [0.0090],
        [0.0216],
        [0.0223],
        [0.0240]], device='cuda:0', dtype=torch.float16)/tensor([[0.0446, 0.0244, 0.0131, 0.0095, 0.0334, 0.0181, 0.0132, 0.0226, 0.0207,
         0.0143, 0.0116, 0.0130, 0.0090, 0.0216, 0.0223, 0.0240]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0293],
        [0.0174],
        [0.0156],
        [0.0119],
        [0.0157],
        [0.0138],
        [0.0219],
        [0.0258],
        [0.0122],
        [0.0194],
        [0.0106],
        [0.0071],
        [0.0070],
        [0.0164],
        [0.0140],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0293, 0.0174, 0.0156, 0.0119, 0.0157, 0.0138, 0.0219, 0.0258, 0.0122,
         0.0194, 0.0106, 0.0071, 0.0070, 0.0164, 0.0140, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1185, 0.0446, 0.0293],
        [0.0667, 0.0244, 0.0174],
        [0.0377, 0.0131, 0.0156],
        [0.0490, 0.0095, 0.0119],
        [0.0668, 0.0334, 0.0157],
        [0.0834, 0.0181, 0.0138],
        [0.0463, 0.0132, 0.0219],
        [0.0745, 0.0226, 0.0258],
        [0.0627, 0.0207, 0.0122],
        [0.0465, 0.0143, 0.0194],
        [0.0327, 0.0116, 0.0106],
        [0.0456, 0.0130, 0.0071],
        [0.0318, 0.0090, 0.0070],
        [0.0820, 0.0216, 0.0164],
        [0.0880, 0.0223, 0.0140],
        [0.0721, 0.0240, 0.0232]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0508],
        [0.0408],
        [0.0589],
        [0.0278],
        [0.1136],
        [0.0644],
        [0.0792],
        [0.0849],
        [0.0483],
        [0.0861],
        [0.0813],
        [0.0498],
        [0.0909],
        [0.0445],
        [0.0561],
        [0.0453]], device='cuda:0', dtype=torch.float16)/tensor([[0.0508, 0.0408, 0.0589, 0.0278, 0.1136, 0.0644, 0.0792, 0.0849, 0.0483,
         0.0861, 0.0813, 0.0498, 0.0909, 0.0445, 0.0561, 0.0453]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0258],
        [0.0137],
        [0.0076],
        [0.0151],
        [0.0177],
        [0.0151],
        [0.0137],
        [0.0401],
        [0.0110],
        [0.0241],
        [0.0222],
        [0.0359],
        [0.0216],
        [0.0277],
        [0.0120],
        [0.0201]], device='cuda:0', dtype=torch.float16)/tensor([[0.0258, 0.0137, 0.0076, 0.0151, 0.0177, 0.0151, 0.0137, 0.0401, 0.0110,
         0.0241, 0.0222, 0.0359, 0.0216, 0.0277, 0.0120, 0.0201]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0162],
        [0.0086],
        [0.0291],
        [0.0109],
        [0.0311],
        [0.0153],
        [0.0165],
        [0.0291],
        [0.0123],
        [0.0324],
        [0.0252],
        [0.0334],
        [0.0284],
        [0.0106],
        [0.0174],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0086, 0.0291, 0.0109, 0.0311, 0.0153, 0.0165, 0.0291, 0.0123,
         0.0324, 0.0252, 0.0334, 0.0284, 0.0106, 0.0174, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0508, 0.0258, 0.0162],
        [0.0408, 0.0137, 0.0086],
        [0.0589, 0.0076, 0.0291],
        [0.0278, 0.0151, 0.0109],
        [0.1136, 0.0177, 0.0311],
        [0.0644, 0.0151, 0.0153],
        [0.0792, 0.0137, 0.0165],
        [0.0849, 0.0401, 0.0291],
        [0.0483, 0.0110, 0.0123],
        [0.0861, 0.0241, 0.0324],
        [0.0813, 0.0222, 0.0252],
        [0.0498, 0.0359, 0.0334],
        [0.0909, 0.0216, 0.0284],
        [0.0445, 0.0277, 0.0106],
        [0.0561, 0.0120, 0.0174],
        [0.0453, 0.0201, 0.0275]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0509],
        [0.0279],
        [0.0722],
        [0.0759],
        [0.0248],
        [0.0342],
        [0.0258],
        [0.0671],
        [0.0720],
        [0.0754],
        [0.0616],
        [0.0941],
        [0.0681],
        [0.0151],
        [0.0480],
        [0.0621]], device='cuda:0', dtype=torch.float16)/tensor([[0.0509, 0.0279, 0.0722, 0.0759, 0.0248, 0.0342, 0.0258, 0.0671, 0.0720,
         0.0754, 0.0616, 0.0941, 0.0681, 0.0151, 0.0480, 0.0621]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0151],
        [0.0074],
        [0.0292],
        [0.0235],
        [0.0121],
        [0.0124],
        [0.0106],
        [0.0178],
        [0.0159],
        [0.0265],
        [0.0239],
        [0.0249],
        [0.0182],
        [0.0063],
        [0.0161],
        [0.0274]], device='cuda:0', dtype=torch.float16)/tensor([[0.0151, 0.0074, 0.0292, 0.0235, 0.0121, 0.0124, 0.0106, 0.0178, 0.0159,
         0.0265, 0.0239, 0.0249, 0.0182, 0.0063, 0.0161, 0.0274]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0149],
        [0.0062],
        [0.0138],
        [0.0113],
        [0.0110],
        [0.0082],
        [0.0126],
        [0.0152],
        [0.0175],
        [0.0273],
        [0.0115],
        [0.0174],
        [0.0239],
        [0.0079],
        [0.0208],
        [0.0222]], device='cuda:0', dtype=torch.float16)/tensor([[0.0149, 0.0062, 0.0138, 0.0113, 0.0110, 0.0082, 0.0126, 0.0152, 0.0175,
         0.0273, 0.0115, 0.0174, 0.0239, 0.0079, 0.0208, 0.0222]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0509, 0.0151, 0.0149],
        [0.0279, 0.0074, 0.0062],
        [0.0722, 0.0292, 0.0138],
        [0.0759, 0.0235, 0.0113],
        [0.0248, 0.0121, 0.0110],
        [0.0342, 0.0124, 0.0082],
        [0.0258, 0.0106, 0.0126],
        [0.0671, 0.0178, 0.0152],
        [0.0720, 0.0159, 0.0175],
        [0.0754, 0.0265, 0.0273],
        [0.0616, 0.0239, 0.0115],
        [0.0941, 0.0249, 0.0174],
        [0.0681, 0.0182, 0.0239],
        [0.0151, 0.0063, 0.0079],
        [0.0480, 0.0161, 0.0208],
        [0.0621, 0.0274, 0.0222]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0806],
        [0.0214],
        [0.0640],
        [0.0606],
        [0.0859],
        [0.0269],
        [0.0486],
        [0.0211],
        [0.0901],
        [0.0293],
        [0.0964],
        [0.0458],
        [0.0825],
        [0.0392],
        [0.0518],
        [0.1168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0806, 0.0214, 0.0640, 0.0606, 0.0859, 0.0269, 0.0486, 0.0211, 0.0901,
         0.0293, 0.0964, 0.0458, 0.0825, 0.0392, 0.0518, 0.1168]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0210],
        [0.0178],
        [0.0216],
        [0.0078],
        [0.0277],
        [0.0069],
        [0.0145],
        [0.0151],
        [0.0078],
        [0.0068],
        [0.0196],
        [0.0090],
        [0.0222],
        [0.0085],
        [0.0055],
        [0.0433]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0178, 0.0216, 0.0078, 0.0277, 0.0069, 0.0145, 0.0151, 0.0078,
         0.0068, 0.0196, 0.0090, 0.0222, 0.0085, 0.0055, 0.0433]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0249],
        [0.0086],
        [0.0312],
        [0.0164],
        [0.0252],
        [0.0054],
        [0.0367],
        [0.0111],
        [0.0309],
        [0.0151],
        [0.0285],
        [0.0161],
        [0.0318],
        [0.0050],
        [0.0120],
        [0.0420]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0086, 0.0312, 0.0164, 0.0252, 0.0054, 0.0367, 0.0111, 0.0309,
         0.0151, 0.0285, 0.0161, 0.0318, 0.0050, 0.0120, 0.0420]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0806, 0.0210, 0.0249],
        [0.0214, 0.0178, 0.0086],
        [0.0640, 0.0216, 0.0312],
        [0.0606, 0.0078, 0.0164],
        [0.0859, 0.0277, 0.0252],
        [0.0269, 0.0069, 0.0054],
        [0.0486, 0.0145, 0.0367],
        [0.0211, 0.0151, 0.0111],
        [0.0901, 0.0078, 0.0309],
        [0.0293, 0.0068, 0.0151],
        [0.0964, 0.0196, 0.0285],
        [0.0458, 0.0090, 0.0161],
        [0.0825, 0.0222, 0.0318],
        [0.0392, 0.0085, 0.0050],
        [0.0518, 0.0055, 0.0120],
        [0.1168, 0.0433, 0.0420]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0587],
        [0.0842],
        [0.0276],
        [0.0289],
        [0.0200],
        [0.0575],
        [0.0679],
        [0.0686],
        [0.0620],
        [0.0654],
        [0.0553],
        [0.0393],
        [0.0209],
        [0.0414],
        [0.0657],
        [0.0491]], device='cuda:0', dtype=torch.float16)/tensor([[0.0587, 0.0842, 0.0276, 0.0289, 0.0200, 0.0575, 0.0679, 0.0686, 0.0620,
         0.0654, 0.0553, 0.0393, 0.0209, 0.0414, 0.0657, 0.0491]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0117],
        [0.0213],
        [0.0054],
        [0.0124],
        [0.0082],
        [0.0211],
        [0.0231],
        [0.0176],
        [0.0130],
        [0.0154],
        [0.0335],
        [0.0226],
        [0.0071],
        [0.0163],
        [0.0205],
        [0.0208]], device='cuda:0', dtype=torch.float16)/tensor([[0.0117, 0.0213, 0.0054, 0.0124, 0.0082, 0.0211, 0.0231, 0.0176, 0.0130,
         0.0154, 0.0335, 0.0226, 0.0071, 0.0163, 0.0205, 0.0208]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0122],
        [0.0239],
        [0.0110],
        [0.0128],
        [0.0063],
        [0.0119],
        [0.0294],
        [0.0091],
        [0.0248],
        [0.0126],
        [0.0152],
        [0.0109],
        [0.0067],
        [0.0080],
        [0.0219],
        [0.0178]], device='cuda:0', dtype=torch.float16)/tensor([[0.0122, 0.0239, 0.0110, 0.0128, 0.0063, 0.0119, 0.0294, 0.0091, 0.0248,
         0.0126, 0.0152, 0.0109, 0.0067, 0.0080, 0.0219, 0.0178]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0587, 0.0117, 0.0122],
        [0.0842, 0.0213, 0.0239],
        [0.0276, 0.0054, 0.0110],
        [0.0289, 0.0124, 0.0128],
        [0.0200, 0.0082, 0.0063],
        [0.0575, 0.0211, 0.0119],
        [0.0679, 0.0231, 0.0294],
        [0.0686, 0.0176, 0.0091],
        [0.0620, 0.0130, 0.0248],
        [0.0654, 0.0154, 0.0126],
        [0.0553, 0.0335, 0.0152],
        [0.0393, 0.0226, 0.0109],
        [0.0209, 0.0071, 0.0067],
        [0.0414, 0.0163, 0.0080],
        [0.0657, 0.0205, 0.0219],
        [0.0491, 0.0208, 0.0178]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0665],
        [0.0707],
        [0.0534],
        [0.0710],
        [0.0372],
        [0.0629],
        [0.0509],
        [0.0220],
        [0.0493],
        [0.1316],
        [0.0805],
        [0.0239],
        [0.0624],
        [0.0760],
        [0.0457],
        [0.0832]], device='cuda:0', dtype=torch.float16)/tensor([[0.0665, 0.0707, 0.0534, 0.0710, 0.0372, 0.0629, 0.0509, 0.0220, 0.0493,
         0.1316, 0.0805, 0.0239, 0.0624, 0.0760, 0.0457, 0.0832]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0162],
        [0.0271],
        [0.0231],
        [0.0104],
        [0.0117],
        [0.0111],
        [0.0309],
        [0.0088],
        [0.0185],
        [0.0255],
        [0.0197],
        [0.0157],
        [0.0209],
        [0.0313],
        [0.0157],
        [0.0316]], device='cuda:0', dtype=torch.float16)/tensor([[0.0162, 0.0271, 0.0231, 0.0104, 0.0117, 0.0111, 0.0309, 0.0088, 0.0185,
         0.0255, 0.0197, 0.0157, 0.0209, 0.0313, 0.0157, 0.0316]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0210],
        [0.0391],
        [0.0347],
        [0.0090],
        [0.0106],
        [0.0128],
        [0.0246],
        [0.0079],
        [0.0175],
        [0.0167],
        [0.0170],
        [0.0086],
        [0.0176],
        [0.0235],
        [0.0098],
        [0.0229]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0391, 0.0347, 0.0090, 0.0106, 0.0128, 0.0246, 0.0079, 0.0175,
         0.0167, 0.0170, 0.0086, 0.0176, 0.0235, 0.0098, 0.0229]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0665, 0.0162, 0.0210],
        [0.0707, 0.0271, 0.0391],
        [0.0534, 0.0231, 0.0347],
        [0.0710, 0.0104, 0.0090],
        [0.0372, 0.0117, 0.0106],
        [0.0629, 0.0111, 0.0128],
        [0.0509, 0.0309, 0.0246],
        [0.0220, 0.0088, 0.0079],
        [0.0493, 0.0185, 0.0175],
        [0.1316, 0.0255, 0.0167],
        [0.0805, 0.0197, 0.0170],
        [0.0239, 0.0157, 0.0086],
        [0.0624, 0.0209, 0.0176],
        [0.0760, 0.0313, 0.0235],
        [0.0457, 0.0157, 0.0098],
        [0.0832, 0.0316, 0.0229]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0356],
        [0.0237],
        [0.1001],
        [0.0128],
        [0.0516],
        [0.0612],
        [0.0768],
        [0.1021],
        [0.0231],
        [0.0748],
        [0.0539],
        [0.1215],
        [0.0489],
        [0.0780],
        [0.0402],
        [0.0816]], device='cuda:0', dtype=torch.float16)/tensor([[0.0356, 0.0237, 0.1001, 0.0128, 0.0516, 0.0612, 0.0768, 0.1021, 0.0231,
         0.0748, 0.0539, 0.1215, 0.0489, 0.0780, 0.0402, 0.0816]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0044],
        [0.0224],
        [0.0173],
        [0.0094],
        [0.0182],
        [0.0243],
        [0.0303],
        [0.0295],
        [0.0127],
        [0.0170],
        [0.0137],
        [0.0235],
        [0.0272],
        [0.0287],
        [0.0062],
        [0.0182]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0224, 0.0173, 0.0094, 0.0182, 0.0243, 0.0303, 0.0295, 0.0127,
         0.0170, 0.0137, 0.0235, 0.0272, 0.0287, 0.0062, 0.0182]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0090],
        [0.0074],
        [0.0114],
        [0.0063],
        [0.0108],
        [0.0155],
        [0.0272],
        [0.0244],
        [0.0087],
        [0.0174],
        [0.0210],
        [0.0241],
        [0.0119],
        [0.0242],
        [0.0138],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0074, 0.0114, 0.0063, 0.0108, 0.0155, 0.0272, 0.0244, 0.0087,
         0.0174, 0.0210, 0.0241, 0.0119, 0.0242, 0.0138, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0356, 0.0044, 0.0090],
        [0.0237, 0.0224, 0.0074],
        [0.1001, 0.0173, 0.0114],
        [0.0128, 0.0094, 0.0063],
        [0.0516, 0.0182, 0.0108],
        [0.0612, 0.0243, 0.0155],
        [0.0768, 0.0303, 0.0272],
        [0.1021, 0.0295, 0.0244],
        [0.0231, 0.0127, 0.0087],
        [0.0748, 0.0170, 0.0174],
        [0.0539, 0.0137, 0.0210],
        [0.1215, 0.0235, 0.0241],
        [0.0489, 0.0272, 0.0119],
        [0.0780, 0.0287, 0.0242],
        [0.0402, 0.0062, 0.0138],
        [0.0816, 0.0182, 0.0118]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0230],
        [0.1158],
        [0.1005],
        [0.0051],
        [0.0604],
        [0.0580],
        [0.0255],
        [0.0735],
        [0.0963],
        [0.0409],
        [0.0613],
        [0.0588],
        [0.0188],
        [0.0452],
        [0.0446],
        [0.0651]], device='cuda:0', dtype=torch.float16)/tensor([[0.0230, 0.1158, 0.1005, 0.0051, 0.0604, 0.0580, 0.0255, 0.0735, 0.0963,
         0.0409, 0.0613, 0.0588, 0.0188, 0.0452, 0.0446, 0.0651]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0086],
        [0.0178],
        [0.0224],
        [0.0041],
        [0.0260],
        [0.0205],
        [0.0146],
        [0.0157],
        [0.0305],
        [0.0093],
        [0.0147],
        [0.0168],
        [0.0139],
        [0.0124],
        [0.0149],
        [0.0234]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0178, 0.0224, 0.0041, 0.0260, 0.0205, 0.0146, 0.0157, 0.0305,
         0.0093, 0.0147, 0.0168, 0.0139, 0.0124, 0.0149, 0.0234]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0076],
        [0.0426],
        [0.0149],
        [0.0074],
        [0.0169],
        [0.0177],
        [0.0172],
        [0.0104],
        [0.0232],
        [0.0074],
        [0.0084],
        [0.0091],
        [0.0077],
        [0.0143],
        [0.0062],
        [0.0087]], device='cuda:0', dtype=torch.float16)/tensor([[0.0076, 0.0426, 0.0149, 0.0074, 0.0169, 0.0177, 0.0172, 0.0104, 0.0232,
         0.0074, 0.0084, 0.0091, 0.0077, 0.0143, 0.0062, 0.0087]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0230, 0.0086, 0.0076],
        [0.1158, 0.0178, 0.0426],
        [0.1005, 0.0224, 0.0149],
        [0.0051, 0.0041, 0.0074],
        [0.0604, 0.0260, 0.0169],
        [0.0580, 0.0205, 0.0177],
        [0.0255, 0.0146, 0.0172],
        [0.0735, 0.0157, 0.0104],
        [0.0963, 0.0305, 0.0232],
        [0.0409, 0.0093, 0.0074],
        [0.0613, 0.0147, 0.0084],
        [0.0588, 0.0168, 0.0091],
        [0.0188, 0.0139, 0.0077],
        [0.0452, 0.0124, 0.0143],
        [0.0446, 0.0149, 0.0062],
        [0.0651, 0.0234, 0.0087]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0516],
        [0.0430],
        [0.0709],
        [0.0786],
        [0.0863],
        [0.0847],
        [0.0537],
        [0.0745],
        [0.0424],
        [0.0594],
        [0.0869],
        [0.0826],
        [0.1204],
        [0.0831],
        [0.0594],
        [0.0423]], device='cuda:0', dtype=torch.float16)/tensor([[0.0516, 0.0430, 0.0709, 0.0786, 0.0863, 0.0847, 0.0537, 0.0745, 0.0424,
         0.0594, 0.0869, 0.0826, 0.1204, 0.0831, 0.0594, 0.0423]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0121],
        [0.0107],
        [0.0247],
        [0.0163],
        [0.0191],
        [0.0111],
        [0.0147],
        [0.0113],
        [0.0271],
        [0.0174],
        [0.0188],
        [0.0246],
        [0.0230],
        [0.0217],
        [0.0182],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0121, 0.0107, 0.0247, 0.0163, 0.0191, 0.0111, 0.0147, 0.0113, 0.0271,
         0.0174, 0.0188, 0.0246, 0.0230, 0.0217, 0.0182, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0120],
        [0.0063],
        [0.0098],
        [0.0132],
        [0.0130],
        [0.0295],
        [0.0100],
        [0.0188],
        [0.0176],
        [0.0248],
        [0.0180],
        [0.0153],
        [0.0461],
        [0.0257],
        [0.0149],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0063, 0.0098, 0.0132, 0.0130, 0.0295, 0.0100, 0.0188, 0.0176,
         0.0248, 0.0180, 0.0153, 0.0461, 0.0257, 0.0149, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0516, 0.0121, 0.0120],
        [0.0430, 0.0107, 0.0063],
        [0.0709, 0.0247, 0.0098],
        [0.0786, 0.0163, 0.0132],
        [0.0863, 0.0191, 0.0130],
        [0.0847, 0.0111, 0.0295],
        [0.0537, 0.0147, 0.0100],
        [0.0745, 0.0113, 0.0188],
        [0.0424, 0.0271, 0.0176],
        [0.0594, 0.0174, 0.0248],
        [0.0869, 0.0188, 0.0180],
        [0.0826, 0.0246, 0.0153],
        [0.1204, 0.0230, 0.0461],
        [0.0831, 0.0217, 0.0257],
        [0.0594, 0.0182, 0.0149],
        [0.0423, 0.0161, 0.0112]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0511],
        [0.0439],
        [0.0861],
        [0.0554],
        [0.0888],
        [0.0321],
        [0.0834],
        [0.0498],
        [0.0641],
        [0.0373],
        [0.0399],
        [0.0768],
        [0.0302],
        [0.0268],
        [0.0570],
        [0.0419]], device='cuda:0', dtype=torch.float16)/tensor([[0.0511, 0.0439, 0.0861, 0.0554, 0.0888, 0.0321, 0.0834, 0.0498, 0.0641,
         0.0373, 0.0399, 0.0768, 0.0302, 0.0268, 0.0570, 0.0419]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0123],
        [0.0149],
        [0.0271],
        [0.0127],
        [0.0156],
        [0.0216],
        [0.0120],
        [0.0049],
        [0.0257],
        [0.0159],
        [0.0090],
        [0.0143],
        [0.0060],
        [0.0091],
        [0.0139],
        [0.0236]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0149, 0.0271, 0.0127, 0.0156, 0.0216, 0.0120, 0.0049, 0.0257,
         0.0159, 0.0090, 0.0143, 0.0060, 0.0091, 0.0139, 0.0236]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0053],
        [0.0117],
        [0.0265],
        [0.0048],
        [0.0175],
        [0.0075],
        [0.0241],
        [0.0161],
        [0.0116],
        [0.0111],
        [0.0190],
        [0.0159],
        [0.0137],
        [0.0114],
        [0.0303],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0117, 0.0265, 0.0048, 0.0175, 0.0075, 0.0241, 0.0161, 0.0116,
         0.0111, 0.0190, 0.0159, 0.0137, 0.0114, 0.0303, 0.0143]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0511, 0.0123, 0.0053],
        [0.0439, 0.0149, 0.0117],
        [0.0861, 0.0271, 0.0265],
        [0.0554, 0.0127, 0.0048],
        [0.0888, 0.0156, 0.0175],
        [0.0321, 0.0216, 0.0075],
        [0.0834, 0.0120, 0.0241],
        [0.0498, 0.0049, 0.0161],
        [0.0641, 0.0257, 0.0116],
        [0.0373, 0.0159, 0.0111],
        [0.0399, 0.0090, 0.0190],
        [0.0768, 0.0143, 0.0159],
        [0.0302, 0.0060, 0.0137],
        [0.0268, 0.0091, 0.0114],
        [0.0570, 0.0139, 0.0303],
        [0.0419, 0.0236, 0.0143]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0355],
        [0.0610],
        [0.0443],
        [0.0318],
        [0.0384],
        [0.0840],
        [0.1097],
        [0.0490],
        [0.1440],
        [0.0868],
        [0.0811],
        [0.0516],
        [0.0516],
        [0.0517],
        [0.0956],
        [0.0500]], device='cuda:0', dtype=torch.float16)/tensor([[0.0355, 0.0610, 0.0443, 0.0318, 0.0384, 0.0840, 0.1097, 0.0490, 0.1440,
         0.0868, 0.0811, 0.0516, 0.0516, 0.0517, 0.0956, 0.0500]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0185],
        [0.0233],
        [0.0180],
        [0.0084],
        [0.0186],
        [0.0140],
        [0.0332],
        [0.0142],
        [0.0309],
        [0.0161],
        [0.0119],
        [0.0127],
        [0.0255],
        [0.0196],
        [0.0231],
        [0.0253]], device='cuda:0', dtype=torch.float16)/tensor([[0.0185, 0.0233, 0.0180, 0.0084, 0.0186, 0.0140, 0.0332, 0.0142, 0.0309,
         0.0161, 0.0119, 0.0127, 0.0255, 0.0196, 0.0231, 0.0253]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0077],
        [0.0077],
        [0.0139],
        [0.0021],
        [0.0256],
        [0.0134],
        [0.0151],
        [0.0070],
        [0.0281],
        [0.0161],
        [0.0064],
        [0.0106],
        [0.0233],
        [0.0144],
        [0.0213],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0077, 0.0139, 0.0021, 0.0256, 0.0134, 0.0151, 0.0070, 0.0281,
         0.0161, 0.0064, 0.0106, 0.0233, 0.0144, 0.0213, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0355, 0.0185, 0.0077],
        [0.0610, 0.0233, 0.0077],
        [0.0443, 0.0180, 0.0139],
        [0.0318, 0.0084, 0.0021],
        [0.0384, 0.0186, 0.0256],
        [0.0840, 0.0140, 0.0134],
        [0.1097, 0.0332, 0.0151],
        [0.0490, 0.0142, 0.0070],
        [0.1440, 0.0309, 0.0281],
        [0.0868, 0.0161, 0.0161],
        [0.0811, 0.0119, 0.0064],
        [0.0516, 0.0127, 0.0106],
        [0.0516, 0.0255, 0.0233],
        [0.0517, 0.0196, 0.0144],
        [0.0956, 0.0231, 0.0213],
        [0.0500, 0.0253, 0.0135]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0425],
        [0.0276],
        [0.0692],
        [0.0230],
        [0.0476],
        [0.0621]], device='cuda:0', dtype=torch.float16)/tensor([[0.0425, 0.0276, 0.0692, 0.0230, 0.0476, 0.0621]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0157],
        [0.0157],
        [0.0197],
        [0.0100],
        [0.0161],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0157, 0.0197, 0.0100, 0.0161, 0.0122]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0063],
        [0.0090],
        [0.0183],
        [0.0135],
        [0.0458],
        [0.0056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0090, 0.0183, 0.0135, 0.0458, 0.0056]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0425, 0.0157, 0.0063],
        [0.0276, 0.0157, 0.0090],
        [0.0692, 0.0197, 0.0183],
        [0.0230, 0.0100, 0.0135],
        [0.0476, 0.0161, 0.0458],
        [0.0621, 0.0122, 0.0056]], device='cuda:0')
acc:  0.3383838383838384
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 4 and batchsize 16: 0:03:02.722696
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI rare_synonyms 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 322.46it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0263],
        [0.0997],
        [0.0534],
        [0.0668],
        [0.0476],
        [0.0231],
        [0.0245],
        [0.0350],
        [0.0162],
        [0.0746],
        [0.0128],
        [0.0378],
        [0.0186],
        [0.0169],
        [0.0268],
        [0.0286]], device='cuda:0', dtype=torch.float16)/tensor([[0.0263, 0.0997, 0.0534, 0.0668, 0.0476, 0.0231, 0.0245, 0.0350, 0.0162,
         0.0746, 0.0128, 0.0378, 0.0186, 0.0169, 0.0268, 0.0286]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0072],
        [0.0149],
        [0.0224],
        [0.0178],
        [0.0075],
        [0.0073],
        [0.0025],
        [0.0194],
        [0.0077],
        [0.0142],
        [0.0061],
        [0.0055],
        [0.0118],
        [0.0085],
        [0.0136],
        [0.0057]], device='cuda:0', dtype=torch.float16)/tensor([[0.0072, 0.0149, 0.0224, 0.0178, 0.0075, 0.0073, 0.0025, 0.0194, 0.0077,
         0.0142, 0.0061, 0.0055, 0.0118, 0.0085, 0.0136, 0.0057]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0138],
        [0.0654],
        [0.0348],
        [0.0414],
        [0.0330],
        [0.0069],
        [0.0028],
        [0.0161],
        [0.0165],
        [0.0377],
        [0.0056],
        [0.0169],
        [0.0115],
        [0.0055],
        [0.0094],
        [0.0064]], device='cuda:0', dtype=torch.float16)/tensor([[0.0138, 0.0654, 0.0348, 0.0414, 0.0330, 0.0069, 0.0028, 0.0161, 0.0165,
         0.0377, 0.0056, 0.0169, 0.0115, 0.0055, 0.0094, 0.0064]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0263, 0.0072, 0.0138],
        [0.0997, 0.0149, 0.0654],
        [0.0534, 0.0224, 0.0348],
        [0.0668, 0.0178, 0.0414],
        [0.0476, 0.0075, 0.0330],
        [0.0231, 0.0073, 0.0069],
        [0.0245, 0.0025, 0.0028],
        [0.0350, 0.0194, 0.0161],
        [0.0162, 0.0077, 0.0165],
        [0.0746, 0.0142, 0.0377],
        [0.0128, 0.0061, 0.0056],
        [0.0378, 0.0055, 0.0169],
        [0.0186, 0.0118, 0.0115],
        [0.0169, 0.0085, 0.0055],
        [0.0268, 0.0136, 0.0094],
        [0.0286, 0.0057, 0.0064]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0599],
        [0.0286],
        [0.1082],
        [0.0064],
        [0.0505],
        [0.0178],
        [0.0317],
        [0.0847],
        [0.0131],
        [0.0612],
        [0.0172],
        [0.0214],
        [0.0534],
        [0.0867],
        [0.0501],
        [0.0662]], device='cuda:0', dtype=torch.float16)/tensor([[0.0599, 0.0286, 0.1082, 0.0064, 0.0505, 0.0178, 0.0317, 0.0847, 0.0131,
         0.0612, 0.0172, 0.0214, 0.0534, 0.0867, 0.0501, 0.0662]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0133],
        [0.0098],
        [0.0111],
        [0.0027],
        [0.0132],
        [0.0116],
        [0.0042],
        [0.0111],
        [0.0044],
        [0.0138],
        [0.0058],
        [0.0049],
        [0.0119],
        [0.0215],
        [0.0089],
        [0.0135]], device='cuda:0', dtype=torch.float16)/tensor([[0.0133, 0.0098, 0.0111, 0.0027, 0.0132, 0.0116, 0.0042, 0.0111, 0.0044,
         0.0138, 0.0058, 0.0049, 0.0119, 0.0215, 0.0089, 0.0135]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0192],
        [0.0113],
        [0.0287],
        [0.0006],
        [0.0135],
        [0.0159],
        [0.0139],
        [0.0264],
        [0.0028],
        [0.0169],
        [0.0043],
        [0.0091],
        [0.0315],
        [0.0184],
        [0.0165],
        [0.0280]], device='cuda:0', dtype=torch.float16)/tensor([[0.0192, 0.0113, 0.0287, 0.0006, 0.0135, 0.0159, 0.0139, 0.0264, 0.0028,
         0.0169, 0.0043, 0.0091, 0.0315, 0.0184, 0.0165, 0.0280]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0599, 0.0133, 0.0192],
        [0.0286, 0.0098, 0.0113],
        [0.1082, 0.0111, 0.0287],
        [0.0064, 0.0027, 0.0006],
        [0.0505, 0.0132, 0.0135],
        [0.0178, 0.0116, 0.0159],
        [0.0317, 0.0042, 0.0139],
        [0.0847, 0.0111, 0.0264],
        [0.0131, 0.0044, 0.0028],
        [0.0612, 0.0138, 0.0169],
        [0.0172, 0.0058, 0.0043],
        [0.0214, 0.0049, 0.0091],
        [0.0534, 0.0119, 0.0315],
        [0.0867, 0.0215, 0.0184],
        [0.0501, 0.0089, 0.0165],
        [0.0662, 0.0135, 0.0280]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0249],
        [0.0141],
        [0.0273],
        [0.0473],
        [0.0316],
        [0.0498],
        [0.0277],
        [0.0397],
        [0.0205],
        [0.0123],
        [0.0255],
        [0.1023],
        [0.0480],
        [0.0107],
        [0.0405],
        [0.0369]], device='cuda:0', dtype=torch.float16)/tensor([[0.0249, 0.0141, 0.0273, 0.0473, 0.0316, 0.0498, 0.0277, 0.0397, 0.0205,
         0.0123, 0.0255, 0.1023, 0.0480, 0.0107, 0.0405, 0.0369]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0047],
        [0.0050],
        [0.0019],
        [0.0102],
        [0.0112],
        [0.0127],
        [0.0088],
        [0.0181],
        [0.0072],
        [0.0066],
        [0.0030],
        [0.0201],
        [0.0069],
        [0.0025],
        [0.0082],
        [0.0137]], device='cuda:0', dtype=torch.float16)/tensor([[0.0047, 0.0050, 0.0019, 0.0102, 0.0112, 0.0127, 0.0088, 0.0181, 0.0072,
         0.0066, 0.0030, 0.0201, 0.0069, 0.0025, 0.0082, 0.0137]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0087],
        [0.0085],
        [0.0078],
        [0.0142],
        [0.0170],
        [0.0057],
        [0.0119],
        [0.0204],
        [0.0180],
        [0.0093],
        [0.0114],
        [0.0630],
        [0.0071],
        [0.0047],
        [0.0077],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0085, 0.0078, 0.0142, 0.0170, 0.0057, 0.0119, 0.0204, 0.0180,
         0.0093, 0.0114, 0.0630, 0.0071, 0.0047, 0.0077, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0249, 0.0047, 0.0087],
        [0.0141, 0.0050, 0.0085],
        [0.0273, 0.0019, 0.0078],
        [0.0473, 0.0102, 0.0142],
        [0.0316, 0.0112, 0.0170],
        [0.0498, 0.0127, 0.0057],
        [0.0277, 0.0088, 0.0119],
        [0.0397, 0.0181, 0.0204],
        [0.0205, 0.0072, 0.0180],
        [0.0123, 0.0066, 0.0093],
        [0.0255, 0.0030, 0.0114],
        [0.1023, 0.0201, 0.0630],
        [0.0480, 0.0069, 0.0071],
        [0.0107, 0.0025, 0.0047],
        [0.0405, 0.0082, 0.0077],
        [0.0369, 0.0137, 0.0129]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0546],
        [0.0762],
        [0.0072],
        [0.0782],
        [0.0185],
        [0.0245],
        [0.0347],
        [0.0240],
        [0.0122],
        [0.0187],
        [0.0522],
        [0.0196],
        [0.0236],
        [0.0199],
        [0.0202],
        [0.0220]], device='cuda:0', dtype=torch.float16)/tensor([[0.0546, 0.0762, 0.0072, 0.0782, 0.0185, 0.0245, 0.0347, 0.0240, 0.0122,
         0.0187, 0.0522, 0.0196, 0.0236, 0.0199, 0.0202, 0.0220]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0225],
        [0.0122],
        [0.0043],
        [0.0406],
        [0.0046],
        [0.0048],
        [0.0105],
        [0.0065],
        [0.0057],
        [0.0132],
        [0.0219],
        [0.0060],
        [0.0025],
        [0.0043],
        [0.0088],
        [0.0148]], device='cuda:0', dtype=torch.float16)/tensor([[0.0225, 0.0122, 0.0043, 0.0406, 0.0046, 0.0048, 0.0105, 0.0065, 0.0057,
         0.0132, 0.0219, 0.0060, 0.0025, 0.0043, 0.0088, 0.0148]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0309],
        [0.0194],
        [0.0049],
        [0.0478],
        [0.0069],
        [0.0155],
        [0.0158],
        [0.0090],
        [0.0081],
        [0.0150],
        [0.0353],
        [0.0049],
        [0.0057],
        [0.0062],
        [0.0229],
        [0.0427]], device='cuda:0', dtype=torch.float16)/tensor([[0.0309, 0.0194, 0.0049, 0.0478, 0.0069, 0.0155, 0.0158, 0.0090, 0.0081,
         0.0150, 0.0353, 0.0049, 0.0057, 0.0062, 0.0229, 0.0427]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0546, 0.0225, 0.0309],
        [0.0762, 0.0122, 0.0194],
        [0.0072, 0.0043, 0.0049],
        [0.0782, 0.0406, 0.0478],
        [0.0185, 0.0046, 0.0069],
        [0.0245, 0.0048, 0.0155],
        [0.0347, 0.0105, 0.0158],
        [0.0240, 0.0065, 0.0090],
        [0.0122, 0.0057, 0.0081],
        [0.0187, 0.0132, 0.0150],
        [0.0522, 0.0219, 0.0353],
        [0.0196, 0.0060, 0.0049],
        [0.0236, 0.0025, 0.0057],
        [0.0199, 0.0043, 0.0062],
        [0.0202, 0.0088, 0.0229],
        [0.0220, 0.0148, 0.0427]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0326],
        [0.0797],
        [0.0378],
        [0.0533],
        [0.0276],
        [0.0663],
        [0.0576],
        [0.0179],
        [0.0341],
        [0.0519],
        [0.0176],
        [0.0151],
        [0.0823],
        [0.0459],
        [0.0491],
        [0.0370]], device='cuda:0', dtype=torch.float16)/tensor([[0.0326, 0.0797, 0.0378, 0.0533, 0.0276, 0.0663, 0.0576, 0.0179, 0.0341,
         0.0519, 0.0176, 0.0151, 0.0823, 0.0459, 0.0491, 0.0370]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0105],
        [0.0206],
        [0.0132],
        [0.0273],
        [0.0080],
        [0.0052],
        [0.0319],
        [0.0088],
        [0.0087],
        [0.0114],
        [0.0070],
        [0.0067],
        [0.0255],
        [0.0134],
        [0.0069],
        [0.0080]], device='cuda:0', dtype=torch.float16)/tensor([[0.0105, 0.0206, 0.0132, 0.0273, 0.0080, 0.0052, 0.0319, 0.0088, 0.0087,
         0.0114, 0.0070, 0.0067, 0.0255, 0.0134, 0.0069, 0.0080]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0143],
        [0.0356],
        [0.0161],
        [0.0529],
        [0.0202],
        [0.0178],
        [0.0799],
        [0.0124],
        [0.0122],
        [0.0259],
        [0.0057],
        [0.0052],
        [0.0315],
        [0.0173],
        [0.0095],
        [0.0101]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0356, 0.0161, 0.0529, 0.0202, 0.0178, 0.0799, 0.0124, 0.0122,
         0.0259, 0.0057, 0.0052, 0.0315, 0.0173, 0.0095, 0.0101]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0326, 0.0105, 0.0143],
        [0.0797, 0.0206, 0.0356],
        [0.0378, 0.0132, 0.0161],
        [0.0533, 0.0273, 0.0529],
        [0.0276, 0.0080, 0.0202],
        [0.0663, 0.0052, 0.0178],
        [0.0576, 0.0319, 0.0799],
        [0.0179, 0.0088, 0.0124],
        [0.0341, 0.0087, 0.0122],
        [0.0519, 0.0114, 0.0259],
        [0.0176, 0.0070, 0.0057],
        [0.0151, 0.0067, 0.0052],
        [0.0823, 0.0255, 0.0315],
        [0.0459, 0.0134, 0.0173],
        [0.0491, 0.0069, 0.0095],
        [0.0370, 0.0080, 0.0101]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0226],
        [0.0392],
        [0.0091],
        [0.0475],
        [0.0076],
        [0.0400],
        [0.0627],
        [0.0327],
        [0.0087],
        [0.0500],
        [0.0392],
        [0.0274],
        [0.0268],
        [0.0450],
        [0.0264],
        [0.0621]], device='cuda:0', dtype=torch.float16)/tensor([[0.0226, 0.0392, 0.0091, 0.0475, 0.0076, 0.0400, 0.0627, 0.0327, 0.0087,
         0.0500, 0.0392, 0.0274, 0.0268, 0.0450, 0.0264, 0.0621]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0086],
        [0.0217],
        [0.0035],
        [0.0087],
        [0.0040],
        [0.0097],
        [0.0343],
        [0.0065],
        [0.0047],
        [0.0164],
        [0.0114],
        [0.0117],
        [0.0076],
        [0.0166],
        [0.0176],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0217, 0.0035, 0.0087, 0.0040, 0.0097, 0.0343, 0.0065, 0.0047,
         0.0164, 0.0114, 0.0117, 0.0076, 0.0166, 0.0176, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0145],
        [0.0191],
        [0.0027],
        [0.0117],
        [0.0024],
        [0.0138],
        [0.0466],
        [0.0087],
        [0.0041],
        [0.0203],
        [0.0163],
        [0.0184],
        [0.0075],
        [0.0208],
        [0.0102],
        [0.0155]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.0191, 0.0027, 0.0117, 0.0024, 0.0138, 0.0466, 0.0087, 0.0041,
         0.0203, 0.0163, 0.0184, 0.0075, 0.0208, 0.0102, 0.0155]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0226, 0.0086, 0.0145],
        [0.0392, 0.0217, 0.0191],
        [0.0091, 0.0035, 0.0027],
        [0.0475, 0.0087, 0.0117],
        [0.0076, 0.0040, 0.0024],
        [0.0400, 0.0097, 0.0138],
        [0.0627, 0.0343, 0.0466],
        [0.0327, 0.0065, 0.0087],
        [0.0087, 0.0047, 0.0041],
        [0.0500, 0.0164, 0.0203],
        [0.0392, 0.0114, 0.0163],
        [0.0274, 0.0117, 0.0184],
        [0.0268, 0.0076, 0.0075],
        [0.0450, 0.0166, 0.0208],
        [0.0264, 0.0176, 0.0102],
        [0.0621, 0.0128, 0.0155]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0575],
        [0.0400],
        [0.0148],
        [0.0277],
        [0.0403],
        [0.0161],
        [0.0273],
        [0.0874],
        [0.0318],
        [0.0396],
        [0.0743],
        [0.0861],
        [0.0638],
        [0.0438],
        [0.0124],
        [0.0440]], device='cuda:0', dtype=torch.float16)/tensor([[0.0575, 0.0400, 0.0148, 0.0277, 0.0403, 0.0161, 0.0273, 0.0874, 0.0318,
         0.0396, 0.0743, 0.0861, 0.0638, 0.0438, 0.0124, 0.0440]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0177],
        [0.0110],
        [0.0039],
        [0.0100],
        [0.0058],
        [0.0054],
        [0.0105],
        [0.0173],
        [0.0071],
        [0.0084],
        [0.0157],
        [0.0372],
        [0.0148],
        [0.0064],
        [0.0049],
        [0.0095]], device='cuda:0', dtype=torch.float16)/tensor([[0.0177, 0.0110, 0.0039, 0.0100, 0.0058, 0.0054, 0.0105, 0.0173, 0.0071,
         0.0084, 0.0157, 0.0372, 0.0148, 0.0064, 0.0049, 0.0095]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0232],
        [0.0107],
        [0.0045],
        [0.0162],
        [0.0187],
        [0.0030],
        [0.0207],
        [0.0254],
        [0.0128],
        [0.0123],
        [0.0183],
        [0.0448],
        [0.0260],
        [0.0135],
        [0.0054],
        [0.0217]], device='cuda:0', dtype=torch.float16)/tensor([[0.0232, 0.0107, 0.0045, 0.0162, 0.0187, 0.0030, 0.0207, 0.0254, 0.0128,
         0.0123, 0.0183, 0.0448, 0.0260, 0.0135, 0.0054, 0.0217]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0575, 0.0177, 0.0232],
        [0.0400, 0.0110, 0.0107],
        [0.0148, 0.0039, 0.0045],
        [0.0277, 0.0100, 0.0162],
        [0.0403, 0.0058, 0.0187],
        [0.0161, 0.0054, 0.0030],
        [0.0273, 0.0105, 0.0207],
        [0.0874, 0.0173, 0.0254],
        [0.0318, 0.0071, 0.0128],
        [0.0396, 0.0084, 0.0123],
        [0.0743, 0.0157, 0.0183],
        [0.0861, 0.0372, 0.0448],
        [0.0638, 0.0148, 0.0260],
        [0.0438, 0.0064, 0.0135],
        [0.0124, 0.0049, 0.0054],
        [0.0440, 0.0095, 0.0217]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0193],
        [0.0855],
        [0.0309],
        [0.0106],
        [0.0074],
        [0.0133],
        [0.0161],
        [0.0393],
        [0.1055],
        [0.0243],
        [0.0714],
        [0.0097],
        [0.0185],
        [0.0665],
        [0.0140],
        [0.0819]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0855, 0.0309, 0.0106, 0.0074, 0.0133, 0.0161, 0.0393, 0.1055,
         0.0243, 0.0714, 0.0097, 0.0185, 0.0665, 0.0140, 0.0819]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0060],
        [0.0206],
        [0.0083],
        [0.0066],
        [0.0029],
        [0.0123],
        [0.0035],
        [0.0135],
        [0.0345],
        [0.0159],
        [0.0190],
        [0.0043],
        [0.0043],
        [0.0230],
        [0.0036],
        [0.0154]], device='cuda:0', dtype=torch.float16)/tensor([[0.0060, 0.0206, 0.0083, 0.0066, 0.0029, 0.0123, 0.0035, 0.0135, 0.0345,
         0.0159, 0.0190, 0.0043, 0.0043, 0.0230, 0.0036, 0.0154]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0125],
        [0.0139],
        [0.0181],
        [0.0061],
        [0.0057],
        [0.0073],
        [0.0066],
        [0.0156],
        [0.0324],
        [0.0078],
        [0.0172],
        [0.0060],
        [0.0100],
        [0.0411],
        [0.0115],
        [0.0223]], device='cuda:0', dtype=torch.float16)/tensor([[0.0125, 0.0139, 0.0181, 0.0061, 0.0057, 0.0073, 0.0066, 0.0156, 0.0324,
         0.0078, 0.0172, 0.0060, 0.0100, 0.0411, 0.0115, 0.0223]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0193, 0.0060, 0.0125],
        [0.0855, 0.0206, 0.0139],
        [0.0309, 0.0083, 0.0181],
        [0.0106, 0.0066, 0.0061],
        [0.0074, 0.0029, 0.0057],
        [0.0133, 0.0123, 0.0073],
        [0.0161, 0.0035, 0.0066],
        [0.0393, 0.0135, 0.0156],
        [0.1055, 0.0345, 0.0324],
        [0.0243, 0.0159, 0.0078],
        [0.0714, 0.0190, 0.0172],
        [0.0097, 0.0043, 0.0060],
        [0.0185, 0.0043, 0.0100],
        [0.0665, 0.0230, 0.0411],
        [0.0140, 0.0036, 0.0115],
        [0.0819, 0.0154, 0.0223]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1005],
        [0.0228],
        [0.0393],
        [0.0187],
        [0.0359],
        [0.0142],
        [0.0410],
        [0.1263],
        [0.0673],
        [0.0592],
        [0.0390],
        [0.0577],
        [0.0106],
        [0.0395],
        [0.0498],
        [0.0227]], device='cuda:0', dtype=torch.float16)/tensor([[0.1005, 0.0228, 0.0393, 0.0187, 0.0359, 0.0142, 0.0410, 0.1263, 0.0673,
         0.0592, 0.0390, 0.0577, 0.0106, 0.0395, 0.0498, 0.0227]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0127],
        [0.0112],
        [0.0205],
        [0.0044],
        [0.0195],
        [0.0058],
        [0.0129],
        [0.0179],
        [0.0159],
        [0.0138],
        [0.0069],
        [0.0111],
        [0.0058],
        [0.0067],
        [0.0071],
        [0.0122]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0112, 0.0205, 0.0044, 0.0195, 0.0058, 0.0129, 0.0179, 0.0159,
         0.0138, 0.0069, 0.0111, 0.0058, 0.0067, 0.0071, 0.0122]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0396],
        [0.0176],
        [0.0215],
        [0.0066],
        [0.0265],
        [0.0090],
        [0.0126],
        [0.0465],
        [0.0349],
        [0.0249],
        [0.0094],
        [0.0342],
        [0.0053],
        [0.0072],
        [0.0177],
        [0.0197]], device='cuda:0', dtype=torch.float16)/tensor([[0.0396, 0.0176, 0.0215, 0.0066, 0.0265, 0.0090, 0.0126, 0.0465, 0.0349,
         0.0249, 0.0094, 0.0342, 0.0053, 0.0072, 0.0177, 0.0197]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1005, 0.0127, 0.0396],
        [0.0228, 0.0112, 0.0176],
        [0.0393, 0.0205, 0.0215],
        [0.0187, 0.0044, 0.0066],
        [0.0359, 0.0195, 0.0265],
        [0.0142, 0.0058, 0.0090],
        [0.0410, 0.0129, 0.0126],
        [0.1263, 0.0179, 0.0465],
        [0.0673, 0.0159, 0.0349],
        [0.0592, 0.0138, 0.0249],
        [0.0390, 0.0069, 0.0094],
        [0.0577, 0.0111, 0.0342],
        [0.0106, 0.0058, 0.0053],
        [0.0395, 0.0067, 0.0072],
        [0.0498, 0.0071, 0.0177],
        [0.0227, 0.0122, 0.0197]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0670],
        [0.0219],
        [0.0155],
        [0.0603],
        [0.0104],
        [0.0639],
        [0.0140],
        [0.0356],
        [0.0795],
        [0.0276],
        [0.0146],
        [0.0159],
        [0.0088],
        [0.0573],
        [0.0214],
        [0.0243]], device='cuda:0', dtype=torch.float16)/tensor([[0.0670, 0.0219, 0.0155, 0.0603, 0.0104, 0.0639, 0.0140, 0.0356, 0.0795,
         0.0276, 0.0146, 0.0159, 0.0088, 0.0573, 0.0214, 0.0243]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0144],
        [0.0096],
        [0.0047],
        [0.0145],
        [0.0118],
        [0.0297],
        [0.0093],
        [0.0092],
        [0.0090],
        [0.0132],
        [0.0100],
        [0.0086],
        [0.0054],
        [0.0125],
        [0.0064],
        [0.0053]], device='cuda:0', dtype=torch.float16)/tensor([[0.0144, 0.0096, 0.0047, 0.0145, 0.0118, 0.0297, 0.0093, 0.0092, 0.0090,
         0.0132, 0.0100, 0.0086, 0.0054, 0.0125, 0.0064, 0.0053]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0217],
        [0.0151],
        [0.0048],
        [0.0257],
        [0.0067],
        [0.0345],
        [0.0111],
        [0.0076],
        [0.0163],
        [0.0083],
        [0.0084],
        [0.0070],
        [0.0064],
        [0.0209],
        [0.0046],
        [0.0103]], device='cuda:0', dtype=torch.float16)/tensor([[0.0217, 0.0151, 0.0048, 0.0257, 0.0067, 0.0345, 0.0111, 0.0076, 0.0163,
         0.0083, 0.0084, 0.0070, 0.0064, 0.0209, 0.0046, 0.0103]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0670, 0.0144, 0.0217],
        [0.0219, 0.0096, 0.0151],
        [0.0155, 0.0047, 0.0048],
        [0.0603, 0.0145, 0.0257],
        [0.0104, 0.0118, 0.0067],
        [0.0639, 0.0297, 0.0345],
        [0.0140, 0.0093, 0.0111],
        [0.0356, 0.0092, 0.0076],
        [0.0795, 0.0090, 0.0163],
        [0.0276, 0.0132, 0.0083],
        [0.0146, 0.0100, 0.0084],
        [0.0159, 0.0086, 0.0070],
        [0.0088, 0.0054, 0.0064],
        [0.0573, 0.0125, 0.0209],
        [0.0214, 0.0064, 0.0046],
        [0.0243, 0.0053, 0.0103]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0092],
        [0.0941],
        [0.0083],
        [0.0127],
        [0.0267],
        [0.0318],
        [0.0282],
        [0.0540],
        [0.0027],
        [0.0227],
        [0.0323],
        [0.0201],
        [0.0486],
        [0.0332],
        [0.0239],
        [0.0296]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0941, 0.0083, 0.0127, 0.0267, 0.0318, 0.0282, 0.0540, 0.0027,
         0.0227, 0.0323, 0.0201, 0.0486, 0.0332, 0.0239, 0.0296]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0055],
        [0.0154],
        [0.0042],
        [0.0112],
        [0.0054],
        [0.0062],
        [0.0091],
        [0.0139],
        [0.0005],
        [0.0062],
        [0.0087],
        [0.0096],
        [0.0074],
        [0.0211],
        [0.0106],
        [0.0069]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0154, 0.0042, 0.0112, 0.0054, 0.0062, 0.0091, 0.0139, 0.0005,
         0.0062, 0.0087, 0.0096, 0.0074, 0.0211, 0.0106, 0.0069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0059],
        [0.0328],
        [0.0041],
        [0.0129],
        [0.0147],
        [0.0073],
        [0.0346],
        [0.0157],
        [0.0001],
        [0.0095],
        [0.0087],
        [0.0103],
        [0.0138],
        [0.0340],
        [0.0188],
        [0.0105]], device='cuda:0', dtype=torch.float16)/tensor([[0.0059, 0.0328, 0.0041, 0.0129, 0.0147, 0.0073, 0.0346, 0.0157, 0.0001,
         0.0095, 0.0087, 0.0103, 0.0138, 0.0340, 0.0188, 0.0105]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0092, 0.0055, 0.0059],
        [0.0941, 0.0154, 0.0328],
        [0.0083, 0.0042, 0.0041],
        [0.0127, 0.0112, 0.0129],
        [0.0267, 0.0054, 0.0147],
        [0.0318, 0.0062, 0.0073],
        [0.0282, 0.0091, 0.0346],
        [0.0540, 0.0139, 0.0157],
        [0.0027, 0.0005, 0.0001],
        [0.0227, 0.0062, 0.0095],
        [0.0323, 0.0087, 0.0087],
        [0.0201, 0.0096, 0.0103],
        [0.0486, 0.0074, 0.0138],
        [0.0332, 0.0211, 0.0340],
        [0.0239, 0.0106, 0.0188],
        [0.0296, 0.0069, 0.0105]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0922],
        [0.0958],
        [0.0822],
        [0.0862],
        [0.0309],
        [0.0328],
        [0.0760],
        [0.0488],
        [0.0645],
        [0.0042],
        [0.0242],
        [0.0591],
        [0.0432],
        [0.0317],
        [0.0273],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.0922, 0.0958, 0.0822, 0.0862, 0.0309, 0.0328, 0.0760, 0.0488, 0.0645,
         0.0042, 0.0242, 0.0591, 0.0432, 0.0317, 0.0273, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0143],
        [0.0275],
        [0.0221],
        [0.0111],
        [0.0135],
        [0.0069],
        [0.0150],
        [0.0188],
        [0.0073],
        [0.0035],
        [0.0103],
        [0.0085],
        [0.0105],
        [0.0041],
        [0.0085],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0275, 0.0221, 0.0111, 0.0135, 0.0069, 0.0150, 0.0188, 0.0073,
         0.0035, 0.0103, 0.0085, 0.0105, 0.0041, 0.0085, 0.0065]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0486],
        [0.1230],
        [0.0249],
        [0.0174],
        [0.0162],
        [0.0107],
        [0.0228],
        [0.0267],
        [0.0125],
        [0.0042],
        [0.0121],
        [0.0104],
        [0.0170],
        [0.0331],
        [0.0144],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0486, 0.1230, 0.0249, 0.0174, 0.0162, 0.0107, 0.0228, 0.0267, 0.0125,
         0.0042, 0.0121, 0.0104, 0.0170, 0.0331, 0.0144, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0922, 0.0143, 0.0486],
        [0.0958, 0.0275, 0.1230],
        [0.0822, 0.0221, 0.0249],
        [0.0862, 0.0111, 0.0174],
        [0.0309, 0.0135, 0.0162],
        [0.0328, 0.0069, 0.0107],
        [0.0760, 0.0150, 0.0228],
        [0.0488, 0.0188, 0.0267],
        [0.0645, 0.0073, 0.0125],
        [0.0042, 0.0035, 0.0042],
        [0.0242, 0.0103, 0.0121],
        [0.0591, 0.0085, 0.0104],
        [0.0432, 0.0105, 0.0170],
        [0.0317, 0.0041, 0.0331],
        [0.0273, 0.0085, 0.0144],
        [0.0210, 0.0065, 0.0085]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0273],
        [0.0229],
        [0.0356],
        [0.0753],
        [0.0417],
        [0.0130]], device='cuda:0', dtype=torch.float16)/tensor([[0.0273, 0.0229, 0.0356, 0.0753, 0.0417, 0.0130]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0069],
        [0.0113],
        [0.0056],
        [0.0082],
        [0.0192],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0069, 0.0113, 0.0056, 0.0082, 0.0192, 0.0029]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0135],
        [0.0121],
        [0.0091],
        [0.0172],
        [0.0234],
        [0.0044]], device='cuda:0', dtype=torch.float16)/tensor([[0.0135, 0.0121, 0.0091, 0.0172, 0.0234, 0.0044]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0273, 0.0069, 0.0135],
        [0.0229, 0.0113, 0.0121],
        [0.0356, 0.0056, 0.0091],
        [0.0753, 0.0082, 0.0172],
        [0.0417, 0.0192, 0.0234],
        [0.0130, 0.0029, 0.0044]], device='cuda:0')
acc:  0.35353535353535354
Time taken to execute the en NLI task with prompt type rare_synonyms, variation 5 and batchsize 16: 0:03:02.949550
path ['42', 'en', 'llama', 'NLI', 'rare_synonyms', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
----------- 42 en huggyllama/llama-7b NLI identical_modal 0 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 314.64it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0116],
        [0.0217],
        [0.0249],
        [0.0685],
        [0.0409],
        [0.0700],
        [0.0488],
        [0.0043],
        [0.0157],
        [0.0277],
        [0.0861],
        [0.0536],
        [0.0185],
        [0.0488],
        [0.0750],
        [0.0069]], device='cuda:0', dtype=torch.float16)/tensor([[0.0116, 0.0217, 0.0249, 0.0685, 0.0409, 0.0700, 0.0488, 0.0043, 0.0157,
         0.0277, 0.0861, 0.0536, 0.0185, 0.0488, 0.0750, 0.0069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0014],
        [0.0088],
        [0.0070],
        [0.0182],
        [0.0032],
        [0.0187],
        [0.0122],
        [0.0018],
        [0.0075],
        [0.0163],
        [0.0298],
        [0.0148],
        [0.0066],
        [0.0111],
        [0.0143],
        [0.0012]], device='cuda:0', dtype=torch.float16)/tensor([[0.0014, 0.0088, 0.0070, 0.0182, 0.0032, 0.0187, 0.0122, 0.0018, 0.0075,
         0.0163, 0.0298, 0.0148, 0.0066, 0.0111, 0.0143, 0.0012]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0038],
        [0.0038],
        [0.0018],
        [0.0283],
        [0.0102],
        [0.0358],
        [0.0103],
        [0.0027],
        [0.0078],
        [0.0182],
        [0.0312],
        [0.0041],
        [0.0085],
        [0.0190],
        [0.0164],
        [0.0018]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0038, 0.0018, 0.0283, 0.0102, 0.0358, 0.0103, 0.0027, 0.0078,
         0.0182, 0.0312, 0.0041, 0.0085, 0.0190, 0.0164, 0.0018]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0116, 0.0014, 0.0038],
        [0.0217, 0.0088, 0.0038],
        [0.0249, 0.0070, 0.0018],
        [0.0685, 0.0182, 0.0283],
        [0.0409, 0.0032, 0.0102],
        [0.0700, 0.0187, 0.0358],
        [0.0488, 0.0122, 0.0103],
        [0.0043, 0.0018, 0.0027],
        [0.0157, 0.0075, 0.0078],
        [0.0277, 0.0163, 0.0182],
        [0.0861, 0.0298, 0.0312],
        [0.0536, 0.0148, 0.0041],
        [0.0185, 0.0066, 0.0085],
        [0.0488, 0.0111, 0.0190],
        [0.0750, 0.0143, 0.0164],
        [0.0069, 0.0012, 0.0018]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0363],
        [0.0142],
        [0.1127],
        [0.0249],
        [0.0158],
        [0.0074],
        [0.0407],
        [0.0554],
        [0.0117],
        [0.0214],
        [0.0093],
        [0.1106],
        [0.0235],
        [0.0070],
        [0.0326],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0363, 0.0142, 0.1127, 0.0249, 0.0158, 0.0074, 0.0407, 0.0554, 0.0117,
         0.0214, 0.0093, 0.1106, 0.0235, 0.0070, 0.0326, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0087],
        [0.0041],
        [0.0210],
        [0.0095],
        [0.0072],
        [0.0056],
        [0.0107],
        [0.0092],
        [0.0029],
        [0.0073],
        [0.0084],
        [0.0348],
        [0.0064],
        [0.0035],
        [0.0077],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0087, 0.0041, 0.0210, 0.0095, 0.0072, 0.0056, 0.0107, 0.0092, 0.0029,
         0.0073, 0.0084, 0.0348, 0.0064, 0.0035, 0.0077, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0090],
        [0.0049],
        [0.0270],
        [0.0112],
        [0.0041],
        [0.0028],
        [0.0095],
        [0.0158],
        [0.0034],
        [0.0067],
        [0.0041],
        [0.0396],
        [0.0061],
        [0.0009],
        [0.0079],
        [0.0063]], device='cuda:0', dtype=torch.float16)/tensor([[0.0090, 0.0049, 0.0270, 0.0112, 0.0041, 0.0028, 0.0095, 0.0158, 0.0034,
         0.0067, 0.0041, 0.0396, 0.0061, 0.0009, 0.0079, 0.0063]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0363, 0.0087, 0.0090],
        [0.0142, 0.0041, 0.0049],
        [0.1127, 0.0210, 0.0270],
        [0.0249, 0.0095, 0.0112],
        [0.0158, 0.0072, 0.0041],
        [0.0074, 0.0056, 0.0028],
        [0.0407, 0.0107, 0.0095],
        [0.0554, 0.0092, 0.0158],
        [0.0117, 0.0029, 0.0034],
        [0.0214, 0.0073, 0.0067],
        [0.0093, 0.0084, 0.0041],
        [0.1106, 0.0348, 0.0396],
        [0.0235, 0.0064, 0.0061],
        [0.0070, 0.0035, 0.0009],
        [0.0326, 0.0077, 0.0079],
        [0.0110, 0.0047, 0.0063]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0298],
        [0.0254],
        [0.0218],
        [0.0297],
        [0.0302],
        [0.0147],
        [0.0068],
        [0.0688],
        [0.0573],
        [0.0110],
        [0.1406],
        [0.0259],
        [0.1046],
        [0.0898],
        [0.0233],
        [0.1244]], device='cuda:0', dtype=torch.float16)/tensor([[0.0298, 0.0254, 0.0218, 0.0297, 0.0302, 0.0147, 0.0068, 0.0688, 0.0573,
         0.0110, 0.1406, 0.0259, 0.1046, 0.0898, 0.0233, 0.1244]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0100],
        [0.0154],
        [0.0140],
        [0.0055],
        [0.0078],
        [0.0041],
        [0.0042],
        [0.0349],
        [0.0172],
        [0.0035],
        [0.0244],
        [0.0026],
        [0.0379],
        [0.0196],
        [0.0078],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0154, 0.0140, 0.0055, 0.0078, 0.0041, 0.0042, 0.0349, 0.0172,
         0.0035, 0.0244, 0.0026, 0.0379, 0.0196, 0.0078, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0070],
        [0.0053],
        [0.0162],
        [0.0060],
        [0.0093],
        [0.0032],
        [0.0031],
        [0.0268],
        [0.0140],
        [0.0041],
        [0.0326],
        [0.0067],
        [0.0953],
        [0.0232],
        [0.0073],
        [0.0275]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0053, 0.0162, 0.0060, 0.0093, 0.0032, 0.0031, 0.0268, 0.0140,
         0.0041, 0.0326, 0.0067, 0.0953, 0.0232, 0.0073, 0.0275]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0298, 0.0100, 0.0070],
        [0.0254, 0.0154, 0.0053],
        [0.0218, 0.0140, 0.0162],
        [0.0297, 0.0055, 0.0060],
        [0.0302, 0.0078, 0.0093],
        [0.0147, 0.0041, 0.0032],
        [0.0068, 0.0042, 0.0031],
        [0.0688, 0.0349, 0.0268],
        [0.0573, 0.0172, 0.0140],
        [0.0110, 0.0035, 0.0041],
        [0.1406, 0.0244, 0.0326],
        [0.0259, 0.0026, 0.0067],
        [0.1046, 0.0379, 0.0953],
        [0.0898, 0.0196, 0.0232],
        [0.0233, 0.0078, 0.0073],
        [0.1244, 0.0231, 0.0275]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0225],
        [0.0233],
        [0.0172],
        [0.1216],
        [0.0051],
        [0.0214],
        [0.0396],
        [0.0420],
        [0.0623],
        [0.0130],
        [0.1851],
        [0.1196],
        [0.0997],
        [0.0090],
        [0.0259],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0225, 0.0233, 0.0172, 0.1216, 0.0051, 0.0214, 0.0396, 0.0420, 0.0623,
         0.0130, 0.1851, 0.1196, 0.0997, 0.0090, 0.0259, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0052],
        [0.0155],
        [0.0012],
        [0.0300],
        [0.0017],
        [0.0037],
        [0.0035],
        [0.0146],
        [0.0366],
        [0.0063],
        [0.0142],
        [0.0531],
        [0.0139],
        [0.0043],
        [0.0107],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0155, 0.0012, 0.0300, 0.0017, 0.0037, 0.0035, 0.0146, 0.0366,
         0.0063, 0.0142, 0.0531, 0.0139, 0.0043, 0.0107, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0063],
        [0.0167],
        [0.0011],
        [0.0410],
        [0.0015],
        [0.0066],
        [0.0074],
        [0.0124],
        [0.0456],
        [0.0061],
        [0.0419],
        [0.0240],
        [0.0133],
        [0.0064],
        [0.0112],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0167, 0.0011, 0.0410, 0.0015, 0.0066, 0.0074, 0.0124, 0.0456,
         0.0061, 0.0419, 0.0240, 0.0133, 0.0064, 0.0112, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0225, 0.0052, 0.0063],
        [0.0233, 0.0155, 0.0167],
        [0.0172, 0.0012, 0.0011],
        [0.1216, 0.0300, 0.0410],
        [0.0051, 0.0017, 0.0015],
        [0.0214, 0.0037, 0.0066],
        [0.0396, 0.0035, 0.0074],
        [0.0420, 0.0146, 0.0124],
        [0.0623, 0.0366, 0.0456],
        [0.0130, 0.0063, 0.0061],
        [0.1851, 0.0142, 0.0419],
        [0.1196, 0.0531, 0.0240],
        [0.0997, 0.0139, 0.0133],
        [0.0090, 0.0043, 0.0064],
        [0.0259, 0.0107, 0.0112],
        [0.0068, 0.0033, 0.0030]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0160],
        [0.0172],
        [0.0168],
        [0.0045],
        [0.0182],
        [0.1344],
        [0.0772],
        [0.0355],
        [0.0664],
        [0.0219],
        [0.0254],
        [0.0134],
        [0.0187],
        [0.1149],
        [0.0233],
        [0.0211]], device='cuda:0', dtype=torch.float16)/tensor([[0.0160, 0.0172, 0.0168, 0.0045, 0.0182, 0.1344, 0.0772, 0.0355, 0.0664,
         0.0219, 0.0254, 0.0134, 0.0187, 0.1149, 0.0233, 0.0211]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0052],
        [0.0086],
        [0.0060],
        [0.0027],
        [0.0087],
        [0.0305],
        [0.0433],
        [0.0101],
        [0.0135],
        [0.0063],
        [0.0065],
        [0.0065],
        [0.0037],
        [0.0228],
        [0.0147],
        [0.0057]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0086, 0.0060, 0.0027, 0.0087, 0.0305, 0.0433, 0.0101, 0.0135,
         0.0063, 0.0065, 0.0065, 0.0037, 0.0228, 0.0147, 0.0057]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0062],
        [0.0099],
        [0.0045],
        [0.0024],
        [0.0086],
        [0.0225],
        [0.0353],
        [0.0094],
        [0.0105],
        [0.0086],
        [0.0071],
        [0.0051],
        [0.0051],
        [0.0385],
        [0.0070],
        [0.0073]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0099, 0.0045, 0.0024, 0.0086, 0.0225, 0.0353, 0.0094, 0.0105,
         0.0086, 0.0071, 0.0051, 0.0051, 0.0385, 0.0070, 0.0073]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0160, 0.0052, 0.0062],
        [0.0172, 0.0086, 0.0099],
        [0.0168, 0.0060, 0.0045],
        [0.0045, 0.0027, 0.0024],
        [0.0182, 0.0087, 0.0086],
        [0.1344, 0.0305, 0.0225],
        [0.0772, 0.0433, 0.0353],
        [0.0355, 0.0101, 0.0094],
        [0.0664, 0.0135, 0.0105],
        [0.0219, 0.0063, 0.0086],
        [0.0254, 0.0065, 0.0071],
        [0.0134, 0.0065, 0.0051],
        [0.0187, 0.0037, 0.0051],
        [0.1149, 0.0228, 0.0385],
        [0.0233, 0.0147, 0.0070],
        [0.0211, 0.0057, 0.0073]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0152],
        [0.0119],
        [0.0706],
        [0.0553],
        [0.0018],
        [0.0098],
        [0.0762],
        [0.0605],
        [0.0135],
        [0.0147],
        [0.0133],
        [0.0901],
        [0.0334],
        [0.0892],
        [0.0055],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0152, 0.0119, 0.0706, 0.0553, 0.0018, 0.0098, 0.0762, 0.0605, 0.0135,
         0.0147, 0.0133, 0.0901, 0.0334, 0.0892, 0.0055, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0050],
        [0.0083],
        [0.0136],
        [0.0224],
        [0.0007],
        [0.0021],
        [0.0211],
        [0.0277],
        [0.0072],
        [0.0019],
        [0.0095],
        [0.0193],
        [0.0114],
        [0.0341],
        [0.0014],
        [0.0061]], device='cuda:0', dtype=torch.float16)/tensor([[0.0050, 0.0083, 0.0136, 0.0224, 0.0007, 0.0021, 0.0211, 0.0277, 0.0072,
         0.0019, 0.0095, 0.0193, 0.0114, 0.0341, 0.0014, 0.0061]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0093],
        [0.0047],
        [0.0198],
        [0.0161],
        [0.0005],
        [0.0024],
        [0.0189],
        [0.0197],
        [0.0022],
        [0.0055],
        [0.0092],
        [0.0185],
        [0.0114],
        [0.0316],
        [0.0007],
        [0.0039]], device='cuda:0', dtype=torch.float16)/tensor([[0.0093, 0.0047, 0.0198, 0.0161, 0.0005, 0.0024, 0.0189, 0.0197, 0.0022,
         0.0055, 0.0092, 0.0185, 0.0114, 0.0316, 0.0007, 0.0039]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0152, 0.0050, 0.0093],
        [0.0119, 0.0083, 0.0047],
        [0.0706, 0.0136, 0.0198],
        [0.0553, 0.0224, 0.0161],
        [0.0018, 0.0007, 0.0005],
        [0.0098, 0.0021, 0.0024],
        [0.0762, 0.0211, 0.0189],
        [0.0605, 0.0277, 0.0197],
        [0.0135, 0.0072, 0.0022],
        [0.0147, 0.0019, 0.0055],
        [0.0133, 0.0095, 0.0092],
        [0.0901, 0.0193, 0.0185],
        [0.0334, 0.0114, 0.0114],
        [0.0892, 0.0341, 0.0316],
        [0.0055, 0.0014, 0.0007],
        [0.0110, 0.0061, 0.0039]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0155],
        [0.0944],
        [0.0035],
        [0.0078],
        [0.0186],
        [0.0627],
        [0.0167],
        [0.0272],
        [0.0723],
        [0.0159],
        [0.0025],
        [0.0301],
        [0.0397],
        [0.0158],
        [0.0096],
        [0.0392]], device='cuda:0', dtype=torch.float16)/tensor([[0.0155, 0.0944, 0.0035, 0.0078, 0.0186, 0.0627, 0.0167, 0.0272, 0.0723,
         0.0159, 0.0025, 0.0301, 0.0397, 0.0158, 0.0096, 0.0392]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0108],
        [0.0225],
        [0.0060],
        [0.0013],
        [0.0058],
        [0.0103],
        [0.0060],
        [0.0059],
        [0.0172],
        [0.0041],
        [0.0012],
        [0.0148],
        [0.0077],
        [0.0064],
        [0.0034],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0108, 0.0225, 0.0060, 0.0013, 0.0058, 0.0103, 0.0060, 0.0059, 0.0172,
         0.0041, 0.0012, 0.0148, 0.0077, 0.0064, 0.0034, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0059],
        [0.0271],
        [0.0015],
        [0.0019],
        [0.0066],
        [0.0079],
        [0.0057],
        [0.0079],
        [0.0173],
        [0.0047],
        [0.0006],
        [0.0176],
        [0.0060],
        [0.0041],
        [0.0027],
        [0.0045]], device='cuda:0', dtype=torch.float16)/tensor([[0.0059, 0.0271, 0.0015, 0.0019, 0.0066, 0.0079, 0.0057, 0.0079, 0.0173,
         0.0047, 0.0006, 0.0176, 0.0060, 0.0041, 0.0027, 0.0045]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0155, 0.0108, 0.0059],
        [0.0944, 0.0225, 0.0271],
        [0.0035, 0.0060, 0.0015],
        [0.0078, 0.0013, 0.0019],
        [0.0186, 0.0058, 0.0066],
        [0.0627, 0.0103, 0.0079],
        [0.0167, 0.0060, 0.0057],
        [0.0272, 0.0059, 0.0079],
        [0.0723, 0.0172, 0.0173],
        [0.0159, 0.0041, 0.0047],
        [0.0025, 0.0012, 0.0006],
        [0.0301, 0.0148, 0.0176],
        [0.0397, 0.0077, 0.0060],
        [0.0158, 0.0064, 0.0041],
        [0.0096, 0.0034, 0.0027],
        [0.0392, 0.0116, 0.0045]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0067],
        [0.0140],
        [0.0109],
        [0.0435],
        [0.0941],
        [0.0220],
        [0.1201],
        [0.0598],
        [0.0227],
        [0.1192],
        [0.0071],
        [0.0441],
        [0.0259],
        [0.0591],
        [0.0876],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0140, 0.0109, 0.0435, 0.0941, 0.0220, 0.1201, 0.0598, 0.0227,
         0.1192, 0.0071, 0.0441, 0.0259, 0.0591, 0.0876, 0.0127]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0013],
        [0.0032],
        [0.0036],
        [0.0120],
        [0.0470],
        [0.0091],
        [0.0260],
        [0.0263],
        [0.0057],
        [0.0348],
        [0.0035],
        [0.0090],
        [0.0140],
        [0.0211],
        [0.0199],
        [0.0023]], device='cuda:0', dtype=torch.float16)/tensor([[0.0013, 0.0032, 0.0036, 0.0120, 0.0470, 0.0091, 0.0260, 0.0263, 0.0057,
         0.0348, 0.0035, 0.0090, 0.0140, 0.0211, 0.0199, 0.0023]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0021],
        [0.0037],
        [0.0034],
        [0.0189],
        [0.0642],
        [0.0064],
        [0.0170],
        [0.0444],
        [0.0062],
        [0.0288],
        [0.0037],
        [0.0160],
        [0.0041],
        [0.0195],
        [0.0175],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0021, 0.0037, 0.0034, 0.0189, 0.0642, 0.0064, 0.0170, 0.0444, 0.0062,
         0.0288, 0.0037, 0.0160, 0.0041, 0.0195, 0.0175, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0067, 0.0013, 0.0021],
        [0.0140, 0.0032, 0.0037],
        [0.0109, 0.0036, 0.0034],
        [0.0435, 0.0120, 0.0189],
        [0.0941, 0.0470, 0.0642],
        [0.0220, 0.0091, 0.0064],
        [0.1201, 0.0260, 0.0170],
        [0.0598, 0.0263, 0.0444],
        [0.0227, 0.0057, 0.0062],
        [0.1192, 0.0348, 0.0288],
        [0.0071, 0.0035, 0.0037],
        [0.0441, 0.0090, 0.0160],
        [0.0259, 0.0140, 0.0041],
        [0.0591, 0.0211, 0.0195],
        [0.0876, 0.0199, 0.0175],
        [0.0127, 0.0023, 0.0019]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0278],
        [0.0091],
        [0.0987],
        [0.0282],
        [0.0245],
        [0.0115],
        [0.1039],
        [0.0580],
        [0.0453],
        [0.0064],
        [0.0083],
        [0.0663],
        [0.0147],
        [0.0369],
        [0.0196],
        [0.0501]], device='cuda:0', dtype=torch.float16)/tensor([[0.0278, 0.0091, 0.0987, 0.0282, 0.0245, 0.0115, 0.1039, 0.0580, 0.0453,
         0.0064, 0.0083, 0.0663, 0.0147, 0.0369, 0.0196, 0.0501]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0073],
        [0.0056],
        [0.0231],
        [0.0153],
        [0.0045],
        [0.0033],
        [0.0239],
        [0.0585],
        [0.0114],
        [0.0023],
        [0.0047],
        [0.0117],
        [0.0036],
        [0.0079],
        [0.0062],
        [0.0259]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0056, 0.0231, 0.0153, 0.0045, 0.0033, 0.0239, 0.0585, 0.0114,
         0.0023, 0.0047, 0.0117, 0.0036, 0.0079, 0.0062, 0.0259]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0055],
        [0.0023],
        [0.0474],
        [0.0184],
        [0.0031],
        [0.0024],
        [0.0356],
        [0.0248],
        [0.0110],
        [0.0016],
        [0.0021],
        [0.0147],
        [0.0018],
        [0.0088],
        [0.0080],
        [0.0301]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0023, 0.0474, 0.0184, 0.0031, 0.0024, 0.0356, 0.0248, 0.0110,
         0.0016, 0.0021, 0.0147, 0.0018, 0.0088, 0.0080, 0.0301]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0278, 0.0073, 0.0055],
        [0.0091, 0.0056, 0.0023],
        [0.0987, 0.0231, 0.0474],
        [0.0282, 0.0153, 0.0184],
        [0.0245, 0.0045, 0.0031],
        [0.0115, 0.0033, 0.0024],
        [0.1039, 0.0239, 0.0356],
        [0.0580, 0.0585, 0.0248],
        [0.0453, 0.0114, 0.0110],
        [0.0064, 0.0023, 0.0016],
        [0.0083, 0.0047, 0.0021],
        [0.0663, 0.0117, 0.0147],
        [0.0147, 0.0036, 0.0018],
        [0.0369, 0.0079, 0.0088],
        [0.0196, 0.0062, 0.0080],
        [0.0501, 0.0259, 0.0301]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0358],
        [0.0570],
        [0.0144],
        [0.0424],
        [0.0327],
        [0.0290],
        [0.0355],
        [0.0042],
        [0.0194],
        [0.0190],
        [0.0446],
        [0.0344],
        [0.0064],
        [0.0811],
        [0.0147],
        [0.0077]], device='cuda:0', dtype=torch.float16)/tensor([[0.0358, 0.0570, 0.0144, 0.0424, 0.0327, 0.0290, 0.0355, 0.0042, 0.0194,
         0.0190, 0.0446, 0.0344, 0.0064, 0.0811, 0.0147, 0.0077]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0057],
        [0.0196],
        [0.0072],
        [0.0094],
        [0.0077],
        [0.0105],
        [0.0080],
        [0.0025],
        [0.0025],
        [0.0085],
        [0.0303],
        [0.0256],
        [0.0025],
        [0.0315],
        [0.0054],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0196, 0.0072, 0.0094, 0.0077, 0.0105, 0.0080, 0.0025, 0.0025,
         0.0085, 0.0303, 0.0256, 0.0025, 0.0315, 0.0054, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0061],
        [0.0136],
        [0.0054],
        [0.0164],
        [0.0096],
        [0.0069],
        [0.0117],
        [0.0017],
        [0.0065],
        [0.0115],
        [0.0303],
        [0.0342],
        [0.0013],
        [0.0612],
        [0.0031],
        [0.0032]], device='cuda:0', dtype=torch.float16)/tensor([[0.0061, 0.0136, 0.0054, 0.0164, 0.0096, 0.0069, 0.0117, 0.0017, 0.0065,
         0.0115, 0.0303, 0.0342, 0.0013, 0.0612, 0.0031, 0.0032]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0358, 0.0057, 0.0061],
        [0.0570, 0.0196, 0.0136],
        [0.0144, 0.0072, 0.0054],
        [0.0424, 0.0094, 0.0164],
        [0.0327, 0.0077, 0.0096],
        [0.0290, 0.0105, 0.0069],
        [0.0355, 0.0080, 0.0117],
        [0.0042, 0.0025, 0.0017],
        [0.0194, 0.0025, 0.0065],
        [0.0190, 0.0085, 0.0115],
        [0.0446, 0.0303, 0.0303],
        [0.0344, 0.0256, 0.0342],
        [0.0064, 0.0025, 0.0013],
        [0.0811, 0.0315, 0.0612],
        [0.0147, 0.0054, 0.0031],
        [0.0077, 0.0033, 0.0032]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0043],
        [0.0100],
        [0.0041],
        [0.0193],
        [0.0107],
        [0.0338],
        [0.1077],
        [0.0093],
        [0.0314],
        [0.0591],
        [0.0120],
        [0.0430],
        [0.0033],
        [0.0492],
        [0.0361],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0043, 0.0100, 0.0041, 0.0193, 0.0107, 0.0338, 0.1077, 0.0093, 0.0314,
         0.0591, 0.0120, 0.0430, 0.0033, 0.0492, 0.0361, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0009],
        [0.0060],
        [0.0036],
        [0.0080],
        [0.0071],
        [0.0041],
        [0.0170],
        [0.0011],
        [0.0166],
        [0.0166],
        [0.0025],
        [0.0161],
        [0.0019],
        [0.0075],
        [0.0052],
        [0.0020]], device='cuda:0', dtype=torch.float16)/tensor([[0.0009, 0.0060, 0.0036, 0.0080, 0.0071, 0.0041, 0.0170, 0.0011, 0.0166,
         0.0166, 0.0025, 0.0161, 0.0019, 0.0075, 0.0052, 0.0020]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0008],
        [0.0037],
        [0.0011],
        [0.0084],
        [0.0054],
        [0.0045],
        [0.0356],
        [0.0018],
        [0.0081],
        [0.0105],
        [0.0023],
        [0.0118],
        [0.0008],
        [0.0252],
        [0.0121],
        [0.0017]], device='cuda:0', dtype=torch.float16)/tensor([[0.0008, 0.0037, 0.0011, 0.0084, 0.0054, 0.0045, 0.0356, 0.0018, 0.0081,
         0.0105, 0.0023, 0.0118, 0.0008, 0.0252, 0.0121, 0.0017]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0043, 0.0009, 0.0008],
        [0.0100, 0.0060, 0.0037],
        [0.0041, 0.0036, 0.0011],
        [0.0193, 0.0080, 0.0084],
        [0.0107, 0.0071, 0.0054],
        [0.0338, 0.0041, 0.0045],
        [0.1077, 0.0170, 0.0356],
        [0.0093, 0.0011, 0.0018],
        [0.0314, 0.0166, 0.0081],
        [0.0591, 0.0166, 0.0105],
        [0.0120, 0.0025, 0.0023],
        [0.0430, 0.0161, 0.0118],
        [0.0033, 0.0019, 0.0008],
        [0.0492, 0.0075, 0.0252],
        [0.0361, 0.0052, 0.0121],
        [0.0062, 0.0020, 0.0017]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0202],
        [0.0204],
        [0.0275],
        [0.0168],
        [0.0392],
        [0.0180],
        [0.0127],
        [0.0083],
        [0.0426],
        [0.1175],
        [0.0069],
        [0.0195],
        [0.0770],
        [0.0164],
        [0.0156],
        [0.0116]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0204, 0.0275, 0.0168, 0.0392, 0.0180, 0.0127, 0.0083, 0.0426,
         0.1175, 0.0069, 0.0195, 0.0770, 0.0164, 0.0156, 0.0116]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0074],
        [0.0069],
        [0.0052],
        [0.0089],
        [0.0042],
        [0.0075],
        [0.0039],
        [0.0082],
        [0.0303],
        [0.0038],
        [0.0056],
        [0.0135],
        [0.0096],
        [0.0097],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0074, 0.0069, 0.0052, 0.0089, 0.0042, 0.0075, 0.0039, 0.0082,
         0.0303, 0.0038, 0.0056, 0.0135, 0.0096, 0.0097, 0.0065]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0047],
        [0.0090],
        [0.0080],
        [0.0081],
        [0.0099],
        [0.0028],
        [0.0070],
        [0.0014],
        [0.0102],
        [0.0279],
        [0.0025],
        [0.0051],
        [0.0149],
        [0.0087],
        [0.0050],
        [0.0062]], device='cuda:0', dtype=torch.float16)/tensor([[0.0047, 0.0090, 0.0080, 0.0081, 0.0099, 0.0028, 0.0070, 0.0014, 0.0102,
         0.0279, 0.0025, 0.0051, 0.0149, 0.0087, 0.0050, 0.0062]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0202, 0.0062, 0.0047],
        [0.0204, 0.0074, 0.0090],
        [0.0275, 0.0069, 0.0080],
        [0.0168, 0.0052, 0.0081],
        [0.0392, 0.0089, 0.0099],
        [0.0180, 0.0042, 0.0028],
        [0.0127, 0.0075, 0.0070],
        [0.0083, 0.0039, 0.0014],
        [0.0426, 0.0082, 0.0102],
        [0.1175, 0.0303, 0.0279],
        [0.0069, 0.0038, 0.0025],
        [0.0195, 0.0056, 0.0051],
        [0.0770, 0.0135, 0.0149],
        [0.0164, 0.0096, 0.0087],
        [0.0156, 0.0097, 0.0050],
        [0.0116, 0.0065, 0.0062]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0298],
        [0.0061],
        [0.0061],
        [0.0121],
        [0.0077],
        [0.0306]], device='cuda:0', dtype=torch.float16)/tensor([[0.0298, 0.0061, 0.0061, 0.0121, 0.0077, 0.0306]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0193],
        [0.0027],
        [0.0065],
        [0.0036],
        [0.0057],
        [0.0092]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.0027, 0.0065, 0.0036, 0.0057, 0.0092]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0127],
        [0.0021],
        [0.0011],
        [0.0025],
        [0.0018],
        [0.0049]], device='cuda:0', dtype=torch.float16)/tensor([[0.0127, 0.0021, 0.0011, 0.0025, 0.0018, 0.0049]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0298, 0.0193, 0.0127],
        [0.0061, 0.0027, 0.0021],
        [0.0061, 0.0065, 0.0011],
        [0.0121, 0.0036, 0.0025],
        [0.0077, 0.0057, 0.0018],
        [0.0306, 0.0092, 0.0049]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the en NLI task with prompt type identical_modal, variation 0 and batchsize 16: 0:03:02.496231
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_0']
----------- 42 en huggyllama/llama-7b NLI identical_modal 1 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 325.45it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0063],
        [0.0408],
        [0.0110],
        [0.1116],
        [0.0626],
        [0.0322],
        [0.0132],
        [0.0816],
        [0.0140],
        [0.0334],
        [0.0328],
        [0.0037],
        [0.0948],
        [0.0038],
        [0.0022],
        [0.0014]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0408, 0.0110, 0.1116, 0.0626, 0.0322, 0.0132, 0.0816, 0.0140,
         0.0334, 0.0328, 0.0037, 0.0948, 0.0038, 0.0022, 0.0014]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0049],
        [0.0035],
        [0.0063],
        [0.0171],
        [0.0657],
        [0.0078],
        [0.0084],
        [0.0169],
        [0.0070],
        [0.0048],
        [0.0100],
        [0.0025],
        [0.0198],
        [0.0056],
        [0.0010],
        [0.0008]], device='cuda:0', dtype=torch.float16)/tensor([[0.0049, 0.0035, 0.0063, 0.0171, 0.0657, 0.0078, 0.0084, 0.0169, 0.0070,
         0.0048, 0.0100, 0.0025, 0.0198, 0.0056, 0.0010, 0.0008]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0019],
        [0.0106],
        [0.0042],
        [0.0414],
        [0.0265],
        [0.0108],
        [0.0076],
        [0.0202],
        [0.0082],
        [0.0046],
        [0.0085],
        [0.0014],
        [0.0175],
        [0.0014],
        [0.0006],
        [0.0006]], device='cuda:0', dtype=torch.float16)/tensor([[0.0019, 0.0106, 0.0042, 0.0414, 0.0265, 0.0108, 0.0076, 0.0202, 0.0082,
         0.0046, 0.0085, 0.0014, 0.0175, 0.0014, 0.0006, 0.0006]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0063, 0.0049, 0.0019],
        [0.0408, 0.0035, 0.0106],
        [0.0110, 0.0063, 0.0042],
        [0.1116, 0.0171, 0.0414],
        [0.0626, 0.0657, 0.0265],
        [0.0322, 0.0078, 0.0108],
        [0.0132, 0.0084, 0.0076],
        [0.0816, 0.0169, 0.0202],
        [0.0140, 0.0070, 0.0082],
        [0.0334, 0.0048, 0.0046],
        [0.0328, 0.0100, 0.0085],
        [0.0037, 0.0025, 0.0014],
        [0.0948, 0.0198, 0.0175],
        [0.0038, 0.0056, 0.0014],
        [0.0022, 0.0010, 0.0006],
        [0.0014, 0.0008, 0.0006]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0143],
        [0.0349],
        [0.0123],
        [0.0213],
        [0.0411],
        [0.0093],
        [0.0059],
        [0.0347],
        [0.0844],
        [0.0105],
        [0.0042],
        [0.0145],
        [0.0066],
        [0.0072],
        [0.0280],
        [0.0565]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0349, 0.0123, 0.0213, 0.0411, 0.0093, 0.0059, 0.0347, 0.0844,
         0.0105, 0.0042, 0.0145, 0.0066, 0.0072, 0.0280, 0.0565]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0073],
        [0.0210],
        [0.0040],
        [0.0157],
        [0.0120],
        [0.0070],
        [0.0021],
        [0.0037],
        [0.0318],
        [0.0018],
        [0.0021],
        [0.0018],
        [0.0057],
        [0.0038],
        [0.0097],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0073, 0.0210, 0.0040, 0.0157, 0.0120, 0.0070, 0.0021, 0.0037, 0.0318,
         0.0018, 0.0021, 0.0018, 0.0057, 0.0038, 0.0097, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0071],
        [0.0125],
        [0.0021],
        [0.0043],
        [0.0098],
        [0.0058],
        [0.0019],
        [0.0078],
        [0.0594],
        [0.0019],
        [0.0027],
        [0.0050],
        [0.0026],
        [0.0032],
        [0.0084],
        [0.0144]], device='cuda:0', dtype=torch.float16)/tensor([[0.0071, 0.0125, 0.0021, 0.0043, 0.0098, 0.0058, 0.0019, 0.0078, 0.0594,
         0.0019, 0.0027, 0.0050, 0.0026, 0.0032, 0.0084, 0.0144]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0143, 0.0073, 0.0071],
        [0.0349, 0.0210, 0.0125],
        [0.0123, 0.0040, 0.0021],
        [0.0213, 0.0157, 0.0043],
        [0.0411, 0.0120, 0.0098],
        [0.0093, 0.0070, 0.0058],
        [0.0059, 0.0021, 0.0019],
        [0.0347, 0.0037, 0.0078],
        [0.0844, 0.0318, 0.0594],
        [0.0105, 0.0018, 0.0019],
        [0.0042, 0.0021, 0.0027],
        [0.0145, 0.0018, 0.0050],
        [0.0066, 0.0057, 0.0026],
        [0.0072, 0.0038, 0.0032],
        [0.0280, 0.0097, 0.0084],
        [0.0565, 0.0112, 0.0144]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0210],
        [0.0588],
        [0.0105],
        [0.0021],
        [0.1111],
        [0.0279],
        [0.0582],
        [0.1061],
        [0.0083],
        [0.0249],
        [0.0569],
        [0.0871],
        [0.0070],
        [0.0096],
        [0.0133],
        [0.0361]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0588, 0.0105, 0.0021, 0.1111, 0.0279, 0.0582, 0.1061, 0.0083,
         0.0249, 0.0569, 0.0871, 0.0070, 0.0096, 0.0133, 0.0361]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0066],
        [0.0246],
        [0.0074],
        [0.0014],
        [0.0256],
        [0.0152],
        [0.0184],
        [0.0204],
        [0.0043],
        [0.0184],
        [0.0129],
        [0.0149],
        [0.0070],
        [0.0065],
        [0.0099],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0246, 0.0074, 0.0014, 0.0256, 0.0152, 0.0184, 0.0204, 0.0043,
         0.0184, 0.0129, 0.0149, 0.0070, 0.0065, 0.0099, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0070],
        [0.0417],
        [0.0042],
        [0.0006],
        [0.0172],
        [0.0071],
        [0.0153],
        [0.0296],
        [0.0017],
        [0.0188],
        [0.0085],
        [0.0124],
        [0.0035],
        [0.0058],
        [0.0085],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0417, 0.0042, 0.0006, 0.0172, 0.0071, 0.0153, 0.0296, 0.0017,
         0.0188, 0.0085, 0.0124, 0.0035, 0.0058, 0.0085, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0210, 0.0066, 0.0070],
        [0.0588, 0.0246, 0.0417],
        [0.0105, 0.0074, 0.0042],
        [0.0021, 0.0014, 0.0006],
        [0.1111, 0.0256, 0.0172],
        [0.0279, 0.0152, 0.0071],
        [0.0582, 0.0184, 0.0153],
        [0.1061, 0.0204, 0.0296],
        [0.0083, 0.0043, 0.0017],
        [0.0249, 0.0184, 0.0188],
        [0.0569, 0.0129, 0.0085],
        [0.0871, 0.0149, 0.0124],
        [0.0070, 0.0070, 0.0035],
        [0.0096, 0.0065, 0.0058],
        [0.0133, 0.0099, 0.0085],
        [0.0361, 0.0058, 0.0129]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0157],
        [0.0284],
        [0.0316],
        [0.0133],
        [0.0355],
        [0.1797],
        [0.0604],
        [0.0187],
        [0.0750],
        [0.1138],
        [0.0701],
        [0.0710],
        [0.0175],
        [0.0327],
        [0.1080],
        [0.0824]], device='cuda:0', dtype=torch.float16)/tensor([[0.0157, 0.0284, 0.0316, 0.0133, 0.0355, 0.1797, 0.0604, 0.0187, 0.0750,
         0.1138, 0.0701, 0.0710, 0.0175, 0.0327, 0.1080, 0.0824]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0068],
        [0.0080],
        [0.0076],
        [0.0061],
        [0.0277],
        [0.0142],
        [0.0091],
        [0.0098],
        [0.0113],
        [0.0242],
        [0.0181],
        [0.0271],
        [0.0135],
        [0.0078],
        [0.0430],
        [0.0341]], device='cuda:0', dtype=torch.float16)/tensor([[0.0068, 0.0080, 0.0076, 0.0061, 0.0277, 0.0142, 0.0091, 0.0098, 0.0113,
         0.0242, 0.0181, 0.0271, 0.0135, 0.0078, 0.0430, 0.0341]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0074],
        [0.0083],
        [0.0084],
        [0.0019],
        [0.0257],
        [0.0472],
        [0.0069],
        [0.0103],
        [0.0128],
        [0.0358],
        [0.0340],
        [0.0253],
        [0.0159],
        [0.0053],
        [0.1031],
        [0.0303]], device='cuda:0', dtype=torch.float16)/tensor([[0.0074, 0.0083, 0.0084, 0.0019, 0.0257, 0.0472, 0.0069, 0.0103, 0.0128,
         0.0358, 0.0340, 0.0253, 0.0159, 0.0053, 0.1031, 0.0303]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0157, 0.0068, 0.0074],
        [0.0284, 0.0080, 0.0083],
        [0.0316, 0.0076, 0.0084],
        [0.0133, 0.0061, 0.0019],
        [0.0355, 0.0277, 0.0257],
        [0.1797, 0.0142, 0.0472],
        [0.0604, 0.0091, 0.0069],
        [0.0187, 0.0098, 0.0103],
        [0.0750, 0.0113, 0.0128],
        [0.1138, 0.0242, 0.0358],
        [0.0701, 0.0181, 0.0340],
        [0.0710, 0.0271, 0.0253],
        [0.0175, 0.0135, 0.0159],
        [0.0327, 0.0078, 0.0053],
        [0.1080, 0.0430, 0.1031],
        [0.0824, 0.0341, 0.0303]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0054],
        [0.0353],
        [0.0473],
        [0.0150],
        [0.0190],
        [0.0913],
        [0.0205],
        [0.0240],
        [0.0175],
        [0.0365],
        [0.0073],
        [0.0129],
        [0.0073],
        [0.0345],
        [0.0225],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0353, 0.0473, 0.0150, 0.0190, 0.0913, 0.0205, 0.0240, 0.0175,
         0.0365, 0.0073, 0.0129, 0.0073, 0.0345, 0.0225, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0011],
        [0.0102],
        [0.0204],
        [0.0042],
        [0.0087],
        [0.0211],
        [0.0067],
        [0.0025],
        [0.0018],
        [0.0090],
        [0.0052],
        [0.0063],
        [0.0033],
        [0.0083],
        [0.0069],
        [0.0070]], device='cuda:0', dtype=torch.float16)/tensor([[0.0011, 0.0102, 0.0204, 0.0042, 0.0087, 0.0211, 0.0067, 0.0025, 0.0018,
         0.0090, 0.0052, 0.0063, 0.0033, 0.0083, 0.0069, 0.0070]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0022],
        [0.0149],
        [0.0119],
        [0.0030],
        [0.0063],
        [0.0489],
        [0.0048],
        [0.0071],
        [0.0016],
        [0.0094],
        [0.0027],
        [0.0032],
        [0.0032],
        [0.0170],
        [0.0046],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0022, 0.0149, 0.0119, 0.0030, 0.0063, 0.0489, 0.0048, 0.0071, 0.0016,
         0.0094, 0.0027, 0.0032, 0.0032, 0.0170, 0.0046, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0054, 0.0011, 0.0022],
        [0.0353, 0.0102, 0.0149],
        [0.0473, 0.0204, 0.0119],
        [0.0150, 0.0042, 0.0030],
        [0.0190, 0.0087, 0.0063],
        [0.0913, 0.0211, 0.0489],
        [0.0205, 0.0067, 0.0048],
        [0.0240, 0.0025, 0.0071],
        [0.0175, 0.0018, 0.0016],
        [0.0365, 0.0090, 0.0094],
        [0.0073, 0.0052, 0.0027],
        [0.0129, 0.0063, 0.0032],
        [0.0073, 0.0033, 0.0032],
        [0.0345, 0.0083, 0.0170],
        [0.0225, 0.0069, 0.0046],
        [0.0119, 0.0070, 0.0058]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0310],
        [0.0195],
        [0.0136],
        [0.0182],
        [0.0268],
        [0.0130],
        [0.0282],
        [0.0076],
        [0.1003],
        [0.0143],
        [0.0847],
        [0.0141],
        [0.0243],
        [0.0482],
        [0.0143],
        [0.0318]], device='cuda:0', dtype=torch.float16)/tensor([[0.0310, 0.0195, 0.0136, 0.0182, 0.0268, 0.0130, 0.0282, 0.0076, 0.1003,
         0.0143, 0.0847, 0.0141, 0.0243, 0.0482, 0.0143, 0.0318]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0152],
        [0.0056],
        [0.0131],
        [0.0078],
        [0.0049],
        [0.0109],
        [0.0083],
        [0.0031],
        [0.0256],
        [0.0079],
        [0.0219],
        [0.0056],
        [0.0104],
        [0.0183],
        [0.0058],
        [0.0039]], device='cuda:0', dtype=torch.float16)/tensor([[0.0152, 0.0056, 0.0131, 0.0078, 0.0049, 0.0109, 0.0083, 0.0031, 0.0256,
         0.0079, 0.0219, 0.0056, 0.0104, 0.0183, 0.0058, 0.0039]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0190],
        [0.0066],
        [0.0057],
        [0.0068],
        [0.0057],
        [0.0069],
        [0.0046],
        [0.0020],
        [0.0352],
        [0.0046],
        [0.0173],
        [0.0044],
        [0.0033],
        [0.0203],
        [0.0062],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0066, 0.0057, 0.0068, 0.0057, 0.0069, 0.0046, 0.0020, 0.0352,
         0.0046, 0.0173, 0.0044, 0.0033, 0.0203, 0.0062, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0310, 0.0152, 0.0190],
        [0.0195, 0.0056, 0.0066],
        [0.0136, 0.0131, 0.0057],
        [0.0182, 0.0078, 0.0068],
        [0.0268, 0.0049, 0.0057],
        [0.0130, 0.0109, 0.0069],
        [0.0282, 0.0083, 0.0046],
        [0.0076, 0.0031, 0.0020],
        [0.1003, 0.0256, 0.0352],
        [0.0143, 0.0079, 0.0046],
        [0.0847, 0.0219, 0.0173],
        [0.0141, 0.0056, 0.0044],
        [0.0243, 0.0104, 0.0033],
        [0.0482, 0.0183, 0.0203],
        [0.0143, 0.0058, 0.0062],
        [0.0318, 0.0039, 0.0051]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0085],
        [0.0162],
        [0.0365],
        [0.1295],
        [0.0130],
        [0.0147],
        [0.0048],
        [0.0058],
        [0.0405],
        [0.0195],
        [0.0442],
        [0.0233],
        [0.0184],
        [0.0059],
        [0.0032],
        [0.0067]], device='cuda:0', dtype=torch.float16)/tensor([[0.0085, 0.0162, 0.0365, 0.1295, 0.0130, 0.0147, 0.0048, 0.0058, 0.0405,
         0.0195, 0.0442, 0.0233, 0.0184, 0.0059, 0.0032, 0.0067]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0030],
        [0.0055],
        [0.0092],
        [0.0175],
        [0.0044],
        [0.0096],
        [0.0057],
        [0.0014],
        [0.0124],
        [0.0084],
        [0.0259],
        [0.0063],
        [0.0036],
        [0.0037],
        [0.0023],
        [0.0012]], device='cuda:0', dtype=torch.float16)/tensor([[0.0030, 0.0055, 0.0092, 0.0175, 0.0044, 0.0096, 0.0057, 0.0014, 0.0124,
         0.0084, 0.0259, 0.0063, 0.0036, 0.0037, 0.0023, 0.0012]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0079],
        [0.0088],
        [0.0291],
        [0.0056],
        [0.0074],
        [0.0011],
        [0.0008],
        [0.0214],
        [0.0035],
        [0.0278],
        [0.0044],
        [0.0052],
        [0.0027],
        [0.0019],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0079, 0.0088, 0.0291, 0.0056, 0.0074, 0.0011, 0.0008, 0.0214,
         0.0035, 0.0278, 0.0044, 0.0052, 0.0027, 0.0019, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0085, 0.0030, 0.0034],
        [0.0162, 0.0055, 0.0079],
        [0.0365, 0.0092, 0.0088],
        [0.1295, 0.0175, 0.0291],
        [0.0130, 0.0044, 0.0056],
        [0.0147, 0.0096, 0.0074],
        [0.0048, 0.0057, 0.0011],
        [0.0058, 0.0014, 0.0008],
        [0.0405, 0.0124, 0.0214],
        [0.0195, 0.0084, 0.0035],
        [0.0442, 0.0259, 0.0278],
        [0.0233, 0.0063, 0.0044],
        [0.0184, 0.0036, 0.0052],
        [0.0059, 0.0037, 0.0027],
        [0.0032, 0.0023, 0.0019],
        [0.0067, 0.0012, 0.0019]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0177],
        [0.1118],
        [0.0551],
        [0.0206],
        [0.0560],
        [0.1188],
        [0.0089],
        [0.1068],
        [0.0054],
        [0.0330],
        [0.0117],
        [0.0084],
        [0.0101],
        [0.0153],
        [0.0626],
        [0.1157]], device='cuda:0', dtype=torch.float16)/tensor([[0.0177, 0.1118, 0.0551, 0.0206, 0.0560, 0.1188, 0.0089, 0.1068, 0.0054,
         0.0330, 0.0117, 0.0084, 0.0101, 0.0153, 0.0626, 0.1157]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0064],
        [0.0368],
        [0.0158],
        [0.0139],
        [0.0156],
        [0.0265],
        [0.0011],
        [0.0359],
        [0.0023],
        [0.0074],
        [0.0095],
        [0.0055],
        [0.0027],
        [0.0059],
        [0.0138],
        [0.0321]], device='cuda:0', dtype=torch.float16)/tensor([[0.0064, 0.0368, 0.0158, 0.0139, 0.0156, 0.0265, 0.0011, 0.0359, 0.0023,
         0.0074, 0.0095, 0.0055, 0.0027, 0.0059, 0.0138, 0.0321]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0100],
        [0.0257],
        [0.0103],
        [0.0071],
        [0.0052],
        [0.0292],
        [0.0020],
        [0.0402],
        [0.0018],
        [0.0088],
        [0.0078],
        [0.0035],
        [0.0033],
        [0.0053],
        [0.0184],
        [0.0403]], device='cuda:0', dtype=torch.float16)/tensor([[0.0100, 0.0257, 0.0103, 0.0071, 0.0052, 0.0292, 0.0020, 0.0402, 0.0018,
         0.0088, 0.0078, 0.0035, 0.0033, 0.0053, 0.0184, 0.0403]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0177, 0.0064, 0.0100],
        [0.1118, 0.0368, 0.0257],
        [0.0551, 0.0158, 0.0103],
        [0.0206, 0.0139, 0.0071],
        [0.0560, 0.0156, 0.0052],
        [0.1188, 0.0265, 0.0292],
        [0.0089, 0.0011, 0.0020],
        [0.1068, 0.0359, 0.0402],
        [0.0054, 0.0023, 0.0018],
        [0.0330, 0.0074, 0.0088],
        [0.0117, 0.0095, 0.0078],
        [0.0084, 0.0055, 0.0035],
        [0.0101, 0.0027, 0.0033],
        [0.0153, 0.0059, 0.0053],
        [0.0626, 0.0138, 0.0184],
        [0.1157, 0.0321, 0.0403]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0109],
        [0.0583],
        [0.0128],
        [0.0203],
        [0.0180],
        [0.0525],
        [0.0545],
        [0.0478],
        [0.0254],
        [0.1110],
        [0.0037],
        [0.0045],
        [0.0082],
        [0.0064],
        [0.0201],
        [0.0195]], device='cuda:0', dtype=torch.float16)/tensor([[0.0109, 0.0583, 0.0128, 0.0203, 0.0180, 0.0525, 0.0545, 0.0478, 0.0254,
         0.1110, 0.0037, 0.0045, 0.0082, 0.0064, 0.0201, 0.0195]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0031],
        [0.0184],
        [0.0042],
        [0.0123],
        [0.0062],
        [0.0328],
        [0.0241],
        [0.0216],
        [0.0140],
        [0.0202],
        [0.0041],
        [0.0010],
        [0.0048],
        [0.0033],
        [0.0033],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0031, 0.0184, 0.0042, 0.0123, 0.0062, 0.0328, 0.0241, 0.0216, 0.0140,
         0.0202, 0.0041, 0.0010, 0.0048, 0.0033, 0.0033, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0025],
        [0.0298],
        [0.0082],
        [0.0081],
        [0.0078],
        [0.0439],
        [0.0195],
        [0.0133],
        [0.0165],
        [0.0260],
        [0.0011],
        [0.0013],
        [0.0066],
        [0.0009],
        [0.0064],
        [0.0040]], device='cuda:0', dtype=torch.float16)/tensor([[0.0025, 0.0298, 0.0082, 0.0081, 0.0078, 0.0439, 0.0195, 0.0133, 0.0165,
         0.0260, 0.0011, 0.0013, 0.0066, 0.0009, 0.0064, 0.0040]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0109, 0.0031, 0.0025],
        [0.0583, 0.0184, 0.0298],
        [0.0128, 0.0042, 0.0082],
        [0.0203, 0.0123, 0.0081],
        [0.0180, 0.0062, 0.0078],
        [0.0525, 0.0328, 0.0439],
        [0.0545, 0.0241, 0.0195],
        [0.0478, 0.0216, 0.0133],
        [0.0254, 0.0140, 0.0165],
        [0.1110, 0.0202, 0.0260],
        [0.0037, 0.0041, 0.0011],
        [0.0045, 0.0010, 0.0013],
        [0.0082, 0.0048, 0.0066],
        [0.0064, 0.0033, 0.0009],
        [0.0201, 0.0033, 0.0064],
        [0.0195, 0.0133, 0.0040]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0083],
        [0.0167],
        [0.0215],
        [0.0188],
        [0.0056],
        [0.0067],
        [0.0047],
        [0.0257],
        [0.0842],
        [0.0055],
        [0.0434],
        [0.0190],
        [0.0440],
        [0.0251],
        [0.0212],
        [0.0103]], device='cuda:0', dtype=torch.float16)/tensor([[0.0083, 0.0167, 0.0215, 0.0188, 0.0056, 0.0067, 0.0047, 0.0257, 0.0842,
         0.0055, 0.0434, 0.0190, 0.0440, 0.0251, 0.0212, 0.0103]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0040],
        [0.0062],
        [0.0071],
        [0.0056],
        [0.0038],
        [0.0041],
        [0.0021],
        [0.0069],
        [0.0458],
        [0.0018],
        [0.0114],
        [0.0151],
        [0.0086],
        [0.0185],
        [0.0061],
        [0.0021]], device='cuda:0', dtype=torch.float16)/tensor([[0.0040, 0.0062, 0.0071, 0.0056, 0.0038, 0.0041, 0.0021, 0.0069, 0.0458,
         0.0018, 0.0114, 0.0151, 0.0086, 0.0185, 0.0061, 0.0021]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0036],
        [0.0047],
        [0.0067],
        [0.0037],
        [0.0034],
        [0.0050],
        [0.0015],
        [0.0077],
        [0.0677],
        [0.0021],
        [0.0090],
        [0.0158],
        [0.0136],
        [0.0146],
        [0.0016],
        [0.0018]], device='cuda:0', dtype=torch.float16)/tensor([[0.0036, 0.0047, 0.0067, 0.0037, 0.0034, 0.0050, 0.0015, 0.0077, 0.0677,
         0.0021, 0.0090, 0.0158, 0.0136, 0.0146, 0.0016, 0.0018]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0083, 0.0040, 0.0036],
        [0.0167, 0.0062, 0.0047],
        [0.0215, 0.0071, 0.0067],
        [0.0188, 0.0056, 0.0037],
        [0.0056, 0.0038, 0.0034],
        [0.0067, 0.0041, 0.0050],
        [0.0047, 0.0021, 0.0015],
        [0.0257, 0.0069, 0.0077],
        [0.0842, 0.0458, 0.0677],
        [0.0055, 0.0018, 0.0021],
        [0.0434, 0.0114, 0.0090],
        [0.0190, 0.0151, 0.0158],
        [0.0440, 0.0086, 0.0136],
        [0.0251, 0.0185, 0.0146],
        [0.0212, 0.0061, 0.0016],
        [0.0103, 0.0021, 0.0018]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0282],
        [0.0177],
        [0.0197],
        [0.1046],
        [0.0632],
        [0.0329],
        [0.1219],
        [0.0139],
        [0.0338],
        [0.0082],
        [0.0204],
        [0.0071],
        [0.0145],
        [0.0147],
        [0.0119],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0282, 0.0177, 0.0197, 0.1046, 0.0632, 0.0329, 0.1219, 0.0139, 0.0338,
         0.0082, 0.0204, 0.0071, 0.0145, 0.0147, 0.0119, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0098],
        [0.0022],
        [0.0046],
        [0.0547],
        [0.0330],
        [0.0117],
        [0.0296],
        [0.0070],
        [0.0140],
        [0.0031],
        [0.0052],
        [0.0040],
        [0.0045],
        [0.0057],
        [0.0034],
        [0.0019]], device='cuda:0', dtype=torch.float16)/tensor([[0.0098, 0.0022, 0.0046, 0.0547, 0.0330, 0.0117, 0.0296, 0.0070, 0.0140,
         0.0031, 0.0052, 0.0040, 0.0045, 0.0057, 0.0034, 0.0019]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0088],
        [0.0071],
        [0.0060],
        [0.0228],
        [0.0266],
        [0.0096],
        [0.0238],
        [0.0056],
        [0.0107],
        [0.0038],
        [0.0060],
        [0.0019],
        [0.0056],
        [0.0059],
        [0.0029],
        [0.0016]], device='cuda:0', dtype=torch.float16)/tensor([[0.0088, 0.0071, 0.0060, 0.0228, 0.0266, 0.0096, 0.0238, 0.0056, 0.0107,
         0.0038, 0.0060, 0.0019, 0.0056, 0.0059, 0.0029, 0.0016]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0282, 0.0098, 0.0088],
        [0.0177, 0.0022, 0.0071],
        [0.0197, 0.0046, 0.0060],
        [0.1046, 0.0547, 0.0228],
        [0.0632, 0.0330, 0.0266],
        [0.0329, 0.0117, 0.0096],
        [0.1219, 0.0296, 0.0238],
        [0.0139, 0.0070, 0.0056],
        [0.0338, 0.0140, 0.0107],
        [0.0082, 0.0031, 0.0038],
        [0.0204, 0.0052, 0.0060],
        [0.0071, 0.0040, 0.0019],
        [0.0145, 0.0045, 0.0056],
        [0.0147, 0.0057, 0.0059],
        [0.0119, 0.0034, 0.0029],
        [0.0047, 0.0019, 0.0016]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0633],
        [0.0070],
        [0.0312],
        [0.0220],
        [0.0740],
        [0.0125],
        [0.0152],
        [0.0755],
        [0.0174],
        [0.0092],
        [0.1125],
        [0.0740],
        [0.0116],
        [0.0176],
        [0.0029],
        [0.0464]], device='cuda:0', dtype=torch.float16)/tensor([[0.0633, 0.0070, 0.0312, 0.0220, 0.0740, 0.0125, 0.0152, 0.0755, 0.0174,
         0.0092, 0.1125, 0.0740, 0.0116, 0.0176, 0.0029, 0.0464]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0123],
        [0.0030],
        [0.0241],
        [0.0101],
        [0.0419],
        [0.0015],
        [0.0083],
        [0.0206],
        [0.0074],
        [0.0043],
        [0.0193],
        [0.0121],
        [0.0040],
        [0.0065],
        [0.0008],
        [0.0069]], device='cuda:0', dtype=torch.float16)/tensor([[0.0123, 0.0030, 0.0241, 0.0101, 0.0419, 0.0015, 0.0083, 0.0206, 0.0074,
         0.0043, 0.0193, 0.0121, 0.0040, 0.0065, 0.0008, 0.0069]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0170],
        [0.0018],
        [0.0335],
        [0.0059],
        [0.0334],
        [0.0042],
        [0.0073],
        [0.0182],
        [0.0111],
        [0.0063],
        [0.0265],
        [0.0150],
        [0.0023],
        [0.0064],
        [0.0007],
        [0.0232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0170, 0.0018, 0.0335, 0.0059, 0.0334, 0.0042, 0.0073, 0.0182, 0.0111,
         0.0063, 0.0265, 0.0150, 0.0023, 0.0064, 0.0007, 0.0232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0633, 0.0123, 0.0170],
        [0.0070, 0.0030, 0.0018],
        [0.0312, 0.0241, 0.0335],
        [0.0220, 0.0101, 0.0059],
        [0.0740, 0.0419, 0.0334],
        [0.0125, 0.0015, 0.0042],
        [0.0152, 0.0083, 0.0073],
        [0.0755, 0.0206, 0.0182],
        [0.0174, 0.0074, 0.0111],
        [0.0092, 0.0043, 0.0063],
        [0.1125, 0.0193, 0.0265],
        [0.0740, 0.0121, 0.0150],
        [0.0116, 0.0040, 0.0023],
        [0.0176, 0.0065, 0.0064],
        [0.0029, 0.0008, 0.0007],
        [0.0464, 0.0069, 0.0232]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0103],
        [0.0107],
        [0.0174],
        [0.0073],
        [0.0204],
        [0.0356]], device='cuda:0', dtype=torch.float16)/tensor([[0.0103, 0.0107, 0.0174, 0.0073, 0.0204, 0.0356]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0034],
        [0.0039],
        [0.0056],
        [0.0053],
        [0.0041],
        [0.0127]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0039, 0.0056, 0.0053, 0.0041, 0.0127]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0038],
        [0.0028],
        [0.0071],
        [0.0021],
        [0.0027],
        [0.0168]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0028, 0.0071, 0.0021, 0.0027, 0.0168]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0103, 0.0034, 0.0038],
        [0.0107, 0.0039, 0.0028],
        [0.0174, 0.0056, 0.0071],
        [0.0073, 0.0053, 0.0021],
        [0.0204, 0.0041, 0.0027],
        [0.0356, 0.0127, 0.0168]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type identical_modal, variation 1 and batchsize 16: 0:03:01.830022
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_1']
----------- 42 en huggyllama/llama-7b NLI identical_modal 2 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 325.02it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0202],
        [0.0331],
        [0.0095],
        [0.0620],
        [0.0177],
        [0.0123],
        [0.0393],
        [0.0114],
        [0.1304],
        [0.0208],
        [0.0528],
        [0.0203],
        [0.0271],
        [0.0229],
        [0.0037],
        [0.0165]], device='cuda:0', dtype=torch.float16)/tensor([[0.0202, 0.0331, 0.0095, 0.0620, 0.0177, 0.0123, 0.0393, 0.0114, 0.1304,
         0.0208, 0.0528, 0.0203, 0.0271, 0.0229, 0.0037, 0.0165]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0076],
        [0.0011],
        [0.0182],
        [0.0052],
        [0.0027],
        [0.0123],
        [0.0040],
        [0.0764],
        [0.0072],
        [0.0148],
        [0.0062],
        [0.0084],
        [0.0049],
        [0.0008],
        [0.0121]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0076, 0.0011, 0.0182, 0.0052, 0.0027, 0.0123, 0.0040, 0.0764,
         0.0072, 0.0148, 0.0062, 0.0084, 0.0049, 0.0008, 0.0121]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0062],
        [0.0090],
        [0.0015],
        [0.0097],
        [0.0061],
        [0.0025],
        [0.0057],
        [0.0016],
        [0.0265],
        [0.0014],
        [0.0128],
        [0.0040],
        [0.0070],
        [0.0072],
        [0.0006],
        [0.0110]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0090, 0.0015, 0.0097, 0.0061, 0.0025, 0.0057, 0.0016, 0.0265,
         0.0014, 0.0128, 0.0040, 0.0070, 0.0072, 0.0006, 0.0110]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0202, 0.0062, 0.0062],
        [0.0331, 0.0076, 0.0090],
        [0.0095, 0.0011, 0.0015],
        [0.0620, 0.0182, 0.0097],
        [0.0177, 0.0052, 0.0061],
        [0.0123, 0.0027, 0.0025],
        [0.0393, 0.0123, 0.0057],
        [0.0114, 0.0040, 0.0016],
        [0.1304, 0.0764, 0.0265],
        [0.0208, 0.0072, 0.0014],
        [0.0528, 0.0148, 0.0128],
        [0.0203, 0.0062, 0.0040],
        [0.0271, 0.0084, 0.0070],
        [0.0229, 0.0049, 0.0072],
        [0.0037, 0.0008, 0.0006],
        [0.0165, 0.0121, 0.0110]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1354],
        [0.0232],
        [0.0069],
        [0.0499],
        [0.0191],
        [0.0036],
        [0.0117],
        [0.0109],
        [0.1201],
        [0.0103],
        [0.0278],
        [0.0231],
        [0.0365],
        [0.1273],
        [0.0246],
        [0.0815]], device='cuda:0', dtype=torch.float16)/tensor([[0.1354, 0.0232, 0.0069, 0.0499, 0.0191, 0.0036, 0.0117, 0.0109, 0.1201,
         0.0103, 0.0278, 0.0231, 0.0365, 0.1273, 0.0246, 0.0815]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0250],
        [0.0031],
        [0.0054],
        [0.0244],
        [0.0074],
        [0.0014],
        [0.0035],
        [0.0015],
        [0.0294],
        [0.0089],
        [0.0084],
        [0.0085],
        [0.0083],
        [0.0293],
        [0.0141],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0250, 0.0031, 0.0054, 0.0244, 0.0074, 0.0014, 0.0035, 0.0015, 0.0294,
         0.0089, 0.0084, 0.0085, 0.0083, 0.0293, 0.0141, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0239],
        [0.0070],
        [0.0021],
        [0.0291],
        [0.0040],
        [0.0018],
        [0.0026],
        [0.0028],
        [0.0150],
        [0.0044],
        [0.0081],
        [0.0051],
        [0.0177],
        [0.0317],
        [0.0065],
        [0.0183]], device='cuda:0', dtype=torch.float16)/tensor([[0.0239, 0.0070, 0.0021, 0.0291, 0.0040, 0.0018, 0.0026, 0.0028, 0.0150,
         0.0044, 0.0081, 0.0051, 0.0177, 0.0317, 0.0065, 0.0183]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1354, 0.0250, 0.0239],
        [0.0232, 0.0031, 0.0070],
        [0.0069, 0.0054, 0.0021],
        [0.0499, 0.0244, 0.0291],
        [0.0191, 0.0074, 0.0040],
        [0.0036, 0.0014, 0.0018],
        [0.0117, 0.0035, 0.0026],
        [0.0109, 0.0015, 0.0028],
        [0.1201, 0.0294, 0.0150],
        [0.0103, 0.0089, 0.0044],
        [0.0278, 0.0084, 0.0081],
        [0.0231, 0.0085, 0.0051],
        [0.0365, 0.0083, 0.0177],
        [0.1273, 0.0293, 0.0317],
        [0.0246, 0.0141, 0.0065],
        [0.0815, 0.0150, 0.0183]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1185],
        [0.0055],
        [0.0074],
        [0.0302],
        [0.0085],
        [0.0953],
        [0.0423],
        [0.0163],
        [0.0903],
        [0.0057],
        [0.0801],
        [0.2064],
        [0.0381],
        [0.1388],
        [0.0050],
        [0.0210]], device='cuda:0', dtype=torch.float16)/tensor([[0.1185, 0.0055, 0.0074, 0.0302, 0.0085, 0.0953, 0.0423, 0.0163, 0.0903,
         0.0057, 0.0801, 0.2064, 0.0381, 0.1388, 0.0050, 0.0210]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0236],
        [0.0026],
        [0.0026],
        [0.0039],
        [0.0026],
        [0.0181],
        [0.0084],
        [0.0057],
        [0.0134],
        [0.0021],
        [0.0129],
        [0.0180],
        [0.0110],
        [0.0324],
        [0.0024],
        [0.0106]], device='cuda:0', dtype=torch.float16)/tensor([[0.0236, 0.0026, 0.0026, 0.0039, 0.0026, 0.0181, 0.0084, 0.0057, 0.0134,
         0.0021, 0.0129, 0.0180, 0.0110, 0.0324, 0.0024, 0.0106]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0261],
        [0.0024],
        [0.0027],
        [0.0033],
        [0.0025],
        [0.0438],
        [0.0077],
        [0.0088],
        [0.0107],
        [0.0020],
        [0.0112],
        [0.0382],
        [0.0148],
        [0.0295],
        [0.0012],
        [0.0079]], device='cuda:0', dtype=torch.float16)/tensor([[0.0261, 0.0024, 0.0027, 0.0033, 0.0025, 0.0438, 0.0077, 0.0088, 0.0107,
         0.0020, 0.0112, 0.0382, 0.0148, 0.0295, 0.0012, 0.0079]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1185, 0.0236, 0.0261],
        [0.0055, 0.0026, 0.0024],
        [0.0074, 0.0026, 0.0027],
        [0.0302, 0.0039, 0.0033],
        [0.0085, 0.0026, 0.0025],
        [0.0953, 0.0181, 0.0438],
        [0.0423, 0.0084, 0.0077],
        [0.0163, 0.0057, 0.0088],
        [0.0903, 0.0134, 0.0107],
        [0.0057, 0.0021, 0.0020],
        [0.0801, 0.0129, 0.0112],
        [0.2064, 0.0180, 0.0382],
        [0.0381, 0.0110, 0.0148],
        [0.1388, 0.0324, 0.0295],
        [0.0050, 0.0024, 0.0012],
        [0.0210, 0.0106, 0.0079]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0111],
        [0.1027],
        [0.0302],
        [0.0105],
        [0.0168],
        [0.0141],
        [0.0236],
        [0.0107],
        [0.0312],
        [0.0828],
        [0.0200],
        [0.0095],
        [0.0536],
        [0.0071],
        [0.0087],
        [0.0061]], device='cuda:0', dtype=torch.float16)/tensor([[0.0111, 0.1027, 0.0302, 0.0105, 0.0168, 0.0141, 0.0236, 0.0107, 0.0312,
         0.0828, 0.0200, 0.0095, 0.0536, 0.0071, 0.0087, 0.0061]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0070],
        [0.0179],
        [0.0081],
        [0.0045],
        [0.0055],
        [0.0058],
        [0.0142],
        [0.0028],
        [0.0159],
        [0.0304],
        [0.0060],
        [0.0046],
        [0.0325],
        [0.0047],
        [0.0033],
        [0.0011]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0179, 0.0081, 0.0045, 0.0055, 0.0058, 0.0142, 0.0028, 0.0159,
         0.0304, 0.0060, 0.0046, 0.0325, 0.0047, 0.0033, 0.0011]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0067],
        [0.0139],
        [0.0061],
        [0.0060],
        [0.0066],
        [0.0045],
        [0.0055],
        [0.0015],
        [0.0133],
        [0.0277],
        [0.0048],
        [0.0032],
        [0.0357],
        [0.0018],
        [0.0054],
        [0.0014]], device='cuda:0', dtype=torch.float16)/tensor([[0.0067, 0.0139, 0.0061, 0.0060, 0.0066, 0.0045, 0.0055, 0.0015, 0.0133,
         0.0277, 0.0048, 0.0032, 0.0357, 0.0018, 0.0054, 0.0014]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0111, 0.0070, 0.0067],
        [0.1027, 0.0179, 0.0139],
        [0.0302, 0.0081, 0.0061],
        [0.0105, 0.0045, 0.0060],
        [0.0168, 0.0055, 0.0066],
        [0.0141, 0.0058, 0.0045],
        [0.0236, 0.0142, 0.0055],
        [0.0107, 0.0028, 0.0015],
        [0.0312, 0.0159, 0.0133],
        [0.0828, 0.0304, 0.0277],
        [0.0200, 0.0060, 0.0048],
        [0.0095, 0.0046, 0.0032],
        [0.0536, 0.0325, 0.0357],
        [0.0071, 0.0047, 0.0018],
        [0.0087, 0.0033, 0.0054],
        [0.0061, 0.0011, 0.0014]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0185],
        [0.0254],
        [0.0123],
        [0.0053],
        [0.0073],
        [0.0257],
        [0.0744],
        [0.1260],
        [0.0136],
        [0.0234],
        [0.0034],
        [0.0159],
        [0.0204],
        [0.0331],
        [0.0660],
        [0.0050]], device='cuda:0', dtype=torch.float16)/tensor([[0.0185, 0.0254, 0.0123, 0.0053, 0.0073, 0.0257, 0.0744, 0.1260, 0.0136,
         0.0234, 0.0034, 0.0159, 0.0204, 0.0331, 0.0660, 0.0050]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0129],
        [0.0074],
        [0.0016],
        [0.0027],
        [0.0068],
        [0.0322],
        [0.0237],
        [0.0086],
        [0.0042],
        [0.0014],
        [0.0081],
        [0.0085],
        [0.0099],
        [0.0284],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0129, 0.0074, 0.0016, 0.0027, 0.0068, 0.0322, 0.0237, 0.0086,
         0.0042, 0.0014, 0.0081, 0.0085, 0.0099, 0.0284, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0057],
        [0.0064],
        [0.0060],
        [0.0014],
        [0.0007],
        [0.0056],
        [0.0553],
        [0.0442],
        [0.0050],
        [0.0059],
        [0.0009],
        [0.0046],
        [0.0058],
        [0.0145],
        [0.0468],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0064, 0.0060, 0.0014, 0.0007, 0.0056, 0.0553, 0.0442, 0.0050,
         0.0059, 0.0009, 0.0046, 0.0058, 0.0145, 0.0468, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0185, 0.0077, 0.0057],
        [0.0254, 0.0129, 0.0064],
        [0.0123, 0.0074, 0.0060],
        [0.0053, 0.0016, 0.0014],
        [0.0073, 0.0027, 0.0007],
        [0.0257, 0.0068, 0.0056],
        [0.0744, 0.0322, 0.0553],
        [0.1260, 0.0237, 0.0442],
        [0.0136, 0.0086, 0.0050],
        [0.0234, 0.0042, 0.0059],
        [0.0034, 0.0014, 0.0009],
        [0.0159, 0.0081, 0.0046],
        [0.0204, 0.0085, 0.0058],
        [0.0331, 0.0099, 0.0145],
        [0.0660, 0.0284, 0.0468],
        [0.0050, 0.0027, 0.0033]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0764],
        [0.0423],
        [0.0189],
        [0.0807],
        [0.1334],
        [0.1041],
        [0.0104],
        [0.0480],
        [0.0833],
        [0.0074],
        [0.0800],
        [0.0387],
        [0.0240],
        [0.0032],
        [0.0098],
        [0.0189]], device='cuda:0', dtype=torch.float16)/tensor([[0.0764, 0.0423, 0.0189, 0.0807, 0.1334, 0.1041, 0.0104, 0.0480, 0.0833,
         0.0074, 0.0800, 0.0387, 0.0240, 0.0032, 0.0098, 0.0189]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0196],
        [0.0127],
        [0.0070],
        [0.0163],
        [0.0363],
        [0.0441],
        [0.0020],
        [0.0080],
        [0.0182],
        [0.0046],
        [0.0268],
        [0.0098],
        [0.0067],
        [0.0036],
        [0.0092],
        [0.0045]], device='cuda:0', dtype=torch.float16)/tensor([[0.0196, 0.0127, 0.0070, 0.0163, 0.0363, 0.0441, 0.0020, 0.0080, 0.0182,
         0.0046, 0.0268, 0.0098, 0.0067, 0.0036, 0.0092, 0.0045]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0161],
        [0.0092],
        [0.0080],
        [0.0200],
        [0.0178],
        [0.0450],
        [0.0019],
        [0.0127],
        [0.0208],
        [0.0029],
        [0.0131],
        [0.0080],
        [0.0056],
        [0.0009],
        [0.0039],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0161, 0.0092, 0.0080, 0.0200, 0.0178, 0.0450, 0.0019, 0.0127, 0.0208,
         0.0029, 0.0131, 0.0080, 0.0056, 0.0009, 0.0039, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0764, 0.0196, 0.0161],
        [0.0423, 0.0127, 0.0092],
        [0.0189, 0.0070, 0.0080],
        [0.0807, 0.0163, 0.0200],
        [0.1334, 0.0363, 0.0178],
        [0.1041, 0.0441, 0.0450],
        [0.0104, 0.0020, 0.0019],
        [0.0480, 0.0080, 0.0127],
        [0.0833, 0.0182, 0.0208],
        [0.0074, 0.0046, 0.0029],
        [0.0800, 0.0268, 0.0131],
        [0.0387, 0.0098, 0.0080],
        [0.0240, 0.0067, 0.0056],
        [0.0032, 0.0036, 0.0009],
        [0.0098, 0.0092, 0.0039],
        [0.0189, 0.0045, 0.0046]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0198],
        [0.0179],
        [0.0201],
        [0.0143],
        [0.0014],
        [0.0779],
        [0.0154],
        [0.0378],
        [0.0534],
        [0.0409],
        [0.0040],
        [0.0390],
        [0.0817],
        [0.0058],
        [0.0121],
        [0.0246]], device='cuda:0', dtype=torch.float16)/tensor([[0.0198, 0.0179, 0.0201, 0.0143, 0.0014, 0.0779, 0.0154, 0.0378, 0.0534,
         0.0409, 0.0040, 0.0390, 0.0817, 0.0058, 0.0121, 0.0246]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0074],
        [0.0075],
        [0.0125],
        [0.0070],
        [0.0004],
        [0.0139],
        [0.0048],
        [0.0133],
        [0.0076],
        [0.0201],
        [0.0007],
        [0.0077],
        [0.0465],
        [0.0013],
        [0.0068],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0074, 0.0075, 0.0125, 0.0070, 0.0004, 0.0139, 0.0048, 0.0133, 0.0076,
         0.0201, 0.0007, 0.0077, 0.0465, 0.0013, 0.0068, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0030],
        [0.0101],
        [0.0126],
        [0.0055],
        [0.0003],
        [0.0143],
        [0.0063],
        [0.0116],
        [0.0206],
        [0.0118],
        [0.0009],
        [0.0071],
        [0.0305],
        [0.0005],
        [0.0058],
        [0.0094]], device='cuda:0', dtype=torch.float16)/tensor([[0.0030, 0.0101, 0.0126, 0.0055, 0.0003, 0.0143, 0.0063, 0.0116, 0.0206,
         0.0118, 0.0009, 0.0071, 0.0305, 0.0005, 0.0058, 0.0094]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0198, 0.0074, 0.0030],
        [0.0179, 0.0075, 0.0101],
        [0.0201, 0.0125, 0.0126],
        [0.0143, 0.0070, 0.0055],
        [0.0014, 0.0004, 0.0003],
        [0.0779, 0.0139, 0.0143],
        [0.0154, 0.0048, 0.0063],
        [0.0378, 0.0133, 0.0116],
        [0.0534, 0.0076, 0.0206],
        [0.0409, 0.0201, 0.0118],
        [0.0040, 0.0007, 0.0009],
        [0.0390, 0.0077, 0.0071],
        [0.0817, 0.0465, 0.0305],
        [0.0058, 0.0013, 0.0005],
        [0.0121, 0.0068, 0.0058],
        [0.0246, 0.0112, 0.0094]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0047],
        [0.0185],
        [0.0331],
        [0.0072],
        [0.0026],
        [0.0265],
        [0.0171],
        [0.0708],
        [0.0503],
        [0.0260],
        [0.0251],
        [0.0349],
        [0.0447],
        [0.0172],
        [0.0065],
        [0.0133]], device='cuda:0', dtype=torch.float16)/tensor([[0.0047, 0.0185, 0.0331, 0.0072, 0.0026, 0.0265, 0.0171, 0.0708, 0.0503,
         0.0260, 0.0251, 0.0349, 0.0447, 0.0172, 0.0065, 0.0133]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0020],
        [0.0056],
        [0.0217],
        [0.0035],
        [0.0021],
        [0.0047],
        [0.0051],
        [0.0145],
        [0.0368],
        [0.0136],
        [0.0080],
        [0.0047],
        [0.0179],
        [0.0059],
        [0.0033],
        [0.0056]], device='cuda:0', dtype=torch.float16)/tensor([[0.0020, 0.0056, 0.0217, 0.0035, 0.0021, 0.0047, 0.0051, 0.0145, 0.0368,
         0.0136, 0.0080, 0.0047, 0.0179, 0.0059, 0.0033, 0.0056]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0010],
        [0.0051],
        [0.0383],
        [0.0030],
        [0.0008],
        [0.0051],
        [0.0063],
        [0.0055],
        [0.0316],
        [0.0119],
        [0.0072],
        [0.0100],
        [0.0190],
        [0.0079],
        [0.0018],
        [0.0030]], device='cuda:0', dtype=torch.float16)/tensor([[0.0010, 0.0051, 0.0383, 0.0030, 0.0008, 0.0051, 0.0063, 0.0055, 0.0316,
         0.0119, 0.0072, 0.0100, 0.0190, 0.0079, 0.0018, 0.0030]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0047, 0.0020, 0.0010],
        [0.0185, 0.0056, 0.0051],
        [0.0331, 0.0217, 0.0383],
        [0.0072, 0.0035, 0.0030],
        [0.0026, 0.0021, 0.0008],
        [0.0265, 0.0047, 0.0051],
        [0.0171, 0.0051, 0.0063],
        [0.0708, 0.0145, 0.0055],
        [0.0503, 0.0368, 0.0316],
        [0.0260, 0.0136, 0.0119],
        [0.0251, 0.0080, 0.0072],
        [0.0349, 0.0047, 0.0100],
        [0.0447, 0.0179, 0.0190],
        [0.0172, 0.0059, 0.0079],
        [0.0065, 0.0033, 0.0018],
        [0.0133, 0.0056, 0.0030]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0170],
        [0.0176],
        [0.0081],
        [0.0125],
        [0.0171],
        [0.0311],
        [0.0064],
        [0.0018],
        [0.0748],
        [0.0090],
        [0.0193],
        [0.0067],
        [0.0117],
        [0.0771],
        [0.1816],
        [0.1232]], device='cuda:0', dtype=torch.float16)/tensor([[0.0170, 0.0176, 0.0081, 0.0125, 0.0171, 0.0311, 0.0064, 0.0018, 0.0748,
         0.0090, 0.0193, 0.0067, 0.0117, 0.0771, 0.1816, 0.1232]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0055],
        [0.0055],
        [0.0092],
        [0.0034],
        [0.0042],
        [0.0155],
        [0.0031],
        [0.0009],
        [0.0189],
        [0.0051],
        [0.0057],
        [0.0013],
        [0.0059],
        [0.0358],
        [0.0268],
        [0.0334]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0055, 0.0092, 0.0034, 0.0042, 0.0155, 0.0031, 0.0009, 0.0189,
         0.0051, 0.0057, 0.0013, 0.0059, 0.0358, 0.0268, 0.0334]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0061],
        [0.0053],
        [0.0033],
        [0.0040],
        [0.0027],
        [0.0148],
        [0.0012],
        [0.0002],
        [0.0345],
        [0.0030],
        [0.0062],
        [0.0014],
        [0.0047],
        [0.0345],
        [0.0229],
        [0.0429]], device='cuda:0', dtype=torch.float16)/tensor([[0.0061, 0.0053, 0.0033, 0.0040, 0.0027, 0.0148, 0.0012, 0.0002, 0.0345,
         0.0030, 0.0062, 0.0014, 0.0047, 0.0345, 0.0229, 0.0429]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[1.7029e-02, 5.4665e-03, 6.0730e-03],
        [1.7609e-02, 5.5199e-03, 5.2681e-03],
        [8.1100e-03, 9.2316e-03, 3.3417e-03],
        [1.2520e-02, 3.4084e-03, 4.0321e-03],
        [1.7075e-02, 4.1504e-03, 2.6913e-03],
        [3.1113e-02, 1.5465e-02, 1.4755e-02],
        [6.4163e-03, 3.0670e-03, 1.1959e-03],
        [1.8320e-03, 9.0361e-04, 1.7893e-04],
        [7.4829e-02, 1.8921e-02, 3.4515e-02],
        [8.9874e-03, 5.1422e-03, 3.0346e-03],
        [1.9257e-02, 5.7182e-03, 6.1798e-03],
        [6.7444e-03, 1.2722e-03, 1.4362e-03],
        [1.1734e-02, 5.9013e-03, 4.6501e-03],
        [7.7087e-02, 3.5828e-02, 3.4454e-02],
        [1.8164e-01, 2.6794e-02, 2.2919e-02],
        [1.2323e-01, 3.3417e-02, 4.2908e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1539],
        [0.1151],
        [0.0145],
        [0.1068],
        [0.0099],
        [0.0619],
        [0.0869],
        [0.0462],
        [0.0518],
        [0.0118],
        [0.0909],
        [0.0188],
        [0.0905],
        [0.0415],
        [0.0028],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.1539, 0.1151, 0.0145, 0.1068, 0.0099, 0.0619, 0.0869, 0.0462, 0.0518,
         0.0118, 0.0909, 0.0188, 0.0905, 0.0415, 0.0028, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0371],
        [0.0198],
        [0.0075],
        [0.0313],
        [0.0084],
        [0.0139],
        [0.0280],
        [0.0096],
        [0.0132],
        [0.0019],
        [0.0136],
        [0.0058],
        [0.0380],
        [0.0101],
        [0.0016],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0371, 0.0198, 0.0075, 0.0313, 0.0084, 0.0139, 0.0280, 0.0096, 0.0132,
         0.0019, 0.0136, 0.0058, 0.0380, 0.0101, 0.0016, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0313],
        [0.0225],
        [0.0074],
        [0.0402],
        [0.0055],
        [0.0094],
        [0.0324],
        [0.0118],
        [0.0036],
        [0.0015],
        [0.0115],
        [0.0035],
        [0.0805],
        [0.0090],
        [0.0015],
        [0.0037]], device='cuda:0', dtype=torch.float16)/tensor([[0.0313, 0.0225, 0.0074, 0.0402, 0.0055, 0.0094, 0.0324, 0.0118, 0.0036,
         0.0015, 0.0115, 0.0035, 0.0805, 0.0090, 0.0015, 0.0037]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1539, 0.0371, 0.0313],
        [0.1151, 0.0198, 0.0225],
        [0.0145, 0.0075, 0.0074],
        [0.1068, 0.0313, 0.0402],
        [0.0099, 0.0084, 0.0055],
        [0.0619, 0.0139, 0.0094],
        [0.0869, 0.0280, 0.0324],
        [0.0462, 0.0096, 0.0118],
        [0.0518, 0.0132, 0.0036],
        [0.0118, 0.0019, 0.0015],
        [0.0909, 0.0136, 0.0115],
        [0.0188, 0.0058, 0.0035],
        [0.0905, 0.0380, 0.0805],
        [0.0415, 0.0101, 0.0090],
        [0.0028, 0.0016, 0.0015],
        [0.0119, 0.0031, 0.0037]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0461],
        [0.0104],
        [0.0129],
        [0.0176],
        [0.0123],
        [0.0088],
        [0.0083],
        [0.0152],
        [0.0062],
        [0.0060],
        [0.0061],
        [0.0627],
        [0.0055],
        [0.0848],
        [0.0126],
        [0.0475]], device='cuda:0', dtype=torch.float16)/tensor([[0.0461, 0.0104, 0.0129, 0.0176, 0.0123, 0.0088, 0.0083, 0.0152, 0.0062,
         0.0060, 0.0061, 0.0627, 0.0055, 0.0848, 0.0126, 0.0475]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0040],
        [0.0027],
        [0.0017],
        [0.0039],
        [0.0038],
        [0.0035],
        [0.0048],
        [0.0049],
        [0.0049],
        [0.0027],
        [0.0027],
        [0.0679],
        [0.0022],
        [0.0224],
        [0.0077],
        [0.0038]], device='cuda:0', dtype=torch.float16)/tensor([[0.0040, 0.0027, 0.0017, 0.0039, 0.0038, 0.0035, 0.0048, 0.0049, 0.0049,
         0.0027, 0.0027, 0.0679, 0.0022, 0.0224, 0.0077, 0.0038]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0097],
        [0.0022],
        [0.0037],
        [0.0051],
        [0.0044],
        [0.0022],
        [0.0021],
        [0.0058],
        [0.0012],
        [0.0017],
        [0.0015],
        [0.0290],
        [0.0007],
        [0.0376],
        [0.0015],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0097, 0.0022, 0.0037, 0.0051, 0.0044, 0.0022, 0.0021, 0.0058, 0.0012,
         0.0017, 0.0015, 0.0290, 0.0007, 0.0376, 0.0015, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0461, 0.0040, 0.0097],
        [0.0104, 0.0027, 0.0022],
        [0.0129, 0.0017, 0.0037],
        [0.0176, 0.0039, 0.0051],
        [0.0123, 0.0038, 0.0044],
        [0.0088, 0.0035, 0.0022],
        [0.0083, 0.0048, 0.0021],
        [0.0152, 0.0049, 0.0058],
        [0.0062, 0.0049, 0.0012],
        [0.0060, 0.0027, 0.0017],
        [0.0061, 0.0027, 0.0015],
        [0.0627, 0.0679, 0.0290],
        [0.0055, 0.0022, 0.0007],
        [0.0848, 0.0224, 0.0376],
        [0.0126, 0.0077, 0.0015],
        [0.0475, 0.0038, 0.0085]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0145],
        [0.1267],
        [0.0457],
        [0.0025],
        [0.0214],
        [0.0159],
        [0.0376],
        [0.0164],
        [0.0474],
        [0.0542],
        [0.0137],
        [0.0453],
        [0.0036],
        [0.0067],
        [0.0280],
        [0.0308]], device='cuda:0', dtype=torch.float16)/tensor([[0.0145, 0.1267, 0.0457, 0.0025, 0.0214, 0.0159, 0.0376, 0.0164, 0.0474,
         0.0542, 0.0137, 0.0453, 0.0036, 0.0067, 0.0280, 0.0308]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0044],
        [0.0242],
        [0.0089],
        [0.0005],
        [0.0139],
        [0.0011],
        [0.0088],
        [0.0023],
        [0.0148],
        [0.0259],
        [0.0062],
        [0.0171],
        [0.0062],
        [0.0051],
        [0.0083],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0044, 0.0242, 0.0089, 0.0005, 0.0139, 0.0011, 0.0088, 0.0023, 0.0148,
         0.0259, 0.0062, 0.0171, 0.0062, 0.0051, 0.0083, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [5505] -> tensor([[0.0077],
        [0.0355],
        [0.0179],
        [0.0005],
        [0.0078],
        [0.0008],
        [0.0107],
        [0.0065],
        [0.0091],
        [0.0206],
        [0.0053],
        [0.0145],
        [0.0013],
        [0.0013],
        [0.0050],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0355, 0.0179, 0.0005, 0.0078, 0.0008, 0.0107, 0.0065, 0.0091,
         0.0206, 0.0053, 0.0145, 0.0013, 0.0013, 0.0050, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0145, 0.0044, 0.0077],
        [0.1267, 0.0242, 0.0355],
        [0.0457, 0.0089, 0.0179],
        [0.0025, 0.0005, 0.0005],
        [0.0214, 0.0139, 0.0078],
        [0.0159, 0.0011, 0.0008],
        [0.0376, 0.0088, 0.0107],
        [0.0164, 0.0023, 0.0065],
        [0.0474, 0.0148, 0.0091],
        [0.0542, 0.0259, 0.0206],
        [0.0137, 0.0062, 0.0053],
        [0.0453, 0.0171, 0.0145],
        [0.0036, 0.0062, 0.0013],
        [0.0067, 0.0051, 0.0013],
        [0.0280, 0.0083, 0.0050],
        [0.0308, 0.0046, 0.0046]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0301],
        [0.0062],
        [0.0276],
        [0.1025],
        [0.0431],
        [0.0480]], device='cuda:0', dtype=torch.float16)/tensor([[0.0301, 0.0062, 0.0276, 0.1025, 0.0431, 0.0480]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0085],
        [0.0059],
        [0.0083],
        [0.0492],
        [0.0076],
        [0.0143]], device='cuda:0', dtype=torch.float16)/tensor([[0.0085, 0.0059, 0.0083, 0.0492, 0.0076, 0.0143]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0042],
        [0.0029],
        [0.0104],
        [0.0622],
        [0.0112],
        [0.0132]], device='cuda:0', dtype=torch.float16)/tensor([[0.0042, 0.0029, 0.0104, 0.0622, 0.0112, 0.0132]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0301, 0.0085, 0.0042],
        [0.0062, 0.0059, 0.0029],
        [0.0276, 0.0083, 0.0104],
        [0.1025, 0.0492, 0.0622],
        [0.0431, 0.0076, 0.0112],
        [0.0480, 0.0143, 0.0132]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type identical_modal, variation 2 and batchsize 16: 0:03:02.050772
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_2']
----------- 42 en huggyllama/llama-7b NLI identical_modal 3 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 321.60it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0472],
        [0.0666],
        [0.0245],
        [0.0383],
        [0.0019],
        [0.0076],
        [0.0034],
        [0.0132],
        [0.0079],
        [0.0142],
        [0.0069],
        [0.0206],
        [0.0565],
        [0.0303],
        [0.0503],
        [0.0085]], device='cuda:0', dtype=torch.float16)/tensor([[0.0472, 0.0666, 0.0245, 0.0383, 0.0019, 0.0076, 0.0034, 0.0132, 0.0079,
         0.0142, 0.0069, 0.0206, 0.0565, 0.0303, 0.0503, 0.0085]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0222],
        [0.0359],
        [0.0199],
        [0.0066],
        [0.0015],
        [0.0049],
        [0.0015],
        [0.0030],
        [0.0024],
        [0.0046],
        [0.0021],
        [0.0047],
        [0.0090],
        [0.0064],
        [0.0243],
        [0.0028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0222, 0.0359, 0.0199, 0.0066, 0.0015, 0.0049, 0.0015, 0.0030, 0.0024,
         0.0046, 0.0021, 0.0047, 0.0090, 0.0064, 0.0243, 0.0028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0197],
        [0.0255],
        [0.0383],
        [0.0133],
        [0.0012],
        [0.0051],
        [0.0006],
        [0.0053],
        [0.0020],
        [0.0060],
        [0.0025],
        [0.0048],
        [0.0109],
        [0.0071],
        [0.0386],
        [0.0031]], device='cuda:0', dtype=torch.float16)/tensor([[0.0197, 0.0255, 0.0383, 0.0133, 0.0012, 0.0051, 0.0006, 0.0053, 0.0020,
         0.0060, 0.0025, 0.0048, 0.0109, 0.0071, 0.0386, 0.0031]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0472, 0.0222, 0.0197],
        [0.0666, 0.0359, 0.0255],
        [0.0245, 0.0199, 0.0383],
        [0.0383, 0.0066, 0.0133],
        [0.0019, 0.0015, 0.0012],
        [0.0076, 0.0049, 0.0051],
        [0.0034, 0.0015, 0.0006],
        [0.0132, 0.0030, 0.0053],
        [0.0079, 0.0024, 0.0020],
        [0.0142, 0.0046, 0.0060],
        [0.0069, 0.0021, 0.0025],
        [0.0206, 0.0047, 0.0048],
        [0.0565, 0.0090, 0.0109],
        [0.0303, 0.0064, 0.0071],
        [0.0503, 0.0243, 0.0386],
        [0.0085, 0.0028, 0.0031]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0960],
        [0.0111],
        [0.0095],
        [0.0089],
        [0.0063],
        [0.0122],
        [0.0382],
        [0.0131],
        [0.0066],
        [0.0257],
        [0.0238],
        [0.1086],
        [0.0288],
        [0.0173],
        [0.0179],
        [0.0029]], device='cuda:0', dtype=torch.float16)/tensor([[0.0960, 0.0111, 0.0095, 0.0089, 0.0063, 0.0122, 0.0382, 0.0131, 0.0066,
         0.0257, 0.0238, 0.1086, 0.0288, 0.0173, 0.0179, 0.0029]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0207],
        [0.0057],
        [0.0037],
        [0.0026],
        [0.0032],
        [0.0077],
        [0.0285],
        [0.0089],
        [0.0033],
        [0.0101],
        [0.0058],
        [0.0173],
        [0.0070],
        [0.0014],
        [0.0018],
        [0.0014]], device='cuda:0', dtype=torch.float16)/tensor([[0.0207, 0.0057, 0.0037, 0.0026, 0.0032, 0.0077, 0.0285, 0.0089, 0.0033,
         0.0101, 0.0058, 0.0173, 0.0070, 0.0014, 0.0018, 0.0014]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0204],
        [0.0063],
        [0.0045],
        [0.0029],
        [0.0042],
        [0.0073],
        [0.0242],
        [0.0102],
        [0.0034],
        [0.0083],
        [0.0055],
        [0.0249],
        [0.0133],
        [0.0018],
        [0.0063],
        [0.0018]], device='cuda:0', dtype=torch.float16)/tensor([[0.0204, 0.0063, 0.0045, 0.0029, 0.0042, 0.0073, 0.0242, 0.0102, 0.0034,
         0.0083, 0.0055, 0.0249, 0.0133, 0.0018, 0.0063, 0.0018]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0960, 0.0207, 0.0204],
        [0.0111, 0.0057, 0.0063],
        [0.0095, 0.0037, 0.0045],
        [0.0089, 0.0026, 0.0029],
        [0.0063, 0.0032, 0.0042],
        [0.0122, 0.0077, 0.0073],
        [0.0382, 0.0285, 0.0242],
        [0.0131, 0.0089, 0.0102],
        [0.0066, 0.0033, 0.0034],
        [0.0257, 0.0101, 0.0083],
        [0.0238, 0.0058, 0.0055],
        [0.1086, 0.0173, 0.0249],
        [0.0288, 0.0070, 0.0133],
        [0.0173, 0.0014, 0.0018],
        [0.0179, 0.0018, 0.0063],
        [0.0029, 0.0014, 0.0018]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0076],
        [0.0130],
        [0.0709],
        [0.0346],
        [0.0300],
        [0.0092],
        [0.0122],
        [0.0424],
        [0.0214],
        [0.1155],
        [0.0606],
        [0.0042],
        [0.0028],
        [0.0584],
        [0.0148],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0076, 0.0130, 0.0709, 0.0346, 0.0300, 0.0092, 0.0122, 0.0424, 0.0214,
         0.1155, 0.0606, 0.0042, 0.0028, 0.0584, 0.0148, 0.0088]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0052],
        [0.0046],
        [0.0147],
        [0.0036],
        [0.0078],
        [0.0040],
        [0.0038],
        [0.0071],
        [0.0123],
        [0.0266],
        [0.0150],
        [0.0018],
        [0.0013],
        [0.0693],
        [0.0108],
        [0.0022]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0046, 0.0147, 0.0036, 0.0078, 0.0040, 0.0038, 0.0071, 0.0123,
         0.0266, 0.0150, 0.0018, 0.0013, 0.0693, 0.0108, 0.0022]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0033],
        [0.0050],
        [0.0149],
        [0.0186],
        [0.0095],
        [0.0010],
        [0.0062],
        [0.0165],
        [0.0123],
        [0.0270],
        [0.0124],
        [0.0018],
        [0.0006],
        [0.0298],
        [0.0111],
        [0.0018]], device='cuda:0', dtype=torch.float16)/tensor([[0.0033, 0.0050, 0.0149, 0.0186, 0.0095, 0.0010, 0.0062, 0.0165, 0.0123,
         0.0270, 0.0124, 0.0018, 0.0006, 0.0298, 0.0111, 0.0018]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0076, 0.0052, 0.0033],
        [0.0130, 0.0046, 0.0050],
        [0.0709, 0.0147, 0.0149],
        [0.0346, 0.0036, 0.0186],
        [0.0300, 0.0078, 0.0095],
        [0.0092, 0.0040, 0.0010],
        [0.0122, 0.0038, 0.0062],
        [0.0424, 0.0071, 0.0165],
        [0.0214, 0.0123, 0.0123],
        [0.1155, 0.0266, 0.0270],
        [0.0606, 0.0150, 0.0124],
        [0.0042, 0.0018, 0.0018],
        [0.0028, 0.0013, 0.0006],
        [0.0584, 0.0693, 0.0298],
        [0.0148, 0.0108, 0.0111],
        [0.0088, 0.0022, 0.0018]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0394],
        [0.0119],
        [0.0028],
        [0.0178],
        [0.0179],
        [0.0081],
        [0.0060],
        [0.0141],
        [0.0503],
        [0.1017],
        [0.0042],
        [0.0012],
        [0.0015],
        [0.0193],
        [0.0243],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0394, 0.0119, 0.0028, 0.0178, 0.0179, 0.0081, 0.0060, 0.0141, 0.0503,
         0.1017, 0.0042, 0.0012, 0.0015, 0.0193, 0.0243, 0.0119]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0144],
        [0.0028],
        [0.0014],
        [0.0042],
        [0.0043],
        [0.0045],
        [0.0050],
        [0.0050],
        [0.0108],
        [0.0320],
        [0.0030],
        [0.0005],
        [0.0009],
        [0.0128],
        [0.0048],
        [0.0058]], device='cuda:0', dtype=torch.float16)/tensor([[0.0144, 0.0028, 0.0014, 0.0042, 0.0043, 0.0045, 0.0050, 0.0050, 0.0108,
         0.0320, 0.0030, 0.0005, 0.0009, 0.0128, 0.0048, 0.0058]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0054],
        [0.0019],
        [0.0010],
        [0.0034],
        [0.0038],
        [0.0042],
        [0.0012],
        [0.0044],
        [0.0092],
        [0.0337],
        [0.0025],
        [0.0003],
        [0.0003],
        [0.0042],
        [0.0079],
        [0.0027]], device='cuda:0', dtype=torch.float16)/tensor([[0.0054, 0.0019, 0.0010, 0.0034, 0.0038, 0.0042, 0.0012, 0.0044, 0.0092,
         0.0337, 0.0025, 0.0003, 0.0003, 0.0042, 0.0079, 0.0027]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0394, 0.0144, 0.0054],
        [0.0119, 0.0028, 0.0019],
        [0.0028, 0.0014, 0.0010],
        [0.0178, 0.0042, 0.0034],
        [0.0179, 0.0043, 0.0038],
        [0.0081, 0.0045, 0.0042],
        [0.0060, 0.0050, 0.0012],
        [0.0141, 0.0050, 0.0044],
        [0.0503, 0.0108, 0.0092],
        [0.1017, 0.0320, 0.0337],
        [0.0042, 0.0030, 0.0025],
        [0.0012, 0.0005, 0.0003],
        [0.0015, 0.0009, 0.0003],
        [0.0193, 0.0128, 0.0042],
        [0.0243, 0.0048, 0.0079],
        [0.0119, 0.0058, 0.0027]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0279],
        [0.0889],
        [0.0051],
        [0.0085],
        [0.0660],
        [0.0184],
        [0.0332],
        [0.1073],
        [0.1050],
        [0.0099],
        [0.0136],
        [0.0105],
        [0.0370],
        [0.0894],
        [0.0995],
        [0.0238]], device='cuda:0', dtype=torch.float16)/tensor([[0.0279, 0.0889, 0.0051, 0.0085, 0.0660, 0.0184, 0.0332, 0.1073, 0.1050,
         0.0099, 0.0136, 0.0105, 0.0370, 0.0894, 0.0995, 0.0238]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0089],
        [0.0314],
        [0.0034],
        [0.0012],
        [0.0109],
        [0.0098],
        [0.0140],
        [0.0287],
        [0.0394],
        [0.0039],
        [0.0041],
        [0.0013],
        [0.0171],
        [0.0403],
        [0.0569],
        [0.0063]], device='cuda:0', dtype=torch.float16)/tensor([[0.0089, 0.0314, 0.0034, 0.0012, 0.0109, 0.0098, 0.0140, 0.0287, 0.0394,
         0.0039, 0.0041, 0.0013, 0.0171, 0.0403, 0.0569, 0.0063]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0092],
        [0.0502],
        [0.0018],
        [0.0031],
        [0.0094],
        [0.0090],
        [0.0187],
        [0.0368],
        [0.0417],
        [0.0021],
        [0.0040],
        [0.0034],
        [0.0106],
        [0.0765],
        [0.0273],
        [0.0052]], device='cuda:0', dtype=torch.float16)/tensor([[0.0092, 0.0502, 0.0018, 0.0031, 0.0094, 0.0090, 0.0187, 0.0368, 0.0417,
         0.0021, 0.0040, 0.0034, 0.0106, 0.0765, 0.0273, 0.0052]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0279, 0.0089, 0.0092],
        [0.0889, 0.0314, 0.0502],
        [0.0051, 0.0034, 0.0018],
        [0.0085, 0.0012, 0.0031],
        [0.0660, 0.0109, 0.0094],
        [0.0184, 0.0098, 0.0090],
        [0.0332, 0.0140, 0.0187],
        [0.1073, 0.0287, 0.0368],
        [0.1050, 0.0394, 0.0417],
        [0.0099, 0.0039, 0.0021],
        [0.0136, 0.0041, 0.0040],
        [0.0105, 0.0013, 0.0034],
        [0.0370, 0.0171, 0.0106],
        [0.0894, 0.0403, 0.0765],
        [0.0995, 0.0569, 0.0273],
        [0.0238, 0.0063, 0.0052]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0252],
        [0.0213],
        [0.1075],
        [0.0500],
        [0.0151],
        [0.0627],
        [0.0086],
        [0.1788],
        [0.0295],
        [0.0671],
        [0.0138],
        [0.0283],
        [0.0021],
        [0.0104],
        [0.0127],
        [0.0037]], device='cuda:0', dtype=torch.float16)/tensor([[0.0252, 0.0213, 0.1075, 0.0500, 0.0151, 0.0627, 0.0086, 0.1788, 0.0295,
         0.0671, 0.0138, 0.0283, 0.0021, 0.0104, 0.0127, 0.0037]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0066],
        [0.0114],
        [0.0268],
        [0.0143],
        [0.0041],
        [0.0313],
        [0.0057],
        [0.0199],
        [0.0074],
        [0.0168],
        [0.0044],
        [0.0069],
        [0.0024],
        [0.0052],
        [0.0056],
        [0.0016]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0114, 0.0268, 0.0143, 0.0041, 0.0313, 0.0057, 0.0199, 0.0074,
         0.0168, 0.0044, 0.0069, 0.0024, 0.0052, 0.0056, 0.0016]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0086],
        [0.0064],
        [0.0328],
        [0.0306],
        [0.0034],
        [0.0313],
        [0.0043],
        [0.0470],
        [0.0161],
        [0.0317],
        [0.0041],
        [0.0081],
        [0.0006],
        [0.0041],
        [0.0063],
        [0.0011]], device='cuda:0', dtype=torch.float16)/tensor([[0.0086, 0.0064, 0.0328, 0.0306, 0.0034, 0.0313, 0.0043, 0.0470, 0.0161,
         0.0317, 0.0041, 0.0081, 0.0006, 0.0041, 0.0063, 0.0011]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0252, 0.0066, 0.0086],
        [0.0213, 0.0114, 0.0064],
        [0.1075, 0.0268, 0.0328],
        [0.0500, 0.0143, 0.0306],
        [0.0151, 0.0041, 0.0034],
        [0.0627, 0.0313, 0.0313],
        [0.0086, 0.0057, 0.0043],
        [0.1788, 0.0199, 0.0470],
        [0.0295, 0.0074, 0.0161],
        [0.0671, 0.0168, 0.0317],
        [0.0138, 0.0044, 0.0041],
        [0.0283, 0.0069, 0.0081],
        [0.0021, 0.0024, 0.0006],
        [0.0104, 0.0052, 0.0041],
        [0.0127, 0.0056, 0.0063],
        [0.0037, 0.0016, 0.0011]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0057],
        [0.0050],
        [0.0104],
        [0.0756],
        [0.0063],
        [0.0751],
        [0.0062],
        [0.0376],
        [0.0052],
        [0.0052],
        [0.0284],
        [0.0328],
        [0.0058],
        [0.0110],
        [0.1172],
        [0.0118]], device='cuda:0', dtype=torch.float16)/tensor([[0.0057, 0.0050, 0.0104, 0.0756, 0.0063, 0.0751, 0.0062, 0.0376, 0.0052,
         0.0052, 0.0284, 0.0328, 0.0058, 0.0110, 0.1172, 0.0118]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0028],
        [0.0030],
        [0.0028],
        [0.0121],
        [0.0025],
        [0.0130],
        [0.0041],
        [0.0118],
        [0.0046],
        [0.0050],
        [0.0087],
        [0.0034],
        [0.0046],
        [0.0096],
        [0.0179],
        [0.0022]], device='cuda:0', dtype=torch.float16)/tensor([[0.0028, 0.0030, 0.0028, 0.0121, 0.0025, 0.0130, 0.0041, 0.0118, 0.0046,
         0.0050, 0.0087, 0.0034, 0.0046, 0.0096, 0.0179, 0.0022]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0024],
        [0.0040],
        [0.0037],
        [0.0163],
        [0.0011],
        [0.0155],
        [0.0025],
        [0.0098],
        [0.0024],
        [0.0025],
        [0.0047],
        [0.0077],
        [0.0014],
        [0.0049],
        [0.0392],
        [0.0040]], device='cuda:0', dtype=torch.float16)/tensor([[0.0024, 0.0040, 0.0037, 0.0163, 0.0011, 0.0155, 0.0025, 0.0098, 0.0024,
         0.0025, 0.0047, 0.0077, 0.0014, 0.0049, 0.0392, 0.0040]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0057, 0.0028, 0.0024],
        [0.0050, 0.0030, 0.0040],
        [0.0104, 0.0028, 0.0037],
        [0.0756, 0.0121, 0.0163],
        [0.0063, 0.0025, 0.0011],
        [0.0751, 0.0130, 0.0155],
        [0.0062, 0.0041, 0.0025],
        [0.0376, 0.0118, 0.0098],
        [0.0052, 0.0046, 0.0024],
        [0.0052, 0.0050, 0.0025],
        [0.0284, 0.0087, 0.0047],
        [0.0328, 0.0034, 0.0077],
        [0.0058, 0.0046, 0.0014],
        [0.0110, 0.0096, 0.0049],
        [0.1172, 0.0179, 0.0392],
        [0.0118, 0.0022, 0.0040]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0354],
        [0.0163],
        [0.0129],
        [0.1003],
        [0.0826],
        [0.0122],
        [0.0131],
        [0.1030],
        [0.0255],
        [0.0060],
        [0.0117],
        [0.0211],
        [0.0347],
        [0.0119],
        [0.0162],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0354, 0.0163, 0.0129, 0.1003, 0.0826, 0.0122, 0.0131, 0.1030, 0.0255,
         0.0060, 0.0117, 0.0211, 0.0347, 0.0119, 0.0162, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0028],
        [0.0081],
        [0.0038],
        [0.0149],
        [0.0449],
        [0.0042],
        [0.0032],
        [0.0317],
        [0.0091],
        [0.0020],
        [0.0031],
        [0.0102],
        [0.0051],
        [0.0031],
        [0.0060],
        [0.0008]], device='cuda:0', dtype=torch.float16)/tensor([[0.0028, 0.0081, 0.0038, 0.0149, 0.0449, 0.0042, 0.0032, 0.0317, 0.0091,
         0.0020, 0.0031, 0.0102, 0.0051, 0.0031, 0.0060, 0.0008]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0107],
        [0.0088],
        [0.0043],
        [0.0250],
        [0.0695],
        [0.0066],
        [0.0043],
        [0.0457],
        [0.0142],
        [0.0027],
        [0.0047],
        [0.0056],
        [0.0077],
        [0.0049],
        [0.0053],
        [0.0022]], device='cuda:0', dtype=torch.float16)/tensor([[0.0107, 0.0088, 0.0043, 0.0250, 0.0695, 0.0066, 0.0043, 0.0457, 0.0142,
         0.0027, 0.0047, 0.0056, 0.0077, 0.0049, 0.0053, 0.0022]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0354, 0.0028, 0.0107],
        [0.0163, 0.0081, 0.0088],
        [0.0129, 0.0038, 0.0043],
        [0.1003, 0.0149, 0.0250],
        [0.0826, 0.0449, 0.0695],
        [0.0122, 0.0042, 0.0066],
        [0.0131, 0.0032, 0.0043],
        [0.1030, 0.0317, 0.0457],
        [0.0255, 0.0091, 0.0142],
        [0.0060, 0.0020, 0.0027],
        [0.0117, 0.0031, 0.0047],
        [0.0211, 0.0102, 0.0056],
        [0.0347, 0.0051, 0.0077],
        [0.0119, 0.0031, 0.0049],
        [0.0162, 0.0060, 0.0053],
        [0.0074, 0.0008, 0.0022]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0171],
        [0.0054],
        [0.0083],
        [0.1130],
        [0.0524],
        [0.0161],
        [0.1167],
        [0.0258],
        [0.0130],
        [0.0479],
        [0.0048],
        [0.0104],
        [0.0074],
        [0.0328],
        [0.0082],
        [0.0142]], device='cuda:0', dtype=torch.float16)/tensor([[0.0171, 0.0054, 0.0083, 0.1130, 0.0524, 0.0161, 0.1167, 0.0258, 0.0130,
         0.0479, 0.0048, 0.0104, 0.0074, 0.0328, 0.0082, 0.0142]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0037],
        [0.0024],
        [0.0226],
        [0.0106],
        [0.0058],
        [0.0234],
        [0.0034],
        [0.0048],
        [0.0321],
        [0.0021],
        [0.0048],
        [0.0020],
        [0.0068],
        [0.0082],
        [0.0046]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0037, 0.0024, 0.0226, 0.0106, 0.0058, 0.0234, 0.0034, 0.0048,
         0.0321, 0.0021, 0.0048, 0.0020, 0.0068, 0.0082, 0.0046]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0053],
        [0.0024],
        [0.0014],
        [0.0133],
        [0.0182],
        [0.0053],
        [0.0280],
        [0.0054],
        [0.0034],
        [0.0361],
        [0.0012],
        [0.0053],
        [0.0017],
        [0.0065],
        [0.0036],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0053, 0.0024, 0.0014, 0.0133, 0.0182, 0.0053, 0.0280, 0.0054, 0.0034,
         0.0361, 0.0012, 0.0053, 0.0017, 0.0065, 0.0036, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0171, 0.0062, 0.0053],
        [0.0054, 0.0037, 0.0024],
        [0.0083, 0.0024, 0.0014],
        [0.1130, 0.0226, 0.0133],
        [0.0524, 0.0106, 0.0182],
        [0.0161, 0.0058, 0.0053],
        [0.1167, 0.0234, 0.0280],
        [0.0258, 0.0034, 0.0054],
        [0.0130, 0.0048, 0.0034],
        [0.0479, 0.0321, 0.0361],
        [0.0048, 0.0021, 0.0012],
        [0.0104, 0.0048, 0.0053],
        [0.0074, 0.0020, 0.0017],
        [0.0328, 0.0068, 0.0065],
        [0.0082, 0.0082, 0.0036],
        [0.0142, 0.0046, 0.0060]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0399],
        [0.1279],
        [0.0059],
        [0.0989],
        [0.0228],
        [0.0130],
        [0.0231],
        [0.0094],
        [0.0046],
        [0.0089],
        [0.0041],
        [0.0481],
        [0.0163],
        [0.0169],
        [0.0219],
        [0.0171]], device='cuda:0', dtype=torch.float16)/tensor([[0.0399, 0.1279, 0.0059, 0.0989, 0.0228, 0.0130, 0.0231, 0.0094, 0.0046,
         0.0089, 0.0041, 0.0481, 0.0163, 0.0169, 0.0219, 0.0171]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0081],
        [0.0220],
        [0.0014],
        [0.0177],
        [0.0028],
        [0.0069],
        [0.0084],
        [0.0055],
        [0.0025],
        [0.0020],
        [0.0009],
        [0.0168],
        [0.0048],
        [0.0105],
        [0.0119],
        [0.0064]], device='cuda:0', dtype=torch.float16)/tensor([[0.0081, 0.0220, 0.0014, 0.0177, 0.0028, 0.0069, 0.0084, 0.0055, 0.0025,
         0.0020, 0.0009, 0.0168, 0.0048, 0.0105, 0.0119, 0.0064]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0081],
        [0.0290],
        [0.0025],
        [0.0435],
        [0.0119],
        [0.0045],
        [0.0109],
        [0.0044],
        [0.0036],
        [0.0013],
        [0.0010],
        [0.0213],
        [0.0062],
        [0.0076],
        [0.0115],
        [0.0050]], device='cuda:0', dtype=torch.float16)/tensor([[0.0081, 0.0290, 0.0025, 0.0435, 0.0119, 0.0045, 0.0109, 0.0044, 0.0036,
         0.0013, 0.0010, 0.0213, 0.0062, 0.0076, 0.0115, 0.0050]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0399, 0.0081, 0.0081],
        [0.1279, 0.0220, 0.0290],
        [0.0059, 0.0014, 0.0025],
        [0.0989, 0.0177, 0.0435],
        [0.0228, 0.0028, 0.0119],
        [0.0130, 0.0069, 0.0045],
        [0.0231, 0.0084, 0.0109],
        [0.0094, 0.0055, 0.0044],
        [0.0046, 0.0025, 0.0036],
        [0.0089, 0.0020, 0.0013],
        [0.0041, 0.0009, 0.0010],
        [0.0481, 0.0168, 0.0213],
        [0.0163, 0.0048, 0.0062],
        [0.0169, 0.0105, 0.0076],
        [0.0219, 0.0119, 0.0115],
        [0.0171, 0.0064, 0.0050]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0082],
        [0.0159],
        [0.0704],
        [0.0683],
        [0.0271],
        [0.0059],
        [0.0049],
        [0.0030],
        [0.0157],
        [0.0087],
        [0.0094],
        [0.0367],
        [0.0707],
        [0.0706],
        [0.0090],
        [0.0206]], device='cuda:0', dtype=torch.float16)/tensor([[0.0082, 0.0159, 0.0704, 0.0683, 0.0271, 0.0059, 0.0049, 0.0030, 0.0157,
         0.0087, 0.0094, 0.0367, 0.0707, 0.0706, 0.0090, 0.0206]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0014],
        [0.0062],
        [0.0142],
        [0.0171],
        [0.0066],
        [0.0027],
        [0.0022],
        [0.0019],
        [0.0026],
        [0.0025],
        [0.0065],
        [0.0124],
        [0.0266],
        [0.0467],
        [0.0031],
        [0.0024]], device='cuda:0', dtype=torch.float16)/tensor([[0.0014, 0.0062, 0.0142, 0.0171, 0.0066, 0.0027, 0.0022, 0.0019, 0.0026,
         0.0025, 0.0065, 0.0124, 0.0266, 0.0467, 0.0031, 0.0024]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0016],
        [0.0091],
        [0.0152],
        [0.0199],
        [0.0110],
        [0.0027],
        [0.0010],
        [0.0010],
        [0.0056],
        [0.0025],
        [0.0064],
        [0.0103],
        [0.0290],
        [0.0313],
        [0.0061],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0016, 0.0091, 0.0152, 0.0199, 0.0110, 0.0027, 0.0010, 0.0010, 0.0056,
         0.0025, 0.0064, 0.0103, 0.0290, 0.0313, 0.0061, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0082, 0.0014, 0.0016],
        [0.0159, 0.0062, 0.0091],
        [0.0704, 0.0142, 0.0152],
        [0.0683, 0.0171, 0.0199],
        [0.0271, 0.0066, 0.0110],
        [0.0059, 0.0027, 0.0027],
        [0.0049, 0.0022, 0.0010],
        [0.0030, 0.0019, 0.0010],
        [0.0157, 0.0026, 0.0056],
        [0.0087, 0.0025, 0.0025],
        [0.0094, 0.0065, 0.0064],
        [0.0367, 0.0124, 0.0103],
        [0.0707, 0.0266, 0.0290],
        [0.0706, 0.0467, 0.0313],
        [0.0090, 0.0031, 0.0061],
        [0.0206, 0.0024, 0.0034]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0052],
        [0.0065],
        [0.0253],
        [0.0043],
        [0.1008],
        [0.0024],
        [0.0269],
        [0.0259],
        [0.0107],
        [0.0030],
        [0.0396],
        [0.0088],
        [0.0247],
        [0.0154],
        [0.0053],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0052, 0.0065, 0.0253, 0.0043, 0.1008, 0.0024, 0.0269, 0.0259, 0.0107,
         0.0030, 0.0396, 0.0088, 0.0247, 0.0154, 0.0053, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0055],
        [0.0022],
        [0.0070],
        [0.0066],
        [0.0170],
        [0.0006],
        [0.0036],
        [0.0055],
        [0.0057],
        [0.0006],
        [0.0230],
        [0.0031],
        [0.0029],
        [0.0063],
        [0.0024],
        [0.0049]], device='cuda:0', dtype=torch.float16)/tensor([[0.0055, 0.0022, 0.0070, 0.0066, 0.0170, 0.0006, 0.0036, 0.0055, 0.0057,
         0.0006, 0.0230, 0.0031, 0.0029, 0.0063, 0.0024, 0.0049]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0031],
        [0.0026],
        [0.0045],
        [0.0014],
        [0.0340],
        [0.0005],
        [0.0120],
        [0.0106],
        [0.0042],
        [0.0008],
        [0.0260],
        [0.0033],
        [0.0050],
        [0.0086],
        [0.0016],
        [0.0015]], device='cuda:0', dtype=torch.float16)/tensor([[0.0031, 0.0026, 0.0045, 0.0014, 0.0340, 0.0005, 0.0120, 0.0106, 0.0042,
         0.0008, 0.0260, 0.0033, 0.0050, 0.0086, 0.0016, 0.0015]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0052, 0.0055, 0.0031],
        [0.0065, 0.0022, 0.0026],
        [0.0253, 0.0070, 0.0045],
        [0.0043, 0.0066, 0.0014],
        [0.1008, 0.0170, 0.0340],
        [0.0024, 0.0006, 0.0005],
        [0.0269, 0.0036, 0.0120],
        [0.0259, 0.0055, 0.0106],
        [0.0107, 0.0057, 0.0042],
        [0.0030, 0.0006, 0.0008],
        [0.0396, 0.0230, 0.0260],
        [0.0088, 0.0031, 0.0033],
        [0.0247, 0.0029, 0.0050],
        [0.0154, 0.0063, 0.0086],
        [0.0053, 0.0024, 0.0016],
        [0.0161, 0.0049, 0.0015]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0427],
        [0.0466],
        [0.0371],
        [0.0150],
        [0.0535],
        [0.0049]], device='cuda:0', dtype=torch.float16)/tensor([[0.0427, 0.0466, 0.0371, 0.0150, 0.0535, 0.0049]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0154],
        [0.0211],
        [0.0156],
        [0.0047],
        [0.0148],
        [0.0014]], device='cuda:0', dtype=torch.float16)/tensor([[0.0154, 0.0211, 0.0156, 0.0047, 0.0148, 0.0014]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0084],
        [0.0115],
        [0.0166],
        [0.0070],
        [0.0150],
        [0.0015]], device='cuda:0', dtype=torch.float16)/tensor([[0.0084, 0.0115, 0.0166, 0.0070, 0.0150, 0.0015]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0427, 0.0154, 0.0084],
        [0.0466, 0.0211, 0.0115],
        [0.0371, 0.0156, 0.0166],
        [0.0150, 0.0047, 0.0070],
        [0.0535, 0.0148, 0.0150],
        [0.0049, 0.0014, 0.0015]], device='cuda:0')
acc:  0.3434343434343434
Time taken to execute the en NLI task with prompt type identical_modal, variation 3 and batchsize 16: 0:03:02.733609
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_3']
----------- 42 en huggyllama/llama-7b NLI identical_modal 4 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 329.11it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0257],
        [0.0221],
        [0.0325],
        [0.0163],
        [0.0326],
        [0.0044],
        [0.1366],
        [0.0055],
        [0.0081],
        [0.0611],
        [0.0038],
        [0.0654],
        [0.0108],
        [0.0156],
        [0.0453],
        [0.0256]], device='cuda:0', dtype=torch.float16)/tensor([[0.0257, 0.0221, 0.0325, 0.0163, 0.0326, 0.0044, 0.1366, 0.0055, 0.0081,
         0.0611, 0.0038, 0.0654, 0.0108, 0.0156, 0.0453, 0.0256]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0077],
        [0.0047],
        [0.0166],
        [0.0073],
        [0.0080],
        [0.0018],
        [0.0323],
        [0.0011],
        [0.0041],
        [0.0222],
        [0.0015],
        [0.0230],
        [0.0040],
        [0.0048],
        [0.0079],
        [0.0129]], device='cuda:0', dtype=torch.float16)/tensor([[0.0077, 0.0047, 0.0166, 0.0073, 0.0080, 0.0018, 0.0323, 0.0011, 0.0041,
         0.0222, 0.0015, 0.0230, 0.0040, 0.0048, 0.0079, 0.0129]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0050],
        [0.0047],
        [0.0127],
        [0.0077],
        [0.0040],
        [0.0008],
        [0.0215],
        [0.0012],
        [0.0038],
        [0.0103],
        [0.0015],
        [0.0131],
        [0.0068],
        [0.0025],
        [0.0061],
        [0.0050]], device='cuda:0', dtype=torch.float16)/tensor([[0.0050, 0.0047, 0.0127, 0.0077, 0.0040, 0.0008, 0.0215, 0.0012, 0.0038,
         0.0103, 0.0015, 0.0131, 0.0068, 0.0025, 0.0061, 0.0050]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0257, 0.0077, 0.0050],
        [0.0221, 0.0047, 0.0047],
        [0.0325, 0.0166, 0.0127],
        [0.0163, 0.0073, 0.0077],
        [0.0326, 0.0080, 0.0040],
        [0.0044, 0.0018, 0.0008],
        [0.1366, 0.0323, 0.0215],
        [0.0055, 0.0011, 0.0012],
        [0.0081, 0.0041, 0.0038],
        [0.0611, 0.0222, 0.0103],
        [0.0038, 0.0015, 0.0015],
        [0.0654, 0.0230, 0.0131],
        [0.0108, 0.0040, 0.0068],
        [0.0156, 0.0048, 0.0025],
        [0.0453, 0.0079, 0.0061],
        [0.0256, 0.0129, 0.0050]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0359],
        [0.0067],
        [0.0253],
        [0.0027],
        [0.0121],
        [0.0160],
        [0.0061],
        [0.0318],
        [0.0110],
        [0.0321],
        [0.2091],
        [0.0586],
        [0.0489],
        [0.0224],
        [0.0022],
        [0.0329]], device='cuda:0', dtype=torch.float16)/tensor([[0.0359, 0.0067, 0.0253, 0.0027, 0.0121, 0.0160, 0.0061, 0.0318, 0.0110,
         0.0321, 0.2091, 0.0586, 0.0489, 0.0224, 0.0022, 0.0329]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0169],
        [0.0041],
        [0.0129],
        [0.0007],
        [0.0029],
        [0.0048],
        [0.0013],
        [0.0067],
        [0.0034],
        [0.0037],
        [0.0226],
        [0.0168],
        [0.0204],
        [0.0067],
        [0.0024],
        [0.0167]], device='cuda:0', dtype=torch.float16)/tensor([[0.0169, 0.0041, 0.0129, 0.0007, 0.0029, 0.0048, 0.0013, 0.0067, 0.0034,
         0.0037, 0.0226, 0.0168, 0.0204, 0.0067, 0.0024, 0.0167]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0143],
        [0.0021],
        [0.0056],
        [0.0005],
        [0.0017],
        [0.0033],
        [0.0019],
        [0.0058],
        [0.0051],
        [0.0126],
        [0.0482],
        [0.0123],
        [0.0089],
        [0.0073],
        [0.0005],
        [0.0073]], device='cuda:0', dtype=torch.float16)/tensor([[0.0143, 0.0021, 0.0056, 0.0005, 0.0017, 0.0033, 0.0019, 0.0058, 0.0051,
         0.0126, 0.0482, 0.0123, 0.0089, 0.0073, 0.0005, 0.0073]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0359, 0.0169, 0.0143],
        [0.0067, 0.0041, 0.0021],
        [0.0253, 0.0129, 0.0056],
        [0.0027, 0.0007, 0.0005],
        [0.0121, 0.0029, 0.0017],
        [0.0160, 0.0048, 0.0033],
        [0.0061, 0.0013, 0.0019],
        [0.0318, 0.0067, 0.0058],
        [0.0110, 0.0034, 0.0051],
        [0.0321, 0.0037, 0.0126],
        [0.2091, 0.0226, 0.0482],
        [0.0586, 0.0168, 0.0123],
        [0.0489, 0.0204, 0.0089],
        [0.0224, 0.0067, 0.0073],
        [0.0022, 0.0024, 0.0005],
        [0.0329, 0.0167, 0.0073]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0195],
        [0.0106],
        [0.0052],
        [0.0192],
        [0.0094],
        [0.0286],
        [0.0297],
        [0.0127],
        [0.0258],
        [0.0417],
        [0.0023],
        [0.0448],
        [0.0547],
        [0.0184],
        [0.0602],
        [0.0459]], device='cuda:0', dtype=torch.float16)/tensor([[0.0195, 0.0106, 0.0052, 0.0192, 0.0094, 0.0286, 0.0297, 0.0127, 0.0258,
         0.0417, 0.0023, 0.0448, 0.0547, 0.0184, 0.0602, 0.0459]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0079],
        [0.0040],
        [0.0011],
        [0.0060],
        [0.0015],
        [0.0107],
        [0.0062],
        [0.0014],
        [0.0101],
        [0.0061],
        [0.0011],
        [0.0094],
        [0.0109],
        [0.0051],
        [0.0191],
        [0.0068]], device='cuda:0', dtype=torch.float16)/tensor([[0.0079, 0.0040, 0.0011, 0.0060, 0.0015, 0.0107, 0.0062, 0.0014, 0.0101,
         0.0061, 0.0011, 0.0094, 0.0109, 0.0051, 0.0191, 0.0068]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0027],
        [0.0052],
        [0.0011],
        [0.0111],
        [0.0010],
        [0.0093],
        [0.0036],
        [0.0021],
        [0.0027],
        [0.0132],
        [0.0003],
        [0.0109],
        [0.0062],
        [0.0023],
        [0.0073],
        [0.0106]], device='cuda:0', dtype=torch.float16)/tensor([[0.0027, 0.0052, 0.0011, 0.0111, 0.0010, 0.0093, 0.0036, 0.0021, 0.0027,
         0.0132, 0.0003, 0.0109, 0.0062, 0.0023, 0.0073, 0.0106]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0195, 0.0079, 0.0027],
        [0.0106, 0.0040, 0.0052],
        [0.0052, 0.0011, 0.0011],
        [0.0192, 0.0060, 0.0111],
        [0.0094, 0.0015, 0.0010],
        [0.0286, 0.0107, 0.0093],
        [0.0297, 0.0062, 0.0036],
        [0.0127, 0.0014, 0.0021],
        [0.0258, 0.0101, 0.0027],
        [0.0417, 0.0061, 0.0132],
        [0.0023, 0.0011, 0.0003],
        [0.0448, 0.0094, 0.0109],
        [0.0547, 0.0109, 0.0062],
        [0.0184, 0.0051, 0.0023],
        [0.0602, 0.0191, 0.0073],
        [0.0459, 0.0068, 0.0106]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0095],
        [0.0135],
        [0.0499],
        [0.0559],
        [0.0168],
        [0.0060],
        [0.0275],
        [0.0113],
        [0.0069],
        [0.0068],
        [0.0219],
        [0.0289],
        [0.0285],
        [0.0132],
        [0.0338],
        [0.0309]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0135, 0.0499, 0.0559, 0.0168, 0.0060, 0.0275, 0.0113, 0.0069,
         0.0068, 0.0219, 0.0289, 0.0285, 0.0132, 0.0338, 0.0309]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0062],
        [0.0088],
        [0.0320],
        [0.0234],
        [0.0063],
        [0.0059],
        [0.0073],
        [0.0021],
        [0.0033],
        [0.0040],
        [0.0101],
        [0.0022],
        [0.0049],
        [0.0068],
        [0.0149],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0088, 0.0320, 0.0234, 0.0063, 0.0059, 0.0073, 0.0021, 0.0033,
         0.0040, 0.0101, 0.0022, 0.0049, 0.0068, 0.0149, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0041],
        [0.0072],
        [0.0314],
        [0.0261],
        [0.0016],
        [0.0019],
        [0.0139],
        [0.0015],
        [0.0029],
        [0.0023],
        [0.0056],
        [0.0018],
        [0.0046],
        [0.0052],
        [0.0163],
        [0.0165]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0072, 0.0314, 0.0261, 0.0016, 0.0019, 0.0139, 0.0015, 0.0029,
         0.0023, 0.0056, 0.0018, 0.0046, 0.0052, 0.0163, 0.0165]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0095, 0.0062, 0.0041],
        [0.0135, 0.0088, 0.0072],
        [0.0499, 0.0320, 0.0314],
        [0.0559, 0.0234, 0.0261],
        [0.0168, 0.0063, 0.0016],
        [0.0060, 0.0059, 0.0019],
        [0.0275, 0.0073, 0.0139],
        [0.0113, 0.0021, 0.0015],
        [0.0069, 0.0033, 0.0029],
        [0.0068, 0.0040, 0.0023],
        [0.0219, 0.0101, 0.0056],
        [0.0289, 0.0022, 0.0018],
        [0.0285, 0.0049, 0.0046],
        [0.0132, 0.0068, 0.0052],
        [0.0338, 0.0149, 0.0163],
        [0.0309, 0.0161, 0.0165]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0468],
        [0.0053],
        [0.0349],
        [0.0562],
        [0.1199],
        [0.0777],
        [0.1289],
        [0.1196],
        [0.0351],
        [0.0738],
        [0.0125],
        [0.0837],
        [0.0760],
        [0.0128],
        [0.0079],
        [0.0096]], device='cuda:0', dtype=torch.float16)/tensor([[0.0468, 0.0053, 0.0349, 0.0562, 0.1199, 0.0777, 0.1289, 0.1196, 0.0351,
         0.0738, 0.0125, 0.0837, 0.0760, 0.0128, 0.0079, 0.0096]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0113],
        [0.0043],
        [0.0034],
        [0.0721],
        [0.0200],
        [0.0480],
        [0.0316],
        [0.0353],
        [0.0063],
        [0.0480],
        [0.0016],
        [0.0132],
        [0.0197],
        [0.0017],
        [0.0026],
        [0.0060]], device='cuda:0', dtype=torch.float16)/tensor([[0.0113, 0.0043, 0.0034, 0.0721, 0.0200, 0.0480, 0.0316, 0.0353, 0.0063,
         0.0480, 0.0016, 0.0132, 0.0197, 0.0017, 0.0026, 0.0060]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0119],
        [0.0008],
        [0.0031],
        [0.0271],
        [0.0414],
        [0.0118],
        [0.0257],
        [0.0465],
        [0.0059],
        [0.0392],
        [0.0033],
        [0.0104],
        [0.0313],
        [0.0027],
        [0.0007],
        [0.0044]], device='cuda:0', dtype=torch.float16)/tensor([[0.0119, 0.0008, 0.0031, 0.0271, 0.0414, 0.0118, 0.0257, 0.0465, 0.0059,
         0.0392, 0.0033, 0.0104, 0.0313, 0.0027, 0.0007, 0.0044]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0468, 0.0113, 0.0119],
        [0.0053, 0.0043, 0.0008],
        [0.0349, 0.0034, 0.0031],
        [0.0562, 0.0721, 0.0271],
        [0.1199, 0.0200, 0.0414],
        [0.0777, 0.0480, 0.0118],
        [0.1289, 0.0316, 0.0257],
        [0.1196, 0.0353, 0.0465],
        [0.0351, 0.0063, 0.0059],
        [0.0738, 0.0480, 0.0392],
        [0.0125, 0.0016, 0.0033],
        [0.0837, 0.0132, 0.0104],
        [0.0760, 0.0197, 0.0313],
        [0.0128, 0.0017, 0.0027],
        [0.0079, 0.0026, 0.0007],
        [0.0096, 0.0060, 0.0044]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0193],
        [0.1055],
        [0.1219],
        [0.0182],
        [0.0159],
        [0.0183],
        [0.0166],
        [0.1466],
        [0.0493],
        [0.0214],
        [0.0256],
        [0.0995],
        [0.0509],
        [0.0461],
        [0.0070],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0193, 0.1055, 0.1219, 0.0182, 0.0159, 0.0183, 0.0166, 0.1466, 0.0493,
         0.0214, 0.0256, 0.0995, 0.0509, 0.0461, 0.0070, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0029],
        [0.0238],
        [0.0221],
        [0.0056],
        [0.0045],
        [0.0055],
        [0.0058],
        [0.0239],
        [0.0080],
        [0.0061],
        [0.0157],
        [0.0244],
        [0.0145],
        [0.0060],
        [0.0039],
        [0.0017]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0238, 0.0221, 0.0056, 0.0045, 0.0055, 0.0058, 0.0239, 0.0080,
         0.0061, 0.0157, 0.0244, 0.0145, 0.0060, 0.0039, 0.0017]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0034],
        [0.0241],
        [0.0253],
        [0.0089],
        [0.0054],
        [0.0043],
        [0.0104],
        [0.0217],
        [0.0146],
        [0.0049],
        [0.0069],
        [0.0193],
        [0.0083],
        [0.0182],
        [0.0020],
        [0.0017]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0241, 0.0253, 0.0089, 0.0054, 0.0043, 0.0104, 0.0217, 0.0146,
         0.0049, 0.0069, 0.0193, 0.0083, 0.0182, 0.0020, 0.0017]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0193, 0.0029, 0.0034],
        [0.1055, 0.0238, 0.0241],
        [0.1219, 0.0221, 0.0253],
        [0.0182, 0.0056, 0.0089],
        [0.0159, 0.0045, 0.0054],
        [0.0183, 0.0055, 0.0043],
        [0.0166, 0.0058, 0.0104],
        [0.1466, 0.0239, 0.0217],
        [0.0493, 0.0080, 0.0146],
        [0.0214, 0.0061, 0.0049],
        [0.0256, 0.0157, 0.0069],
        [0.0995, 0.0244, 0.0193],
        [0.0509, 0.0145, 0.0083],
        [0.0461, 0.0060, 0.0182],
        [0.0070, 0.0039, 0.0020],
        [0.0033, 0.0017, 0.0017]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0507],
        [0.0220],
        [0.0055],
        [0.0742],
        [0.0754],
        [0.0814],
        [0.0516],
        [0.0055],
        [0.0109],
        [0.0129],
        [0.0138],
        [0.0414],
        [0.0266],
        [0.0219],
        [0.0227],
        [0.0377]], device='cuda:0', dtype=torch.float16)/tensor([[0.0507, 0.0220, 0.0055, 0.0742, 0.0754, 0.0814, 0.0516, 0.0055, 0.0109,
         0.0129, 0.0138, 0.0414, 0.0266, 0.0219, 0.0227, 0.0377]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0158],
        [0.0069],
        [0.0022],
        [0.0342],
        [0.0161],
        [0.0475],
        [0.0124],
        [0.0033],
        [0.0079],
        [0.0034],
        [0.0041],
        [0.0257],
        [0.0067],
        [0.0058],
        [0.0073],
        [0.0074]], device='cuda:0', dtype=torch.float16)/tensor([[0.0158, 0.0069, 0.0022, 0.0342, 0.0161, 0.0475, 0.0124, 0.0033, 0.0079,
         0.0034, 0.0041, 0.0257, 0.0067, 0.0058, 0.0073, 0.0074]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0190],
        [0.0051],
        [0.0022],
        [0.0514],
        [0.0139],
        [0.0680],
        [0.0209],
        [0.0034],
        [0.0041],
        [0.0035],
        [0.0027],
        [0.0195],
        [0.0063],
        [0.0030],
        [0.0048],
        [0.0065]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0051, 0.0022, 0.0514, 0.0139, 0.0680, 0.0209, 0.0034, 0.0041,
         0.0035, 0.0027, 0.0195, 0.0063, 0.0030, 0.0048, 0.0065]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0507, 0.0158, 0.0190],
        [0.0220, 0.0069, 0.0051],
        [0.0055, 0.0022, 0.0022],
        [0.0742, 0.0342, 0.0514],
        [0.0754, 0.0161, 0.0139],
        [0.0814, 0.0475, 0.0680],
        [0.0516, 0.0124, 0.0209],
        [0.0055, 0.0033, 0.0034],
        [0.0109, 0.0079, 0.0041],
        [0.0129, 0.0034, 0.0035],
        [0.0138, 0.0041, 0.0027],
        [0.0414, 0.0257, 0.0195],
        [0.0266, 0.0067, 0.0063],
        [0.0219, 0.0058, 0.0030],
        [0.0227, 0.0073, 0.0048],
        [0.0377, 0.0074, 0.0065]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1093],
        [0.0250],
        [0.0415],
        [0.0190],
        [0.0108],
        [0.0049],
        [0.1157],
        [0.0295],
        [0.0200],
        [0.0352],
        [0.0785],
        [0.0090],
        [0.0757],
        [0.0097],
        [0.0175],
        [0.0083]], device='cuda:0', dtype=torch.float16)/tensor([[0.1093, 0.0250, 0.0415, 0.0190, 0.0108, 0.0049, 0.1157, 0.0295, 0.0200,
         0.0352, 0.0785, 0.0090, 0.0757, 0.0097, 0.0175, 0.0083]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0211],
        [0.0085],
        [0.0098],
        [0.0051],
        [0.0046],
        [0.0064],
        [0.0555],
        [0.0080],
        [0.0032],
        [0.0106],
        [0.0173],
        [0.0065],
        [0.0169],
        [0.0058],
        [0.0063],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0211, 0.0085, 0.0098, 0.0051, 0.0046, 0.0064, 0.0555, 0.0080, 0.0032,
         0.0106, 0.0173, 0.0065, 0.0169, 0.0058, 0.0063, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0286],
        [0.0026],
        [0.0086],
        [0.0081],
        [0.0014],
        [0.0014],
        [0.0436],
        [0.0062],
        [0.0033],
        [0.0092],
        [0.0097],
        [0.0026],
        [0.0140],
        [0.0056],
        [0.0070],
        [0.0009]], device='cuda:0', dtype=torch.float16)/tensor([[0.0286, 0.0026, 0.0086, 0.0081, 0.0014, 0.0014, 0.0436, 0.0062, 0.0033,
         0.0092, 0.0097, 0.0026, 0.0140, 0.0056, 0.0070, 0.0009]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1093, 0.0211, 0.0286],
        [0.0250, 0.0085, 0.0026],
        [0.0415, 0.0098, 0.0086],
        [0.0190, 0.0051, 0.0081],
        [0.0108, 0.0046, 0.0014],
        [0.0049, 0.0064, 0.0014],
        [0.1157, 0.0555, 0.0436],
        [0.0295, 0.0080, 0.0062],
        [0.0200, 0.0032, 0.0033],
        [0.0352, 0.0106, 0.0092],
        [0.0785, 0.0173, 0.0097],
        [0.0090, 0.0065, 0.0026],
        [0.0757, 0.0169, 0.0140],
        [0.0097, 0.0058, 0.0056],
        [0.0175, 0.0063, 0.0070],
        [0.0083, 0.0033, 0.0009]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0444],
        [0.0065],
        [0.0126],
        [0.0222],
        [0.0308],
        [0.0136],
        [0.0262],
        [0.0242],
        [0.0844],
        [0.0586],
        [0.0103],
        [0.0115],
        [0.0104],
        [0.0142],
        [0.0053],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0444, 0.0065, 0.0126, 0.0222, 0.0308, 0.0136, 0.0262, 0.0242, 0.0844,
         0.0586, 0.0103, 0.0115, 0.0104, 0.0142, 0.0053, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0080],
        [0.0072],
        [0.0055],
        [0.0142],
        [0.0079],
        [0.0035],
        [0.0050],
        [0.0058],
        [0.0145],
        [0.0039],
        [0.0025],
        [0.0024],
        [0.0090],
        [0.0079],
        [0.0021],
        [0.0048]], device='cuda:0', dtype=torch.float16)/tensor([[0.0080, 0.0072, 0.0055, 0.0142, 0.0079, 0.0035, 0.0050, 0.0058, 0.0145,
         0.0039, 0.0025, 0.0024, 0.0090, 0.0079, 0.0021, 0.0048]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0065],
        [0.0015],
        [0.0034],
        [0.0037],
        [0.0056],
        [0.0032],
        [0.0035],
        [0.0018],
        [0.0115],
        [0.0068],
        [0.0029],
        [0.0015],
        [0.0034],
        [0.0068],
        [0.0022],
        [0.0033]], device='cuda:0', dtype=torch.float16)/tensor([[0.0065, 0.0015, 0.0034, 0.0037, 0.0056, 0.0032, 0.0035, 0.0018, 0.0115,
         0.0068, 0.0029, 0.0015, 0.0034, 0.0068, 0.0022, 0.0033]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0444, 0.0080, 0.0065],
        [0.0065, 0.0072, 0.0015],
        [0.0126, 0.0055, 0.0034],
        [0.0222, 0.0142, 0.0037],
        [0.0308, 0.0079, 0.0056],
        [0.0136, 0.0035, 0.0032],
        [0.0262, 0.0050, 0.0035],
        [0.0242, 0.0058, 0.0018],
        [0.0844, 0.0145, 0.0115],
        [0.0586, 0.0039, 0.0068],
        [0.0103, 0.0025, 0.0029],
        [0.0115, 0.0024, 0.0015],
        [0.0104, 0.0090, 0.0034],
        [0.0142, 0.0079, 0.0068],
        [0.0053, 0.0021, 0.0022],
        [0.0124, 0.0048, 0.0033]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0434],
        [0.0364],
        [0.0109],
        [0.0372],
        [0.0136],
        [0.0141],
        [0.0062],
        [0.0059],
        [0.0684],
        [0.1044],
        [0.0080],
        [0.0127],
        [0.0267],
        [0.0108],
        [0.0026],
        [0.0278]], device='cuda:0', dtype=torch.float16)/tensor([[0.0434, 0.0364, 0.0109, 0.0372, 0.0136, 0.0141, 0.0062, 0.0059, 0.0684,
         0.1044, 0.0080, 0.0127, 0.0267, 0.0108, 0.0026, 0.0278]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0142],
        [0.0176],
        [0.0059],
        [0.0078],
        [0.0034],
        [0.0039],
        [0.0013],
        [0.0028],
        [0.0176],
        [0.0212],
        [0.0027],
        [0.0030],
        [0.0077],
        [0.0022],
        [0.0017],
        [0.0034]], device='cuda:0', dtype=torch.float16)/tensor([[0.0142, 0.0176, 0.0059, 0.0078, 0.0034, 0.0039, 0.0013, 0.0028, 0.0176,
         0.0212, 0.0027, 0.0030, 0.0077, 0.0022, 0.0017, 0.0034]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0029],
        [0.0080],
        [0.0031],
        [0.0086],
        [0.0017],
        [0.0038],
        [0.0014],
        [0.0008],
        [0.0124],
        [0.0218],
        [0.0015],
        [0.0031],
        [0.0067],
        [0.0012],
        [0.0005],
        [0.0025]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0080, 0.0031, 0.0086, 0.0017, 0.0038, 0.0014, 0.0008, 0.0124,
         0.0218, 0.0015, 0.0031, 0.0067, 0.0012, 0.0005, 0.0025]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0434, 0.0142, 0.0029],
        [0.0364, 0.0176, 0.0080],
        [0.0109, 0.0059, 0.0031],
        [0.0372, 0.0078, 0.0086],
        [0.0136, 0.0034, 0.0017],
        [0.0141, 0.0039, 0.0038],
        [0.0062, 0.0013, 0.0014],
        [0.0059, 0.0028, 0.0008],
        [0.0684, 0.0176, 0.0124],
        [0.1044, 0.0212, 0.0218],
        [0.0080, 0.0027, 0.0015],
        [0.0127, 0.0030, 0.0031],
        [0.0267, 0.0077, 0.0067],
        [0.0108, 0.0022, 0.0012],
        [0.0026, 0.0017, 0.0005],
        [0.0278, 0.0034, 0.0025]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.1066],
        [0.0147],
        [0.1075],
        [0.1023],
        [0.0813],
        [0.0144],
        [0.0138],
        [0.0082],
        [0.0077],
        [0.0460],
        [0.0108],
        [0.1191],
        [0.0017],
        [0.0952],
        [0.0064],
        [0.0539]], device='cuda:0', dtype=torch.float16)/tensor([[0.1066, 0.0147, 0.1075, 0.1023, 0.0813, 0.0144, 0.0138, 0.0082, 0.0077,
         0.0460, 0.0108, 0.1191, 0.0017, 0.0952, 0.0064, 0.0539]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0360],
        [0.0129],
        [0.0257],
        [0.0506],
        [0.0341],
        [0.0068],
        [0.0073],
        [0.0045],
        [0.0026],
        [0.0031],
        [0.0049],
        [0.0390],
        [0.0007],
        [0.0136],
        [0.0018],
        [0.0184]], device='cuda:0', dtype=torch.float16)/tensor([[0.0360, 0.0129, 0.0257, 0.0506, 0.0341, 0.0068, 0.0073, 0.0045, 0.0026,
         0.0031, 0.0049, 0.0390, 0.0007, 0.0136, 0.0018, 0.0184]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0448],
        [0.0108],
        [0.0367],
        [0.0809],
        [0.0334],
        [0.0038],
        [0.0029],
        [0.0028],
        [0.0015],
        [0.0058],
        [0.0036],
        [0.0193],
        [0.0004],
        [0.0112],
        [0.0012],
        [0.0150]], device='cuda:0', dtype=torch.float16)/tensor([[0.0448, 0.0108, 0.0367, 0.0809, 0.0334, 0.0038, 0.0029, 0.0028, 0.0015,
         0.0058, 0.0036, 0.0193, 0.0004, 0.0112, 0.0012, 0.0150]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.1066, 0.0360, 0.0448],
        [0.0147, 0.0129, 0.0108],
        [0.1075, 0.0257, 0.0367],
        [0.1023, 0.0506, 0.0809],
        [0.0813, 0.0341, 0.0334],
        [0.0144, 0.0068, 0.0038],
        [0.0138, 0.0073, 0.0029],
        [0.0082, 0.0045, 0.0028],
        [0.0077, 0.0026, 0.0015],
        [0.0460, 0.0031, 0.0058],
        [0.0108, 0.0049, 0.0036],
        [0.1191, 0.0390, 0.0193],
        [0.0017, 0.0007, 0.0004],
        [0.0952, 0.0136, 0.0112],
        [0.0064, 0.0018, 0.0012],
        [0.0539, 0.0184, 0.0150]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0459],
        [0.0186],
        [0.0140],
        [0.0938],
        [0.0108],
        [0.0773],
        [0.0819],
        [0.0068],
        [0.0069],
        [0.0243],
        [0.0092],
        [0.0287],
        [0.0270],
        [0.0963],
        [0.0077],
        [0.0112]], device='cuda:0', dtype=torch.float16)/tensor([[0.0459, 0.0186, 0.0140, 0.0938, 0.0108, 0.0773, 0.0819, 0.0068, 0.0069,
         0.0243, 0.0092, 0.0287, 0.0270, 0.0963, 0.0077, 0.0112]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0255],
        [0.0077],
        [0.0078],
        [0.0269],
        [0.0091],
        [0.0356],
        [0.0306],
        [0.0023],
        [0.0052],
        [0.0064],
        [0.0037],
        [0.0024],
        [0.0266],
        [0.0392],
        [0.0037],
        [0.0035]], device='cuda:0', dtype=torch.float16)/tensor([[0.0255, 0.0077, 0.0078, 0.0269, 0.0091, 0.0356, 0.0306, 0.0023, 0.0052,
         0.0064, 0.0037, 0.0024, 0.0266, 0.0392, 0.0037, 0.0035]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0166],
        [0.0084],
        [0.0010],
        [0.0203],
        [0.0043],
        [0.0248],
        [0.0222],
        [0.0016],
        [0.0017],
        [0.0014],
        [0.0034],
        [0.0048],
        [0.0386],
        [0.0584],
        [0.0040],
        [0.0020]], device='cuda:0', dtype=torch.float16)/tensor([[0.0166, 0.0084, 0.0010, 0.0203, 0.0043, 0.0248, 0.0222, 0.0016, 0.0017,
         0.0014, 0.0034, 0.0048, 0.0386, 0.0584, 0.0040, 0.0020]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/en/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0459, 0.0255, 0.0166],
        [0.0186, 0.0077, 0.0084],
        [0.0140, 0.0078, 0.0010],
        [0.0938, 0.0269, 0.0203],
        [0.0108, 0.0091, 0.0043],
        [0.0773, 0.0356, 0.0248],
        [0.0819, 0.0306, 0.0222],
        [0.0068, 0.0023, 0.0016],
        [0.0069, 0.0052, 0.0017],
        [0.0243, 0.0064, 0.0014],
        [0.0092, 0.0037, 0.0034],
        [0.0287, 0.0024, 0.0048],
        [0.0270, 0.0266, 0.0386],
        [0.0963, 0.0392, 0.0584],
        [0.0077, 0.0037, 0.0040],
        [0.0112, 0.0035, 0.0020]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0059],
        [0.0173],
        [0.0432],
        [0.0926],
        [0.0208],
        [0.0201]], device='cuda:0', dtype=torch.float16)/tensor([[0.0059, 0.0173, 0.0432, 0.0926, 0.0208, 0.0201]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0062],
        [0.0064],
        [0.0137],
        [0.0128],
        [0.0034],
        [0.0160]], device='cuda:0', dtype=torch.float16)/tensor([[0.0062, 0.0064, 0.0137, 0.0128, 0.0034, 0.0160]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0020],
        [0.0093],
        [0.0095],
        [0.0091],
        [0.0042],
        [0.0119]], device='cuda:0', dtype=torch.float16)/tensor([[0.0020, 0.0093, 0.0095, 0.0091, 0.0042, 0.0119]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0059, 0.0062, 0.0020],
        [0.0173, 0.0064, 0.0093],
        [0.0432, 0.0137, 0.0095],
        [0.0926, 0.0128, 0.0091],
        [0.0208, 0.0034, 0.0042],
        [0.0201, 0.0160, 0.0119]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the en NLI task with prompt type identical_modal, variation 4 and batchsize 16: 0:03:02.217028
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_4']
----------- 42 en huggyllama/llama-7b NLI identical_modal 5 200 16 --------------
Loading NLI dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 309.68it/s]
NLI dataset loaded
len of entail_examples , neutral_examples, contra_examples:  66 66 66
len dataset  198
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0095],
        [0.0327],
        [0.0159],
        [0.0245],
        [0.0024],
        [0.0035],
        [0.0246],
        [0.0599],
        [0.0056],
        [0.0070],
        [0.0088],
        [0.0103],
        [0.0211],
        [0.0235],
        [0.0125],
        [0.0059]], device='cuda:0', dtype=torch.float16)/tensor([[0.0095, 0.0327, 0.0159, 0.0245, 0.0024, 0.0035, 0.0246, 0.0599, 0.0056,
         0.0070, 0.0088, 0.0103, 0.0211, 0.0235, 0.0125, 0.0059]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0038],
        [0.0131],
        [0.0105],
        [0.0144],
        [0.0016],
        [0.0036],
        [0.0021],
        [0.0604],
        [0.0012],
        [0.0034],
        [0.0042],
        [0.0026],
        [0.0072],
        [0.0108],
        [0.0048],
        [0.0083]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0131, 0.0105, 0.0144, 0.0016, 0.0036, 0.0021, 0.0604, 0.0012,
         0.0034, 0.0042, 0.0026, 0.0072, 0.0108, 0.0048, 0.0083]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0029],
        [0.0054],
        [0.0088],
        [0.0070],
        [0.0006],
        [0.0011],
        [0.0017],
        [0.0266],
        [0.0016],
        [0.0030],
        [0.0012],
        [0.0014],
        [0.0052],
        [0.0109],
        [0.0055],
        [0.0013]], device='cuda:0', dtype=torch.float16)/tensor([[0.0029, 0.0054, 0.0088, 0.0070, 0.0006, 0.0011, 0.0017, 0.0266, 0.0016,
         0.0030, 0.0012, 0.0014, 0.0052, 0.0109, 0.0055, 0.0013]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0095, 0.0038, 0.0029],
        [0.0327, 0.0131, 0.0054],
        [0.0159, 0.0105, 0.0088],
        [0.0245, 0.0144, 0.0070],
        [0.0024, 0.0016, 0.0006],
        [0.0035, 0.0036, 0.0011],
        [0.0246, 0.0021, 0.0017],
        [0.0599, 0.0604, 0.0266],
        [0.0056, 0.0012, 0.0016],
        [0.0070, 0.0034, 0.0030],
        [0.0088, 0.0042, 0.0012],
        [0.0103, 0.0026, 0.0014],
        [0.0211, 0.0072, 0.0052],
        [0.0235, 0.0108, 0.0109],
        [0.0125, 0.0048, 0.0055],
        [0.0059, 0.0083, 0.0013]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0952],
        [0.1179],
        [0.0911],
        [0.0153],
        [0.0139],
        [0.0081],
        [0.0164],
        [0.0579],
        [0.0031],
        [0.0986],
        [0.0124],
        [0.0917],
        [0.0431],
        [0.0320],
        [0.0392],
        [0.0533]], device='cuda:0', dtype=torch.float16)/tensor([[0.0952, 0.1179, 0.0911, 0.0153, 0.0139, 0.0081, 0.0164, 0.0579, 0.0031,
         0.0986, 0.0124, 0.0917, 0.0431, 0.0320, 0.0392, 0.0533]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0486],
        [0.0280],
        [0.0230],
        [0.0070],
        [0.0089],
        [0.0059],
        [0.0117],
        [0.0234],
        [0.0020],
        [0.0289],
        [0.0044],
        [0.0256],
        [0.0146],
        [0.0104],
        [0.0167],
        [0.0205]], device='cuda:0', dtype=torch.float16)/tensor([[0.0486, 0.0280, 0.0230, 0.0070, 0.0089, 0.0059, 0.0117, 0.0234, 0.0020,
         0.0289, 0.0044, 0.0256, 0.0146, 0.0104, 0.0167, 0.0205]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0534],
        [0.0194],
        [0.0161],
        [0.0046],
        [0.0038],
        [0.0027],
        [0.0082],
        [0.0163],
        [0.0009],
        [0.0341],
        [0.0042],
        [0.0337],
        [0.0179],
        [0.0173],
        [0.0095],
        [0.0124]], device='cuda:0', dtype=torch.float16)/tensor([[0.0534, 0.0194, 0.0161, 0.0046, 0.0038, 0.0027, 0.0082, 0.0163, 0.0009,
         0.0341, 0.0042, 0.0337, 0.0179, 0.0173, 0.0095, 0.0124]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0952, 0.0486, 0.0534],
        [0.1179, 0.0280, 0.0194],
        [0.0911, 0.0230, 0.0161],
        [0.0153, 0.0070, 0.0046],
        [0.0139, 0.0089, 0.0038],
        [0.0081, 0.0059, 0.0027],
        [0.0164, 0.0117, 0.0082],
        [0.0579, 0.0234, 0.0163],
        [0.0031, 0.0020, 0.0009],
        [0.0986, 0.0289, 0.0341],
        [0.0124, 0.0044, 0.0042],
        [0.0917, 0.0256, 0.0337],
        [0.0431, 0.0146, 0.0179],
        [0.0320, 0.0104, 0.0173],
        [0.0392, 0.0167, 0.0095],
        [0.0533, 0.0205, 0.0124]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0251],
        [0.0105],
        [0.0168],
        [0.0957],
        [0.0304],
        [0.0188],
        [0.0172],
        [0.0146],
        [0.0235],
        [0.0075],
        [0.0196],
        [0.1223],
        [0.0127],
        [0.0252],
        [0.0402],
        [0.0272]], device='cuda:0', dtype=torch.float16)/tensor([[0.0251, 0.0105, 0.0168, 0.0957, 0.0304, 0.0188, 0.0172, 0.0146, 0.0235,
         0.0075, 0.0196, 0.1223, 0.0127, 0.0252, 0.0402, 0.0272]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0156],
        [0.0033],
        [0.0088],
        [0.0282],
        [0.0079],
        [0.0061],
        [0.0069],
        [0.0074],
        [0.0067],
        [0.0011],
        [0.0036],
        [0.0403],
        [0.0064],
        [0.0073],
        [0.0100],
        [0.0113]], device='cuda:0', dtype=torch.float16)/tensor([[0.0156, 0.0033, 0.0088, 0.0282, 0.0079, 0.0061, 0.0069, 0.0074, 0.0067,
         0.0011, 0.0036, 0.0403, 0.0064, 0.0073, 0.0100, 0.0113]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0038],
        [0.0025],
        [0.0048],
        [0.0209],
        [0.0072],
        [0.0032],
        [0.0071],
        [0.0040],
        [0.0064],
        [0.0020],
        [0.0038],
        [0.0292],
        [0.0010],
        [0.0085],
        [0.0081],
        [0.0051]], device='cuda:0', dtype=torch.float16)/tensor([[0.0038, 0.0025, 0.0048, 0.0209, 0.0072, 0.0032, 0.0071, 0.0040, 0.0064,
         0.0020, 0.0038, 0.0292, 0.0010, 0.0085, 0.0081, 0.0051]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0251, 0.0156, 0.0038],
        [0.0105, 0.0033, 0.0025],
        [0.0168, 0.0088, 0.0048],
        [0.0957, 0.0282, 0.0209],
        [0.0304, 0.0079, 0.0072],
        [0.0188, 0.0061, 0.0032],
        [0.0172, 0.0069, 0.0071],
        [0.0146, 0.0074, 0.0040],
        [0.0235, 0.0067, 0.0064],
        [0.0075, 0.0011, 0.0020],
        [0.0196, 0.0036, 0.0038],
        [0.1223, 0.0403, 0.0292],
        [0.0127, 0.0064, 0.0010],
        [0.0252, 0.0073, 0.0085],
        [0.0402, 0.0100, 0.0081],
        [0.0272, 0.0113, 0.0051]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0041],
        [0.0191],
        [0.0196],
        [0.0061],
        [0.0072],
        [0.0678],
        [0.0084],
        [0.0100],
        [0.0128],
        [0.0955],
        [0.0095],
        [0.0179],
        [0.0204],
        [0.0727],
        [0.0231],
        [0.0193]], device='cuda:0', dtype=torch.float16)/tensor([[0.0041, 0.0191, 0.0196, 0.0061, 0.0072, 0.0678, 0.0084, 0.0100, 0.0128,
         0.0955, 0.0095, 0.0179, 0.0204, 0.0727, 0.0231, 0.0193]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0016],
        [0.0018],
        [0.0154],
        [0.0014],
        [0.0028],
        [0.0121],
        [0.0025],
        [0.0040],
        [0.0040],
        [0.0317],
        [0.0079],
        [0.0079],
        [0.0050],
        [0.0175],
        [0.0057],
        [0.0035]], device='cuda:0', dtype=torch.float16)/tensor([[0.0016, 0.0018, 0.0154, 0.0014, 0.0028, 0.0121, 0.0025, 0.0040, 0.0040,
         0.0317, 0.0079, 0.0079, 0.0050, 0.0175, 0.0057, 0.0035]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0020],
        [0.0044],
        [0.0139],
        [0.0014],
        [0.0015],
        [0.0065],
        [0.0012],
        [0.0031],
        [0.0015],
        [0.0437],
        [0.0050],
        [0.0050],
        [0.0018],
        [0.0148],
        [0.0012],
        [0.0066]], device='cuda:0', dtype=torch.float16)/tensor([[0.0020, 0.0044, 0.0139, 0.0014, 0.0015, 0.0065, 0.0012, 0.0031, 0.0015,
         0.0437, 0.0050, 0.0050, 0.0018, 0.0148, 0.0012, 0.0066]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0041, 0.0016, 0.0020],
        [0.0191, 0.0018, 0.0044],
        [0.0196, 0.0154, 0.0139],
        [0.0061, 0.0014, 0.0014],
        [0.0072, 0.0028, 0.0015],
        [0.0678, 0.0121, 0.0065],
        [0.0084, 0.0025, 0.0012],
        [0.0100, 0.0040, 0.0031],
        [0.0128, 0.0040, 0.0015],
        [0.0955, 0.0317, 0.0437],
        [0.0095, 0.0079, 0.0050],
        [0.0179, 0.0079, 0.0050],
        [0.0204, 0.0050, 0.0018],
        [0.0727, 0.0175, 0.0148],
        [0.0231, 0.0057, 0.0012],
        [0.0193, 0.0035, 0.0066]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0061],
        [0.0093],
        [0.0102],
        [0.0054],
        [0.0647],
        [0.0238],
        [0.0536],
        [0.0329],
        [0.0261],
        [0.0195],
        [0.0790],
        [0.0098],
        [0.0069],
        [0.0265],
        [0.0165],
        [0.0161]], device='cuda:0', dtype=torch.float16)/tensor([[0.0061, 0.0093, 0.0102, 0.0054, 0.0647, 0.0238, 0.0536, 0.0329, 0.0261,
         0.0195, 0.0790, 0.0098, 0.0069, 0.0265, 0.0165, 0.0161]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0023],
        [0.0041],
        [0.0056],
        [0.0020],
        [0.0348],
        [0.0097],
        [0.0312],
        [0.0154],
        [0.0034],
        [0.0037],
        [0.0201],
        [0.0054],
        [0.0044],
        [0.0175],
        [0.0064],
        [0.0041]], device='cuda:0', dtype=torch.float16)/tensor([[0.0023, 0.0041, 0.0056, 0.0020, 0.0348, 0.0097, 0.0312, 0.0154, 0.0034,
         0.0037, 0.0201, 0.0054, 0.0044, 0.0175, 0.0064, 0.0041]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0006],
        [0.0046],
        [0.0029],
        [0.0020],
        [0.0250],
        [0.0068],
        [0.0291],
        [0.0153],
        [0.0024],
        [0.0043],
        [0.0174],
        [0.0029],
        [0.0056],
        [0.0127],
        [0.0047],
        [0.0042]], device='cuda:0', dtype=torch.float16)/tensor([[0.0006, 0.0046, 0.0029, 0.0020, 0.0250, 0.0068, 0.0291, 0.0153, 0.0024,
         0.0043, 0.0174, 0.0029, 0.0056, 0.0127, 0.0047, 0.0042]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0061, 0.0023, 0.0006],
        [0.0093, 0.0041, 0.0046],
        [0.0102, 0.0056, 0.0029],
        [0.0054, 0.0020, 0.0020],
        [0.0647, 0.0348, 0.0250],
        [0.0238, 0.0097, 0.0068],
        [0.0536, 0.0312, 0.0291],
        [0.0329, 0.0154, 0.0153],
        [0.0261, 0.0034, 0.0024],
        [0.0195, 0.0037, 0.0043],
        [0.0790, 0.0201, 0.0174],
        [0.0098, 0.0054, 0.0029],
        [0.0069, 0.0044, 0.0056],
        [0.0265, 0.0175, 0.0127],
        [0.0165, 0.0064, 0.0047],
        [0.0161, 0.0041, 0.0042]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0346],
        [0.0424],
        [0.0209],
        [0.0093],
        [0.0102],
        [0.0576],
        [0.0188],
        [0.0045],
        [0.0712],
        [0.0094],
        [0.0671],
        [0.0723],
        [0.0959],
        [0.0045],
        [0.1125],
        [0.0305]], device='cuda:0', dtype=torch.float16)/tensor([[0.0346, 0.0424, 0.0209, 0.0093, 0.0102, 0.0576, 0.0188, 0.0045, 0.0712,
         0.0094, 0.0671, 0.0723, 0.0959, 0.0045, 0.1125, 0.0305]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0056],
        [0.0039],
        [0.0158],
        [0.0017],
        [0.0075],
        [0.0133],
        [0.0079],
        [0.0019],
        [0.0149],
        [0.0027],
        [0.0184],
        [0.0179],
        [0.0410],
        [0.0013],
        [0.0197],
        [0.0080]], device='cuda:0', dtype=torch.float16)/tensor([[0.0056, 0.0039, 0.0158, 0.0017, 0.0075, 0.0133, 0.0079, 0.0019, 0.0149,
         0.0027, 0.0184, 0.0179, 0.0410, 0.0013, 0.0197, 0.0080]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0190],
        [0.0057],
        [0.0157],
        [0.0023],
        [0.0066],
        [0.0066],
        [0.0075],
        [0.0012],
        [0.0145],
        [0.0014],
        [0.0153],
        [0.0299],
        [0.0596],
        [0.0009],
        [0.0227],
        [0.0041]], device='cuda:0', dtype=torch.float16)/tensor([[0.0190, 0.0057, 0.0157, 0.0023, 0.0066, 0.0066, 0.0075, 0.0012, 0.0145,
         0.0014, 0.0153, 0.0299, 0.0596, 0.0009, 0.0227, 0.0041]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0346, 0.0056, 0.0190],
        [0.0424, 0.0039, 0.0057],
        [0.0209, 0.0158, 0.0157],
        [0.0093, 0.0017, 0.0023],
        [0.0102, 0.0075, 0.0066],
        [0.0576, 0.0133, 0.0066],
        [0.0188, 0.0079, 0.0075],
        [0.0045, 0.0019, 0.0012],
        [0.0712, 0.0149, 0.0145],
        [0.0094, 0.0027, 0.0014],
        [0.0671, 0.0184, 0.0153],
        [0.0723, 0.0179, 0.0299],
        [0.0959, 0.0410, 0.0596],
        [0.0045, 0.0013, 0.0009],
        [0.1125, 0.0197, 0.0227],
        [0.0305, 0.0080, 0.0041]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0275],
        [0.0374],
        [0.0348],
        [0.0126],
        [0.0233],
        [0.0221],
        [0.0076],
        [0.0744],
        [0.0218],
        [0.0041],
        [0.0524],
        [0.0152],
        [0.0073],
        [0.0221],
        [0.0224],
        [0.0938]], device='cuda:0', dtype=torch.float16)/tensor([[0.0275, 0.0374, 0.0348, 0.0126, 0.0233, 0.0221, 0.0076, 0.0744, 0.0218,
         0.0041, 0.0524, 0.0152, 0.0073, 0.0221, 0.0224, 0.0938]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0066],
        [0.0082],
        [0.0172],
        [0.0037],
        [0.0077],
        [0.0071],
        [0.0059],
        [0.0326],
        [0.0065],
        [0.0054],
        [0.0244],
        [0.0047],
        [0.0047],
        [0.0153],
        [0.0062],
        [0.0176]], device='cuda:0', dtype=torch.float16)/tensor([[0.0066, 0.0082, 0.0172, 0.0037, 0.0077, 0.0071, 0.0059, 0.0326, 0.0065,
         0.0054, 0.0244, 0.0047, 0.0047, 0.0153, 0.0062, 0.0176]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0072],
        [0.0044],
        [0.0110],
        [0.0017],
        [0.0048],
        [0.0084],
        [0.0042],
        [0.0236],
        [0.0041],
        [0.0016],
        [0.0117],
        [0.0038],
        [0.0026],
        [0.0031],
        [0.0055],
        [0.0128]], device='cuda:0', dtype=torch.float16)/tensor([[0.0072, 0.0044, 0.0110, 0.0017, 0.0048, 0.0084, 0.0042, 0.0236, 0.0041,
         0.0016, 0.0117, 0.0038, 0.0026, 0.0031, 0.0055, 0.0128]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0275, 0.0066, 0.0072],
        [0.0374, 0.0082, 0.0044],
        [0.0348, 0.0172, 0.0110],
        [0.0126, 0.0037, 0.0017],
        [0.0233, 0.0077, 0.0048],
        [0.0221, 0.0071, 0.0084],
        [0.0076, 0.0059, 0.0042],
        [0.0744, 0.0326, 0.0236],
        [0.0218, 0.0065, 0.0041],
        [0.0041, 0.0054, 0.0016],
        [0.0524, 0.0244, 0.0117],
        [0.0152, 0.0047, 0.0038],
        [0.0073, 0.0047, 0.0026],
        [0.0221, 0.0153, 0.0031],
        [0.0224, 0.0062, 0.0055],
        [0.0938, 0.0176, 0.0128]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0380],
        [0.0925],
        [0.0670],
        [0.0534],
        [0.0264],
        [0.0832],
        [0.0259],
        [0.1035],
        [0.0014],
        [0.1127],
        [0.0214],
        [0.0090],
        [0.0191],
        [0.0038],
        [0.0263],
        [0.0042]], device='cuda:0', dtype=torch.float16)/tensor([[0.0380, 0.0925, 0.0670, 0.0534, 0.0264, 0.0832, 0.0259, 0.1035, 0.0014,
         0.1127, 0.0214, 0.0090, 0.0191, 0.0038, 0.0263, 0.0042]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0245],
        [0.0296],
        [0.0272],
        [0.0110],
        [0.0053],
        [0.0215],
        [0.0169],
        [0.0445],
        [0.0009],
        [0.0543],
        [0.0129],
        [0.0102],
        [0.0083],
        [0.0023],
        [0.0094],
        [0.0028]], device='cuda:0', dtype=torch.float16)/tensor([[0.0245, 0.0296, 0.0272, 0.0110, 0.0053, 0.0215, 0.0169, 0.0445, 0.0009,
         0.0543, 0.0129, 0.0102, 0.0083, 0.0023, 0.0094, 0.0028]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0210],
        [0.0427],
        [0.0363],
        [0.0153],
        [0.0048],
        [0.0116],
        [0.0077],
        [0.0454],
        [0.0005],
        [0.0215],
        [0.0086],
        [0.0048],
        [0.0101],
        [0.0002],
        [0.0034],
        [0.0021]], device='cuda:0', dtype=torch.float16)/tensor([[0.0210, 0.0427, 0.0363, 0.0153, 0.0048, 0.0116, 0.0077, 0.0454, 0.0005,
         0.0215, 0.0086, 0.0048, 0.0101, 0.0002, 0.0034, 0.0021]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0380, 0.0245, 0.0210],
        [0.0925, 0.0296, 0.0427],
        [0.0670, 0.0272, 0.0363],
        [0.0534, 0.0110, 0.0153],
        [0.0264, 0.0053, 0.0048],
        [0.0832, 0.0215, 0.0116],
        [0.0259, 0.0169, 0.0077],
        [0.1035, 0.0445, 0.0454],
        [0.0014, 0.0009, 0.0005],
        [0.1127, 0.0543, 0.0215],
        [0.0214, 0.0129, 0.0086],
        [0.0090, 0.0102, 0.0048],
        [0.0191, 0.0083, 0.0101],
        [0.0038, 0.0023, 0.0002],
        [0.0263, 0.0094, 0.0034],
        [0.0042, 0.0028, 0.0021]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0791],
        [0.0155],
        [0.0307],
        [0.0245],
        [0.0072],
        [0.0111],
        [0.0149],
        [0.0408],
        [0.0105],
        [0.0277],
        [0.0071],
        [0.0285],
        [0.0076],
        [0.0309],
        [0.0160],
        [0.0047]], device='cuda:0', dtype=torch.float16)/tensor([[0.0791, 0.0155, 0.0307, 0.0245, 0.0072, 0.0111, 0.0149, 0.0408, 0.0105,
         0.0277, 0.0071, 0.0285, 0.0076, 0.0309, 0.0160, 0.0047]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0414],
        [0.0082],
        [0.0084],
        [0.0036],
        [0.0042],
        [0.0065],
        [0.0023],
        [0.0119],
        [0.0066],
        [0.0095],
        [0.0059],
        [0.0289],
        [0.0057],
        [0.0093],
        [0.0058],
        [0.0022]], device='cuda:0', dtype=torch.float16)/tensor([[0.0414, 0.0082, 0.0084, 0.0036, 0.0042, 0.0065, 0.0023, 0.0119, 0.0066,
         0.0095, 0.0059, 0.0289, 0.0057, 0.0093, 0.0058, 0.0022]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0330],
        [0.0091],
        [0.0094],
        [0.0109],
        [0.0025],
        [0.0049],
        [0.0038],
        [0.0190],
        [0.0047],
        [0.0069],
        [0.0018],
        [0.0336],
        [0.0021],
        [0.0053],
        [0.0020],
        [0.0010]], device='cuda:0', dtype=torch.float16)/tensor([[0.0330, 0.0091, 0.0094, 0.0109, 0.0025, 0.0049, 0.0038, 0.0190, 0.0047,
         0.0069, 0.0018, 0.0336, 0.0021, 0.0053, 0.0020, 0.0010]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0791, 0.0414, 0.0330],
        [0.0155, 0.0082, 0.0091],
        [0.0307, 0.0084, 0.0094],
        [0.0245, 0.0036, 0.0109],
        [0.0072, 0.0042, 0.0025],
        [0.0111, 0.0065, 0.0049],
        [0.0149, 0.0023, 0.0038],
        [0.0408, 0.0119, 0.0190],
        [0.0105, 0.0066, 0.0047],
        [0.0277, 0.0095, 0.0069],
        [0.0071, 0.0059, 0.0018],
        [0.0285, 0.0289, 0.0336],
        [0.0076, 0.0057, 0.0021],
        [0.0309, 0.0093, 0.0053],
        [0.0160, 0.0058, 0.0020],
        [0.0047, 0.0022, 0.0010]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0383],
        [0.0613],
        [0.0955],
        [0.0182],
        [0.0067],
        [0.1099],
        [0.0054],
        [0.0134],
        [0.0335],
        [0.0343],
        [0.0094],
        [0.0073],
        [0.0696],
        [0.0523],
        [0.0428],
        [0.1398]], device='cuda:0', dtype=torch.float16)/tensor([[0.0383, 0.0613, 0.0955, 0.0182, 0.0067, 0.1099, 0.0054, 0.0134, 0.0335,
         0.0343, 0.0094, 0.0073, 0.0696, 0.0523, 0.0428, 0.1398]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0104],
        [0.0191],
        [0.0377],
        [0.0043],
        [0.0021],
        [0.0338],
        [0.0013],
        [0.0073],
        [0.0048],
        [0.0109],
        [0.0027],
        [0.0032],
        [0.0167],
        [0.0165],
        [0.0098],
        [0.0231]], device='cuda:0', dtype=torch.float16)/tensor([[0.0104, 0.0191, 0.0377, 0.0043, 0.0021, 0.0338, 0.0013, 0.0073, 0.0048,
         0.0109, 0.0027, 0.0032, 0.0167, 0.0165, 0.0098, 0.0231]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0085],
        [0.0285],
        [0.0739],
        [0.0043],
        [0.0016],
        [0.0146],
        [0.0012],
        [0.0058],
        [0.0118],
        [0.0082],
        [0.0011],
        [0.0015],
        [0.0171],
        [0.0086],
        [0.0135],
        [0.0269]], device='cuda:0', dtype=torch.float16)/tensor([[0.0085, 0.0285, 0.0739, 0.0043, 0.0016, 0.0146, 0.0012, 0.0058, 0.0118,
         0.0082, 0.0011, 0.0015, 0.0171, 0.0086, 0.0135, 0.0269]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0383, 0.0104, 0.0085],
        [0.0613, 0.0191, 0.0285],
        [0.0955, 0.0377, 0.0739],
        [0.0182, 0.0043, 0.0043],
        [0.0067, 0.0021, 0.0016],
        [0.1099, 0.0338, 0.0146],
        [0.0054, 0.0013, 0.0012],
        [0.0134, 0.0073, 0.0058],
        [0.0335, 0.0048, 0.0118],
        [0.0343, 0.0109, 0.0082],
        [0.0094, 0.0027, 0.0011],
        [0.0073, 0.0032, 0.0015],
        [0.0696, 0.0167, 0.0171],
        [0.0523, 0.0165, 0.0086],
        [0.0428, 0.0098, 0.0135],
        [0.1398, 0.0231, 0.0269]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0070],
        [0.0271],
        [0.0923],
        [0.0527],
        [0.1127],
        [0.1135],
        [0.0149],
        [0.0072],
        [0.0269],
        [0.0150],
        [0.0184],
        [0.0309],
        [0.0314],
        [0.0069],
        [0.0155],
        [0.0040]], device='cuda:0', dtype=torch.float16)/tensor([[0.0070, 0.0271, 0.0923, 0.0527, 0.1127, 0.1135, 0.0149, 0.0072, 0.0269,
         0.0150, 0.0184, 0.0309, 0.0314, 0.0069, 0.0155, 0.0040]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0063],
        [0.0173],
        [0.0188],
        [0.0265],
        [0.0219],
        [0.0192],
        [0.0129],
        [0.0028],
        [0.0139],
        [0.0054],
        [0.0053],
        [0.0086],
        [0.0164],
        [0.0048],
        [0.0079],
        [0.0026]], device='cuda:0', dtype=torch.float16)/tensor([[0.0063, 0.0173, 0.0188, 0.0265, 0.0219, 0.0192, 0.0129, 0.0028, 0.0139,
         0.0054, 0.0053, 0.0086, 0.0164, 0.0048, 0.0079, 0.0026]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0023],
        [0.0162],
        [0.0196],
        [0.0138],
        [0.0233],
        [0.0379],
        [0.0057],
        [0.0026],
        [0.0095],
        [0.0037],
        [0.0049],
        [0.0102],
        [0.0166],
        [0.0050],
        [0.0062],
        [0.0016]], device='cuda:0', dtype=torch.float16)/tensor([[0.0023, 0.0162, 0.0196, 0.0138, 0.0233, 0.0379, 0.0057, 0.0026, 0.0095,
         0.0037, 0.0049, 0.0102, 0.0166, 0.0050, 0.0062, 0.0016]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0070, 0.0063, 0.0023],
        [0.0271, 0.0173, 0.0162],
        [0.0923, 0.0188, 0.0196],
        [0.0527, 0.0265, 0.0138],
        [0.1127, 0.0219, 0.0233],
        [0.1135, 0.0192, 0.0379],
        [0.0149, 0.0129, 0.0057],
        [0.0072, 0.0028, 0.0026],
        [0.0269, 0.0139, 0.0095],
        [0.0150, 0.0054, 0.0037],
        [0.0184, 0.0053, 0.0049],
        [0.0309, 0.0086, 0.0102],
        [0.0314, 0.0164, 0.0166],
        [0.0069, 0.0048, 0.0050],
        [0.0155, 0.0079, 0.0062],
        [0.0040, 0.0026, 0.0016]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([16, 1])
id: [4874] -> tensor([[0.0776],
        [0.0179],
        [0.0077],
        [0.0579],
        [0.0114],
        [0.0327],
        [0.0328],
        [0.0141],
        [0.0608],
        [0.0109],
        [0.0114],
        [0.0081],
        [0.0057],
        [0.0163],
        [0.0814],
        [0.0114]], device='cuda:0', dtype=torch.float16)/tensor([[0.0776, 0.0179, 0.0077, 0.0579, 0.0114, 0.0327, 0.0328, 0.0141, 0.0608,
         0.0109, 0.0114, 0.0081, 0.0057, 0.0163, 0.0814, 0.0114]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([16, 1])
id: [694] -> tensor([[0.0184],
        [0.0075],
        [0.0050],
        [0.0174],
        [0.0056],
        [0.0035],
        [0.0133],
        [0.0047],
        [0.0396],
        [0.0035],
        [0.0034],
        [0.0018],
        [0.0041],
        [0.0087],
        [0.0376],
        [0.0042]], device='cuda:0', dtype=torch.float16)/tensor([[0.0184, 0.0075, 0.0050, 0.0174, 0.0056, 0.0035, 0.0133, 0.0047, 0.0396,
         0.0035, 0.0034, 0.0018, 0.0041, 0.0087, 0.0376, 0.0042]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([16, 1])
id: [5505] -> tensor([[0.0120],
        [0.0058],
        [0.0017],
        [0.0029],
        [0.0022],
        [0.0094],
        [0.0036],
        [0.0053],
        [0.0349],
        [0.0022],
        [0.0036],
        [0.0011],
        [0.0027],
        [0.0072],
        [0.0275],
        [0.0064]], device='cuda:0', dtype=torch.float16)/tensor([[0.0120, 0.0058, 0.0017, 0.0029, 0.0022, 0.0094, 0.0036, 0.0053, 0.0349,
         0.0022, 0.0036, 0.0011, 0.0027, 0.0072, 0.0275, 0.0064]],
       device='cuda:0', dtype=torch.float16), torch.Size([1, 16])
answers_probs: tensor([[0.0776, 0.0184, 0.0120],
        [0.0179, 0.0075, 0.0058],
        [0.0077, 0.0050, 0.0017],
        [0.0579, 0.0174, 0.0029],
        [0.0114, 0.0056, 0.0022],
        [0.0327, 0.0035, 0.0094],
        [0.0328, 0.0133, 0.0036],
        [0.0141, 0.0047, 0.0053],
        [0.0608, 0.0396, 0.0349],
        [0.0109, 0.0035, 0.0022],
        [0.0114, 0.0034, 0.0036],
        [0.0081, 0.0018, 0.0011],
        [0.0057, 0.0041, 0.0027],
        [0.0163, 0.0087, 0.0072],
        [0.0814, 0.0376, 0.0275],
        [0.0114, 0.0042, 0.0064]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [1, 4874], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 4874] -> [4874]
probs_ shape torch.Size([6, 1])
id: [4874] -> tensor([[0.0099],
        [0.0500],
        [0.0138],
        [0.1733],
        [0.0995],
        [0.0352]], device='cuda:0', dtype=torch.float16)/tensor([[0.0099, 0.0500, 0.0138, 0.1733, 0.0995, 0.0352]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 694], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 694] -> [694]
probs_ shape torch.Size([6, 1])
id: [694] -> tensor([[0.0028],
        [0.0171],
        [0.0067],
        [0.0187],
        [0.0233],
        [0.0088]], device='cuda:0', dtype=torch.float16)/tensor([[0.0028, 0.0171, 0.0067, 0.0187, 0.0233, 0.0088]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answer  {'input_ids': [1, 5505], 'token_type_ids': [0, 0], 'attention_mask': [1, 1]}
id: [1, 5505] -> [5505]
probs_ shape torch.Size([6, 1])
id: [5505] -> tensor([[0.0034],
        [0.0127],
        [0.0039],
        [0.0415],
        [0.0258],
        [0.0089]], device='cuda:0', dtype=torch.float16)/tensor([[0.0034, 0.0127, 0.0039, 0.0415, 0.0258, 0.0089]], device='cuda:0',
       dtype=torch.float16), torch.Size([1, 6])
answers_probs: tensor([[0.0099, 0.0028, 0.0034],
        [0.0500, 0.0171, 0.0127],
        [0.0138, 0.0067, 0.0039],
        [0.1733, 0.0187, 0.0415],
        [0.0995, 0.0233, 0.0258],
        [0.0352, 0.0088, 0.0089]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the en NLI task with prompt type identical_modal, variation 5 and batchsize 16: 0:03:02.390654
path ['42', 'en', 'llama', 'NLI', 'identical_modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v8.pickle' as a pickle file.
****End Time: 2023-05-23 01:40:06.789065 Duraction: 4:38:23.536657
