Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
No file with version 13 exists.
****Start Time: 2023-05-23_13-37-15
Loading model google/flan-t5-base
Model google/flan-t5-base loaded
Available device is cuda
Model device: cuda:0
----------- 42 de google/flan-t5-base SA active 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:01,  1.72it/s]100%|██████████| 3/3 [00:00<00:00,  4.51it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0022],
        [0.0002],
        [0.0006],
        [0.0010],
        [0.0007],
        [0.0004],
        [0.0001],
        [0.0019],
        [0.0010],
        [0.0006],
        [0.0003],
        [0.0010],
        [0.0001],
        [0.0002],
        [0.0008],
        [0.0009]], device='cuda:0')/tensor([[0.0022, 0.0002, 0.0006, 0.0010, 0.0007, 0.0004, 0.0001, 0.0019, 0.0010,
         0.0006, 0.0003, 0.0010, 0.0001, 0.0002, 0.0008, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.6543e-02],
        [6.5909e-05],
        [7.7903e-03],
        [3.7419e-02],
        [2.1442e-02],
        [6.6560e-04],
        [3.8587e-02],
        [6.6975e-03],
        [4.0686e-02],
        [6.7870e-02],
        [2.2363e-02],
        [4.6470e-02],
        [6.6700e-05],
        [5.2933e-05],
        [1.6254e-02],
        [1.3360e-03]], device='cuda:0')/tensor([[4.6543e-02, 6.5909e-05, 7.7903e-03, 3.7419e-02, 2.1442e-02, 6.6560e-04,
         3.8587e-02, 6.6975e-03, 4.0686e-02, 6.7870e-02, 2.2363e-02, 4.6470e-02,
         6.6700e-05, 5.2933e-05, 1.6254e-02, 1.3360e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2221e-03, 4.6543e-02],
        [2.2016e-04, 6.5909e-05],
        [5.6377e-04, 7.7903e-03],
        [1.0302e-03, 3.7419e-02],
        [7.4038e-04, 2.1442e-02],
        [4.1952e-04, 6.6560e-04],
        [1.1652e-04, 3.8587e-02],
        [1.8886e-03, 6.6975e-03],
        [9.5560e-04, 4.0686e-02],
        [5.6427e-04, 6.7870e-02],
        [2.7414e-04, 2.2363e-02],
        [9.6092e-04, 4.6470e-02],
        [1.2277e-04, 6.6700e-05],
        [1.6630e-04, 5.2933e-05],
        [7.7184e-04, 1.6254e-02],
        [8.6796e-04, 1.3360e-03]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0399e-03],
        [5.7911e-04],
        [3.7028e-04],
        [6.2475e-05],
        [1.0801e-03],
        [8.2510e-04],
        [1.2016e-03],
        [5.9200e-04],
        [6.6757e-04],
        [9.6813e-04],
        [1.7082e-04],
        [9.6294e-04],
        [1.4175e-03],
        [2.1135e-03],
        [2.8854e-03],
        [7.7774e-04]], device='cuda:0')/tensor([[1.0399e-03, 5.7911e-04, 3.7028e-04, 6.2475e-05, 1.0801e-03, 8.2510e-04,
         1.2016e-03, 5.9200e-04, 6.6757e-04, 9.6813e-04, 1.7082e-04, 9.6294e-04,
         1.4175e-03, 2.1135e-03, 2.8854e-03, 7.7774e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.9173e-03],
        [7.6784e-03],
        [5.8393e-03],
        [2.0550e-03],
        [1.2443e-02],
        [8.9037e-03],
        [5.4896e-03],
        [1.0043e-02],
        [3.0451e-02],
        [2.5405e-02],
        [4.8397e-05],
        [1.0863e-03],
        [3.3759e-02],
        [5.3649e-03],
        [1.3136e-02],
        [5.3641e-04]], device='cuda:0')/tensor([[3.9173e-03, 7.6784e-03, 5.8393e-03, 2.0550e-03, 1.2443e-02, 8.9037e-03,
         5.4896e-03, 1.0043e-02, 3.0451e-02, 2.5405e-02, 4.8397e-05, 1.0863e-03,
         3.3759e-02, 5.3649e-03, 1.3136e-02, 5.3641e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0399e-03, 3.9173e-03],
        [5.7911e-04, 7.6784e-03],
        [3.7028e-04, 5.8393e-03],
        [6.2475e-05, 2.0550e-03],
        [1.0801e-03, 1.2443e-02],
        [8.2510e-04, 8.9037e-03],
        [1.2016e-03, 5.4896e-03],
        [5.9200e-04, 1.0043e-02],
        [6.6757e-04, 3.0451e-02],
        [9.6813e-04, 2.5405e-02],
        [1.7082e-04, 4.8397e-05],
        [9.6294e-04, 1.0863e-03],
        [1.4175e-03, 3.3759e-02],
        [2.1135e-03, 5.3649e-03],
        [2.8854e-03, 1.3136e-02],
        [7.7774e-04, 5.3641e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0005],
        [0.0005],
        [0.0022],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0017],
        [0.0005],
        [0.0008],
        [0.0007],
        [0.0016],
        [0.0003],
        [0.0010],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0005, 0.0022, 0.0004, 0.0005, 0.0004, 0.0017, 0.0005,
         0.0008, 0.0007, 0.0016, 0.0003, 0.0010, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0257],
        [0.0004],
        [0.0266],
        [0.0464],
        [0.0030],
        [0.0089],
        [0.0050],
        [0.0143],
        [0.0024],
        [0.0496],
        [0.0227],
        [0.0040],
        [0.0118],
        [0.0059],
        [0.0186],
        [0.0038]], device='cuda:0')/tensor([[0.0257, 0.0004, 0.0266, 0.0464, 0.0030, 0.0089, 0.0050, 0.0143, 0.0024,
         0.0496, 0.0227, 0.0040, 0.0118, 0.0059, 0.0186, 0.0038]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0257],
        [0.0005, 0.0004],
        [0.0005, 0.0266],
        [0.0022, 0.0464],
        [0.0004, 0.0030],
        [0.0005, 0.0089],
        [0.0004, 0.0050],
        [0.0017, 0.0143],
        [0.0005, 0.0024],
        [0.0008, 0.0496],
        [0.0007, 0.0227],
        [0.0016, 0.0040],
        [0.0003, 0.0118],
        [0.0010, 0.0059],
        [0.0007, 0.0186],
        [0.0006, 0.0038]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.0288e-04],
        [5.7634e-04],
        [3.5315e-03],
        [5.2097e-05],
        [1.9993e-04],
        [4.6557e-04],
        [2.1568e-04],
        [4.7865e-04],
        [8.1004e-04],
        [3.8077e-04],
        [5.9589e-04],
        [2.3048e-03],
        [5.7117e-04],
        [2.9344e-04],
        [1.1213e-03],
        [1.0857e-03]], device='cuda:0')/tensor([[7.0288e-04, 5.7634e-04, 3.5315e-03, 5.2097e-05, 1.9993e-04, 4.6557e-04,
         2.1568e-04, 4.7865e-04, 8.1004e-04, 3.8077e-04, 5.9589e-04, 2.3048e-03,
         5.7117e-04, 2.9344e-04, 1.1213e-03, 1.0857e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0032],
        [0.0074],
        [0.0262],
        [0.0424],
        [0.0002],
        [0.0009],
        [0.0327],
        [0.0342],
        [0.0176],
        [0.0328],
        [0.0331],
        [0.0183],
        [0.0031],
        [0.0629],
        [0.0233],
        [0.1186]], device='cuda:0')/tensor([[0.0032, 0.0074, 0.0262, 0.0424, 0.0002, 0.0009, 0.0327, 0.0342, 0.0176,
         0.0328, 0.0331, 0.0183, 0.0031, 0.0629, 0.0233, 0.1186]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.0288e-04, 3.1880e-03],
        [5.7634e-04, 7.4119e-03],
        [3.5315e-03, 2.6204e-02],
        [5.2097e-05, 4.2427e-02],
        [1.9993e-04, 1.8447e-04],
        [4.6557e-04, 9.3250e-04],
        [2.1568e-04, 3.2712e-02],
        [4.7865e-04, 3.4209e-02],
        [8.1004e-04, 1.7613e-02],
        [3.8077e-04, 3.2791e-02],
        [5.9589e-04, 3.3089e-02],
        [2.3048e-03, 1.8316e-02],
        [5.7117e-04, 3.0527e-03],
        [2.9344e-04, 6.2851e-02],
        [1.1213e-03, 2.3343e-02],
        [1.0857e-03, 1.1858e-01]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.8869e-04],
        [4.6919e-04],
        [6.5495e-04],
        [8.8847e-05],
        [6.2308e-04],
        [5.3734e-04],
        [3.6605e-04],
        [2.9089e-03],
        [4.2337e-04],
        [8.9989e-04],
        [7.0045e-04],
        [1.1234e-03],
        [6.9190e-04],
        [4.6994e-05],
        [4.0039e-04],
        [2.0966e-03]], device='cuda:0')/tensor([[5.8869e-04, 4.6919e-04, 6.5495e-04, 8.8847e-05, 6.2308e-04, 5.3734e-04,
         3.6605e-04, 2.9089e-03, 4.2337e-04, 8.9989e-04, 7.0045e-04, 1.1234e-03,
         6.9190e-04, 4.6994e-05, 4.0039e-04, 2.0966e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4255e-03],
        [2.2624e-03],
        [1.4875e-03],
        [8.3986e-05],
        [3.9243e-02],
        [1.6873e-03],
        [1.5540e-04],
        [2.9094e-02],
        [3.9227e-02],
        [2.0502e-02],
        [4.5868e-04],
        [1.1359e-02],
        [3.1695e-02],
        [2.2940e-02],
        [4.1652e-02],
        [1.2763e-02]], device='cuda:0')/tensor([[1.4255e-03, 2.2624e-03, 1.4875e-03, 8.3986e-05, 3.9243e-02, 1.6873e-03,
         1.5540e-04, 2.9094e-02, 3.9227e-02, 2.0502e-02, 4.5868e-04, 1.1359e-02,
         3.1695e-02, 2.2940e-02, 4.1652e-02, 1.2763e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8869e-04, 1.4255e-03],
        [4.6919e-04, 2.2624e-03],
        [6.5495e-04, 1.4875e-03],
        [8.8847e-05, 8.3986e-05],
        [6.2308e-04, 3.9243e-02],
        [5.3734e-04, 1.6873e-03],
        [3.6605e-04, 1.5540e-04],
        [2.9089e-03, 2.9094e-02],
        [4.2337e-04, 3.9227e-02],
        [8.9989e-04, 2.0502e-02],
        [7.0045e-04, 4.5868e-04],
        [1.1234e-03, 1.1359e-02],
        [6.9190e-04, 3.1695e-02],
        [4.6994e-05, 2.2940e-02],
        [4.0039e-04, 4.1652e-02],
        [2.0966e-03, 1.2763e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.5290e-04],
        [1.9170e-04],
        [1.0261e-03],
        [7.3248e-04],
        [2.5276e-04],
        [1.7455e-04],
        [2.5828e-05],
        [5.9133e-04],
        [8.0225e-04],
        [6.7149e-04],
        [3.2884e-04],
        [5.3966e-04],
        [7.0708e-04],
        [4.5854e-04],
        [7.4844e-04],
        [3.7675e-04]], device='cuda:0')/tensor([[3.5290e-04, 1.9170e-04, 1.0261e-03, 7.3248e-04, 2.5276e-04, 1.7455e-04,
         2.5828e-05, 5.9133e-04, 8.0225e-04, 6.7149e-04, 3.2884e-04, 5.3966e-04,
         7.0708e-04, 4.5854e-04, 7.4844e-04, 3.7675e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0003],
        [0.0764],
        [0.0039],
        [0.0004],
        [0.0002],
        [0.0012],
        [0.0366],
        [0.1067],
        [0.0006],
        [0.0761],
        [0.0349],
        [0.0029],
        [0.0104],
        [0.0008],
        [0.0081]], device='cuda:0')/tensor([[0.0020, 0.0003, 0.0764, 0.0039, 0.0004, 0.0002, 0.0012, 0.0366, 0.1067,
         0.0006, 0.0761, 0.0349, 0.0029, 0.0104, 0.0008, 0.0081]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.5290e-04, 2.0429e-03],
        [1.9170e-04, 2.7269e-04],
        [1.0261e-03, 7.6390e-02],
        [7.3248e-04, 3.8925e-03],
        [2.5276e-04, 3.7140e-04],
        [1.7455e-04, 1.9413e-04],
        [2.5828e-05, 1.2463e-03],
        [5.9133e-04, 3.6635e-02],
        [8.0225e-04, 1.0669e-01],
        [6.7149e-04, 6.3598e-04],
        [3.2884e-04, 7.6137e-02],
        [5.3966e-04, 3.4892e-02],
        [7.0708e-04, 2.9295e-03],
        [4.5854e-04, 1.0402e-02],
        [7.4844e-04, 8.4738e-04],
        [3.7675e-04, 8.0672e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0006],
        [0.0008],
        [0.0014],
        [0.0018],
        [0.0002],
        [0.0023],
        [0.0003],
        [0.0004],
        [0.0005],
        [0.0024],
        [0.0001],
        [0.0011],
        [0.0005],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0009, 0.0006, 0.0008, 0.0014, 0.0018, 0.0002, 0.0023, 0.0003, 0.0004,
         0.0005, 0.0024, 0.0001, 0.0011, 0.0005, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0623],
        [0.0235],
        [0.0413],
        [0.0161],
        [0.0452],
        [0.0028],
        [0.0058],
        [0.0395],
        [0.0349],
        [0.0142],
        [0.0507],
        [0.0025],
        [0.0827],
        [0.0504],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0623, 0.0235, 0.0413, 0.0161, 0.0452, 0.0028, 0.0058, 0.0395, 0.0349,
         0.0142, 0.0507, 0.0025, 0.0827, 0.0504, 0.0002, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0623],
        [0.0006, 0.0235],
        [0.0008, 0.0413],
        [0.0014, 0.0161],
        [0.0018, 0.0452],
        [0.0002, 0.0028],
        [0.0023, 0.0058],
        [0.0003, 0.0395],
        [0.0004, 0.0349],
        [0.0005, 0.0142],
        [0.0024, 0.0507],
        [0.0001, 0.0025],
        [0.0011, 0.0827],
        [0.0005, 0.0504],
        [0.0002, 0.0002],
        [0.0003, 0.0004]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.6441e-04],
        [5.1839e-04],
        [7.0339e-04],
        [2.1064e-03],
        [5.8745e-04],
        [5.2645e-04],
        [3.2758e-04],
        [5.6919e-04],
        [7.4577e-05],
        [7.2614e-04],
        [1.3796e-03],
        [1.0908e-03],
        [1.0530e-03],
        [2.1843e-04],
        [7.5182e-05],
        [3.1678e-04]], device='cuda:0')/tensor([[4.6441e-04, 5.1839e-04, 7.0339e-04, 2.1064e-03, 5.8745e-04, 5.2645e-04,
         3.2758e-04, 5.6919e-04, 7.4577e-05, 7.2614e-04, 1.3796e-03, 1.0908e-03,
         1.0530e-03, 2.1843e-04, 7.5182e-05, 3.1678e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0441],
        [0.0003],
        [0.0222],
        [0.0360],
        [0.0178],
        [0.0025],
        [0.0004],
        [0.0003],
        [0.0730],
        [0.0019],
        [0.1089],
        [0.0060],
        [0.0077],
        [0.0035],
        [0.0384],
        [0.0407]], device='cuda:0')/tensor([[0.0441, 0.0003, 0.0222, 0.0360, 0.0178, 0.0025, 0.0004, 0.0003, 0.0730,
         0.0019, 0.1089, 0.0060, 0.0077, 0.0035, 0.0384, 0.0407]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.6441e-04, 4.4112e-02],
        [5.1839e-04, 3.4418e-04],
        [7.0339e-04, 2.2181e-02],
        [2.1064e-03, 3.6009e-02],
        [5.8745e-04, 1.7775e-02],
        [5.2645e-04, 2.5436e-03],
        [3.2758e-04, 4.1293e-04],
        [5.6919e-04, 3.4574e-04],
        [7.4577e-05, 7.2974e-02],
        [7.2614e-04, 1.8726e-03],
        [1.3796e-03, 1.0887e-01],
        [1.0908e-03, 6.0199e-03],
        [1.0530e-03, 7.6776e-03],
        [2.1843e-04, 3.4795e-03],
        [7.5182e-05, 3.8395e-02],
        [3.1678e-04, 4.0706e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0009],
        [0.0010],
        [0.0010],
        [0.0001],
        [0.0018],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0017],
        [0.0010],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0019]], device='cuda:0')/tensor([[0.0006, 0.0009, 0.0010, 0.0010, 0.0001, 0.0018, 0.0004, 0.0004, 0.0006,
         0.0010, 0.0017, 0.0010, 0.0006, 0.0005, 0.0006, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0270],
        [0.0133],
        [0.0330],
        [0.0755],
        [0.1371],
        [0.0149],
        [0.0114],
        [0.0157],
        [0.0330],
        [0.0148],
        [0.0556],
        [0.0145],
        [0.0096],
        [0.0378],
        [0.0349],
        [0.0095]], device='cuda:0')/tensor([[0.0270, 0.0133, 0.0330, 0.0755, 0.1371, 0.0149, 0.0114, 0.0157, 0.0330,
         0.0148, 0.0556, 0.0145, 0.0096, 0.0378, 0.0349, 0.0095]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.4187e-04, 2.6969e-02],
        [8.7444e-04, 1.3342e-02],
        [9.8878e-04, 3.3036e-02],
        [1.0024e-03, 7.5546e-02],
        [1.0489e-04, 1.3714e-01],
        [1.7628e-03, 1.4924e-02],
        [3.8306e-04, 1.1394e-02],
        [4.1497e-04, 1.5654e-02],
        [6.2411e-04, 3.2956e-02],
        [1.0126e-03, 1.4792e-02],
        [1.7276e-03, 5.5627e-02],
        [9.5045e-04, 1.4458e-02],
        [5.5187e-04, 9.6444e-03],
        [4.5206e-04, 3.7771e-02],
        [5.6841e-04, 3.4851e-02],
        [1.8993e-03, 9.4930e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0011],
        [0.0003],
        [0.0013],
        [0.0002],
        [0.0009],
        [0.0006],
        [0.0005],
        [0.0009],
        [0.0002],
        [0.0011],
        [0.0004],
        [0.0005],
        [0.0013],
        [0.0005],
        [0.0003]], device='cuda:0')/tensor([[0.0010, 0.0011, 0.0003, 0.0013, 0.0002, 0.0009, 0.0006, 0.0005, 0.0009,
         0.0002, 0.0011, 0.0004, 0.0005, 0.0013, 0.0005, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0575],
        [0.0017],
        [0.0303],
        [0.0970],
        [0.0199],
        [0.0712],
        [0.0005],
        [0.0008],
        [0.0006],
        [0.0187],
        [0.0244],
        [0.0091],
        [0.0007],
        [0.0456],
        [0.0142],
        [0.0022]], device='cuda:0')/tensor([[0.0575, 0.0017, 0.0303, 0.0970, 0.0199, 0.0712, 0.0005, 0.0008, 0.0006,
         0.0187, 0.0244, 0.0091, 0.0007, 0.0456, 0.0142, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0575],
        [0.0011, 0.0017],
        [0.0003, 0.0303],
        [0.0013, 0.0970],
        [0.0002, 0.0199],
        [0.0009, 0.0712],
        [0.0006, 0.0005],
        [0.0005, 0.0008],
        [0.0009, 0.0006],
        [0.0002, 0.0187],
        [0.0011, 0.0244],
        [0.0004, 0.0091],
        [0.0005, 0.0007],
        [0.0013, 0.0456],
        [0.0005, 0.0142],
        [0.0003, 0.0022]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0010],
        [0.0004],
        [0.0007],
        [0.0007],
        [0.0005],
        [0.0038],
        [0.0003],
        [0.0014],
        [0.0001],
        [0.0005],
        [0.0010],
        [0.0010],
        [0.0016],
        [0.0002],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0004, 0.0007, 0.0007, 0.0005, 0.0038, 0.0003, 0.0014,
         0.0001, 0.0005, 0.0010, 0.0010, 0.0016, 0.0002, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0418e-02],
        [1.7840e-03],
        [2.0300e-02],
        [4.2320e-02],
        [3.0464e-02],
        [5.0334e-04],
        [6.5480e-03],
        [4.4164e-03],
        [3.5176e-03],
        [6.8366e-05],
        [9.7268e-03],
        [1.0690e-03],
        [1.7879e-02],
        [3.6581e-03],
        [1.0979e-02],
        [1.6264e-03]], device='cuda:0')/tensor([[1.0418e-02, 1.7840e-03, 2.0300e-02, 4.2320e-02, 3.0464e-02, 5.0334e-04,
         6.5480e-03, 4.4164e-03, 3.5176e-03, 6.8366e-05, 9.7268e-03, 1.0690e-03,
         1.7879e-02, 3.6581e-03, 1.0979e-02, 1.6264e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9221e-04, 1.0418e-02],
        [1.0433e-03, 1.7840e-03],
        [4.4238e-04, 2.0300e-02],
        [6.7569e-04, 4.2320e-02],
        [7.0599e-04, 3.0464e-02],
        [4.6255e-04, 5.0334e-04],
        [3.7520e-03, 6.5480e-03],
        [3.3678e-04, 4.4164e-03],
        [1.3809e-03, 3.5176e-03],
        [1.3103e-04, 6.8366e-05],
        [4.9706e-04, 9.7268e-03],
        [9.6138e-04, 1.0690e-03],
        [1.0454e-03, 1.7879e-02],
        [1.5723e-03, 3.6581e-03],
        [2.3117e-04, 1.0979e-02],
        [6.9891e-04, 1.6264e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0008],
        [0.0006],
        [0.0004],
        [0.0006],
        [0.0012],
        [0.0015],
        [0.0003],
        [0.0007],
        [0.0010],
        [0.0008],
        [0.0025],
        [0.0018],
        [0.0009],
        [0.0004]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0008, 0.0006, 0.0004, 0.0006, 0.0012, 0.0015, 0.0003,
         0.0007, 0.0010, 0.0008, 0.0025, 0.0018, 0.0009, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0208],
        [0.0027],
        [0.0486],
        [0.0349],
        [0.0040],
        [0.0212],
        [0.0341],
        [0.0101],
        [0.0007],
        [0.0025],
        [0.0069],
        [0.0607],
        [0.0037],
        [0.0557],
        [0.0577],
        [0.0463]], device='cuda:0')/tensor([[0.0208, 0.0027, 0.0486, 0.0349, 0.0040, 0.0212, 0.0341, 0.0101, 0.0007,
         0.0025, 0.0069, 0.0607, 0.0037, 0.0557, 0.0577, 0.0463]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0208],
        [0.0006, 0.0027],
        [0.0008, 0.0486],
        [0.0006, 0.0349],
        [0.0004, 0.0040],
        [0.0006, 0.0212],
        [0.0012, 0.0341],
        [0.0015, 0.0101],
        [0.0003, 0.0007],
        [0.0007, 0.0025],
        [0.0010, 0.0069],
        [0.0008, 0.0607],
        [0.0025, 0.0037],
        [0.0018, 0.0557],
        [0.0009, 0.0577],
        [0.0004, 0.0463]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[3.0042e-04],
        [7.7988e-04],
        [1.0182e-03],
        [1.1399e-03],
        [6.6949e-05],
        [7.0852e-04],
        [2.8920e-03],
        [6.3024e-04]], device='cuda:0')/tensor([[3.0042e-04, 7.7988e-04, 1.0182e-03, 1.1399e-03, 6.6949e-05, 7.0852e-04,
         2.8920e-03, 6.3024e-04]], device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0020],
        [0.0007],
        [0.0038],
        [0.0018],
        [0.0003],
        [0.0316],
        [0.0074],
        [0.0024]], device='cuda:0')/tensor([[0.0020, 0.0007, 0.0038, 0.0018, 0.0003, 0.0316, 0.0074, 0.0024]],
       device='cuda:0'), torch.Size([1, 8])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[3.0042e-04, 2.0227e-03],
        [7.7988e-04, 6.7486e-04],
        [1.0182e-03, 3.8354e-03],
        [1.1399e-03, 1.8206e-03],
        [6.6949e-05, 3.1027e-04],
        [7.0852e-04, 3.1553e-02],
        [2.8920e-03, 7.4430e-03],
        [6.3024e-04, 2.4416e-03]], device='cuda:0')
acc:  0.585
Time taken to execute the de SA task with prompt type active, variation 0 and batchsize 16: 0:03:23.892546
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA active 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 325.66it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5908e-04],
        [5.7516e-04],
        [1.0380e-03],
        [9.2173e-04],
        [1.1904e-03],
        [1.8265e-03],
        [6.0985e-04],
        [6.6071e-04],
        [7.4868e-05],
        [7.6170e-04],
        [1.1993e-04],
        [8.4666e-04],
        [5.3576e-04],
        [6.5326e-04],
        [9.3504e-04],
        [3.1925e-04]], device='cuda:0')/tensor([[2.5908e-04, 5.7516e-04, 1.0380e-03, 9.2173e-04, 1.1904e-03, 1.8265e-03,
         6.0985e-04, 6.6071e-04, 7.4868e-05, 7.6170e-04, 1.1993e-04, 8.4666e-04,
         5.3576e-04, 6.5326e-04, 9.3504e-04, 3.1925e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0134],
        [0.0141],
        [0.0576],
        [0.0033],
        [0.0681],
        [0.0025],
        [0.0003],
        [0.0102],
        [0.0112],
        [0.0054],
        [0.0042],
        [0.0409],
        [0.0005],
        [0.0003],
        [0.0027],
        [0.0003]], device='cuda:0')/tensor([[0.0134, 0.0141, 0.0576, 0.0033, 0.0681, 0.0025, 0.0003, 0.0102, 0.0112,
         0.0054, 0.0042, 0.0409, 0.0005, 0.0003, 0.0027, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5908e-04, 1.3367e-02],
        [5.7516e-04, 1.4082e-02],
        [1.0380e-03, 5.7589e-02],
        [9.2173e-04, 3.2858e-03],
        [1.1904e-03, 6.8090e-02],
        [1.8265e-03, 2.5414e-03],
        [6.0985e-04, 3.3078e-04],
        [6.6071e-04, 1.0236e-02],
        [7.4868e-05, 1.1175e-02],
        [7.6170e-04, 5.4455e-03],
        [1.1993e-04, 4.2258e-03],
        [8.4666e-04, 4.0868e-02],
        [5.3576e-04, 4.8576e-04],
        [6.5326e-04, 3.1702e-04],
        [9.3504e-04, 2.6676e-03],
        [3.1925e-04, 2.5795e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.6849e-04],
        [8.4459e-04],
        [2.5498e-04],
        [3.8493e-05],
        [4.8827e-04],
        [4.0919e-04],
        [4.8329e-04],
        [1.2053e-03],
        [1.0764e-03],
        [4.2527e-04],
        [1.0972e-03],
        [3.2789e-04],
        [1.3549e-03],
        [6.0313e-04],
        [3.6697e-04],
        [3.7587e-04]], device='cuda:0')/tensor([[6.6849e-04, 8.4459e-04, 2.5498e-04, 3.8493e-05, 4.8827e-04, 4.0919e-04,
         4.8329e-04, 1.2053e-03, 1.0764e-03, 4.2527e-04, 1.0972e-03, 3.2789e-04,
         1.3549e-03, 6.0313e-04, 3.6697e-04, 3.7587e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0414],
        [0.0346],
        [0.0268],
        [0.0028],
        [0.0061],
        [0.0127],
        [0.0010],
        [0.0099],
        [0.0058],
        [0.0076],
        [0.0065],
        [0.0299],
        [0.0047],
        [0.0003],
        [0.0001],
        [0.0264]], device='cuda:0')/tensor([[0.0414, 0.0346, 0.0268, 0.0028, 0.0061, 0.0127, 0.0010, 0.0099, 0.0058,
         0.0076, 0.0065, 0.0299, 0.0047, 0.0003, 0.0001, 0.0264]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.6849e-04, 4.1436e-02],
        [8.4459e-04, 3.4592e-02],
        [2.5498e-04, 2.6784e-02],
        [3.8493e-05, 2.7546e-03],
        [4.8827e-04, 6.1206e-03],
        [4.0919e-04, 1.2668e-02],
        [4.8329e-04, 9.8037e-04],
        [1.2053e-03, 9.9001e-03],
        [1.0764e-03, 5.7970e-03],
        [4.2527e-04, 7.6204e-03],
        [1.0972e-03, 6.4776e-03],
        [3.2789e-04, 2.9909e-02],
        [1.3549e-03, 4.7092e-03],
        [6.0313e-04, 3.4948e-04],
        [3.6697e-04, 1.2001e-04],
        [3.7587e-04, 2.6377e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.5089e-04],
        [1.7047e-04],
        [1.1978e-03],
        [9.2015e-04],
        [1.4180e-04],
        [3.9295e-04],
        [6.5337e-04],
        [3.9156e-04],
        [7.4536e-05],
        [1.7917e-03],
        [1.7848e-04],
        [3.0223e-04],
        [4.2891e-04],
        [5.9675e-04],
        [1.2274e-04],
        [7.7116e-04]], device='cuda:0')/tensor([[4.5089e-04, 1.7047e-04, 1.1978e-03, 9.2015e-04, 1.4180e-04, 3.9295e-04,
         6.5337e-04, 3.9156e-04, 7.4536e-05, 1.7917e-03, 1.7848e-04, 3.0223e-04,
         4.2891e-04, 5.9675e-04, 1.2274e-04, 7.7116e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5582e-02],
        [7.3237e-05],
        [6.4607e-04],
        [2.4197e-02],
        [6.9372e-04],
        [5.5295e-04],
        [1.5663e-02],
        [1.6726e-04],
        [4.0640e-05],
        [3.3316e-02],
        [1.4684e-04],
        [9.8100e-03],
        [5.2751e-03],
        [2.8545e-02],
        [1.2957e-03],
        [1.4820e-03]], device='cuda:0')/tensor([[4.5582e-02, 7.3237e-05, 6.4607e-04, 2.4197e-02, 6.9372e-04, 5.5295e-04,
         1.5663e-02, 1.6726e-04, 4.0640e-05, 3.3316e-02, 1.4684e-04, 9.8100e-03,
         5.2751e-03, 2.8545e-02, 1.2957e-03, 1.4820e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.5089e-04, 4.5582e-02],
        [1.7047e-04, 7.3237e-05],
        [1.1978e-03, 6.4607e-04],
        [9.2015e-04, 2.4197e-02],
        [1.4180e-04, 6.9372e-04],
        [3.9295e-04, 5.5295e-04],
        [6.5337e-04, 1.5663e-02],
        [3.9156e-04, 1.6726e-04],
        [7.4536e-05, 4.0640e-05],
        [1.7917e-03, 3.3316e-02],
        [1.7848e-04, 1.4684e-04],
        [3.0223e-04, 9.8100e-03],
        [4.2891e-04, 5.2751e-03],
        [5.9675e-04, 2.8545e-02],
        [1.2274e-04, 1.2957e-03],
        [7.7116e-04, 1.4820e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0004],
        [0.0008],
        [0.0008],
        [0.0008],
        [0.0023],
        [0.0003],
        [0.0003],
        [0.0013],
        [0.0025],
        [0.0009],
        [0.0005],
        [0.0033],
        [0.0004],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0015, 0.0004, 0.0008, 0.0008, 0.0008, 0.0023, 0.0003, 0.0003, 0.0013,
         0.0025, 0.0009, 0.0005, 0.0033, 0.0004, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0249],
        [0.0005],
        [0.0043],
        [0.0120],
        [0.0864],
        [0.0443],
        [0.0155],
        [0.0031],
        [0.0858],
        [0.0092],
        [0.0340],
        [0.0152],
        [0.0106],
        [0.0005],
        [0.0187],
        [0.0089]], device='cuda:0')/tensor([[0.0249, 0.0005, 0.0043, 0.0120, 0.0864, 0.0443, 0.0155, 0.0031, 0.0858,
         0.0092, 0.0340, 0.0152, 0.0106, 0.0005, 0.0187, 0.0089]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.0249],
        [0.0004, 0.0005],
        [0.0008, 0.0043],
        [0.0008, 0.0120],
        [0.0008, 0.0864],
        [0.0023, 0.0443],
        [0.0003, 0.0155],
        [0.0003, 0.0031],
        [0.0013, 0.0858],
        [0.0025, 0.0092],
        [0.0009, 0.0340],
        [0.0005, 0.0152],
        [0.0033, 0.0106],
        [0.0004, 0.0005],
        [0.0002, 0.0187],
        [0.0008, 0.0089]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0004],
        [0.0001],
        [0.0013],
        [0.0013],
        [0.0011],
        [0.0003],
        [0.0002],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0010],
        [0.0026]], device='cuda:0')/tensor([[0.0009, 0.0004, 0.0001, 0.0013, 0.0013, 0.0011, 0.0003, 0.0002, 0.0008,
         0.0002, 0.0002, 0.0002, 0.0009, 0.0002, 0.0010, 0.0026]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0283],
        [0.0001],
        [0.0012],
        [0.0102],
        [0.0117],
        [0.0030],
        [0.0548],
        [0.0170],
        [0.0331],
        [0.0250],
        [0.0002],
        [0.0002],
        [0.0176],
        [0.0493],
        [0.0078],
        [0.0031]], device='cuda:0')/tensor([[0.0283, 0.0001, 0.0012, 0.0102, 0.0117, 0.0030, 0.0548, 0.0170, 0.0331,
         0.0250, 0.0002, 0.0002, 0.0176, 0.0493, 0.0078, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0283],
        [0.0004, 0.0001],
        [0.0001, 0.0012],
        [0.0013, 0.0102],
        [0.0013, 0.0117],
        [0.0011, 0.0030],
        [0.0003, 0.0548],
        [0.0002, 0.0170],
        [0.0008, 0.0331],
        [0.0002, 0.0250],
        [0.0002, 0.0002],
        [0.0002, 0.0002],
        [0.0009, 0.0176],
        [0.0002, 0.0493],
        [0.0010, 0.0078],
        [0.0026, 0.0031]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1552e-03],
        [1.6295e-03],
        [3.1843e-04],
        [7.0086e-04],
        [9.8549e-04],
        [2.8739e-04],
        [6.1201e-04],
        [3.1717e-06],
        [6.5194e-04],
        [5.8756e-04],
        [8.7729e-04],
        [3.3872e-03],
        [1.1403e-03],
        [2.2758e-03],
        [5.8922e-04],
        [6.7762e-04]], device='cuda:0')/tensor([[1.1552e-03, 1.6295e-03, 3.1843e-04, 7.0086e-04, 9.8549e-04, 2.8739e-04,
         6.1201e-04, 3.1717e-06, 6.5194e-04, 5.8756e-04, 8.7729e-04, 3.3872e-03,
         1.1403e-03, 2.2758e-03, 5.8922e-04, 6.7762e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0308],
        [0.0023],
        [0.0128],
        [0.0082],
        [0.0378],
        [0.0197],
        [0.0004],
        [0.0003],
        [0.0021],
        [0.0305],
        [0.0015],
        [0.0349],
        [0.0007],
        [0.0060],
        [0.0019],
        [0.0140]], device='cuda:0')/tensor([[0.0308, 0.0023, 0.0128, 0.0082, 0.0378, 0.0197, 0.0004, 0.0003, 0.0021,
         0.0305, 0.0015, 0.0349, 0.0007, 0.0060, 0.0019, 0.0140]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1552e-03, 3.0844e-02],
        [1.6295e-03, 2.2874e-03],
        [3.1843e-04, 1.2795e-02],
        [7.0086e-04, 8.1592e-03],
        [9.8549e-04, 3.7840e-02],
        [2.8739e-04, 1.9677e-02],
        [6.1201e-04, 4.2987e-04],
        [3.1717e-06, 2.6560e-04],
        [6.5194e-04, 2.1455e-03],
        [5.8756e-04, 3.0491e-02],
        [8.7729e-04, 1.4870e-03],
        [3.3872e-03, 3.4942e-02],
        [1.1403e-03, 7.4639e-04],
        [2.2758e-03, 5.9732e-03],
        [5.8922e-04, 1.8620e-03],
        [6.7762e-04, 1.4025e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0011],
        [0.0007],
        [0.0006],
        [0.0022],
        [0.0005],
        [0.0004],
        [0.0011],
        [0.0004],
        [0.0041],
        [0.0007],
        [0.0015],
        [0.0010],
        [0.0004],
        [0.0004],
        [0.0023]], device='cuda:0')/tensor([[0.0011, 0.0011, 0.0007, 0.0006, 0.0022, 0.0005, 0.0004, 0.0011, 0.0004,
         0.0041, 0.0007, 0.0015, 0.0010, 0.0004, 0.0004, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0492],
        [0.0243],
        [0.0087],
        [0.0393],
        [0.0038],
        [0.0032],
        [0.0017],
        [0.0434],
        [0.0111],
        [0.0588],
        [0.0249],
        [0.0221],
        [0.0138],
        [0.0023],
        [0.0156],
        [0.1048]], device='cuda:0')/tensor([[0.0492, 0.0243, 0.0087, 0.0393, 0.0038, 0.0032, 0.0017, 0.0434, 0.0111,
         0.0588, 0.0249, 0.0221, 0.0138, 0.0023, 0.0156, 0.1048]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0492],
        [0.0011, 0.0243],
        [0.0007, 0.0087],
        [0.0006, 0.0393],
        [0.0022, 0.0038],
        [0.0005, 0.0032],
        [0.0004, 0.0017],
        [0.0011, 0.0434],
        [0.0004, 0.0111],
        [0.0041, 0.0588],
        [0.0007, 0.0249],
        [0.0015, 0.0221],
        [0.0010, 0.0138],
        [0.0004, 0.0023],
        [0.0004, 0.0156],
        [0.0023, 0.1048]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.0423e-04],
        [2.5083e-04],
        [2.5911e-04],
        [4.4495e-04],
        [5.5797e-04],
        [9.0875e-04],
        [6.6757e-04],
        [4.9562e-04],
        [5.1547e-05],
        [2.4011e-03],
        [1.3440e-04],
        [3.2579e-03],
        [7.2260e-04],
        [5.6549e-04],
        [9.7016e-04],
        [6.4373e-04]], device='cuda:0')/tensor([[5.0423e-04, 2.5083e-04, 2.5911e-04, 4.4495e-04, 5.5797e-04, 9.0875e-04,
         6.6757e-04, 4.9562e-04, 5.1547e-05, 2.4011e-03, 1.3440e-04, 3.2579e-03,
         7.2260e-04, 5.6549e-04, 9.7016e-04, 6.4373e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8880e-03],
        [2.3693e-02],
        [1.2517e-02],
        [2.1633e-04],
        [4.9190e-03],
        [2.5412e-03],
        [1.4642e-02],
        [2.0430e-02],
        [1.0975e-03],
        [2.5277e-02],
        [3.3901e-05],
        [1.2076e-02],
        [4.3841e-03],
        [1.3021e-03],
        [1.2905e-03],
        [3.7212e-02]], device='cuda:0')/tensor([[1.8880e-03, 2.3693e-02, 1.2517e-02, 2.1633e-04, 4.9190e-03, 2.5412e-03,
         1.4642e-02, 2.0430e-02, 1.0975e-03, 2.5277e-02, 3.3901e-05, 1.2076e-02,
         4.3841e-03, 1.3021e-03, 1.2905e-03, 3.7212e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.0423e-04, 1.8880e-03],
        [2.5083e-04, 2.3693e-02],
        [2.5911e-04, 1.2517e-02],
        [4.4495e-04, 2.1633e-04],
        [5.5797e-04, 4.9190e-03],
        [9.0875e-04, 2.5412e-03],
        [6.6757e-04, 1.4642e-02],
        [4.9562e-04, 2.0430e-02],
        [5.1547e-05, 1.0975e-03],
        [2.4011e-03, 2.5277e-02],
        [1.3440e-04, 3.3901e-05],
        [3.2579e-03, 1.2076e-02],
        [7.2260e-04, 4.3841e-03],
        [5.6549e-04, 1.3021e-03],
        [9.7016e-04, 1.2905e-03],
        [6.4373e-04, 3.7212e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0001],
        [0.0004],
        [0.0006],
        [0.0009],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0015],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0007],
        [0.0006],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0006, 0.0001, 0.0004, 0.0006, 0.0009, 0.0004, 0.0004, 0.0004, 0.0015,
         0.0002, 0.0002, 0.0007, 0.0007, 0.0006, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0115],
        [0.0449],
        [0.0732],
        [0.0018],
        [0.0100],
        [0.0110],
        [0.0094],
        [0.0391],
        [0.0031],
        [0.0003],
        [0.0111],
        [0.0246],
        [0.0380],
        [0.0016],
        [0.0016]], device='cuda:0')/tensor([[0.0004, 0.0115, 0.0449, 0.0732, 0.0018, 0.0100, 0.0110, 0.0094, 0.0391,
         0.0031, 0.0003, 0.0111, 0.0246, 0.0380, 0.0016, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0004],
        [0.0001, 0.0115],
        [0.0004, 0.0449],
        [0.0006, 0.0732],
        [0.0009, 0.0018],
        [0.0004, 0.0100],
        [0.0004, 0.0110],
        [0.0004, 0.0094],
        [0.0015, 0.0391],
        [0.0002, 0.0031],
        [0.0002, 0.0003],
        [0.0007, 0.0111],
        [0.0007, 0.0246],
        [0.0006, 0.0380],
        [0.0003, 0.0016],
        [0.0002, 0.0016]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.0506e-03],
        [5.6599e-04],
        [5.0741e-04],
        [1.5950e-03],
        [2.3517e-04],
        [1.2941e-03],
        [8.2657e-04],
        [8.7380e-04],
        [9.0193e-04],
        [1.4887e-04],
        [5.5847e-04],
        [4.6332e-04],
        [8.1530e-05],
        [2.5709e-04],
        [5.6634e-04],
        [4.6753e-04]], device='cuda:0')/tensor([[2.0506e-03, 5.6599e-04, 5.0741e-04, 1.5950e-03, 2.3517e-04, 1.2941e-03,
         8.2657e-04, 8.7380e-04, 9.0193e-04, 1.4887e-04, 5.5847e-04, 4.6332e-04,
         8.1530e-05, 2.5709e-04, 5.6634e-04, 4.6753e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6053e-02],
        [2.5501e-03],
        [1.3146e-02],
        [3.0556e-03],
        [3.7080e-03],
        [5.2062e-02],
        [2.8979e-02],
        [1.8847e-02],
        [1.4298e-03],
        [6.9911e-05],
        [1.0050e-01],
        [1.6901e-03],
        [6.0929e-03],
        [1.3527e-03],
        [1.9793e-03],
        [2.8840e-03]], device='cuda:0')/tensor([[1.6053e-02, 2.5501e-03, 1.3146e-02, 3.0556e-03, 3.7080e-03, 5.2062e-02,
         2.8979e-02, 1.8847e-02, 1.4298e-03, 6.9911e-05, 1.0050e-01, 1.6901e-03,
         6.0929e-03, 1.3527e-03, 1.9793e-03, 2.8840e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.0506e-03, 1.6053e-02],
        [5.6599e-04, 2.5501e-03],
        [5.0741e-04, 1.3146e-02],
        [1.5950e-03, 3.0556e-03],
        [2.3517e-04, 3.7080e-03],
        [1.2941e-03, 5.2062e-02],
        [8.2657e-04, 2.8979e-02],
        [8.7380e-04, 1.8847e-02],
        [9.0193e-04, 1.4298e-03],
        [1.4887e-04, 6.9911e-05],
        [5.5847e-04, 1.0050e-01],
        [4.6332e-04, 1.6901e-03],
        [8.1530e-05, 6.0929e-03],
        [2.5709e-04, 1.3527e-03],
        [5.6634e-04, 1.9793e-03],
        [4.6753e-04, 2.8840e-03]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.3590e-04],
        [1.2352e-03],
        [1.2379e-04],
        [6.7805e-04],
        [5.3280e-04],
        [4.7561e-04],
        [4.8962e-04],
        [1.3590e-04],
        [7.6622e-05],
        [1.8400e-04],
        [3.8675e-04],
        [1.6596e-03],
        [1.0844e-03],
        [4.6723e-04],
        [1.0991e-03],
        [1.4636e-03]], device='cuda:0')/tensor([[4.3590e-04, 1.2352e-03, 1.2379e-04, 6.7805e-04, 5.3280e-04, 4.7561e-04,
         4.8962e-04, 1.3590e-04, 7.6622e-05, 1.8400e-04, 3.8675e-04, 1.6596e-03,
         1.0844e-03, 4.6723e-04, 1.0991e-03, 1.4636e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0111],
        [0.0114],
        [0.0002],
        [0.0506],
        [0.0474],
        [0.0088],
        [0.0580],
        [0.0136],
        [0.0235],
        [0.0003],
        [0.0147],
        [0.0024],
        [0.0045],
        [0.0003],
        [0.0006],
        [0.0222]], device='cuda:0')/tensor([[0.0111, 0.0114, 0.0002, 0.0506, 0.0474, 0.0088, 0.0580, 0.0136, 0.0235,
         0.0003, 0.0147, 0.0024, 0.0045, 0.0003, 0.0006, 0.0222]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.3590e-04, 1.1146e-02],
        [1.2352e-03, 1.1373e-02],
        [1.2379e-04, 1.7972e-04],
        [6.7805e-04, 5.0618e-02],
        [5.3280e-04, 4.7351e-02],
        [4.7561e-04, 8.7876e-03],
        [4.8962e-04, 5.7960e-02],
        [1.3590e-04, 1.3618e-02],
        [7.6622e-05, 2.3477e-02],
        [1.8400e-04, 3.1052e-04],
        [3.8675e-04, 1.4666e-02],
        [1.6596e-03, 2.4001e-03],
        [1.0844e-03, 4.5030e-03],
        [4.6723e-04, 3.4217e-04],
        [1.0991e-03, 5.8975e-04],
        [1.4636e-03, 2.2237e-02]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0063],
        [0.0004],
        [0.0027],
        [0.0010],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0009],
        [0.0003],
        [0.0012],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0022],
        [0.0007],
        [0.0002]], device='cuda:0')/tensor([[0.0063, 0.0004, 0.0027, 0.0010, 0.0007, 0.0005, 0.0003, 0.0009, 0.0003,
         0.0012, 0.0007, 0.0002, 0.0004, 0.0022, 0.0007, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0051],
        [0.0125],
        [0.0593],
        [0.0019],
        [0.0014],
        [0.0445],
        [0.0052],
        [0.0587],
        [0.0133],
        [0.0108],
        [0.0592],
        [0.0003],
        [0.0107],
        [0.0062],
        [0.0630],
        [0.0066]], device='cuda:0')/tensor([[0.0051, 0.0125, 0.0593, 0.0019, 0.0014, 0.0445, 0.0052, 0.0587, 0.0133,
         0.0108, 0.0592, 0.0003, 0.0107, 0.0062, 0.0630, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0063, 0.0051],
        [0.0004, 0.0125],
        [0.0027, 0.0593],
        [0.0010, 0.0019],
        [0.0007, 0.0014],
        [0.0005, 0.0445],
        [0.0003, 0.0052],
        [0.0009, 0.0587],
        [0.0003, 0.0133],
        [0.0012, 0.0108],
        [0.0007, 0.0592],
        [0.0002, 0.0003],
        [0.0004, 0.0107],
        [0.0022, 0.0062],
        [0.0007, 0.0630],
        [0.0002, 0.0066]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0016],
        [0.0007],
        [0.0006],
        [0.0001],
        [0.0008],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0005, 0.0016, 0.0007, 0.0006, 0.0001, 0.0008, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0096],
        [0.0230],
        [0.0639],
        [0.0037],
        [0.0019],
        [0.0124],
        [0.0038],
        [0.0002]], device='cuda:0')/tensor([[0.0096, 0.0230, 0.0639, 0.0037, 0.0019, 0.0124, 0.0038, 0.0002]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0096],
        [0.0016, 0.0230],
        [0.0007, 0.0639],
        [0.0006, 0.0037],
        [0.0001, 0.0019],
        [0.0008, 0.0124],
        [0.0005, 0.0038],
        [0.0002, 0.0002]], device='cuda:0')
acc:  0.62
Time taken to execute the de SA task with prompt type active, variation 1 and batchsize 16: 0:03:21.447080
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA active 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 345.12it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0028],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0016],
        [0.0008],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0010],
        [0.0004]], device='cuda:0')/tensor([[0.0007, 0.0028, 0.0007, 0.0003, 0.0002, 0.0006, 0.0005, 0.0002, 0.0003,
         0.0016, 0.0008, 0.0008, 0.0002, 0.0002, 0.0010, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0483],
        [0.0307],
        [0.0044],
        [0.0185],
        [0.0003],
        [0.0006],
        [0.0041],
        [0.0001],
        [0.0135],
        [0.0041],
        [0.0010],
        [0.0200],
        [0.0157],
        [0.0029],
        [0.0583],
        [0.0067]], device='cuda:0')/tensor([[0.0483, 0.0307, 0.0044, 0.0185, 0.0003, 0.0006, 0.0041, 0.0001, 0.0135,
         0.0041, 0.0010, 0.0200, 0.0157, 0.0029, 0.0583, 0.0067]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0483],
        [0.0028, 0.0307],
        [0.0007, 0.0044],
        [0.0003, 0.0185],
        [0.0002, 0.0003],
        [0.0006, 0.0006],
        [0.0005, 0.0041],
        [0.0002, 0.0001],
        [0.0003, 0.0135],
        [0.0016, 0.0041],
        [0.0008, 0.0010],
        [0.0008, 0.0200],
        [0.0002, 0.0157],
        [0.0002, 0.0029],
        [0.0010, 0.0583],
        [0.0004, 0.0067]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0006],
        [0.0028],
        [0.0010],
        [0.0002],
        [0.0003],
        [0.0009],
        [0.0011],
        [0.0007],
        [0.0008],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0008, 0.0004, 0.0006, 0.0002, 0.0006, 0.0028, 0.0010, 0.0002,
         0.0003, 0.0009, 0.0011, 0.0007, 0.0008, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0096],
        [0.0005],
        [0.0018],
        [0.0008],
        [0.0002],
        [0.0337],
        [0.0025],
        [0.0015],
        [0.0131],
        [0.0016],
        [0.0007],
        [0.0244],
        [0.0012],
        [0.0236],
        [0.0130],
        [0.0405]], device='cuda:0')/tensor([[0.0096, 0.0005, 0.0018, 0.0008, 0.0002, 0.0337, 0.0025, 0.0015, 0.0131,
         0.0016, 0.0007, 0.0244, 0.0012, 0.0236, 0.0130, 0.0405]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0096],
        [0.0008, 0.0005],
        [0.0004, 0.0018],
        [0.0006, 0.0008],
        [0.0002, 0.0002],
        [0.0006, 0.0337],
        [0.0028, 0.0025],
        [0.0010, 0.0015],
        [0.0002, 0.0131],
        [0.0003, 0.0016],
        [0.0009, 0.0007],
        [0.0011, 0.0244],
        [0.0007, 0.0012],
        [0.0008, 0.0236],
        [0.0003, 0.0130],
        [0.0003, 0.0405]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.3702e-04],
        [3.5265e-04],
        [2.2435e-04],
        [2.5419e-04],
        [1.1493e-03],
        [2.0421e-04],
        [3.3706e-04],
        [5.7398e-04],
        [1.2889e-03],
        [3.0073e-04],
        [2.7889e-04],
        [6.8236e-04],
        [7.0011e-05],
        [5.7876e-04],
        [2.0399e-04],
        [5.1281e-04]], device='cuda:0')/tensor([[3.3702e-04, 3.5265e-04, 2.2435e-04, 2.5419e-04, 1.1493e-03, 2.0421e-04,
         3.3706e-04, 5.7398e-04, 1.2889e-03, 3.0073e-04, 2.7889e-04, 6.8236e-04,
         7.0011e-05, 5.7876e-04, 2.0399e-04, 5.1281e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.2070e-04],
        [9.7819e-03],
        [6.0538e-03],
        [8.9632e-05],
        [5.5752e-02],
        [8.2912e-02],
        [3.3488e-04],
        [2.5569e-02],
        [1.1232e-02],
        [8.0151e-04],
        [4.1707e-04],
        [3.6182e-02],
        [3.5024e-02],
        [1.3471e-02],
        [3.0520e-02],
        [6.1873e-02]], device='cuda:0')/tensor([[2.2070e-04, 9.7819e-03, 6.0538e-03, 8.9632e-05, 5.5752e-02, 8.2912e-02,
         3.3488e-04, 2.5569e-02, 1.1232e-02, 8.0151e-04, 4.1707e-04, 3.6182e-02,
         3.5024e-02, 1.3471e-02, 3.0520e-02, 6.1873e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3702e-04, 2.2070e-04],
        [3.5265e-04, 9.7819e-03],
        [2.2435e-04, 6.0538e-03],
        [2.5419e-04, 8.9632e-05],
        [1.1493e-03, 5.5752e-02],
        [2.0421e-04, 8.2912e-02],
        [3.3706e-04, 3.3488e-04],
        [5.7398e-04, 2.5569e-02],
        [1.2889e-03, 1.1232e-02],
        [3.0073e-04, 8.0151e-04],
        [2.7889e-04, 4.1707e-04],
        [6.8236e-04, 3.6182e-02],
        [7.0011e-05, 3.5024e-02],
        [5.7876e-04, 1.3471e-02],
        [2.0399e-04, 3.0520e-02],
        [5.1281e-04, 6.1873e-02]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0023],
        [0.0003],
        [0.0002],
        [0.0005],
        [0.0005],
        [0.0007],
        [0.0010],
        [0.0002],
        [0.0003],
        [0.0011],
        [0.0012],
        [0.0001],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0023, 0.0003, 0.0002, 0.0005, 0.0005, 0.0007, 0.0010,
         0.0002, 0.0003, 0.0011, 0.0012, 0.0001, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0019],
        [0.0075],
        [0.0112],
        [0.0234],
        [0.0283],
        [0.0026],
        [0.0068],
        [0.0194],
        [0.0140],
        [0.0281],
        [0.0545],
        [0.0016],
        [0.0031],
        [0.0088],
        [0.0001]], device='cuda:0')/tensor([[0.0004, 0.0019, 0.0075, 0.0112, 0.0234, 0.0283, 0.0026, 0.0068, 0.0194,
         0.0140, 0.0281, 0.0545, 0.0016, 0.0031, 0.0088, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0004],
        [0.0002, 0.0019],
        [0.0023, 0.0075],
        [0.0003, 0.0112],
        [0.0002, 0.0234],
        [0.0005, 0.0283],
        [0.0005, 0.0026],
        [0.0007, 0.0068],
        [0.0010, 0.0194],
        [0.0002, 0.0140],
        [0.0003, 0.0281],
        [0.0011, 0.0545],
        [0.0012, 0.0016],
        [0.0001, 0.0031],
        [0.0003, 0.0088],
        [0.0002, 0.0001]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0007],
        [0.0011],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0006],
        [0.0016],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0001],
        [0.0002],
        [0.0009],
        [0.0012]], device='cuda:0')/tensor([[0.0009, 0.0007, 0.0011, 0.0002, 0.0002, 0.0007, 0.0006, 0.0016, 0.0006,
         0.0005, 0.0005, 0.0008, 0.0001, 0.0002, 0.0009, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0102],
        [0.0369],
        [0.0019],
        [0.0058],
        [0.0094],
        [0.0017],
        [0.0006],
        [0.0008],
        [0.0004],
        [0.0050],
        [0.0031],
        [0.0421],
        [0.0315],
        [0.0032],
        [0.0596],
        [0.0066]], device='cuda:0')/tensor([[0.0102, 0.0369, 0.0019, 0.0058, 0.0094, 0.0017, 0.0006, 0.0008, 0.0004,
         0.0050, 0.0031, 0.0421, 0.0315, 0.0032, 0.0596, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0102],
        [0.0007, 0.0369],
        [0.0011, 0.0019],
        [0.0002, 0.0058],
        [0.0002, 0.0094],
        [0.0007, 0.0017],
        [0.0006, 0.0006],
        [0.0016, 0.0008],
        [0.0006, 0.0004],
        [0.0005, 0.0050],
        [0.0005, 0.0031],
        [0.0008, 0.0421],
        [0.0001, 0.0315],
        [0.0002, 0.0032],
        [0.0009, 0.0596],
        [0.0012, 0.0066]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0021],
        [0.0012],
        [0.0002],
        [0.0007],
        [0.0009],
        [0.0023],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0013]], device='cuda:0')/tensor([[0.0021, 0.0012, 0.0002, 0.0007, 0.0009, 0.0023, 0.0004, 0.0002, 0.0002,
         0.0005, 0.0005, 0.0005, 0.0005, 0.0005, 0.0003, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0047],
        [0.0127],
        [0.0061],
        [0.0027],
        [0.0366],
        [0.0011],
        [0.0075],
        [0.0254],
        [0.0252],
        [0.0168],
        [0.0011],
        [0.0010],
        [0.0273],
        [0.0002],
        [0.0115]], device='cuda:0')/tensor([[0.0028, 0.0047, 0.0127, 0.0061, 0.0027, 0.0366, 0.0011, 0.0075, 0.0254,
         0.0252, 0.0168, 0.0011, 0.0010, 0.0273, 0.0002, 0.0115]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0021, 0.0028],
        [0.0012, 0.0047],
        [0.0002, 0.0127],
        [0.0007, 0.0061],
        [0.0009, 0.0027],
        [0.0023, 0.0366],
        [0.0004, 0.0011],
        [0.0002, 0.0075],
        [0.0002, 0.0254],
        [0.0005, 0.0252],
        [0.0005, 0.0168],
        [0.0005, 0.0011],
        [0.0005, 0.0010],
        [0.0005, 0.0273],
        [0.0003, 0.0002],
        [0.0013, 0.0115]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0006],
        [0.0012],
        [0.0004],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0006],
        [0.0004],
        [0.0019],
        [0.0005],
        [0.0015],
        [0.0020]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0006, 0.0012, 0.0004, 0.0005, 0.0006, 0.0005, 0.0004,
         0.0003, 0.0006, 0.0004, 0.0019, 0.0005, 0.0015, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0047],
        [0.0560],
        [0.0015],
        [0.0016],
        [0.0004],
        [0.0430],
        [0.0006],
        [0.0096],
        [0.0055],
        [0.0033],
        [0.0005],
        [0.0226],
        [0.0172],
        [0.0008],
        [0.0039],
        [0.0041]], device='cuda:0')/tensor([[0.0047, 0.0560, 0.0015, 0.0016, 0.0004, 0.0430, 0.0006, 0.0096, 0.0055,
         0.0033, 0.0005, 0.0226, 0.0172, 0.0008, 0.0039, 0.0041]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0047],
        [0.0004, 0.0560],
        [0.0006, 0.0015],
        [0.0012, 0.0016],
        [0.0004, 0.0004],
        [0.0005, 0.0430],
        [0.0006, 0.0006],
        [0.0005, 0.0096],
        [0.0004, 0.0055],
        [0.0003, 0.0033],
        [0.0006, 0.0005],
        [0.0004, 0.0226],
        [0.0019, 0.0172],
        [0.0005, 0.0008],
        [0.0015, 0.0039],
        [0.0020, 0.0041]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0017],
        [0.0007],
        [0.0006],
        [0.0009],
        [0.0017],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0008],
        [0.0011],
        [0.0025],
        [0.0004],
        [0.0002],
        [0.0015],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0017, 0.0007, 0.0006, 0.0009, 0.0017, 0.0005, 0.0004, 0.0007,
         0.0008, 0.0011, 0.0025, 0.0004, 0.0002, 0.0015, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0120],
        [0.0064],
        [0.0429],
        [0.0038],
        [0.0016],
        [0.0423],
        [0.0098],
        [0.0003],
        [0.0180],
        [0.0044],
        [0.0302],
        [0.0292],
        [0.0379],
        [0.0256],
        [0.0364],
        [0.0155]], device='cuda:0')/tensor([[0.0120, 0.0064, 0.0429, 0.0038, 0.0016, 0.0423, 0.0098, 0.0003, 0.0180,
         0.0044, 0.0302, 0.0292, 0.0379, 0.0256, 0.0364, 0.0155]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0120],
        [0.0017, 0.0064],
        [0.0007, 0.0429],
        [0.0006, 0.0038],
        [0.0009, 0.0016],
        [0.0017, 0.0423],
        [0.0005, 0.0098],
        [0.0004, 0.0003],
        [0.0007, 0.0180],
        [0.0008, 0.0044],
        [0.0011, 0.0302],
        [0.0025, 0.0292],
        [0.0004, 0.0379],
        [0.0002, 0.0256],
        [0.0015, 0.0364],
        [0.0003, 0.0155]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.2729e-04],
        [3.4617e-04],
        [3.5337e-04],
        [4.6555e-04],
        [2.4588e-04],
        [3.3753e-04],
        [5.5670e-04],
        [5.5235e-05],
        [5.0275e-04],
        [4.9196e-04],
        [2.8363e-04],
        [6.9810e-04],
        [7.9233e-04],
        [4.9785e-04],
        [4.4224e-04],
        [4.0241e-04]], device='cuda:0')/tensor([[4.2729e-04, 3.4617e-04, 3.5337e-04, 4.6555e-04, 2.4588e-04, 3.3753e-04,
         5.5670e-04, 5.5235e-05, 5.0275e-04, 4.9196e-04, 2.8363e-04, 6.9810e-04,
         7.9233e-04, 4.9785e-04, 4.4224e-04, 4.0241e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0029],
        [0.0244],
        [0.0008],
        [0.0400],
        [0.0165],
        [0.0003],
        [0.0692],
        [0.0366],
        [0.0003],
        [0.0031],
        [0.0271],
        [0.0084],
        [0.0008],
        [0.0094],
        [0.0031],
        [0.0156]], device='cuda:0')/tensor([[0.0029, 0.0244, 0.0008, 0.0400, 0.0165, 0.0003, 0.0692, 0.0366, 0.0003,
         0.0031, 0.0271, 0.0084, 0.0008, 0.0094, 0.0031, 0.0156]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2729e-04, 2.8907e-03],
        [3.4617e-04, 2.4446e-02],
        [3.5337e-04, 7.5833e-04],
        [4.6555e-04, 3.9999e-02],
        [2.4588e-04, 1.6461e-02],
        [3.3753e-04, 3.3606e-04],
        [5.5670e-04, 6.9159e-02],
        [5.5235e-05, 3.6637e-02],
        [5.0275e-04, 3.1728e-04],
        [4.9196e-04, 3.0729e-03],
        [2.8363e-04, 2.7121e-02],
        [6.9810e-04, 8.3700e-03],
        [7.9233e-04, 7.9335e-04],
        [4.9785e-04, 9.4451e-03],
        [4.4224e-04, 3.0777e-03],
        [4.0241e-04, 1.5614e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0002],
        [0.0001],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0008],
        [0.0002],
        [0.0006],
        [0.0015],
        [0.0008],
        [0.0006],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0002, 0.0001, 0.0008, 0.0002, 0.0002, 0.0008, 0.0002, 0.0006,
         0.0015, 0.0008, 0.0006, 0.0003, 0.0002, 0.0002, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0089],
        [0.0243],
        [0.0012],
        [0.0354],
        [0.0003],
        [0.0405],
        [0.0749],
        [0.0011],
        [0.0686],
        [0.0018],
        [0.0002],
        [0.0002],
        [0.0131],
        [0.0080],
        [0.0047],
        [0.0134]], device='cuda:0')/tensor([[0.0089, 0.0243, 0.0012, 0.0354, 0.0003, 0.0405, 0.0749, 0.0011, 0.0686,
         0.0018, 0.0002, 0.0002, 0.0131, 0.0080, 0.0047, 0.0134]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0089],
        [0.0002, 0.0243],
        [0.0001, 0.0012],
        [0.0008, 0.0354],
        [0.0002, 0.0003],
        [0.0002, 0.0405],
        [0.0008, 0.0749],
        [0.0002, 0.0011],
        [0.0006, 0.0686],
        [0.0015, 0.0018],
        [0.0008, 0.0002],
        [0.0006, 0.0002],
        [0.0003, 0.0131],
        [0.0002, 0.0080],
        [0.0002, 0.0047],
        [0.0013, 0.0134]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2647e-03],
        [1.2546e-03],
        [2.3047e-04],
        [1.4884e-03],
        [4.1011e-04],
        [3.6019e-04],
        [2.8721e-04],
        [1.3095e-04],
        [1.0684e-03],
        [6.9593e-04],
        [2.9756e-04],
        [7.0885e-03],
        [9.5216e-05],
        [7.5281e-04],
        [1.6660e-03],
        [3.5943e-04]], device='cuda:0')/tensor([[1.2647e-03, 1.2546e-03, 2.3047e-04, 1.4884e-03, 4.1011e-04, 3.6019e-04,
         2.8721e-04, 1.3095e-04, 1.0684e-03, 6.9593e-04, 2.9756e-04, 7.0885e-03,
         9.5216e-05, 7.5281e-04, 1.6660e-03, 3.5943e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6691e-03],
        [2.0343e-02],
        [5.9717e-05],
        [8.6806e-03],
        [1.1196e-01],
        [6.1254e-03],
        [3.7810e-03],
        [7.3233e-05],
        [1.6903e-03],
        [2.6354e-03],
        [8.6534e-03],
        [1.3570e-01],
        [3.5284e-02],
        [3.0947e-04],
        [1.6768e-03],
        [1.4584e-02]], device='cuda:0')/tensor([[1.6691e-03, 2.0343e-02, 5.9717e-05, 8.6806e-03, 1.1196e-01, 6.1254e-03,
         3.7810e-03, 7.3233e-05, 1.6903e-03, 2.6354e-03, 8.6534e-03, 1.3570e-01,
         3.5284e-02, 3.0947e-04, 1.6768e-03, 1.4584e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2647e-03, 1.6691e-03],
        [1.2546e-03, 2.0343e-02],
        [2.3047e-04, 5.9717e-05],
        [1.4884e-03, 8.6806e-03],
        [4.1011e-04, 1.1196e-01],
        [3.6019e-04, 6.1254e-03],
        [2.8721e-04, 3.7810e-03],
        [1.3095e-04, 7.3233e-05],
        [1.0684e-03, 1.6903e-03],
        [6.9593e-04, 2.6354e-03],
        [2.9756e-04, 8.6534e-03],
        [7.0885e-03, 1.3570e-01],
        [9.5216e-05, 3.5284e-02],
        [7.5281e-04, 3.0947e-04],
        [1.6660e-03, 1.6768e-03],
        [3.5943e-04, 1.4584e-02]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0009],
        [0.0009],
        [0.0006],
        [0.0006],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0009, 0.0009, 0.0006, 0.0006, 0.0008, 0.0002, 0.0002, 0.0007,
         0.0003, 0.0004, 0.0007, 0.0004, 0.0004, 0.0005, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0017],
        [0.0047],
        [0.0622],
        [0.0316],
        [0.0137],
        [0.0310],
        [0.0020],
        [0.0054],
        [0.0014],
        [0.0128],
        [0.0264],
        [0.0088],
        [0.0396],
        [0.0031],
        [0.0080]], device='cuda:0')/tensor([[0.0035, 0.0017, 0.0047, 0.0622, 0.0316, 0.0137, 0.0310, 0.0020, 0.0054,
         0.0014, 0.0128, 0.0264, 0.0088, 0.0396, 0.0031, 0.0080]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0035],
        [0.0009, 0.0017],
        [0.0009, 0.0047],
        [0.0006, 0.0622],
        [0.0006, 0.0316],
        [0.0008, 0.0137],
        [0.0002, 0.0310],
        [0.0002, 0.0020],
        [0.0007, 0.0054],
        [0.0003, 0.0014],
        [0.0004, 0.0128],
        [0.0007, 0.0264],
        [0.0004, 0.0088],
        [0.0004, 0.0396],
        [0.0005, 0.0031],
        [0.0003, 0.0080]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0003],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0007],
        [0.0007],
        [0.0001],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0003, 0.0002, 0.0007, 0.0007, 0.0001, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0375],
        [0.0062],
        [0.0045],
        [0.0023],
        [0.0313],
        [0.0608],
        [0.0832],
        [0.0131]], device='cuda:0')/tensor([[0.0375, 0.0062, 0.0045, 0.0023, 0.0313, 0.0608, 0.0832, 0.0131]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0003, 0.0375],
        [0.0005, 0.0062],
        [0.0003, 0.0045],
        [0.0002, 0.0023],
        [0.0007, 0.0313],
        [0.0007, 0.0608],
        [0.0001, 0.0832],
        [0.0004, 0.0131]], device='cuda:0')
acc:  0.61
Time taken to execute the de SA task with prompt type active, variation 2 and batchsize 16: 0:03:17.411063
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA active 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 341.69it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0021],
        [0.0014],
        [0.0003],
        [0.0005],
        [0.0007],
        [0.0012],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0009],
        [0.0013],
        [0.0003],
        [0.0014],
        [0.0002]], device='cuda:0')/tensor([[0.0021, 0.0014, 0.0003, 0.0005, 0.0007, 0.0012, 0.0006, 0.0006, 0.0002,
         0.0003, 0.0006, 0.0009, 0.0013, 0.0003, 0.0014, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0366],
        [0.0129],
        [0.0150],
        [0.0011],
        [0.0031],
        [0.0272],
        [0.0039],
        [0.0126],
        [0.0031],
        [0.0052],
        [0.0180],
        [0.0034],
        [0.0025],
        [0.0084],
        [0.0243],
        [0.0025]], device='cuda:0')/tensor([[0.0366, 0.0129, 0.0150, 0.0011, 0.0031, 0.0272, 0.0039, 0.0126, 0.0031,
         0.0052, 0.0180, 0.0034, 0.0025, 0.0084, 0.0243, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0021, 0.0366],
        [0.0014, 0.0129],
        [0.0003, 0.0150],
        [0.0005, 0.0011],
        [0.0007, 0.0031],
        [0.0012, 0.0272],
        [0.0006, 0.0039],
        [0.0006, 0.0126],
        [0.0002, 0.0031],
        [0.0003, 0.0052],
        [0.0006, 0.0180],
        [0.0009, 0.0034],
        [0.0013, 0.0025],
        [0.0003, 0.0084],
        [0.0014, 0.0243],
        [0.0002, 0.0025]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.4583e-03],
        [2.8119e-04],
        [1.3026e-03],
        [6.0140e-04],
        [1.1883e-03],
        [3.6031e-04],
        [3.1141e-04],
        [1.0197e-03],
        [1.2539e-04],
        [4.9789e-04],
        [8.7792e-06],
        [3.6973e-04],
        [3.8968e-03],
        [2.0504e-04],
        [3.1674e-04],
        [3.7683e-04]], device='cuda:0')/tensor([[1.4583e-03, 2.8119e-04, 1.3026e-03, 6.0140e-04, 1.1883e-03, 3.6031e-04,
         3.1141e-04, 1.0197e-03, 1.2539e-04, 4.9789e-04, 8.7792e-06, 3.6973e-04,
         3.8968e-03, 2.0504e-04, 3.1674e-04, 3.7683e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8848e-03],
        [6.1145e-03],
        [1.1006e-02],
        [1.6548e-02],
        [2.2938e-02],
        [4.2113e-03],
        [3.8162e-03],
        [1.3639e-03],
        [7.1415e-03],
        [2.2021e-03],
        [2.4998e-05],
        [9.5496e-03],
        [6.8699e-02],
        [2.1490e-03],
        [7.6632e-03],
        [6.9618e-04]], device='cuda:0')/tensor([[1.8848e-03, 6.1145e-03, 1.1006e-02, 1.6548e-02, 2.2938e-02, 4.2113e-03,
         3.8162e-03, 1.3639e-03, 7.1415e-03, 2.2021e-03, 2.4998e-05, 9.5496e-03,
         6.8699e-02, 2.1490e-03, 7.6632e-03, 6.9618e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4583e-03, 1.8848e-03],
        [2.8119e-04, 6.1145e-03],
        [1.3026e-03, 1.1006e-02],
        [6.0140e-04, 1.6548e-02],
        [1.1883e-03, 2.2938e-02],
        [3.6031e-04, 4.2113e-03],
        [3.1141e-04, 3.8162e-03],
        [1.0197e-03, 1.3639e-03],
        [1.2539e-04, 7.1415e-03],
        [4.9789e-04, 2.2021e-03],
        [8.7792e-06, 2.4998e-05],
        [3.6973e-04, 9.5496e-03],
        [3.8968e-03, 6.8699e-02],
        [2.0504e-04, 2.1490e-03],
        [3.1674e-04, 7.6632e-03],
        [3.7683e-04, 6.9618e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.3183e-04],
        [4.8076e-04],
        [3.1330e-03],
        [2.2334e-04],
        [1.7125e-03],
        [3.6699e-04],
        [3.9209e-04],
        [7.8397e-05],
        [1.3757e-03],
        [9.6647e-04],
        [6.1164e-04],
        [2.9421e-04],
        [9.5227e-04],
        [1.1692e-03],
        [8.0745e-05],
        [1.3192e-03]], device='cuda:0')/tensor([[7.3183e-04, 4.8076e-04, 3.1330e-03, 2.2334e-04, 1.7125e-03, 3.6699e-04,
         3.9209e-04, 7.8397e-05, 1.3757e-03, 9.6647e-04, 6.1164e-04, 2.9421e-04,
         9.5227e-04, 1.1692e-03, 8.0745e-05, 1.3192e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0040],
        [0.0015],
        [0.0099],
        [0.0082],
        [0.0035],
        [0.0091],
        [0.0015],
        [0.0007],
        [0.0097],
        [0.0012],
        [0.0079],
        [0.0012],
        [0.0376],
        [0.0031],
        [0.0010],
        [0.0011]], device='cuda:0')/tensor([[0.0040, 0.0015, 0.0099, 0.0082, 0.0035, 0.0091, 0.0015, 0.0007, 0.0097,
         0.0012, 0.0079, 0.0012, 0.0376, 0.0031, 0.0010, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.3183e-04, 3.9862e-03],
        [4.8076e-04, 1.5289e-03],
        [3.1330e-03, 9.9247e-03],
        [2.2334e-04, 8.2276e-03],
        [1.7125e-03, 3.5119e-03],
        [3.6699e-04, 9.1283e-03],
        [3.9209e-04, 1.4737e-03],
        [7.8397e-05, 6.7555e-04],
        [1.3757e-03, 9.7424e-03],
        [9.6647e-04, 1.2297e-03],
        [6.1164e-04, 7.8649e-03],
        [2.9421e-04, 1.1916e-03],
        [9.5227e-04, 3.7565e-02],
        [1.1692e-03, 3.1066e-03],
        [8.0745e-05, 9.7078e-04],
        [1.3192e-03, 1.1341e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0008],
        [0.0022],
        [0.0013],
        [0.0003],
        [0.0007],
        [0.0008],
        [0.0005],
        [0.0024],
        [0.0002],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0007, 0.0008, 0.0022, 0.0013, 0.0003, 0.0007, 0.0008, 0.0005, 0.0024,
         0.0002, 0.0006, 0.0001, 0.0004, 0.0003, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0082],
        [0.0069],
        [0.0090],
        [0.0014],
        [0.0078],
        [0.0328],
        [0.0050],
        [0.0021],
        [0.0049],
        [0.0047],
        [0.0003],
        [0.0014],
        [0.0057],
        [0.0023],
        [0.0002],
        [0.0016]], device='cuda:0')/tensor([[0.0082, 0.0069, 0.0090, 0.0014, 0.0078, 0.0328, 0.0050, 0.0021, 0.0049,
         0.0047, 0.0003, 0.0014, 0.0057, 0.0023, 0.0002, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0082],
        [0.0008, 0.0069],
        [0.0022, 0.0090],
        [0.0013, 0.0014],
        [0.0003, 0.0078],
        [0.0007, 0.0328],
        [0.0008, 0.0050],
        [0.0005, 0.0021],
        [0.0024, 0.0049],
        [0.0002, 0.0047],
        [0.0006, 0.0003],
        [0.0001, 0.0014],
        [0.0004, 0.0057],
        [0.0003, 0.0023],
        [0.0002, 0.0002],
        [0.0003, 0.0016]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2053e-03],
        [1.6202e-04],
        [6.1163e-04],
        [1.1064e-04],
        [1.5004e-04],
        [1.0157e-03],
        [4.6765e-04],
        [8.0710e-04],
        [8.9986e-04],
        [4.3802e-04],
        [6.5761e-04],
        [8.4428e-05],
        [2.2205e-04],
        [4.3149e-04],
        [5.3944e-04],
        [3.3878e-04]], device='cuda:0')/tensor([[1.2053e-03, 1.6202e-04, 6.1163e-04, 1.1064e-04, 1.5004e-04, 1.0157e-03,
         4.6765e-04, 8.0710e-04, 8.9986e-04, 4.3802e-04, 6.5761e-04, 8.4428e-05,
         2.2205e-04, 4.3149e-04, 5.3944e-04, 3.3878e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0382],
        [0.0027],
        [0.0032],
        [0.0097],
        [0.0004],
        [0.0030],
        [0.0038],
        [0.0084],
        [0.0010],
        [0.0034],
        [0.0171],
        [0.0066],
        [0.0029],
        [0.0006],
        [0.0030],
        [0.0042]], device='cuda:0')/tensor([[0.0382, 0.0027, 0.0032, 0.0097, 0.0004, 0.0030, 0.0038, 0.0084, 0.0010,
         0.0034, 0.0171, 0.0066, 0.0029, 0.0006, 0.0030, 0.0042]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2053e-03, 3.8240e-02],
        [1.6202e-04, 2.6842e-03],
        [6.1163e-04, 3.1828e-03],
        [1.1064e-04, 9.6592e-03],
        [1.5004e-04, 4.2237e-04],
        [1.0157e-03, 3.0224e-03],
        [4.6765e-04, 3.7541e-03],
        [8.0710e-04, 8.3532e-03],
        [8.9986e-04, 1.0329e-03],
        [4.3802e-04, 3.3557e-03],
        [6.5761e-04, 1.7052e-02],
        [8.4428e-05, 6.5918e-03],
        [2.2205e-04, 2.9110e-03],
        [4.3149e-04, 5.9507e-04],
        [5.3944e-04, 3.0438e-03],
        [3.3878e-04, 4.2493e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.1224e-04],
        [3.7594e-04],
        [5.7385e-04],
        [1.9506e-04],
        [2.1834e-04],
        [4.4472e-04],
        [4.2771e-04],
        [1.0788e-03],
        [1.5337e-03],
        [1.8926e-04],
        [2.7593e-04],
        [6.9715e-04],
        [4.7412e-04],
        [9.7885e-06],
        [1.7339e-04],
        [9.0593e-04]], device='cuda:0')/tensor([[4.1224e-04, 3.7594e-04, 5.7385e-04, 1.9506e-04, 2.1834e-04, 4.4472e-04,
         4.2771e-04, 1.0788e-03, 1.5337e-03, 1.8926e-04, 2.7593e-04, 6.9715e-04,
         4.7412e-04, 9.7885e-06, 1.7339e-04, 9.0593e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8109e-03],
        [1.6864e-02],
        [1.1312e-02],
        [8.7787e-03],
        [6.3528e-04],
        [6.9567e-03],
        [4.1902e-03],
        [2.8889e-02],
        [2.3975e-02],
        [5.6754e-03],
        [4.6460e-03],
        [2.5893e-03],
        [7.7676e-03],
        [4.3609e-05],
        [3.6991e-04],
        [1.5373e-02]], device='cuda:0')/tensor([[3.8109e-03, 1.6864e-02, 1.1312e-02, 8.7787e-03, 6.3528e-04, 6.9567e-03,
         4.1902e-03, 2.8889e-02, 2.3975e-02, 5.6754e-03, 4.6460e-03, 2.5893e-03,
         7.7676e-03, 4.3609e-05, 3.6991e-04, 1.5373e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.1224e-04, 3.8109e-03],
        [3.7594e-04, 1.6864e-02],
        [5.7385e-04, 1.1312e-02],
        [1.9506e-04, 8.7787e-03],
        [2.1834e-04, 6.3528e-04],
        [4.4472e-04, 6.9567e-03],
        [4.2771e-04, 4.1902e-03],
        [1.0788e-03, 2.8889e-02],
        [1.5337e-03, 2.3975e-02],
        [1.8926e-04, 5.6754e-03],
        [2.7593e-04, 4.6460e-03],
        [6.9715e-04, 2.5893e-03],
        [4.7412e-04, 7.7676e-03],
        [9.7885e-06, 4.3609e-05],
        [1.7339e-04, 3.6991e-04],
        [9.0593e-04, 1.5373e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2785e-03],
        [1.1462e-03],
        [1.2933e-03],
        [3.9143e-04],
        [8.8683e-04],
        [1.4672e-04],
        [6.4992e-04],
        [2.8638e-04],
        [7.0857e-04],
        [4.0529e-04],
        [1.2551e-04],
        [1.5542e-04],
        [7.2616e-05],
        [4.2570e-04],
        [1.5495e-03],
        [1.9617e-04]], device='cuda:0')/tensor([[1.2785e-03, 1.1462e-03, 1.2933e-03, 3.9143e-04, 8.8683e-04, 1.4672e-04,
         6.4992e-04, 2.8638e-04, 7.0857e-04, 4.0529e-04, 1.2551e-04, 1.5542e-04,
         7.2616e-05, 4.2570e-04, 1.5495e-03, 1.9617e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0102],
        [0.0268],
        [0.0097],
        [0.0130],
        [0.0058],
        [0.0605],
        [0.0058],
        [0.0109],
        [0.0032],
        [0.0100],
        [0.0020],
        [0.0005],
        [0.0034],
        [0.0481],
        [0.0018]], device='cuda:0')/tensor([[0.0010, 0.0102, 0.0268, 0.0097, 0.0130, 0.0058, 0.0605, 0.0058, 0.0109,
         0.0032, 0.0100, 0.0020, 0.0005, 0.0034, 0.0481, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2785e-03, 9.9579e-04],
        [1.1462e-03, 1.0238e-02],
        [1.2933e-03, 2.6778e-02],
        [3.9143e-04, 9.7487e-03],
        [8.8683e-04, 1.3026e-02],
        [1.4672e-04, 5.7901e-03],
        [6.4992e-04, 6.0523e-02],
        [2.8638e-04, 5.7537e-03],
        [7.0857e-04, 1.0947e-02],
        [4.0529e-04, 3.1788e-03],
        [1.2551e-04, 9.9723e-03],
        [1.5542e-04, 1.9837e-03],
        [7.2616e-05, 4.8819e-04],
        [4.2570e-04, 3.4220e-03],
        [1.5495e-03, 4.8053e-02],
        [1.9617e-04, 1.7690e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2510e-03],
        [3.7099e-04],
        [2.9334e-06],
        [6.5911e-04],
        [4.2245e-04],
        [1.2657e-03],
        [1.0920e-03],
        [4.8628e-04],
        [2.0672e-04],
        [7.2685e-04],
        [3.3584e-04],
        [9.0588e-04],
        [5.1273e-04],
        [2.7323e-04],
        [1.2435e-04],
        [2.8715e-04]], device='cuda:0')/tensor([[1.2510e-03, 3.7099e-04, 2.9334e-06, 6.5911e-04, 4.2245e-04, 1.2657e-03,
         1.0920e-03, 4.8628e-04, 2.0672e-04, 7.2685e-04, 3.3584e-04, 9.0588e-04,
         5.1273e-04, 2.7323e-04, 1.2435e-04, 2.8715e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1073e-02],
        [3.4774e-02],
        [1.7124e-05],
        [1.8762e-03],
        [1.2202e-02],
        [1.0876e-02],
        [2.5104e-02],
        [2.4071e-03],
        [2.0814e-03],
        [1.5613e-02],
        [3.3076e-03],
        [3.2826e-02],
        [1.2644e-02],
        [1.2945e-03],
        [1.4365e-03],
        [4.3838e-04]], device='cuda:0')/tensor([[1.1073e-02, 3.4774e-02, 1.7124e-05, 1.8762e-03, 1.2202e-02, 1.0876e-02,
         2.5104e-02, 2.4071e-03, 2.0814e-03, 1.5613e-02, 3.3076e-03, 3.2826e-02,
         1.2644e-02, 1.2945e-03, 1.4365e-03, 4.3838e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2510e-03, 1.1073e-02],
        [3.7099e-04, 3.4774e-02],
        [2.9334e-06, 1.7124e-05],
        [6.5911e-04, 1.8762e-03],
        [4.2245e-04, 1.2202e-02],
        [1.2657e-03, 1.0876e-02],
        [1.0920e-03, 2.5104e-02],
        [4.8628e-04, 2.4071e-03],
        [2.0672e-04, 2.0814e-03],
        [7.2685e-04, 1.5613e-02],
        [3.3584e-04, 3.3076e-03],
        [9.0588e-04, 3.2826e-02],
        [5.1273e-04, 1.2644e-02],
        [2.7323e-04, 1.2945e-03],
        [1.2435e-04, 1.4365e-03],
        [2.8715e-04, 4.3838e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0007],
        [0.0002],
        [0.0010],
        [0.0009],
        [0.0004],
        [0.0003],
        [0.0012],
        [0.0003],
        [0.0032],
        [0.0005],
        [0.0001],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0010, 0.0002, 0.0007, 0.0002, 0.0010, 0.0009, 0.0004,
         0.0003, 0.0012, 0.0003, 0.0032, 0.0005, 0.0001, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0080],
        [0.0003],
        [0.0067],
        [0.0063],
        [0.0011],
        [0.0022],
        [0.0012],
        [0.0311],
        [0.0020],
        [0.0209],
        [0.0214],
        [0.0047],
        [0.0086],
        [0.0039],
        [0.0018],
        [0.0089]], device='cuda:0')/tensor([[0.0080, 0.0003, 0.0067, 0.0063, 0.0011, 0.0022, 0.0012, 0.0311, 0.0020,
         0.0209, 0.0214, 0.0047, 0.0086, 0.0039, 0.0018, 0.0089]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0080],
        [0.0002, 0.0003],
        [0.0010, 0.0067],
        [0.0002, 0.0063],
        [0.0007, 0.0011],
        [0.0002, 0.0022],
        [0.0010, 0.0012],
        [0.0009, 0.0311],
        [0.0004, 0.0020],
        [0.0003, 0.0209],
        [0.0012, 0.0214],
        [0.0003, 0.0047],
        [0.0032, 0.0086],
        [0.0005, 0.0039],
        [0.0001, 0.0018],
        [0.0005, 0.0089]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.9445e-03],
        [1.7977e-04],
        [1.4016e-04],
        [4.3965e-04],
        [7.5311e-04],
        [8.5380e-04],
        [7.2978e-04],
        [1.5144e-04],
        [8.4980e-05],
        [4.0850e-04],
        [1.8336e-04],
        [9.9176e-04],
        [8.0387e-04],
        [3.8981e-04],
        [8.7774e-04],
        [1.1309e-04]], device='cuda:0')/tensor([[2.9445e-03, 1.7977e-04, 1.4016e-04, 4.3965e-04, 7.5311e-04, 8.5380e-04,
         7.2978e-04, 1.5144e-04, 8.4980e-05, 4.0850e-04, 1.8336e-04, 9.9176e-04,
         8.0387e-04, 3.8981e-04, 8.7774e-04, 1.1309e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.8965e-02],
        [4.2873e-03],
        [1.0230e-02],
        [1.3955e-02],
        [3.5222e-02],
        [1.4153e-03],
        [4.9545e-04],
        [9.2680e-03],
        [3.8422e-04],
        [1.0050e-02],
        [8.8505e-04],
        [9.4652e-04],
        [5.5519e-03],
        [4.3852e-03],
        [1.0848e-02],
        [9.2541e-05]], device='cuda:0')/tensor([[2.8965e-02, 4.2873e-03, 1.0230e-02, 1.3955e-02, 3.5222e-02, 1.4153e-03,
         4.9545e-04, 9.2680e-03, 3.8422e-04, 1.0050e-02, 8.8505e-04, 9.4652e-04,
         5.5519e-03, 4.3852e-03, 1.0848e-02, 9.2541e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.9445e-03, 2.8965e-02],
        [1.7977e-04, 4.2873e-03],
        [1.4016e-04, 1.0230e-02],
        [4.3965e-04, 1.3955e-02],
        [7.5311e-04, 3.5222e-02],
        [8.5380e-04, 1.4153e-03],
        [7.2978e-04, 4.9545e-04],
        [1.5144e-04, 9.2680e-03],
        [8.4980e-05, 3.8422e-04],
        [4.0850e-04, 1.0050e-02],
        [1.8336e-04, 8.8505e-04],
        [9.9176e-04, 9.4652e-04],
        [8.0387e-04, 5.5519e-03],
        [3.8981e-04, 4.3852e-03],
        [8.7774e-04, 1.0848e-02],
        [1.1309e-04, 9.2541e-05]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0002],
        [0.0022],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0011],
        [0.0025],
        [0.0020],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0002, 0.0022, 0.0005, 0.0003, 0.0003, 0.0004, 0.0007,
         0.0003, 0.0005, 0.0010, 0.0011, 0.0025, 0.0020, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0031],
        [0.0143],
        [0.0035],
        [0.0043],
        [0.0291],
        [0.0042],
        [0.0128],
        [0.0015],
        [0.0024],
        [0.0007],
        [0.0084],
        [0.0050],
        [0.0587],
        [0.0494],
        [0.0208],
        [0.0005]], device='cuda:0')/tensor([[0.0031, 0.0143, 0.0035, 0.0043, 0.0291, 0.0042, 0.0128, 0.0015, 0.0024,
         0.0007, 0.0084, 0.0050, 0.0587, 0.0494, 0.0208, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0031],
        [0.0005, 0.0143],
        [0.0002, 0.0035],
        [0.0022, 0.0043],
        [0.0005, 0.0291],
        [0.0003, 0.0042],
        [0.0003, 0.0128],
        [0.0004, 0.0015],
        [0.0007, 0.0024],
        [0.0003, 0.0007],
        [0.0005, 0.0084],
        [0.0010, 0.0050],
        [0.0011, 0.0587],
        [0.0025, 0.0494],
        [0.0020, 0.0208],
        [0.0003, 0.0005]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6405e-04],
        [4.1470e-04],
        [7.7465e-04],
        [3.9151e-04],
        [5.2530e-04],
        [6.3401e-04],
        [2.8768e-03],
        [3.9124e-04],
        [3.2286e-04],
        [6.7892e-04],
        [1.5162e-04],
        [1.3259e-03],
        [4.6036e-05],
        [4.9157e-04],
        [2.8098e-03],
        [1.7835e-03]], device='cuda:0')/tensor([[1.6405e-04, 4.1470e-04, 7.7465e-04, 3.9151e-04, 5.2530e-04, 6.3401e-04,
         2.8768e-03, 3.9124e-04, 3.2286e-04, 6.7892e-04, 1.5162e-04, 1.3259e-03,
         4.6036e-05, 4.9157e-04, 2.8098e-03, 1.7835e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0002],
        [0.0031],
        [0.0083],
        [0.0198],
        [0.0237],
        [0.0228],
        [0.0099],
        [0.0212],
        [0.0036],
        [0.0016],
        [0.0019],
        [0.0617],
        [0.0003],
        [0.0004],
        [0.0183],
        [0.0110]], device='cuda:0')/tensor([[0.0002, 0.0031, 0.0083, 0.0198, 0.0237, 0.0228, 0.0099, 0.0212, 0.0036,
         0.0016, 0.0019, 0.0617, 0.0003, 0.0004, 0.0183, 0.0110]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6405e-04, 2.4156e-04],
        [4.1470e-04, 3.0550e-03],
        [7.7465e-04, 8.3000e-03],
        [3.9151e-04, 1.9753e-02],
        [5.2530e-04, 2.3671e-02],
        [6.3401e-04, 2.2812e-02],
        [2.8768e-03, 9.8595e-03],
        [3.9124e-04, 2.1247e-02],
        [3.2286e-04, 3.6096e-03],
        [6.7892e-04, 1.6304e-03],
        [1.5162e-04, 1.9176e-03],
        [1.3259e-03, 6.1653e-02],
        [4.6036e-05, 2.9567e-04],
        [4.9157e-04, 4.4039e-04],
        [2.8098e-03, 1.8256e-02],
        [1.7835e-03, 1.0998e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0001],
        [0.0011],
        [0.0005],
        [0.0002],
        [0.0012],
        [0.0001],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0001, 0.0011, 0.0005, 0.0002, 0.0012, 0.0001, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[2.6410e-03],
        [2.8061e-03],
        [1.8931e-03],
        [7.2313e-05],
        [2.3963e-02],
        [2.2641e-02],
        [4.0588e-04],
        [4.7521e-03]], device='cuda:0')/tensor([[2.6410e-03, 2.8061e-03, 1.8931e-03, 7.2313e-05, 2.3963e-02, 2.2641e-02,
         4.0588e-04, 4.7521e-03]], device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[1.0098e-04, 2.6410e-03],
        [1.0889e-03, 2.8061e-03],
        [5.2776e-04, 1.8931e-03],
        [1.8162e-04, 7.2313e-05],
        [1.1754e-03, 2.3963e-02],
        [1.3504e-04, 2.2641e-02],
        [3.0984e-04, 4.0588e-04],
        [3.3290e-04, 4.7521e-03]], device='cuda:0')
acc:  0.54
Time taken to execute the de SA task with prompt type active, variation 3 and batchsize 16: 0:03:19.263355
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA active 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 344.17it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0010],
        [0.0009],
        [0.0011],
        [0.0013],
        [0.0009],
        [0.0006],
        [0.0017],
        [0.0011],
        [0.0004],
        [0.0018],
        [0.0002],
        [0.0004],
        [0.0023],
        [0.0007],
        [0.0008]], device='cuda:0')/tensor([[0.0023, 0.0010, 0.0009, 0.0011, 0.0013, 0.0009, 0.0006, 0.0017, 0.0011,
         0.0004, 0.0018, 0.0002, 0.0004, 0.0023, 0.0007, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2238e-03],
        [2.9239e-03],
        [1.5523e-02],
        [7.4612e-03],
        [1.2073e-03],
        [3.5270e-02],
        [1.7664e-02],
        [1.8465e-03],
        [1.1448e-01],
        [5.8376e-05],
        [5.4587e-03],
        [9.5117e-03],
        [1.9624e-03],
        [3.9432e-03],
        [4.0526e-03],
        [7.7885e-03]], device='cuda:0')/tensor([[3.2238e-03, 2.9239e-03, 1.5523e-02, 7.4612e-03, 1.2073e-03, 3.5270e-02,
         1.7664e-02, 1.8465e-03, 1.1448e-01, 5.8376e-05, 5.4587e-03, 9.5117e-03,
         1.9624e-03, 3.9432e-03, 4.0526e-03, 7.7885e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2655e-03, 3.2238e-03],
        [9.7697e-04, 2.9239e-03],
        [9.2241e-04, 1.5523e-02],
        [1.0824e-03, 7.4612e-03],
        [1.2999e-03, 1.2073e-03],
        [9.4235e-04, 3.5270e-02],
        [6.3507e-04, 1.7664e-02],
        [1.7072e-03, 1.8465e-03],
        [1.1115e-03, 1.1448e-01],
        [4.4073e-04, 5.8376e-05],
        [1.8045e-03, 5.4587e-03],
        [2.0884e-04, 9.5117e-03],
        [4.0620e-04, 1.9624e-03],
        [2.3127e-03, 3.9432e-03],
        [6.8945e-04, 4.0526e-03],
        [7.8202e-04, 7.7885e-03]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0053],
        [0.0004],
        [0.0018],
        [0.0004],
        [0.0010],
        [0.0006],
        [0.0009],
        [0.0003],
        [0.0004],
        [0.0008],
        [0.0008],
        [0.0009],
        [0.0021],
        [0.0009],
        [0.0013],
        [0.0012]], device='cuda:0')/tensor([[0.0053, 0.0004, 0.0018, 0.0004, 0.0010, 0.0006, 0.0009, 0.0003, 0.0004,
         0.0008, 0.0008, 0.0009, 0.0021, 0.0009, 0.0013, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1000],
        [0.0012],
        [0.0269],
        [0.0115],
        [0.0063],
        [0.0441],
        [0.0015],
        [0.0073],
        [0.0007],
        [0.0007],
        [0.0172],
        [0.0216],
        [0.0007],
        [0.0398],
        [0.0013],
        [0.0017]], device='cuda:0')/tensor([[0.1000, 0.0012, 0.0269, 0.0115, 0.0063, 0.0441, 0.0015, 0.0073, 0.0007,
         0.0007, 0.0172, 0.0216, 0.0007, 0.0398, 0.0013, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0053, 0.1000],
        [0.0004, 0.0012],
        [0.0018, 0.0269],
        [0.0004, 0.0115],
        [0.0010, 0.0063],
        [0.0006, 0.0441],
        [0.0009, 0.0015],
        [0.0003, 0.0073],
        [0.0004, 0.0007],
        [0.0008, 0.0007],
        [0.0008, 0.0172],
        [0.0009, 0.0216],
        [0.0021, 0.0007],
        [0.0009, 0.0398],
        [0.0013, 0.0013],
        [0.0012, 0.0017]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0006],
        [0.0046],
        [0.0009],
        [0.0011],
        [0.0009],
        [0.0016],
        [0.0013],
        [0.0004],
        [0.0008],
        [0.0004],
        [0.0008],
        [0.0002],
        [0.0007],
        [0.0011]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0006, 0.0046, 0.0009, 0.0011, 0.0009, 0.0016, 0.0013,
         0.0004, 0.0008, 0.0004, 0.0008, 0.0002, 0.0007, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.9616e-02],
        [2.5679e-03],
        [1.7332e-02],
        [5.0843e-02],
        [5.2793e-05],
        [5.6618e-02],
        [2.4758e-03],
        [7.0390e-03],
        [6.5553e-02],
        [8.4468e-04],
        [6.7572e-03],
        [1.2186e-02],
        [4.6315e-02],
        [2.0759e-03],
        [2.0547e-02],
        [9.0289e-03]], device='cuda:0')/tensor([[4.9616e-02, 2.5679e-03, 1.7332e-02, 5.0843e-02, 5.2793e-05, 5.6618e-02,
         2.4758e-03, 7.0390e-03, 6.5553e-02, 8.4468e-04, 6.7572e-03, 1.2186e-02,
         4.6315e-02, 2.0759e-03, 2.0547e-02, 9.0289e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5058e-03, 4.9616e-02],
        [1.8805e-04, 2.5679e-03],
        [5.6297e-04, 1.7332e-02],
        [4.6191e-03, 5.0843e-02],
        [8.6107e-04, 5.2793e-05],
        [1.1155e-03, 5.6618e-02],
        [9.4786e-04, 2.4758e-03],
        [1.5760e-03, 7.0390e-03],
        [1.2778e-03, 6.5553e-02],
        [4.1068e-04, 8.4468e-04],
        [8.3373e-04, 6.7572e-03],
        [4.2261e-04, 1.2186e-02],
        [8.4178e-04, 4.6315e-02],
        [2.4014e-04, 2.0759e-03],
        [7.0164e-04, 2.0547e-02],
        [1.1401e-03, 9.0289e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0012],
        [0.0005],
        [0.0007],
        [0.0012],
        [0.0004],
        [0.0009],
        [0.0004],
        [0.0022],
        [0.0022],
        [0.0004],
        [0.0025],
        [0.0005],
        [0.0013],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0011, 0.0012, 0.0005, 0.0007, 0.0012, 0.0004, 0.0009, 0.0004, 0.0022,
         0.0022, 0.0004, 0.0025, 0.0005, 0.0013, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0413],
        [0.0520],
        [0.0125],
        [0.0005],
        [0.0576],
        [0.0127],
        [0.0342],
        [0.0037],
        [0.0154],
        [0.0134],
        [0.0170],
        [0.0093],
        [0.0040],
        [0.0082],
        [0.0030],
        [0.0016]], device='cuda:0')/tensor([[0.0413, 0.0520, 0.0125, 0.0005, 0.0576, 0.0127, 0.0342, 0.0037, 0.0154,
         0.0134, 0.0170, 0.0093, 0.0040, 0.0082, 0.0030, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0413],
        [0.0012, 0.0520],
        [0.0005, 0.0125],
        [0.0007, 0.0005],
        [0.0012, 0.0576],
        [0.0004, 0.0127],
        [0.0009, 0.0342],
        [0.0004, 0.0037],
        [0.0022, 0.0154],
        [0.0022, 0.0134],
        [0.0004, 0.0170],
        [0.0025, 0.0093],
        [0.0005, 0.0040],
        [0.0013, 0.0082],
        [0.0004, 0.0030],
        [0.0003, 0.0016]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.4697e-04],
        [4.5646e-04],
        [8.5660e-04],
        [7.3283e-04],
        [4.6594e-03],
        [5.5647e-04],
        [5.0201e-04],
        [2.3315e-04],
        [2.9012e-04],
        [2.3060e-03],
        [1.2638e-03],
        [9.0297e-04],
        [1.2562e-03],
        [9.6588e-05],
        [8.8593e-04],
        [5.5757e-04]], device='cuda:0')/tensor([[2.4697e-04, 4.5646e-04, 8.5660e-04, 7.3283e-04, 4.6594e-03, 5.5647e-04,
         5.0201e-04, 2.3315e-04, 2.9012e-04, 2.3060e-03, 1.2638e-03, 9.0297e-04,
         1.2562e-03, 9.6588e-05, 8.8593e-04, 5.5757e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0027],
        [0.0099],
        [0.0034],
        [0.0030],
        [0.0195],
        [0.0013],
        [0.0014],
        [0.0053],
        [0.0002],
        [0.0442],
        [0.0050],
        [0.0113],
        [0.0034],
        [0.0037],
        [0.0033],
        [0.0005]], device='cuda:0')/tensor([[0.0027, 0.0099, 0.0034, 0.0030, 0.0195, 0.0013, 0.0014, 0.0053, 0.0002,
         0.0442, 0.0050, 0.0113, 0.0034, 0.0037, 0.0033, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4697e-04, 2.7482e-03],
        [4.5646e-04, 9.9305e-03],
        [8.5660e-04, 3.4272e-03],
        [7.3283e-04, 2.9654e-03],
        [4.6594e-03, 1.9474e-02],
        [5.5647e-04, 1.3276e-03],
        [5.0201e-04, 1.3549e-03],
        [2.3315e-04, 5.3246e-03],
        [2.9012e-04, 1.6398e-04],
        [2.3060e-03, 4.4226e-02],
        [1.2638e-03, 5.0339e-03],
        [9.0297e-04, 1.1337e-02],
        [1.2562e-03, 3.4194e-03],
        [9.6588e-05, 3.6838e-03],
        [8.8593e-04, 3.2834e-03],
        [5.5757e-04, 5.4954e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0023],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0008],
        [0.0048],
        [0.0020],
        [0.0001],
        [0.0013],
        [0.0008],
        [0.0019]], device='cuda:0')/tensor([[0.0008, 0.0023, 0.0004, 0.0006, 0.0005, 0.0005, 0.0005, 0.0004, 0.0005,
         0.0008, 0.0048, 0.0020, 0.0001, 0.0013, 0.0008, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.2353],
        [0.0020],
        [0.0053],
        [0.0191],
        [0.0110],
        [0.0040],
        [0.0008],
        [0.0867],
        [0.0114],
        [0.1081],
        [0.0446],
        [0.0568],
        [0.0105],
        [0.0062],
        [0.0022],
        [0.0720]], device='cuda:0')/tensor([[0.2353, 0.0020, 0.0053, 0.0191, 0.0110, 0.0040, 0.0008, 0.0867, 0.0114,
         0.1081, 0.0446, 0.0568, 0.0105, 0.0062, 0.0022, 0.0720]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.4299e-04, 2.3526e-01],
        [2.2916e-03, 1.9867e-03],
        [3.5505e-04, 5.3256e-03],
        [5.7588e-04, 1.9097e-02],
        [5.0021e-04, 1.0981e-02],
        [5.3721e-04, 4.0283e-03],
        [5.0905e-04, 7.8763e-04],
        [3.8911e-04, 8.6719e-02],
        [4.8575e-04, 1.1436e-02],
        [8.4142e-04, 1.0806e-01],
        [4.8296e-03, 4.4624e-02],
        [1.9677e-03, 5.6773e-02],
        [1.0593e-04, 1.0480e-02],
        [1.2689e-03, 6.2482e-03],
        [7.7596e-04, 2.1512e-03],
        [1.9172e-03, 7.2044e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0017],
        [0.0012],
        [0.0004],
        [0.0021],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0007],
        [0.0014],
        [0.0002],
        [0.0004],
        [0.0020],
        [0.0002],
        [0.0010],
        [0.0027]], device='cuda:0')/tensor([[0.0016, 0.0017, 0.0012, 0.0004, 0.0021, 0.0002, 0.0004, 0.0005, 0.0007,
         0.0014, 0.0002, 0.0004, 0.0020, 0.0002, 0.0010, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0271],
        [0.0615],
        [0.0002],
        [0.0044],
        [0.0087],
        [0.0009],
        [0.0016],
        [0.0360],
        [0.0058],
        [0.0437],
        [0.0047],
        [0.0832],
        [0.0097],
        [0.0023],
        [0.0690]], device='cuda:0')/tensor([[0.0024, 0.0271, 0.0615, 0.0002, 0.0044, 0.0087, 0.0009, 0.0016, 0.0360,
         0.0058, 0.0437, 0.0047, 0.0832, 0.0097, 0.0023, 0.0690]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.0024],
        [0.0017, 0.0271],
        [0.0012, 0.0615],
        [0.0004, 0.0002],
        [0.0021, 0.0044],
        [0.0002, 0.0087],
        [0.0004, 0.0009],
        [0.0005, 0.0016],
        [0.0007, 0.0360],
        [0.0014, 0.0058],
        [0.0002, 0.0437],
        [0.0004, 0.0047],
        [0.0020, 0.0832],
        [0.0002, 0.0097],
        [0.0010, 0.0023],
        [0.0027, 0.0690]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0010],
        [0.0002],
        [0.0007],
        [0.0006],
        [0.0001],
        [0.0010],
        [0.0014],
        [0.0001],
        [0.0011],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0017],
        [0.0006],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0002, 0.0007, 0.0006, 0.0001, 0.0010, 0.0014, 0.0001,
         0.0011, 0.0004, 0.0007, 0.0002, 0.0017, 0.0006, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0067],
        [0.0051],
        [0.0011],
        [0.0107],
        [0.0128],
        [0.0005],
        [0.0002],
        [0.0375],
        [0.0016],
        [0.0057],
        [0.0110],
        [0.0059],
        [0.0119],
        [0.0201],
        [0.0004],
        [0.0027]], device='cuda:0')/tensor([[0.0067, 0.0051, 0.0011, 0.0107, 0.0128, 0.0005, 0.0002, 0.0375, 0.0016,
         0.0057, 0.0110, 0.0059, 0.0119, 0.0201, 0.0004, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0067],
        [0.0010, 0.0051],
        [0.0002, 0.0011],
        [0.0007, 0.0107],
        [0.0006, 0.0128],
        [0.0001, 0.0005],
        [0.0010, 0.0002],
        [0.0014, 0.0375],
        [0.0001, 0.0016],
        [0.0011, 0.0057],
        [0.0004, 0.0110],
        [0.0007, 0.0059],
        [0.0002, 0.0119],
        [0.0017, 0.0201],
        [0.0006, 0.0004],
        [0.0003, 0.0027]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0009],
        [0.0011],
        [0.0002],
        [0.0019],
        [0.0005],
        [0.0026],
        [0.0010],
        [0.0015],
        [0.0014],
        [0.0007],
        [0.0021],
        [0.0025],
        [0.0020],
        [0.0016],
        [0.0023]], device='cuda:0')/tensor([[0.0001, 0.0009, 0.0011, 0.0002, 0.0019, 0.0005, 0.0026, 0.0010, 0.0015,
         0.0014, 0.0007, 0.0021, 0.0025, 0.0020, 0.0016, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0097],
        [0.0160],
        [0.0142],
        [0.0110],
        [0.0206],
        [0.0319],
        [0.0027],
        [0.0003],
        [0.0123],
        [0.0172],
        [0.0048],
        [0.0073],
        [0.0015],
        [0.0217],
        [0.0378],
        [0.0694]], device='cuda:0')/tensor([[0.0097, 0.0160, 0.0142, 0.0110, 0.0206, 0.0319, 0.0027, 0.0003, 0.0123,
         0.0172, 0.0048, 0.0073, 0.0015, 0.0217, 0.0378, 0.0694]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0097],
        [0.0009, 0.0160],
        [0.0011, 0.0142],
        [0.0002, 0.0110],
        [0.0019, 0.0206],
        [0.0005, 0.0319],
        [0.0026, 0.0027],
        [0.0010, 0.0003],
        [0.0015, 0.0123],
        [0.0014, 0.0172],
        [0.0007, 0.0048],
        [0.0021, 0.0073],
        [0.0025, 0.0015],
        [0.0020, 0.0217],
        [0.0016, 0.0378],
        [0.0023, 0.0694]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0026],
        [0.0018],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0018],
        [0.0010],
        [0.0005],
        [0.0021],
        [0.0016],
        [0.0006],
        [0.0009],
        [0.0001],
        [0.0007],
        [0.0018]], device='cuda:0')/tensor([[0.0026, 0.0018, 0.0004, 0.0006, 0.0005, 0.0006, 0.0018, 0.0010, 0.0005,
         0.0021, 0.0016, 0.0006, 0.0009, 0.0001, 0.0007, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0040],
        [0.0163],
        [0.0053],
        [0.0239],
        [0.0631],
        [0.0202],
        [0.0105],
        [0.0023],
        [0.0051],
        [0.0259],
        [0.0064],
        [0.0049],
        [0.0033],
        [0.0029],
        [0.0327],
        [0.0037]], device='cuda:0')/tensor([[0.0040, 0.0163, 0.0053, 0.0239, 0.0631, 0.0202, 0.0105, 0.0023, 0.0051,
         0.0259, 0.0064, 0.0049, 0.0033, 0.0029, 0.0327, 0.0037]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0026, 0.0040],
        [0.0018, 0.0163],
        [0.0004, 0.0053],
        [0.0006, 0.0239],
        [0.0005, 0.0631],
        [0.0006, 0.0202],
        [0.0018, 0.0105],
        [0.0010, 0.0023],
        [0.0005, 0.0051],
        [0.0021, 0.0259],
        [0.0016, 0.0064],
        [0.0006, 0.0049],
        [0.0009, 0.0033],
        [0.0001, 0.0029],
        [0.0007, 0.0327],
        [0.0018, 0.0037]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0018],
        [0.0016],
        [0.0006],
        [0.0049],
        [0.0006],
        [0.0008],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0009],
        [0.0003],
        [0.0012],
        [0.0003],
        [0.0012],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0018, 0.0016, 0.0006, 0.0049, 0.0006, 0.0008, 0.0005, 0.0006,
         0.0004, 0.0009, 0.0003, 0.0012, 0.0003, 0.0012, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0359],
        [0.0143],
        [0.0939],
        [0.0202],
        [0.0114],
        [0.0321],
        [0.0540],
        [0.0007],
        [0.0011],
        [0.0128],
        [0.0167],
        [0.0052],
        [0.0048],
        [0.0084],
        [0.0165],
        [0.0040]], device='cuda:0')/tensor([[0.0359, 0.0143, 0.0939, 0.0202, 0.0114, 0.0321, 0.0540, 0.0007, 0.0011,
         0.0128, 0.0167, 0.0052, 0.0048, 0.0084, 0.0165, 0.0040]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0359],
        [0.0018, 0.0143],
        [0.0016, 0.0939],
        [0.0006, 0.0202],
        [0.0049, 0.0114],
        [0.0006, 0.0321],
        [0.0008, 0.0540],
        [0.0005, 0.0007],
        [0.0006, 0.0011],
        [0.0004, 0.0128],
        [0.0009, 0.0167],
        [0.0003, 0.0052],
        [0.0012, 0.0048],
        [0.0003, 0.0084],
        [0.0012, 0.0165],
        [0.0007, 0.0040]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0006],
        [0.0005],
        [0.0003],
        [0.0036],
        [0.0007],
        [0.0015],
        [0.0015],
        [0.0002],
        [0.0011],
        [0.0006],
        [0.0054],
        [0.0005],
        [0.0007],
        [0.0013],
        [0.0018]], device='cuda:0')/tensor([[0.0009, 0.0006, 0.0005, 0.0003, 0.0036, 0.0007, 0.0015, 0.0015, 0.0002,
         0.0011, 0.0006, 0.0054, 0.0005, 0.0007, 0.0013, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2548e-02],
        [8.9843e-05],
        [5.0365e-03],
        [6.2722e-04],
        [2.8518e-03],
        [2.5607e-02],
        [7.4466e-04],
        [1.3170e-03],
        [1.1948e-02],
        [1.5057e-02],
        [6.0730e-02],
        [1.1742e-02],
        [7.6372e-03],
        [5.7259e-03],
        [2.1174e-02],
        [1.1003e-02]], device='cuda:0')/tensor([[1.2548e-02, 8.9843e-05, 5.0365e-03, 6.2722e-04, 2.8518e-03, 2.5607e-02,
         7.4466e-04, 1.3170e-03, 1.1948e-02, 1.5057e-02, 6.0730e-02, 1.1742e-02,
         7.6372e-03, 5.7259e-03, 2.1174e-02, 1.1003e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.5352e-04, 1.2548e-02],
        [6.1495e-04, 8.9843e-05],
        [5.1607e-04, 5.0365e-03],
        [2.9789e-04, 6.2722e-04],
        [3.5814e-03, 2.8518e-03],
        [7.2919e-04, 2.5607e-02],
        [1.4651e-03, 7.4466e-04],
        [1.5494e-03, 1.3170e-03],
        [1.7103e-04, 1.1948e-02],
        [1.1393e-03, 1.5057e-02],
        [5.5433e-04, 6.0730e-02],
        [5.4176e-03, 1.1742e-02],
        [5.3245e-04, 7.6372e-03],
        [7.0528e-04, 5.7259e-03],
        [1.3028e-03, 2.1174e-02],
        [1.7508e-03, 1.1003e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0016],
        [0.0007],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0018],
        [0.0030],
        [0.0015]], device='cuda:0')/tensor([[0.0016, 0.0007, 0.0006, 0.0005, 0.0005, 0.0018, 0.0030, 0.0015]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0803],
        [0.0091],
        [0.0060],
        [0.0121],
        [0.0101],
        [0.0501],
        [0.0086],
        [0.0652]], device='cuda:0')/tensor([[0.0803, 0.0091, 0.0060, 0.0121, 0.0101, 0.0501, 0.0086, 0.0652]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0016, 0.0803],
        [0.0007, 0.0091],
        [0.0006, 0.0060],
        [0.0005, 0.0121],
        [0.0005, 0.0101],
        [0.0018, 0.0501],
        [0.0030, 0.0086],
        [0.0015, 0.0652]], device='cuda:0')
acc:  0.595
Time taken to execute the de SA task with prompt type active, variation 4 and batchsize 16: 0:03:19.230637
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA active 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 347.76it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0009],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0014],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0009],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0031],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0009, 0.0005, 0.0004, 0.0004, 0.0004, 0.0014, 0.0006, 0.0006,
         0.0002, 0.0009, 0.0005, 0.0003, 0.0004, 0.0031, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0029],
        [0.0821],
        [0.0034],
        [0.0126],
        [0.0027],
        [0.0171],
        [0.0158],
        [0.0015],
        [0.0829],
        [0.0014],
        [0.0010],
        [0.0049],
        [0.0090],
        [0.1408],
        [0.0080],
        [0.1034]], device='cuda:0')/tensor([[0.0029, 0.0821, 0.0034, 0.0126, 0.0027, 0.0171, 0.0158, 0.0015, 0.0829,
         0.0014, 0.0010, 0.0049, 0.0090, 0.1408, 0.0080, 0.1034]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0029],
        [0.0009, 0.0821],
        [0.0005, 0.0034],
        [0.0004, 0.0126],
        [0.0004, 0.0027],
        [0.0004, 0.0171],
        [0.0014, 0.0158],
        [0.0006, 0.0015],
        [0.0006, 0.0829],
        [0.0002, 0.0014],
        [0.0009, 0.0010],
        [0.0005, 0.0049],
        [0.0003, 0.0090],
        [0.0004, 0.1408],
        [0.0031, 0.0080],
        [0.0011, 0.1034]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0011],
        [0.0016],
        [0.0002],
        [0.0045],
        [0.0009],
        [0.0009],
        [0.0003],
        [0.0015],
        [0.0001],
        [0.0006],
        [0.0006],
        [0.0003],
        [0.0001],
        [0.0012],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0011, 0.0016, 0.0002, 0.0045, 0.0009, 0.0009, 0.0003, 0.0015,
         0.0001, 0.0006, 0.0006, 0.0003, 0.0001, 0.0012, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0042],
        [0.0450],
        [0.0217],
        [0.0150],
        [0.0702],
        [0.0016],
        [0.0056],
        [0.0006],
        [0.0537],
        [0.0134],
        [0.0062],
        [0.0531],
        [0.0002],
        [0.0128],
        [0.0330],
        [0.0098]], device='cuda:0')/tensor([[0.0042, 0.0450, 0.0217, 0.0150, 0.0702, 0.0016, 0.0056, 0.0006, 0.0537,
         0.0134, 0.0062, 0.0531, 0.0002, 0.0128, 0.0330, 0.0098]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0042],
        [0.0011, 0.0450],
        [0.0016, 0.0217],
        [0.0002, 0.0150],
        [0.0045, 0.0702],
        [0.0009, 0.0016],
        [0.0009, 0.0056],
        [0.0003, 0.0006],
        [0.0015, 0.0537],
        [0.0001, 0.0134],
        [0.0006, 0.0062],
        [0.0006, 0.0531],
        [0.0003, 0.0002],
        [0.0001, 0.0128],
        [0.0012, 0.0330],
        [0.0005, 0.0098]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0012],
        [0.0003],
        [0.0020],
        [0.0009],
        [0.0005],
        [0.0017],
        [0.0001],
        [0.0002],
        [0.0007],
        [0.0030],
        [0.0004],
        [0.0002],
        [0.0011],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0012, 0.0003, 0.0020, 0.0009, 0.0005, 0.0017, 0.0001, 0.0002,
         0.0007, 0.0030, 0.0004, 0.0002, 0.0011, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0040],
        [0.0145],
        [0.0290],
        [0.0177],
        [0.0105],
        [0.0040],
        [0.0025],
        [0.0003],
        [0.0029],
        [0.0388],
        [0.0030],
        [0.0002],
        [0.0065],
        [0.0023],
        [0.0025]], device='cuda:0')/tensor([[0.0025, 0.0040, 0.0145, 0.0290, 0.0177, 0.0105, 0.0040, 0.0025, 0.0003,
         0.0029, 0.0388, 0.0030, 0.0002, 0.0065, 0.0023, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0025],
        [0.0012, 0.0040],
        [0.0003, 0.0145],
        [0.0020, 0.0290],
        [0.0009, 0.0177],
        [0.0005, 0.0105],
        [0.0017, 0.0040],
        [0.0001, 0.0025],
        [0.0002, 0.0003],
        [0.0007, 0.0029],
        [0.0030, 0.0388],
        [0.0004, 0.0030],
        [0.0002, 0.0002],
        [0.0011, 0.0065],
        [0.0004, 0.0023],
        [0.0002, 0.0025]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0004],
        [0.0019],
        [0.0009],
        [0.0026],
        [0.0003],
        [0.0008],
        [0.0008],
        [0.0004],
        [0.0003],
        [0.0015],
        [0.0003],
        [0.0007],
        [0.0005],
        [0.0011],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0004, 0.0019, 0.0009, 0.0026, 0.0003, 0.0008, 0.0008, 0.0004,
         0.0003, 0.0015, 0.0003, 0.0007, 0.0005, 0.0011, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0073],
        [0.0133],
        [0.0033],
        [0.0100],
        [0.0592],
        [0.0044],
        [0.0137],
        [0.0025],
        [0.0161],
        [0.0025],
        [0.0440],
        [0.0064],
        [0.0068],
        [0.0005],
        [0.0019],
        [0.0290]], device='cuda:0')/tensor([[0.0073, 0.0133, 0.0033, 0.0100, 0.0592, 0.0044, 0.0137, 0.0025, 0.0161,
         0.0025, 0.0440, 0.0064, 0.0068, 0.0005, 0.0019, 0.0290]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0073],
        [0.0004, 0.0133],
        [0.0019, 0.0033],
        [0.0009, 0.0100],
        [0.0026, 0.0592],
        [0.0003, 0.0044],
        [0.0008, 0.0137],
        [0.0008, 0.0025],
        [0.0004, 0.0161],
        [0.0003, 0.0025],
        [0.0015, 0.0440],
        [0.0003, 0.0064],
        [0.0007, 0.0068],
        [0.0005, 0.0005],
        [0.0011, 0.0019],
        [0.0003, 0.0290]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3720e-04],
        [1.6309e-04],
        [1.5807e-03],
        [9.9073e-04],
        [8.1336e-04],
        [2.0065e-04],
        [3.5772e-04],
        [3.9997e-04],
        [8.7828e-04],
        [1.2664e-03],
        [6.7933e-04],
        [3.9609e-04],
        [2.1837e-04],
        [1.6770e-04],
        [3.2509e-06],
        [3.5804e-04]], device='cuda:0')/tensor([[1.3720e-04, 1.6309e-04, 1.5807e-03, 9.9073e-04, 8.1336e-04, 2.0065e-04,
         3.5772e-04, 3.9997e-04, 8.7828e-04, 1.2664e-03, 6.7933e-04, 3.9609e-04,
         2.1837e-04, 1.6770e-04, 3.2509e-06, 3.5804e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.8243e-04],
        [4.0471e-05],
        [1.6955e-03],
        [3.8055e-03],
        [4.5229e-02],
        [3.5977e-04],
        [3.3902e-04],
        [2.3181e-03],
        [4.4801e-02],
        [1.2713e-01],
        [9.9327e-02],
        [3.4161e-02],
        [3.3756e-03],
        [9.4256e-03],
        [2.1941e-05],
        [1.0442e-02]], device='cuda:0')/tensor([[6.8243e-04, 4.0471e-05, 1.6955e-03, 3.8055e-03, 4.5229e-02, 3.5977e-04,
         3.3902e-04, 2.3181e-03, 4.4801e-02, 1.2713e-01, 9.9327e-02, 3.4161e-02,
         3.3756e-03, 9.4256e-03, 2.1941e-05, 1.0442e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3720e-04, 6.8243e-04],
        [1.6309e-04, 4.0471e-05],
        [1.5807e-03, 1.6955e-03],
        [9.9073e-04, 3.8055e-03],
        [8.1336e-04, 4.5229e-02],
        [2.0065e-04, 3.5977e-04],
        [3.5772e-04, 3.3902e-04],
        [3.9997e-04, 2.3181e-03],
        [8.7828e-04, 4.4801e-02],
        [1.2664e-03, 1.2713e-01],
        [6.7933e-04, 9.9327e-02],
        [3.9609e-04, 3.4161e-02],
        [2.1837e-04, 3.3756e-03],
        [1.6770e-04, 9.4256e-03],
        [3.2509e-06, 2.1941e-05],
        [3.5804e-04, 1.0442e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0014],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0005],
        [0.0008],
        [0.0011],
        [0.0003],
        [0.0008],
        [0.0016],
        [0.0004],
        [0.0002],
        [0.0001],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0014, 0.0002, 0.0002, 0.0005, 0.0002, 0.0005, 0.0008, 0.0011,
         0.0003, 0.0008, 0.0016, 0.0004, 0.0002, 0.0001, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0571],
        [0.0015],
        [0.0003],
        [0.0058],
        [0.0108],
        [0.0170],
        [0.0024],
        [0.0059],
        [0.0200],
        [0.0308],
        [0.0193],
        [0.0051],
        [0.0014],
        [0.0043],
        [0.0003]], device='cuda:0')/tensor([[0.0018, 0.0571, 0.0015, 0.0003, 0.0058, 0.0108, 0.0170, 0.0024, 0.0059,
         0.0200, 0.0308, 0.0193, 0.0051, 0.0014, 0.0043, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0018],
        [0.0014, 0.0571],
        [0.0002, 0.0015],
        [0.0002, 0.0003],
        [0.0005, 0.0058],
        [0.0002, 0.0108],
        [0.0005, 0.0170],
        [0.0008, 0.0024],
        [0.0011, 0.0059],
        [0.0003, 0.0200],
        [0.0008, 0.0308],
        [0.0016, 0.0193],
        [0.0004, 0.0051],
        [0.0002, 0.0014],
        [0.0001, 0.0043],
        [0.0011, 0.0003]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0019],
        [0.0007],
        [0.0012],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0012],
        [0.0002],
        [0.0005],
        [0.0001]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0019, 0.0007, 0.0012, 0.0004, 0.0002, 0.0004, 0.0004,
         0.0006, 0.0005, 0.0004, 0.0012, 0.0002, 0.0005, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5342e-04],
        [4.5020e-05],
        [1.1264e-02],
        [3.1056e-02],
        [1.9994e-02],
        [1.5542e-03],
        [8.1806e-03],
        [1.0183e-02],
        [1.4423e-02],
        [2.2739e-03],
        [1.3047e-03],
        [4.8920e-04],
        [1.0288e-03],
        [9.6690e-05],
        [5.6792e-03],
        [1.3474e-04]], device='cuda:0')/tensor([[8.5342e-04, 4.5020e-05, 1.1264e-02, 3.1056e-02, 1.9994e-02, 1.5542e-03,
         8.1806e-03, 1.0183e-02, 1.4423e-02, 2.2739e-03, 1.3047e-03, 4.8920e-04,
         1.0288e-03, 9.6690e-05, 5.6792e-03, 1.3474e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.3962e-04, 8.5342e-04],
        [1.8925e-04, 4.5020e-05],
        [1.9050e-03, 1.1264e-02],
        [7.4314e-04, 3.1056e-02],
        [1.1709e-03, 1.9994e-02],
        [3.6834e-04, 1.5542e-03],
        [2.0791e-04, 8.1806e-03],
        [3.9571e-04, 1.0183e-02],
        [3.7042e-04, 1.4423e-02],
        [5.9010e-04, 2.2739e-03],
        [4.5710e-04, 1.3047e-03],
        [3.6034e-04, 4.8920e-04],
        [1.1593e-03, 1.0288e-03],
        [1.7260e-04, 9.6690e-05],
        [4.6878e-04, 5.6792e-03],
        [1.0032e-04, 1.3474e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0031],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0023]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0005, 0.0002, 0.0004, 0.0006, 0.0002, 0.0003, 0.0003,
         0.0002, 0.0004, 0.0031, 0.0003, 0.0009, 0.0004, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0038],
        [0.0014],
        [0.0015],
        [0.0002],
        [0.0282],
        [0.0004],
        [0.0066],
        [0.0051],
        [0.0135],
        [0.0007],
        [0.0132],
        [0.0102],
        [0.0096],
        [0.0003],
        [0.0066],
        [0.0252]], device='cuda:0')/tensor([[0.0038, 0.0014, 0.0015, 0.0002, 0.0282, 0.0004, 0.0066, 0.0051, 0.0135,
         0.0007, 0.0132, 0.0102, 0.0096, 0.0003, 0.0066, 0.0252]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0038],
        [0.0011, 0.0014],
        [0.0005, 0.0015],
        [0.0002, 0.0002],
        [0.0004, 0.0282],
        [0.0006, 0.0004],
        [0.0002, 0.0066],
        [0.0003, 0.0051],
        [0.0003, 0.0135],
        [0.0002, 0.0007],
        [0.0004, 0.0132],
        [0.0031, 0.0102],
        [0.0003, 0.0096],
        [0.0009, 0.0003],
        [0.0004, 0.0066],
        [0.0023, 0.0252]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0006],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0008],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0010]], device='cuda:0')/tensor([[0.0016, 0.0007, 0.0005, 0.0003, 0.0006, 0.0004, 0.0005, 0.0004, 0.0005,
         0.0003, 0.0008, 0.0004, 0.0005, 0.0003, 0.0007, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0021],
        [0.0010],
        [0.0226],
        [0.0034],
        [0.0002],
        [0.0052],
        [0.0030],
        [0.0004],
        [0.0267],
        [0.0032],
        [0.0014],
        [0.0002],
        [0.0339],
        [0.0050],
        [0.0049],
        [0.0471]], device='cuda:0')/tensor([[0.0021, 0.0010, 0.0226, 0.0034, 0.0002, 0.0052, 0.0030, 0.0004, 0.0267,
         0.0032, 0.0014, 0.0002, 0.0339, 0.0050, 0.0049, 0.0471]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0016, 0.0021],
        [0.0007, 0.0010],
        [0.0005, 0.0226],
        [0.0003, 0.0034],
        [0.0006, 0.0002],
        [0.0004, 0.0052],
        [0.0005, 0.0030],
        [0.0004, 0.0004],
        [0.0005, 0.0267],
        [0.0003, 0.0032],
        [0.0008, 0.0014],
        [0.0004, 0.0002],
        [0.0005, 0.0339],
        [0.0003, 0.0050],
        [0.0007, 0.0049],
        [0.0010, 0.0471]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.9821e-04],
        [4.7233e-04],
        [6.6454e-04],
        [1.6962e-04],
        [3.2625e-04],
        [1.5360e-03],
        [1.4127e-03],
        [6.0924e-04],
        [2.7346e-04],
        [3.3853e-04],
        [9.1088e-04],
        [4.9126e-04],
        [9.4687e-05],
        [1.5758e-03],
        [9.3666e-04],
        [2.0000e-05]], device='cuda:0')/tensor([[3.9821e-04, 4.7233e-04, 6.6454e-04, 1.6962e-04, 3.2625e-04, 1.5360e-03,
         1.4127e-03, 6.0924e-04, 2.7346e-04, 3.3853e-04, 9.1088e-04, 4.9126e-04,
         9.4687e-05, 1.5758e-03, 9.3666e-04, 2.0000e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0093e-03],
        [2.8651e-02],
        [7.4666e-03],
        [4.0289e-04],
        [2.9715e-04],
        [2.5121e-02],
        [2.9279e-02],
        [2.6170e-03],
        [1.1603e-02],
        [4.8412e-02],
        [1.1915e-03],
        [1.4027e-02],
        [1.9432e-02],
        [6.6158e-03],
        [1.5163e-02],
        [8.2728e-05]], device='cuda:0')/tensor([[1.0093e-03, 2.8651e-02, 7.4666e-03, 4.0289e-04, 2.9715e-04, 2.5121e-02,
         2.9279e-02, 2.6170e-03, 1.1603e-02, 4.8412e-02, 1.1915e-03, 1.4027e-02,
         1.9432e-02, 6.6158e-03, 1.5163e-02, 8.2728e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.9821e-04, 1.0093e-03],
        [4.7233e-04, 2.8651e-02],
        [6.6454e-04, 7.4666e-03],
        [1.6962e-04, 4.0289e-04],
        [3.2625e-04, 2.9715e-04],
        [1.5360e-03, 2.5121e-02],
        [1.4127e-03, 2.9279e-02],
        [6.0924e-04, 2.6170e-03],
        [2.7346e-04, 1.1603e-02],
        [3.3853e-04, 4.8412e-02],
        [9.1088e-04, 1.1915e-03],
        [4.9126e-04, 1.4027e-02],
        [9.4687e-05, 1.9432e-02],
        [1.5758e-03, 6.6158e-03],
        [9.3666e-04, 1.5163e-02],
        [2.0000e-05, 8.2728e-05]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.4712e-04],
        [1.3489e-04],
        [3.9034e-04],
        [1.4069e-06],
        [9.6563e-04],
        [1.1590e-03],
        [7.9810e-04],
        [7.6109e-05],
        [1.0840e-04],
        [9.7837e-04],
        [4.4740e-04],
        [1.5704e-04],
        [3.7258e-04],
        [2.4437e-04],
        [8.9501e-04],
        [2.9523e-04]], device='cuda:0')/tensor([[1.4712e-04, 1.3489e-04, 3.9034e-04, 1.4069e-06, 9.6563e-04, 1.1590e-03,
         7.9810e-04, 7.6109e-05, 1.0840e-04, 9.7837e-04, 4.4740e-04, 1.5704e-04,
         3.7258e-04, 2.4437e-04, 8.9501e-04, 2.9523e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.4080e-03],
        [4.9919e-05],
        [4.2365e-03],
        [1.1366e-05],
        [2.6478e-02],
        [1.7682e-02],
        [1.4275e-02],
        [6.9062e-03],
        [9.8910e-04],
        [5.5394e-02],
        [2.5352e-02],
        [1.5171e-02],
        [9.9698e-04],
        [1.9103e-03],
        [1.0564e-01],
        [3.4419e-04]], device='cuda:0')/tensor([[9.4080e-03, 4.9919e-05, 4.2365e-03, 1.1366e-05, 2.6478e-02, 1.7682e-02,
         1.4275e-02, 6.9062e-03, 9.8910e-04, 5.5394e-02, 2.5352e-02, 1.5171e-02,
         9.9698e-04, 1.9103e-03, 1.0564e-01, 3.4419e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4712e-04, 9.4080e-03],
        [1.3489e-04, 4.9919e-05],
        [3.9034e-04, 4.2365e-03],
        [1.4069e-06, 1.1366e-05],
        [9.6563e-04, 2.6478e-02],
        [1.1590e-03, 1.7682e-02],
        [7.9810e-04, 1.4275e-02],
        [7.6109e-05, 6.9062e-03],
        [1.0840e-04, 9.8910e-04],
        [9.7837e-04, 5.5394e-02],
        [4.4740e-04, 2.5352e-02],
        [1.5704e-04, 1.5171e-02],
        [3.7258e-04, 9.9698e-04],
        [2.4437e-04, 1.9103e-03],
        [8.9501e-04, 1.0564e-01],
        [2.9523e-04, 3.4419e-04]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0009],
        [0.0006],
        [0.0004],
        [0.0001],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0012],
        [0.0009]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0003, 0.0006, 0.0005, 0.0005, 0.0002, 0.0009, 0.0006,
         0.0004, 0.0001, 0.0004, 0.0005, 0.0002, 0.0012, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0029],
        [0.0289],
        [0.0092],
        [0.0185],
        [0.0019],
        [0.0012],
        [0.0174],
        [0.0048],
        [0.0090],
        [0.0083],
        [0.0170],
        [0.0121],
        [0.0236],
        [0.0063],
        [0.0009],
        [0.0361]], device='cuda:0')/tensor([[0.0029, 0.0289, 0.0092, 0.0185, 0.0019, 0.0012, 0.0174, 0.0048, 0.0090,
         0.0083, 0.0170, 0.0121, 0.0236, 0.0063, 0.0009, 0.0361]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0029],
        [0.0002, 0.0289],
        [0.0003, 0.0092],
        [0.0006, 0.0185],
        [0.0005, 0.0019],
        [0.0005, 0.0012],
        [0.0002, 0.0174],
        [0.0009, 0.0048],
        [0.0006, 0.0090],
        [0.0004, 0.0083],
        [0.0001, 0.0170],
        [0.0004, 0.0121],
        [0.0005, 0.0236],
        [0.0002, 0.0063],
        [0.0012, 0.0009],
        [0.0009, 0.0361]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0001],
        [0.0002],
        [0.0006],
        [0.0013],
        [0.0005],
        [0.0003]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0001, 0.0002, 0.0006, 0.0013, 0.0005, 0.0003]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0008],
        [0.0341],
        [0.0091],
        [0.0003],
        [0.0039],
        [0.0013],
        [0.0467],
        [0.0031]], device='cuda:0')/tensor([[0.0008, 0.0341, 0.0091, 0.0003, 0.0039, 0.0013, 0.0467, 0.0031]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0006, 0.0008],
        [0.0004, 0.0341],
        [0.0001, 0.0091],
        [0.0002, 0.0003],
        [0.0006, 0.0039],
        [0.0013, 0.0013],
        [0.0005, 0.0467],
        [0.0003, 0.0031]], device='cuda:0')
acc:  0.58
Time taken to execute the de SA task with prompt type active, variation 5 and batchsize 16: 0:03:16.096080
path ['42', 'de', 'flan', 'SA', 'active', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA passive 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 344.01it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0005],
        [0.0023],
        [0.0005],
        [0.0005],
        [0.0001],
        [0.0006],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0008],
        [0.0007],
        [0.0013],
        [0.0020],
        [0.0006],
        [0.0007]], device='cuda:0')/tensor([[0.0011, 0.0005, 0.0023, 0.0005, 0.0005, 0.0001, 0.0006, 0.0004, 0.0006,
         0.0007, 0.0008, 0.0007, 0.0013, 0.0020, 0.0006, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0193],
        [0.0100],
        [0.0038],
        [0.0041],
        [0.0002],
        [0.0073],
        [0.0003],
        [0.0090],
        [0.0068],
        [0.0052],
        [0.0006],
        [0.0010],
        [0.0059],
        [0.0090],
        [0.0084],
        [0.0015]], device='cuda:0')/tensor([[0.0193, 0.0100, 0.0038, 0.0041, 0.0002, 0.0073, 0.0003, 0.0090, 0.0068,
         0.0052, 0.0006, 0.0010, 0.0059, 0.0090, 0.0084, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0193],
        [0.0005, 0.0100],
        [0.0023, 0.0038],
        [0.0005, 0.0041],
        [0.0005, 0.0002],
        [0.0001, 0.0073],
        [0.0006, 0.0003],
        [0.0004, 0.0090],
        [0.0006, 0.0068],
        [0.0007, 0.0052],
        [0.0008, 0.0006],
        [0.0007, 0.0010],
        [0.0013, 0.0059],
        [0.0020, 0.0090],
        [0.0006, 0.0084],
        [0.0007, 0.0015]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0012],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0008],
        [0.0002],
        [0.0034],
        [0.0004],
        [0.0004],
        [0.0054],
        [0.0010],
        [0.0005],
        [0.0011],
        [0.0016],
        [0.0002]], device='cuda:0')/tensor([[0.0007, 0.0012, 0.0005, 0.0005, 0.0004, 0.0008, 0.0002, 0.0034, 0.0004,
         0.0004, 0.0054, 0.0010, 0.0005, 0.0011, 0.0016, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0100],
        [0.0252],
        [0.0138],
        [0.0697],
        [0.0154],
        [0.0028],
        [0.0167],
        [0.0089],
        [0.0023],
        [0.0194],
        [0.0558],
        [0.0013],
        [0.0009],
        [0.0016],
        [0.0093],
        [0.0055]], device='cuda:0')/tensor([[0.0100, 0.0252, 0.0138, 0.0697, 0.0154, 0.0028, 0.0167, 0.0089, 0.0023,
         0.0194, 0.0558, 0.0013, 0.0009, 0.0016, 0.0093, 0.0055]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0100],
        [0.0012, 0.0252],
        [0.0005, 0.0138],
        [0.0005, 0.0697],
        [0.0004, 0.0154],
        [0.0008, 0.0028],
        [0.0002, 0.0167],
        [0.0034, 0.0089],
        [0.0004, 0.0023],
        [0.0004, 0.0194],
        [0.0054, 0.0558],
        [0.0010, 0.0013],
        [0.0005, 0.0009],
        [0.0011, 0.0016],
        [0.0016, 0.0093],
        [0.0002, 0.0055]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0011],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0025],
        [0.0008],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0009],
        [0.0010],
        [0.0019],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0014, 0.0011, 0.0007, 0.0005, 0.0003, 0.0025, 0.0008, 0.0003, 0.0005,
         0.0004, 0.0003, 0.0009, 0.0010, 0.0019, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0618],
        [0.0225],
        [0.0143],
        [0.0150],
        [0.0002],
        [0.0237],
        [0.0170],
        [0.0022],
        [0.0015],
        [0.0080],
        [0.0331],
        [0.0389],
        [0.0015],
        [0.0218],
        [0.0014],
        [0.0107]], device='cuda:0')/tensor([[0.0618, 0.0225, 0.0143, 0.0150, 0.0002, 0.0237, 0.0170, 0.0022, 0.0015,
         0.0080, 0.0331, 0.0389, 0.0015, 0.0218, 0.0014, 0.0107]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0618],
        [0.0011, 0.0225],
        [0.0007, 0.0143],
        [0.0005, 0.0150],
        [0.0003, 0.0002],
        [0.0025, 0.0237],
        [0.0008, 0.0170],
        [0.0003, 0.0022],
        [0.0005, 0.0015],
        [0.0004, 0.0080],
        [0.0003, 0.0331],
        [0.0009, 0.0389],
        [0.0010, 0.0015],
        [0.0019, 0.0218],
        [0.0004, 0.0014],
        [0.0004, 0.0107]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0016],
        [0.0016],
        [0.0003],
        [0.0013],
        [0.0006],
        [0.0010],
        [0.0002],
        [0.0010],
        [0.0018],
        [0.0005],
        [0.0020],
        [0.0014],
        [0.0004],
        [0.0009],
        [0.0003]], device='cuda:0')/tensor([[0.0013, 0.0016, 0.0016, 0.0003, 0.0013, 0.0006, 0.0010, 0.0002, 0.0010,
         0.0018, 0.0005, 0.0020, 0.0014, 0.0004, 0.0009, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4297e-04],
        [3.0656e-02],
        [1.1959e-02],
        [8.8319e-03],
        [2.0091e-03],
        [4.3745e-02],
        [1.4502e-02],
        [4.7070e-05],
        [2.0985e-03],
        [5.9185e-02],
        [1.6567e-02],
        [3.2278e-03],
        [1.9090e-02],
        [4.5632e-04],
        [2.2096e-02],
        [1.4585e-02]], device='cuda:0')/tensor([[7.4297e-04, 3.0656e-02, 1.1959e-02, 8.8319e-03, 2.0091e-03, 4.3745e-02,
         1.4502e-02, 4.7070e-05, 2.0985e-03, 5.9185e-02, 1.6567e-02, 3.2278e-03,
         1.9090e-02, 4.5632e-04, 2.2096e-02, 1.4585e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2755e-03, 7.4297e-04],
        [1.5713e-03, 3.0656e-02],
        [1.6461e-03, 1.1959e-02],
        [3.3444e-04, 8.8319e-03],
        [1.2902e-03, 2.0091e-03],
        [5.5653e-04, 4.3745e-02],
        [1.0053e-03, 1.4502e-02],
        [1.8566e-04, 4.7070e-05],
        [9.6531e-04, 2.0985e-03],
        [1.8283e-03, 5.9185e-02],
        [4.7289e-04, 1.6567e-02],
        [1.9807e-03, 3.2278e-03],
        [1.4257e-03, 1.9090e-02],
        [3.5645e-04, 4.5632e-04],
        [8.9775e-04, 2.2096e-02],
        [3.4525e-04, 1.4585e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0005],
        [0.0013],
        [0.0008],
        [0.0002],
        [0.0021],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0005],
        [0.0014],
        [0.0012],
        [0.0003],
        [0.0005],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0005, 0.0013, 0.0008, 0.0002, 0.0021, 0.0006, 0.0001,
         0.0004, 0.0005, 0.0014, 0.0012, 0.0003, 0.0005, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7445e-04],
        [3.0028e-03],
        [6.0543e-03],
        [9.1431e-03],
        [9.8155e-04],
        [8.2989e-05],
        [7.8960e-03],
        [8.7498e-03],
        [6.4299e-05],
        [9.1282e-03],
        [1.6030e-02],
        [5.7607e-03],
        [1.7395e-02],
        [2.8330e-03],
        [1.7499e-03],
        [7.1065e-02]], device='cuda:0')/tensor([[1.7445e-04, 3.0028e-03, 6.0543e-03, 9.1431e-03, 9.8155e-04, 8.2989e-05,
         7.8960e-03, 8.7498e-03, 6.4299e-05, 9.1282e-03, 1.6030e-02, 5.7607e-03,
         1.7395e-02, 2.8330e-03, 1.7499e-03, 7.1065e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1192e-04, 1.7445e-04],
        [2.5263e-04, 3.0028e-03],
        [4.5966e-04, 6.0543e-03],
        [1.3460e-03, 9.1431e-03],
        [8.2595e-04, 9.8155e-04],
        [1.6139e-04, 8.2989e-05],
        [2.1136e-03, 7.8960e-03],
        [6.1272e-04, 8.7498e-03],
        [1.1783e-04, 6.4299e-05],
        [3.8236e-04, 9.1282e-03],
        [5.4121e-04, 1.6030e-02],
        [1.4239e-03, 5.7607e-03],
        [1.2307e-03, 1.7395e-02],
        [2.9722e-04, 2.8330e-03],
        [4.6693e-04, 1.7499e-03],
        [1.2230e-04, 7.1065e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.0376e-04],
        [2.8501e-04],
        [4.3559e-04],
        [7.6647e-05],
        [3.2667e-04],
        [5.7581e-04],
        [2.9161e-04],
        [9.6510e-04],
        [4.8483e-04],
        [7.8185e-04],
        [1.9090e-03],
        [6.0544e-04],
        [1.8196e-03],
        [2.3282e-04],
        [1.3448e-03],
        [3.7213e-04]], device='cuda:0')/tensor([[5.0376e-04, 2.8501e-04, 4.3559e-04, 7.6647e-05, 3.2667e-04, 5.7581e-04,
         2.9161e-04, 9.6510e-04, 4.8483e-04, 7.8185e-04, 1.9090e-03, 6.0544e-04,
         1.8196e-03, 2.3282e-04, 1.3448e-03, 3.7213e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0024],
        [0.0339],
        [0.0022],
        [0.0004],
        [0.0062],
        [0.0016],
        [0.0157],
        [0.0045],
        [0.0153],
        [0.0335],
        [0.0313],
        [0.0246],
        [0.0060],
        [0.0040],
        [0.0184]], device='cuda:0')/tensor([[0.0007, 0.0024, 0.0339, 0.0022, 0.0004, 0.0062, 0.0016, 0.0157, 0.0045,
         0.0153, 0.0335, 0.0313, 0.0246, 0.0060, 0.0040, 0.0184]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.0376e-04, 6.8633e-04],
        [2.8501e-04, 2.3607e-03],
        [4.3559e-04, 3.3862e-02],
        [7.6647e-05, 2.2346e-03],
        [3.2667e-04, 3.5908e-04],
        [5.7581e-04, 6.1589e-03],
        [2.9161e-04, 1.6199e-03],
        [9.6510e-04, 1.5703e-02],
        [4.8483e-04, 4.4822e-03],
        [7.8185e-04, 1.5311e-02],
        [1.9090e-03, 3.3542e-02],
        [6.0544e-04, 3.1271e-02],
        [1.8196e-03, 2.4554e-02],
        [2.3282e-04, 6.0484e-03],
        [1.3448e-03, 4.0385e-03],
        [3.7213e-04, 1.8369e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0001],
        [0.0005],
        [0.0037],
        [0.0002],
        [0.0003],
        [0.0013],
        [0.0010],
        [0.0001],
        [0.0012],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0003, 0.0005, 0.0010, 0.0005, 0.0005, 0.0001, 0.0005, 0.0037,
         0.0002, 0.0003, 0.0013, 0.0010, 0.0001, 0.0012, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.1783e-02],
        [7.3519e-03],
        [8.1511e-03],
        [5.0300e-04],
        [5.5989e-03],
        [4.9142e-02],
        [5.5784e-03],
        [1.9229e-04],
        [2.6096e-02],
        [1.1665e-02],
        [1.1986e-02],
        [7.1342e-02],
        [3.0245e-02],
        [8.5033e-05],
        [5.3083e-02],
        [6.6374e-03]], device='cuda:0')/tensor([[2.1783e-02, 7.3519e-03, 8.1511e-03, 5.0300e-04, 5.5989e-03, 4.9142e-02,
         5.5784e-03, 1.9229e-04, 2.6096e-02, 1.1665e-02, 1.1986e-02, 7.1342e-02,
         3.0245e-02, 8.5033e-05, 5.3083e-02, 6.6374e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.4800e-04, 2.1783e-02],
        [2.9557e-04, 7.3519e-03],
        [4.7931e-04, 8.1511e-03],
        [1.0161e-03, 5.0300e-04],
        [5.2003e-04, 5.5989e-03],
        [5.1799e-04, 4.9142e-02],
        [1.0600e-04, 5.5784e-03],
        [5.2081e-04, 1.9229e-04],
        [3.7034e-03, 2.6096e-02],
        [1.7166e-04, 1.1665e-02],
        [2.7820e-04, 1.1986e-02],
        [1.3240e-03, 7.1342e-02],
        [1.0416e-03, 3.0245e-02],
        [1.3269e-04, 8.5033e-05],
        [1.1991e-03, 5.3083e-02],
        [4.0365e-04, 6.6374e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0007],
        [0.0002],
        [0.0003],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0009],
        [0.0004],
        [0.0005],
        [0.0014],
        [0.0011]], device='cuda:0')/tensor([[0.0005, 0.0010, 0.0005, 0.0005, 0.0006, 0.0007, 0.0002, 0.0003, 0.0007,
         0.0003, 0.0004, 0.0009, 0.0004, 0.0005, 0.0014, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0092],
        [0.0256],
        [0.0019],
        [0.0160],
        [0.0074],
        [0.0015],
        [0.0001],
        [0.0144],
        [0.0029],
        [0.0003],
        [0.0018],
        [0.0484],
        [0.0189],
        [0.0150],
        [0.0621],
        [0.0116]], device='cuda:0')/tensor([[0.0092, 0.0256, 0.0019, 0.0160, 0.0074, 0.0015, 0.0001, 0.0144, 0.0029,
         0.0003, 0.0018, 0.0484, 0.0189, 0.0150, 0.0621, 0.0116]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0092],
        [0.0010, 0.0256],
        [0.0005, 0.0019],
        [0.0005, 0.0160],
        [0.0006, 0.0074],
        [0.0007, 0.0015],
        [0.0002, 0.0001],
        [0.0003, 0.0144],
        [0.0007, 0.0029],
        [0.0003, 0.0003],
        [0.0004, 0.0018],
        [0.0009, 0.0484],
        [0.0004, 0.0189],
        [0.0005, 0.0150],
        [0.0014, 0.0621],
        [0.0011, 0.0116]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0013],
        [0.0001],
        [0.0031],
        [0.0008],
        [0.0006],
        [0.0002],
        [0.0023],
        [0.0006],
        [0.0003],
        [0.0005],
        [0.0001],
        [0.0004],
        [0.0036],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0013, 0.0001, 0.0031, 0.0008, 0.0006, 0.0002, 0.0023,
         0.0006, 0.0003, 0.0005, 0.0001, 0.0004, 0.0036, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0151],
        [0.0100],
        [0.0014],
        [0.0025],
        [0.0071],
        [0.0796],
        [0.0002],
        [0.0242],
        [0.0757],
        [0.0072],
        [0.0003],
        [0.0076],
        [0.0001],
        [0.0482],
        [0.0373],
        [0.0396]], device='cuda:0')/tensor([[0.0151, 0.0100, 0.0014, 0.0025, 0.0071, 0.0796, 0.0002, 0.0242, 0.0757,
         0.0072, 0.0003, 0.0076, 0.0001, 0.0482, 0.0373, 0.0396]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0151],
        [0.0003, 0.0100],
        [0.0013, 0.0014],
        [0.0001, 0.0025],
        [0.0031, 0.0071],
        [0.0008, 0.0796],
        [0.0006, 0.0002],
        [0.0002, 0.0242],
        [0.0023, 0.0757],
        [0.0006, 0.0072],
        [0.0003, 0.0003],
        [0.0005, 0.0076],
        [0.0001, 0.0001],
        [0.0004, 0.0482],
        [0.0036, 0.0373],
        [0.0013, 0.0396]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0008],
        [0.0025],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0014],
        [0.0006],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0021],
        [0.0005],
        [0.0012],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0014, 0.0008, 0.0025, 0.0006, 0.0006, 0.0002, 0.0014, 0.0006, 0.0009,
         0.0002, 0.0003, 0.0021, 0.0005, 0.0012, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0874],
        [0.0006],
        [0.0065],
        [0.0024],
        [0.0106],
        [0.0066],
        [0.0382],
        [0.0006],
        [0.0004],
        [0.0014],
        [0.0091],
        [0.0242],
        [0.0103],
        [0.0018],
        [0.0004],
        [0.0052]], device='cuda:0')/tensor([[0.0874, 0.0006, 0.0065, 0.0024, 0.0106, 0.0066, 0.0382, 0.0006, 0.0004,
         0.0014, 0.0091, 0.0242, 0.0103, 0.0018, 0.0004, 0.0052]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0874],
        [0.0008, 0.0006],
        [0.0025, 0.0065],
        [0.0006, 0.0024],
        [0.0006, 0.0106],
        [0.0002, 0.0066],
        [0.0014, 0.0382],
        [0.0006, 0.0006],
        [0.0009, 0.0004],
        [0.0002, 0.0014],
        [0.0003, 0.0091],
        [0.0021, 0.0242],
        [0.0005, 0.0103],
        [0.0012, 0.0018],
        [0.0003, 0.0004],
        [0.0003, 0.0052]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0153e-03],
        [1.0153e-03],
        [5.5404e-04],
        [8.6492e-04],
        [6.1573e-04],
        [1.0142e-03],
        [9.0877e-05],
        [8.1713e-04],
        [1.0209e-04],
        [4.6279e-04],
        [3.5270e-03],
        [2.6610e-04],
        [6.8953e-04],
        [6.9959e-04],
        [5.9541e-04],
        [3.1498e-03]], device='cuda:0')/tensor([[1.0153e-03, 1.0153e-03, 5.5404e-04, 8.6492e-04, 6.1573e-04, 1.0142e-03,
         9.0877e-05, 8.1713e-04, 1.0209e-04, 4.6279e-04, 3.5270e-03, 2.6610e-04,
         6.8953e-04, 6.9959e-04, 5.9541e-04, 3.1498e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0047],
        [0.0420],
        [0.0430],
        [0.0005],
        [0.0016],
        [0.0035],
        [0.0041],
        [0.0007],
        [0.0022],
        [0.0008],
        [0.0544],
        [0.0009],
        [0.0281],
        [0.0005],
        [0.0468],
        [0.0344]], device='cuda:0')/tensor([[0.0047, 0.0420, 0.0430, 0.0005, 0.0016, 0.0035, 0.0041, 0.0007, 0.0022,
         0.0008, 0.0544, 0.0009, 0.0281, 0.0005, 0.0468, 0.0344]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0153e-03, 4.6962e-03],
        [1.0153e-03, 4.1998e-02],
        [5.5404e-04, 4.2977e-02],
        [8.6492e-04, 5.2637e-04],
        [6.1573e-04, 1.5803e-03],
        [1.0142e-03, 3.4519e-03],
        [9.0877e-05, 4.1120e-03],
        [8.1713e-04, 7.0394e-04],
        [1.0209e-04, 2.2052e-03],
        [4.6279e-04, 7.8154e-04],
        [3.5270e-03, 5.4444e-02],
        [2.6610e-04, 8.5965e-04],
        [6.8953e-04, 2.8128e-02],
        [6.9959e-04, 5.3591e-04],
        [5.9541e-04, 4.6751e-02],
        [3.1498e-03, 3.4351e-02]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0005],
        [0.0015],
        [0.0007],
        [0.0013],
        [0.0003],
        [0.0006],
        [0.0015],
        [0.0009],
        [0.0004],
        [0.0016],
        [0.0006],
        [0.0003],
        [0.0010],
        [0.0005],
        [0.0036]], device='cuda:0')/tensor([[0.0009, 0.0005, 0.0015, 0.0007, 0.0013, 0.0003, 0.0006, 0.0015, 0.0009,
         0.0004, 0.0016, 0.0006, 0.0003, 0.0010, 0.0005, 0.0036]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0092],
        [0.0114],
        [0.0060],
        [0.0222],
        [0.0049],
        [0.0181],
        [0.0065],
        [0.0006],
        [0.0131],
        [0.0062],
        [0.0307],
        [0.0037],
        [0.0425],
        [0.0384],
        [0.0028]], device='cuda:0')/tensor([[0.0025, 0.0092, 0.0114, 0.0060, 0.0222, 0.0049, 0.0181, 0.0065, 0.0006,
         0.0131, 0.0062, 0.0307, 0.0037, 0.0425, 0.0384, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0025],
        [0.0005, 0.0092],
        [0.0015, 0.0114],
        [0.0007, 0.0060],
        [0.0013, 0.0222],
        [0.0003, 0.0049],
        [0.0006, 0.0181],
        [0.0015, 0.0065],
        [0.0009, 0.0006],
        [0.0004, 0.0131],
        [0.0016, 0.0062],
        [0.0006, 0.0307],
        [0.0003, 0.0037],
        [0.0010, 0.0425],
        [0.0005, 0.0384],
        [0.0036, 0.0028]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0008],
        [0.0002],
        [0.0011],
        [0.0017],
        [0.0001],
        [0.0015],
        [0.0006],
        [0.0011]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0011, 0.0017, 0.0001, 0.0015, 0.0006, 0.0011]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0022],
        [0.0038],
        [0.0008],
        [0.0518],
        [0.0012],
        [0.0687],
        [0.0007],
        [0.0008]], device='cuda:0')/tensor([[0.0022, 0.0038, 0.0008, 0.0518, 0.0012, 0.0687, 0.0007, 0.0008]],
       device='cuda:0'), torch.Size([1, 8])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0008, 0.0022],
        [0.0002, 0.0038],
        [0.0011, 0.0008],
        [0.0017, 0.0518],
        [0.0001, 0.0012],
        [0.0015, 0.0687],
        [0.0006, 0.0007],
        [0.0011, 0.0008]], device='cuda:0')
acc:  0.63
Time taken to execute the de SA task with prompt type passive, variation 0 and batchsize 16: 0:03:17.298217
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA passive 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 349.32it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.9935e-04],
        [8.0218e-04],
        [1.5079e-04],
        [7.8105e-04],
        [1.3017e-03],
        [2.1673e-04],
        [6.7330e-04],
        [4.1854e-04],
        [7.5242e-05],
        [6.5074e-04],
        [1.2935e-03],
        [1.1126e-03],
        [1.5608e-06],
        [2.6314e-03],
        [6.3384e-04],
        [4.1232e-04]], device='cuda:0')/tensor([[4.9935e-04, 8.0218e-04, 1.5079e-04, 7.8105e-04, 1.3017e-03, 2.1673e-04,
         6.7330e-04, 4.1854e-04, 7.5242e-05, 6.5074e-04, 1.2935e-03, 1.1126e-03,
         1.5608e-06, 2.6314e-03, 6.3384e-04, 4.1232e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.6798e-04],
        [2.3841e-02],
        [1.3307e-04],
        [3.8284e-02],
        [1.5465e-02],
        [2.0165e-03],
        [6.2876e-02],
        [3.2996e-03],
        [3.5138e-03],
        [4.6052e-04],
        [7.7790e-02],
        [1.6610e-02],
        [4.2077e-05],
        [5.6843e-03],
        [2.4712e-03],
        [1.0394e-02]], device='cuda:0')/tensor([[4.6798e-04, 2.3841e-02, 1.3307e-04, 3.8284e-02, 1.5465e-02, 2.0165e-03,
         6.2876e-02, 3.2996e-03, 3.5138e-03, 4.6052e-04, 7.7790e-02, 1.6610e-02,
         4.2077e-05, 5.6843e-03, 2.4712e-03, 1.0394e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.9935e-04, 4.6798e-04],
        [8.0218e-04, 2.3841e-02],
        [1.5079e-04, 1.3307e-04],
        [7.8105e-04, 3.8284e-02],
        [1.3017e-03, 1.5465e-02],
        [2.1673e-04, 2.0165e-03],
        [6.7330e-04, 6.2876e-02],
        [4.1854e-04, 3.2996e-03],
        [7.5242e-05, 3.5138e-03],
        [6.5074e-04, 4.6052e-04],
        [1.2935e-03, 7.7790e-02],
        [1.1126e-03, 1.6610e-02],
        [1.5608e-06, 4.2077e-05],
        [2.6314e-03, 5.6843e-03],
        [6.3384e-04, 2.4712e-03],
        [4.1232e-04, 1.0394e-02]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0009],
        [0.0008],
        [0.0003],
        [0.0011],
        [0.0011],
        [0.0006],
        [0.0005],
        [0.0003],
        [0.0015],
        [0.0002],
        [0.0006],
        [0.0003],
        [0.0022],
        [0.0020]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0009, 0.0008, 0.0003, 0.0011, 0.0011, 0.0006, 0.0005,
         0.0003, 0.0015, 0.0002, 0.0006, 0.0003, 0.0022, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.7608e-03],
        [6.1175e-03],
        [1.5684e-03],
        [1.6819e-03],
        [3.5539e-02],
        [4.9726e-03],
        [9.2227e-02],
        [2.8417e-03],
        [6.5664e-02],
        [9.4742e-04],
        [7.7794e-02],
        [2.2270e-05],
        [5.5638e-03],
        [2.0858e-02],
        [2.9464e-03],
        [7.9158e-03]], device='cuda:0')/tensor([[6.7608e-03, 6.1175e-03, 1.5684e-03, 1.6819e-03, 3.5539e-02, 4.9726e-03,
         9.2227e-02, 2.8417e-03, 6.5664e-02, 9.4742e-04, 7.7794e-02, 2.2270e-05,
         5.5638e-03, 2.0858e-02, 2.9464e-03, 7.9158e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7579e-04, 6.7608e-03],
        [6.8969e-04, 6.1175e-03],
        [8.8251e-04, 1.5684e-03],
        [7.8394e-04, 1.6819e-03],
        [3.0674e-04, 3.5539e-02],
        [1.1057e-03, 4.9726e-03],
        [1.0886e-03, 9.2227e-02],
        [5.9805e-04, 2.8417e-03],
        [4.8452e-04, 6.5664e-02],
        [3.4947e-04, 9.4742e-04],
        [1.5098e-03, 7.7794e-02],
        [1.6310e-04, 2.2270e-05],
        [5.7217e-04, 5.5638e-03],
        [3.0534e-04, 2.0858e-02],
        [2.1623e-03, 2.9464e-03],
        [1.9601e-03, 7.9158e-03]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.5011e-05],
        [2.2941e-03],
        [1.3194e-03],
        [4.0205e-04],
        [8.3570e-04],
        [1.3448e-04],
        [1.6831e-03],
        [5.2166e-04],
        [1.3953e-03],
        [5.4141e-04],
        [1.0077e-03],
        [8.4928e-04],
        [7.3838e-04],
        [2.9178e-04],
        [1.4218e-03],
        [7.3611e-04]], device='cuda:0')/tensor([[8.5011e-05, 2.2941e-03, 1.3194e-03, 4.0205e-04, 8.3570e-04, 1.3448e-04,
         1.6831e-03, 5.2166e-04, 1.3953e-03, 5.4141e-04, 1.0077e-03, 8.4928e-04,
         7.3838e-04, 2.9178e-04, 1.4218e-03, 7.3611e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.3612e-04],
        [5.9160e-03],
        [1.3006e-02],
        [1.1147e-03],
        [3.3994e-02],
        [7.5127e-05],
        [5.1698e-02],
        [8.9993e-03],
        [1.9214e-02],
        [2.7538e-02],
        [1.2809e-02],
        [1.9515e-03],
        [2.3456e-03],
        [1.4242e-02],
        [2.3561e-02],
        [3.6012e-02]], device='cuda:0')/tensor([[8.3612e-04, 5.9160e-03, 1.3006e-02, 1.1147e-03, 3.3994e-02, 7.5127e-05,
         5.1698e-02, 8.9993e-03, 1.9214e-02, 2.7538e-02, 1.2809e-02, 1.9515e-03,
         2.3456e-03, 1.4242e-02, 2.3561e-02, 3.6012e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.5011e-05, 8.3612e-04],
        [2.2941e-03, 5.9160e-03],
        [1.3194e-03, 1.3006e-02],
        [4.0205e-04, 1.1147e-03],
        [8.3570e-04, 3.3994e-02],
        [1.3448e-04, 7.5127e-05],
        [1.6831e-03, 5.1698e-02],
        [5.2166e-04, 8.9993e-03],
        [1.3953e-03, 1.9214e-02],
        [5.4141e-04, 2.7538e-02],
        [1.0077e-03, 1.2809e-02],
        [8.4928e-04, 1.9515e-03],
        [7.3838e-04, 2.3456e-03],
        [2.9178e-04, 1.4242e-02],
        [1.4218e-03, 2.3561e-02],
        [7.3611e-04, 3.6012e-02]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0005],
        [0.0009],
        [0.0014],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0002],
        [0.0019],
        [0.0006],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0013],
        [0.0004],
        [0.0022]], device='cuda:0')/tensor([[0.0006, 0.0005, 0.0009, 0.0014, 0.0006, 0.0006, 0.0007, 0.0002, 0.0019,
         0.0006, 0.0003, 0.0005, 0.0005, 0.0013, 0.0004, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0081],
        [0.0086],
        [0.0170],
        [0.0721],
        [0.0188],
        [0.0084],
        [0.0042],
        [0.0017],
        [0.0290],
        [0.0008],
        [0.0020],
        [0.0005],
        [0.0053],
        [0.0273],
        [0.0027],
        [0.0258]], device='cuda:0')/tensor([[0.0081, 0.0086, 0.0170, 0.0721, 0.0188, 0.0084, 0.0042, 0.0017, 0.0290,
         0.0008, 0.0020, 0.0005, 0.0053, 0.0273, 0.0027, 0.0258]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0081],
        [0.0005, 0.0086],
        [0.0009, 0.0170],
        [0.0014, 0.0721],
        [0.0006, 0.0188],
        [0.0006, 0.0084],
        [0.0007, 0.0042],
        [0.0002, 0.0017],
        [0.0019, 0.0290],
        [0.0006, 0.0008],
        [0.0003, 0.0020],
        [0.0005, 0.0005],
        [0.0005, 0.0053],
        [0.0013, 0.0273],
        [0.0004, 0.0027],
        [0.0022, 0.0258]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.5783e-05],
        [5.9062e-04],
        [1.0608e-03],
        [5.0468e-04],
        [1.1211e-03],
        [2.1882e-03],
        [3.4168e-04],
        [4.1765e-04],
        [1.1250e-03],
        [2.4278e-04],
        [4.3888e-04],
        [3.1449e-04],
        [3.0247e-03],
        [2.8681e-04],
        [1.3254e-03],
        [7.5003e-04]], device='cuda:0')/tensor([[8.5783e-05, 5.9062e-04, 1.0608e-03, 5.0468e-04, 1.1211e-03, 2.1882e-03,
         3.4168e-04, 4.1765e-04, 1.1250e-03, 2.4278e-04, 4.3888e-04, 3.1449e-04,
         3.0247e-03, 2.8681e-04, 1.3254e-03, 7.5003e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0001],
        [0.0143],
        [0.0020],
        [0.0230],
        [0.0117],
        [0.0718],
        [0.0162],
        [0.0262],
        [0.0007],
        [0.0066],
        [0.0159],
        [0.0136],
        [0.0108],
        [0.0004],
        [0.0191],
        [0.0240]], device='cuda:0')/tensor([[0.0001, 0.0143, 0.0020, 0.0230, 0.0117, 0.0718, 0.0162, 0.0262, 0.0007,
         0.0066, 0.0159, 0.0136, 0.0108, 0.0004, 0.0191, 0.0240]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.5783e-05, 1.1446e-04],
        [5.9062e-04, 1.4341e-02],
        [1.0608e-03, 1.9821e-03],
        [5.0468e-04, 2.2951e-02],
        [1.1211e-03, 1.1739e-02],
        [2.1882e-03, 7.1780e-02],
        [3.4168e-04, 1.6174e-02],
        [4.1765e-04, 2.6159e-02],
        [1.1250e-03, 6.6470e-04],
        [2.4278e-04, 6.6044e-03],
        [4.3888e-04, 1.5853e-02],
        [3.1449e-04, 1.3634e-02],
        [3.0247e-03, 1.0767e-02],
        [2.8681e-04, 3.8061e-04],
        [1.3254e-03, 1.9091e-02],
        [7.5003e-04, 2.4049e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0013],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0008],
        [0.0002],
        [0.0012],
        [0.0007],
        [0.0006],
        [0.0016],
        [0.0004],
        [0.0005],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0013, 0.0002, 0.0010, 0.0002, 0.0008, 0.0002, 0.0012,
         0.0007, 0.0006, 0.0016, 0.0004, 0.0005, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0071],
        [0.0015],
        [0.0215],
        [0.0027],
        [0.0316],
        [0.0061],
        [0.0120],
        [0.0010],
        [0.0056],
        [0.0305],
        [0.0135],
        [0.0084],
        [0.0151],
        [0.0131],
        [0.0415],
        [0.0186]], device='cuda:0')/tensor([[0.0071, 0.0015, 0.0215, 0.0027, 0.0316, 0.0061, 0.0120, 0.0010, 0.0056,
         0.0305, 0.0135, 0.0084, 0.0151, 0.0131, 0.0415, 0.0186]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0071],
        [0.0003, 0.0015],
        [0.0013, 0.0215],
        [0.0002, 0.0027],
        [0.0010, 0.0316],
        [0.0002, 0.0061],
        [0.0008, 0.0120],
        [0.0002, 0.0010],
        [0.0012, 0.0056],
        [0.0007, 0.0305],
        [0.0006, 0.0135],
        [0.0016, 0.0084],
        [0.0004, 0.0151],
        [0.0005, 0.0131],
        [0.0005, 0.0415],
        [0.0005, 0.0186]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.9930e-04],
        [2.4033e-04],
        [4.9208e-04],
        [1.9619e-04],
        [4.5974e-04],
        [2.8507e-04],
        [2.8180e-04],
        [3.5602e-04],
        [1.4836e-03],
        [5.7250e-04],
        [1.0065e-03],
        [3.8475e-04],
        [8.1641e-04],
        [9.9643e-05],
        [6.6192e-04],
        [2.4722e-04]], device='cuda:0')/tensor([[8.9930e-04, 2.4033e-04, 4.9208e-04, 1.9619e-04, 4.5974e-04, 2.8507e-04,
         2.8180e-04, 3.5602e-04, 1.4836e-03, 5.7250e-04, 1.0065e-03, 3.8475e-04,
         8.1641e-04, 9.9643e-05, 6.6192e-04, 2.4722e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0024],
        [0.0105],
        [0.0002],
        [0.0097],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0107],
        [0.0006],
        [0.0209],
        [0.0077],
        [0.0007],
        [0.0526],
        [0.0007],
        [0.0028]], device='cuda:0')/tensor([[0.0010, 0.0024, 0.0105, 0.0002, 0.0097, 0.0011, 0.0005, 0.0003, 0.0107,
         0.0006, 0.0209, 0.0077, 0.0007, 0.0526, 0.0007, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.9930e-04, 1.0169e-03],
        [2.4033e-04, 2.3990e-03],
        [4.9208e-04, 1.0475e-02],
        [1.9619e-04, 1.6807e-04],
        [4.5974e-04, 9.6739e-03],
        [2.8507e-04, 1.0558e-03],
        [2.8180e-04, 4.9329e-04],
        [3.5602e-04, 2.6132e-04],
        [1.4836e-03, 1.0688e-02],
        [5.7250e-04, 5.7448e-04],
        [1.0065e-03, 2.0911e-02],
        [3.8475e-04, 7.7183e-03],
        [8.1641e-04, 6.9657e-04],
        [9.9643e-05, 5.2640e-02],
        [6.6192e-04, 7.0445e-04],
        [2.4722e-04, 2.7793e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0007],
        [0.0011],
        [0.0010],
        [0.0008],
        [0.0003],
        [0.0003],
        [0.0014],
        [0.0003],
        [0.0003],
        [0.0040],
        [0.0001],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0005, 0.0003, 0.0003, 0.0007, 0.0011, 0.0010, 0.0008, 0.0003,
         0.0003, 0.0014, 0.0003, 0.0003, 0.0040, 0.0001, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.9747e-04],
        [3.5084e-02],
        [1.0360e-02],
        [1.1955e-02],
        [8.7744e-04],
        [1.5476e-03],
        [5.3909e-02],
        [2.3139e-03],
        [3.0750e-03],
        [1.0585e-03],
        [6.4718e-02],
        [7.4759e-04],
        [4.8303e-03],
        [4.3458e-02],
        [9.0006e-05],
        [5.6383e-02]], device='cuda:0')/tensor([[4.9747e-04, 3.5084e-02, 1.0360e-02, 1.1955e-02, 8.7744e-04, 1.5476e-03,
         5.3909e-02, 2.3139e-03, 3.0750e-03, 1.0585e-03, 6.4718e-02, 7.4759e-04,
         4.8303e-03, 4.3458e-02, 9.0006e-05, 5.6383e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1028e-04, 4.9747e-04],
        [4.5885e-04, 3.5084e-02],
        [2.8539e-04, 1.0360e-02],
        [3.1405e-04, 1.1955e-02],
        [6.6391e-04, 8.7744e-04],
        [1.0758e-03, 1.5476e-03],
        [1.0280e-03, 5.3909e-02],
        [7.5727e-04, 2.3139e-03],
        [3.1719e-04, 3.0750e-03],
        [3.1990e-04, 1.0585e-03],
        [1.3554e-03, 6.4718e-02],
        [2.7308e-04, 7.4759e-04],
        [3.4953e-04, 4.8303e-03],
        [4.0060e-03, 4.3458e-02],
        [1.2873e-04, 9.0006e-05],
        [1.1361e-03, 5.6383e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0033],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0002],
        [0.0010],
        [0.0007],
        [0.0005],
        [0.0001],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0033, 0.0003, 0.0004, 0.0004, 0.0005, 0.0003, 0.0005, 0.0005, 0.0006,
         0.0002, 0.0010, 0.0007, 0.0005, 0.0001, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0165],
        [0.0195],
        [0.0004],
        [0.0036],
        [0.0094],
        [0.0002],
        [0.0002],
        [0.0078],
        [0.0015],
        [0.0080],
        [0.0142],
        [0.0059],
        [0.0023],
        [0.0995],
        [0.0053],
        [0.0033]], device='cuda:0')/tensor([[0.0165, 0.0195, 0.0004, 0.0036, 0.0094, 0.0002, 0.0002, 0.0078, 0.0015,
         0.0080, 0.0142, 0.0059, 0.0023, 0.0995, 0.0053, 0.0033]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0033, 0.0165],
        [0.0003, 0.0195],
        [0.0004, 0.0004],
        [0.0004, 0.0036],
        [0.0005, 0.0094],
        [0.0003, 0.0002],
        [0.0005, 0.0002],
        [0.0005, 0.0078],
        [0.0006, 0.0015],
        [0.0002, 0.0080],
        [0.0010, 0.0142],
        [0.0007, 0.0059],
        [0.0005, 0.0023],
        [0.0001, 0.0995],
        [0.0005, 0.0053],
        [0.0002, 0.0033]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.7471e-04],
        [7.8572e-04],
        [1.4200e-03],
        [4.4035e-04],
        [7.8321e-05],
        [2.9276e-04],
        [7.2515e-04],
        [5.2874e-04],
        [5.0160e-04],
        [2.6496e-03],
        [5.5534e-04],
        [1.2213e-03],
        [1.8082e-04],
        [3.2870e-04],
        [1.0350e-03],
        [2.8933e-03]], device='cuda:0')/tensor([[8.7471e-04, 7.8572e-04, 1.4200e-03, 4.4035e-04, 7.8321e-05, 2.9276e-04,
         7.2515e-04, 5.2874e-04, 5.0160e-04, 2.6496e-03, 5.5534e-04, 1.2213e-03,
         1.8082e-04, 3.2870e-04, 1.0350e-03, 2.8933e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6551e-02],
        [3.5951e-03],
        [2.3907e-02],
        [5.3502e-03],
        [5.4932e-05],
        [2.7830e-02],
        [1.4600e-02],
        [7.9335e-03],
        [1.8212e-02],
        [4.1916e-02],
        [5.7363e-04],
        [4.8393e-03],
        [1.2029e-02],
        [7.7673e-03],
        [2.7322e-03],
        [1.4961e-02]], device='cuda:0')/tensor([[1.6551e-02, 3.5951e-03, 2.3907e-02, 5.3502e-03, 5.4932e-05, 2.7830e-02,
         1.4600e-02, 7.9335e-03, 1.8212e-02, 4.1916e-02, 5.7363e-04, 4.8393e-03,
         1.2029e-02, 7.7673e-03, 2.7322e-03, 1.4961e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.7471e-04, 1.6551e-02],
        [7.8572e-04, 3.5951e-03],
        [1.4200e-03, 2.3907e-02],
        [4.4035e-04, 5.3502e-03],
        [7.8321e-05, 5.4932e-05],
        [2.9276e-04, 2.7830e-02],
        [7.2515e-04, 1.4600e-02],
        [5.2874e-04, 7.9335e-03],
        [5.0160e-04, 1.8212e-02],
        [2.6496e-03, 4.1916e-02],
        [5.5534e-04, 5.7363e-04],
        [1.2213e-03, 4.8393e-03],
        [1.8082e-04, 1.2029e-02],
        [3.2870e-04, 7.7673e-03],
        [1.0350e-03, 2.7322e-03],
        [2.8933e-03, 1.4961e-02]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0008],
        [0.0005],
        [0.0009],
        [0.0007],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0015],
        [0.0005],
        [0.0006],
        [0.0010],
        [0.0030],
        [0.0007],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0005, 0.0009, 0.0007, 0.0003, 0.0003, 0.0003, 0.0015,
         0.0005, 0.0006, 0.0010, 0.0030, 0.0007, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0445],
        [0.0040],
        [0.0148],
        [0.0016],
        [0.0070],
        [0.0027],
        [0.0002],
        [0.0077],
        [0.0366],
        [0.0016],
        [0.0028],
        [0.0042],
        [0.0429],
        [0.0064],
        [0.0014]], device='cuda:0')/tensor([[0.0008, 0.0445, 0.0040, 0.0148, 0.0016, 0.0070, 0.0027, 0.0002, 0.0077,
         0.0366, 0.0016, 0.0028, 0.0042, 0.0429, 0.0064, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0008],
        [0.0008, 0.0445],
        [0.0005, 0.0040],
        [0.0009, 0.0148],
        [0.0007, 0.0016],
        [0.0003, 0.0070],
        [0.0003, 0.0027],
        [0.0003, 0.0002],
        [0.0015, 0.0077],
        [0.0005, 0.0366],
        [0.0006, 0.0016],
        [0.0010, 0.0028],
        [0.0030, 0.0042],
        [0.0007, 0.0429],
        [0.0004, 0.0064],
        [0.0002, 0.0014]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0005],
        [0.0006],
        [0.0011],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0007],
        [0.0004],
        [0.0004],
        [0.0009],
        [0.0001]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0006, 0.0011, 0.0002, 0.0004, 0.0004, 0.0004, 0.0003,
         0.0006, 0.0007, 0.0007, 0.0004, 0.0004, 0.0009, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0086],
        [0.0004],
        [0.0101],
        [0.0020],
        [0.0050],
        [0.0016],
        [0.0011],
        [0.0126],
        [0.0033],
        [0.0193],
        [0.0008],
        [0.0003],
        [0.0110],
        [0.0035],
        [0.0006],
        [0.0035]], device='cuda:0')/tensor([[0.0086, 0.0004, 0.0101, 0.0020, 0.0050, 0.0016, 0.0011, 0.0126, 0.0033,
         0.0193, 0.0008, 0.0003, 0.0110, 0.0035, 0.0006, 0.0035]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0086],
        [0.0005, 0.0004],
        [0.0006, 0.0101],
        [0.0011, 0.0020],
        [0.0002, 0.0050],
        [0.0004, 0.0016],
        [0.0004, 0.0011],
        [0.0004, 0.0126],
        [0.0003, 0.0033],
        [0.0006, 0.0193],
        [0.0007, 0.0008],
        [0.0007, 0.0003],
        [0.0004, 0.0110],
        [0.0004, 0.0035],
        [0.0009, 0.0006],
        [0.0001, 0.0035]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [2662] -> tensor([[0.0010],
        [0.0001],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0011],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0010, 0.0001, 0.0005, 0.0003, 0.0007, 0.0011, 0.0002, 0.0002]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0513],
        [0.0085],
        [0.0117],
        [0.0003],
        [0.0131],
        [0.0087],
        [0.0068],
        [0.0110]], device='cuda:0')/tensor([[0.0513, 0.0085, 0.0117, 0.0003, 0.0131, 0.0087, 0.0068, 0.0110]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0010, 0.0513],
        [0.0001, 0.0085],
        [0.0005, 0.0117],
        [0.0003, 0.0003],
        [0.0007, 0.0131],
        [0.0011, 0.0087],
        [0.0002, 0.0068],
        [0.0002, 0.0110]], device='cuda:0')
acc:  0.595
Time taken to execute the de SA task with prompt type passive, variation 1 and batchsize 16: 0:03:19.141628
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA passive 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 341.86it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0007],
        [0.0003],
        [0.0018],
        [0.0005],
        [0.0014],
        [0.0008],
        [0.0014],
        [0.0013],
        [0.0009],
        [0.0015],
        [0.0021],
        [0.0021],
        [0.0005],
        [0.0005],
        [0.0007]], device='cuda:0')/tensor([[0.0009, 0.0007, 0.0003, 0.0018, 0.0005, 0.0014, 0.0008, 0.0014, 0.0013,
         0.0009, 0.0015, 0.0021, 0.0021, 0.0005, 0.0005, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0393],
        [0.0298],
        [0.0085],
        [0.0719],
        [0.0285],
        [0.0021],
        [0.0399],
        [0.0079],
        [0.0081],
        [0.0110],
        [0.0122],
        [0.0501],
        [0.0374],
        [0.0399],
        [0.0125],
        [0.0519]], device='cuda:0')/tensor([[0.0393, 0.0298, 0.0085, 0.0719, 0.0285, 0.0021, 0.0399, 0.0079, 0.0081,
         0.0110, 0.0122, 0.0501, 0.0374, 0.0399, 0.0125, 0.0519]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0393],
        [0.0007, 0.0298],
        [0.0003, 0.0085],
        [0.0018, 0.0719],
        [0.0005, 0.0285],
        [0.0014, 0.0021],
        [0.0008, 0.0399],
        [0.0014, 0.0079],
        [0.0013, 0.0081],
        [0.0009, 0.0110],
        [0.0015, 0.0122],
        [0.0021, 0.0501],
        [0.0021, 0.0374],
        [0.0005, 0.0399],
        [0.0005, 0.0125],
        [0.0007, 0.0519]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.7116e-04],
        [8.4113e-04],
        [1.1700e-03],
        [7.4816e-05],
        [1.4472e-03],
        [9.3309e-04],
        [9.7419e-05],
        [6.6412e-04],
        [1.7510e-03],
        [1.8416e-04],
        [9.6732e-05],
        [1.0415e-03],
        [3.0197e-04],
        [2.0357e-03],
        [1.0644e-03],
        [4.0287e-04]], device='cuda:0')/tensor([[5.7116e-04, 8.4113e-04, 1.1700e-03, 7.4816e-05, 1.4472e-03, 9.3309e-04,
         9.7419e-05, 6.6412e-04, 1.7510e-03, 1.8416e-04, 9.6732e-05, 1.0415e-03,
         3.0197e-04, 2.0357e-03, 1.0644e-03, 4.0287e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4831e-03],
        [1.9488e-03],
        [2.0892e-02],
        [7.6689e-05],
        [1.3176e-01],
        [5.3817e-02],
        [5.9890e-03],
        [3.6705e-03],
        [2.3537e-02],
        [2.7905e-03],
        [1.3873e-03],
        [3.9126e-03],
        [5.1227e-04],
        [4.8068e-02],
        [1.1792e-03],
        [3.1220e-02]], device='cuda:0')/tensor([[2.4831e-03, 1.9488e-03, 2.0892e-02, 7.6689e-05, 1.3176e-01, 5.3817e-02,
         5.9890e-03, 3.6705e-03, 2.3537e-02, 2.7905e-03, 1.3873e-03, 3.9126e-03,
         5.1227e-04, 4.8068e-02, 1.1792e-03, 3.1220e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.7116e-04, 2.4831e-03],
        [8.4113e-04, 1.9488e-03],
        [1.1700e-03, 2.0892e-02],
        [7.4816e-05, 7.6689e-05],
        [1.4472e-03, 1.3176e-01],
        [9.3309e-04, 5.3817e-02],
        [9.7419e-05, 5.9890e-03],
        [6.6412e-04, 3.6705e-03],
        [1.7510e-03, 2.3537e-02],
        [1.8416e-04, 2.7905e-03],
        [9.6732e-05, 1.3873e-03],
        [1.0415e-03, 3.9126e-03],
        [3.0197e-04, 5.1227e-04],
        [2.0357e-03, 4.8068e-02],
        [1.0644e-03, 1.1792e-03],
        [4.0287e-04, 3.1220e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.7024e-04],
        [6.3673e-04],
        [8.1550e-04],
        [4.5876e-04],
        [7.4505e-04],
        [1.2401e-03],
        [3.4700e-03],
        [1.2323e-03],
        [8.0048e-06],
        [6.8190e-04],
        [6.2692e-04],
        [6.7187e-04],
        [9.8029e-04],
        [3.5162e-03],
        [1.7005e-03],
        [7.0248e-05]], device='cuda:0')/tensor([[7.7024e-04, 6.3673e-04, 8.1550e-04, 4.5876e-04, 7.4505e-04, 1.2401e-03,
         3.4700e-03, 1.2323e-03, 8.0048e-06, 6.8190e-04, 6.2692e-04, 6.7187e-04,
         9.8029e-04, 3.5162e-03, 1.7005e-03, 7.0248e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0384],
        [0.0345],
        [0.0189],
        [0.0635],
        [0.0014],
        [0.0288],
        [0.0142],
        [0.1095],
        [0.0003],
        [0.0118],
        [0.0035],
        [0.0208],
        [0.0909],
        [0.0256],
        [0.0197],
        [0.0642]], device='cuda:0')/tensor([[0.0384, 0.0345, 0.0189, 0.0635, 0.0014, 0.0288, 0.0142, 0.1095, 0.0003,
         0.0118, 0.0035, 0.0208, 0.0909, 0.0256, 0.0197, 0.0642]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.7024e-04, 3.8396e-02],
        [6.3673e-04, 3.4458e-02],
        [8.1550e-04, 1.8941e-02],
        [4.5876e-04, 6.3530e-02],
        [7.4505e-04, 1.4229e-03],
        [1.2401e-03, 2.8819e-02],
        [3.4700e-03, 1.4235e-02],
        [1.2323e-03, 1.0953e-01],
        [8.0048e-06, 2.8045e-04],
        [6.8190e-04, 1.1822e-02],
        [6.2692e-04, 3.4663e-03],
        [6.7187e-04, 2.0752e-02],
        [9.8029e-04, 9.0921e-02],
        [3.5162e-03, 2.5606e-02],
        [1.7005e-03, 1.9729e-02],
        [7.0248e-05, 6.4171e-02]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0008],
        [0.0016],
        [0.0007],
        [0.0006],
        [0.0017],
        [0.0006],
        [0.0001],
        [0.0011],
        [0.0004],
        [0.0018],
        [0.0014],
        [0.0007],
        [0.0008],
        [0.0016],
        [0.0013]], device='cuda:0')/tensor([[0.0012, 0.0008, 0.0016, 0.0007, 0.0006, 0.0017, 0.0006, 0.0001, 0.0011,
         0.0004, 0.0018, 0.0014, 0.0007, 0.0008, 0.0016, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0464],
        [0.0037],
        [0.0154],
        [0.0207],
        [0.0130],
        [0.0544],
        [0.0236],
        [0.0007],
        [0.0010],
        [0.0191],
        [0.0015],
        [0.0608],
        [0.0093],
        [0.0670],
        [0.0909],
        [0.0016]], device='cuda:0')/tensor([[0.0464, 0.0037, 0.0154, 0.0207, 0.0130, 0.0544, 0.0236, 0.0007, 0.0010,
         0.0191, 0.0015, 0.0608, 0.0093, 0.0670, 0.0909, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0464],
        [0.0008, 0.0037],
        [0.0016, 0.0154],
        [0.0007, 0.0207],
        [0.0006, 0.0130],
        [0.0017, 0.0544],
        [0.0006, 0.0236],
        [0.0001, 0.0007],
        [0.0011, 0.0010],
        [0.0004, 0.0191],
        [0.0018, 0.0015],
        [0.0014, 0.0608],
        [0.0007, 0.0093],
        [0.0008, 0.0670],
        [0.0016, 0.0909],
        [0.0013, 0.0016]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0012],
        [0.0015],
        [0.0005],
        [0.0004],
        [0.0027],
        [0.0004],
        [0.0021],
        [0.0003],
        [0.0016],
        [0.0005],
        [0.0031],
        [0.0012],
        [0.0011],
        [0.0001],
        [0.0008]], device='cuda:0')/tensor([[0.0005, 0.0012, 0.0015, 0.0005, 0.0004, 0.0027, 0.0004, 0.0021, 0.0003,
         0.0016, 0.0005, 0.0031, 0.0012, 0.0011, 0.0001, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0157],
        [0.0991],
        [0.0166],
        [0.0125],
        [0.0016],
        [0.0126],
        [0.0139],
        [0.0047],
        [0.0022],
        [0.0022],
        [0.0207],
        [0.0527],
        [0.0042],
        [0.0222],
        [0.0397],
        [0.0006]], device='cuda:0')/tensor([[0.0157, 0.0991, 0.0166, 0.0125, 0.0016, 0.0126, 0.0139, 0.0047, 0.0022,
         0.0022, 0.0207, 0.0527, 0.0042, 0.0222, 0.0397, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0157],
        [0.0012, 0.0991],
        [0.0015, 0.0166],
        [0.0005, 0.0125],
        [0.0004, 0.0016],
        [0.0027, 0.0126],
        [0.0004, 0.0139],
        [0.0021, 0.0047],
        [0.0003, 0.0022],
        [0.0016, 0.0022],
        [0.0005, 0.0207],
        [0.0031, 0.0527],
        [0.0012, 0.0042],
        [0.0011, 0.0222],
        [0.0001, 0.0397],
        [0.0008, 0.0006]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0013],
        [0.0009],
        [0.0012],
        [0.0004],
        [0.0025],
        [0.0025],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0033],
        [0.0004],
        [0.0010],
        [0.0004],
        [0.0006],
        [0.0001]], device='cuda:0')/tensor([[0.0007, 0.0013, 0.0009, 0.0012, 0.0004, 0.0025, 0.0025, 0.0004, 0.0005,
         0.0004, 0.0033, 0.0004, 0.0010, 0.0004, 0.0006, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0349],
        [0.0408],
        [0.0126],
        [0.0439],
        [0.0023],
        [0.0141],
        [0.0167],
        [0.0009],
        [0.0013],
        [0.0008],
        [0.0044],
        [0.0008],
        [0.0194],
        [0.0135],
        [0.0047],
        [0.1295]], device='cuda:0')/tensor([[0.0349, 0.0408, 0.0126, 0.0439, 0.0023, 0.0141, 0.0167, 0.0009, 0.0013,
         0.0008, 0.0044, 0.0008, 0.0194, 0.0135, 0.0047, 0.1295]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.0994e-04, 3.4947e-02],
        [1.3102e-03, 4.0799e-02],
        [9.4711e-04, 1.2608e-02],
        [1.2393e-03, 4.3855e-02],
        [3.7531e-04, 2.2899e-03],
        [2.4690e-03, 1.4088e-02],
        [2.4629e-03, 1.6717e-02],
        [4.0207e-04, 9.2171e-04],
        [5.4637e-04, 1.3477e-03],
        [3.7204e-04, 7.6201e-04],
        [3.3142e-03, 4.4481e-03],
        [4.1117e-04, 7.6228e-04],
        [1.0239e-03, 1.9390e-02],
        [4.4962e-04, 1.3458e-02],
        [6.4914e-04, 4.6665e-03],
        [1.2345e-04, 1.2948e-01]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0005],
        [0.0020],
        [0.0007],
        [0.0004],
        [0.0004],
        [0.0025],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0009],
        [0.0006],
        [0.0002],
        [0.0010],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0005, 0.0020, 0.0007, 0.0004, 0.0004, 0.0025, 0.0005, 0.0005,
         0.0003, 0.0001, 0.0009, 0.0006, 0.0002, 0.0010, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.6810e-02],
        [5.1885e-04],
        [2.3511e-02],
        [6.7430e-03],
        [9.7762e-04],
        [5.2860e-02],
        [3.5692e-02],
        [1.7485e-02],
        [5.6881e-03],
        [2.3946e-04],
        [3.4564e-03],
        [1.2597e-01],
        [1.6947e-03],
        [1.0373e-04],
        [3.5978e-03],
        [3.4283e-02]], device='cuda:0')/tensor([[4.6810e-02, 5.1885e-04, 2.3511e-02, 6.7430e-03, 9.7762e-04, 5.2860e-02,
         3.5692e-02, 1.7485e-02, 5.6881e-03, 2.3946e-04, 3.4564e-03, 1.2597e-01,
         1.6947e-03, 1.0373e-04, 3.5978e-03, 3.4283e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2383e-03, 4.6810e-02],
        [4.7683e-04, 5.1885e-04],
        [1.9668e-03, 2.3511e-02],
        [6.8663e-04, 6.7430e-03],
        [3.9001e-04, 9.7762e-04],
        [3.8631e-04, 5.2860e-02],
        [2.5304e-03, 3.5692e-02],
        [4.9102e-04, 1.7485e-02],
        [4.9420e-04, 5.6881e-03],
        [2.5612e-04, 2.3946e-04],
        [1.0939e-04, 3.4564e-03],
        [9.1570e-04, 1.2597e-01],
        [6.2761e-04, 1.6947e-03],
        [2.0468e-04, 1.0373e-04],
        [1.0058e-03, 3.5978e-03],
        [6.4877e-04, 3.4283e-02]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0027],
        [0.0004],
        [0.0012],
        [0.0010],
        [0.0008],
        [0.0009],
        [0.0002],
        [0.0006],
        [0.0015],
        [0.0009],
        [0.0011],
        [0.0009],
        [0.0007],
        [0.0002],
        [0.0020]], device='cuda:0')/tensor([[0.0006, 0.0027, 0.0004, 0.0012, 0.0010, 0.0008, 0.0009, 0.0002, 0.0006,
         0.0015, 0.0009, 0.0011, 0.0009, 0.0007, 0.0002, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0171],
        [0.0108],
        [0.0012],
        [0.0023],
        [0.0208],
        [0.0033],
        [0.0021],
        [0.0287],
        [0.0544],
        [0.0224],
        [0.0331],
        [0.0403],
        [0.0445],
        [0.0758],
        [0.0153],
        [0.0368]], device='cuda:0')/tensor([[0.0171, 0.0108, 0.0012, 0.0023, 0.0208, 0.0033, 0.0021, 0.0287, 0.0544,
         0.0224, 0.0331, 0.0403, 0.0445, 0.0758, 0.0153, 0.0368]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0171],
        [0.0027, 0.0108],
        [0.0004, 0.0012],
        [0.0012, 0.0023],
        [0.0010, 0.0208],
        [0.0008, 0.0033],
        [0.0009, 0.0021],
        [0.0002, 0.0287],
        [0.0006, 0.0544],
        [0.0015, 0.0224],
        [0.0009, 0.0331],
        [0.0011, 0.0403],
        [0.0009, 0.0445],
        [0.0007, 0.0758],
        [0.0002, 0.0153],
        [0.0020, 0.0368]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0008],
        [0.0005],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0007],
        [0.0030],
        [0.0001],
        [0.0008],
        [0.0025],
        [0.0008],
        [0.0009],
        [0.0032],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0005, 0.0011, 0.0005, 0.0003, 0.0007, 0.0007, 0.0030,
         0.0001, 0.0008, 0.0025, 0.0008, 0.0009, 0.0032, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0003],
        [0.0008],
        [0.0059],
        [0.0604],
        [0.0274],
        [0.0218],
        [0.0165],
        [0.0140],
        [0.0906],
        [0.0024],
        [0.0054],
        [0.0918],
        [0.0365],
        [0.0130],
        [0.0059],
        [0.0782]], device='cuda:0')/tensor([[0.0003, 0.0008, 0.0059, 0.0604, 0.0274, 0.0218, 0.0165, 0.0140, 0.0906,
         0.0024, 0.0054, 0.0918, 0.0365, 0.0130, 0.0059, 0.0782]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0003],
        [0.0008, 0.0008],
        [0.0005, 0.0059],
        [0.0011, 0.0604],
        [0.0005, 0.0274],
        [0.0003, 0.0218],
        [0.0007, 0.0165],
        [0.0007, 0.0140],
        [0.0030, 0.0906],
        [0.0001, 0.0024],
        [0.0008, 0.0054],
        [0.0025, 0.0918],
        [0.0008, 0.0365],
        [0.0009, 0.0130],
        [0.0032, 0.0059],
        [0.0006, 0.0782]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0004],
        [0.0020],
        [0.0014],
        [0.0006],
        [0.0003],
        [0.0011],
        [0.0010],
        [0.0010],
        [0.0008],
        [0.0004],
        [0.0016],
        [0.0004],
        [0.0005],
        [0.0008],
        [0.0009]], device='cuda:0')/tensor([[0.0009, 0.0004, 0.0020, 0.0014, 0.0006, 0.0003, 0.0011, 0.0010, 0.0010,
         0.0008, 0.0004, 0.0016, 0.0004, 0.0005, 0.0008, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0613],
        [0.0733],
        [0.0054],
        [0.0017],
        [0.0218],
        [0.0006],
        [0.0111],
        [0.0434],
        [0.0028],
        [0.0027],
        [0.0263],
        [0.0552],
        [0.0044],
        [0.0219],
        [0.0040],
        [0.0012]], device='cuda:0')/tensor([[0.0613, 0.0733, 0.0054, 0.0017, 0.0218, 0.0006, 0.0111, 0.0434, 0.0028,
         0.0027, 0.0263, 0.0552, 0.0044, 0.0219, 0.0040, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0613],
        [0.0004, 0.0733],
        [0.0020, 0.0054],
        [0.0014, 0.0017],
        [0.0006, 0.0218],
        [0.0003, 0.0006],
        [0.0011, 0.0111],
        [0.0010, 0.0434],
        [0.0010, 0.0028],
        [0.0008, 0.0027],
        [0.0004, 0.0263],
        [0.0016, 0.0552],
        [0.0004, 0.0044],
        [0.0005, 0.0219],
        [0.0008, 0.0040],
        [0.0009, 0.0012]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0012],
        [0.0002],
        [0.0020],
        [0.0003],
        [0.0006],
        [0.0009],
        [0.0003],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0006],
        [0.0003],
        [0.0011]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0012, 0.0002, 0.0020, 0.0003, 0.0006, 0.0009, 0.0003,
         0.0007, 0.0005, 0.0005, 0.0008, 0.0006, 0.0003, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0518],
        [0.0025],
        [0.0678],
        [0.0030],
        [0.0060],
        [0.0058],
        [0.0663],
        [0.0013],
        [0.0109],
        [0.0122],
        [0.0224],
        [0.0067],
        [0.0019],
        [0.0071],
        [0.0182],
        [0.0402]], device='cuda:0')/tensor([[0.0518, 0.0025, 0.0678, 0.0030, 0.0060, 0.0058, 0.0663, 0.0013, 0.0109,
         0.0122, 0.0224, 0.0067, 0.0019, 0.0071, 0.0182, 0.0402]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0518],
        [0.0003, 0.0025],
        [0.0012, 0.0678],
        [0.0002, 0.0030],
        [0.0020, 0.0060],
        [0.0003, 0.0058],
        [0.0006, 0.0663],
        [0.0009, 0.0013],
        [0.0003, 0.0109],
        [0.0007, 0.0122],
        [0.0005, 0.0224],
        [0.0005, 0.0067],
        [0.0008, 0.0019],
        [0.0006, 0.0071],
        [0.0003, 0.0182],
        [0.0011, 0.0402]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.9671e-04],
        [5.4579e-04],
        [2.0997e-03],
        [6.4670e-04],
        [6.2166e-04],
        [1.1279e-03],
        [1.3571e-03],
        [1.8531e-03],
        [7.2132e-04],
        [8.9067e-04],
        [4.1205e-04],
        [2.5740e-04],
        [1.4274e-03],
        [6.0150e-04],
        [1.4285e-03],
        [7.1231e-05]], device='cuda:0')/tensor([[9.9671e-04, 5.4579e-04, 2.0997e-03, 6.4670e-04, 6.2166e-04, 1.1279e-03,
         1.3571e-03, 1.8531e-03, 7.2132e-04, 8.9067e-04, 4.1205e-04, 2.5740e-04,
         1.4274e-03, 6.0150e-04, 1.4285e-03, 7.1231e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0177],
        [0.0204],
        [0.0071],
        [0.0165],
        [0.0026],
        [0.0605],
        [0.0042],
        [0.0672],
        [0.0037],
        [0.0014],
        [0.0164],
        [0.0003],
        [0.0023],
        [0.0105],
        [0.0144],
        [0.0041]], device='cuda:0')/tensor([[0.0177, 0.0204, 0.0071, 0.0165, 0.0026, 0.0605, 0.0042, 0.0672, 0.0037,
         0.0014, 0.0164, 0.0003, 0.0023, 0.0105, 0.0144, 0.0041]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.9671e-04, 1.7711e-02],
        [5.4579e-04, 2.0431e-02],
        [2.0997e-03, 7.1097e-03],
        [6.4670e-04, 1.6531e-02],
        [6.2166e-04, 2.5880e-03],
        [1.1279e-03, 6.0486e-02],
        [1.3571e-03, 4.1680e-03],
        [1.8531e-03, 6.7242e-02],
        [7.2132e-04, 3.7137e-03],
        [8.9067e-04, 1.4168e-03],
        [4.1205e-04, 1.6389e-02],
        [2.5740e-04, 2.5900e-04],
        [1.4274e-03, 2.2755e-03],
        [6.0150e-04, 1.0535e-02],
        [1.4285e-03, 1.4355e-02],
        [7.1231e-05, 4.0599e-03]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0018],
        [0.0016],
        [0.0003],
        [0.0027],
        [0.0009],
        [0.0009]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0018, 0.0016, 0.0003, 0.0027, 0.0009, 0.0009]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0005],
        [0.0074],
        [0.0090],
        [0.0577],
        [0.0108],
        [0.0188],
        [0.0462],
        [0.0126]], device='cuda:0')/tensor([[0.0005, 0.0074, 0.0090, 0.0577, 0.0108, 0.0188, 0.0462, 0.0126]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0003, 0.0005],
        [0.0004, 0.0074],
        [0.0018, 0.0090],
        [0.0016, 0.0577],
        [0.0003, 0.0108],
        [0.0027, 0.0188],
        [0.0009, 0.0462],
        [0.0009, 0.0126]], device='cuda:0')
acc:  0.535
Time taken to execute the de SA task with prompt type passive, variation 2 and batchsize 16: 0:03:18.245562
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA passive 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 332.34it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0004],
        [0.0006],
        [0.0006],
        [0.0018],
        [0.0005],
        [0.0004],
        [0.0011],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0014],
        [0.0003],
        [0.0003],
        [0.0009],
        [0.0002]], device='cuda:0')/tensor([[0.0008, 0.0004, 0.0006, 0.0006, 0.0018, 0.0005, 0.0004, 0.0011, 0.0002,
         0.0003, 0.0005, 0.0014, 0.0003, 0.0003, 0.0009, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0386],
        [0.0031],
        [0.0003],
        [0.0061],
        [0.0455],
        [0.0005],
        [0.0090],
        [0.0150],
        [0.0631],
        [0.0001],
        [0.0054],
        [0.0298],
        [0.0011],
        [0.0061],
        [0.0235],
        [0.0001]], device='cuda:0')/tensor([[0.0386, 0.0031, 0.0003, 0.0061, 0.0455, 0.0005, 0.0090, 0.0150, 0.0631,
         0.0001, 0.0054, 0.0298, 0.0011, 0.0061, 0.0235, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0386],
        [0.0004, 0.0031],
        [0.0006, 0.0003],
        [0.0006, 0.0061],
        [0.0018, 0.0455],
        [0.0005, 0.0005],
        [0.0004, 0.0090],
        [0.0011, 0.0150],
        [0.0002, 0.0631],
        [0.0003, 0.0001],
        [0.0005, 0.0054],
        [0.0014, 0.0298],
        [0.0003, 0.0011],
        [0.0003, 0.0061],
        [0.0009, 0.0235],
        [0.0002, 0.0001]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0006],
        [0.0015],
        [0.0004],
        [0.0007],
        [0.0009],
        [0.0003],
        [0.0004],
        [0.0045],
        [0.0006],
        [0.0011],
        [0.0006],
        [0.0014],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0006, 0.0015, 0.0004, 0.0007, 0.0009, 0.0003, 0.0004,
         0.0045, 0.0006, 0.0011, 0.0006, 0.0014, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0086],
        [0.0010],
        [0.0019],
        [0.0051],
        [0.0006],
        [0.0006],
        [0.0013],
        [0.0007],
        [0.0042],
        [0.0222],
        [0.0426],
        [0.0024],
        [0.0046],
        [0.0654],
        [0.0034],
        [0.0067]], device='cuda:0')/tensor([[0.0086, 0.0010, 0.0019, 0.0051, 0.0006, 0.0006, 0.0013, 0.0007, 0.0042,
         0.0222, 0.0426, 0.0024, 0.0046, 0.0654, 0.0034, 0.0067]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0086],
        [0.0002, 0.0010],
        [0.0006, 0.0019],
        [0.0015, 0.0051],
        [0.0004, 0.0006],
        [0.0007, 0.0006],
        [0.0009, 0.0013],
        [0.0003, 0.0007],
        [0.0004, 0.0042],
        [0.0045, 0.0222],
        [0.0006, 0.0426],
        [0.0011, 0.0024],
        [0.0006, 0.0046],
        [0.0014, 0.0654],
        [0.0003, 0.0034],
        [0.0006, 0.0067]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0028],
        [0.0005],
        [0.0004],
        [0.0010],
        [0.0001],
        [0.0012],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0016]], device='cuda:0')/tensor([[0.0010, 0.0028, 0.0005, 0.0004, 0.0010, 0.0001, 0.0012, 0.0004, 0.0006,
         0.0003, 0.0004, 0.0003, 0.0003, 0.0006, 0.0007, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0036],
        [0.0247],
        [0.0083],
        [0.0017],
        [0.0008],
        [0.0014],
        [0.0126],
        [0.0103],
        [0.0005],
        [0.0099],
        [0.0038],
        [0.0008],
        [0.0115],
        [0.0004],
        [0.0188],
        [0.0343]], device='cuda:0')/tensor([[0.0036, 0.0247, 0.0083, 0.0017, 0.0008, 0.0014, 0.0126, 0.0103, 0.0005,
         0.0099, 0.0038, 0.0008, 0.0115, 0.0004, 0.0188, 0.0343]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0036],
        [0.0028, 0.0247],
        [0.0005, 0.0083],
        [0.0004, 0.0017],
        [0.0010, 0.0008],
        [0.0001, 0.0014],
        [0.0012, 0.0126],
        [0.0004, 0.0103],
        [0.0006, 0.0005],
        [0.0003, 0.0099],
        [0.0004, 0.0038],
        [0.0003, 0.0008],
        [0.0003, 0.0115],
        [0.0006, 0.0004],
        [0.0007, 0.0188],
        [0.0016, 0.0343]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.9582e-04],
        [4.5021e-04],
        [6.0616e-04],
        [1.1204e-03],
        [5.3010e-04],
        [1.3593e-03],
        [1.6576e-03],
        [5.7204e-04],
        [4.3520e-04],
        [1.3223e-04],
        [5.8212e-04],
        [7.4955e-05],
        [7.6661e-04],
        [1.1478e-03],
        [1.8245e-03],
        [1.8052e-03]], device='cuda:0')/tensor([[7.9582e-04, 4.5021e-04, 6.0616e-04, 1.1204e-03, 5.3010e-04, 1.3593e-03,
         1.6576e-03, 5.7204e-04, 4.3520e-04, 1.3223e-04, 5.8212e-04, 7.4955e-05,
         7.6661e-04, 1.1478e-03, 1.8245e-03, 1.8052e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2996e-02],
        [3.6388e-02],
        [1.8220e-02],
        [1.3536e-02],
        [2.1736e-02],
        [2.4261e-03],
        [1.2053e-01],
        [8.0340e-03],
        [6.7848e-03],
        [4.2979e-03],
        [1.5670e-02],
        [4.0875e-05],
        [1.0207e-03],
        [2.3323e-02],
        [1.3264e-02],
        [7.6174e-02]], device='cuda:0')/tensor([[1.2996e-02, 3.6388e-02, 1.8220e-02, 1.3536e-02, 2.1736e-02, 2.4261e-03,
         1.2053e-01, 8.0340e-03, 6.7848e-03, 4.2979e-03, 1.5670e-02, 4.0875e-05,
         1.0207e-03, 2.3323e-02, 1.3264e-02, 7.6174e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.9582e-04, 1.2996e-02],
        [4.5021e-04, 3.6388e-02],
        [6.0616e-04, 1.8220e-02],
        [1.1204e-03, 1.3536e-02],
        [5.3010e-04, 2.1736e-02],
        [1.3593e-03, 2.4261e-03],
        [1.6576e-03, 1.2053e-01],
        [5.7204e-04, 8.0340e-03],
        [4.3520e-04, 6.7848e-03],
        [1.3223e-04, 4.2979e-03],
        [5.8212e-04, 1.5670e-02],
        [7.4955e-05, 4.0875e-05],
        [7.6661e-04, 1.0207e-03],
        [1.1478e-03, 2.3323e-02],
        [1.8245e-03, 1.3264e-02],
        [1.8052e-03, 7.6174e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0005],
        [0.0006],
        [0.0015],
        [0.0006],
        [0.0008],
        [0.0015],
        [0.0018],
        [0.0002],
        [0.0023],
        [0.0005],
        [0.0015],
        [0.0013],
        [0.0010],
        [0.0009],
        [0.0023]], device='cuda:0')/tensor([[0.0012, 0.0005, 0.0006, 0.0015, 0.0006, 0.0008, 0.0015, 0.0018, 0.0002,
         0.0023, 0.0005, 0.0015, 0.0013, 0.0010, 0.0009, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0093],
        [0.0029],
        [0.0064],
        [0.0054],
        [0.0062],
        [0.0188],
        [0.0040],
        [0.0062],
        [0.0048],
        [0.0020],
        [0.0752],
        [0.0028],
        [0.0122],
        [0.0115],
        [0.0246]], device='cuda:0')/tensor([[0.0014, 0.0093, 0.0029, 0.0064, 0.0054, 0.0062, 0.0188, 0.0040, 0.0062,
         0.0048, 0.0020, 0.0752, 0.0028, 0.0122, 0.0115, 0.0246]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0014],
        [0.0005, 0.0093],
        [0.0006, 0.0029],
        [0.0015, 0.0064],
        [0.0006, 0.0054],
        [0.0008, 0.0062],
        [0.0015, 0.0188],
        [0.0018, 0.0040],
        [0.0002, 0.0062],
        [0.0023, 0.0048],
        [0.0005, 0.0020],
        [0.0015, 0.0752],
        [0.0013, 0.0028],
        [0.0010, 0.0122],
        [0.0009, 0.0115],
        [0.0023, 0.0246]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3127e-04],
        [3.8024e-03],
        [1.1598e-03],
        [2.7732e-03],
        [2.0199e-03],
        [1.3735e-03],
        [1.5045e-04],
        [3.0249e-04],
        [3.7897e-03],
        [7.9685e-04],
        [6.0873e-04],
        [1.1218e-03],
        [2.1090e-06],
        [6.9607e-04],
        [1.9763e-04],
        [3.6565e-04]], device='cuda:0')/tensor([[1.3127e-04, 3.8024e-03, 1.1598e-03, 2.7732e-03, 2.0199e-03, 1.3735e-03,
         1.5045e-04, 3.0249e-04, 3.7897e-03, 7.9685e-04, 6.0873e-04, 1.1218e-03,
         2.1090e-06, 6.9607e-04, 1.9763e-04, 3.6565e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.8616e-03],
        [1.2226e-02],
        [2.9072e-03],
        [6.4041e-03],
        [2.0512e-02],
        [3.1050e-03],
        [8.2913e-03],
        [3.4825e-03],
        [3.1651e-02],
        [5.5489e-04],
        [3.0190e-03],
        [2.6543e-02],
        [3.7900e-05],
        [9.0132e-04],
        [4.7611e-03],
        [2.5227e-03]], device='cuda:0')/tensor([[5.8616e-03, 1.2226e-02, 2.9072e-03, 6.4041e-03, 2.0512e-02, 3.1050e-03,
         8.2913e-03, 3.4825e-03, 3.1651e-02, 5.5489e-04, 3.0190e-03, 2.6543e-02,
         3.7900e-05, 9.0132e-04, 4.7611e-03, 2.5227e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3127e-04, 5.8616e-03],
        [3.8024e-03, 1.2226e-02],
        [1.1598e-03, 2.9072e-03],
        [2.7732e-03, 6.4041e-03],
        [2.0199e-03, 2.0512e-02],
        [1.3735e-03, 3.1050e-03],
        [1.5045e-04, 8.2913e-03],
        [3.0249e-04, 3.4825e-03],
        [3.7897e-03, 3.1651e-02],
        [7.9685e-04, 5.5489e-04],
        [6.0873e-04, 3.0190e-03],
        [1.1218e-03, 2.6543e-02],
        [2.1090e-06, 3.7900e-05],
        [6.9607e-04, 9.0132e-04],
        [1.9763e-04, 4.7611e-03],
        [3.6565e-04, 2.5227e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0003],
        [0.0006],
        [0.0014],
        [0.0013],
        [0.0017],
        [0.0005],
        [0.0008],
        [0.0011],
        [0.0005],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0005, 0.0002, 0.0008, 0.0003, 0.0006, 0.0014, 0.0013,
         0.0017, 0.0005, 0.0008, 0.0011, 0.0005, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0054],
        [0.0004],
        [0.0041],
        [0.0078],
        [0.0209],
        [0.0114],
        [0.0166],
        [0.0067],
        [0.0747],
        [0.0281],
        [0.0084],
        [0.0184],
        [0.0035],
        [0.0108],
        [0.0031],
        [0.0021]], device='cuda:0')/tensor([[0.0054, 0.0004, 0.0041, 0.0078, 0.0209, 0.0114, 0.0166, 0.0067, 0.0747,
         0.0281, 0.0084, 0.0184, 0.0035, 0.0108, 0.0031, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0054],
        [0.0003, 0.0004],
        [0.0005, 0.0041],
        [0.0002, 0.0078],
        [0.0008, 0.0209],
        [0.0003, 0.0114],
        [0.0006, 0.0166],
        [0.0014, 0.0067],
        [0.0013, 0.0747],
        [0.0017, 0.0281],
        [0.0005, 0.0084],
        [0.0008, 0.0184],
        [0.0011, 0.0035],
        [0.0005, 0.0108],
        [0.0009, 0.0031],
        [0.0007, 0.0021]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0017],
        [0.0004],
        [0.0001],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0005],
        [0.0026],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0004],
        [0.0008],
        [0.0014]], device='cuda:0')/tensor([[0.0007, 0.0017, 0.0004, 0.0001, 0.0004, 0.0002, 0.0005, 0.0005, 0.0026,
         0.0008, 0.0004, 0.0006, 0.0010, 0.0004, 0.0008, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0201],
        [0.0916],
        [0.0070],
        [0.0003],
        [0.0371],
        [0.0011],
        [0.0048],
        [0.0003],
        [0.1386],
        [0.0164],
        [0.0015],
        [0.0078],
        [0.0242],
        [0.0164],
        [0.0061],
        [0.0012]], device='cuda:0')/tensor([[0.0201, 0.0916, 0.0070, 0.0003, 0.0371, 0.0011, 0.0048, 0.0003, 0.1386,
         0.0164, 0.0015, 0.0078, 0.0242, 0.0164, 0.0061, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.5516e-04, 2.0105e-02],
        [1.7492e-03, 9.1571e-02],
        [3.9006e-04, 6.9966e-03],
        [1.2148e-04, 3.0241e-04],
        [4.3819e-04, 3.7104e-02],
        [2.4781e-04, 1.0897e-03],
        [4.8678e-04, 4.7839e-03],
        [5.2921e-04, 3.2044e-04],
        [2.6005e-03, 1.3857e-01],
        [7.7819e-04, 1.6368e-02],
        [4.1437e-04, 1.5091e-03],
        [6.0886e-04, 7.8500e-03],
        [1.0327e-03, 2.4161e-02],
        [4.2308e-04, 1.6353e-02],
        [7.6382e-04, 6.1281e-03],
        [1.4282e-03, 1.2342e-03]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.9056e-04],
        [5.0050e-04],
        [5.1838e-03],
        [1.1450e-03],
        [1.4753e-03],
        [3.8938e-04],
        [2.6682e-04],
        [4.6265e-06],
        [6.7509e-04],
        [6.6028e-04],
        [1.6980e-03],
        [3.9510e-04],
        [1.4946e-03],
        [1.3022e-03],
        [3.5198e-04],
        [1.0027e-03]], device='cuda:0')/tensor([[2.9056e-04, 5.0050e-04, 5.1838e-03, 1.1450e-03, 1.4753e-03, 3.8938e-04,
         2.6682e-04, 4.6265e-06, 6.7509e-04, 6.6028e-04, 1.6980e-03, 3.9510e-04,
         1.4946e-03, 1.3022e-03, 3.5198e-04, 1.0027e-03]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5603e-03],
        [5.1349e-04],
        [3.6228e-02],
        [8.2636e-03],
        [4.3166e-03],
        [4.9498e-04],
        [6.5087e-03],
        [1.9690e-05],
        [4.5851e-03],
        [1.6537e-03],
        [7.6273e-02],
        [3.1454e-02],
        [1.6002e-02],
        [1.6395e-02],
        [4.1525e-04],
        [1.0458e-03]], device='cuda:0')/tensor([[8.5603e-03, 5.1349e-04, 3.6228e-02, 8.2636e-03, 4.3166e-03, 4.9498e-04,
         6.5087e-03, 1.9690e-05, 4.5851e-03, 1.6537e-03, 7.6273e-02, 3.1454e-02,
         1.6002e-02, 1.6395e-02, 4.1525e-04, 1.0458e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.9056e-04, 8.5603e-03],
        [5.0050e-04, 5.1349e-04],
        [5.1838e-03, 3.6228e-02],
        [1.1450e-03, 8.2636e-03],
        [1.4753e-03, 4.3166e-03],
        [3.8938e-04, 4.9498e-04],
        [2.6682e-04, 6.5087e-03],
        [4.6265e-06, 1.9690e-05],
        [6.7509e-04, 4.5851e-03],
        [6.6028e-04, 1.6537e-03],
        [1.6980e-03, 7.6273e-02],
        [3.9510e-04, 3.1454e-02],
        [1.4946e-03, 1.6002e-02],
        [1.3022e-03, 1.6395e-02],
        [3.5198e-04, 4.1525e-04],
        [1.0027e-03, 1.0458e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0013],
        [0.0020],
        [0.0002],
        [0.0008],
        [0.0012],
        [0.0001],
        [0.0003],
        [0.0006],
        [0.0009],
        [0.0016],
        [0.0008],
        [0.0002],
        [0.0004],
        [0.0008],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0013, 0.0020, 0.0002, 0.0008, 0.0012, 0.0001, 0.0003, 0.0006,
         0.0009, 0.0016, 0.0008, 0.0002, 0.0004, 0.0008, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0002],
        [0.0383],
        [0.0285],
        [0.0142],
        [0.0048],
        [0.0013],
        [0.0037],
        [0.0028],
        [0.0136],
        [0.0092],
        [0.0276],
        [0.0153],
        [0.0027],
        [0.0006],
        [0.0013],
        [0.0271]], device='cuda:0')/tensor([[0.0002, 0.0383, 0.0285, 0.0142, 0.0048, 0.0013, 0.0037, 0.0028, 0.0136,
         0.0092, 0.0276, 0.0153, 0.0027, 0.0006, 0.0013, 0.0271]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0002],
        [0.0013, 0.0383],
        [0.0020, 0.0285],
        [0.0002, 0.0142],
        [0.0008, 0.0048],
        [0.0012, 0.0013],
        [0.0001, 0.0037],
        [0.0003, 0.0028],
        [0.0006, 0.0136],
        [0.0009, 0.0092],
        [0.0016, 0.0276],
        [0.0008, 0.0153],
        [0.0002, 0.0027],
        [0.0004, 0.0006],
        [0.0008, 0.0013],
        [0.0004, 0.0271]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0052],
        [0.0005],
        [0.0023],
        [0.0022],
        [0.0010],
        [0.0018],
        [0.0004],
        [0.0009],
        [0.0009],
        [0.0004],
        [0.0008],
        [0.0008],
        [0.0003],
        [0.0003],
        [0.0017],
        [0.0007]], device='cuda:0')/tensor([[0.0052, 0.0005, 0.0023, 0.0022, 0.0010, 0.0018, 0.0004, 0.0009, 0.0009,
         0.0004, 0.0008, 0.0008, 0.0003, 0.0003, 0.0017, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0406],
        [0.0052],
        [0.0039],
        [0.0042],
        [0.0022],
        [0.0148],
        [0.0091],
        [0.0012],
        [0.0403],
        [0.0069],
        [0.0133],
        [0.0013],
        [0.0041],
        [0.0002],
        [0.0199],
        [0.0008]], device='cuda:0')/tensor([[0.0406, 0.0052, 0.0039, 0.0042, 0.0022, 0.0148, 0.0091, 0.0012, 0.0403,
         0.0069, 0.0133, 0.0013, 0.0041, 0.0002, 0.0199, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0052, 0.0406],
        [0.0005, 0.0052],
        [0.0023, 0.0039],
        [0.0022, 0.0042],
        [0.0010, 0.0022],
        [0.0018, 0.0148],
        [0.0004, 0.0091],
        [0.0009, 0.0012],
        [0.0009, 0.0403],
        [0.0004, 0.0069],
        [0.0008, 0.0133],
        [0.0008, 0.0013],
        [0.0003, 0.0041],
        [0.0003, 0.0002],
        [0.0017, 0.0199],
        [0.0007, 0.0008]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0003],
        [0.0007],
        [0.0016],
        [0.0008],
        [0.0014],
        [0.0010],
        [0.0014],
        [0.0006],
        [0.0005],
        [0.0014],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0004, 0.0002, 0.0003, 0.0007, 0.0016, 0.0008, 0.0014,
         0.0010, 0.0014, 0.0006, 0.0005, 0.0014, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0032],
        [0.0053],
        [0.0156],
        [0.0103],
        [0.0264],
        [0.0133],
        [0.0134],
        [0.0009],
        [0.0007],
        [0.0103],
        [0.0017],
        [0.0011],
        [0.0010],
        [0.0096],
        [0.0089]], device='cuda:0')/tensor([[0.0004, 0.0032, 0.0053, 0.0156, 0.0103, 0.0264, 0.0133, 0.0134, 0.0009,
         0.0007, 0.0103, 0.0017, 0.0011, 0.0010, 0.0096, 0.0089]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0004],
        [0.0003, 0.0032],
        [0.0004, 0.0053],
        [0.0002, 0.0156],
        [0.0003, 0.0103],
        [0.0007, 0.0264],
        [0.0016, 0.0133],
        [0.0008, 0.0134],
        [0.0014, 0.0009],
        [0.0010, 0.0007],
        [0.0014, 0.0103],
        [0.0006, 0.0017],
        [0.0005, 0.0011],
        [0.0014, 0.0010],
        [0.0003, 0.0096],
        [0.0006, 0.0089]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0003],
        [0.0008],
        [0.0002],
        [0.0024],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0008, 0.0002, 0.0024, 0.0006, 0.0005, 0.0002, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0175],
        [0.0057],
        [0.0102],
        [0.0052],
        [0.0054],
        [0.0014],
        [0.0028],
        [0.0163]], device='cuda:0')/tensor([[0.0175, 0.0057, 0.0102, 0.0052, 0.0054, 0.0014, 0.0028, 0.0163]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0003, 0.0175],
        [0.0008, 0.0057],
        [0.0002, 0.0102],
        [0.0024, 0.0052],
        [0.0006, 0.0054],
        [0.0005, 0.0014],
        [0.0002, 0.0028],
        [0.0004, 0.0163]], device='cuda:0')
acc:  0.575
Time taken to execute the de SA task with prompt type passive, variation 3 and batchsize 16: 0:03:17.516533
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA passive 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 361.94it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0009],
        [0.0020],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0010],
        [0.0033],
        [0.0004],
        [0.0014],
        [0.0010],
        [0.0005],
        [0.0013],
        [0.0011],
        [0.0003],
        [0.0058]], device='cuda:0')/tensor([[0.0004, 0.0009, 0.0020, 0.0003, 0.0005, 0.0004, 0.0010, 0.0033, 0.0004,
         0.0014, 0.0010, 0.0005, 0.0013, 0.0011, 0.0003, 0.0058]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0088],
        [0.0018],
        [0.0775],
        [0.0021],
        [0.0055],
        [0.0063],
        [0.0034],
        [0.0063],
        [0.0001],
        [0.0041],
        [0.0224],
        [0.0019],
        [0.0239],
        [0.0314],
        [0.0120],
        [0.0039]], device='cuda:0')/tensor([[0.0088, 0.0018, 0.0775, 0.0021, 0.0055, 0.0063, 0.0034, 0.0063, 0.0001,
         0.0041, 0.0224, 0.0019, 0.0239, 0.0314, 0.0120, 0.0039]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0088],
        [0.0009, 0.0018],
        [0.0020, 0.0775],
        [0.0003, 0.0021],
        [0.0005, 0.0055],
        [0.0004, 0.0063],
        [0.0010, 0.0034],
        [0.0033, 0.0063],
        [0.0004, 0.0001],
        [0.0014, 0.0041],
        [0.0010, 0.0224],
        [0.0005, 0.0019],
        [0.0013, 0.0239],
        [0.0011, 0.0314],
        [0.0003, 0.0120],
        [0.0058, 0.0039]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0016],
        [0.0017],
        [0.0016],
        [0.0014],
        [0.0010],
        [0.0003],
        [0.0009],
        [0.0007],
        [0.0007],
        [0.0038],
        [0.0005],
        [0.0022]], device='cuda:0')/tensor([[0.0017, 0.0005, 0.0006, 0.0005, 0.0016, 0.0017, 0.0016, 0.0014, 0.0010,
         0.0003, 0.0009, 0.0007, 0.0007, 0.0038, 0.0005, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0013],
        [0.0018],
        [0.0061],
        [0.0082],
        [0.0007],
        [0.0225],
        [0.0378],
        [0.0273],
        [0.0034],
        [0.0114],
        [0.0392],
        [0.0003],
        [0.0247],
        [0.0029],
        [0.0248],
        [0.0116]], device='cuda:0')/tensor([[0.0013, 0.0018, 0.0061, 0.0082, 0.0007, 0.0225, 0.0378, 0.0273, 0.0034,
         0.0114, 0.0392, 0.0003, 0.0247, 0.0029, 0.0248, 0.0116]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0013],
        [0.0005, 0.0018],
        [0.0006, 0.0061],
        [0.0005, 0.0082],
        [0.0016, 0.0007],
        [0.0017, 0.0225],
        [0.0016, 0.0378],
        [0.0014, 0.0273],
        [0.0010, 0.0034],
        [0.0003, 0.0114],
        [0.0009, 0.0392],
        [0.0007, 0.0003],
        [0.0007, 0.0247],
        [0.0038, 0.0029],
        [0.0005, 0.0248],
        [0.0022, 0.0116]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0008],
        [0.0017],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0009],
        [0.0020],
        [0.0038],
        [0.0010],
        [0.0007],
        [0.0011],
        [0.0007],
        [0.0014],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0008, 0.0017, 0.0006, 0.0006, 0.0009, 0.0009, 0.0020, 0.0038,
         0.0010, 0.0007, 0.0011, 0.0007, 0.0014, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0456],
        [0.0009],
        [0.0057],
        [0.0070],
        [0.0087],
        [0.0093],
        [0.0070],
        [0.0114],
        [0.0094],
        [0.0087],
        [0.0011],
        [0.0161],
        [0.0464],
        [0.0256],
        [0.0046]], device='cuda:0')/tensor([[0.0020, 0.0456, 0.0009, 0.0057, 0.0070, 0.0087, 0.0093, 0.0070, 0.0114,
         0.0094, 0.0087, 0.0011, 0.0161, 0.0464, 0.0256, 0.0046]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0020],
        [0.0008, 0.0456],
        [0.0017, 0.0009],
        [0.0006, 0.0057],
        [0.0006, 0.0070],
        [0.0009, 0.0087],
        [0.0009, 0.0093],
        [0.0020, 0.0070],
        [0.0038, 0.0114],
        [0.0010, 0.0094],
        [0.0007, 0.0087],
        [0.0011, 0.0011],
        [0.0007, 0.0161],
        [0.0014, 0.0464],
        [0.0004, 0.0256],
        [0.0005, 0.0046]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0017],
        [0.0014],
        [0.0007],
        [0.0013],
        [0.0021],
        [0.0015],
        [0.0003],
        [0.0005],
        [0.0009],
        [0.0040],
        [0.0004],
        [0.0008],
        [0.0020],
        [0.0005],
        [0.0017]], device='cuda:0')/tensor([[0.0006, 0.0017, 0.0014, 0.0007, 0.0013, 0.0021, 0.0015, 0.0003, 0.0005,
         0.0009, 0.0040, 0.0004, 0.0008, 0.0020, 0.0005, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0050],
        [0.0053],
        [0.0036],
        [0.0023],
        [0.0241],
        [0.0084],
        [0.0134],
        [0.0040],
        [0.0207],
        [0.0109],
        [0.0162],
        [0.0078],
        [0.0056],
        [0.0099],
        [0.0053],
        [0.0303]], device='cuda:0')/tensor([[0.0050, 0.0053, 0.0036, 0.0023, 0.0241, 0.0084, 0.0134, 0.0040, 0.0207,
         0.0109, 0.0162, 0.0078, 0.0056, 0.0099, 0.0053, 0.0303]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0050],
        [0.0017, 0.0053],
        [0.0014, 0.0036],
        [0.0007, 0.0023],
        [0.0013, 0.0241],
        [0.0021, 0.0084],
        [0.0015, 0.0134],
        [0.0003, 0.0040],
        [0.0005, 0.0207],
        [0.0009, 0.0109],
        [0.0040, 0.0162],
        [0.0004, 0.0078],
        [0.0008, 0.0056],
        [0.0020, 0.0099],
        [0.0005, 0.0053],
        [0.0017, 0.0303]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0009],
        [0.0015],
        [0.0013],
        [0.0036],
        [0.0025],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0007],
        [0.0026],
        [0.0025],
        [0.0006],
        [0.0006],
        [0.0022],
        [0.0011]], device='cuda:0')/tensor([[0.0014, 0.0009, 0.0015, 0.0013, 0.0036, 0.0025, 0.0007, 0.0007, 0.0003,
         0.0007, 0.0026, 0.0025, 0.0006, 0.0006, 0.0022, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0318],
        [0.0101],
        [0.0507],
        [0.0009],
        [0.0299],
        [0.0074],
        [0.0116],
        [0.0067],
        [0.0032],
        [0.0031],
        [0.0019],
        [0.0323],
        [0.0008],
        [0.0011],
        [0.0124],
        [0.0076]], device='cuda:0')/tensor([[0.0318, 0.0101, 0.0507, 0.0009, 0.0299, 0.0074, 0.0116, 0.0067, 0.0032,
         0.0031, 0.0019, 0.0323, 0.0008, 0.0011, 0.0124, 0.0076]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0318],
        [0.0009, 0.0101],
        [0.0015, 0.0507],
        [0.0013, 0.0009],
        [0.0036, 0.0299],
        [0.0025, 0.0074],
        [0.0007, 0.0116],
        [0.0007, 0.0067],
        [0.0003, 0.0032],
        [0.0007, 0.0031],
        [0.0026, 0.0019],
        [0.0025, 0.0323],
        [0.0006, 0.0008],
        [0.0006, 0.0011],
        [0.0022, 0.0124],
        [0.0011, 0.0076]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0012],
        [0.0012],
        [0.0007],
        [0.0010],
        [0.0008],
        [0.0017],
        [0.0032],
        [0.0004],
        [0.0008],
        [0.0024],
        [0.0021],
        [0.0020],
        [0.0017],
        [0.0016],
        [0.0007]], device='cuda:0')/tensor([[0.0008, 0.0012, 0.0012, 0.0007, 0.0010, 0.0008, 0.0017, 0.0032, 0.0004,
         0.0008, 0.0024, 0.0021, 0.0020, 0.0017, 0.0016, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0162],
        [0.0029],
        [0.0032],
        [0.0052],
        [0.0016],
        [0.0195],
        [0.0163],
        [0.1071],
        [0.0046],
        [0.0043],
        [0.0109],
        [0.0015],
        [0.0239],
        [0.0068],
        [0.0244],
        [0.0082]], device='cuda:0')/tensor([[0.0162, 0.0029, 0.0032, 0.0052, 0.0016, 0.0195, 0.0163, 0.1071, 0.0046,
         0.0043, 0.0109, 0.0015, 0.0239, 0.0068, 0.0244, 0.0082]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0162],
        [0.0012, 0.0029],
        [0.0012, 0.0032],
        [0.0007, 0.0052],
        [0.0010, 0.0016],
        [0.0008, 0.0195],
        [0.0017, 0.0163],
        [0.0032, 0.1071],
        [0.0004, 0.0046],
        [0.0008, 0.0043],
        [0.0024, 0.0109],
        [0.0021, 0.0015],
        [0.0020, 0.0239],
        [0.0017, 0.0068],
        [0.0016, 0.0244],
        [0.0007, 0.0082]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0003],
        [0.0016],
        [0.0005],
        [0.0008],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0010],
        [0.0007],
        [0.0026],
        [0.0011],
        [0.0016],
        [0.0010],
        [0.0024]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0003, 0.0016, 0.0005, 0.0008, 0.0005, 0.0005, 0.0003,
         0.0010, 0.0007, 0.0026, 0.0011, 0.0016, 0.0010, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0029],
        [0.0074],
        [0.0017],
        [0.0004],
        [0.0249],
        [0.0006],
        [0.0002],
        [0.0067],
        [0.0042],
        [0.0184],
        [0.0200],
        [0.0018],
        [0.0025],
        [0.0103],
        [0.0048]], device='cuda:0')/tensor([[0.0035, 0.0029, 0.0074, 0.0017, 0.0004, 0.0249, 0.0006, 0.0002, 0.0067,
         0.0042, 0.0184, 0.0200, 0.0018, 0.0025, 0.0103, 0.0048]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0035],
        [0.0004, 0.0029],
        [0.0003, 0.0074],
        [0.0016, 0.0017],
        [0.0005, 0.0004],
        [0.0008, 0.0249],
        [0.0005, 0.0006],
        [0.0005, 0.0002],
        [0.0003, 0.0067],
        [0.0010, 0.0042],
        [0.0007, 0.0184],
        [0.0026, 0.0200],
        [0.0011, 0.0018],
        [0.0016, 0.0025],
        [0.0010, 0.0103],
        [0.0024, 0.0048]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.4442e-04],
        [1.1438e-03],
        [2.1039e-03],
        [6.4512e-04],
        [1.2026e-03],
        [3.5979e-03],
        [2.5515e-03],
        [5.2814e-04],
        [1.4452e-03],
        [1.8516e-04],
        [1.5329e-03],
        [6.4344e-04],
        [1.9551e-03],
        [1.3095e-05],
        [1.2554e-03],
        [1.5371e-03]], device='cuda:0')/tensor([[6.4442e-04, 1.1438e-03, 2.1039e-03, 6.4512e-04, 1.2026e-03, 3.5979e-03,
         2.5515e-03, 5.2814e-04, 1.4452e-03, 1.8516e-04, 1.5329e-03, 6.4344e-04,
         1.9551e-03, 1.3095e-05, 1.2554e-03, 1.5371e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.0532e-04],
        [1.5648e-02],
        [2.6229e-02],
        [3.9295e-03],
        [2.2805e-02],
        [7.8153e-03],
        [7.9275e-03],
        [3.8667e-02],
        [1.5096e-03],
        [1.9513e-02],
        [7.9603e-03],
        [9.1809e-03],
        [1.8686e-02],
        [6.0300e-05],
        [1.1752e-03],
        [3.3131e-02]], device='cuda:0')/tensor([[7.0532e-04, 1.5648e-02, 2.6229e-02, 3.9295e-03, 2.2805e-02, 7.8153e-03,
         7.9275e-03, 3.8667e-02, 1.5096e-03, 1.9513e-02, 7.9603e-03, 9.1809e-03,
         1.8686e-02, 6.0300e-05, 1.1752e-03, 3.3131e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.4442e-04, 7.0532e-04],
        [1.1438e-03, 1.5648e-02],
        [2.1039e-03, 2.6229e-02],
        [6.4512e-04, 3.9295e-03],
        [1.2026e-03, 2.2805e-02],
        [3.5979e-03, 7.8153e-03],
        [2.5515e-03, 7.9275e-03],
        [5.2814e-04, 3.8667e-02],
        [1.4452e-03, 1.5096e-03],
        [1.8516e-04, 1.9513e-02],
        [1.5329e-03, 7.9603e-03],
        [6.4344e-04, 9.1809e-03],
        [1.9551e-03, 1.8686e-02],
        [1.3095e-05, 6.0300e-05],
        [1.2554e-03, 1.1752e-03],
        [1.5371e-03, 3.3131e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0018],
        [0.0008],
        [0.0005],
        [0.0026],
        [0.0013],
        [0.0006],
        [0.0014],
        [0.0013],
        [0.0024],
        [0.0005],
        [0.0019],
        [0.0007],
        [0.0034],
        [0.0003],
        [0.0022]], device='cuda:0')/tensor([[0.0018, 0.0018, 0.0008, 0.0005, 0.0026, 0.0013, 0.0006, 0.0014, 0.0013,
         0.0024, 0.0005, 0.0019, 0.0007, 0.0034, 0.0003, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0014],
        [0.0044],
        [0.0039],
        [0.0239],
        [0.0534],
        [0.0079],
        [0.0025],
        [0.0028],
        [0.0638],
        [0.0017],
        [0.0018],
        [0.0132],
        [0.0193],
        [0.0012],
        [0.0140]], device='cuda:0')/tensor([[0.0015, 0.0014, 0.0044, 0.0039, 0.0239, 0.0534, 0.0079, 0.0025, 0.0028,
         0.0638, 0.0017, 0.0018, 0.0132, 0.0193, 0.0012, 0.0140]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0018, 0.0015],
        [0.0018, 0.0014],
        [0.0008, 0.0044],
        [0.0005, 0.0039],
        [0.0026, 0.0239],
        [0.0013, 0.0534],
        [0.0006, 0.0079],
        [0.0014, 0.0025],
        [0.0013, 0.0028],
        [0.0024, 0.0638],
        [0.0005, 0.0017],
        [0.0019, 0.0018],
        [0.0007, 0.0132],
        [0.0034, 0.0193],
        [0.0003, 0.0012],
        [0.0022, 0.0140]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0013],
        [0.0022],
        [0.0004],
        [0.0022],
        [0.0003],
        [0.0045],
        [0.0003],
        [0.0009],
        [0.0037],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0030],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0023, 0.0013, 0.0022, 0.0004, 0.0022, 0.0003, 0.0045, 0.0003, 0.0009,
         0.0037, 0.0006, 0.0006, 0.0009, 0.0030, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0253],
        [0.0019],
        [0.0498],
        [0.0040],
        [0.0462],
        [0.0006],
        [0.0028],
        [0.0036],
        [0.0026],
        [0.0074],
        [0.0111],
        [0.0161],
        [0.0289],
        [0.0117],
        [0.0129],
        [0.0051]], device='cuda:0')/tensor([[0.0253, 0.0019, 0.0498, 0.0040, 0.0462, 0.0006, 0.0028, 0.0036, 0.0026,
         0.0074, 0.0111, 0.0161, 0.0289, 0.0117, 0.0129, 0.0051]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0023, 0.0253],
        [0.0013, 0.0019],
        [0.0022, 0.0498],
        [0.0004, 0.0040],
        [0.0022, 0.0462],
        [0.0003, 0.0006],
        [0.0045, 0.0028],
        [0.0003, 0.0036],
        [0.0009, 0.0026],
        [0.0037, 0.0074],
        [0.0006, 0.0111],
        [0.0006, 0.0161],
        [0.0009, 0.0289],
        [0.0030, 0.0117],
        [0.0008, 0.0129],
        [0.0007, 0.0051]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0013],
        [0.0011],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0018],
        [0.0006],
        [0.0007],
        [0.0025],
        [0.0010],
        [0.0023],
        [0.0003],
        [0.0014],
        [0.0004],
        [0.0010]], device='cuda:0')/tensor([[0.0019, 0.0013, 0.0011, 0.0005, 0.0007, 0.0004, 0.0018, 0.0006, 0.0007,
         0.0025, 0.0010, 0.0023, 0.0003, 0.0014, 0.0004, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0027],
        [0.0020],
        [0.0017],
        [0.0030],
        [0.0005],
        [0.0210],
        [0.0018],
        [0.0046],
        [0.0858],
        [0.0036],
        [0.0015],
        [0.0022],
        [0.0012],
        [0.0544],
        [0.0070]], device='cuda:0')/tensor([[0.0025, 0.0027, 0.0020, 0.0017, 0.0030, 0.0005, 0.0210, 0.0018, 0.0046,
         0.0858, 0.0036, 0.0015, 0.0022, 0.0012, 0.0544, 0.0070]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0019, 0.0025],
        [0.0013, 0.0027],
        [0.0011, 0.0020],
        [0.0005, 0.0017],
        [0.0007, 0.0030],
        [0.0004, 0.0005],
        [0.0018, 0.0210],
        [0.0006, 0.0018],
        [0.0007, 0.0046],
        [0.0025, 0.0858],
        [0.0010, 0.0036],
        [0.0023, 0.0015],
        [0.0003, 0.0022],
        [0.0014, 0.0012],
        [0.0004, 0.0544],
        [0.0010, 0.0070]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0010],
        [0.0041],
        [0.0023],
        [0.0016],
        [0.0006],
        [0.0012],
        [0.0099],
        [0.0009],
        [0.0006],
        [0.0013],
        [0.0006],
        [0.0018],
        [0.0011],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0019, 0.0010, 0.0041, 0.0023, 0.0016, 0.0006, 0.0012, 0.0099, 0.0009,
         0.0006, 0.0013, 0.0006, 0.0018, 0.0011, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0132],
        [0.0236],
        [0.0590],
        [0.0022],
        [0.0004],
        [0.0080],
        [0.0248],
        [0.1096],
        [0.0102],
        [0.0336],
        [0.0960],
        [0.0152],
        [0.1001],
        [0.0263],
        [0.0026],
        [0.0196]], device='cuda:0')/tensor([[0.0132, 0.0236, 0.0590, 0.0022, 0.0004, 0.0080, 0.0248, 0.1096, 0.0102,
         0.0336, 0.0960, 0.0152, 0.1001, 0.0263, 0.0026, 0.0196]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0019, 0.0132],
        [0.0010, 0.0236],
        [0.0041, 0.0590],
        [0.0023, 0.0022],
        [0.0016, 0.0004],
        [0.0006, 0.0080],
        [0.0012, 0.0248],
        [0.0099, 0.1096],
        [0.0009, 0.0102],
        [0.0006, 0.0336],
        [0.0013, 0.0960],
        [0.0006, 0.0152],
        [0.0018, 0.1001],
        [0.0011, 0.0263],
        [0.0003, 0.0026],
        [0.0004, 0.0196]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0022],
        [0.0004],
        [0.0019],
        [0.0040],
        [0.0004],
        [0.0004],
        [0.0037],
        [0.0014]], device='cuda:0')/tensor([[0.0022, 0.0004, 0.0019, 0.0040, 0.0004, 0.0004, 0.0037, 0.0014]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0258],
        [0.0005],
        [0.0470],
        [0.0229],
        [0.0207],
        [0.0312],
        [0.0087],
        [0.0787]], device='cuda:0')/tensor([[0.0258, 0.0005, 0.0470, 0.0229, 0.0207, 0.0312, 0.0087, 0.0787]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0022, 0.0258],
        [0.0004, 0.0005],
        [0.0019, 0.0470],
        [0.0040, 0.0229],
        [0.0004, 0.0207],
        [0.0004, 0.0312],
        [0.0037, 0.0087],
        [0.0014, 0.0787]], device='cuda:0')
acc:  0.6
Time taken to execute the de SA task with prompt type passive, variation 4 and batchsize 16: 0:03:17.229757
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA passive 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 338.80it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0005],
        [0.0010],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0002, 0.0007, 0.0003, 0.0004, 0.0005, 0.0010, 0.0007, 0.0003,
         0.0002, 0.0003, 0.0004, 0.0003, 0.0003, 0.0006, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0329],
        [0.0003],
        [0.0042],
        [0.0006],
        [0.0042],
        [0.0230],
        [0.0438],
        [0.0117],
        [0.0088],
        [0.0071],
        [0.0072],
        [0.0007],
        [0.0056],
        [0.0006],
        [0.0018],
        [0.0047]], device='cuda:0')/tensor([[0.0329, 0.0003, 0.0042, 0.0006, 0.0042, 0.0230, 0.0438, 0.0117, 0.0088,
         0.0071, 0.0072, 0.0007, 0.0056, 0.0006, 0.0018, 0.0047]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0329],
        [0.0002, 0.0003],
        [0.0007, 0.0042],
        [0.0003, 0.0006],
        [0.0004, 0.0042],
        [0.0005, 0.0230],
        [0.0010, 0.0438],
        [0.0007, 0.0117],
        [0.0003, 0.0088],
        [0.0002, 0.0071],
        [0.0003, 0.0072],
        [0.0004, 0.0007],
        [0.0003, 0.0056],
        [0.0003, 0.0006],
        [0.0006, 0.0018],
        [0.0002, 0.0047]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0002],
        [0.0001],
        [0.0013],
        [0.0011],
        [0.0015],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0014],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0013],
        [0.0002]], device='cuda:0')/tensor([[0.0016, 0.0002, 0.0001, 0.0013, 0.0011, 0.0015, 0.0004, 0.0002, 0.0006,
         0.0014, 0.0005, 0.0004, 0.0003, 0.0005, 0.0013, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0034],
        [0.0006],
        [0.0035],
        [0.0092],
        [0.0070],
        [0.0026],
        [0.0267],
        [0.0033],
        [0.0076],
        [0.0074],
        [0.0054],
        [0.0235],
        [0.0093],
        [0.0008],
        [0.0320],
        [0.0041]], device='cuda:0')/tensor([[0.0034, 0.0006, 0.0035, 0.0092, 0.0070, 0.0026, 0.0267, 0.0033, 0.0076,
         0.0074, 0.0054, 0.0235, 0.0093, 0.0008, 0.0320, 0.0041]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.0034],
        [0.0002, 0.0006],
        [0.0001, 0.0035],
        [0.0013, 0.0092],
        [0.0011, 0.0070],
        [0.0015, 0.0026],
        [0.0004, 0.0267],
        [0.0002, 0.0033],
        [0.0006, 0.0076],
        [0.0014, 0.0074],
        [0.0005, 0.0054],
        [0.0004, 0.0235],
        [0.0003, 0.0093],
        [0.0005, 0.0008],
        [0.0013, 0.0320],
        [0.0002, 0.0041]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0009],
        [0.0003],
        [0.0001],
        [0.0003],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0005],
        [0.0005],
        [0.0018],
        [0.0004],
        [0.0010],
        [0.0003],
        [0.0021],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0009, 0.0003, 0.0001, 0.0003, 0.0002, 0.0009, 0.0002, 0.0005,
         0.0005, 0.0018, 0.0004, 0.0010, 0.0003, 0.0021, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0116],
        [0.0022],
        [0.0013],
        [0.0075],
        [0.0004],
        [0.0007],
        [0.0012],
        [0.0144],
        [0.0080],
        [0.0182],
        [0.0182],
        [0.0348],
        [0.0010],
        [0.0030],
        [0.0077]], device='cuda:0')/tensor([[0.0014, 0.0116, 0.0022, 0.0013, 0.0075, 0.0004, 0.0007, 0.0012, 0.0144,
         0.0080, 0.0182, 0.0182, 0.0348, 0.0010, 0.0030, 0.0077]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0014],
        [0.0009, 0.0116],
        [0.0003, 0.0022],
        [0.0001, 0.0013],
        [0.0003, 0.0075],
        [0.0002, 0.0004],
        [0.0009, 0.0007],
        [0.0002, 0.0012],
        [0.0005, 0.0144],
        [0.0005, 0.0080],
        [0.0018, 0.0182],
        [0.0004, 0.0182],
        [0.0010, 0.0348],
        [0.0003, 0.0010],
        [0.0021, 0.0030],
        [0.0005, 0.0077]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0006],
        [0.0015],
        [0.0015],
        [0.0009],
        [0.0007],
        [0.0007],
        [0.0001],
        [0.0004],
        [0.0004],
        [0.0012],
        [0.0007],
        [0.0005],
        [0.0007],
        [0.0012],
        [0.0001]], device='cuda:0')/tensor([[0.0010, 0.0006, 0.0015, 0.0015, 0.0009, 0.0007, 0.0007, 0.0001, 0.0004,
         0.0004, 0.0012, 0.0007, 0.0005, 0.0007, 0.0012, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0191],
        [0.0029],
        [0.0736],
        [0.0616],
        [0.0149],
        [0.0088],
        [0.0012],
        [0.0102],
        [0.0009],
        [0.0171],
        [0.0176],
        [0.0006],
        [0.0006],
        [0.0019],
        [0.0146],
        [0.0001]], device='cuda:0')/tensor([[0.0191, 0.0029, 0.0736, 0.0616, 0.0149, 0.0088, 0.0012, 0.0102, 0.0009,
         0.0171, 0.0176, 0.0006, 0.0006, 0.0019, 0.0146, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0191],
        [0.0006, 0.0029],
        [0.0015, 0.0736],
        [0.0015, 0.0616],
        [0.0009, 0.0149],
        [0.0007, 0.0088],
        [0.0007, 0.0012],
        [0.0001, 0.0102],
        [0.0004, 0.0009],
        [0.0004, 0.0171],
        [0.0012, 0.0176],
        [0.0007, 0.0006],
        [0.0005, 0.0006],
        [0.0007, 0.0019],
        [0.0012, 0.0146],
        [0.0001, 0.0001]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0029],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0006],
        [0.0008],
        [0.0002],
        [0.0003],
        [0.0007],
        [0.0002],
        [0.0001],
        [0.0001],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0017]], device='cuda:0')/tensor([[0.0029, 0.0003, 0.0004, 0.0003, 0.0006, 0.0008, 0.0002, 0.0003, 0.0007,
         0.0002, 0.0001, 0.0001, 0.0005, 0.0007, 0.0004, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0400],
        [0.0022],
        [0.0114],
        [0.0066],
        [0.0104],
        [0.0005],
        [0.0010],
        [0.0232],
        [0.0014],
        [0.0023],
        [0.0013],
        [0.0001],
        [0.0061],
        [0.0197],
        [0.0016],
        [0.0216]], device='cuda:0')/tensor([[0.0400, 0.0022, 0.0114, 0.0066, 0.0104, 0.0005, 0.0010, 0.0232, 0.0014,
         0.0023, 0.0013, 0.0001, 0.0061, 0.0197, 0.0016, 0.0216]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0029, 0.0400],
        [0.0003, 0.0022],
        [0.0004, 0.0114],
        [0.0003, 0.0066],
        [0.0006, 0.0104],
        [0.0008, 0.0005],
        [0.0002, 0.0010],
        [0.0003, 0.0232],
        [0.0007, 0.0014],
        [0.0002, 0.0023],
        [0.0001, 0.0013],
        [0.0001, 0.0001],
        [0.0005, 0.0061],
        [0.0007, 0.0197],
        [0.0004, 0.0016],
        [0.0017, 0.0216]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1081e-03],
        [5.2050e-04],
        [2.9638e-04],
        [4.7450e-04],
        [2.7261e-04],
        [9.3481e-05],
        [2.1870e-04],
        [3.9620e-04],
        [1.8576e-04],
        [5.7868e-04],
        [4.3019e-04],
        [2.8132e-04],
        [9.7764e-05],
        [3.2903e-04],
        [1.5022e-03],
        [1.1082e-03]], device='cuda:0')/tensor([[1.1081e-03, 5.2050e-04, 2.9638e-04, 4.7450e-04, 2.7261e-04, 9.3481e-05,
         2.1870e-04, 3.9620e-04, 1.8576e-04, 5.7868e-04, 4.3019e-04, 2.8132e-04,
         9.7764e-05, 3.2903e-04, 1.5022e-03, 1.1082e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0097],
        [0.0015],
        [0.0003],
        [0.0074],
        [0.0027],
        [0.0002],
        [0.0001],
        [0.0010],
        [0.0036],
        [0.0073],
        [0.0099],
        [0.0008],
        [0.0008],
        [0.0084],
        [0.0050],
        [0.0196]], device='cuda:0')/tensor([[0.0097, 0.0015, 0.0003, 0.0074, 0.0027, 0.0002, 0.0001, 0.0010, 0.0036,
         0.0073, 0.0099, 0.0008, 0.0008, 0.0084, 0.0050, 0.0196]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1081e-03, 9.7391e-03],
        [5.2050e-04, 1.4683e-03],
        [2.9638e-04, 3.0795e-04],
        [4.7450e-04, 7.3810e-03],
        [2.7261e-04, 2.6843e-03],
        [9.3481e-05, 2.0270e-04],
        [2.1870e-04, 1.1812e-04],
        [3.9620e-04, 9.5264e-04],
        [1.8576e-04, 3.6055e-03],
        [5.7868e-04, 7.3117e-03],
        [4.3019e-04, 9.8536e-03],
        [2.8132e-04, 8.3451e-04],
        [9.7764e-05, 7.8180e-04],
        [3.2903e-04, 8.4173e-03],
        [1.5022e-03, 5.0039e-03],
        [1.1082e-03, 1.9618e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0007],
        [0.0009],
        [0.0004],
        [0.0005],
        [0.0009],
        [0.0007],
        [0.0001],
        [0.0011],
        [0.0009],
        [0.0033]], device='cuda:0')/tensor([[0.0001, 0.0003, 0.0007, 0.0004, 0.0005, 0.0002, 0.0007, 0.0009, 0.0004,
         0.0005, 0.0009, 0.0007, 0.0001, 0.0011, 0.0009, 0.0033]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0125],
        [0.0023],
        [0.0006],
        [0.0009],
        [0.0105],
        [0.0070],
        [0.0037],
        [0.0008],
        [0.0046],
        [0.0158],
        [0.0010],
        [0.0444],
        [0.0004],
        [0.0022],
        [0.0013],
        [0.0063]], device='cuda:0')/tensor([[0.0125, 0.0023, 0.0006, 0.0009, 0.0105, 0.0070, 0.0037, 0.0008, 0.0046,
         0.0158, 0.0010, 0.0444, 0.0004, 0.0022, 0.0013, 0.0063]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0125],
        [0.0003, 0.0023],
        [0.0007, 0.0006],
        [0.0004, 0.0009],
        [0.0005, 0.0105],
        [0.0002, 0.0070],
        [0.0007, 0.0037],
        [0.0009, 0.0008],
        [0.0004, 0.0046],
        [0.0005, 0.0158],
        [0.0009, 0.0010],
        [0.0007, 0.0444],
        [0.0001, 0.0004],
        [0.0011, 0.0022],
        [0.0009, 0.0013],
        [0.0033, 0.0063]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0004],
        [0.0002],
        [0.0016],
        [0.0015],
        [0.0009],
        [0.0002],
        [0.0008],
        [0.0007],
        [0.0007],
        [0.0010],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0004, 0.0002, 0.0016, 0.0015, 0.0009, 0.0002, 0.0008,
         0.0007, 0.0007, 0.0010, 0.0005, 0.0006, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.9644e-03],
        [1.0797e-02],
        [5.2870e-03],
        [7.7192e-02],
        [4.5415e-03],
        [1.0577e-01],
        [7.5174e-04],
        [7.5419e-05],
        [1.9550e-02],
        [7.2339e-03],
        [1.9064e-03],
        [1.6680e-02],
        [9.3109e-03],
        [1.0185e-03],
        [1.1878e-02],
        [1.1304e-02]], device='cuda:0')/tensor([[5.9644e-03, 1.0797e-02, 5.2870e-03, 7.7192e-02, 4.5415e-03, 1.0577e-01,
         7.5174e-04, 7.5419e-05, 1.9550e-02, 7.2339e-03, 1.9064e-03, 1.6680e-02,
         9.3109e-03, 1.0185e-03, 1.1878e-02, 1.1304e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0351e-04, 5.9644e-03],
        [4.2745e-04, 1.0797e-02],
        [4.0271e-04, 5.2870e-03],
        [1.6650e-04, 7.7192e-02],
        [1.5849e-03, 4.5415e-03],
        [1.4651e-03, 1.0577e-01],
        [9.3645e-04, 7.5174e-04],
        [1.8077e-04, 7.5419e-05],
        [7.6662e-04, 1.9550e-02],
        [6.8351e-04, 7.2339e-03],
        [6.6877e-04, 1.9064e-03],
        [9.8724e-04, 1.6680e-02],
        [5.3921e-04, 9.3109e-03],
        [6.1370e-04, 1.0185e-03],
        [4.0047e-04, 1.1878e-02],
        [2.9256e-04, 1.1304e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.3607e-04],
        [9.7507e-05],
        [1.0744e-03],
        [1.5481e-04],
        [5.3147e-04],
        [2.9831e-03],
        [1.3479e-03],
        [1.0426e-03],
        [2.0177e-03],
        [2.5421e-04],
        [1.8041e-04],
        [1.9167e-04],
        [2.2238e-04],
        [9.8463e-04],
        [8.8822e-04],
        [1.2395e-04]], device='cuda:0')/tensor([[7.3607e-04, 9.7507e-05, 1.0744e-03, 1.5481e-04, 5.3147e-04, 2.9831e-03,
         1.3479e-03, 1.0426e-03, 2.0177e-03, 2.5421e-04, 1.8041e-04, 1.9167e-04,
         2.2238e-04, 9.8463e-04, 8.8822e-04, 1.2395e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0177],
        [0.0082],
        [0.0320],
        [0.0060],
        [0.0019],
        [0.0051],
        [0.0115],
        [0.0050],
        [0.0483],
        [0.0014],
        [0.0061],
        [0.0086],
        [0.0028],
        [0.0266],
        [0.0016],
        [0.0114]], device='cuda:0')/tensor([[0.0177, 0.0082, 0.0320, 0.0060, 0.0019, 0.0051, 0.0115, 0.0050, 0.0483,
         0.0014, 0.0061, 0.0086, 0.0028, 0.0266, 0.0016, 0.0114]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[7.3607e-04, 1.7651e-02],
        [9.7507e-05, 8.1933e-03],
        [1.0744e-03, 3.1956e-02],
        [1.5481e-04, 6.0489e-03],
        [5.3147e-04, 1.8534e-03],
        [2.9831e-03, 5.1415e-03],
        [1.3479e-03, 1.1525e-02],
        [1.0426e-03, 4.9906e-03],
        [2.0177e-03, 4.8287e-02],
        [2.5421e-04, 1.3899e-03],
        [1.8041e-04, 6.0871e-03],
        [1.9167e-04, 8.5649e-03],
        [2.2238e-04, 2.8281e-03],
        [9.8463e-04, 2.6581e-02],
        [8.8822e-04, 1.6112e-03],
        [1.2395e-04, 1.1384e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0001],
        [0.0023],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0010],
        [0.0007],
        [0.0004],
        [0.0004],
        [0.0010]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0002, 0.0008, 0.0001, 0.0023, 0.0007, 0.0002, 0.0004,
         0.0003, 0.0004, 0.0010, 0.0007, 0.0004, 0.0004, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0026],
        [0.0084],
        [0.0006],
        [0.0050],
        [0.0031],
        [0.0018],
        [0.0042],
        [0.0042],
        [0.0002],
        [0.0032],
        [0.0110],
        [0.0008],
        [0.0044],
        [0.0004],
        [0.0013]], device='cuda:0')/tensor([[0.0004, 0.0026, 0.0084, 0.0006, 0.0050, 0.0031, 0.0018, 0.0042, 0.0042,
         0.0002, 0.0032, 0.0110, 0.0008, 0.0044, 0.0004, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0004],
        [0.0005, 0.0026],
        [0.0002, 0.0084],
        [0.0008, 0.0006],
        [0.0001, 0.0050],
        [0.0023, 0.0031],
        [0.0007, 0.0018],
        [0.0002, 0.0042],
        [0.0004, 0.0042],
        [0.0003, 0.0002],
        [0.0004, 0.0032],
        [0.0010, 0.0110],
        [0.0007, 0.0008],
        [0.0004, 0.0044],
        [0.0004, 0.0004],
        [0.0010, 0.0013]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0012],
        [0.0010],
        [0.0006],
        [0.0014],
        [0.0004],
        [0.0002],
        [0.0012],
        [0.0006],
        [0.0016],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0009],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0001, 0.0012, 0.0010, 0.0006, 0.0014, 0.0004, 0.0002, 0.0012, 0.0006,
         0.0016, 0.0004, 0.0003, 0.0003, 0.0009, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.2095e-05],
        [4.8463e-03],
        [6.1461e-02],
        [1.6821e-03],
        [3.6863e-03],
        [9.2423e-04],
        [4.7659e-04],
        [2.2379e-03],
        [5.8441e-02],
        [1.2471e-02],
        [1.5861e-03],
        [1.3565e-02],
        [6.7187e-03],
        [6.8664e-02],
        [2.0002e-03],
        [2.4360e-03]], device='cuda:0')/tensor([[5.2095e-05, 4.8463e-03, 6.1461e-02, 1.6821e-03, 3.6863e-03, 9.2423e-04,
         4.7659e-04, 2.2379e-03, 5.8441e-02, 1.2471e-02, 1.5861e-03, 1.3565e-02,
         6.7187e-03, 6.8664e-02, 2.0002e-03, 2.4360e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0228e-04, 5.2095e-05],
        [1.1800e-03, 4.8463e-03],
        [1.0334e-03, 6.1461e-02],
        [5.7538e-04, 1.6821e-03],
        [1.4044e-03, 3.6863e-03],
        [3.6473e-04, 9.2423e-04],
        [2.3862e-04, 4.7659e-04],
        [1.1872e-03, 2.2379e-03],
        [6.1802e-04, 5.8441e-02],
        [1.5734e-03, 1.2471e-02],
        [3.6692e-04, 1.5861e-03],
        [3.4263e-04, 1.3565e-02],
        [2.6710e-04, 6.7187e-03],
        [8.5457e-04, 6.8664e-02],
        [7.2117e-04, 2.0002e-03],
        [5.8284e-04, 2.4360e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.1986e-04],
        [2.9381e-04],
        [1.1830e-04],
        [3.9339e-04],
        [3.3334e-04],
        [4.0986e-04],
        [1.4684e-03],
        [8.3089e-05],
        [3.8952e-04],
        [2.3367e-04],
        [2.3882e-03],
        [4.8052e-04],
        [9.9135e-04],
        [4.5447e-03],
        [1.2884e-04],
        [1.2530e-04]], device='cuda:0')/tensor([[6.1986e-04, 2.9381e-04, 1.1830e-04, 3.9339e-04, 3.3334e-04, 4.0986e-04,
         1.4684e-03, 8.3089e-05, 3.8952e-04, 2.3367e-04, 2.3882e-03, 4.8052e-04,
         9.9135e-04, 4.5447e-03, 1.2884e-04, 1.2530e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0010],
        [0.0391],
        [0.0095],
        [0.0130],
        [0.0178],
        [0.0010],
        [0.0001],
        [0.0016],
        [0.0028],
        [0.0348],
        [0.0051],
        [0.0524],
        [0.0323],
        [0.0047],
        [0.0008]], device='cuda:0')/tensor([[0.0024, 0.0010, 0.0391, 0.0095, 0.0130, 0.0178, 0.0010, 0.0001, 0.0016,
         0.0028, 0.0348, 0.0051, 0.0524, 0.0323, 0.0047, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1986e-04, 2.3720e-03],
        [2.9381e-04, 1.0415e-03],
        [1.1830e-04, 3.9058e-02],
        [3.9339e-04, 9.4558e-03],
        [3.3334e-04, 1.3006e-02],
        [4.0986e-04, 1.7842e-02],
        [1.4684e-03, 9.9089e-04],
        [8.3089e-05, 1.4859e-04],
        [3.8952e-04, 1.6116e-03],
        [2.3367e-04, 2.8394e-03],
        [2.3882e-03, 3.4813e-02],
        [4.8052e-04, 5.1372e-03],
        [9.9135e-04, 5.2393e-02],
        [4.5447e-03, 3.2296e-02],
        [1.2884e-04, 4.6548e-03],
        [1.2530e-04, 7.8186e-04]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0012],
        [0.0013],
        [0.0003],
        [0.0027],
        [0.0002],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0012, 0.0013, 0.0003, 0.0027, 0.0002, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0027],
        [0.0031],
        [0.0054],
        [0.0003],
        [0.0115],
        [0.0003],
        [0.0032],
        [0.0146]], device='cuda:0')/tensor([[0.0027, 0.0031, 0.0054, 0.0003, 0.0115, 0.0003, 0.0032, 0.0146]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0027],
        [0.0012, 0.0031],
        [0.0013, 0.0054],
        [0.0003, 0.0003],
        [0.0027, 0.0115],
        [0.0002, 0.0003],
        [0.0003, 0.0032],
        [0.0005, 0.0146]], device='cuda:0')
acc:  0.58
Time taken to execute the de SA task with prompt type passive, variation 5 and batchsize 16: 0:03:16.328243
path ['42', 'de', 'flan', 'SA', 'passive', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA auxiliary 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 338.12it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0008],
        [0.0006],
        [0.0004],
        [0.0018],
        [0.0006],
        [0.0007],
        [0.0012],
        [0.0019],
        [0.0002],
        [0.0003],
        [0.0011],
        [0.0002],
        [0.0010],
        [0.0005],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0008, 0.0006, 0.0004, 0.0018, 0.0006, 0.0007, 0.0012, 0.0019,
         0.0002, 0.0003, 0.0011, 0.0002, 0.0010, 0.0005, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0050],
        [0.0238],
        [0.0038],
        [0.0216],
        [0.0443],
        [0.0086],
        [0.0613],
        [0.0254],
        [0.0068],
        [0.0174],
        [0.0470],
        [0.0126],
        [0.0014],
        [0.0708],
        [0.0020],
        [0.0758]], device='cuda:0')/tensor([[0.0050, 0.0238, 0.0038, 0.0216, 0.0443, 0.0086, 0.0613, 0.0254, 0.0068,
         0.0174, 0.0470, 0.0126, 0.0014, 0.0708, 0.0020, 0.0758]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0050],
        [0.0008, 0.0238],
        [0.0006, 0.0038],
        [0.0004, 0.0216],
        [0.0018, 0.0443],
        [0.0006, 0.0086],
        [0.0007, 0.0613],
        [0.0012, 0.0254],
        [0.0019, 0.0068],
        [0.0002, 0.0174],
        [0.0003, 0.0470],
        [0.0011, 0.0126],
        [0.0002, 0.0014],
        [0.0010, 0.0708],
        [0.0005, 0.0020],
        [0.0007, 0.0758]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0014],
        [0.0016],
        [0.0007],
        [0.0007],
        [0.0006],
        [0.0030],
        [0.0010],
        [0.0015],
        [0.0005],
        [0.0015],
        [0.0003],
        [0.0012],
        [0.0003],
        [0.0019],
        [0.0030]], device='cuda:0')/tensor([[0.0012, 0.0014, 0.0016, 0.0007, 0.0007, 0.0006, 0.0030, 0.0010, 0.0015,
         0.0005, 0.0015, 0.0003, 0.0012, 0.0003, 0.0019, 0.0030]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0017],
        [0.1074],
        [0.0011],
        [0.0007],
        [0.0025],
        [0.0048],
        [0.0681],
        [0.0221],
        [0.0109],
        [0.0213],
        [0.0037],
        [0.0003],
        [0.0008],
        [0.0003],
        [0.0390],
        [0.0295]], device='cuda:0')/tensor([[0.0017, 0.1074, 0.0011, 0.0007, 0.0025, 0.0048, 0.0681, 0.0221, 0.0109,
         0.0213, 0.0037, 0.0003, 0.0008, 0.0003, 0.0390, 0.0295]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0017],
        [0.0014, 0.1074],
        [0.0016, 0.0011],
        [0.0007, 0.0007],
        [0.0007, 0.0025],
        [0.0006, 0.0048],
        [0.0030, 0.0681],
        [0.0010, 0.0221],
        [0.0015, 0.0109],
        [0.0005, 0.0213],
        [0.0015, 0.0037],
        [0.0003, 0.0003],
        [0.0012, 0.0008],
        [0.0003, 0.0003],
        [0.0019, 0.0390],
        [0.0030, 0.0295]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0042],
        [0.0007],
        [0.0008],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0006],
        [0.0004],
        [0.0013],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0039],
        [0.0007],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0042, 0.0007, 0.0008, 0.0006, 0.0006, 0.0009, 0.0006, 0.0004,
         0.0013, 0.0003, 0.0004, 0.0003, 0.0039, 0.0007, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0077],
        [0.0503],
        [0.0022],
        [0.0010],
        [0.0483],
        [0.0057],
        [0.0042],
        [0.0017],
        [0.0138],
        [0.0070],
        [0.0001],
        [0.0113],
        [0.0057],
        [0.0168],
        [0.0097],
        [0.0009]], device='cuda:0')/tensor([[0.0077, 0.0503, 0.0022, 0.0010, 0.0483, 0.0057, 0.0042, 0.0017, 0.0138,
         0.0070, 0.0001, 0.0113, 0.0057, 0.0168, 0.0097, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0077],
        [0.0042, 0.0503],
        [0.0007, 0.0022],
        [0.0008, 0.0010],
        [0.0006, 0.0483],
        [0.0006, 0.0057],
        [0.0009, 0.0042],
        [0.0006, 0.0017],
        [0.0004, 0.0138],
        [0.0013, 0.0070],
        [0.0003, 0.0001],
        [0.0004, 0.0113],
        [0.0003, 0.0057],
        [0.0039, 0.0168],
        [0.0007, 0.0097],
        [0.0011, 0.0009]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0015],
        [0.0010],
        [0.0020],
        [0.0019],
        [0.0009],
        [0.0004],
        [0.0003],
        [0.0008],
        [0.0008],
        [0.0005],
        [0.0009],
        [0.0017],
        [0.0025],
        [0.0021],
        [0.0003]], device='cuda:0')/tensor([[0.0015, 0.0015, 0.0010, 0.0020, 0.0019, 0.0009, 0.0004, 0.0003, 0.0008,
         0.0008, 0.0005, 0.0009, 0.0017, 0.0025, 0.0021, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.2012],
        [0.0037],
        [0.0005],
        [0.0202],
        [0.0032],
        [0.0020],
        [0.0213],
        [0.0291],
        [0.0265],
        [0.1069],
        [0.1490],
        [0.0792],
        [0.0035],
        [0.0023],
        [0.0123],
        [0.0119]], device='cuda:0')/tensor([[0.2012, 0.0037, 0.0005, 0.0202, 0.0032, 0.0020, 0.0213, 0.0291, 0.0265,
         0.1069, 0.1490, 0.0792, 0.0035, 0.0023, 0.0123, 0.0119]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.2012],
        [0.0015, 0.0037],
        [0.0010, 0.0005],
        [0.0020, 0.0202],
        [0.0019, 0.0032],
        [0.0009, 0.0020],
        [0.0004, 0.0213],
        [0.0003, 0.0291],
        [0.0008, 0.0265],
        [0.0008, 0.1069],
        [0.0005, 0.1490],
        [0.0009, 0.0792],
        [0.0017, 0.0035],
        [0.0025, 0.0023],
        [0.0021, 0.0123],
        [0.0003, 0.0119]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.5845e-04],
        [6.8625e-04],
        [6.7360e-04],
        [9.4360e-04],
        [8.0572e-04],
        [1.0817e-03],
        [4.6673e-04],
        [1.0464e-03],
        [1.4844e-03],
        [3.3381e-04],
        [1.9964e-03],
        [5.6229e-05],
        [1.4132e-03],
        [1.0320e-03],
        [1.6843e-04],
        [5.3732e-04]], device='cuda:0')/tensor([[9.5845e-04, 6.8625e-04, 6.7360e-04, 9.4360e-04, 8.0572e-04, 1.0817e-03,
         4.6673e-04, 1.0464e-03, 1.4844e-03, 3.3381e-04, 1.9964e-03, 5.6229e-05,
         1.4132e-03, 1.0320e-03, 1.6843e-04, 5.3732e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0116],
        [0.0199],
        [0.0005],
        [0.0007],
        [0.0087],
        [0.0196],
        [0.0140],
        [0.0016],
        [0.0857],
        [0.0215],
        [0.0154],
        [0.0473],
        [0.0021],
        [0.0125],
        [0.0001],
        [0.0212]], device='cuda:0')/tensor([[0.0116, 0.0199, 0.0005, 0.0007, 0.0087, 0.0196, 0.0140, 0.0016, 0.0857,
         0.0215, 0.0154, 0.0473, 0.0021, 0.0125, 0.0001, 0.0212]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.5845e-04, 1.1591e-02],
        [6.8625e-04, 1.9908e-02],
        [6.7360e-04, 4.7809e-04],
        [9.4360e-04, 7.3654e-04],
        [8.0572e-04, 8.7324e-03],
        [1.0817e-03, 1.9575e-02],
        [4.6673e-04, 1.3980e-02],
        [1.0464e-03, 1.5679e-03],
        [1.4844e-03, 8.5703e-02],
        [3.3381e-04, 2.1512e-02],
        [1.9964e-03, 1.5350e-02],
        [5.6229e-05, 4.7332e-02],
        [1.4132e-03, 2.0507e-03],
        [1.0320e-03, 1.2481e-02],
        [1.6843e-04, 1.1135e-04],
        [5.3732e-04, 2.1173e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0021],
        [0.0008],
        [0.0010],
        [0.0004],
        [0.0004],
        [0.0002],
        [0.0014],
        [0.0013],
        [0.0008],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0013],
        [0.0009],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0021, 0.0008, 0.0010, 0.0004, 0.0004, 0.0002, 0.0014, 0.0013,
         0.0008, 0.0005, 0.0006, 0.0005, 0.0013, 0.0009, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0288e-04],
        [9.1971e-03],
        [1.1040e-01],
        [5.9320e-04],
        [3.2576e-04],
        [4.5949e-04],
        [1.0488e-02],
        [1.1643e-03],
        [6.4243e-02],
        [6.4993e-02],
        [3.0818e-04],
        [8.5794e-04],
        [7.4139e-02],
        [6.4944e-03],
        [1.6899e-02],
        [1.4947e-02]], device='cuda:0')/tensor([[1.0288e-04, 9.1971e-03, 1.1040e-01, 5.9320e-04, 3.2576e-04, 4.5949e-04,
         1.0488e-02, 1.1643e-03, 6.4243e-02, 6.4993e-02, 3.0818e-04, 8.5794e-04,
         7.4139e-02, 6.4944e-03, 1.6899e-02, 1.4947e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7215e-04, 1.0288e-04],
        [2.1210e-03, 9.1971e-03],
        [8.4790e-04, 1.1040e-01],
        [9.6273e-04, 5.9320e-04],
        [3.7609e-04, 3.2576e-04],
        [3.8491e-04, 4.5949e-04],
        [1.8952e-04, 1.0488e-02],
        [1.3531e-03, 1.1643e-03],
        [1.2677e-03, 6.4243e-02],
        [7.9643e-04, 6.4993e-02],
        [5.1963e-04, 3.0818e-04],
        [6.3518e-04, 8.5794e-04],
        [5.2514e-04, 7.4139e-02],
        [1.2551e-03, 6.4944e-03],
        [9.1510e-04, 1.6899e-02],
        [2.7949e-04, 1.4947e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1971e-03],
        [1.3213e-03],
        [4.9451e-06],
        [4.7338e-04],
        [3.8745e-03],
        [3.4948e-03],
        [2.9577e-04],
        [1.1370e-03],
        [1.1051e-03],
        [8.6447e-04],
        [3.4249e-04],
        [1.4025e-03],
        [9.5236e-04],
        [5.2074e-04],
        [9.6867e-04],
        [7.6398e-04]], device='cuda:0')/tensor([[2.1971e-03, 1.3213e-03, 4.9451e-06, 4.7338e-04, 3.8745e-03, 3.4948e-03,
         2.9577e-04, 1.1370e-03, 1.1051e-03, 8.6447e-04, 3.4249e-04, 1.4025e-03,
         9.5236e-04, 5.2074e-04, 9.6867e-04, 7.6398e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0208],
        [0.0617],
        [0.0004],
        [0.0120],
        [0.0027],
        [0.0049],
        [0.0003],
        [0.0043],
        [0.0011],
        [0.0577],
        [0.0052],
        [0.0025],
        [0.0151],
        [0.0010],
        [0.0604],
        [0.0074]], device='cuda:0')/tensor([[0.0208, 0.0617, 0.0004, 0.0120, 0.0027, 0.0049, 0.0003, 0.0043, 0.0011,
         0.0577, 0.0052, 0.0025, 0.0151, 0.0010, 0.0604, 0.0074]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1971e-03, 2.0845e-02],
        [1.3213e-03, 6.1748e-02],
        [4.9451e-06, 4.3227e-04],
        [4.7338e-04, 1.1975e-02],
        [3.8745e-03, 2.7379e-03],
        [3.4948e-03, 4.8693e-03],
        [2.9577e-04, 2.6888e-04],
        [1.1370e-03, 4.3135e-03],
        [1.1051e-03, 1.1422e-03],
        [8.6447e-04, 5.7676e-02],
        [3.4249e-04, 5.2366e-03],
        [1.4025e-03, 2.5058e-03],
        [9.5236e-04, 1.5084e-02],
        [5.2074e-04, 1.0247e-03],
        [9.6867e-04, 6.0387e-02],
        [7.6398e-04, 7.3922e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0009],
        [0.0013],
        [0.0009],
        [0.0038],
        [0.0008],
        [0.0006],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0010],
        [0.0022],
        [0.0001],
        [0.0018],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0009, 0.0009, 0.0013, 0.0009, 0.0038, 0.0008, 0.0006, 0.0003, 0.0005,
         0.0010, 0.0010, 0.0022, 0.0001, 0.0018, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0444],
        [0.0015],
        [0.0058],
        [0.1192],
        [0.0321],
        [0.0183],
        [0.0008],
        [0.0025],
        [0.0267],
        [0.0014],
        [0.0071],
        [0.0207],
        [0.0032],
        [0.0708],
        [0.0158],
        [0.0002]], device='cuda:0')/tensor([[0.0444, 0.0015, 0.0058, 0.1192, 0.0321, 0.0183, 0.0008, 0.0025, 0.0267,
         0.0014, 0.0071, 0.0207, 0.0032, 0.0708, 0.0158, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0444],
        [0.0009, 0.0015],
        [0.0013, 0.0058],
        [0.0009, 0.1192],
        [0.0038, 0.0321],
        [0.0008, 0.0183],
        [0.0006, 0.0008],
        [0.0003, 0.0025],
        [0.0005, 0.0267],
        [0.0010, 0.0014],
        [0.0010, 0.0071],
        [0.0022, 0.0207],
        [0.0001, 0.0032],
        [0.0018, 0.0708],
        [0.0006, 0.0158],
        [0.0005, 0.0002]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0003],
        [0.0004],
        [0.0005],
        [0.0019],
        [0.0014],
        [0.0032],
        [0.0013],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0009],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0014, 0.0003, 0.0004, 0.0005, 0.0019, 0.0014, 0.0032, 0.0013, 0.0008,
         0.0004, 0.0006, 0.0005, 0.0002, 0.0009, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0245],
        [0.0040],
        [0.0023],
        [0.0456],
        [0.0058],
        [0.0078],
        [0.0235],
        [0.0467],
        [0.0322],
        [0.0486],
        [0.0248],
        [0.0307],
        [0.1077],
        [0.0412],
        [0.0029]], device='cuda:0')/tensor([[0.0018, 0.0245, 0.0040, 0.0023, 0.0456, 0.0058, 0.0078, 0.0235, 0.0467,
         0.0322, 0.0486, 0.0248, 0.0307, 0.1077, 0.0412, 0.0029]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0014, 0.0018],
        [0.0003, 0.0245],
        [0.0004, 0.0040],
        [0.0005, 0.0023],
        [0.0019, 0.0456],
        [0.0014, 0.0058],
        [0.0032, 0.0078],
        [0.0013, 0.0235],
        [0.0008, 0.0467],
        [0.0004, 0.0322],
        [0.0006, 0.0486],
        [0.0005, 0.0248],
        [0.0002, 0.0307],
        [0.0009, 0.1077],
        [0.0005, 0.0412],
        [0.0008, 0.0029]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0007],
        [0.0001],
        [0.0010],
        [0.0004],
        [0.0002],
        [0.0016],
        [0.0008],
        [0.0008],
        [0.0010],
        [0.0003],
        [0.0006],
        [0.0011],
        [0.0003],
        [0.0013],
        [0.0005]], device='cuda:0')/tensor([[0.0010, 0.0007, 0.0001, 0.0010, 0.0004, 0.0002, 0.0016, 0.0008, 0.0008,
         0.0010, 0.0003, 0.0006, 0.0011, 0.0003, 0.0013, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0733],
        [0.0079],
        [0.1272],
        [0.0014],
        [0.0158],
        [0.0019],
        [0.0755],
        [0.0008],
        [0.0021],
        [0.0030],
        [0.0255],
        [0.1110],
        [0.1072],
        [0.0197],
        [0.0852],
        [0.0135]], device='cuda:0')/tensor([[0.0733, 0.0079, 0.1272, 0.0014, 0.0158, 0.0019, 0.0755, 0.0008, 0.0021,
         0.0030, 0.0255, 0.1110, 0.1072, 0.0197, 0.0852, 0.0135]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.8542e-04, 7.3302e-02],
        [6.6551e-04, 7.8727e-03],
        [1.1348e-04, 1.2720e-01],
        [1.0094e-03, 1.3766e-03],
        [4.2798e-04, 1.5824e-02],
        [1.8580e-04, 1.8663e-03],
        [1.5870e-03, 7.5514e-02],
        [7.6345e-04, 7.7770e-04],
        [7.8300e-04, 2.1170e-03],
        [1.0293e-03, 3.0184e-03],
        [3.3451e-04, 2.5462e-02],
        [5.7349e-04, 1.1100e-01],
        [1.1052e-03, 1.0721e-01],
        [3.0975e-04, 1.9716e-02],
        [1.2685e-03, 8.5227e-02],
        [4.5578e-04, 1.3496e-02]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0049],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0017],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0011],
        [0.0006],
        [0.0007],
        [0.0006],
        [0.0023],
        [0.0007],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0049, 0.0003, 0.0003, 0.0005, 0.0017, 0.0004, 0.0003, 0.0002, 0.0011,
         0.0006, 0.0007, 0.0006, 0.0023, 0.0007, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.3886e-03],
        [4.4870e-03],
        [1.5535e-03],
        [3.9049e-02],
        [7.8098e-02],
        [2.4307e-02],
        [4.5408e-04],
        [8.5173e-05],
        [5.9399e-04],
        [2.1908e-02],
        [1.5127e-02],
        [3.3506e-03],
        [3.5214e-03],
        [2.9123e-02],
        [1.5551e-03],
        [1.4098e-02]], device='cuda:0')/tensor([[4.3886e-03, 4.4870e-03, 1.5535e-03, 3.9049e-02, 7.8098e-02, 2.4307e-02,
         4.5408e-04, 8.5173e-05, 5.9399e-04, 2.1908e-02, 1.5127e-02, 3.3506e-03,
         3.5214e-03, 2.9123e-02, 1.5551e-03, 1.4098e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.9084e-03, 4.3886e-03],
        [3.1685e-04, 4.4870e-03],
        [3.3394e-04, 1.5535e-03],
        [4.7710e-04, 3.9049e-02],
        [1.6882e-03, 7.8098e-02],
        [3.6559e-04, 2.4307e-02],
        [2.5622e-04, 4.5408e-04],
        [2.0655e-04, 8.5173e-05],
        [1.1092e-03, 5.9399e-04],
        [5.5042e-04, 2.1908e-02],
        [7.0650e-04, 1.5127e-02],
        [5.7191e-04, 3.3506e-03],
        [2.3447e-03, 3.5214e-03],
        [6.8516e-04, 2.9123e-02],
        [5.1470e-04, 1.5551e-03],
        [5.2981e-04, 1.4098e-02]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0011],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0006],
        [0.0007],
        [0.0018],
        [0.0008],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0006],
        [0.0014],
        [0.0016]], device='cuda:0')/tensor([[0.0005, 0.0011, 0.0004, 0.0002, 0.0005, 0.0006, 0.0007, 0.0018, 0.0008,
         0.0003, 0.0005, 0.0004, 0.0005, 0.0006, 0.0014, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.6686e-05],
        [5.3079e-02],
        [3.5341e-03],
        [7.1036e-05],
        [7.5592e-02],
        [2.5294e-04],
        [9.7584e-04],
        [2.6570e-02],
        [3.7108e-02],
        [4.1617e-02],
        [5.6139e-04],
        [1.5649e-02],
        [3.5890e-02],
        [2.1615e-03],
        [2.6415e-02],
        [7.8542e-03]], device='cuda:0')/tensor([[7.6686e-05, 5.3079e-02, 3.5341e-03, 7.1036e-05, 7.5592e-02, 2.5294e-04,
         9.7584e-04, 2.6570e-02, 3.7108e-02, 4.1617e-02, 5.6139e-04, 1.5649e-02,
         3.5890e-02, 2.1615e-03, 2.6415e-02, 7.8542e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.8082e-04, 7.6686e-05],
        [1.1236e-03, 5.3079e-02],
        [3.6745e-04, 3.5341e-03],
        [2.1967e-04, 7.1036e-05],
        [4.5432e-04, 7.5592e-02],
        [5.5611e-04, 2.5294e-04],
        [7.1083e-04, 9.7584e-04],
        [1.7654e-03, 2.6570e-02],
        [8.2835e-04, 3.7108e-02],
        [2.6677e-04, 4.1617e-02],
        [4.7763e-04, 5.6139e-04],
        [4.0755e-04, 1.5649e-02],
        [4.5907e-04, 3.5890e-02],
        [6.0480e-04, 2.1615e-03],
        [1.4174e-03, 2.6415e-02],
        [1.6081e-03, 7.8542e-03]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0002],
        [0.0005],
        [0.0012],
        [0.0016],
        [0.0014],
        [0.0017],
        [0.0051],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0005, 0.0012, 0.0016, 0.0014, 0.0017, 0.0051, 0.0007]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0112],
        [0.0255],
        [0.0013],
        [0.0028],
        [0.0008],
        [0.0237],
        [0.0096],
        [0.0067]], device='cuda:0')/tensor([[0.0112, 0.0255, 0.0013, 0.0028, 0.0008, 0.0237, 0.0096, 0.0067]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0002, 0.0112],
        [0.0005, 0.0255],
        [0.0012, 0.0013],
        [0.0016, 0.0028],
        [0.0014, 0.0008],
        [0.0017, 0.0237],
        [0.0051, 0.0096],
        [0.0007, 0.0067]], device='cuda:0')
acc:  0.62
Time taken to execute the de SA task with prompt type auxiliary, variation 0 and batchsize 16: 0:03:17.450282
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA auxiliary 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 343.68it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.7058e-04],
        [1.1518e-03],
        [1.3716e-03],
        [7.1309e-04],
        [1.4154e-03],
        [8.9162e-04],
        [1.6584e-03],
        [9.3802e-04],
        [2.7542e-06],
        [2.6239e-04],
        [1.0781e-03],
        [1.2685e-03],
        [7.1149e-04],
        [5.2700e-04],
        [8.5508e-04],
        [5.6789e-04]], device='cuda:0')/tensor([[4.7058e-04, 1.1518e-03, 1.3716e-03, 7.1309e-04, 1.4154e-03, 8.9162e-04,
         1.6584e-03, 9.3802e-04, 2.7542e-06, 2.6239e-04, 1.0781e-03, 1.2685e-03,
         7.1149e-04, 5.2700e-04, 8.5508e-04, 5.6789e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0194],
        [0.1077],
        [0.0547],
        [0.0474],
        [0.0886],
        [0.0157],
        [0.1089],
        [0.0852],
        [0.0001],
        [0.0002],
        [0.0094],
        [0.0083],
        [0.0434],
        [0.0053],
        [0.0391],
        [0.0268]], device='cuda:0')/tensor([[0.0194, 0.1077, 0.0547, 0.0474, 0.0886, 0.0157, 0.1089, 0.0852, 0.0001,
         0.0002, 0.0094, 0.0083, 0.0434, 0.0053, 0.0391, 0.0268]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7058e-04, 1.9377e-02],
        [1.1518e-03, 1.0775e-01],
        [1.3716e-03, 5.4698e-02],
        [7.1309e-04, 4.7413e-02],
        [1.4154e-03, 8.8603e-02],
        [8.9162e-04, 1.5732e-02],
        [1.6584e-03, 1.0891e-01],
        [9.3802e-04, 8.5244e-02],
        [2.7542e-06, 1.3961e-04],
        [2.6239e-04, 1.9127e-04],
        [1.0781e-03, 9.4189e-03],
        [1.2685e-03, 8.3243e-03],
        [7.1149e-04, 4.3415e-02],
        [5.2700e-04, 5.3390e-03],
        [8.5508e-04, 3.9099e-02],
        [5.6789e-04, 2.6761e-02]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0007],
        [0.0012],
        [0.0012],
        [0.0005],
        [0.0019],
        [0.0003],
        [0.0007],
        [0.0007],
        [0.0008],
        [0.0009],
        [0.0007],
        [0.0003],
        [0.0011],
        [0.0018],
        [0.0006]], device='cuda:0')/tensor([[0.0018, 0.0007, 0.0012, 0.0012, 0.0005, 0.0019, 0.0003, 0.0007, 0.0007,
         0.0008, 0.0009, 0.0007, 0.0003, 0.0011, 0.0018, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0065],
        [0.0429],
        [0.0246],
        [0.0523],
        [0.0278],
        [0.0047],
        [0.0083],
        [0.2142],
        [0.0298],
        [0.0008],
        [0.0238],
        [0.0533],
        [0.0059],
        [0.0139],
        [0.0082],
        [0.0944]], device='cuda:0')/tensor([[0.0065, 0.0429, 0.0246, 0.0523, 0.0278, 0.0047, 0.0083, 0.2142, 0.0298,
         0.0008, 0.0238, 0.0533, 0.0059, 0.0139, 0.0082, 0.0944]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0018, 0.0065],
        [0.0007, 0.0429],
        [0.0012, 0.0246],
        [0.0012, 0.0523],
        [0.0005, 0.0278],
        [0.0019, 0.0047],
        [0.0003, 0.0083],
        [0.0007, 0.2142],
        [0.0007, 0.0298],
        [0.0008, 0.0008],
        [0.0009, 0.0238],
        [0.0007, 0.0533],
        [0.0003, 0.0059],
        [0.0011, 0.0139],
        [0.0018, 0.0082],
        [0.0006, 0.0944]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0012],
        [0.0005],
        [0.0014],
        [0.0009],
        [0.0007],
        [0.0017],
        [0.0014],
        [0.0008],
        [0.0006],
        [0.0004],
        [0.0042],
        [0.0036],
        [0.0003],
        [0.0017]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0012, 0.0005, 0.0014, 0.0009, 0.0007, 0.0017, 0.0014,
         0.0008, 0.0006, 0.0004, 0.0042, 0.0036, 0.0003, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1581],
        [0.0003],
        [0.0128],
        [0.0040],
        [0.0108],
        [0.1113],
        [0.0037],
        [0.0136],
        [0.0888],
        [0.0015],
        [0.0008],
        [0.0111],
        [0.1011],
        [0.0102],
        [0.0202],
        [0.0962]], device='cuda:0')/tensor([[0.1581, 0.0003, 0.0128, 0.0040, 0.0108, 0.1113, 0.0037, 0.0136, 0.0888,
         0.0015, 0.0008, 0.0111, 0.1011, 0.0102, 0.0202, 0.0962]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.1581],
        [0.0002, 0.0003],
        [0.0012, 0.0128],
        [0.0005, 0.0040],
        [0.0014, 0.0108],
        [0.0009, 0.1113],
        [0.0007, 0.0037],
        [0.0017, 0.0136],
        [0.0014, 0.0888],
        [0.0008, 0.0015],
        [0.0006, 0.0008],
        [0.0004, 0.0111],
        [0.0042, 0.1011],
        [0.0036, 0.0102],
        [0.0003, 0.0202],
        [0.0017, 0.0962]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0007],
        [0.0021],
        [0.0023],
        [0.0023],
        [0.0008],
        [0.0003],
        [0.0010],
        [0.0008],
        [0.0004],
        [0.0025],
        [0.0009],
        [0.0015],
        [0.0004],
        [0.0014],
        [0.0016]], device='cuda:0')/tensor([[0.0003, 0.0007, 0.0021, 0.0023, 0.0023, 0.0008, 0.0003, 0.0010, 0.0008,
         0.0004, 0.0025, 0.0009, 0.0015, 0.0004, 0.0014, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0009],
        [0.0003],
        [0.0152],
        [0.0053],
        [0.0511],
        [0.0095],
        [0.0110],
        [0.0056],
        [0.0830],
        [0.0003],
        [0.0078],
        [0.0583],
        [0.0432],
        [0.0093],
        [0.0008],
        [0.0183]], device='cuda:0')/tensor([[0.0009, 0.0003, 0.0152, 0.0053, 0.0511, 0.0095, 0.0110, 0.0056, 0.0830,
         0.0003, 0.0078, 0.0583, 0.0432, 0.0093, 0.0008, 0.0183]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0009],
        [0.0007, 0.0003],
        [0.0021, 0.0152],
        [0.0023, 0.0053],
        [0.0023, 0.0511],
        [0.0008, 0.0095],
        [0.0003, 0.0110],
        [0.0010, 0.0056],
        [0.0008, 0.0830],
        [0.0004, 0.0003],
        [0.0025, 0.0078],
        [0.0009, 0.0583],
        [0.0015, 0.0432],
        [0.0004, 0.0093],
        [0.0014, 0.0008],
        [0.0016, 0.0183]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0021],
        [0.0001],
        [0.0005],
        [0.0006],
        [0.0023],
        [0.0015],
        [0.0025],
        [0.0010],
        [0.0009],
        [0.0011],
        [0.0006],
        [0.0010],
        [0.0003],
        [0.0046],
        [0.0049]], device='cuda:0')/tensor([[0.0010, 0.0021, 0.0001, 0.0005, 0.0006, 0.0023, 0.0015, 0.0025, 0.0010,
         0.0009, 0.0011, 0.0006, 0.0010, 0.0003, 0.0046, 0.0049]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0476],
        [0.1270],
        [0.0009],
        [0.0005],
        [0.0019],
        [0.0376],
        [0.1495],
        [0.0080],
        [0.0063],
        [0.0010],
        [0.0120],
        [0.1020],
        [0.0304],
        [0.0018],
        [0.1364],
        [0.0078]], device='cuda:0')/tensor([[0.0476, 0.1270, 0.0009, 0.0005, 0.0019, 0.0376, 0.1495, 0.0080, 0.0063,
         0.0010, 0.0120, 0.1020, 0.0304, 0.0018, 0.1364, 0.0078]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0210e-03, 4.7586e-02],
        [2.1109e-03, 1.2700e-01],
        [1.2192e-04, 8.6040e-04],
        [5.4652e-04, 5.1215e-04],
        [6.2864e-04, 1.8554e-03],
        [2.3163e-03, 3.7593e-02],
        [1.5412e-03, 1.4953e-01],
        [2.4895e-03, 8.0030e-03],
        [9.6650e-04, 6.2557e-03],
        [8.7196e-04, 9.5314e-04],
        [1.1201e-03, 1.2049e-02],
        [5.6492e-04, 1.0199e-01],
        [9.6578e-04, 3.0413e-02],
        [2.6608e-04, 1.8109e-03],
        [4.5543e-03, 1.3637e-01],
        [4.9046e-03, 7.7650e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.0860e-04],
        [2.6453e-03],
        [8.8244e-04],
        [9.6796e-04],
        [5.8069e-04],
        [8.1901e-04],
        [1.8269e-03],
        [1.8640e-03],
        [1.5167e-03],
        [2.2175e-03],
        [9.0392e-04],
        [7.8046e-04],
        [6.7485e-04],
        [1.4126e-03],
        [9.3015e-05],
        [8.6881e-04]], device='cuda:0')/tensor([[8.0860e-04, 2.6453e-03, 8.8244e-04, 9.6796e-04, 5.8069e-04, 8.1901e-04,
         1.8269e-03, 1.8640e-03, 1.5167e-03, 2.2175e-03, 9.0392e-04, 7.8046e-04,
         6.7485e-04, 1.4126e-03, 9.3015e-05, 8.6881e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1673],
        [0.1111],
        [0.0426],
        [0.1294],
        [0.0016],
        [0.0013],
        [0.0753],
        [0.0609],
        [0.0244],
        [0.1013],
        [0.0040],
        [0.0068],
        [0.0182],
        [0.0810],
        [0.0050],
        [0.0028]], device='cuda:0')/tensor([[0.1673, 0.1111, 0.0426, 0.1294, 0.0016, 0.0013, 0.0753, 0.0609, 0.0244,
         0.1013, 0.0040, 0.0068, 0.0182, 0.0810, 0.0050, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.0860e-04, 1.6731e-01],
        [2.6453e-03, 1.1107e-01],
        [8.8244e-04, 4.2633e-02],
        [9.6796e-04, 1.2945e-01],
        [5.8069e-04, 1.6395e-03],
        [8.1901e-04, 1.3121e-03],
        [1.8269e-03, 7.5323e-02],
        [1.8640e-03, 6.0931e-02],
        [1.5167e-03, 2.4393e-02],
        [2.2175e-03, 1.0131e-01],
        [9.0392e-04, 4.0458e-03],
        [7.8046e-04, 6.7928e-03],
        [6.7485e-04, 1.8151e-02],
        [1.4126e-03, 8.1011e-02],
        [9.3015e-05, 5.0061e-03],
        [8.6881e-04, 2.7956e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0009],
        [0.0017],
        [0.0001],
        [0.0008],
        [0.0015],
        [0.0005],
        [0.0017],
        [0.0006],
        [0.0009],
        [0.0024],
        [0.0006],
        [0.0010],
        [0.0002],
        [0.0018],
        [0.0009]], device='cuda:0')/tensor([[0.0015, 0.0009, 0.0017, 0.0001, 0.0008, 0.0015, 0.0005, 0.0017, 0.0006,
         0.0009, 0.0024, 0.0006, 0.0010, 0.0002, 0.0018, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3817e-01],
        [3.7121e-02],
        [1.0668e-01],
        [2.4007e-02],
        [1.7157e-02],
        [9.7906e-02],
        [2.0439e-02],
        [1.1760e-02],
        [8.3822e-03],
        [4.9317e-02],
        [1.5718e-02],
        [7.3563e-03],
        [5.4669e-03],
        [5.4309e-05],
        [4.6269e-02],
        [4.7807e-04]], device='cuda:0')/tensor([[1.3817e-01, 3.7121e-02, 1.0668e-01, 2.4007e-02, 1.7157e-02, 9.7906e-02,
         2.0439e-02, 1.1760e-02, 8.3822e-03, 4.9317e-02, 1.5718e-02, 7.3563e-03,
         5.4669e-03, 5.4309e-05, 4.6269e-02, 4.7807e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5029e-03, 1.3817e-01],
        [8.7347e-04, 3.7121e-02],
        [1.7478e-03, 1.0668e-01],
        [1.1029e-04, 2.4007e-02],
        [8.0710e-04, 1.7157e-02],
        [1.4715e-03, 9.7906e-02],
        [5.4433e-04, 2.0439e-02],
        [1.6618e-03, 1.1760e-02],
        [6.1614e-04, 8.3822e-03],
        [9.2234e-04, 4.9317e-02],
        [2.3653e-03, 1.5718e-02],
        [5.6520e-04, 7.3563e-03],
        [1.0177e-03, 5.4669e-03],
        [1.9183e-04, 5.4309e-05],
        [1.7596e-03, 4.6269e-02],
        [8.6598e-04, 4.7807e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0021],
        [0.0006],
        [0.0035],
        [0.0005],
        [0.0062],
        [0.0018],
        [0.0004],
        [0.0012],
        [0.0013],
        [0.0008],
        [0.0023],
        [0.0010],
        [0.0008],
        [0.0021],
        [0.0008],
        [0.0004]], device='cuda:0')/tensor([[0.0021, 0.0006, 0.0035, 0.0005, 0.0062, 0.0018, 0.0004, 0.0012, 0.0013,
         0.0008, 0.0023, 0.0010, 0.0008, 0.0021, 0.0008, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0468],
        [0.1086],
        [0.0189],
        [0.0516],
        [0.0799],
        [0.0307],
        [0.0007],
        [0.0714],
        [0.0147],
        [0.0366],
        [0.0674],
        [0.0014],
        [0.0756],
        [0.0334],
        [0.0385],
        [0.0360]], device='cuda:0')/tensor([[0.0468, 0.1086, 0.0189, 0.0516, 0.0799, 0.0307, 0.0007, 0.0714, 0.0147,
         0.0366, 0.0674, 0.0014, 0.0756, 0.0334, 0.0385, 0.0360]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0021, 0.0468],
        [0.0006, 0.1086],
        [0.0035, 0.0189],
        [0.0005, 0.0516],
        [0.0062, 0.0799],
        [0.0018, 0.0307],
        [0.0004, 0.0007],
        [0.0012, 0.0714],
        [0.0013, 0.0147],
        [0.0008, 0.0366],
        [0.0023, 0.0674],
        [0.0010, 0.0014],
        [0.0008, 0.0756],
        [0.0021, 0.0334],
        [0.0008, 0.0385],
        [0.0004, 0.0360]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0008],
        [0.0013],
        [0.0014],
        [0.0008],
        [0.0010],
        [0.0001],
        [0.0024],
        [0.0009],
        [0.0005],
        [0.0012],
        [0.0012],
        [0.0037],
        [0.0002],
        [0.0021],
        [0.0029]], device='cuda:0')/tensor([[0.0007, 0.0008, 0.0013, 0.0014, 0.0008, 0.0010, 0.0001, 0.0024, 0.0009,
         0.0005, 0.0012, 0.0012, 0.0037, 0.0002, 0.0021, 0.0029]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3120e-02],
        [5.7287e-03],
        [9.7170e-02],
        [9.5809e-04],
        [7.5736e-02],
        [8.1015e-02],
        [2.5258e-03],
        [8.9021e-03],
        [6.2930e-02],
        [4.3688e-02],
        [1.7553e-01],
        [1.2382e-02],
        [8.0284e-02],
        [1.5976e-04],
        [4.9010e-03],
        [2.6948e-02]], device='cuda:0')/tensor([[1.3120e-02, 5.7287e-03, 9.7170e-02, 9.5809e-04, 7.5736e-02, 8.1015e-02,
         2.5258e-03, 8.9021e-03, 6.2930e-02, 4.3688e-02, 1.7553e-01, 1.2382e-02,
         8.0284e-02, 1.5976e-04, 4.9010e-03, 2.6948e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.4574e-04, 1.3120e-02],
        [8.3215e-04, 5.7287e-03],
        [1.2953e-03, 9.7170e-02],
        [1.3873e-03, 9.5809e-04],
        [7.8672e-04, 7.5736e-02],
        [1.0474e-03, 8.1015e-02],
        [1.4920e-04, 2.5258e-03],
        [2.3631e-03, 8.9021e-03],
        [8.9111e-04, 6.2930e-02],
        [5.1291e-04, 4.3688e-02],
        [1.1590e-03, 1.7553e-01],
        [1.1714e-03, 1.2382e-02],
        [3.6663e-03, 8.0284e-02],
        [1.5523e-04, 1.5976e-04],
        [2.0814e-03, 4.9010e-03],
        [2.8509e-03, 2.6948e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0020],
        [0.0007],
        [0.0013],
        [0.0013],
        [0.0012],
        [0.0010],
        [0.0021],
        [0.0012],
        [0.0009],
        [0.0014],
        [0.0007],
        [0.0015],
        [0.0019],
        [0.0014],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0020, 0.0007, 0.0013, 0.0013, 0.0012, 0.0010, 0.0021, 0.0012,
         0.0009, 0.0014, 0.0007, 0.0015, 0.0019, 0.0014, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0748],
        [0.0404],
        [0.0646],
        [0.0037],
        [0.0537],
        [0.0720],
        [0.0423],
        [0.0085],
        [0.0012],
        [0.0667],
        [0.0012],
        [0.0036],
        [0.0389],
        [0.0023],
        [0.0163]], device='cuda:0')/tensor([[0.0016, 0.0748, 0.0404, 0.0646, 0.0037, 0.0537, 0.0720, 0.0423, 0.0085,
         0.0012, 0.0667, 0.0012, 0.0036, 0.0389, 0.0023, 0.0163]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0016],
        [0.0020, 0.0748],
        [0.0007, 0.0404],
        [0.0013, 0.0646],
        [0.0013, 0.0037],
        [0.0012, 0.0537],
        [0.0010, 0.0720],
        [0.0021, 0.0423],
        [0.0012, 0.0085],
        [0.0009, 0.0012],
        [0.0014, 0.0667],
        [0.0007, 0.0012],
        [0.0015, 0.0036],
        [0.0019, 0.0389],
        [0.0014, 0.0023],
        [0.0006, 0.0163]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0009],
        [0.0011],
        [0.0022],
        [0.0004],
        [0.0061],
        [0.0021],
        [0.0006],
        [0.0005],
        [0.0018],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0031],
        [0.0013],
        [0.0017]], device='cuda:0')/tensor([[0.0003, 0.0009, 0.0011, 0.0022, 0.0004, 0.0061, 0.0021, 0.0006, 0.0005,
         0.0018, 0.0002, 0.0003, 0.0004, 0.0031, 0.0013, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0042],
        [0.0168],
        [0.0055],
        [0.0163],
        [0.0534],
        [0.0751],
        [0.0053],
        [0.0002],
        [0.0987],
        [0.0615],
        [0.0011],
        [0.0009],
        [0.0005],
        [0.0345],
        [0.0012],
        [0.0018]], device='cuda:0')/tensor([[0.0042, 0.0168, 0.0055, 0.0163, 0.0534, 0.0751, 0.0053, 0.0002, 0.0987,
         0.0615, 0.0011, 0.0009, 0.0005, 0.0345, 0.0012, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0042],
        [0.0009, 0.0168],
        [0.0011, 0.0055],
        [0.0022, 0.0163],
        [0.0004, 0.0534],
        [0.0061, 0.0751],
        [0.0021, 0.0053],
        [0.0006, 0.0002],
        [0.0005, 0.0987],
        [0.0018, 0.0615],
        [0.0002, 0.0011],
        [0.0003, 0.0009],
        [0.0004, 0.0005],
        [0.0031, 0.0345],
        [0.0013, 0.0012],
        [0.0017, 0.0018]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0007],
        [0.0001],
        [0.0018],
        [0.0006],
        [0.0034],
        [0.0003],
        [0.0025],
        [0.0016],
        [0.0006],
        [0.0003],
        [0.0006],
        [0.0021],
        [0.0005],
        [0.0004],
        [0.0015]], device='cuda:0')/tensor([[0.0010, 0.0007, 0.0001, 0.0018, 0.0006, 0.0034, 0.0003, 0.0025, 0.0016,
         0.0006, 0.0003, 0.0006, 0.0021, 0.0005, 0.0004, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0239],
        [0.0663],
        [0.0597],
        [0.0058],
        [0.0486],
        [0.0650],
        [0.0534],
        [0.1234],
        [0.0070],
        [0.0002],
        [0.0008],
        [0.0066],
        [0.0820],
        [0.0085],
        [0.1085]], device='cuda:0')/tensor([[0.0025, 0.0239, 0.0663, 0.0597, 0.0058, 0.0486, 0.0650, 0.0534, 0.1234,
         0.0070, 0.0002, 0.0008, 0.0066, 0.0820, 0.0085, 0.1085]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0262e-03, 2.4521e-03],
        [7.0128e-04, 2.3855e-02],
        [1.0123e-04, 6.6330e-02],
        [1.8169e-03, 5.9718e-02],
        [6.1844e-04, 5.7606e-03],
        [3.4061e-03, 4.8588e-02],
        [3.4701e-04, 6.5016e-02],
        [2.5231e-03, 5.3368e-02],
        [1.6225e-03, 1.2336e-01],
        [6.4588e-04, 7.0108e-03],
        [3.0617e-04, 2.2243e-04],
        [5.7021e-04, 8.0065e-04],
        [2.0666e-03, 6.6247e-03],
        [4.7037e-04, 8.2016e-02],
        [4.1673e-04, 8.5111e-03],
        [1.4595e-03, 1.0848e-01]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0014],
        [0.0019],
        [0.0009],
        [0.0011],
        [0.0007],
        [0.0003]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0014, 0.0019, 0.0009, 0.0011, 0.0007, 0.0003]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0305],
        [0.0348],
        [0.0226],
        [0.0011],
        [0.0328],
        [0.1580],
        [0.0505],
        [0.0035]], device='cuda:0')/tensor([[0.0305, 0.0348, 0.0226, 0.0011, 0.0328, 0.1580, 0.0505, 0.0035]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0015, 0.0305],
        [0.0002, 0.0348],
        [0.0014, 0.0226],
        [0.0019, 0.0011],
        [0.0009, 0.0328],
        [0.0011, 0.1580],
        [0.0007, 0.0505],
        [0.0003, 0.0035]], device='cuda:0')
acc:  0.565
Time taken to execute the de SA task with prompt type auxiliary, variation 1 and batchsize 16: 0:03:18.037021
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA auxiliary 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 331.52it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0008],
        [0.0019],
        [0.0023],
        [0.0005],
        [0.0004],
        [0.0012],
        [0.0010],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0005, 0.0008, 0.0019, 0.0023, 0.0005, 0.0004, 0.0012, 0.0010, 0.0006,
         0.0006, 0.0007, 0.0002, 0.0007, 0.0003, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0031],
        [0.0002],
        [0.0178],
        [0.0358],
        [0.0019],
        [0.0007],
        [0.0096],
        [0.0583],
        [0.0197],
        [0.0006],
        [0.0517],
        [0.0595],
        [0.0044],
        [0.0003],
        [0.0003],
        [0.0127]], device='cuda:0')/tensor([[0.0031, 0.0002, 0.0178, 0.0358, 0.0019, 0.0007, 0.0096, 0.0583, 0.0197,
         0.0006, 0.0517, 0.0595, 0.0044, 0.0003, 0.0003, 0.0127]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0031],
        [0.0008, 0.0002],
        [0.0019, 0.0178],
        [0.0023, 0.0358],
        [0.0005, 0.0019],
        [0.0004, 0.0007],
        [0.0012, 0.0096],
        [0.0010, 0.0583],
        [0.0006, 0.0197],
        [0.0006, 0.0006],
        [0.0007, 0.0517],
        [0.0002, 0.0595],
        [0.0007, 0.0044],
        [0.0003, 0.0003],
        [0.0003, 0.0003],
        [0.0004, 0.0127]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0013],
        [0.0002],
        [0.0004],
        [0.0020],
        [0.0014],
        [0.0019],
        [0.0007],
        [0.0064],
        [0.0011],
        [0.0013],
        [0.0007],
        [0.0016]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0004, 0.0004, 0.0013, 0.0002, 0.0004, 0.0020, 0.0014,
         0.0019, 0.0007, 0.0064, 0.0011, 0.0013, 0.0007, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0362],
        [0.0048],
        [0.0469],
        [0.0178],
        [0.0229],
        [0.0001],
        [0.0086],
        [0.0025],
        [0.0070],
        [0.0014],
        [0.0122],
        [0.0827],
        [0.0501],
        [0.0028],
        [0.0017],
        [0.0007]], device='cuda:0')/tensor([[0.0362, 0.0048, 0.0469, 0.0178, 0.0229, 0.0001, 0.0086, 0.0025, 0.0070,
         0.0014, 0.0122, 0.0827, 0.0501, 0.0028, 0.0017, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0362],
        [0.0004, 0.0048],
        [0.0004, 0.0469],
        [0.0004, 0.0178],
        [0.0013, 0.0229],
        [0.0002, 0.0001],
        [0.0004, 0.0086],
        [0.0020, 0.0025],
        [0.0014, 0.0070],
        [0.0019, 0.0014],
        [0.0007, 0.0122],
        [0.0064, 0.0827],
        [0.0011, 0.0501],
        [0.0013, 0.0028],
        [0.0007, 0.0017],
        [0.0016, 0.0007]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1395e-03],
        [5.4705e-04],
        [3.5816e-04],
        [2.4588e-04],
        [5.5235e-05],
        [1.0412e-03],
        [3.8334e-04],
        [7.7182e-04],
        [2.2683e-04],
        [3.1449e-04],
        [7.3440e-04],
        [5.8132e-04],
        [6.5216e-04],
        [2.0322e-04],
        [1.1964e-03],
        [4.4661e-04]], device='cuda:0')/tensor([[1.1395e-03, 5.4705e-04, 3.5816e-04, 2.4588e-04, 5.5235e-05, 1.0412e-03,
         3.8334e-04, 7.7182e-04, 2.2683e-04, 3.1449e-04, 7.3440e-04, 5.8132e-04,
         6.5216e-04, 2.0322e-04, 1.1964e-03, 4.4661e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0197],
        [0.0037],
        [0.0162],
        [0.0165],
        [0.0366],
        [0.0013],
        [0.0032],
        [0.0900],
        [0.0410],
        [0.0138],
        [0.0286],
        [0.0008],
        [0.0036],
        [0.0012],
        [0.0016],
        [0.0237]], device='cuda:0')/tensor([[0.0197, 0.0037, 0.0162, 0.0165, 0.0366, 0.0013, 0.0032, 0.0900, 0.0410,
         0.0138, 0.0286, 0.0008, 0.0036, 0.0012, 0.0016, 0.0237]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1395e-03, 1.9701e-02],
        [5.4705e-04, 3.6660e-03],
        [3.5816e-04, 1.6174e-02],
        [2.4588e-04, 1.6461e-02],
        [5.5235e-05, 3.6637e-02],
        [1.0412e-03, 1.3477e-03],
        [3.8334e-04, 3.1940e-03],
        [7.7182e-04, 8.9995e-02],
        [2.2683e-04, 4.1050e-02],
        [3.1449e-04, 1.3814e-02],
        [7.3440e-04, 2.8577e-02],
        [5.8132e-04, 7.8106e-04],
        [6.5216e-04, 3.5944e-03],
        [2.0322e-04, 1.2010e-03],
        [1.1964e-03, 1.6040e-03],
        [4.4661e-04, 2.3683e-02]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0004],
        [0.0011],
        [0.0005],
        [0.0012],
        [0.0012],
        [0.0003],
        [0.0006],
        [0.0004],
        [0.0004],
        [0.0014],
        [0.0002],
        [0.0013],
        [0.0005],
        [0.0025],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0004, 0.0011, 0.0005, 0.0012, 0.0012, 0.0003, 0.0006, 0.0004,
         0.0004, 0.0014, 0.0002, 0.0013, 0.0005, 0.0025, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0118],
        [0.0013],
        [0.0047],
        [0.0008],
        [0.0024],
        [0.0014],
        [0.0167],
        [0.0241],
        [0.0004],
        [0.0080],
        [0.0308],
        [0.0256],
        [0.0295],
        [0.0012],
        [0.0292],
        [0.0002]], device='cuda:0')/tensor([[0.0118, 0.0013, 0.0047, 0.0008, 0.0024, 0.0014, 0.0167, 0.0241, 0.0004,
         0.0080, 0.0308, 0.0256, 0.0295, 0.0012, 0.0292, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0118],
        [0.0004, 0.0013],
        [0.0011, 0.0047],
        [0.0005, 0.0008],
        [0.0012, 0.0024],
        [0.0012, 0.0014],
        [0.0003, 0.0167],
        [0.0006, 0.0241],
        [0.0004, 0.0004],
        [0.0004, 0.0080],
        [0.0014, 0.0308],
        [0.0002, 0.0256],
        [0.0013, 0.0295],
        [0.0005, 0.0012],
        [0.0025, 0.0292],
        [0.0005, 0.0002]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0003],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0005, 0.0005, 0.0002, 0.0004, 0.0002, 0.0002, 0.0006,
         0.0003, 0.0002, 0.0007, 0.0003, 0.0005, 0.0003, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4313e-05],
        [6.6694e-02],
        [6.6169e-02],
        [6.9427e-02],
        [2.2403e-03],
        [2.9759e-02],
        [2.3120e-02],
        [9.3608e-03],
        [4.6914e-02],
        [3.3575e-02],
        [1.2262e-03],
        [3.5095e-04],
        [6.6090e-04],
        [7.2447e-03],
        [9.2667e-03],
        [4.6124e-03]], device='cuda:0')/tensor([[6.4313e-05, 6.6694e-02, 6.6169e-02, 6.9427e-02, 2.2403e-03, 2.9759e-02,
         2.3120e-02, 9.3608e-03, 4.6914e-02, 3.3575e-02, 1.2262e-03, 3.5095e-04,
         6.6090e-04, 7.2447e-03, 9.2667e-03, 4.6124e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9749e-04, 6.4313e-05],
        [6.7259e-04, 6.6694e-02],
        [4.9020e-04, 6.6169e-02],
        [5.2899e-04, 6.9427e-02],
        [1.6279e-04, 2.2403e-03],
        [3.9240e-04, 2.9759e-02],
        [2.2975e-04, 2.3120e-02],
        [1.5644e-04, 9.3608e-03],
        [5.5129e-04, 4.6914e-02],
        [3.0357e-04, 3.3575e-02],
        [2.1882e-04, 1.2262e-03],
        [7.1613e-04, 3.5095e-04],
        [3.0638e-04, 6.6090e-04],
        [4.8112e-04, 7.2447e-03],
        [2.6811e-04, 9.2667e-03],
        [1.3307e-04, 4.6124e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0007],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0023],
        [0.0005],
        [0.0028],
        [0.0003],
        [0.0003],
        [0.0007],
        [0.0008],
        [0.0005],
        [0.0021],
        [0.0001]], device='cuda:0')/tensor([[0.0003, 0.0007, 0.0002, 0.0002, 0.0004, 0.0002, 0.0023, 0.0005, 0.0028,
         0.0003, 0.0003, 0.0007, 0.0008, 0.0005, 0.0021, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2809e-02],
        [5.7880e-04],
        [3.0545e-03],
        [9.9892e-05],
        [2.9508e-02],
        [1.8592e-03],
        [7.5432e-03],
        [4.0735e-03],
        [2.5124e-03],
        [1.1891e-04],
        [7.0245e-03],
        [6.7916e-03],
        [6.7622e-02],
        [3.1391e-02],
        [2.8121e-03],
        [3.1308e-03]], device='cuda:0')/tensor([[1.2809e-02, 5.7880e-04, 3.0545e-03, 9.9892e-05, 2.9508e-02, 1.8592e-03,
         7.5432e-03, 4.0735e-03, 2.5124e-03, 1.1891e-04, 7.0245e-03, 6.7916e-03,
         6.7622e-02, 3.1391e-02, 2.8121e-03, 3.1308e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.8660e-04, 1.2809e-02],
        [6.8527e-04, 5.7880e-04],
        [2.4613e-04, 3.0545e-03],
        [1.6353e-04, 9.9892e-05],
        [3.9537e-04, 2.9508e-02],
        [1.6824e-04, 1.8592e-03],
        [2.3199e-03, 7.5432e-03],
        [5.2631e-04, 4.0735e-03],
        [2.7999e-03, 2.5124e-03],
        [2.6141e-04, 1.1891e-04],
        [3.4422e-04, 7.0245e-03],
        [6.7131e-04, 6.7916e-03],
        [8.1852e-04, 6.7622e-02],
        [4.8727e-04, 3.1391e-02],
        [2.0673e-03, 2.8121e-03],
        [1.4445e-04, 3.1308e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0014],
        [0.0001],
        [0.0003],
        [0.0016],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0026],
        [0.0003],
        [0.0002],
        [0.0010],
        [0.0009],
        [0.0001],
        [0.0003]], device='cuda:0')/tensor([[0.0007, 0.0014, 0.0001, 0.0003, 0.0016, 0.0005, 0.0003, 0.0005, 0.0002,
         0.0026, 0.0003, 0.0002, 0.0010, 0.0009, 0.0001, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0026],
        [0.0124],
        [0.1058],
        [0.0206],
        [0.0096],
        [0.0002],
        [0.0012],
        [0.0003],
        [0.0058],
        [0.0029],
        [0.0007],
        [0.0140],
        [0.0046],
        [0.0006],
        [0.0001],
        [0.0009]], device='cuda:0')/tensor([[0.0026, 0.0124, 0.1058, 0.0206, 0.0096, 0.0002, 0.0012, 0.0003, 0.0058,
         0.0029, 0.0007, 0.0140, 0.0046, 0.0006, 0.0001, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0026],
        [0.0014, 0.0124],
        [0.0001, 0.1058],
        [0.0003, 0.0206],
        [0.0016, 0.0096],
        [0.0005, 0.0002],
        [0.0003, 0.0012],
        [0.0005, 0.0003],
        [0.0002, 0.0058],
        [0.0026, 0.0029],
        [0.0003, 0.0007],
        [0.0002, 0.0140],
        [0.0010, 0.0046],
        [0.0009, 0.0006],
        [0.0001, 0.0001],
        [0.0003, 0.0009]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0007],
        [0.0002],
        [0.0008],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0001],
        [0.0002],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0007, 0.0002, 0.0008, 0.0007, 0.0003, 0.0005, 0.0002, 0.0004,
         0.0005, 0.0003, 0.0005, 0.0001, 0.0002, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0263],
        [0.0075],
        [0.0003],
        [0.0137],
        [0.0013],
        [0.0128],
        [0.0011],
        [0.0310],
        [0.0029],
        [0.0268],
        [0.0226],
        [0.0098],
        [0.0004],
        [0.0087],
        [0.0016],
        [0.0229]], device='cuda:0')/tensor([[0.0263, 0.0075, 0.0003, 0.0137, 0.0013, 0.0128, 0.0011, 0.0310, 0.0029,
         0.0268, 0.0226, 0.0098, 0.0004, 0.0087, 0.0016, 0.0229]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0263],
        [0.0007, 0.0075],
        [0.0002, 0.0003],
        [0.0008, 0.0137],
        [0.0007, 0.0013],
        [0.0003, 0.0128],
        [0.0005, 0.0011],
        [0.0002, 0.0310],
        [0.0004, 0.0029],
        [0.0005, 0.0268],
        [0.0003, 0.0226],
        [0.0005, 0.0098],
        [0.0001, 0.0004],
        [0.0002, 0.0087],
        [0.0005, 0.0016],
        [0.0005, 0.0229]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0006],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0017],
        [0.0004],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0006],
        [0.0003],
        [0.0017],
        [0.0016]], device='cuda:0')/tensor([[0.0004, 0.0006, 0.0008, 0.0002, 0.0002, 0.0005, 0.0003, 0.0017, 0.0004,
         0.0004, 0.0002, 0.0007, 0.0006, 0.0003, 0.0017, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0021],
        [0.0065],
        [0.0379],
        [0.0001],
        [0.0075],
        [0.0400],
        [0.0064],
        [0.0272],
        [0.0014],
        [0.0025],
        [0.0045],
        [0.0053],
        [0.0700],
        [0.0413],
        [0.0373],
        [0.0042]], device='cuda:0')/tensor([[0.0021, 0.0065, 0.0379, 0.0001, 0.0075, 0.0400, 0.0064, 0.0272, 0.0014,
         0.0025, 0.0045, 0.0053, 0.0700, 0.0413, 0.0373, 0.0042]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0021],
        [0.0006, 0.0065],
        [0.0008, 0.0379],
        [0.0002, 0.0001],
        [0.0002, 0.0075],
        [0.0005, 0.0400],
        [0.0003, 0.0064],
        [0.0017, 0.0272],
        [0.0004, 0.0014],
        [0.0004, 0.0025],
        [0.0002, 0.0045],
        [0.0007, 0.0053],
        [0.0006, 0.0700],
        [0.0003, 0.0413],
        [0.0017, 0.0373],
        [0.0016, 0.0042]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0010],
        [0.0005],
        [0.0011],
        [0.0007],
        [0.0003],
        [0.0006],
        [0.0016],
        [0.0009],
        [0.0010],
        [0.0001],
        [0.0005],
        [0.0003],
        [0.0010],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0016, 0.0010, 0.0005, 0.0011, 0.0007, 0.0003, 0.0006, 0.0016, 0.0009,
         0.0010, 0.0001, 0.0005, 0.0003, 0.0010, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0040],
        [0.0053],
        [0.0896],
        [0.1284],
        [0.0072],
        [0.0036],
        [0.0050],
        [0.0208],
        [0.0052],
        [0.0600],
        [0.0018],
        [0.0257],
        [0.0245],
        [0.0041],
        [0.0023],
        [0.0157]], device='cuda:0')/tensor([[0.0040, 0.0053, 0.0896, 0.1284, 0.0072, 0.0036, 0.0050, 0.0208, 0.0052,
         0.0600, 0.0018, 0.0257, 0.0245, 0.0041, 0.0023, 0.0157]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.0040],
        [0.0010, 0.0053],
        [0.0005, 0.0896],
        [0.0011, 0.1284],
        [0.0007, 0.0072],
        [0.0003, 0.0036],
        [0.0006, 0.0050],
        [0.0016, 0.0208],
        [0.0009, 0.0052],
        [0.0010, 0.0600],
        [0.0001, 0.0018],
        [0.0005, 0.0257],
        [0.0003, 0.0245],
        [0.0010, 0.0041],
        [0.0003, 0.0023],
        [0.0005, 0.0157]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.3040e-04],
        [8.3522e-05],
        [4.4532e-04],
        [7.9214e-04],
        [1.3032e-04],
        [6.1137e-04],
        [6.8514e-04],
        [4.0529e-04],
        [2.5353e-04],
        [1.7195e-03],
        [4.3701e-04],
        [7.0386e-04],
        [4.9494e-04],
        [4.5891e-04],
        [4.5833e-04],
        [1.5236e-04]], device='cuda:0')/tensor([[2.3040e-04, 8.3522e-05, 4.4532e-04, 7.9214e-04, 1.3032e-04, 6.1137e-04,
         6.8514e-04, 4.0529e-04, 2.5353e-04, 1.7195e-03, 4.3701e-04, 7.0386e-04,
         4.9494e-04, 4.5891e-04, 4.5833e-04, 1.5236e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0205],
        [0.0385],
        [0.0042],
        [0.0007],
        [0.0294],
        [0.0266],
        [0.0009],
        [0.0131],
        [0.0002],
        [0.0016],
        [0.0058],
        [0.0269],
        [0.0018],
        [0.0090],
        [0.0003],
        [0.0063]], device='cuda:0')/tensor([[0.0205, 0.0385, 0.0042, 0.0007, 0.0294, 0.0266, 0.0009, 0.0131, 0.0002,
         0.0016, 0.0058, 0.0269, 0.0018, 0.0090, 0.0003, 0.0063]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3040e-04, 2.0476e-02],
        [8.3522e-05, 3.8538e-02],
        [4.4532e-04, 4.2347e-03],
        [7.9214e-04, 6.6549e-04],
        [1.3032e-04, 2.9400e-02],
        [6.1137e-04, 2.6625e-02],
        [6.8514e-04, 9.0181e-04],
        [4.0529e-04, 1.3132e-02],
        [2.5353e-04, 2.3306e-04],
        [1.7195e-03, 1.6014e-03],
        [4.3701e-04, 5.7844e-03],
        [7.0386e-04, 2.6893e-02],
        [4.9494e-04, 1.7684e-03],
        [4.5891e-04, 8.9939e-03],
        [4.5833e-04, 3.1852e-04],
        [1.5236e-04, 6.3113e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0006],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0003],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0006],
        [0.0012],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0006, 0.0002, 0.0006, 0.0005, 0.0005, 0.0005, 0.0012, 0.0003,
         0.0002, 0.0005, 0.0003, 0.0006, 0.0012, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0131],
        [0.0337],
        [0.0021],
        [0.0117],
        [0.0431],
        [0.0284],
        [0.0050],
        [0.0016],
        [0.0256],
        [0.0387],
        [0.0111],
        [0.0088],
        [0.0230],
        [0.0049],
        [0.0056],
        [0.0005]], device='cuda:0')/tensor([[0.0131, 0.0337, 0.0021, 0.0117, 0.0431, 0.0284, 0.0050, 0.0016, 0.0256,
         0.0387, 0.0111, 0.0088, 0.0230, 0.0049, 0.0056, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0131],
        [0.0006, 0.0337],
        [0.0002, 0.0021],
        [0.0006, 0.0117],
        [0.0005, 0.0431],
        [0.0005, 0.0284],
        [0.0005, 0.0050],
        [0.0012, 0.0016],
        [0.0003, 0.0256],
        [0.0002, 0.0387],
        [0.0005, 0.0111],
        [0.0003, 0.0088],
        [0.0006, 0.0230],
        [0.0012, 0.0049],
        [0.0004, 0.0056],
        [0.0004, 0.0005]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0003],
        [0.0026],
        [0.0001],
        [0.0004],
        [0.0006],
        [0.0008],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0026, 0.0001, 0.0004, 0.0006, 0.0008, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0026],
        [0.0404],
        [0.0524],
        [0.0066],
        [0.0011],
        [0.0007],
        [0.0086],
        [0.0002]], device='cuda:0')/tensor([[0.0026, 0.0404, 0.0524, 0.0066, 0.0011, 0.0007, 0.0086, 0.0002]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0003, 0.0026],
        [0.0026, 0.0404],
        [0.0001, 0.0524],
        [0.0004, 0.0066],
        [0.0006, 0.0011],
        [0.0008, 0.0007],
        [0.0003, 0.0086],
        [0.0004, 0.0002]], device='cuda:0')
acc:  0.62
Time taken to execute the de SA task with prompt type auxiliary, variation 2 and batchsize 16: 0:03:16.969572
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA auxiliary 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 349.29it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0034],
        [0.0003],
        [0.0009],
        [0.0010],
        [0.0022],
        [0.0004],
        [0.0019],
        [0.0017],
        [0.0009],
        [0.0003],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0019],
        [0.0034],
        [0.0006]], device='cuda:0')/tensor([[0.0034, 0.0003, 0.0009, 0.0010, 0.0022, 0.0004, 0.0019, 0.0017, 0.0009,
         0.0003, 0.0006, 0.0005, 0.0005, 0.0019, 0.0034, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0209],
        [0.0106],
        [0.0008],
        [0.0464],
        [0.0041],
        [0.0044],
        [0.0286],
        [0.0062],
        [0.0098],
        [0.0428],
        [0.0141],
        [0.0059],
        [0.0494],
        [0.0630],
        [0.0024]], device='cuda:0')/tensor([[0.0016, 0.0209, 0.0106, 0.0008, 0.0464, 0.0041, 0.0044, 0.0286, 0.0062,
         0.0098, 0.0428, 0.0141, 0.0059, 0.0494, 0.0630, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0034, 0.0016],
        [0.0003, 0.0209],
        [0.0009, 0.0106],
        [0.0010, 0.0008],
        [0.0022, 0.0464],
        [0.0004, 0.0041],
        [0.0019, 0.0044],
        [0.0017, 0.0286],
        [0.0009, 0.0062],
        [0.0003, 0.0098],
        [0.0006, 0.0428],
        [0.0005, 0.0141],
        [0.0005, 0.0059],
        [0.0019, 0.0494],
        [0.0034, 0.0630],
        [0.0006, 0.0024]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0017],
        [0.0012],
        [0.0009],
        [0.0054],
        [0.0019],
        [0.0004],
        [0.0020],
        [0.0025],
        [0.0003],
        [0.0026],
        [0.0043],
        [0.0003],
        [0.0010],
        [0.0012],
        [0.0008]], device='cuda:0')/tensor([[0.0012, 0.0017, 0.0012, 0.0009, 0.0054, 0.0019, 0.0004, 0.0020, 0.0025,
         0.0003, 0.0026, 0.0043, 0.0003, 0.0010, 0.0012, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0365],
        [0.0244],
        [0.0113],
        [0.0410],
        [0.0095],
        [0.0011],
        [0.0227],
        [0.0115],
        [0.0075],
        [0.0197],
        [0.0143],
        [0.0331],
        [0.0073],
        [0.0016],
        [0.0082],
        [0.0143]], device='cuda:0')/tensor([[0.0365, 0.0244, 0.0113, 0.0410, 0.0095, 0.0011, 0.0227, 0.0115, 0.0075,
         0.0197, 0.0143, 0.0331, 0.0073, 0.0016, 0.0082, 0.0143]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0365],
        [0.0017, 0.0244],
        [0.0012, 0.0113],
        [0.0009, 0.0410],
        [0.0054, 0.0095],
        [0.0019, 0.0011],
        [0.0004, 0.0227],
        [0.0020, 0.0115],
        [0.0025, 0.0075],
        [0.0003, 0.0197],
        [0.0026, 0.0143],
        [0.0043, 0.0331],
        [0.0003, 0.0073],
        [0.0010, 0.0016],
        [0.0012, 0.0082],
        [0.0008, 0.0143]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0015],
        [0.0020],
        [0.0009],
        [0.0015],
        [0.0010],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0022],
        [0.0004],
        [0.0014],
        [0.0048],
        [0.0002],
        [0.0003],
        [0.0008]], device='cuda:0')/tensor([[0.0024, 0.0015, 0.0020, 0.0009, 0.0015, 0.0010, 0.0002, 0.0004, 0.0002,
         0.0022, 0.0004, 0.0014, 0.0048, 0.0002, 0.0003, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0041],
        [0.0795],
        [0.0038],
        [0.0100],
        [0.0320],
        [0.0271],
        [0.0115],
        [0.0003],
        [0.0140],
        [0.0034],
        [0.0081],
        [0.0141],
        [0.0322],
        [0.0020],
        [0.0253],
        [0.0158]], device='cuda:0')/tensor([[0.0041, 0.0795, 0.0038, 0.0100, 0.0320, 0.0271, 0.0115, 0.0003, 0.0140,
         0.0034, 0.0081, 0.0141, 0.0322, 0.0020, 0.0253, 0.0158]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0024, 0.0041],
        [0.0015, 0.0795],
        [0.0020, 0.0038],
        [0.0009, 0.0100],
        [0.0015, 0.0320],
        [0.0010, 0.0271],
        [0.0002, 0.0115],
        [0.0004, 0.0003],
        [0.0002, 0.0140],
        [0.0022, 0.0034],
        [0.0004, 0.0081],
        [0.0014, 0.0141],
        [0.0048, 0.0322],
        [0.0002, 0.0020],
        [0.0003, 0.0253],
        [0.0008, 0.0158]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0006],
        [0.0007],
        [0.0012],
        [0.0010],
        [0.0007],
        [0.0012],
        [0.0009],
        [0.0016],
        [0.0006],
        [0.0017],
        [0.0019],
        [0.0005],
        [0.0012],
        [0.0013],
        [0.0010]], device='cuda:0')/tensor([[0.0002, 0.0006, 0.0007, 0.0012, 0.0010, 0.0007, 0.0012, 0.0009, 0.0016,
         0.0006, 0.0017, 0.0019, 0.0005, 0.0012, 0.0013, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0048],
        [0.0066],
        [0.0025],
        [0.0052],
        [0.0558],
        [0.0117],
        [0.0218],
        [0.0274],
        [0.0303],
        [0.0080],
        [0.0064],
        [0.0407],
        [0.0132],
        [0.0017],
        [0.0138],
        [0.0323]], device='cuda:0')/tensor([[0.0048, 0.0066, 0.0025, 0.0052, 0.0558, 0.0117, 0.0218, 0.0274, 0.0303,
         0.0080, 0.0064, 0.0407, 0.0132, 0.0017, 0.0138, 0.0323]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0048],
        [0.0006, 0.0066],
        [0.0007, 0.0025],
        [0.0012, 0.0052],
        [0.0010, 0.0558],
        [0.0007, 0.0117],
        [0.0012, 0.0218],
        [0.0009, 0.0274],
        [0.0016, 0.0303],
        [0.0006, 0.0080],
        [0.0017, 0.0064],
        [0.0019, 0.0407],
        [0.0005, 0.0132],
        [0.0012, 0.0017],
        [0.0013, 0.0138],
        [0.0010, 0.0323]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.9095e-04],
        [7.7707e-04],
        [2.1961e-03],
        [7.4182e-04],
        [8.9534e-05],
        [1.7320e-03],
        [1.0038e-03],
        [2.7799e-04],
        [4.5355e-04],
        [1.9237e-03],
        [1.6692e-03],
        [6.3895e-04],
        [3.3331e-03],
        [5.1118e-04],
        [6.7126e-04],
        [1.5468e-03]], device='cuda:0')/tensor([[7.9095e-04, 7.7707e-04, 2.1961e-03, 7.4182e-04, 8.9534e-05, 1.7320e-03,
         1.0038e-03, 2.7799e-04, 4.5355e-04, 1.9237e-03, 1.6692e-03, 6.3895e-04,
         3.3331e-03, 5.1118e-04, 6.7126e-04, 1.5468e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0507],
        [0.0330],
        [0.0121],
        [0.0101],
        [0.0151],
        [0.0219],
        [0.0171],
        [0.0039],
        [0.0064],
        [0.0024],
        [0.0022],
        [0.0166],
        [0.0550],
        [0.0113],
        [0.0222],
        [0.0016]], device='cuda:0')/tensor([[0.0507, 0.0330, 0.0121, 0.0101, 0.0151, 0.0219, 0.0171, 0.0039, 0.0064,
         0.0024, 0.0022, 0.0166, 0.0550, 0.0113, 0.0222, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.9095e-04, 5.0659e-02],
        [7.7707e-04, 3.3032e-02],
        [2.1961e-03, 1.2092e-02],
        [7.4182e-04, 1.0090e-02],
        [8.9534e-05, 1.5078e-02],
        [1.7320e-03, 2.1942e-02],
        [1.0038e-03, 1.7139e-02],
        [2.7799e-04, 3.8698e-03],
        [4.5355e-04, 6.3743e-03],
        [1.9237e-03, 2.3599e-03],
        [1.6692e-03, 2.2362e-03],
        [6.3895e-04, 1.6590e-02],
        [3.3331e-03, 5.5017e-02],
        [5.1118e-04, 1.1269e-02],
        [6.7126e-04, 2.2233e-02],
        [1.5468e-03, 1.6478e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0017],
        [0.0005],
        [0.0003],
        [0.0034],
        [0.0014],
        [0.0007],
        [0.0009],
        [0.0004],
        [0.0014],
        [0.0036],
        [0.0004],
        [0.0010],
        [0.0011],
        [0.0002],
        [0.0069]], device='cuda:0')/tensor([[0.0007, 0.0017, 0.0005, 0.0003, 0.0034, 0.0014, 0.0007, 0.0009, 0.0004,
         0.0014, 0.0036, 0.0004, 0.0010, 0.0011, 0.0002, 0.0069]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0140],
        [0.0450],
        [0.0128],
        [0.0021],
        [0.0341],
        [0.0452],
        [0.0116],
        [0.0697],
        [0.0079],
        [0.0896],
        [0.0632],
        [0.0036],
        [0.0212],
        [0.0144],
        [0.0045],
        [0.0073]], device='cuda:0')/tensor([[0.0140, 0.0450, 0.0128, 0.0021, 0.0341, 0.0452, 0.0116, 0.0697, 0.0079,
         0.0896, 0.0632, 0.0036, 0.0212, 0.0144, 0.0045, 0.0073]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0140],
        [0.0017, 0.0450],
        [0.0005, 0.0128],
        [0.0003, 0.0021],
        [0.0034, 0.0341],
        [0.0014, 0.0452],
        [0.0007, 0.0116],
        [0.0009, 0.0697],
        [0.0004, 0.0079],
        [0.0014, 0.0896],
        [0.0036, 0.0632],
        [0.0004, 0.0036],
        [0.0010, 0.0212],
        [0.0011, 0.0144],
        [0.0002, 0.0045],
        [0.0069, 0.0073]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0003],
        [0.0011],
        [0.0005],
        [0.0018],
        [0.0012],
        [0.0013],
        [0.0014],
        [0.0022],
        [0.0045],
        [0.0022],
        [0.0014],
        [0.0011],
        [0.0024],
        [0.0005],
        [0.0014]], device='cuda:0')/tensor([[0.0009, 0.0003, 0.0011, 0.0005, 0.0018, 0.0012, 0.0013, 0.0014, 0.0022,
         0.0045, 0.0022, 0.0014, 0.0011, 0.0024, 0.0005, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0027],
        [0.0012],
        [0.0299],
        [0.0006],
        [0.0814],
        [0.0048],
        [0.0325],
        [0.0045],
        [0.0208],
        [0.0627],
        [0.0039],
        [0.0631],
        [0.0179],
        [0.1033],
        [0.0281],
        [0.0148]], device='cuda:0')/tensor([[0.0027, 0.0012, 0.0299, 0.0006, 0.0814, 0.0048, 0.0325, 0.0045, 0.0208,
         0.0627, 0.0039, 0.0631, 0.0179, 0.1033, 0.0281, 0.0148]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0027],
        [0.0003, 0.0012],
        [0.0011, 0.0299],
        [0.0005, 0.0006],
        [0.0018, 0.0814],
        [0.0012, 0.0048],
        [0.0013, 0.0325],
        [0.0014, 0.0045],
        [0.0022, 0.0208],
        [0.0045, 0.0627],
        [0.0022, 0.0039],
        [0.0014, 0.0631],
        [0.0011, 0.0179],
        [0.0024, 0.1033],
        [0.0005, 0.0281],
        [0.0014, 0.0148]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0016],
        [0.0007],
        [0.0017],
        [0.0007],
        [0.0012],
        [0.0011],
        [0.0007],
        [0.0004],
        [0.0005],
        [0.0019],
        [0.0010],
        [0.0011],
        [0.0017],
        [0.0009],
        [0.0024]], device='cuda:0')/tensor([[0.0004, 0.0016, 0.0007, 0.0017, 0.0007, 0.0012, 0.0011, 0.0007, 0.0004,
         0.0005, 0.0019, 0.0010, 0.0011, 0.0017, 0.0009, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0029],
        [0.1466],
        [0.0439],
        [0.0596],
        [0.0412],
        [0.0020],
        [0.0254],
        [0.0003],
        [0.0125],
        [0.0180],
        [0.0575],
        [0.0208],
        [0.0169],
        [0.0659],
        [0.0093],
        [0.0351]], device='cuda:0')/tensor([[0.0029, 0.1466, 0.0439, 0.0596, 0.0412, 0.0020, 0.0254, 0.0003, 0.0125,
         0.0180, 0.0575, 0.0208, 0.0169, 0.0659, 0.0093, 0.0351]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0029],
        [0.0016, 0.1466],
        [0.0007, 0.0439],
        [0.0017, 0.0596],
        [0.0007, 0.0412],
        [0.0012, 0.0020],
        [0.0011, 0.0254],
        [0.0007, 0.0003],
        [0.0004, 0.0125],
        [0.0005, 0.0180],
        [0.0019, 0.0575],
        [0.0010, 0.0208],
        [0.0011, 0.0169],
        [0.0017, 0.0659],
        [0.0009, 0.0093],
        [0.0024, 0.0351]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0025],
        [0.0003],
        [0.0014],
        [0.0016],
        [0.0002],
        [0.0007],
        [0.0012],
        [0.0008],
        [0.0008],
        [0.0006],
        [0.0007],
        [0.0006],
        [0.0021],
        [0.0004],
        [0.0007],
        [0.0016]], device='cuda:0')/tensor([[0.0025, 0.0003, 0.0014, 0.0016, 0.0002, 0.0007, 0.0012, 0.0008, 0.0008,
         0.0006, 0.0007, 0.0006, 0.0021, 0.0004, 0.0007, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0173],
        [0.0121],
        [0.0366],
        [0.0510],
        [0.0014],
        [0.0152],
        [0.0028],
        [0.0111],
        [0.0205],
        [0.0025],
        [0.0009],
        [0.0010],
        [0.0224],
        [0.0007],
        [0.0268],
        [0.0395]], device='cuda:0')/tensor([[0.0173, 0.0121, 0.0366, 0.0510, 0.0014, 0.0152, 0.0028, 0.0111, 0.0205,
         0.0025, 0.0009, 0.0010, 0.0224, 0.0007, 0.0268, 0.0395]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0025, 0.0173],
        [0.0003, 0.0121],
        [0.0014, 0.0366],
        [0.0016, 0.0510],
        [0.0002, 0.0014],
        [0.0007, 0.0152],
        [0.0012, 0.0028],
        [0.0008, 0.0111],
        [0.0008, 0.0205],
        [0.0006, 0.0025],
        [0.0007, 0.0009],
        [0.0006, 0.0010],
        [0.0021, 0.0224],
        [0.0004, 0.0007],
        [0.0007, 0.0268],
        [0.0016, 0.0395]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0012],
        [0.0017],
        [0.0022],
        [0.0004],
        [0.0008],
        [0.0022],
        [0.0013],
        [0.0004],
        [0.0010],
        [0.0030],
        [0.0011],
        [0.0033],
        [0.0006],
        [0.0020],
        [0.0003]], device='cuda:0')/tensor([[0.0017, 0.0012, 0.0017, 0.0022, 0.0004, 0.0008, 0.0022, 0.0013, 0.0004,
         0.0010, 0.0030, 0.0011, 0.0033, 0.0006, 0.0020, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0114],
        [0.0044],
        [0.0248],
        [0.0034],
        [0.0414],
        [0.0051],
        [0.0115],
        [0.0362],
        [0.0368],
        [0.0084],
        [0.0511],
        [0.0167],
        [0.0066],
        [0.0072],
        [0.0216],
        [0.0125]], device='cuda:0')/tensor([[0.0114, 0.0044, 0.0248, 0.0034, 0.0414, 0.0051, 0.0115, 0.0362, 0.0368,
         0.0084, 0.0511, 0.0167, 0.0066, 0.0072, 0.0216, 0.0125]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0114],
        [0.0012, 0.0044],
        [0.0017, 0.0248],
        [0.0022, 0.0034],
        [0.0004, 0.0414],
        [0.0008, 0.0051],
        [0.0022, 0.0115],
        [0.0013, 0.0362],
        [0.0004, 0.0368],
        [0.0010, 0.0084],
        [0.0030, 0.0511],
        [0.0011, 0.0167],
        [0.0033, 0.0066],
        [0.0006, 0.0072],
        [0.0020, 0.0216],
        [0.0003, 0.0125]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0001],
        [0.0011],
        [0.0010],
        [0.0019],
        [0.0015],
        [0.0006],
        [0.0022],
        [0.0006],
        [0.0006],
        [0.0039],
        [0.0027],
        [0.0023],
        [0.0007],
        [0.0024],
        [0.0015]], device='cuda:0')/tensor([[0.0011, 0.0001, 0.0011, 0.0010, 0.0019, 0.0015, 0.0006, 0.0022, 0.0006,
         0.0006, 0.0039, 0.0027, 0.0023, 0.0007, 0.0024, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0366],
        [0.0035],
        [0.0053],
        [0.0056],
        [0.0163],
        [0.0083],
        [0.0102],
        [0.0075],
        [0.0010],
        [0.0445],
        [0.0052],
        [0.0022],
        [0.0034],
        [0.0588],
        [0.0046],
        [0.0168]], device='cuda:0')/tensor([[0.0366, 0.0035, 0.0053, 0.0056, 0.0163, 0.0083, 0.0102, 0.0075, 0.0010,
         0.0445, 0.0052, 0.0022, 0.0034, 0.0588, 0.0046, 0.0168]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0366],
        [0.0001, 0.0035],
        [0.0011, 0.0053],
        [0.0010, 0.0056],
        [0.0019, 0.0163],
        [0.0015, 0.0083],
        [0.0006, 0.0102],
        [0.0022, 0.0075],
        [0.0006, 0.0010],
        [0.0006, 0.0445],
        [0.0039, 0.0052],
        [0.0027, 0.0022],
        [0.0023, 0.0034],
        [0.0007, 0.0588],
        [0.0024, 0.0046],
        [0.0015, 0.0168]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0020],
        [0.0015],
        [0.0025],
        [0.0009],
        [0.0010],
        [0.0036],
        [0.0006],
        [0.0012],
        [0.0007],
        [0.0006],
        [0.0020],
        [0.0004],
        [0.0004],
        [0.0028],
        [0.0010],
        [0.0023]], device='cuda:0')/tensor([[0.0020, 0.0015, 0.0025, 0.0009, 0.0010, 0.0036, 0.0006, 0.0012, 0.0007,
         0.0006, 0.0020, 0.0004, 0.0004, 0.0028, 0.0010, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0252],
        [0.0187],
        [0.1427],
        [0.0156],
        [0.0054],
        [0.0172],
        [0.0033],
        [0.0031],
        [0.0060],
        [0.0012],
        [0.0049],
        [0.0043],
        [0.0017],
        [0.0582],
        [0.0051],
        [0.0257]], device='cuda:0')/tensor([[0.0252, 0.0187, 0.1427, 0.0156, 0.0054, 0.0172, 0.0033, 0.0031, 0.0060,
         0.0012, 0.0049, 0.0043, 0.0017, 0.0582, 0.0051, 0.0257]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0020, 0.0252],
        [0.0015, 0.0187],
        [0.0025, 0.1427],
        [0.0009, 0.0156],
        [0.0010, 0.0054],
        [0.0036, 0.0172],
        [0.0006, 0.0033],
        [0.0012, 0.0031],
        [0.0007, 0.0060],
        [0.0006, 0.0012],
        [0.0020, 0.0049],
        [0.0004, 0.0043],
        [0.0004, 0.0017],
        [0.0028, 0.0582],
        [0.0010, 0.0051],
        [0.0023, 0.0257]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0014],
        [0.0019],
        [0.0010],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0005, 0.0014, 0.0019, 0.0010, 0.0006, 0.0002, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0009],
        [0.0736],
        [0.0381],
        [0.0105],
        [0.0283],
        [0.0074],
        [0.0287],
        [0.0044]], device='cuda:0')/tensor([[0.0009, 0.0736, 0.0381, 0.0105, 0.0283, 0.0074, 0.0287, 0.0044]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0009],
        [0.0014, 0.0736],
        [0.0019, 0.0381],
        [0.0010, 0.0105],
        [0.0006, 0.0283],
        [0.0002, 0.0074],
        [0.0003, 0.0287],
        [0.0004, 0.0044]], device='cuda:0')
acc:  0.53
Time taken to execute the de SA task with prompt type auxiliary, variation 3 and batchsize 16: 0:03:17.015965
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA auxiliary 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 337.48it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0002],
        [0.0007],
        [0.0009],
        [0.0005],
        [0.0014],
        [0.0004],
        [0.0005],
        [0.0001],
        [0.0009],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0009],
        [0.0005],
        [0.0011]], device='cuda:0')/tensor([[0.0004, 0.0002, 0.0007, 0.0009, 0.0005, 0.0014, 0.0004, 0.0005, 0.0001,
         0.0009, 0.0006, 0.0006, 0.0002, 0.0009, 0.0005, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0004],
        [0.0018],
        [0.0023],
        [0.0005],
        [0.0515],
        [0.0335],
        [0.0036],
        [0.0025],
        [0.0048],
        [0.0156],
        [0.0012],
        [0.0025],
        [0.0602],
        [0.0051],
        [0.0017]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0018, 0.0023, 0.0005, 0.0515, 0.0335, 0.0036, 0.0025,
         0.0048, 0.0156, 0.0012, 0.0025, 0.0602, 0.0051, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0006],
        [0.0002, 0.0004],
        [0.0007, 0.0018],
        [0.0009, 0.0023],
        [0.0005, 0.0005],
        [0.0014, 0.0515],
        [0.0004, 0.0335],
        [0.0005, 0.0036],
        [0.0001, 0.0025],
        [0.0009, 0.0048],
        [0.0006, 0.0156],
        [0.0006, 0.0012],
        [0.0002, 0.0025],
        [0.0009, 0.0602],
        [0.0005, 0.0051],
        [0.0011, 0.0017]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0034],
        [0.0009],
        [0.0005],
        [0.0008],
        [0.0011],
        [0.0007],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0001],
        [0.0008],
        [0.0005],
        [0.0026],
        [0.0017],
        [0.0003]], device='cuda:0')/tensor([[0.0009, 0.0034, 0.0009, 0.0005, 0.0008, 0.0011, 0.0007, 0.0002, 0.0002,
         0.0003, 0.0001, 0.0008, 0.0005, 0.0026, 0.0017, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0101],
        [0.0725],
        [0.0808],
        [0.0010],
        [0.0186],
        [0.0017],
        [0.0245],
        [0.0057],
        [0.0028],
        [0.0128],
        [0.0308],
        [0.0277],
        [0.0052],
        [0.0222],
        [0.0030]], device='cuda:0')/tensor([[0.0016, 0.0101, 0.0725, 0.0808, 0.0010, 0.0186, 0.0017, 0.0245, 0.0057,
         0.0028, 0.0128, 0.0308, 0.0277, 0.0052, 0.0222, 0.0030]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0016],
        [0.0034, 0.0101],
        [0.0009, 0.0725],
        [0.0005, 0.0808],
        [0.0008, 0.0010],
        [0.0011, 0.0186],
        [0.0007, 0.0017],
        [0.0002, 0.0245],
        [0.0002, 0.0057],
        [0.0003, 0.0028],
        [0.0001, 0.0128],
        [0.0008, 0.0308],
        [0.0005, 0.0277],
        [0.0026, 0.0052],
        [0.0017, 0.0222],
        [0.0003, 0.0030]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0010],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0001],
        [0.0001],
        [0.0012],
        [0.0010],
        [0.0002]], device='cuda:0')/tensor([[0.0006, 0.0010, 0.0002, 0.0002, 0.0006, 0.0003, 0.0002, 0.0002, 0.0003,
         0.0005, 0.0002, 0.0001, 0.0001, 0.0012, 0.0010, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1451e-03],
        [1.5136e-02],
        [6.3098e-03],
        [5.8365e-05],
        [6.1748e-03],
        [2.4515e-03],
        [3.7469e-03],
        [2.8011e-04],
        [2.9126e-03],
        [1.4639e-02],
        [2.1420e-04],
        [2.6037e-04],
        [8.7055e-05],
        [5.9305e-03],
        [1.3794e-03],
        [3.2916e-04]], device='cuda:0')/tensor([[1.1451e-03, 1.5136e-02, 6.3098e-03, 5.8365e-05, 6.1748e-03, 2.4515e-03,
         3.7469e-03, 2.8011e-04, 2.9126e-03, 1.4639e-02, 2.1420e-04, 2.6037e-04,
         8.7055e-05, 5.9305e-03, 1.3794e-03, 3.2916e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8691e-04, 1.1451e-03],
        [1.0111e-03, 1.5136e-02],
        [2.1737e-04, 6.3098e-03],
        [1.7695e-04, 5.8365e-05],
        [6.4273e-04, 6.1748e-03],
        [2.7170e-04, 2.4515e-03],
        [2.4338e-04, 3.7469e-03],
        [1.5242e-04, 2.8011e-04],
        [3.0689e-04, 2.9126e-03],
        [4.5955e-04, 1.4639e-02],
        [2.1269e-04, 2.1420e-04],
        [1.3161e-04, 2.6037e-04],
        [1.4736e-04, 8.7055e-05],
        [1.1668e-03, 5.9305e-03],
        [9.5209e-04, 1.3794e-03],
        [2.0309e-04, 3.2916e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0010],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0020],
        [0.0032],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0008],
        [0.0018]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0010, 0.0002, 0.0002, 0.0003, 0.0002, 0.0004, 0.0020,
         0.0032, 0.0004, 0.0002, 0.0004, 0.0002, 0.0008, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0170],
        [0.0098],
        [0.0004],
        [0.0081],
        [0.0094],
        [0.0096],
        [0.0007],
        [0.0066],
        [0.0337],
        [0.0397],
        [0.0132],
        [0.0003],
        [0.0032],
        [0.0012],
        [0.0401],
        [0.0031]], device='cuda:0')/tensor([[0.0170, 0.0098, 0.0004, 0.0081, 0.0094, 0.0096, 0.0007, 0.0066, 0.0337,
         0.0397, 0.0132, 0.0003, 0.0032, 0.0012, 0.0401, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0170],
        [0.0007, 0.0098],
        [0.0010, 0.0004],
        [0.0002, 0.0081],
        [0.0002, 0.0094],
        [0.0003, 0.0096],
        [0.0002, 0.0007],
        [0.0004, 0.0066],
        [0.0020, 0.0337],
        [0.0032, 0.0397],
        [0.0004, 0.0132],
        [0.0002, 0.0003],
        [0.0004, 0.0032],
        [0.0002, 0.0012],
        [0.0008, 0.0401],
        [0.0018, 0.0031]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.3979e-04],
        [7.2153e-04],
        [1.1506e-03],
        [2.6563e-04],
        [1.0269e-03],
        [2.8071e-04],
        [6.2157e-04],
        [4.4955e-04],
        [1.1336e-03],
        [3.3460e-03],
        [7.5898e-05],
        [2.7755e-04],
        [4.6820e-04],
        [1.6149e-04],
        [7.8092e-05],
        [5.8750e-04]], device='cuda:0')/tensor([[4.3979e-04, 7.2153e-04, 1.1506e-03, 2.6563e-04, 1.0269e-03, 2.8071e-04,
         6.2157e-04, 4.4955e-04, 1.1336e-03, 3.3460e-03, 7.5898e-05, 2.7755e-04,
         4.6820e-04, 1.6149e-04, 7.8092e-05, 5.8750e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0030],
        [0.0023],
        [0.0294],
        [0.0006],
        [0.0029],
        [0.0002],
        [0.0002],
        [0.0197],
        [0.0433],
        [0.0057],
        [0.0060],
        [0.0013],
        [0.0255],
        [0.0015],
        [0.0030],
        [0.0029]], device='cuda:0')/tensor([[0.0030, 0.0023, 0.0294, 0.0006, 0.0029, 0.0002, 0.0002, 0.0197, 0.0433,
         0.0057, 0.0060, 0.0013, 0.0255, 0.0015, 0.0030, 0.0029]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.3979e-04, 2.9806e-03],
        [7.2153e-04, 2.3036e-03],
        [1.1506e-03, 2.9392e-02],
        [2.6563e-04, 6.0297e-04],
        [1.0269e-03, 2.8575e-03],
        [2.8071e-04, 1.9598e-04],
        [6.2157e-04, 1.7442e-04],
        [4.4955e-04, 1.9688e-02],
        [1.1336e-03, 4.3298e-02],
        [3.3460e-03, 5.7091e-03],
        [7.5898e-05, 6.0190e-03],
        [2.7755e-04, 1.2739e-03],
        [4.6820e-04, 2.5507e-02],
        [1.6149e-04, 1.4628e-03],
        [7.8092e-05, 2.9606e-03],
        [5.8750e-04, 2.8502e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.0479e-04],
        [9.0526e-05],
        [3.5691e-04],
        [9.4516e-04],
        [2.8601e-04],
        [9.8127e-04],
        [5.4280e-04],
        [5.5539e-04],
        [1.1173e-03],
        [5.8573e-04],
        [3.5545e-04],
        [4.1855e-04],
        [7.5950e-04],
        [1.5310e-03],
        [7.4511e-04],
        [5.5436e-04]], device='cuda:0')/tensor([[4.0479e-04, 9.0526e-05, 3.5691e-04, 9.4516e-04, 2.8601e-04, 9.8127e-04,
         5.4280e-04, 5.5539e-04, 1.1173e-03, 5.8573e-04, 3.5545e-04, 4.1855e-04,
         7.5950e-04, 1.5310e-03, 7.4511e-04, 5.5436e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0073],
        [0.0417],
        [0.0317],
        [0.0006],
        [0.0471],
        [0.0059],
        [0.0017],
        [0.0014],
        [0.0178],
        [0.0089],
        [0.0047],
        [0.0014],
        [0.0046],
        [0.0949],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0073, 0.0417, 0.0317, 0.0006, 0.0471, 0.0059, 0.0017, 0.0014,
         0.0178, 0.0089, 0.0047, 0.0014, 0.0046, 0.0949, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.0479e-04, 4.0547e-04],
        [9.0526e-05, 7.2838e-03],
        [3.5691e-04, 4.1748e-02],
        [9.4516e-04, 3.1747e-02],
        [2.8601e-04, 6.2268e-04],
        [9.8127e-04, 4.7059e-02],
        [5.4280e-04, 5.8537e-03],
        [5.5539e-04, 1.6569e-03],
        [1.1173e-03, 1.3578e-03],
        [5.8573e-04, 1.7789e-02],
        [3.5545e-04, 8.9224e-03],
        [4.1855e-04, 4.6945e-03],
        [7.5950e-04, 1.4047e-03],
        [1.5310e-03, 4.5949e-03],
        [7.4511e-04, 9.4862e-02],
        [5.5436e-04, 3.4987e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0007],
        [0.0005],
        [0.0015],
        [0.0004],
        [0.0006],
        [0.0004],
        [0.0002],
        [0.0008],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0024]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0007, 0.0005, 0.0015, 0.0004, 0.0006, 0.0004, 0.0002,
         0.0008, 0.0005, 0.0005, 0.0002, 0.0003, 0.0002, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4023e-05],
        [6.7021e-02],
        [2.3353e-03],
        [2.0920e-02],
        [1.4554e-02],
        [3.0986e-04],
        [2.9028e-03],
        [3.3545e-03],
        [2.0819e-02],
        [9.8064e-04],
        [3.6396e-02],
        [1.2768e-03],
        [2.4996e-03],
        [1.1746e-02],
        [2.1458e-03],
        [2.6356e-03]], device='cuda:0')/tensor([[7.4023e-05, 6.7021e-02, 2.3353e-03, 2.0920e-02, 1.4554e-02, 3.0986e-04,
         2.9028e-03, 3.3545e-03, 2.0819e-02, 9.8064e-04, 3.6396e-02, 1.2768e-03,
         2.4996e-03, 1.1746e-02, 2.1458e-03, 2.6356e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9014e-04, 7.4023e-05],
        [6.9774e-04, 6.7021e-02],
        [6.8314e-04, 2.3353e-03],
        [5.0629e-04, 2.0920e-02],
        [1.4857e-03, 1.4554e-02],
        [3.5726e-04, 3.0986e-04],
        [6.4524e-04, 2.9028e-03],
        [3.7001e-04, 3.3545e-03],
        [2.4220e-04, 2.0819e-02],
        [8.2170e-04, 9.8064e-04],
        [4.6142e-04, 3.6396e-02],
        [4.9532e-04, 1.2768e-03],
        [2.0156e-04, 2.4996e-03],
        [3.4996e-04, 1.1746e-02],
        [1.7632e-04, 2.1458e-03],
        [2.4476e-03, 2.6356e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7983e-03],
        [2.1830e-04],
        [1.2539e-03],
        [2.0749e-04],
        [1.3237e-03],
        [1.1352e-03],
        [1.5166e-03],
        [4.1731e-04],
        [4.4420e-04],
        [8.1523e-04],
        [1.5611e-03],
        [1.0071e-05],
        [1.6886e-04],
        [3.7542e-04],
        [1.1116e-04],
        [8.7923e-04]], device='cuda:0')/tensor([[1.7983e-03, 2.1830e-04, 1.2539e-03, 2.0749e-04, 1.3237e-03, 1.1352e-03,
         1.5166e-03, 4.1731e-04, 4.4420e-04, 8.1523e-04, 1.5611e-03, 1.0071e-05,
         1.6886e-04, 3.7542e-04, 1.1116e-04, 8.7923e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8162e-02],
        [1.5692e-03],
        [1.2553e-01],
        [1.0740e-02],
        [2.4779e-03],
        [7.5319e-04],
        [9.6300e-03],
        [3.4459e-03],
        [1.5712e-02],
        [4.5391e-02],
        [4.6198e-03],
        [8.1250e-05],
        [8.9199e-03],
        [9.7316e-04],
        [1.2313e-04],
        [1.5445e-02]], device='cuda:0')/tensor([[1.8162e-02, 1.5692e-03, 1.2553e-01, 1.0740e-02, 2.4779e-03, 7.5319e-04,
         9.6300e-03, 3.4459e-03, 1.5712e-02, 4.5391e-02, 4.6198e-03, 8.1250e-05,
         8.9199e-03, 9.7316e-04, 1.2313e-04, 1.5445e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7983e-03, 1.8162e-02],
        [2.1830e-04, 1.5692e-03],
        [1.2539e-03, 1.2553e-01],
        [2.0749e-04, 1.0740e-02],
        [1.3237e-03, 2.4779e-03],
        [1.1352e-03, 7.5319e-04],
        [1.5166e-03, 9.6300e-03],
        [4.1731e-04, 3.4459e-03],
        [4.4420e-04, 1.5712e-02],
        [8.1523e-04, 4.5391e-02],
        [1.5611e-03, 4.6198e-03],
        [1.0071e-05, 8.1250e-05],
        [1.6886e-04, 8.9199e-03],
        [3.7542e-04, 9.7316e-04],
        [1.1116e-04, 1.2313e-04],
        [8.7923e-04, 1.5445e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0006],
        [0.0014],
        [0.0015],
        [0.0004],
        [0.0005],
        [0.0008],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0015],
        [0.0003],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0001, 0.0006, 0.0014, 0.0015, 0.0004, 0.0005, 0.0008, 0.0003, 0.0003,
         0.0005, 0.0015, 0.0003, 0.0006, 0.0003, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0212],
        [0.0055],
        [0.0299],
        [0.0036],
        [0.0133],
        [0.0062],
        [0.0003],
        [0.0050],
        [0.0290],
        [0.0018],
        [0.0440],
        [0.0002],
        [0.0026],
        [0.0119],
        [0.0228],
        [0.0013]], device='cuda:0')/tensor([[0.0212, 0.0055, 0.0299, 0.0036, 0.0133, 0.0062, 0.0003, 0.0050, 0.0290,
         0.0018, 0.0440, 0.0002, 0.0026, 0.0119, 0.0228, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0212],
        [0.0006, 0.0055],
        [0.0014, 0.0299],
        [0.0015, 0.0036],
        [0.0004, 0.0133],
        [0.0005, 0.0062],
        [0.0008, 0.0003],
        [0.0003, 0.0050],
        [0.0003, 0.0290],
        [0.0005, 0.0018],
        [0.0015, 0.0440],
        [0.0003, 0.0002],
        [0.0006, 0.0026],
        [0.0003, 0.0119],
        [0.0003, 0.0228],
        [0.0005, 0.0013]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.8355e-04],
        [3.7066e-04],
        [2.3936e-04],
        [4.4757e-04],
        [2.8949e-04],
        [5.5278e-04],
        [4.4414e-04],
        [7.2337e-04],
        [3.9360e-04],
        [9.4687e-05],
        [4.2674e-04],
        [1.9719e-04],
        [1.5473e-03],
        [5.6810e-04],
        [1.6810e-03],
        [1.0548e-03]], device='cuda:0')/tensor([[9.8355e-04, 3.7066e-04, 2.3936e-04, 4.4757e-04, 2.8949e-04, 5.5278e-04,
         4.4414e-04, 7.2337e-04, 3.9360e-04, 9.4687e-05, 4.2674e-04, 1.9719e-04,
         1.5473e-03, 5.6810e-04, 1.6810e-03, 1.0548e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0236],
        [0.0088],
        [0.0073],
        [0.0292],
        [0.0063],
        [0.0298],
        [0.0050],
        [0.0077],
        [0.0017],
        [0.0194],
        [0.0361],
        [0.0083],
        [0.0012],
        [0.0822],
        [0.0185],
        [0.0436]], device='cuda:0')/tensor([[0.0236, 0.0088, 0.0073, 0.0292, 0.0063, 0.0298, 0.0050, 0.0077, 0.0017,
         0.0194, 0.0361, 0.0083, 0.0012, 0.0822, 0.0185, 0.0436]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.8355e-04, 2.3613e-02],
        [3.7066e-04, 8.7790e-03],
        [2.3936e-04, 7.3283e-03],
        [4.4757e-04, 2.9167e-02],
        [2.8949e-04, 6.2645e-03],
        [5.5278e-04, 2.9779e-02],
        [4.4414e-04, 5.0046e-03],
        [7.2337e-04, 7.7380e-03],
        [3.9360e-04, 1.6747e-03],
        [9.4687e-05, 1.9432e-02],
        [4.2674e-04, 3.6082e-02],
        [1.9719e-04, 8.3174e-03],
        [1.5473e-03, 1.2150e-03],
        [5.6810e-04, 8.2239e-02],
        [1.6810e-03, 1.8524e-02],
        [1.0548e-03, 4.3590e-02]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0006],
        [0.0005],
        [0.0012],
        [0.0003],
        [0.0004],
        [0.0028],
        [0.0004],
        [0.0009],
        [0.0048],
        [0.0006],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0009, 0.0006, 0.0005, 0.0012, 0.0003, 0.0004, 0.0028, 0.0004, 0.0009,
         0.0048, 0.0006, 0.0002, 0.0004, 0.0003, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0116],
        [0.0390],
        [0.0164],
        [0.0007],
        [0.0193],
        [0.0025],
        [0.0700],
        [0.0251],
        [0.0161],
        [0.0387],
        [0.0093],
        [0.0009],
        [0.0010],
        [0.0090],
        [0.0105],
        [0.0003]], device='cuda:0')/tensor([[0.0116, 0.0390, 0.0164, 0.0007, 0.0193, 0.0025, 0.0700, 0.0251, 0.0161,
         0.0387, 0.0093, 0.0009, 0.0010, 0.0090, 0.0105, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0116],
        [0.0006, 0.0390],
        [0.0005, 0.0164],
        [0.0012, 0.0007],
        [0.0003, 0.0193],
        [0.0004, 0.0025],
        [0.0028, 0.0700],
        [0.0004, 0.0251],
        [0.0009, 0.0161],
        [0.0048, 0.0387],
        [0.0006, 0.0093],
        [0.0002, 0.0009],
        [0.0004, 0.0010],
        [0.0003, 0.0090],
        [0.0003, 0.0105],
        [0.0002, 0.0003]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0010],
        [0.0015],
        [0.0004],
        [0.0005],
        [0.0012],
        [0.0004],
        [0.0015],
        [0.0007],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0012, 0.0003, 0.0002, 0.0006, 0.0002, 0.0003, 0.0010, 0.0015, 0.0004,
         0.0005, 0.0012, 0.0004, 0.0015, 0.0007, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0322],
        [0.0019],
        [0.0161],
        [0.0036],
        [0.0057],
        [0.0043],
        [0.0061],
        [0.0579],
        [0.0118],
        [0.0056],
        [0.0020],
        [0.0067],
        [0.0074],
        [0.0008],
        [0.0048],
        [0.0142]], device='cuda:0')/tensor([[0.0322, 0.0019, 0.0161, 0.0036, 0.0057, 0.0043, 0.0061, 0.0579, 0.0118,
         0.0056, 0.0020, 0.0067, 0.0074, 0.0008, 0.0048, 0.0142]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0322],
        [0.0003, 0.0019],
        [0.0002, 0.0161],
        [0.0006, 0.0036],
        [0.0002, 0.0057],
        [0.0003, 0.0043],
        [0.0010, 0.0061],
        [0.0015, 0.0579],
        [0.0004, 0.0118],
        [0.0005, 0.0056],
        [0.0012, 0.0020],
        [0.0004, 0.0067],
        [0.0015, 0.0074],
        [0.0007, 0.0008],
        [0.0003, 0.0048],
        [0.0002, 0.0142]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0012],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0009],
        [0.0009],
        [0.0008]], device='cuda:0')/tensor([[0.0012, 0.0007, 0.0002, 0.0004, 0.0004, 0.0009, 0.0009, 0.0008]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0416],
        [0.0319],
        [0.0120],
        [0.0139],
        [0.0003],
        [0.0281],
        [0.0096],
        [0.0269]], device='cuda:0')/tensor([[0.0416, 0.0319, 0.0120, 0.0139, 0.0003, 0.0281, 0.0096, 0.0269]],
       device='cuda:0'), torch.Size([1, 8])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0012, 0.0416],
        [0.0007, 0.0319],
        [0.0002, 0.0120],
        [0.0004, 0.0139],
        [0.0004, 0.0003],
        [0.0009, 0.0281],
        [0.0009, 0.0096],
        [0.0008, 0.0269]], device='cuda:0')
acc:  0.575
Time taken to execute the de SA task with prompt type auxiliary, variation 4 and batchsize 16: 0:03:15.083144
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA auxiliary 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 341.43it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0018],
        [0.0009],
        [0.0008],
        [0.0007],
        [0.0006],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0005],
        [0.0010],
        [0.0002],
        [0.0004],
        [0.0052],
        [0.0032],
        [0.0018]], device='cuda:0')/tensor([[0.0009, 0.0018, 0.0009, 0.0008, 0.0007, 0.0006, 0.0004, 0.0002, 0.0007,
         0.0005, 0.0010, 0.0002, 0.0004, 0.0052, 0.0032, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0151],
        [0.0049],
        [0.0225],
        [0.0007],
        [0.1082],
        [0.0261],
        [0.0184],
        [0.0141],
        [0.0052],
        [0.0125],
        [0.0112],
        [0.0813],
        [0.0222],
        [0.0749],
        [0.0018],
        [0.0017]], device='cuda:0')/tensor([[0.0151, 0.0049, 0.0225, 0.0007, 0.1082, 0.0261, 0.0184, 0.0141, 0.0052,
         0.0125, 0.0112, 0.0813, 0.0222, 0.0749, 0.0018, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0151],
        [0.0018, 0.0049],
        [0.0009, 0.0225],
        [0.0008, 0.0007],
        [0.0007, 0.1082],
        [0.0006, 0.0261],
        [0.0004, 0.0184],
        [0.0002, 0.0141],
        [0.0007, 0.0052],
        [0.0005, 0.0125],
        [0.0010, 0.0112],
        [0.0002, 0.0813],
        [0.0004, 0.0222],
        [0.0052, 0.0749],
        [0.0032, 0.0018],
        [0.0018, 0.0017]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0036],
        [0.0002],
        [0.0003],
        [0.0014],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0017],
        [0.0020],
        [0.0003],
        [0.0013],
        [0.0019],
        [0.0002],
        [0.0008],
        [0.0013]], device='cuda:0')/tensor([[0.0036, 0.0002, 0.0003, 0.0014, 0.0002, 0.0005, 0.0003, 0.0004, 0.0017,
         0.0020, 0.0003, 0.0013, 0.0019, 0.0002, 0.0008, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0031],
        [0.0118],
        [0.0406],
        [0.0142],
        [0.0003],
        [0.0405],
        [0.0105],
        [0.0118],
        [0.0796],
        [0.0010],
        [0.0002],
        [0.0061],
        [0.0022],
        [0.0003],
        [0.0043],
        [0.0020]], device='cuda:0')/tensor([[0.0031, 0.0118, 0.0406, 0.0142, 0.0003, 0.0405, 0.0105, 0.0118, 0.0796,
         0.0010, 0.0002, 0.0061, 0.0022, 0.0003, 0.0043, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0036, 0.0031],
        [0.0002, 0.0118],
        [0.0003, 0.0406],
        [0.0014, 0.0142],
        [0.0002, 0.0003],
        [0.0005, 0.0405],
        [0.0003, 0.0105],
        [0.0004, 0.0118],
        [0.0017, 0.0796],
        [0.0020, 0.0010],
        [0.0003, 0.0002],
        [0.0013, 0.0061],
        [0.0019, 0.0022],
        [0.0002, 0.0003],
        [0.0008, 0.0043],
        [0.0013, 0.0020]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0005],
        [0.0007],
        [0.0002],
        [0.0011],
        [0.0033],
        [0.0008],
        [0.0004],
        [0.0020],
        [0.0005],
        [0.0015],
        [0.0018],
        [0.0011],
        [0.0038],
        [0.0014],
        [0.0003]], device='cuda:0')/tensor([[0.0016, 0.0005, 0.0007, 0.0002, 0.0011, 0.0033, 0.0008, 0.0004, 0.0020,
         0.0005, 0.0015, 0.0018, 0.0011, 0.0038, 0.0014, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1073],
        [0.0246],
        [0.0014],
        [0.0425],
        [0.0005],
        [0.0609],
        [0.0024],
        [0.0032],
        [0.0181],
        [0.0004],
        [0.0013],
        [0.0400],
        [0.0004],
        [0.0474],
        [0.0024],
        [0.0170]], device='cuda:0')/tensor([[0.1073, 0.0246, 0.0014, 0.0425, 0.0005, 0.0609, 0.0024, 0.0032, 0.0181,
         0.0004, 0.0013, 0.0400, 0.0004, 0.0474, 0.0024, 0.0170]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.1073],
        [0.0005, 0.0246],
        [0.0007, 0.0014],
        [0.0002, 0.0425],
        [0.0011, 0.0005],
        [0.0033, 0.0609],
        [0.0008, 0.0024],
        [0.0004, 0.0032],
        [0.0020, 0.0181],
        [0.0005, 0.0004],
        [0.0015, 0.0013],
        [0.0018, 0.0400],
        [0.0011, 0.0004],
        [0.0038, 0.0474],
        [0.0014, 0.0024],
        [0.0003, 0.0170]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0010],
        [0.0011],
        [0.0019],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0014],
        [0.0002],
        [0.0021],
        [0.0004],
        [0.0008],
        [0.0004],
        [0.0009],
        [0.0006],
        [0.0009]], device='cuda:0')/tensor([[0.0016, 0.0010, 0.0011, 0.0019, 0.0002, 0.0002, 0.0003, 0.0014, 0.0002,
         0.0021, 0.0004, 0.0008, 0.0004, 0.0009, 0.0006, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0060e-03],
        [9.4207e-03],
        [5.8683e-02],
        [1.2301e-02],
        [2.7694e-02],
        [1.5801e-04],
        [5.4249e-02],
        [1.2270e-02],
        [7.0039e-05],
        [8.2027e-02],
        [3.5697e-04],
        [3.7396e-04],
        [3.0068e-04],
        [1.6147e-02],
        [2.3550e-02],
        [1.4760e-02]], device='cuda:0')/tensor([[1.0060e-03, 9.4207e-03, 5.8683e-02, 1.2301e-02, 2.7694e-02, 1.5801e-04,
         5.4249e-02, 1.2270e-02, 7.0039e-05, 8.2027e-02, 3.5697e-04, 3.7396e-04,
         3.0068e-04, 1.6147e-02, 2.3550e-02, 1.4760e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6049e-03, 1.0060e-03],
        [9.7995e-04, 9.4207e-03],
        [1.1424e-03, 5.8683e-02],
        [1.9378e-03, 1.2301e-02],
        [2.1826e-04, 2.7694e-02],
        [2.0365e-04, 1.5801e-04],
        [2.7018e-04, 5.4249e-02],
        [1.3815e-03, 1.2270e-02],
        [1.9654e-04, 7.0039e-05],
        [2.0795e-03, 8.2027e-02],
        [4.0004e-04, 3.5697e-04],
        [8.1652e-04, 3.7396e-04],
        [3.7456e-04, 3.0068e-04],
        [9.3503e-04, 1.6147e-02],
        [5.7122e-04, 2.3550e-02],
        [9.0337e-04, 1.4760e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0010],
        [0.0011],
        [0.0009],
        [0.0009],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0008],
        [0.0021],
        [0.0004],
        [0.0029]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0011, 0.0009, 0.0009, 0.0005, 0.0004, 0.0002, 0.0007,
         0.0004, 0.0006, 0.0007, 0.0008, 0.0021, 0.0004, 0.0029]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0463],
        [0.0360],
        [0.0397],
        [0.0004],
        [0.0034],
        [0.0105],
        [0.0334],
        [0.0098],
        [0.0570],
        [0.0217],
        [0.0677],
        [0.0049],
        [0.1242],
        [0.0468],
        [0.0318],
        [0.0055]], device='cuda:0')/tensor([[0.0463, 0.0360, 0.0397, 0.0004, 0.0034, 0.0105, 0.0334, 0.0098, 0.0570,
         0.0217, 0.0677, 0.0049, 0.1242, 0.0468, 0.0318, 0.0055]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0463],
        [0.0010, 0.0360],
        [0.0011, 0.0397],
        [0.0009, 0.0004],
        [0.0009, 0.0034],
        [0.0005, 0.0105],
        [0.0004, 0.0334],
        [0.0002, 0.0098],
        [0.0007, 0.0570],
        [0.0004, 0.0217],
        [0.0006, 0.0677],
        [0.0007, 0.0049],
        [0.0008, 0.1242],
        [0.0021, 0.0468],
        [0.0004, 0.0318],
        [0.0029, 0.0055]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0024],
        [0.0004],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0011],
        [0.0004],
        [0.0006],
        [0.0014],
        [0.0009],
        [0.0003],
        [0.0050],
        [0.0017]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0024, 0.0004, 0.0011, 0.0005, 0.0003, 0.0002, 0.0011,
         0.0004, 0.0006, 0.0014, 0.0009, 0.0003, 0.0050, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0239],
        [0.0027],
        [0.0050],
        [0.0794],
        [0.1216],
        [0.0167],
        [0.0703],
        [0.0297],
        [0.1338],
        [0.0029],
        [0.0002],
        [0.0011],
        [0.0078],
        [0.0036],
        [0.0073],
        [0.0010]], device='cuda:0')/tensor([[0.0239, 0.0027, 0.0050, 0.0794, 0.1216, 0.0167, 0.0703, 0.0297, 0.1338,
         0.0029, 0.0002, 0.0011, 0.0078, 0.0036, 0.0073, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0239],
        [0.0006, 0.0027],
        [0.0024, 0.0050],
        [0.0004, 0.0794],
        [0.0011, 0.1216],
        [0.0005, 0.0167],
        [0.0003, 0.0703],
        [0.0002, 0.0297],
        [0.0011, 0.1338],
        [0.0004, 0.0029],
        [0.0006, 0.0002],
        [0.0014, 0.0011],
        [0.0009, 0.0078],
        [0.0003, 0.0036],
        [0.0050, 0.0073],
        [0.0017, 0.0010]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0014],
        [0.0040],
        [0.0008],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0012],
        [0.0010],
        [0.0006],
        [0.0005],
        [0.0011],
        [0.0006],
        [0.0019],
        [0.0008],
        [0.0009]], device='cuda:0')/tensor([[0.0006, 0.0014, 0.0040, 0.0008, 0.0007, 0.0007, 0.0003, 0.0012, 0.0010,
         0.0006, 0.0005, 0.0011, 0.0006, 0.0019, 0.0008, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2965e-02],
        [4.4437e-03],
        [6.7777e-03],
        [3.0304e-03],
        [1.4819e-01],
        [1.8101e-03],
        [7.0236e-05],
        [1.2033e-03],
        [6.5329e-02],
        [4.1041e-02],
        [1.7578e-04],
        [3.8747e-02],
        [5.3487e-02],
        [2.2534e-02],
        [1.4876e-02],
        [1.5954e-03]], device='cuda:0')/tensor([[1.2965e-02, 4.4437e-03, 6.7777e-03, 3.0304e-03, 1.4819e-01, 1.8101e-03,
         7.0236e-05, 1.2033e-03, 6.5329e-02, 4.1041e-02, 1.7578e-04, 3.8747e-02,
         5.3487e-02, 2.2534e-02, 1.4876e-02, 1.5954e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.7793e-04, 1.2965e-02],
        [1.4426e-03, 4.4437e-03],
        [3.9941e-03, 6.7777e-03],
        [8.4735e-04, 3.0304e-03],
        [7.4863e-04, 1.4819e-01],
        [7.2582e-04, 1.8101e-03],
        [2.5768e-04, 7.0236e-05],
        [1.1924e-03, 1.2033e-03],
        [1.0033e-03, 6.5329e-02],
        [6.4373e-04, 4.1041e-02],
        [4.9717e-04, 1.7578e-04],
        [1.1416e-03, 3.8747e-02],
        [5.8079e-04, 5.3487e-02],
        [1.8854e-03, 2.2534e-02],
        [8.2236e-04, 1.4876e-02],
        [9.1661e-04, 1.5954e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0011],
        [0.0022],
        [0.0009],
        [0.0008],
        [0.0003],
        [0.0008],
        [0.0026],
        [0.0016],
        [0.0008],
        [0.0023],
        [0.0010],
        [0.0007],
        [0.0025],
        [0.0013],
        [0.0009]], device='cuda:0')/tensor([[0.0008, 0.0011, 0.0022, 0.0009, 0.0008, 0.0003, 0.0008, 0.0026, 0.0016,
         0.0008, 0.0023, 0.0010, 0.0007, 0.0025, 0.0013, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0474],
        [0.0272],
        [0.0030],
        [0.0013],
        [0.0014],
        [0.0500],
        [0.0067],
        [0.0655],
        [0.0020],
        [0.0658],
        [0.0531],
        [0.0741],
        [0.0250],
        [0.0438],
        [0.0013]], device='cuda:0')/tensor([[0.0008, 0.0474, 0.0272, 0.0030, 0.0013, 0.0014, 0.0500, 0.0067, 0.0655,
         0.0020, 0.0658, 0.0531, 0.0741, 0.0250, 0.0438, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0008],
        [0.0011, 0.0474],
        [0.0022, 0.0272],
        [0.0009, 0.0030],
        [0.0008, 0.0013],
        [0.0003, 0.0014],
        [0.0008, 0.0500],
        [0.0026, 0.0067],
        [0.0016, 0.0655],
        [0.0008, 0.0020],
        [0.0023, 0.0658],
        [0.0010, 0.0531],
        [0.0007, 0.0741],
        [0.0025, 0.0250],
        [0.0013, 0.0438],
        [0.0009, 0.0013]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0041],
        [0.0007],
        [0.0007],
        [0.0009],
        [0.0009],
        [0.0001],
        [0.0011],
        [0.0022],
        [0.0016],
        [0.0004],
        [0.0013],
        [0.0006],
        [0.0012],
        [0.0005],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0041, 0.0007, 0.0007, 0.0009, 0.0009, 0.0001, 0.0011, 0.0022, 0.0016,
         0.0004, 0.0013, 0.0006, 0.0012, 0.0005, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0133],
        [0.0368],
        [0.0411],
        [0.0003],
        [0.0104],
        [0.0408],
        [0.0026],
        [0.0209],
        [0.0005],
        [0.0017],
        [0.0039],
        [0.0188],
        [0.0230],
        [0.0122],
        [0.0459],
        [0.0017]], device='cuda:0')/tensor([[0.0133, 0.0368, 0.0411, 0.0003, 0.0104, 0.0408, 0.0026, 0.0209, 0.0005,
         0.0017, 0.0039, 0.0188, 0.0230, 0.0122, 0.0459, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0041, 0.0133],
        [0.0007, 0.0368],
        [0.0007, 0.0411],
        [0.0009, 0.0003],
        [0.0009, 0.0104],
        [0.0001, 0.0408],
        [0.0011, 0.0026],
        [0.0022, 0.0209],
        [0.0016, 0.0005],
        [0.0004, 0.0017],
        [0.0013, 0.0039],
        [0.0006, 0.0188],
        [0.0012, 0.0230],
        [0.0005, 0.0122],
        [0.0005, 0.0459],
        [0.0005, 0.0017]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0006],
        [0.0009],
        [0.0008],
        [0.0014],
        [0.0004],
        [0.0009],
        [0.0011],
        [0.0010],
        [0.0013],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0012],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0006, 0.0009, 0.0008, 0.0014, 0.0004, 0.0009, 0.0011, 0.0010,
         0.0013, 0.0004, 0.0005, 0.0002, 0.0012, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0030],
        [0.0011],
        [0.0325],
        [0.0190],
        [0.0076],
        [0.0129],
        [0.0052],
        [0.0382],
        [0.0732],
        [0.0095],
        [0.0251],
        [0.0073],
        [0.0090],
        [0.0917],
        [0.0115],
        [0.0046]], device='cuda:0')/tensor([[0.0030, 0.0011, 0.0325, 0.0190, 0.0076, 0.0129, 0.0052, 0.0382, 0.0732,
         0.0095, 0.0251, 0.0073, 0.0090, 0.0917, 0.0115, 0.0046]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0030],
        [0.0006, 0.0011],
        [0.0009, 0.0325],
        [0.0008, 0.0190],
        [0.0014, 0.0076],
        [0.0004, 0.0129],
        [0.0009, 0.0052],
        [0.0011, 0.0382],
        [0.0010, 0.0732],
        [0.0013, 0.0095],
        [0.0004, 0.0251],
        [0.0005, 0.0073],
        [0.0002, 0.0090],
        [0.0012, 0.0917],
        [0.0005, 0.0115],
        [0.0008, 0.0046]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0007],
        [0.0004],
        [0.0024],
        [0.0022],
        [0.0004],
        [0.0012],
        [0.0015],
        [0.0014],
        [0.0005],
        [0.0012],
        [0.0004],
        [0.0014],
        [0.0002],
        [0.0066],
        [0.0005]], device='cuda:0')/tensor([[0.0010, 0.0007, 0.0004, 0.0024, 0.0022, 0.0004, 0.0012, 0.0015, 0.0014,
         0.0005, 0.0012, 0.0004, 0.0014, 0.0002, 0.0066, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0154],
        [0.0003],
        [0.0371],
        [0.0117],
        [0.0189],
        [0.0059],
        [0.0016],
        [0.0072],
        [0.0281],
        [0.0957],
        [0.0079],
        [0.0013],
        [0.0044],
        [0.0882],
        [0.0004]], device='cuda:0')/tensor([[0.0018, 0.0154, 0.0003, 0.0371, 0.0117, 0.0189, 0.0059, 0.0016, 0.0072,
         0.0281, 0.0957, 0.0079, 0.0013, 0.0044, 0.0882, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0018],
        [0.0007, 0.0154],
        [0.0004, 0.0003],
        [0.0024, 0.0371],
        [0.0022, 0.0117],
        [0.0004, 0.0189],
        [0.0012, 0.0059],
        [0.0015, 0.0016],
        [0.0014, 0.0072],
        [0.0005, 0.0281],
        [0.0012, 0.0957],
        [0.0004, 0.0079],
        [0.0014, 0.0013],
        [0.0002, 0.0044],
        [0.0066, 0.0882],
        [0.0005, 0.0004]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6326e-03],
        [1.4433e-03],
        [8.7789e-04],
        [1.1870e-03],
        [5.6193e-04],
        [5.7392e-04],
        [6.2234e-04],
        [8.9735e-04],
        [9.9497e-05],
        [2.4654e-03],
        [4.4864e-04],
        [2.5149e-04],
        [9.4455e-04],
        [6.1337e-04],
        [7.0364e-04],
        [1.5483e-05]], device='cuda:0')/tensor([[1.6326e-03, 1.4433e-03, 8.7789e-04, 1.1870e-03, 5.6193e-04, 5.7392e-04,
         6.2234e-04, 8.9735e-04, 9.9497e-05, 2.4654e-03, 4.4864e-04, 2.5149e-04,
         9.4455e-04, 6.1337e-04, 7.0364e-04, 1.5483e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0501],
        [0.0115],
        [0.0390],
        [0.0051],
        [0.0046],
        [0.0995],
        [0.0281],
        [0.0647],
        [0.0223],
        [0.0023],
        [0.0078],
        [0.0020],
        [0.0364],
        [0.0155],
        [0.0654],
        [0.0003]], device='cuda:0')/tensor([[0.0501, 0.0115, 0.0390, 0.0051, 0.0046, 0.0995, 0.0281, 0.0647, 0.0223,
         0.0023, 0.0078, 0.0020, 0.0364, 0.0155, 0.0654, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6326e-03, 5.0119e-02],
        [1.4433e-03, 1.1518e-02],
        [8.7789e-04, 3.9004e-02],
        [1.1870e-03, 5.1241e-03],
        [5.6193e-04, 4.6211e-03],
        [5.7392e-04, 9.9453e-02],
        [6.2234e-04, 2.8134e-02],
        [8.9735e-04, 6.4719e-02],
        [9.9497e-05, 2.2282e-02],
        [2.4654e-03, 2.3226e-03],
        [4.4864e-04, 7.7814e-03],
        [2.5149e-04, 1.9706e-03],
        [9.4455e-04, 3.6363e-02],
        [6.1337e-04, 1.5486e-02],
        [7.0364e-04, 6.5393e-02],
        [1.5483e-05, 3.3758e-04]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0005],
        [0.0008],
        [0.0012],
        [0.0003],
        [0.0011],
        [0.0008]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0005, 0.0008, 0.0012, 0.0003, 0.0011, 0.0008]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0564],
        [0.0076],
        [0.0046],
        [0.0021],
        [0.0107],
        [0.0003],
        [0.1622],
        [0.1392]], device='cuda:0')/tensor([[0.0564, 0.0076, 0.0046, 0.0021, 0.0107, 0.0003, 0.1622, 0.1392]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0002, 0.0564],
        [0.0002, 0.0076],
        [0.0005, 0.0046],
        [0.0008, 0.0021],
        [0.0012, 0.0107],
        [0.0003, 0.0003],
        [0.0011, 0.1622],
        [0.0008, 0.1392]], device='cuda:0')
acc:  0.635
Time taken to execute the de SA task with prompt type auxiliary, variation 5 and batchsize 16: 0:03:15.786858
path ['42', 'de', 'flan', 'SA', 'auxiliary', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA modal 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 342.33it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0021],
        [0.0009],
        [0.0002],
        [0.0008],
        [0.0011],
        [0.0002],
        [0.0040],
        [0.0014],
        [0.0005],
        [0.0007],
        [0.0005],
        [0.0002],
        [0.0001],
        [0.0015],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0021, 0.0009, 0.0002, 0.0008, 0.0011, 0.0002, 0.0040, 0.0014,
         0.0005, 0.0007, 0.0005, 0.0002, 0.0001, 0.0015, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0096],
        [0.0285],
        [0.0256],
        [0.0261],
        [0.0638],
        [0.1160],
        [0.0002],
        [0.0555],
        [0.0024],
        [0.0002],
        [0.0043],
        [0.0148],
        [0.0003],
        [0.0016],
        [0.0062],
        [0.0135]], device='cuda:0')/tensor([[0.0096, 0.0285, 0.0256, 0.0261, 0.0638, 0.1160, 0.0002, 0.0555, 0.0024,
         0.0002, 0.0043, 0.0148, 0.0003, 0.0016, 0.0062, 0.0135]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0096],
        [0.0021, 0.0285],
        [0.0009, 0.0256],
        [0.0002, 0.0261],
        [0.0008, 0.0638],
        [0.0011, 0.1160],
        [0.0002, 0.0002],
        [0.0040, 0.0555],
        [0.0014, 0.0024],
        [0.0005, 0.0002],
        [0.0007, 0.0043],
        [0.0005, 0.0148],
        [0.0002, 0.0003],
        [0.0001, 0.0016],
        [0.0015, 0.0062],
        [0.0007, 0.0135]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6120e-04],
        [6.0538e-04],
        [6.2119e-04],
        [5.9342e-04],
        [1.4128e-03],
        [8.9699e-04],
        [2.8051e-04],
        [1.9926e-03],
        [6.5945e-04],
        [1.2405e-03],
        [3.3284e-04],
        [2.0266e-03],
        [1.0640e-03],
        [1.1510e-03],
        [7.5186e-04],
        [4.8055e-05]], device='cuda:0')/tensor([[2.6120e-04, 6.0538e-04, 6.2119e-04, 5.9342e-04, 1.4128e-03, 8.9699e-04,
         2.8051e-04, 1.9926e-03, 6.5945e-04, 1.2405e-03, 3.3284e-04, 2.0266e-03,
         1.0640e-03, 1.1510e-03, 7.5186e-04, 4.8055e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0621],
        [0.0171],
        [0.0095],
        [0.0009],
        [0.0009],
        [0.0176],
        [0.1037],
        [0.0286],
        [0.0295],
        [0.0267],
        [0.0122],
        [0.0218],
        [0.0017],
        [0.0524],
        [0.0024]], device='cuda:0')/tensor([[0.0003, 0.0621, 0.0171, 0.0095, 0.0009, 0.0009, 0.0176, 0.1037, 0.0286,
         0.0295, 0.0267, 0.0122, 0.0218, 0.0017, 0.0524, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6120e-04, 3.2116e-04],
        [6.0538e-04, 6.2132e-02],
        [6.2119e-04, 1.7076e-02],
        [5.9342e-04, 9.4736e-03],
        [1.4128e-03, 8.7764e-04],
        [8.9699e-04, 8.5773e-04],
        [2.8051e-04, 1.7556e-02],
        [1.9926e-03, 1.0369e-01],
        [6.5945e-04, 2.8645e-02],
        [1.2405e-03, 2.9525e-02],
        [3.3284e-04, 2.6693e-02],
        [2.0266e-03, 1.2213e-02],
        [1.0640e-03, 2.1764e-02],
        [1.1510e-03, 1.6985e-03],
        [7.5186e-04, 5.2377e-02],
        [4.8055e-05, 2.3743e-03]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0009],
        [0.0010],
        [0.0012],
        [0.0009],
        [0.0002],
        [0.0006],
        [0.0011],
        [0.0008],
        [0.0010],
        [0.0008],
        [0.0010],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0058]], device='cuda:0')/tensor([[0.0002, 0.0009, 0.0010, 0.0012, 0.0009, 0.0002, 0.0006, 0.0011, 0.0008,
         0.0010, 0.0008, 0.0010, 0.0007, 0.0005, 0.0003, 0.0058]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.6428e-05],
        [2.0822e-03],
        [2.8896e-02],
        [2.8303e-02],
        [1.9342e-02],
        [9.2871e-03],
        [2.7927e-03],
        [1.0727e-03],
        [1.9839e-03],
        [1.2306e-02],
        [8.1269e-04],
        [7.1983e-03],
        [8.4763e-03],
        [8.0875e-04],
        [5.2866e-03],
        [6.4269e-03]], device='cuda:0')/tensor([[6.6428e-05, 2.0822e-03, 2.8896e-02, 2.8303e-02, 1.9342e-02, 9.2871e-03,
         2.7927e-03, 1.0727e-03, 1.9839e-03, 1.2306e-02, 8.1269e-04, 7.1983e-03,
         8.4763e-03, 8.0875e-04, 5.2866e-03, 6.4269e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6036e-04, 6.6428e-05],
        [8.6842e-04, 2.0822e-03],
        [1.0478e-03, 2.8896e-02],
        [1.1810e-03, 2.8303e-02],
        [9.4837e-04, 1.9342e-02],
        [2.0377e-04, 9.2871e-03],
        [6.1778e-04, 2.7927e-03],
        [1.1205e-03, 1.0727e-03],
        [7.5873e-04, 1.9839e-03],
        [1.0447e-03, 1.2306e-02],
        [8.3337e-04, 8.1269e-04],
        [9.9744e-04, 7.1983e-03],
        [6.6732e-04, 8.4763e-03],
        [4.6485e-04, 8.0875e-04],
        [2.8117e-04, 5.2866e-03],
        [5.7884e-03, 6.4269e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0011],
        [0.0010],
        [0.0030],
        [0.0002],
        [0.0004],
        [0.0012],
        [0.0003],
        [0.0008],
        [0.0031],
        [0.0007],
        [0.0033],
        [0.0006],
        [0.0002],
        [0.0013],
        [0.0004]], device='cuda:0')/tensor([[0.0012, 0.0011, 0.0010, 0.0030, 0.0002, 0.0004, 0.0012, 0.0003, 0.0008,
         0.0031, 0.0007, 0.0033, 0.0006, 0.0002, 0.0013, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1247],
        [0.0007],
        [0.0352],
        [0.0098],
        [0.0162],
        [0.0010],
        [0.0573],
        [0.0026],
        [0.0048],
        [0.0869],
        [0.0411],
        [0.0865],
        [0.0013],
        [0.0038],
        [0.0256],
        [0.0498]], device='cuda:0')/tensor([[0.1247, 0.0007, 0.0352, 0.0098, 0.0162, 0.0010, 0.0573, 0.0026, 0.0048,
         0.0869, 0.0411, 0.0865, 0.0013, 0.0038, 0.0256, 0.0498]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.1247],
        [0.0011, 0.0007],
        [0.0010, 0.0352],
        [0.0030, 0.0098],
        [0.0002, 0.0162],
        [0.0004, 0.0010],
        [0.0012, 0.0573],
        [0.0003, 0.0026],
        [0.0008, 0.0048],
        [0.0031, 0.0869],
        [0.0007, 0.0411],
        [0.0033, 0.0865],
        [0.0006, 0.0013],
        [0.0002, 0.0038],
        [0.0013, 0.0256],
        [0.0004, 0.0498]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0040],
        [0.0014],
        [0.0007],
        [0.0005],
        [0.0008],
        [0.0017],
        [0.0007],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0012],
        [0.0004],
        [0.0011],
        [0.0009],
        [0.0010]], device='cuda:0')/tensor([[0.0008, 0.0040, 0.0014, 0.0007, 0.0005, 0.0008, 0.0017, 0.0007, 0.0004,
         0.0002, 0.0006, 0.0012, 0.0004, 0.0011, 0.0009, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0233],
        [0.0034],
        [0.0097],
        [0.0570],
        [0.1377],
        [0.0034],
        [0.0093],
        [0.0003],
        [0.0045],
        [0.0042],
        [0.0137],
        [0.0234],
        [0.0119],
        [0.0057],
        [0.0284]], device='cuda:0')/tensor([[0.0007, 0.0233, 0.0034, 0.0097, 0.0570, 0.1377, 0.0034, 0.0093, 0.0003,
         0.0045, 0.0042, 0.0137, 0.0234, 0.0119, 0.0057, 0.0284]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0007],
        [0.0040, 0.0233],
        [0.0014, 0.0034],
        [0.0007, 0.0097],
        [0.0005, 0.0570],
        [0.0008, 0.1377],
        [0.0017, 0.0034],
        [0.0007, 0.0093],
        [0.0004, 0.0003],
        [0.0002, 0.0045],
        [0.0006, 0.0042],
        [0.0012, 0.0137],
        [0.0004, 0.0234],
        [0.0011, 0.0119],
        [0.0009, 0.0057],
        [0.0010, 0.0284]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0003],
        [0.0010],
        [0.0006],
        [0.0007],
        [0.0005],
        [0.0014],
        [0.0034],
        [0.0004],
        [0.0018],
        [0.0027],
        [0.0003],
        [0.0017],
        [0.0007],
        [0.0006],
        [0.0007]], device='cuda:0')/tensor([[0.0006, 0.0003, 0.0010, 0.0006, 0.0007, 0.0005, 0.0014, 0.0034, 0.0004,
         0.0018, 0.0027, 0.0003, 0.0017, 0.0007, 0.0006, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0181],
        [0.0161],
        [0.0022],
        [0.0158],
        [0.0006],
        [0.0402],
        [0.0369],
        [0.0100],
        [0.0164],
        [0.0166],
        [0.0271],
        [0.0004],
        [0.0723],
        [0.0101],
        [0.0004],
        [0.0082]], device='cuda:0')/tensor([[0.0181, 0.0161, 0.0022, 0.0158, 0.0006, 0.0402, 0.0369, 0.0100, 0.0164,
         0.0166, 0.0271, 0.0004, 0.0723, 0.0101, 0.0004, 0.0082]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0181],
        [0.0003, 0.0161],
        [0.0010, 0.0022],
        [0.0006, 0.0158],
        [0.0007, 0.0006],
        [0.0005, 0.0402],
        [0.0014, 0.0369],
        [0.0034, 0.0100],
        [0.0004, 0.0164],
        [0.0018, 0.0166],
        [0.0027, 0.0271],
        [0.0003, 0.0004],
        [0.0017, 0.0723],
        [0.0007, 0.0101],
        [0.0006, 0.0004],
        [0.0007, 0.0082]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0001],
        [0.0007],
        [0.0018],
        [0.0014],
        [0.0015],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0007],
        [0.0029],
        [0.0015],
        [0.0003],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0001, 0.0007, 0.0018, 0.0014, 0.0015, 0.0007, 0.0003,
         0.0002, 0.0007, 0.0029, 0.0015, 0.0003, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.5577e-04],
        [5.4261e-02],
        [4.6957e-05],
        [6.7314e-04],
        [3.6215e-02],
        [2.9033e-03],
        [2.7102e-02],
        [4.2936e-02],
        [2.8679e-03],
        [2.9503e-04],
        [2.7992e-02],
        [1.2317e-01],
        [1.4537e-02],
        [1.5914e-03],
        [2.5038e-04],
        [1.2519e-02]], device='cuda:0')/tensor([[3.5577e-04, 5.4261e-02, 4.6957e-05, 6.7314e-04, 3.6215e-02, 2.9033e-03,
         2.7102e-02, 4.2936e-02, 2.8679e-03, 2.9503e-04, 2.7992e-02, 1.2317e-01,
         1.4537e-02, 1.5914e-03, 2.5038e-04, 1.2519e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.5306e-04, 3.5577e-04],
        [3.3512e-04, 5.4261e-02],
        [1.1608e-04, 4.6957e-05],
        [7.0812e-04, 6.7314e-04],
        [1.7702e-03, 3.6215e-02],
        [1.4365e-03, 2.9033e-03],
        [1.4968e-03, 2.7102e-02],
        [6.8704e-04, 4.2936e-02],
        [2.8263e-04, 2.8679e-03],
        [2.3552e-04, 2.9503e-04],
        [6.8073e-04, 2.7992e-02],
        [2.9332e-03, 1.2317e-01],
        [1.5090e-03, 1.4537e-02],
        [3.0944e-04, 1.5914e-03],
        [2.4280e-04, 2.5038e-04],
        [5.7786e-04, 1.2519e-02]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0013],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0014],
        [0.0028],
        [0.0014],
        [0.0011],
        [0.0033],
        [0.0006],
        [0.0003],
        [0.0009]], device='cuda:0')/tensor([[0.0013, 0.0006, 0.0005, 0.0004, 0.0013, 0.0002, 0.0005, 0.0002, 0.0014,
         0.0028, 0.0014, 0.0011, 0.0033, 0.0006, 0.0003, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0033],
        [0.0214],
        [0.0146],
        [0.0045],
        [0.0253],
        [0.0526],
        [0.0049],
        [0.0159],
        [0.0305],
        [0.0693],
        [0.0066],
        [0.0649],
        [0.0033],
        [0.0016],
        [0.0064],
        [0.0438]], device='cuda:0')/tensor([[0.0033, 0.0214, 0.0146, 0.0045, 0.0253, 0.0526, 0.0049, 0.0159, 0.0305,
         0.0693, 0.0066, 0.0649, 0.0033, 0.0016, 0.0064, 0.0438]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0013, 0.0033],
        [0.0006, 0.0214],
        [0.0005, 0.0146],
        [0.0004, 0.0045],
        [0.0013, 0.0253],
        [0.0002, 0.0526],
        [0.0005, 0.0049],
        [0.0002, 0.0159],
        [0.0014, 0.0305],
        [0.0028, 0.0693],
        [0.0014, 0.0066],
        [0.0011, 0.0649],
        [0.0033, 0.0033],
        [0.0006, 0.0016],
        [0.0003, 0.0064],
        [0.0009, 0.0438]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0001],
        [0.0002],
        [0.0035],
        [0.0028],
        [0.0008],
        [0.0011],
        [0.0014],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0001, 0.0002, 0.0035, 0.0028, 0.0008, 0.0011, 0.0014,
         0.0003, 0.0004, 0.0003, 0.0002, 0.0006, 0.0006, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0149],
        [0.0019],
        [0.0851],
        [0.0004],
        [0.0502],
        [0.0308],
        [0.0031],
        [0.0038],
        [0.0564],
        [0.0232],
        [0.0281],
        [0.0009],
        [0.0226],
        [0.0224],
        [0.0061],
        [0.0007]], device='cuda:0')/tensor([[0.0149, 0.0019, 0.0851, 0.0004, 0.0502, 0.0308, 0.0031, 0.0038, 0.0564,
         0.0232, 0.0281, 0.0009, 0.0226, 0.0224, 0.0061, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0149],
        [0.0002, 0.0019],
        [0.0001, 0.0851],
        [0.0002, 0.0004],
        [0.0035, 0.0502],
        [0.0028, 0.0308],
        [0.0008, 0.0031],
        [0.0011, 0.0038],
        [0.0014, 0.0564],
        [0.0003, 0.0232],
        [0.0004, 0.0281],
        [0.0003, 0.0009],
        [0.0002, 0.0226],
        [0.0006, 0.0224],
        [0.0006, 0.0061],
        [0.0011, 0.0007]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0028],
        [0.0006],
        [0.0016],
        [0.0023],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0004, 0.0005, 0.0004, 0.0006, 0.0007, 0.0028, 0.0006, 0.0016,
         0.0023, 0.0004, 0.0004, 0.0004, 0.0006, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0069],
        [0.0028],
        [0.0030],
        [0.0006],
        [0.0180],
        [0.0027],
        [0.0153],
        [0.0542],
        [0.0756],
        [0.0044],
        [0.0292],
        [0.0006],
        [0.0143],
        [0.0283],
        [0.0132],
        [0.0005]], device='cuda:0')/tensor([[0.0069, 0.0028, 0.0030, 0.0006, 0.0180, 0.0027, 0.0153, 0.0542, 0.0756,
         0.0044, 0.0292, 0.0006, 0.0143, 0.0283, 0.0132, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0069],
        [0.0004, 0.0028],
        [0.0005, 0.0030],
        [0.0004, 0.0006],
        [0.0006, 0.0180],
        [0.0007, 0.0027],
        [0.0028, 0.0153],
        [0.0006, 0.0542],
        [0.0016, 0.0756],
        [0.0023, 0.0044],
        [0.0004, 0.0292],
        [0.0004, 0.0006],
        [0.0004, 0.0143],
        [0.0006, 0.0283],
        [0.0007, 0.0132],
        [0.0005, 0.0005]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0010],
        [0.0008],
        [0.0009],
        [0.0010],
        [0.0007],
        [0.0003],
        [0.0013],
        [0.0015],
        [0.0017],
        [0.0005],
        [0.0011],
        [0.0002],
        [0.0016],
        [0.0008],
        [0.0005]], device='cuda:0')/tensor([[0.0013, 0.0010, 0.0008, 0.0009, 0.0010, 0.0007, 0.0003, 0.0013, 0.0015,
         0.0017, 0.0005, 0.0011, 0.0002, 0.0016, 0.0008, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0078],
        [0.0366],
        [0.0034],
        [0.0121],
        [0.0046],
        [0.0019],
        [0.0142],
        [0.0388],
        [0.0033],
        [0.0634],
        [0.0109],
        [0.0025],
        [0.0130],
        [0.0231],
        [0.0279],
        [0.0007]], device='cuda:0')/tensor([[0.0078, 0.0366, 0.0034, 0.0121, 0.0046, 0.0019, 0.0142, 0.0388, 0.0033,
         0.0634, 0.0109, 0.0025, 0.0130, 0.0231, 0.0279, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0013, 0.0078],
        [0.0010, 0.0366],
        [0.0008, 0.0034],
        [0.0009, 0.0121],
        [0.0010, 0.0046],
        [0.0007, 0.0019],
        [0.0003, 0.0142],
        [0.0013, 0.0388],
        [0.0015, 0.0033],
        [0.0017, 0.0634],
        [0.0005, 0.0109],
        [0.0011, 0.0025],
        [0.0002, 0.0130],
        [0.0016, 0.0231],
        [0.0008, 0.0279],
        [0.0005, 0.0007]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0020],
        [0.0007],
        [0.0007],
        [0.0014],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0001],
        [0.0008],
        [0.0005],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0020, 0.0007, 0.0007, 0.0014, 0.0002, 0.0002, 0.0004,
         0.0003, 0.0007, 0.0001, 0.0008, 0.0005, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0057],
        [0.0032],
        [0.0321],
        [0.0064],
        [0.0285],
        [0.0166],
        [0.0018],
        [0.0003],
        [0.0142],
        [0.0024],
        [0.0366],
        [0.1763],
        [0.0611],
        [0.0197],
        [0.0102],
        [0.0023]], device='cuda:0')/tensor([[0.0057, 0.0032, 0.0321, 0.0064, 0.0285, 0.0166, 0.0018, 0.0003, 0.0142,
         0.0024, 0.0366, 0.1763, 0.0611, 0.0197, 0.0102, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.1431e-04, 5.7457e-03],
        [5.4276e-04, 3.1656e-03],
        [2.0287e-03, 3.2079e-02],
        [6.9076e-04, 6.3792e-03],
        [6.7803e-04, 2.8539e-02],
        [1.3878e-03, 1.6586e-02],
        [2.3230e-04, 1.8327e-03],
        [2.4966e-04, 3.2819e-04],
        [3.5348e-04, 1.4210e-02],
        [3.1035e-04, 2.3798e-03],
        [6.6845e-04, 3.6617e-02],
        [1.4966e-04, 1.7627e-01],
        [7.9169e-04, 6.1116e-02],
        [5.1730e-04, 1.9739e-02],
        [9.4134e-04, 1.0204e-02],
        [6.9009e-04, 2.3325e-03]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[6.1147e-04],
        [1.9150e-03],
        [3.1031e-04],
        [5.0832e-04],
        [7.9309e-05],
        [5.3415e-04],
        [7.6919e-04],
        [2.6649e-04]], device='cuda:0')/tensor([[6.1147e-04, 1.9150e-03, 3.1031e-04, 5.0832e-04, 7.9309e-05, 5.3415e-04,
         7.6919e-04, 2.6649e-04]], device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[1.1640e-02],
        [3.2731e-03],
        [6.3855e-03],
        [3.4807e-04],
        [3.8889e-05],
        [5.6819e-04],
        [2.6191e-03],
        [6.2220e-02]], device='cuda:0')/tensor([[1.1640e-02, 3.2731e-03, 6.3855e-03, 3.4807e-04, 3.8889e-05, 5.6819e-04,
         2.6191e-03, 6.2220e-02]], device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[6.1147e-04, 1.1640e-02],
        [1.9150e-03, 3.2731e-03],
        [3.1031e-04, 6.3855e-03],
        [5.0832e-04, 3.4807e-04],
        [7.9309e-05, 3.8889e-05],
        [5.3415e-04, 5.6819e-04],
        [7.6919e-04, 2.6191e-03],
        [2.6649e-04, 6.2220e-02]], device='cuda:0')
acc:  0.595
Time taken to execute the de SA task with prompt type modal, variation 0 and batchsize 16: 0:03:15.280192
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA modal 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.22it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0025],
        [0.0005],
        [0.0006],
        [0.0008],
        [0.0012],
        [0.0024],
        [0.0013],
        [0.0014],
        [0.0020],
        [0.0003],
        [0.0014],
        [0.0005],
        [0.0020],
        [0.0007],
        [0.0007]], device='cuda:0')/tensor([[0.0011, 0.0025, 0.0005, 0.0006, 0.0008, 0.0012, 0.0024, 0.0013, 0.0014,
         0.0020, 0.0003, 0.0014, 0.0005, 0.0020, 0.0007, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0100],
        [0.0092],
        [0.0171],
        [0.0002],
        [0.0037],
        [0.0034],
        [0.0641],
        [0.0829],
        [0.0017],
        [0.0114],
        [0.0293],
        [0.1669],
        [0.0008],
        [0.0567],
        [0.0381],
        [0.0004]], device='cuda:0')/tensor([[0.0100, 0.0092, 0.0171, 0.0002, 0.0037, 0.0034, 0.0641, 0.0829, 0.0017,
         0.0114, 0.0293, 0.1669, 0.0008, 0.0567, 0.0381, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0100],
        [0.0025, 0.0092],
        [0.0005, 0.0171],
        [0.0006, 0.0002],
        [0.0008, 0.0037],
        [0.0012, 0.0034],
        [0.0024, 0.0641],
        [0.0013, 0.0829],
        [0.0014, 0.0017],
        [0.0020, 0.0114],
        [0.0003, 0.0293],
        [0.0014, 0.1669],
        [0.0005, 0.0008],
        [0.0020, 0.0567],
        [0.0007, 0.0381],
        [0.0007, 0.0004]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0002],
        [0.0006],
        [0.0025],
        [0.0007],
        [0.0007],
        [0.0004],
        [0.0010],
        [0.0009],
        [0.0007],
        [0.0005],
        [0.0046],
        [0.0015],
        [0.0008],
        [0.0011],
        [0.0011]], device='cuda:0')/tensor([[0.0017, 0.0002, 0.0006, 0.0025, 0.0007, 0.0007, 0.0004, 0.0010, 0.0009,
         0.0007, 0.0005, 0.0046, 0.0015, 0.0008, 0.0011, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0234],
        [0.0078],
        [0.0481],
        [0.0019],
        [0.0326],
        [0.0138],
        [0.0003],
        [0.0042],
        [0.0172],
        [0.0147],
        [0.1063],
        [0.0239],
        [0.0071],
        [0.0385],
        [0.0009],
        [0.0453]], device='cuda:0')/tensor([[0.0234, 0.0078, 0.0481, 0.0019, 0.0326, 0.0138, 0.0003, 0.0042, 0.0172,
         0.0147, 0.1063, 0.0239, 0.0071, 0.0385, 0.0009, 0.0453]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0234],
        [0.0002, 0.0078],
        [0.0006, 0.0481],
        [0.0025, 0.0019],
        [0.0007, 0.0326],
        [0.0007, 0.0138],
        [0.0004, 0.0003],
        [0.0010, 0.0042],
        [0.0009, 0.0172],
        [0.0007, 0.0147],
        [0.0005, 0.1063],
        [0.0046, 0.0239],
        [0.0015, 0.0071],
        [0.0008, 0.0385],
        [0.0011, 0.0009],
        [0.0011, 0.0453]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0022],
        [0.0013],
        [0.0021],
        [0.0013],
        [0.0007],
        [0.0002],
        [0.0008],
        [0.0045],
        [0.0020],
        [0.0014],
        [0.0005],
        [0.0008],
        [0.0018],
        [0.0006],
        [0.0012],
        [0.0007]], device='cuda:0')/tensor([[0.0022, 0.0013, 0.0021, 0.0013, 0.0007, 0.0002, 0.0008, 0.0045, 0.0020,
         0.0014, 0.0005, 0.0008, 0.0018, 0.0006, 0.0012, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0251],
        [0.0242],
        [0.0154],
        [0.0008],
        [0.0755],
        [0.1729],
        [0.0278],
        [0.0272],
        [0.0371],
        [0.0023],
        [0.0006],
        [0.0325],
        [0.0310],
        [0.0239],
        [0.0308],
        [0.0122]], device='cuda:0')/tensor([[0.0251, 0.0242, 0.0154, 0.0008, 0.0755, 0.1729, 0.0278, 0.0272, 0.0371,
         0.0023, 0.0006, 0.0325, 0.0310, 0.0239, 0.0308, 0.0122]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0022, 0.0251],
        [0.0013, 0.0242],
        [0.0021, 0.0154],
        [0.0013, 0.0008],
        [0.0007, 0.0755],
        [0.0002, 0.1729],
        [0.0008, 0.0278],
        [0.0045, 0.0272],
        [0.0020, 0.0371],
        [0.0014, 0.0023],
        [0.0005, 0.0006],
        [0.0008, 0.0325],
        [0.0018, 0.0310],
        [0.0006, 0.0239],
        [0.0012, 0.0308],
        [0.0007, 0.0122]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0022],
        [0.0040],
        [0.0016],
        [0.0030],
        [0.0021],
        [0.0007],
        [0.0064],
        [0.0009],
        [0.0008],
        [0.0012],
        [0.0008],
        [0.0016],
        [0.0022],
        [0.0007]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0022, 0.0040, 0.0016, 0.0030, 0.0021, 0.0007, 0.0064,
         0.0009, 0.0008, 0.0012, 0.0008, 0.0016, 0.0022, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0239],
        [0.0057],
        [0.0181],
        [0.0110],
        [0.0046],
        [0.0587],
        [0.1319],
        [0.1000],
        [0.0242],
        [0.0255],
        [0.0116],
        [0.0155],
        [0.0428],
        [0.0016],
        [0.0109],
        [0.0405]], device='cuda:0')/tensor([[0.0239, 0.0057, 0.0181, 0.0110, 0.0046, 0.0587, 0.1319, 0.1000, 0.0242,
         0.0255, 0.0116, 0.0155, 0.0428, 0.0016, 0.0109, 0.0405]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.0239],
        [0.0002, 0.0057],
        [0.0022, 0.0181],
        [0.0040, 0.0110],
        [0.0016, 0.0046],
        [0.0030, 0.0587],
        [0.0021, 0.1319],
        [0.0007, 0.1000],
        [0.0064, 0.0242],
        [0.0009, 0.0255],
        [0.0008, 0.0116],
        [0.0012, 0.0155],
        [0.0008, 0.0428],
        [0.0016, 0.0016],
        [0.0022, 0.0109],
        [0.0007, 0.0405]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0027],
        [0.0017],
        [0.0016],
        [0.0012],
        [0.0005],
        [0.0010],
        [0.0009],
        [0.0014],
        [0.0011],
        [0.0026],
        [0.0053],
        [0.0001],
        [0.0021],
        [0.0016],
        [0.0001],
        [0.0008]], device='cuda:0')/tensor([[0.0027, 0.0017, 0.0016, 0.0012, 0.0005, 0.0010, 0.0009, 0.0014, 0.0011,
         0.0026, 0.0053, 0.0001, 0.0021, 0.0016, 0.0001, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7883e-01],
        [1.1321e-03],
        [1.0788e-01],
        [3.1033e-02],
        [6.8301e-02],
        [9.6815e-04],
        [4.6629e-03],
        [6.4576e-02],
        [5.4645e-03],
        [1.0773e-02],
        [1.5254e-02],
        [1.7056e-03],
        [6.3397e-02],
        [3.3665e-02],
        [6.8891e-05],
        [6.9558e-02]], device='cuda:0')/tensor([[1.7883e-01, 1.1321e-03, 1.0788e-01, 3.1033e-02, 6.8301e-02, 9.6815e-04,
         4.6629e-03, 6.4576e-02, 5.4645e-03, 1.0773e-02, 1.5254e-02, 1.7056e-03,
         6.3397e-02, 3.3665e-02, 6.8891e-05, 6.9558e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7153e-03, 1.7883e-01],
        [1.7065e-03, 1.1321e-03],
        [1.5723e-03, 1.0788e-01],
        [1.1901e-03, 3.1033e-02],
        [5.3461e-04, 6.8301e-02],
        [9.7219e-04, 9.6815e-04],
        [9.2881e-04, 4.6629e-03],
        [1.4265e-03, 6.4576e-02],
        [1.1494e-03, 5.4645e-03],
        [2.5674e-03, 1.0773e-02],
        [5.2605e-03, 1.5254e-02],
        [1.2989e-04, 1.7056e-03],
        [2.1032e-03, 6.3397e-02],
        [1.6194e-03, 3.3665e-02],
        [1.4003e-04, 6.8891e-05],
        [8.1583e-04, 6.9558e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0028],
        [0.0006],
        [0.0001],
        [0.0007],
        [0.0015],
        [0.0018],
        [0.0030],
        [0.0018],
        [0.0006],
        [0.0006],
        [0.0015],
        [0.0005],
        [0.0023],
        [0.0004],
        [0.0011],
        [0.0018]], device='cuda:0')/tensor([[0.0028, 0.0006, 0.0001, 0.0007, 0.0015, 0.0018, 0.0030, 0.0018, 0.0006,
         0.0006, 0.0015, 0.0005, 0.0023, 0.0004, 0.0011, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0867],
        [0.0007],
        [0.0098],
        [0.0322],
        [0.0336],
        [0.0027],
        [0.0229],
        [0.1026],
        [0.0619],
        [0.0262],
        [0.0015],
        [0.0061],
        [0.0020],
        [0.0117],
        [0.0103],
        [0.0246]], device='cuda:0')/tensor([[0.0867, 0.0007, 0.0098, 0.0322, 0.0336, 0.0027, 0.0229, 0.1026, 0.0619,
         0.0262, 0.0015, 0.0061, 0.0020, 0.0117, 0.0103, 0.0246]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0028, 0.0867],
        [0.0006, 0.0007],
        [0.0001, 0.0098],
        [0.0007, 0.0322],
        [0.0015, 0.0336],
        [0.0018, 0.0027],
        [0.0030, 0.0229],
        [0.0018, 0.1026],
        [0.0006, 0.0619],
        [0.0006, 0.0262],
        [0.0015, 0.0015],
        [0.0005, 0.0061],
        [0.0023, 0.0020],
        [0.0004, 0.0117],
        [0.0011, 0.0103],
        [0.0018, 0.0246]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0038],
        [0.0011],
        [0.0042],
        [0.0013],
        [0.0007],
        [0.0001],
        [0.0005],
        [0.0018],
        [0.0040],
        [0.0014],
        [0.0037],
        [0.0018],
        [0.0007],
        [0.0007],
        [0.0009],
        [0.0008]], device='cuda:0')/tensor([[0.0038, 0.0011, 0.0042, 0.0013, 0.0007, 0.0001, 0.0005, 0.0018, 0.0040,
         0.0014, 0.0037, 0.0018, 0.0007, 0.0007, 0.0009, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0613],
        [0.1861],
        [0.0791],
        [0.0080],
        [0.0012],
        [0.0600],
        [0.0013],
        [0.0832],
        [0.0965],
        [0.0032],
        [0.0873],
        [0.0464],
        [0.0132],
        [0.0074],
        [0.0020],
        [0.0056]], device='cuda:0')/tensor([[0.0613, 0.1861, 0.0791, 0.0080, 0.0012, 0.0600, 0.0013, 0.0832, 0.0965,
         0.0032, 0.0873, 0.0464, 0.0132, 0.0074, 0.0020, 0.0056]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.8320e-03, 6.1328e-02],
        [1.0814e-03, 1.8607e-01],
        [4.2163e-03, 7.9074e-02],
        [1.2746e-03, 8.0350e-03],
        [7.3189e-04, 1.1696e-03],
        [1.2341e-04, 6.0037e-02],
        [5.2915e-04, 1.3102e-03],
        [1.7962e-03, 8.3200e-02],
        [3.9799e-03, 9.6479e-02],
        [1.4047e-03, 3.2110e-03],
        [3.6964e-03, 8.7254e-02],
        [1.8017e-03, 4.6380e-02],
        [7.3563e-04, 1.3229e-02],
        [7.1168e-04, 7.4212e-03],
        [9.2030e-04, 2.0410e-03],
        [7.5767e-04, 5.6191e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0028],
        [0.0020],
        [0.0014],
        [0.0019],
        [0.0014],
        [0.0007],
        [0.0011],
        [0.0020],
        [0.0011],
        [0.0014],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0016]], device='cuda:0')/tensor([[0.0007, 0.0028, 0.0020, 0.0014, 0.0019, 0.0014, 0.0007, 0.0011, 0.0020,
         0.0011, 0.0014, 0.0009, 0.0002, 0.0003, 0.0005, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0201],
        [0.0059],
        [0.0148],
        [0.0310],
        [0.0548],
        [0.0484],
        [0.1232],
        [0.0478],
        [0.1427],
        [0.0041],
        [0.0330],
        [0.0696],
        [0.0115],
        [0.0005],
        [0.0005],
        [0.0114]], device='cuda:0')/tensor([[0.0201, 0.0059, 0.0148, 0.0310, 0.0548, 0.0484, 0.1232, 0.0478, 0.1427,
         0.0041, 0.0330, 0.0696, 0.0115, 0.0005, 0.0005, 0.0114]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0201],
        [0.0028, 0.0059],
        [0.0020, 0.0148],
        [0.0014, 0.0310],
        [0.0019, 0.0548],
        [0.0014, 0.0484],
        [0.0007, 0.1232],
        [0.0011, 0.0478],
        [0.0020, 0.1427],
        [0.0011, 0.0041],
        [0.0014, 0.0330],
        [0.0009, 0.0696],
        [0.0002, 0.0115],
        [0.0003, 0.0005],
        [0.0005, 0.0005],
        [0.0016, 0.0114]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0009],
        [0.0008],
        [0.0045],
        [0.0005],
        [0.0031],
        [0.0011],
        [0.0019],
        [0.0020],
        [0.0013],
        [0.0051],
        [0.0019],
        [0.0009],
        [0.0013],
        [0.0014],
        [0.0019]], device='cuda:0')/tensor([[0.0001, 0.0009, 0.0008, 0.0045, 0.0005, 0.0031, 0.0011, 0.0019, 0.0020,
         0.0013, 0.0051, 0.0019, 0.0009, 0.0013, 0.0014, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0029],
        [0.0065],
        [0.1067],
        [0.0179],
        [0.0097],
        [0.0071],
        [0.2176],
        [0.0072],
        [0.0616],
        [0.0086],
        [0.0459],
        [0.0045],
        [0.0491],
        [0.0024],
        [0.0568],
        [0.0013]], device='cuda:0')/tensor([[0.0029, 0.0065, 0.1067, 0.0179, 0.0097, 0.0071, 0.2176, 0.0072, 0.0616,
         0.0086, 0.0459, 0.0045, 0.0491, 0.0024, 0.0568, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[1.2392e-04, 2.9320e-03],
        [8.6249e-04, 6.5335e-03],
        [7.9517e-04, 1.0667e-01],
        [4.5437e-03, 1.7932e-02],
        [4.6777e-04, 9.6890e-03],
        [3.1188e-03, 7.1478e-03],
        [1.0990e-03, 2.1757e-01],
        [1.9379e-03, 7.1844e-03],
        [1.9618e-03, 6.1649e-02],
        [1.2752e-03, 8.5584e-03],
        [5.1466e-03, 4.5922e-02],
        [1.9061e-03, 4.4878e-03],
        [8.8969e-04, 4.9111e-02],
        [1.2530e-03, 2.4360e-03],
        [1.4003e-03, 5.6787e-02],
        [1.9440e-03, 1.2787e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0004],
        [0.0017],
        [0.0023],
        [0.0004],
        [0.0014],
        [0.0021],
        [0.0003],
        [0.0001],
        [0.0016],
        [0.0041],
        [0.0022],
        [0.0007],
        [0.0024],
        [0.0010],
        [0.0010]], device='cuda:0')/tensor([[0.0017, 0.0004, 0.0017, 0.0023, 0.0004, 0.0014, 0.0021, 0.0003, 0.0001,
         0.0016, 0.0041, 0.0022, 0.0007, 0.0024, 0.0010, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4330e-02],
        [3.1950e-03],
        [3.7512e-02],
        [3.5228e-02],
        [8.4315e-05],
        [1.5902e-02],
        [3.8021e-03],
        [4.3581e-03],
        [4.5215e-02],
        [7.2063e-02],
        [2.6545e-02],
        [8.8406e-02],
        [3.2453e-02],
        [1.5658e-02],
        [1.5216e-01],
        [2.5646e-02]], device='cuda:0')/tensor([[7.4330e-02, 3.1950e-03, 3.7512e-02, 3.5228e-02, 8.4315e-05, 1.5902e-02,
         3.8021e-03, 4.3581e-03, 4.5215e-02, 7.2063e-02, 2.6545e-02, 8.8406e-02,
         3.2453e-02, 1.5658e-02, 1.5216e-01, 2.5646e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6538e-03, 7.4330e-02],
        [4.1104e-04, 3.1950e-03],
        [1.6510e-03, 3.7512e-02],
        [2.2531e-03, 3.5228e-02],
        [3.6410e-04, 8.4315e-05],
        [1.4292e-03, 1.5902e-02],
        [2.1462e-03, 3.8021e-03],
        [2.7175e-04, 4.3581e-03],
        [1.2951e-04, 4.5215e-02],
        [1.5847e-03, 7.2063e-02],
        [4.0802e-03, 2.6545e-02],
        [2.2119e-03, 8.8406e-02],
        [6.8727e-04, 3.2453e-02],
        [2.3829e-03, 1.5658e-02],
        [1.0198e-03, 1.5216e-01],
        [9.9538e-04, 2.5646e-02]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0009],
        [0.0013],
        [0.0021],
        [0.0009],
        [0.0011],
        [0.0030],
        [0.0008],
        [0.0016],
        [0.0005],
        [0.0072],
        [0.0002],
        [0.0008],
        [0.0027],
        [0.0013],
        [0.0008]], device='cuda:0')/tensor([[0.0009, 0.0009, 0.0013, 0.0021, 0.0009, 0.0011, 0.0030, 0.0008, 0.0016,
         0.0005, 0.0072, 0.0002, 0.0008, 0.0027, 0.0013, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0552],
        [0.0094],
        [0.0024],
        [0.0034],
        [0.0006],
        [0.0528],
        [0.0163],
        [0.0146],
        [0.0734],
        [0.0243],
        [0.0822],
        [0.0014],
        [0.0005],
        [0.0617],
        [0.1007],
        [0.0847]], device='cuda:0')/tensor([[0.0552, 0.0094, 0.0024, 0.0034, 0.0006, 0.0528, 0.0163, 0.0146, 0.0734,
         0.0243, 0.0822, 0.0014, 0.0005, 0.0617, 0.1007, 0.0847]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0552],
        [0.0009, 0.0094],
        [0.0013, 0.0024],
        [0.0021, 0.0034],
        [0.0009, 0.0006],
        [0.0011, 0.0528],
        [0.0030, 0.0163],
        [0.0008, 0.0146],
        [0.0016, 0.0734],
        [0.0005, 0.0243],
        [0.0072, 0.0822],
        [0.0002, 0.0014],
        [0.0008, 0.0005],
        [0.0027, 0.0617],
        [0.0013, 0.1007],
        [0.0008, 0.0847]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0012],
        [0.0003],
        [0.0005],
        [0.0051],
        [0.0013],
        [0.0017],
        [0.0025],
        [0.0006],
        [0.0019],
        [0.0018],
        [0.0022],
        [0.0010],
        [0.0023],
        [0.0005],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0012, 0.0003, 0.0005, 0.0051, 0.0013, 0.0017, 0.0025, 0.0006,
         0.0019, 0.0018, 0.0022, 0.0010, 0.0023, 0.0005, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0706],
        [0.0067],
        [0.0002],
        [0.0006],
        [0.0146],
        [0.0041],
        [0.0620],
        [0.0066],
        [0.0546],
        [0.1581],
        [0.1154],
        [0.0824],
        [0.0010],
        [0.1092],
        [0.0014],
        [0.0375]], device='cuda:0')/tensor([[0.0706, 0.0067, 0.0002, 0.0006, 0.0146, 0.0041, 0.0620, 0.0066, 0.0546,
         0.1581, 0.1154, 0.0824, 0.0010, 0.1092, 0.0014, 0.0375]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0706],
        [0.0012, 0.0067],
        [0.0003, 0.0002],
        [0.0005, 0.0006],
        [0.0051, 0.0146],
        [0.0013, 0.0041],
        [0.0017, 0.0620],
        [0.0025, 0.0066],
        [0.0006, 0.0546],
        [0.0019, 0.1581],
        [0.0018, 0.1154],
        [0.0022, 0.0824],
        [0.0010, 0.0010],
        [0.0023, 0.1092],
        [0.0005, 0.0014],
        [0.0006, 0.0375]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[1.3399e-03],
        [7.8469e-03],
        [6.5348e-04],
        [3.2861e-03],
        [2.5056e-03],
        [9.8683e-05],
        [1.3790e-03],
        [6.7399e-03]], device='cuda:0')/tensor([[1.3399e-03, 7.8469e-03, 6.5348e-04, 3.2861e-03, 2.5056e-03, 9.8683e-05,
         1.3790e-03, 6.7399e-03]], device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0451],
        [0.0117],
        [0.0008],
        [0.1407],
        [0.0026],
        [0.0028],
        [0.1722],
        [0.0079]], device='cuda:0')/tensor([[0.0451, 0.0117, 0.0008, 0.1407, 0.0026, 0.0028, 0.1722, 0.0079]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[1.3399e-03, 4.5126e-02],
        [7.8469e-03, 1.1679e-02],
        [6.5348e-04, 7.7334e-04],
        [3.2861e-03, 1.4073e-01],
        [2.5056e-03, 2.5595e-03],
        [9.8683e-05, 2.7633e-03],
        [1.3790e-03, 1.7216e-01],
        [6.7399e-03, 7.8690e-03]], device='cuda:0')
acc:  0.585
Time taken to execute the de SA task with prompt type modal, variation 1 and batchsize 16: 0:03:16.405107
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA modal 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 350.79it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0014],
        [0.0020],
        [0.0005],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0011],
        [0.0003],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0005, 0.0006, 0.0014, 0.0020, 0.0005, 0.0002, 0.0002,
         0.0007, 0.0011, 0.0003, 0.0003, 0.0007, 0.0006, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0009],
        [0.0201],
        [0.0058],
        [0.0037],
        [0.0033],
        [0.0093],
        [0.0128],
        [0.0251],
        [0.0197],
        [0.0067],
        [0.0007],
        [0.0081],
        [0.0003],
        [0.0058],
        [0.0469],
        [0.0174]], device='cuda:0')/tensor([[0.0009, 0.0201, 0.0058, 0.0037, 0.0033, 0.0093, 0.0128, 0.0251, 0.0197,
         0.0067, 0.0007, 0.0081, 0.0003, 0.0058, 0.0469, 0.0174]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0009],
        [0.0005, 0.0201],
        [0.0005, 0.0058],
        [0.0006, 0.0037],
        [0.0014, 0.0033],
        [0.0020, 0.0093],
        [0.0005, 0.0128],
        [0.0002, 0.0251],
        [0.0002, 0.0197],
        [0.0007, 0.0067],
        [0.0011, 0.0007],
        [0.0003, 0.0081],
        [0.0003, 0.0003],
        [0.0007, 0.0058],
        [0.0006, 0.0469],
        [0.0002, 0.0174]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0011],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0008],
        [0.0004],
        [0.0012]], device='cuda:0')/tensor([[0.0005, 0.0011, 0.0009, 0.0002, 0.0003, 0.0004, 0.0003, 0.0002, 0.0002,
         0.0006, 0.0002, 0.0005, 0.0004, 0.0008, 0.0004, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0285],
        [0.0083],
        [0.0271],
        [0.0036],
        [0.0265],
        [0.0375],
        [0.0002],
        [0.0001],
        [0.0074],
        [0.0027],
        [0.0006],
        [0.0165],
        [0.0407],
        [0.0026],
        [0.0007],
        [0.0153]], device='cuda:0')/tensor([[0.0285, 0.0083, 0.0271, 0.0036, 0.0265, 0.0375, 0.0002, 0.0001, 0.0074,
         0.0027, 0.0006, 0.0165, 0.0407, 0.0026, 0.0007, 0.0153]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0285],
        [0.0011, 0.0083],
        [0.0009, 0.0271],
        [0.0002, 0.0036],
        [0.0003, 0.0265],
        [0.0004, 0.0375],
        [0.0003, 0.0002],
        [0.0002, 0.0001],
        [0.0002, 0.0074],
        [0.0006, 0.0027],
        [0.0002, 0.0006],
        [0.0005, 0.0165],
        [0.0004, 0.0407],
        [0.0008, 0.0026],
        [0.0004, 0.0007],
        [0.0012, 0.0153]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0030],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0017],
        [0.0009],
        [0.0007],
        [0.0003],
        [0.0008],
        [0.0008],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0013]], device='cuda:0')/tensor([[0.0008, 0.0030, 0.0003, 0.0003, 0.0005, 0.0010, 0.0017, 0.0009, 0.0007,
         0.0003, 0.0008, 0.0008, 0.0004, 0.0003, 0.0007, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0469],
        [0.0086],
        [0.0044],
        [0.0128],
        [0.0014],
        [0.0005],
        [0.0030],
        [0.0032],
        [0.0383],
        [0.0015],
        [0.0209],
        [0.0028],
        [0.0245],
        [0.0225],
        [0.0012],
        [0.0020]], device='cuda:0')/tensor([[0.0469, 0.0086, 0.0044, 0.0128, 0.0014, 0.0005, 0.0030, 0.0032, 0.0383,
         0.0015, 0.0209, 0.0028, 0.0245, 0.0225, 0.0012, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0469],
        [0.0030, 0.0086],
        [0.0003, 0.0044],
        [0.0003, 0.0128],
        [0.0005, 0.0014],
        [0.0010, 0.0005],
        [0.0017, 0.0030],
        [0.0009, 0.0032],
        [0.0007, 0.0383],
        [0.0003, 0.0015],
        [0.0008, 0.0209],
        [0.0008, 0.0028],
        [0.0004, 0.0245],
        [0.0003, 0.0225],
        [0.0007, 0.0012],
        [0.0013, 0.0020]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0018],
        [0.0008],
        [0.0008],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0007],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0006],
        [0.0004]], device='cuda:0')/tensor([[0.0008, 0.0018, 0.0008, 0.0008, 0.0003, 0.0002, 0.0003, 0.0009, 0.0004,
         0.0007, 0.0004, 0.0005, 0.0003, 0.0001, 0.0006, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0033],
        [0.0003],
        [0.0052],
        [0.0121],
        [0.0133],
        [0.0161],
        [0.0008],
        [0.0635],
        [0.0020],
        [0.0078],
        [0.0008],
        [0.0050],
        [0.0117],
        [0.0638],
        [0.0412]], device='cuda:0')/tensor([[0.0008, 0.0033, 0.0003, 0.0052, 0.0121, 0.0133, 0.0161, 0.0008, 0.0635,
         0.0020, 0.0078, 0.0008, 0.0050, 0.0117, 0.0638, 0.0412]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0008],
        [0.0018, 0.0033],
        [0.0008, 0.0003],
        [0.0008, 0.0052],
        [0.0003, 0.0121],
        [0.0002, 0.0133],
        [0.0003, 0.0161],
        [0.0009, 0.0008],
        [0.0004, 0.0635],
        [0.0007, 0.0020],
        [0.0004, 0.0078],
        [0.0005, 0.0008],
        [0.0003, 0.0050],
        [0.0001, 0.0117],
        [0.0006, 0.0638],
        [0.0004, 0.0412]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0005],
        [0.0009],
        [0.0004],
        [0.0014],
        [0.0003],
        [0.0017],
        [0.0005],
        [0.0010],
        [0.0004],
        [0.0004],
        [0.0042],
        [0.0006],
        [0.0006],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0005, 0.0009, 0.0004, 0.0014, 0.0003, 0.0017, 0.0005,
         0.0010, 0.0004, 0.0004, 0.0042, 0.0006, 0.0006, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0105],
        [0.0074],
        [0.0052],
        [0.0051],
        [0.0041],
        [0.0464],
        [0.2148],
        [0.0175],
        [0.0008],
        [0.0012],
        [0.0006],
        [0.0286],
        [0.0065],
        [0.0012],
        [0.0015],
        [0.0280]], device='cuda:0')/tensor([[0.0105, 0.0074, 0.0052, 0.0051, 0.0041, 0.0464, 0.2148, 0.0175, 0.0008,
         0.0012, 0.0006, 0.0286, 0.0065, 0.0012, 0.0015, 0.0280]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0105],
        [0.0004, 0.0074],
        [0.0005, 0.0052],
        [0.0009, 0.0051],
        [0.0004, 0.0041],
        [0.0014, 0.0464],
        [0.0003, 0.2148],
        [0.0017, 0.0175],
        [0.0005, 0.0008],
        [0.0010, 0.0012],
        [0.0004, 0.0006],
        [0.0004, 0.0286],
        [0.0042, 0.0065],
        [0.0006, 0.0012],
        [0.0006, 0.0015],
        [0.0004, 0.0280]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0001],
        [0.0003],
        [0.0015],
        [0.0013],
        [0.0011],
        [0.0012],
        [0.0003],
        [0.0003],
        [0.0018],
        [0.0007],
        [0.0015],
        [0.0002],
        [0.0004],
        [0.0013],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0001, 0.0003, 0.0015, 0.0013, 0.0011, 0.0012, 0.0003, 0.0003,
         0.0018, 0.0007, 0.0015, 0.0002, 0.0004, 0.0013, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0685],
        [0.0002],
        [0.0136],
        [0.0021],
        [0.0139],
        [0.0109],
        [0.0025],
        [0.0003],
        [0.0007],
        [0.0055],
        [0.0550],
        [0.0111],
        [0.0071],
        [0.0037],
        [0.0021],
        [0.0012]], device='cuda:0')/tensor([[0.0685, 0.0002, 0.0136, 0.0021, 0.0139, 0.0109, 0.0025, 0.0003, 0.0007,
         0.0055, 0.0550, 0.0111, 0.0071, 0.0037, 0.0021, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0685],
        [0.0001, 0.0002],
        [0.0003, 0.0136],
        [0.0015, 0.0021],
        [0.0013, 0.0139],
        [0.0011, 0.0109],
        [0.0012, 0.0025],
        [0.0003, 0.0003],
        [0.0003, 0.0007],
        [0.0018, 0.0055],
        [0.0007, 0.0550],
        [0.0015, 0.0111],
        [0.0002, 0.0071],
        [0.0004, 0.0037],
        [0.0013, 0.0021],
        [0.0005, 0.0012]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0001],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0001],
        [0.0009],
        [0.0025],
        [0.0010],
        [0.0004],
        [0.0010],
        [0.0002],
        [0.0010],
        [0.0004],
        [0.0010],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0001, 0.0006, 0.0002, 0.0005, 0.0001, 0.0009, 0.0025, 0.0010,
         0.0004, 0.0010, 0.0002, 0.0010, 0.0004, 0.0010, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0108],
        [0.0627],
        [0.0018],
        [0.0003],
        [0.0295],
        [0.0207],
        [0.0016],
        [0.0735],
        [0.0324],
        [0.0287],
        [0.0010],
        [0.0077],
        [0.0490],
        [0.0133],
        [0.0893],
        [0.0027]], device='cuda:0')/tensor([[0.0108, 0.0627, 0.0018, 0.0003, 0.0295, 0.0207, 0.0016, 0.0735, 0.0324,
         0.0287, 0.0010, 0.0077, 0.0490, 0.0133, 0.0893, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0108],
        [0.0001, 0.0627],
        [0.0006, 0.0018],
        [0.0002, 0.0003],
        [0.0005, 0.0295],
        [0.0001, 0.0207],
        [0.0009, 0.0016],
        [0.0025, 0.0735],
        [0.0010, 0.0324],
        [0.0004, 0.0287],
        [0.0010, 0.0010],
        [0.0002, 0.0077],
        [0.0010, 0.0490],
        [0.0004, 0.0133],
        [0.0010, 0.0893],
        [0.0011, 0.0027]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0006],
        [0.0013],
        [0.0015],
        [0.0008],
        [0.0007],
        [0.0008],
        [0.0011],
        [0.0025],
        [0.0009],
        [0.0006],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0005, 0.0003, 0.0006, 0.0013, 0.0015, 0.0008, 0.0007,
         0.0008, 0.0011, 0.0025, 0.0009, 0.0006, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0052],
        [0.0770],
        [0.0256],
        [0.0128],
        [0.0334],
        [0.0018],
        [0.0033],
        [0.0162],
        [0.0236],
        [0.0176],
        [0.0296],
        [0.1275],
        [0.0010],
        [0.0303],
        [0.0083],
        [0.0032]], device='cuda:0')/tensor([[0.0052, 0.0770, 0.0256, 0.0128, 0.0334, 0.0018, 0.0033, 0.0162, 0.0236,
         0.0176, 0.0296, 0.1275, 0.0010, 0.0303, 0.0083, 0.0032]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.0052],
        [0.0002, 0.0770],
        [0.0005, 0.0256],
        [0.0003, 0.0128],
        [0.0006, 0.0334],
        [0.0013, 0.0018],
        [0.0015, 0.0033],
        [0.0008, 0.0162],
        [0.0007, 0.0236],
        [0.0008, 0.0176],
        [0.0011, 0.0296],
        [0.0025, 0.1275],
        [0.0009, 0.0010],
        [0.0006, 0.0303],
        [0.0005, 0.0083],
        [0.0008, 0.0032]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.9072e-04],
        [4.7143e-06],
        [1.7650e-04],
        [3.2789e-04],
        [5.9215e-04],
        [4.0160e-04],
        [9.0868e-04],
        [1.0816e-03],
        [9.0965e-04],
        [1.0618e-03],
        [4.4036e-04],
        [5.1049e-04],
        [2.2415e-04],
        [5.2636e-04],
        [4.6272e-03],
        [3.9138e-04]], device='cuda:0')/tensor([[4.9072e-04, 4.7143e-06, 1.7650e-04, 3.2789e-04, 5.9215e-04, 4.0160e-04,
         9.0868e-04, 1.0816e-03, 9.0965e-04, 1.0618e-03, 4.4036e-04, 5.1049e-04,
         2.2415e-04, 5.2636e-04, 4.6272e-03, 3.9138e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0111],
        [0.0002],
        [0.0093],
        [0.0174],
        [0.0216],
        [0.0391],
        [0.0285],
        [0.0026],
        [0.0927],
        [0.0698],
        [0.0030],
        [0.0026],
        [0.0103],
        [0.0007],
        [0.0387],
        [0.0044]], device='cuda:0')/tensor([[0.0111, 0.0002, 0.0093, 0.0174, 0.0216, 0.0391, 0.0285, 0.0026, 0.0927,
         0.0698, 0.0030, 0.0026, 0.0103, 0.0007, 0.0387, 0.0044]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[4.9072e-04, 1.1107e-02],
        [4.7143e-06, 1.8543e-04],
        [1.7650e-04, 9.3205e-03],
        [3.2789e-04, 1.7354e-02],
        [5.9215e-04, 2.1611e-02],
        [4.0160e-04, 3.9128e-02],
        [9.0868e-04, 2.8461e-02],
        [1.0816e-03, 2.6084e-03],
        [9.0965e-04, 9.2711e-02],
        [1.0618e-03, 6.9754e-02],
        [4.4036e-04, 3.0335e-03],
        [5.1049e-04, 2.6461e-03],
        [2.2415e-04, 1.0303e-02],
        [5.2636e-04, 7.2772e-04],
        [4.6272e-03, 3.8675e-02],
        [3.9138e-04, 4.4314e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0008],
        [0.0005],
        [0.0013],
        [0.0009],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0021],
        [0.0036],
        [0.0008],
        [0.0034],
        [0.0013]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0008, 0.0005, 0.0013, 0.0009, 0.0008, 0.0004, 0.0006,
         0.0005, 0.0005, 0.0021, 0.0036, 0.0008, 0.0034, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0823],
        [0.0847],
        [0.0097],
        [0.0394],
        [0.0018],
        [0.0056],
        [0.0008],
        [0.0009],
        [0.0128],
        [0.0512],
        [0.0285],
        [0.0101],
        [0.0859],
        [0.0044],
        [0.0298]], device='cuda:0')/tensor([[0.0015, 0.0823, 0.0847, 0.0097, 0.0394, 0.0018, 0.0056, 0.0008, 0.0009,
         0.0128, 0.0512, 0.0285, 0.0101, 0.0859, 0.0044, 0.0298]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0015],
        [0.0011, 0.0823],
        [0.0008, 0.0847],
        [0.0005, 0.0097],
        [0.0013, 0.0394],
        [0.0009, 0.0018],
        [0.0008, 0.0056],
        [0.0004, 0.0008],
        [0.0006, 0.0009],
        [0.0005, 0.0128],
        [0.0005, 0.0512],
        [0.0021, 0.0285],
        [0.0036, 0.0101],
        [0.0008, 0.0859],
        [0.0034, 0.0044],
        [0.0013, 0.0298]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0027],
        [0.0003],
        [0.0023],
        [0.0002],
        [0.0004],
        [0.0007],
        [0.0010],
        [0.0003],
        [0.0008],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0003],
        [0.0015],
        [0.0006],
        [0.0017]], device='cuda:0')/tensor([[0.0027, 0.0003, 0.0023, 0.0002, 0.0004, 0.0007, 0.0010, 0.0003, 0.0008,
         0.0005, 0.0007, 0.0004, 0.0003, 0.0015, 0.0006, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0074],
        [0.0599],
        [0.0416],
        [0.0035],
        [0.0704],
        [0.0050],
        [0.0256],
        [0.0009],
        [0.0011],
        [0.0016],
        [0.0491],
        [0.0106],
        [0.0124],
        [0.0006],
        [0.0020],
        [0.0020]], device='cuda:0')/tensor([[0.0074, 0.0599, 0.0416, 0.0035, 0.0704, 0.0050, 0.0256, 0.0009, 0.0011,
         0.0016, 0.0491, 0.0106, 0.0124, 0.0006, 0.0020, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0027, 0.0074],
        [0.0003, 0.0599],
        [0.0023, 0.0416],
        [0.0002, 0.0035],
        [0.0004, 0.0704],
        [0.0007, 0.0050],
        [0.0010, 0.0256],
        [0.0003, 0.0009],
        [0.0008, 0.0011],
        [0.0005, 0.0016],
        [0.0007, 0.0491],
        [0.0004, 0.0106],
        [0.0003, 0.0124],
        [0.0015, 0.0006],
        [0.0006, 0.0020],
        [0.0017, 0.0020]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0010],
        [0.0011],
        [0.0013],
        [0.0007],
        [0.0010],
        [0.0004],
        [0.0009],
        [0.0001],
        [0.0012],
        [0.0005],
        [0.0009],
        [0.0003],
        [0.0020],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0008, 0.0010, 0.0011, 0.0013, 0.0007, 0.0010, 0.0004, 0.0009, 0.0001,
         0.0012, 0.0005, 0.0009, 0.0003, 0.0020, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0212],
        [0.0061],
        [0.0109],
        [0.0047],
        [0.0209],
        [0.0342],
        [0.0494],
        [0.0091],
        [0.0020],
        [0.0191],
        [0.0075],
        [0.0251],
        [0.0289],
        [0.0660],
        [0.0359],
        [0.0069]], device='cuda:0')/tensor([[0.0212, 0.0061, 0.0109, 0.0047, 0.0209, 0.0342, 0.0494, 0.0091, 0.0020,
         0.0191, 0.0075, 0.0251, 0.0289, 0.0660, 0.0359, 0.0069]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0212],
        [0.0010, 0.0061],
        [0.0011, 0.0109],
        [0.0013, 0.0047],
        [0.0007, 0.0209],
        [0.0010, 0.0342],
        [0.0004, 0.0494],
        [0.0009, 0.0091],
        [0.0001, 0.0020],
        [0.0012, 0.0191],
        [0.0005, 0.0075],
        [0.0009, 0.0251],
        [0.0003, 0.0289],
        [0.0020, 0.0660],
        [0.0004, 0.0359],
        [0.0007, 0.0069]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0002],
        [0.0019],
        [0.0010],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0002, 0.0019, 0.0010, 0.0004, 0.0004, 0.0007, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0036],
        [0.0460],
        [0.0198],
        [0.0098],
        [0.0577],
        [0.0289],
        [0.0054],
        [0.0982]], device='cuda:0')/tensor([[0.0036, 0.0460, 0.0198, 0.0098, 0.0577, 0.0289, 0.0054, 0.0982]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0002, 0.0036],
        [0.0019, 0.0460],
        [0.0010, 0.0198],
        [0.0004, 0.0098],
        [0.0004, 0.0577],
        [0.0007, 0.0289],
        [0.0002, 0.0054],
        [0.0008, 0.0982]], device='cuda:0')
acc:  0.545
Time taken to execute the de SA task with prompt type modal, variation 2 and batchsize 16: 0:03:14.560841
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA modal 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 337.66it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0005],
        [0.0036],
        [0.0010],
        [0.0020],
        [0.0005],
        [0.0008],
        [0.0018],
        [0.0021],
        [0.0021],
        [0.0008],
        [0.0015],
        [0.0022],
        [0.0019],
        [0.0011],
        [0.0025]], device='cuda:0')/tensor([[0.0019, 0.0005, 0.0036, 0.0010, 0.0020, 0.0005, 0.0008, 0.0018, 0.0021,
         0.0021, 0.0008, 0.0015, 0.0022, 0.0019, 0.0011, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0050],
        [0.0024],
        [0.0066],
        [0.0027],
        [0.0009],
        [0.0037],
        [0.0003],
        [0.0058],
        [0.0322],
        [0.0033],
        [0.0004],
        [0.0021],
        [0.0838],
        [0.0002],
        [0.0013],
        [0.0118]], device='cuda:0')/tensor([[0.0050, 0.0024, 0.0066, 0.0027, 0.0009, 0.0037, 0.0003, 0.0058, 0.0322,
         0.0033, 0.0004, 0.0021, 0.0838, 0.0002, 0.0013, 0.0118]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0019, 0.0050],
        [0.0005, 0.0024],
        [0.0036, 0.0066],
        [0.0010, 0.0027],
        [0.0020, 0.0009],
        [0.0005, 0.0037],
        [0.0008, 0.0003],
        [0.0018, 0.0058],
        [0.0021, 0.0322],
        [0.0021, 0.0033],
        [0.0008, 0.0004],
        [0.0015, 0.0021],
        [0.0022, 0.0838],
        [0.0019, 0.0002],
        [0.0011, 0.0013],
        [0.0025, 0.0118]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0023],
        [0.0011],
        [0.0014],
        [0.0009],
        [0.0006],
        [0.0019],
        [0.0009],
        [0.0004],
        [0.0042],
        [0.0007],
        [0.0017],
        [0.0019],
        [0.0026],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0009, 0.0023, 0.0011, 0.0014, 0.0009, 0.0006, 0.0019, 0.0009, 0.0004,
         0.0042, 0.0007, 0.0017, 0.0019, 0.0026, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.7362e-03],
        [1.3913e-02],
        [1.7278e-02],
        [4.3331e-04],
        [1.3296e-03],
        [5.2872e-04],
        [5.4210e-03],
        [2.7370e-02],
        [2.8393e-03],
        [1.1324e-02],
        [1.2317e-02],
        [2.0951e-02],
        [5.7093e-02],
        [1.6661e-03],
        [7.5272e-05],
        [2.0171e-02]], device='cuda:0')/tensor([[8.7362e-03, 1.3913e-02, 1.7278e-02, 4.3331e-04, 1.3296e-03, 5.2872e-04,
         5.4210e-03, 2.7370e-02, 2.8393e-03, 1.1324e-02, 1.2317e-02, 2.0951e-02,
         5.7093e-02, 1.6661e-03, 7.5272e-05, 2.0171e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.7710e-04, 8.7362e-03],
        [2.2513e-03, 1.3913e-02],
        [1.0998e-03, 1.7278e-02],
        [1.4243e-03, 4.3331e-04],
        [8.9988e-04, 1.3296e-03],
        [5.5572e-04, 5.2872e-04],
        [1.8931e-03, 5.4210e-03],
        [9.0777e-04, 2.7370e-02],
        [3.7087e-04, 2.8393e-03],
        [4.2439e-03, 1.1324e-02],
        [7.0083e-04, 1.2317e-02],
        [1.6714e-03, 2.0951e-02],
        [1.8514e-03, 5.7093e-02],
        [2.5936e-03, 1.6661e-03],
        [3.9205e-04, 7.5272e-05],
        [6.6496e-04, 2.0171e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0012],
        [0.0006],
        [0.0026],
        [0.0011],
        [0.0004],
        [0.0008],
        [0.0014],
        [0.0032],
        [0.0008],
        [0.0013],
        [0.0010],
        [0.0015],
        [0.0011],
        [0.0024],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0012, 0.0006, 0.0026, 0.0011, 0.0004, 0.0008, 0.0014, 0.0032,
         0.0008, 0.0013, 0.0010, 0.0015, 0.0011, 0.0024, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0119],
        [0.0354],
        [0.0075],
        [0.0131],
        [0.0018],
        [0.0013],
        [0.0233],
        [0.0005],
        [0.0094],
        [0.0149],
        [0.0008],
        [0.0133],
        [0.0293],
        [0.0173],
        [0.0115],
        [0.0540]], device='cuda:0')/tensor([[0.0119, 0.0354, 0.0075, 0.0131, 0.0018, 0.0013, 0.0233, 0.0005, 0.0094,
         0.0149, 0.0008, 0.0133, 0.0293, 0.0173, 0.0115, 0.0540]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0119],
        [0.0012, 0.0354],
        [0.0006, 0.0075],
        [0.0026, 0.0131],
        [0.0011, 0.0018],
        [0.0004, 0.0013],
        [0.0008, 0.0233],
        [0.0014, 0.0005],
        [0.0032, 0.0094],
        [0.0008, 0.0149],
        [0.0013, 0.0008],
        [0.0010, 0.0133],
        [0.0015, 0.0293],
        [0.0011, 0.0173],
        [0.0024, 0.0115],
        [0.0008, 0.0540]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0026],
        [0.0024],
        [0.0003],
        [0.0028],
        [0.0006],
        [0.0025],
        [0.0014],
        [0.0007],
        [0.0007],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0013],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0017, 0.0026, 0.0024, 0.0003, 0.0028, 0.0006, 0.0025, 0.0014, 0.0007,
         0.0007, 0.0005, 0.0007, 0.0003, 0.0013, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0346],
        [0.0090],
        [0.0031],
        [0.0126],
        [0.0328],
        [0.0124],
        [0.0166],
        [0.0015],
        [0.0178],
        [0.0247],
        [0.0167],
        [0.0006],
        [0.0002],
        [0.0233],
        [0.0002],
        [0.0025]], device='cuda:0')/tensor([[0.0346, 0.0090, 0.0031, 0.0126, 0.0328, 0.0124, 0.0166, 0.0015, 0.0178,
         0.0247, 0.0167, 0.0006, 0.0002, 0.0233, 0.0002, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0346],
        [0.0026, 0.0090],
        [0.0024, 0.0031],
        [0.0003, 0.0126],
        [0.0028, 0.0328],
        [0.0006, 0.0124],
        [0.0025, 0.0166],
        [0.0014, 0.0015],
        [0.0007, 0.0178],
        [0.0007, 0.0247],
        [0.0005, 0.0167],
        [0.0007, 0.0006],
        [0.0003, 0.0002],
        [0.0013, 0.0233],
        [0.0005, 0.0002],
        [0.0005, 0.0025]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0021],
        [0.0018],
        [0.0013],
        [0.0005],
        [0.0016],
        [0.0010],
        [0.0029],
        [0.0011],
        [0.0010],
        [0.0015],
        [0.0007],
        [0.0015],
        [0.0016],
        [0.0006],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0021, 0.0018, 0.0013, 0.0005, 0.0016, 0.0010, 0.0029, 0.0011, 0.0010,
         0.0015, 0.0007, 0.0015, 0.0016, 0.0006, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0442],
        [0.0310],
        [0.0175],
        [0.0158],
        [0.0041],
        [0.0308],
        [0.0012],
        [0.0333],
        [0.0305],
        [0.0016],
        [0.0236],
        [0.0089],
        [0.0027],
        [0.0003],
        [0.0076],
        [0.0076]], device='cuda:0')/tensor([[0.0442, 0.0310, 0.0175, 0.0158, 0.0041, 0.0308, 0.0012, 0.0333, 0.0305,
         0.0016, 0.0236, 0.0089, 0.0027, 0.0003, 0.0076, 0.0076]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0021, 0.0442],
        [0.0018, 0.0310],
        [0.0013, 0.0175],
        [0.0005, 0.0158],
        [0.0016, 0.0041],
        [0.0010, 0.0308],
        [0.0029, 0.0012],
        [0.0011, 0.0333],
        [0.0010, 0.0305],
        [0.0015, 0.0016],
        [0.0007, 0.0236],
        [0.0015, 0.0089],
        [0.0016, 0.0027],
        [0.0006, 0.0003],
        [0.0003, 0.0076],
        [0.0005, 0.0076]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0017],
        [0.0014],
        [0.0028],
        [0.0019],
        [0.0004],
        [0.0007],
        [0.0030],
        [0.0012],
        [0.0022],
        [0.0057],
        [0.0004],
        [0.0008],
        [0.0038],
        [0.0006],
        [0.0016]], device='cuda:0')/tensor([[0.0008, 0.0017, 0.0014, 0.0028, 0.0019, 0.0004, 0.0007, 0.0030, 0.0012,
         0.0022, 0.0057, 0.0004, 0.0008, 0.0038, 0.0006, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.3451e-04],
        [3.6586e-03],
        [5.3912e-03],
        [7.4395e-02],
        [4.1037e-03],
        [1.5855e-01],
        [7.8811e-03],
        [3.9031e-02],
        [1.9496e-03],
        [1.1703e-03],
        [2.3454e-03],
        [9.2309e-05],
        [9.2402e-03],
        [2.8161e-03],
        [1.1178e-02],
        [9.6876e-04]], device='cuda:0')/tensor([[5.3451e-04, 3.6586e-03, 5.3912e-03, 7.4395e-02, 4.1037e-03, 1.5855e-01,
         7.8811e-03, 3.9031e-02, 1.9496e-03, 1.1703e-03, 2.3454e-03, 9.2309e-05,
         9.2402e-03, 2.8161e-03, 1.1178e-02, 9.6876e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.8702e-04, 5.3451e-04],
        [1.6863e-03, 3.6586e-03],
        [1.4355e-03, 5.3912e-03],
        [2.8065e-03, 7.4395e-02],
        [1.8983e-03, 4.1037e-03],
        [3.6357e-04, 1.5855e-01],
        [7.3313e-04, 7.8811e-03],
        [3.0335e-03, 3.9031e-02],
        [1.1662e-03, 1.9496e-03],
        [2.2040e-03, 1.1703e-03],
        [5.7019e-03, 2.3454e-03],
        [3.6711e-04, 9.2309e-05],
        [7.8928e-04, 9.2402e-03],
        [3.7948e-03, 2.8161e-03],
        [5.9050e-04, 1.1178e-02],
        [1.5892e-03, 9.6876e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.5420e-03],
        [1.1924e-03],
        [3.9600e-04],
        [5.4410e-04],
        [1.5850e-03],
        [3.8410e-04],
        [3.5859e-03],
        [5.0992e-06],
        [1.8779e-03],
        [3.4472e-03],
        [8.9555e-04],
        [1.9364e-03],
        [7.9666e-04],
        [8.6621e-04],
        [2.2855e-03],
        [2.1138e-04]], device='cuda:0')/tensor([[1.5420e-03, 1.1924e-03, 3.9600e-04, 5.4410e-04, 1.5850e-03, 3.8410e-04,
         3.5859e-03, 5.0992e-06, 1.8779e-03, 3.4472e-03, 8.9555e-04, 1.9364e-03,
         7.9666e-04, 8.6621e-04, 2.2855e-03, 2.1138e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0328],
        [0.0049],
        [0.0051],
        [0.0330],
        [0.0047],
        [0.0015],
        [0.0075],
        [0.0002],
        [0.0031],
        [0.0067],
        [0.0121],
        [0.0486],
        [0.0018],
        [0.0009],
        [0.0276],
        [0.0444]], device='cuda:0')/tensor([[0.0328, 0.0049, 0.0051, 0.0330, 0.0047, 0.0015, 0.0075, 0.0002, 0.0031,
         0.0067, 0.0121, 0.0486, 0.0018, 0.0009, 0.0276, 0.0444]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5420e-03, 3.2818e-02],
        [1.1924e-03, 4.8866e-03],
        [3.9600e-04, 5.0701e-03],
        [5.4410e-04, 3.2983e-02],
        [1.5850e-03, 4.6948e-03],
        [3.8410e-04, 1.5084e-03],
        [3.5859e-03, 7.4952e-03],
        [5.0992e-06, 2.1730e-04],
        [1.8779e-03, 3.1151e-03],
        [3.4472e-03, 6.7231e-03],
        [8.9555e-04, 1.2103e-02],
        [1.9364e-03, 4.8578e-02],
        [7.9666e-04, 1.7500e-03],
        [8.6621e-04, 8.8266e-04],
        [2.2855e-03, 2.7629e-02],
        [2.1138e-04, 4.4382e-02]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0054],
        [0.0004],
        [0.0005],
        [0.0016],
        [0.0011],
        [0.0004],
        [0.0009],
        [0.0013],
        [0.0026],
        [0.0044],
        [0.0004],
        [0.0006],
        [0.0011],
        [0.0013],
        [0.0010]], device='cuda:0')/tensor([[0.0007, 0.0054, 0.0004, 0.0005, 0.0016, 0.0011, 0.0004, 0.0009, 0.0013,
         0.0026, 0.0044, 0.0004, 0.0006, 0.0011, 0.0013, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0102],
        [0.0047],
        [0.0105],
        [0.0012],
        [0.0121],
        [0.0004],
        [0.0207],
        [0.0003],
        [0.0262],
        [0.0235],
        [0.0065],
        [0.0024],
        [0.0003],
        [0.0100],
        [0.0006],
        [0.0123]], device='cuda:0')/tensor([[0.0102, 0.0047, 0.0105, 0.0012, 0.0121, 0.0004, 0.0207, 0.0003, 0.0262,
         0.0235, 0.0065, 0.0024, 0.0003, 0.0100, 0.0006, 0.0123]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0102],
        [0.0054, 0.0047],
        [0.0004, 0.0105],
        [0.0005, 0.0012],
        [0.0016, 0.0121],
        [0.0011, 0.0004],
        [0.0004, 0.0207],
        [0.0009, 0.0003],
        [0.0013, 0.0262],
        [0.0026, 0.0235],
        [0.0044, 0.0065],
        [0.0004, 0.0024],
        [0.0006, 0.0003],
        [0.0011, 0.0100],
        [0.0013, 0.0006],
        [0.0010, 0.0123]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0009],
        [0.0020],
        [0.0057],
        [0.0019],
        [0.0015],
        [0.0008],
        [0.0024],
        [0.0018],
        [0.0028],
        [0.0016],
        [0.0013],
        [0.0016],
        [0.0016],
        [0.0002],
        [0.0012]], device='cuda:0')/tensor([[0.0016, 0.0009, 0.0020, 0.0057, 0.0019, 0.0015, 0.0008, 0.0024, 0.0018,
         0.0028, 0.0016, 0.0013, 0.0016, 0.0016, 0.0002, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0058],
        [0.0145],
        [0.0007],
        [0.0326],
        [0.0278],
        [0.0003],
        [0.0454],
        [0.0010],
        [0.0189],
        [0.0593],
        [0.0029],
        [0.0008],
        [0.0061],
        [0.0332],
        [0.0090],
        [0.0174]], device='cuda:0')/tensor([[0.0058, 0.0145, 0.0007, 0.0326, 0.0278, 0.0003, 0.0454, 0.0010, 0.0189,
         0.0593, 0.0029, 0.0008, 0.0061, 0.0332, 0.0090, 0.0174]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.0058],
        [0.0009, 0.0145],
        [0.0020, 0.0007],
        [0.0057, 0.0326],
        [0.0019, 0.0278],
        [0.0015, 0.0003],
        [0.0008, 0.0454],
        [0.0024, 0.0010],
        [0.0018, 0.0189],
        [0.0028, 0.0593],
        [0.0016, 0.0029],
        [0.0013, 0.0008],
        [0.0016, 0.0061],
        [0.0016, 0.0332],
        [0.0002, 0.0090],
        [0.0012, 0.0174]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0052],
        [0.0010],
        [0.0026],
        [0.0011],
        [0.0092],
        [0.0012],
        [0.0025],
        [0.0005],
        [0.0019],
        [0.0013],
        [0.0009],
        [0.0008],
        [0.0019],
        [0.0005],
        [0.0027]], device='cuda:0')/tensor([[0.0014, 0.0052, 0.0010, 0.0026, 0.0011, 0.0092, 0.0012, 0.0025, 0.0005,
         0.0019, 0.0013, 0.0009, 0.0008, 0.0019, 0.0005, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0059],
        [0.0017],
        [0.0598],
        [0.0139],
        [0.0245],
        [0.0009],
        [0.0082],
        [0.0011],
        [0.0237],
        [0.0141],
        [0.0247],
        [0.0005],
        [0.0084],
        [0.0036],
        [0.0669]], device='cuda:0')/tensor([[0.0010, 0.0059, 0.0017, 0.0598, 0.0139, 0.0245, 0.0009, 0.0082, 0.0011,
         0.0237, 0.0141, 0.0247, 0.0005, 0.0084, 0.0036, 0.0669]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0010],
        [0.0052, 0.0059],
        [0.0010, 0.0017],
        [0.0026, 0.0598],
        [0.0011, 0.0139],
        [0.0092, 0.0245],
        [0.0012, 0.0009],
        [0.0025, 0.0082],
        [0.0005, 0.0011],
        [0.0019, 0.0237],
        [0.0013, 0.0141],
        [0.0009, 0.0247],
        [0.0008, 0.0005],
        [0.0019, 0.0084],
        [0.0005, 0.0036],
        [0.0027, 0.0669]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0014],
        [0.0006],
        [0.0006],
        [0.0012],
        [0.0007],
        [0.0014],
        [0.0023],
        [0.0010],
        [0.0004],
        [0.0009],
        [0.0014],
        [0.0020],
        [0.0024],
        [0.0018],
        [0.0003]], device='cuda:0')/tensor([[0.0009, 0.0014, 0.0006, 0.0006, 0.0012, 0.0007, 0.0014, 0.0023, 0.0010,
         0.0004, 0.0009, 0.0014, 0.0020, 0.0024, 0.0018, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0071],
        [0.0240],
        [0.0113],
        [0.0288],
        [0.0271],
        [0.0154],
        [0.0024],
        [0.0167],
        [0.0045],
        [0.0048],
        [0.0055],
        [0.0020],
        [0.0142],
        [0.0026],
        [0.0015],
        [0.0012]], device='cuda:0')/tensor([[0.0071, 0.0240, 0.0113, 0.0288, 0.0271, 0.0154, 0.0024, 0.0167, 0.0045,
         0.0048, 0.0055, 0.0020, 0.0142, 0.0026, 0.0015, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0071],
        [0.0014, 0.0240],
        [0.0006, 0.0113],
        [0.0006, 0.0288],
        [0.0012, 0.0271],
        [0.0007, 0.0154],
        [0.0014, 0.0024],
        [0.0023, 0.0167],
        [0.0010, 0.0045],
        [0.0004, 0.0048],
        [0.0009, 0.0055],
        [0.0014, 0.0020],
        [0.0020, 0.0142],
        [0.0024, 0.0026],
        [0.0018, 0.0015],
        [0.0003, 0.0012]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0010],
        [0.0010],
        [0.0017],
        [0.0008],
        [0.0002],
        [0.0014],
        [0.0007],
        [0.0012],
        [0.0011],
        [0.0014],
        [0.0021],
        [0.0026],
        [0.0008],
        [0.0020],
        [0.0012]], device='cuda:0')/tensor([[0.0018, 0.0010, 0.0010, 0.0017, 0.0008, 0.0002, 0.0014, 0.0007, 0.0012,
         0.0011, 0.0014, 0.0021, 0.0026, 0.0008, 0.0020, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0487],
        [0.0072],
        [0.0071],
        [0.0011],
        [0.0069],
        [0.0389],
        [0.0469],
        [0.0443],
        [0.0144],
        [0.0073],
        [0.0026],
        [0.0009],
        [0.0011],
        [0.0298],
        [0.0431],
        [0.0146]], device='cuda:0')/tensor([[0.0487, 0.0072, 0.0071, 0.0011, 0.0069, 0.0389, 0.0469, 0.0443, 0.0144,
         0.0073, 0.0026, 0.0009, 0.0011, 0.0298, 0.0431, 0.0146]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0018, 0.0487],
        [0.0010, 0.0072],
        [0.0010, 0.0071],
        [0.0017, 0.0011],
        [0.0008, 0.0069],
        [0.0002, 0.0389],
        [0.0014, 0.0469],
        [0.0007, 0.0443],
        [0.0012, 0.0144],
        [0.0011, 0.0073],
        [0.0014, 0.0026],
        [0.0021, 0.0009],
        [0.0026, 0.0011],
        [0.0008, 0.0298],
        [0.0020, 0.0431],
        [0.0012, 0.0146]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0011],
        [0.0030],
        [0.0004],
        [0.0014],
        [0.0024],
        [0.0014],
        [0.0002],
        [0.0007]], device='cuda:0')/tensor([[0.0011, 0.0030, 0.0004, 0.0014, 0.0024, 0.0014, 0.0002, 0.0007]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0008],
        [0.0028],
        [0.0002],
        [0.0301],
        [0.0058],
        [0.0007],
        [0.1369],
        [0.0177]], device='cuda:0')/tensor([[0.0008, 0.0028, 0.0002, 0.0301, 0.0058, 0.0007, 0.1369, 0.0177]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0011, 0.0008],
        [0.0030, 0.0028],
        [0.0004, 0.0002],
        [0.0014, 0.0301],
        [0.0024, 0.0058],
        [0.0014, 0.0007],
        [0.0002, 0.1369],
        [0.0007, 0.0177]], device='cuda:0')
acc:  0.695
Time taken to execute the de SA task with prompt type modal, variation 3 and batchsize 16: 0:03:16.076748
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA modal 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 195.49it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0001],
        [0.0016],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0012],
        [0.0013],
        [0.0001],
        [0.0004],
        [0.0008],
        [0.0001],
        [0.0003],
        [0.0002],
        [0.0001],
        [0.0003]], device='cuda:0')/tensor([[0.0006, 0.0001, 0.0016, 0.0004, 0.0003, 0.0002, 0.0012, 0.0013, 0.0001,
         0.0004, 0.0008, 0.0001, 0.0003, 0.0002, 0.0001, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0102],
        [0.0072],
        [0.0029],
        [0.0023],
        [0.0206],
        [0.0199],
        [0.0168],
        [0.0201],
        [0.0076],
        [0.0416],
        [0.0026],
        [0.0271],
        [0.0263],
        [0.0005],
        [0.0116],
        [0.0010]], device='cuda:0')/tensor([[0.0102, 0.0072, 0.0029, 0.0023, 0.0206, 0.0199, 0.0168, 0.0201, 0.0076,
         0.0416, 0.0026, 0.0271, 0.0263, 0.0005, 0.0116, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0102],
        [0.0001, 0.0072],
        [0.0016, 0.0029],
        [0.0004, 0.0023],
        [0.0003, 0.0206],
        [0.0002, 0.0199],
        [0.0012, 0.0168],
        [0.0013, 0.0201],
        [0.0001, 0.0076],
        [0.0004, 0.0416],
        [0.0008, 0.0026],
        [0.0001, 0.0271],
        [0.0003, 0.0263],
        [0.0002, 0.0005],
        [0.0001, 0.0116],
        [0.0003, 0.0010]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6957e-04],
        [3.0519e-04],
        [2.1207e-04],
        [3.2479e-04],
        [3.6895e-04],
        [6.5224e-04],
        [3.3581e-04],
        [6.5584e-05],
        [5.6601e-04],
        [2.6497e-04],
        [1.6804e-04],
        [1.3251e-04],
        [1.4133e-04],
        [1.8883e-04],
        [2.4524e-04],
        [5.1549e-04]], device='cuda:0')/tensor([[2.6957e-04, 3.0519e-04, 2.1207e-04, 3.2479e-04, 3.6895e-04, 6.5224e-04,
         3.3581e-04, 6.5584e-05, 5.6601e-04, 2.6497e-04, 1.6804e-04, 1.3251e-04,
         1.4133e-04, 1.8883e-04, 2.4524e-04, 5.1549e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0068],
        [0.0011],
        [0.0051],
        [0.0057],
        [0.0003],
        [0.0056],
        [0.0041],
        [0.0010],
        [0.0004],
        [0.0048],
        [0.0047],
        [0.0042],
        [0.0043],
        [0.0093],
        [0.0049]], device='cuda:0')/tensor([[0.0003, 0.0068, 0.0011, 0.0051, 0.0057, 0.0003, 0.0056, 0.0041, 0.0010,
         0.0004, 0.0048, 0.0047, 0.0042, 0.0043, 0.0093, 0.0049]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6957e-04, 3.2384e-04],
        [3.0519e-04, 6.8057e-03],
        [2.1207e-04, 1.0710e-03],
        [3.2479e-04, 5.1091e-03],
        [3.6895e-04, 5.6976e-03],
        [6.5224e-04, 3.3546e-04],
        [3.3581e-04, 5.5631e-03],
        [6.5584e-05, 4.1146e-03],
        [5.6601e-04, 9.8649e-04],
        [2.6497e-04, 3.7258e-04],
        [1.6804e-04, 4.8321e-03],
        [1.3251e-04, 4.6737e-03],
        [1.4133e-04, 4.2021e-03],
        [1.8883e-04, 4.3011e-03],
        [2.4524e-04, 9.2980e-03],
        [5.1549e-04, 4.9237e-03]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.0088e-04],
        [6.0479e-04],
        [2.9545e-04],
        [1.1771e-04],
        [1.3610e-04],
        [5.1823e-04],
        [2.9033e-04],
        [3.0815e-04],
        [1.4412e-04],
        [3.0285e-04],
        [1.8476e-04],
        [9.7299e-05],
        [8.2317e-04],
        [1.3339e-04],
        [3.5271e-04],
        [2.1190e-04]], device='cuda:0')/tensor([[7.0088e-04, 6.0479e-04, 2.9545e-04, 1.1771e-04, 1.3610e-04, 5.1823e-04,
         2.9033e-04, 3.0815e-04, 1.4412e-04, 3.0285e-04, 1.8476e-04, 9.7299e-05,
         8.2317e-04, 1.3339e-04, 3.5271e-04, 2.1190e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.7875e-03],
        [1.4982e-02],
        [8.8778e-04],
        [9.1679e-04],
        [7.5686e-04],
        [1.8335e-03],
        [1.9148e-02],
        [4.3784e-03],
        [9.9884e-05],
        [8.8645e-03],
        [8.6443e-03],
        [1.2521e-03],
        [1.6425e-03],
        [5.0185e-03],
        [1.5871e-03],
        [2.2678e-03]], device='cuda:0')/tensor([[3.7875e-03, 1.4982e-02, 8.8778e-04, 9.1679e-04, 7.5686e-04, 1.8335e-03,
         1.9148e-02, 4.3784e-03, 9.9884e-05, 8.8645e-03, 8.6443e-03, 1.2521e-03,
         1.6425e-03, 5.0185e-03, 1.5871e-03, 2.2678e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.0088e-04, 3.7875e-03],
        [6.0479e-04, 1.4982e-02],
        [2.9545e-04, 8.8778e-04],
        [1.1771e-04, 9.1679e-04],
        [1.3610e-04, 7.5686e-04],
        [5.1823e-04, 1.8335e-03],
        [2.9033e-04, 1.9148e-02],
        [3.0815e-04, 4.3784e-03],
        [1.4412e-04, 9.9884e-05],
        [3.0285e-04, 8.8645e-03],
        [1.8476e-04, 8.6443e-03],
        [9.7299e-05, 1.2521e-03],
        [8.2317e-04, 1.6425e-03],
        [1.3339e-04, 5.0185e-03],
        [3.5271e-04, 1.5871e-03],
        [2.1190e-04, 2.2678e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2437e-04],
        [3.6456e-04],
        [2.2410e-04],
        [1.7265e-04],
        [5.4853e-05],
        [2.0959e-04],
        [9.9273e-05],
        [2.2465e-04],
        [2.6751e-04],
        [7.1178e-04],
        [1.4753e-04],
        [3.7466e-04],
        [2.7250e-04],
        [7.0076e-04],
        [6.2995e-04],
        [4.2281e-04]], device='cuda:0')/tensor([[2.2437e-04, 3.6456e-04, 2.2410e-04, 1.7265e-04, 5.4853e-05, 2.0959e-04,
         9.9273e-05, 2.2465e-04, 2.6751e-04, 7.1178e-04, 1.4753e-04, 3.7466e-04,
         2.7250e-04, 7.0076e-04, 6.2995e-04, 4.2281e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0031],
        [0.0006],
        [0.0083],
        [0.0071],
        [0.0105],
        [0.0001],
        [0.0035],
        [0.0037],
        [0.0294],
        [0.0003],
        [0.0094],
        [0.0042],
        [0.0047],
        [0.0085],
        [0.0012]], device='cuda:0')/tensor([[0.0010, 0.0031, 0.0006, 0.0083, 0.0071, 0.0105, 0.0001, 0.0035, 0.0037,
         0.0294, 0.0003, 0.0094, 0.0042, 0.0047, 0.0085, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2437e-04, 9.8643e-04],
        [3.6456e-04, 3.1285e-03],
        [2.2410e-04, 5.5834e-04],
        [1.7265e-04, 8.2556e-03],
        [5.4853e-05, 7.0781e-03],
        [2.0959e-04, 1.0461e-02],
        [9.9273e-05, 1.3842e-04],
        [2.2465e-04, 3.5037e-03],
        [2.6751e-04, 3.6834e-03],
        [7.1178e-04, 2.9358e-02],
        [1.4753e-04, 2.5691e-04],
        [3.7466e-04, 9.4215e-03],
        [2.7250e-04, 4.1742e-03],
        [7.0076e-04, 4.6714e-03],
        [6.2995e-04, 8.5238e-03],
        [4.2281e-04, 1.2420e-03]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3606e-03],
        [1.0112e-03],
        [6.6258e-05],
        [5.2547e-04],
        [9.9691e-04],
        [5.0266e-04],
        [1.3288e-04],
        [1.0994e-03],
        [4.5409e-04],
        [8.5905e-04],
        [3.4556e-04],
        [1.8095e-03],
        [6.1442e-04],
        [1.1532e-04],
        [2.0330e-04],
        [1.1969e-03]], device='cuda:0')/tensor([[1.3606e-03, 1.0112e-03, 6.6258e-05, 5.2547e-04, 9.9691e-04, 5.0266e-04,
         1.3288e-04, 1.0994e-03, 4.5409e-04, 8.5905e-04, 3.4556e-04, 1.8095e-03,
         6.1442e-04, 1.1532e-04, 2.0330e-04, 1.1969e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0533],
        [0.0197],
        [0.0009],
        [0.0006],
        [0.0014],
        [0.0156],
        [0.0026],
        [0.0057],
        [0.0476],
        [0.0169],
        [0.0003],
        [0.0052],
        [0.0238],
        [0.0048],
        [0.0011],
        [0.0407]], device='cuda:0')/tensor([[0.0533, 0.0197, 0.0009, 0.0006, 0.0014, 0.0156, 0.0026, 0.0057, 0.0476,
         0.0169, 0.0003, 0.0052, 0.0238, 0.0048, 0.0011, 0.0407]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3606e-03, 5.3299e-02],
        [1.0112e-03, 1.9674e-02],
        [6.6258e-05, 8.7131e-04],
        [5.2547e-04, 5.6230e-04],
        [9.9691e-04, 1.3690e-03],
        [5.0266e-04, 1.5627e-02],
        [1.3288e-04, 2.6098e-03],
        [1.0994e-03, 5.7275e-03],
        [4.5409e-04, 4.7594e-02],
        [8.5905e-04, 1.6850e-02],
        [3.4556e-04, 3.3570e-04],
        [1.8095e-03, 5.2391e-03],
        [6.1442e-04, 2.3769e-02],
        [1.1532e-04, 4.8324e-03],
        [2.0330e-04, 1.0689e-03],
        [1.1969e-03, 4.0694e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.4957e-04],
        [3.8694e-04],
        [4.8796e-04],
        [6.2452e-04],
        [5.5051e-04],
        [9.0753e-05],
        [9.7505e-04],
        [3.2840e-04],
        [7.9271e-04],
        [5.9728e-04],
        [8.3446e-04],
        [4.9404e-04],
        [2.4888e-04],
        [1.6314e-04],
        [6.0325e-05],
        [1.4971e-03]], device='cuda:0')/tensor([[8.4957e-04, 3.8694e-04, 4.8796e-04, 6.2452e-04, 5.5051e-04, 9.0753e-05,
         9.7505e-04, 3.2840e-04, 7.9271e-04, 5.9728e-04, 8.3446e-04, 4.9404e-04,
         2.4888e-04, 1.6314e-04, 6.0325e-05, 1.4971e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0008],
        [0.0024],
        [0.0010],
        [0.0022],
        [0.0003],
        [0.0155],
        [0.0079],
        [0.0221],
        [0.0016],
        [0.0030],
        [0.0178],
        [0.0011],
        [0.0003],
        [0.0122],
        [0.0988]], device='cuda:0')/tensor([[0.0025, 0.0008, 0.0024, 0.0010, 0.0022, 0.0003, 0.0155, 0.0079, 0.0221,
         0.0016, 0.0030, 0.0178, 0.0011, 0.0003, 0.0122, 0.0988]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.4957e-04, 2.4589e-03],
        [3.8694e-04, 7.6352e-04],
        [4.8796e-04, 2.3660e-03],
        [6.2452e-04, 9.9173e-04],
        [5.5051e-04, 2.1911e-03],
        [9.0753e-05, 3.0187e-04],
        [9.7505e-04, 1.5546e-02],
        [3.2840e-04, 7.8988e-03],
        [7.9271e-04, 2.2063e-02],
        [5.9728e-04, 1.6253e-03],
        [8.3446e-04, 2.9673e-03],
        [4.9404e-04, 1.7848e-02],
        [2.4888e-04, 1.0795e-03],
        [1.6314e-04, 3.4804e-04],
        [6.0325e-05, 1.2248e-02],
        [1.4971e-03, 9.8764e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0003],
        [0.0013],
        [0.0001],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0001],
        [0.0002],
        [0.0006],
        [0.0009],
        [0.0001],
        [0.0011],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0003, 0.0013, 0.0001, 0.0004, 0.0001, 0.0003, 0.0001,
         0.0002, 0.0006, 0.0009, 0.0001, 0.0011, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0093],
        [0.0102],
        [0.0128],
        [0.0088],
        [0.0004],
        [0.0026],
        [0.0110],
        [0.0099],
        [0.0026],
        [0.0075],
        [0.0196],
        [0.0079],
        [0.0091],
        [0.0009],
        [0.0013],
        [0.0017]], device='cuda:0')/tensor([[0.0093, 0.0102, 0.0128, 0.0088, 0.0004, 0.0026, 0.0110, 0.0099, 0.0026,
         0.0075, 0.0196, 0.0079, 0.0091, 0.0009, 0.0013, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0093],
        [0.0003, 0.0102],
        [0.0003, 0.0128],
        [0.0013, 0.0088],
        [0.0001, 0.0004],
        [0.0004, 0.0026],
        [0.0001, 0.0110],
        [0.0003, 0.0099],
        [0.0001, 0.0026],
        [0.0002, 0.0075],
        [0.0006, 0.0196],
        [0.0009, 0.0079],
        [0.0001, 0.0091],
        [0.0011, 0.0009],
        [0.0004, 0.0013],
        [0.0002, 0.0017]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0009],
        [0.0002],
        [0.0001],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0024],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0004, 0.0003, 0.0009, 0.0002, 0.0001, 0.0003, 0.0003,
         0.0006, 0.0007, 0.0004, 0.0006, 0.0003, 0.0024, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0113],
        [0.0002],
        [0.0127],
        [0.0071],
        [0.0247],
        [0.0002],
        [0.0098],
        [0.0017],
        [0.0003],
        [0.0380],
        [0.0088],
        [0.0009],
        [0.0027],
        [0.0104],
        [0.0073],
        [0.0152]], device='cuda:0')/tensor([[0.0113, 0.0002, 0.0127, 0.0071, 0.0247, 0.0002, 0.0098, 0.0017, 0.0003,
         0.0380, 0.0088, 0.0009, 0.0027, 0.0104, 0.0073, 0.0152]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0113],
        [0.0002, 0.0002],
        [0.0004, 0.0127],
        [0.0003, 0.0071],
        [0.0009, 0.0247],
        [0.0002, 0.0002],
        [0.0001, 0.0098],
        [0.0003, 0.0017],
        [0.0003, 0.0003],
        [0.0006, 0.0380],
        [0.0007, 0.0088],
        [0.0004, 0.0009],
        [0.0006, 0.0027],
        [0.0003, 0.0104],
        [0.0024, 0.0073],
        [0.0003, 0.0152]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0012],
        [0.0002],
        [0.0002],
        [0.0019],
        [0.0005],
        [0.0003],
        [0.0022],
        [0.0008],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0002],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0012, 0.0002, 0.0002, 0.0019, 0.0005, 0.0003, 0.0022, 0.0008,
         0.0002, 0.0005, 0.0004, 0.0002, 0.0007, 0.0002, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0047],
        [0.0138],
        [0.0004],
        [0.0169],
        [0.0250],
        [0.0026],
        [0.0064],
        [0.0107],
        [0.0377],
        [0.0160],
        [0.0021],
        [0.0016],
        [0.0018],
        [0.0012],
        [0.0282],
        [0.0008]], device='cuda:0')/tensor([[0.0047, 0.0138, 0.0004, 0.0169, 0.0250, 0.0026, 0.0064, 0.0107, 0.0377,
         0.0160, 0.0021, 0.0016, 0.0018, 0.0012, 0.0282, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0047],
        [0.0012, 0.0138],
        [0.0002, 0.0004],
        [0.0002, 0.0169],
        [0.0019, 0.0250],
        [0.0005, 0.0026],
        [0.0003, 0.0064],
        [0.0022, 0.0107],
        [0.0008, 0.0377],
        [0.0002, 0.0160],
        [0.0005, 0.0021],
        [0.0004, 0.0016],
        [0.0002, 0.0018],
        [0.0007, 0.0012],
        [0.0002, 0.0282],
        [0.0001, 0.0008]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.4998e-04],
        [3.6667e-04],
        [1.3363e-04],
        [2.2881e-04],
        [1.7590e-04],
        [1.7758e-03],
        [6.3885e-04],
        [4.2910e-04],
        [8.3659e-04],
        [2.5618e-04],
        [7.2625e-04],
        [3.3397e-04],
        [2.5562e-04],
        [7.2685e-05],
        [3.7423e-04],
        [1.2275e-03]], device='cuda:0')/tensor([[4.4998e-04, 3.6667e-04, 1.3363e-04, 2.2881e-04, 1.7590e-04, 1.7758e-03,
         6.3885e-04, 4.2910e-04, 8.3659e-04, 2.5618e-04, 7.2625e-04, 3.3397e-04,
         2.5562e-04, 7.2685e-05, 3.7423e-04, 1.2275e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0017],
        [0.0032],
        [0.0102],
        [0.0012],
        [0.0100],
        [0.0039],
        [0.0648],
        [0.0331],
        [0.0017],
        [0.0021],
        [0.0068],
        [0.0149],
        [0.0030],
        [0.0072],
        [0.0216],
        [0.0033]], device='cuda:0')/tensor([[0.0017, 0.0032, 0.0102, 0.0012, 0.0100, 0.0039, 0.0648, 0.0331, 0.0017,
         0.0021, 0.0068, 0.0149, 0.0030, 0.0072, 0.0216, 0.0033]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4998e-04, 1.7297e-03],
        [3.6667e-04, 3.1570e-03],
        [1.3363e-04, 1.0192e-02],
        [2.2881e-04, 1.2042e-03],
        [1.7590e-04, 1.0008e-02],
        [1.7758e-03, 3.9010e-03],
        [6.3885e-04, 6.4825e-02],
        [4.2910e-04, 3.3059e-02],
        [8.3659e-04, 1.6960e-03],
        [2.5618e-04, 2.1040e-03],
        [7.2625e-04, 6.7680e-03],
        [3.3397e-04, 1.4878e-02],
        [2.5562e-04, 2.9667e-03],
        [7.2685e-05, 7.2442e-03],
        [3.7423e-04, 2.1596e-02],
        [1.2275e-03, 3.3006e-03]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.4832e-04],
        [2.9132e-04],
        [6.6254e-05],
        [5.4470e-04],
        [1.9933e-04],
        [4.9717e-04],
        [1.3296e-03],
        [2.3961e-04],
        [3.1836e-04],
        [5.3883e-04],
        [1.0822e-03],
        [2.5345e-04],
        [1.1582e-03],
        [3.2881e-04],
        [3.1165e-04],
        [1.5319e-03]], device='cuda:0')/tensor([[4.4832e-04, 2.9132e-04, 6.6254e-05, 5.4470e-04, 1.9933e-04, 4.9717e-04,
         1.3296e-03, 2.3961e-04, 3.1836e-04, 5.3883e-04, 1.0822e-03, 2.5345e-04,
         1.1582e-03, 3.2881e-04, 3.1165e-04, 1.5319e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0480],
        [0.0154],
        [0.0012],
        [0.0126],
        [0.0040],
        [0.0294],
        [0.0066],
        [0.0005],
        [0.0035],
        [0.0162],
        [0.0244],
        [0.0120],
        [0.0085],
        [0.0117],
        [0.0299],
        [0.0265]], device='cuda:0')/tensor([[0.0480, 0.0154, 0.0012, 0.0126, 0.0040, 0.0294, 0.0066, 0.0005, 0.0035,
         0.0162, 0.0244, 0.0120, 0.0085, 0.0117, 0.0299, 0.0265]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4832e-04, 4.7995e-02],
        [2.9132e-04, 1.5408e-02],
        [6.6254e-05, 1.1726e-03],
        [5.4470e-04, 1.2568e-02],
        [1.9933e-04, 4.0365e-03],
        [4.9717e-04, 2.9368e-02],
        [1.3296e-03, 6.5539e-03],
        [2.3961e-04, 4.6568e-04],
        [3.1836e-04, 3.4890e-03],
        [5.3883e-04, 1.6242e-02],
        [1.0822e-03, 2.4426e-02],
        [2.5345e-04, 1.2045e-02],
        [1.1582e-03, 8.5333e-03],
        [3.2881e-04, 1.1696e-02],
        [3.1165e-04, 2.9949e-02],
        [1.5319e-03, 2.6476e-02]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0001],
        [0.0003],
        [0.0008],
        [0.0030],
        [0.0003],
        [0.0011],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0007]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0004, 0.0005, 0.0004, 0.0003, 0.0001, 0.0003, 0.0008,
         0.0030, 0.0003, 0.0011, 0.0005, 0.0004, 0.0003, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0023],
        [0.0046],
        [0.0077],
        [0.0051],
        [0.0019],
        [0.0055],
        [0.0253],
        [0.0118],
        [0.0555],
        [0.0004],
        [0.0027],
        [0.0251],
        [0.0218],
        [0.0056],
        [0.0007]], device='cuda:0')/tensor([[0.0012, 0.0023, 0.0046, 0.0077, 0.0051, 0.0019, 0.0055, 0.0253, 0.0118,
         0.0555, 0.0004, 0.0027, 0.0251, 0.0218, 0.0056, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0012],
        [0.0002, 0.0023],
        [0.0004, 0.0046],
        [0.0005, 0.0077],
        [0.0004, 0.0051],
        [0.0003, 0.0019],
        [0.0001, 0.0055],
        [0.0003, 0.0253],
        [0.0008, 0.0118],
        [0.0030, 0.0555],
        [0.0003, 0.0004],
        [0.0011, 0.0027],
        [0.0005, 0.0251],
        [0.0004, 0.0218],
        [0.0003, 0.0056],
        [0.0007, 0.0007]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0012],
        [0.0001],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0001],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0001, 0.0003, 0.0004, 0.0002, 0.0001, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0032],
        [0.0047],
        [0.1212],
        [0.0164],
        [0.0007],
        [0.0015],
        [0.0074],
        [0.0009]], device='cuda:0')/tensor([[0.0032, 0.0047, 0.1212, 0.0164, 0.0007, 0.0015, 0.0074, 0.0009]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0012, 0.0032],
        [0.0001, 0.0047],
        [0.0003, 0.1212],
        [0.0004, 0.0164],
        [0.0002, 0.0007],
        [0.0001, 0.0015],
        [0.0003, 0.0074],
        [0.0006, 0.0009]], device='cuda:0')
acc:  0.525
Time taken to execute the de SA task with prompt type modal, variation 4 and batchsize 16: 0:03:15.342880
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA modal 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 346.78it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0027],
        [0.0006],
        [0.0005],
        [0.0011],
        [0.0007],
        [0.0010],
        [0.0012],
        [0.0005],
        [0.0021],
        [0.0003],
        [0.0002],
        [0.0008],
        [0.0004],
        [0.0011],
        [0.0002]], device='cuda:0')/tensor([[0.0006, 0.0027, 0.0006, 0.0005, 0.0011, 0.0007, 0.0010, 0.0012, 0.0005,
         0.0021, 0.0003, 0.0002, 0.0008, 0.0004, 0.0011, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0033],
        [0.0034],
        [0.0220],
        [0.0007],
        [0.0023],
        [0.0120],
        [0.0028],
        [0.0227],
        [0.0062],
        [0.0537],
        [0.0001],
        [0.0462],
        [0.0004],
        [0.0227],
        [0.0293],
        [0.0233]], device='cuda:0')/tensor([[0.0033, 0.0034, 0.0220, 0.0007, 0.0023, 0.0120, 0.0028, 0.0227, 0.0062,
         0.0537, 0.0001, 0.0462, 0.0004, 0.0227, 0.0293, 0.0233]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0033],
        [0.0027, 0.0034],
        [0.0006, 0.0220],
        [0.0005, 0.0007],
        [0.0011, 0.0023],
        [0.0007, 0.0120],
        [0.0010, 0.0028],
        [0.0012, 0.0227],
        [0.0005, 0.0062],
        [0.0021, 0.0537],
        [0.0003, 0.0001],
        [0.0002, 0.0462],
        [0.0008, 0.0004],
        [0.0004, 0.0227],
        [0.0011, 0.0293],
        [0.0002, 0.0233]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0004],
        [0.0005],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0013],
        [0.0013],
        [0.0011],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0004, 0.0005, 0.0008, 0.0004, 0.0006, 0.0002, 0.0003,
         0.0002, 0.0002, 0.0004, 0.0013, 0.0013, 0.0011, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0055],
        [0.0100],
        [0.0119],
        [0.0203],
        [0.0170],
        [0.0034],
        [0.0127],
        [0.0023],
        [0.0138],
        [0.0321],
        [0.0097],
        [0.0041],
        [0.0541],
        [0.0086],
        [0.0106],
        [0.0009]], device='cuda:0')/tensor([[0.0055, 0.0100, 0.0119, 0.0203, 0.0170, 0.0034, 0.0127, 0.0023, 0.0138,
         0.0321, 0.0097, 0.0041, 0.0541, 0.0086, 0.0106, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0055],
        [0.0003, 0.0100],
        [0.0004, 0.0119],
        [0.0005, 0.0203],
        [0.0008, 0.0170],
        [0.0004, 0.0034],
        [0.0006, 0.0127],
        [0.0002, 0.0023],
        [0.0003, 0.0138],
        [0.0002, 0.0321],
        [0.0002, 0.0097],
        [0.0004, 0.0041],
        [0.0013, 0.0541],
        [0.0013, 0.0086],
        [0.0011, 0.0106],
        [0.0007, 0.0009]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0020],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0010],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0015],
        [0.0006],
        [0.0008],
        [0.0021],
        [0.0010],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0020, 0.0003, 0.0004, 0.0007, 0.0010, 0.0002, 0.0005, 0.0004,
         0.0005, 0.0015, 0.0006, 0.0008, 0.0021, 0.0010, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0034],
        [0.0131],
        [0.0372],
        [0.0056],
        [0.0009],
        [0.0037],
        [0.0023],
        [0.0036],
        [0.0051],
        [0.0025],
        [0.0303],
        [0.0064],
        [0.0022],
        [0.0036],
        [0.0001]], device='cuda:0')/tensor([[0.0006, 0.0034, 0.0131, 0.0372, 0.0056, 0.0009, 0.0037, 0.0023, 0.0036,
         0.0051, 0.0025, 0.0303, 0.0064, 0.0022, 0.0036, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0006],
        [0.0020, 0.0034],
        [0.0003, 0.0131],
        [0.0004, 0.0372],
        [0.0007, 0.0056],
        [0.0010, 0.0009],
        [0.0002, 0.0037],
        [0.0005, 0.0023],
        [0.0004, 0.0036],
        [0.0005, 0.0051],
        [0.0015, 0.0025],
        [0.0006, 0.0303],
        [0.0008, 0.0064],
        [0.0021, 0.0022],
        [0.0010, 0.0036],
        [0.0002, 0.0001]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0012],
        [0.0016],
        [0.0011],
        [0.0002],
        [0.0017],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0011],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0007, 0.0008, 0.0012, 0.0016, 0.0011, 0.0002, 0.0017,
         0.0004, 0.0003, 0.0004, 0.0007, 0.0011, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0092],
        [0.0021],
        [0.0354],
        [0.0098],
        [0.0503],
        [0.0011],
        [0.0006],
        [0.0219],
        [0.0021],
        [0.0096],
        [0.0244],
        [0.0024],
        [0.0442],
        [0.0175],
        [0.0099]], device='cuda:0')/tensor([[0.0016, 0.0092, 0.0021, 0.0354, 0.0098, 0.0503, 0.0011, 0.0006, 0.0219,
         0.0021, 0.0096, 0.0244, 0.0024, 0.0442, 0.0175, 0.0099]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0016],
        [0.0005, 0.0092],
        [0.0007, 0.0021],
        [0.0008, 0.0354],
        [0.0012, 0.0098],
        [0.0016, 0.0503],
        [0.0011, 0.0011],
        [0.0002, 0.0006],
        [0.0017, 0.0219],
        [0.0004, 0.0021],
        [0.0003, 0.0096],
        [0.0004, 0.0244],
        [0.0007, 0.0024],
        [0.0011, 0.0442],
        [0.0004, 0.0175],
        [0.0003, 0.0099]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0001],
        [0.0005],
        [0.0011],
        [0.0006],
        [0.0004],
        [0.0007],
        [0.0013],
        [0.0019],
        [0.0002],
        [0.0017],
        [0.0007],
        [0.0008],
        [0.0015],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0007, 0.0001, 0.0005, 0.0011, 0.0006, 0.0004, 0.0007, 0.0013, 0.0019,
         0.0002, 0.0017, 0.0007, 0.0008, 0.0015, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0021],
        [0.0002],
        [0.0282],
        [0.0048],
        [0.0058],
        [0.0002],
        [0.0891],
        [0.0020],
        [0.0924],
        [0.0403],
        [0.0146],
        [0.0079],
        [0.0116],
        [0.0019],
        [0.0010],
        [0.0052]], device='cuda:0')/tensor([[0.0021, 0.0002, 0.0282, 0.0048, 0.0058, 0.0002, 0.0891, 0.0020, 0.0924,
         0.0403, 0.0146, 0.0079, 0.0116, 0.0019, 0.0010, 0.0052]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0021],
        [0.0001, 0.0002],
        [0.0005, 0.0282],
        [0.0011, 0.0048],
        [0.0006, 0.0058],
        [0.0004, 0.0002],
        [0.0007, 0.0891],
        [0.0013, 0.0020],
        [0.0019, 0.0924],
        [0.0002, 0.0403],
        [0.0017, 0.0146],
        [0.0007, 0.0079],
        [0.0008, 0.0116],
        [0.0015, 0.0019],
        [0.0004, 0.0010],
        [0.0002, 0.0052]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0002],
        [0.0014],
        [0.0003],
        [0.0015],
        [0.0004],
        [0.0034],
        [0.0058],
        [0.0006],
        [0.0003],
        [0.0014],
        [0.0016],
        [0.0004],
        [0.0006],
        [0.0001],
        [0.0009]], device='cuda:0')/tensor([[0.0009, 0.0002, 0.0014, 0.0003, 0.0015, 0.0004, 0.0034, 0.0058, 0.0006,
         0.0003, 0.0014, 0.0016, 0.0004, 0.0006, 0.0001, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0550],
        [0.0019],
        [0.0256],
        [0.0034],
        [0.0015],
        [0.0014],
        [0.0081],
        [0.0647],
        [0.0017],
        [0.0002],
        [0.0036],
        [0.1369],
        [0.0185],
        [0.0035],
        [0.0128],
        [0.0053]], device='cuda:0')/tensor([[0.0550, 0.0019, 0.0256, 0.0034, 0.0015, 0.0014, 0.0081, 0.0647, 0.0017,
         0.0002, 0.0036, 0.1369, 0.0185, 0.0035, 0.0128, 0.0053]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.5260e-04, 5.5037e-02],
        [1.9046e-04, 1.9183e-03],
        [1.4161e-03, 2.5576e-02],
        [2.8955e-04, 3.3862e-03],
        [1.4666e-03, 1.4768e-03],
        [4.1409e-04, 1.3572e-03],
        [3.4261e-03, 8.0805e-03],
        [5.7960e-03, 6.4683e-02],
        [5.9514e-04, 1.7336e-03],
        [3.4009e-04, 1.9265e-04],
        [1.4167e-03, 3.6065e-03],
        [1.6087e-03, 1.3687e-01],
        [4.2702e-04, 1.8485e-02],
        [6.4707e-04, 3.5197e-03],
        [1.0221e-04, 1.2772e-02],
        [8.9845e-04, 5.2807e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0007],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0022],
        [0.0004],
        [0.0010],
        [0.0028],
        [0.0004],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0006, 0.0005, 0.0005, 0.0006, 0.0007, 0.0011, 0.0005, 0.0003, 0.0004,
         0.0022, 0.0004, 0.0010, 0.0028, 0.0004, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0377],
        [0.0187],
        [0.0557],
        [0.0022],
        [0.0012],
        [0.0190],
        [0.0470],
        [0.0790],
        [0.0076],
        [0.1037],
        [0.0111],
        [0.0235],
        [0.0030],
        [0.0026],
        [0.0978],
        [0.0174]], device='cuda:0')/tensor([[0.0377, 0.0187, 0.0557, 0.0022, 0.0012, 0.0190, 0.0470, 0.0790, 0.0076,
         0.1037, 0.0111, 0.0235, 0.0030, 0.0026, 0.0978, 0.0174]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0377],
        [0.0005, 0.0187],
        [0.0005, 0.0557],
        [0.0006, 0.0022],
        [0.0007, 0.0012],
        [0.0011, 0.0190],
        [0.0005, 0.0470],
        [0.0003, 0.0790],
        [0.0004, 0.0076],
        [0.0022, 0.1037],
        [0.0004, 0.0111],
        [0.0010, 0.0235],
        [0.0028, 0.0030],
        [0.0004, 0.0026],
        [0.0008, 0.0978],
        [0.0007, 0.0174]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0006],
        [0.0005],
        [0.0017],
        [0.0014],
        [0.0007],
        [0.0005],
        [0.0004],
        [0.0008],
        [0.0005],
        [0.0005],
        [0.0024],
        [0.0010],
        [0.0007],
        [0.0011],
        [0.0005]], device='cuda:0')/tensor([[0.0009, 0.0006, 0.0005, 0.0017, 0.0014, 0.0007, 0.0005, 0.0004, 0.0008,
         0.0005, 0.0005, 0.0024, 0.0010, 0.0007, 0.0011, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0147],
        [0.0074],
        [0.0074],
        [0.0031],
        [0.0022],
        [0.0289],
        [0.0007],
        [0.0017],
        [0.1341],
        [0.0075],
        [0.0439],
        [0.0122],
        [0.0014],
        [0.1456],
        [0.0192]], device='cuda:0')/tensor([[0.0011, 0.0147, 0.0074, 0.0074, 0.0031, 0.0022, 0.0289, 0.0007, 0.0017,
         0.1341, 0.0075, 0.0439, 0.0122, 0.0014, 0.1456, 0.0192]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0011],
        [0.0006, 0.0147],
        [0.0005, 0.0074],
        [0.0017, 0.0074],
        [0.0014, 0.0031],
        [0.0007, 0.0022],
        [0.0005, 0.0289],
        [0.0004, 0.0007],
        [0.0008, 0.0017],
        [0.0005, 0.1341],
        [0.0005, 0.0075],
        [0.0024, 0.0439],
        [0.0010, 0.0122],
        [0.0007, 0.0014],
        [0.0011, 0.1456],
        [0.0005, 0.0192]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0007],
        [0.0006],
        [0.0008],
        [0.0015],
        [0.0008],
        [0.0005],
        [0.0030],
        [0.0008],
        [0.0004],
        [0.0012],
        [0.0007],
        [0.0031],
        [0.0015],
        [0.0004],
        [0.0014]], device='cuda:0')/tensor([[0.0003, 0.0007, 0.0006, 0.0008, 0.0015, 0.0008, 0.0005, 0.0030, 0.0008,
         0.0004, 0.0012, 0.0007, 0.0031, 0.0015, 0.0004, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0208],
        [0.0129],
        [0.0018],
        [0.0650],
        [0.0086],
        [0.0360],
        [0.0055],
        [0.0067],
        [0.0421],
        [0.0086],
        [0.0018],
        [0.0349],
        [0.0048],
        [0.0021],
        [0.0006],
        [0.0009]], device='cuda:0')/tensor([[0.0208, 0.0129, 0.0018, 0.0650, 0.0086, 0.0360, 0.0055, 0.0067, 0.0421,
         0.0086, 0.0018, 0.0349, 0.0048, 0.0021, 0.0006, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0208],
        [0.0007, 0.0129],
        [0.0006, 0.0018],
        [0.0008, 0.0650],
        [0.0015, 0.0086],
        [0.0008, 0.0360],
        [0.0005, 0.0055],
        [0.0030, 0.0067],
        [0.0008, 0.0421],
        [0.0004, 0.0086],
        [0.0012, 0.0018],
        [0.0007, 0.0349],
        [0.0031, 0.0048],
        [0.0015, 0.0021],
        [0.0004, 0.0006],
        [0.0014, 0.0009]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0020],
        [0.0001],
        [0.0002],
        [0.0003],
        [0.0007],
        [0.0013],
        [0.0013],
        [0.0014],
        [0.0005],
        [0.0015],
        [0.0002],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0020, 0.0001, 0.0002, 0.0003, 0.0007, 0.0013, 0.0013, 0.0014,
         0.0005, 0.0015, 0.0002, 0.0010, 0.0005, 0.0005, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0137],
        [0.0023],
        [0.0181],
        [0.0098],
        [0.0032],
        [0.0191],
        [0.0359],
        [0.0045],
        [0.0098],
        [0.0245],
        [0.0100],
        [0.0003],
        [0.0561],
        [0.0012],
        [0.0091]], device='cuda:0')/tensor([[0.0008, 0.0137, 0.0023, 0.0181, 0.0098, 0.0032, 0.0191, 0.0359, 0.0045,
         0.0098, 0.0245, 0.0100, 0.0003, 0.0561, 0.0012, 0.0091]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0008],
        [0.0020, 0.0137],
        [0.0001, 0.0023],
        [0.0002, 0.0181],
        [0.0003, 0.0098],
        [0.0007, 0.0032],
        [0.0013, 0.0191],
        [0.0013, 0.0359],
        [0.0014, 0.0045],
        [0.0005, 0.0098],
        [0.0015, 0.0245],
        [0.0002, 0.0100],
        [0.0010, 0.0003],
        [0.0005, 0.0561],
        [0.0005, 0.0012],
        [0.0003, 0.0091]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0010],
        [0.0006],
        [0.0004],
        [0.0014],
        [0.0024],
        [0.0009],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0025],
        [0.0005],
        [0.0007],
        [0.0005],
        [0.0006],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0006, 0.0004, 0.0014, 0.0024, 0.0009, 0.0003, 0.0003,
         0.0003, 0.0025, 0.0005, 0.0007, 0.0005, 0.0006, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0045],
        [0.0005],
        [0.0028],
        [0.0021],
        [0.0244],
        [0.0286],
        [0.0046],
        [0.0002],
        [0.0175],
        [0.0064],
        [0.0205],
        [0.0052],
        [0.0140],
        [0.0069],
        [0.0008],
        [0.0010]], device='cuda:0')/tensor([[0.0045, 0.0005, 0.0028, 0.0021, 0.0244, 0.0286, 0.0046, 0.0002, 0.0175,
         0.0064, 0.0205, 0.0052, 0.0140, 0.0069, 0.0008, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0045],
        [0.0010, 0.0005],
        [0.0006, 0.0028],
        [0.0004, 0.0021],
        [0.0014, 0.0244],
        [0.0024, 0.0286],
        [0.0009, 0.0046],
        [0.0003, 0.0002],
        [0.0003, 0.0175],
        [0.0003, 0.0064],
        [0.0025, 0.0205],
        [0.0005, 0.0052],
        [0.0007, 0.0140],
        [0.0005, 0.0069],
        [0.0006, 0.0008],
        [0.0006, 0.0010]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0008],
        [0.0011],
        [0.0003],
        [0.0007],
        [0.0003],
        [0.0015],
        [0.0005],
        [0.0001],
        [0.0005],
        [0.0003]], device='cuda:0')/tensor([[0.0017, 0.0004, 0.0004, 0.0003, 0.0003, 0.0006, 0.0008, 0.0011, 0.0003,
         0.0007, 0.0003, 0.0015, 0.0005, 0.0001, 0.0005, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0252],
        [0.0004],
        [0.0177],
        [0.0004],
        [0.0004],
        [0.0363],
        [0.0293],
        [0.0930],
        [0.0088],
        [0.0042],
        [0.0070],
        [0.0784],
        [0.0002],
        [0.0099],
        [0.0018],
        [0.0002]], device='cuda:0')/tensor([[0.0252, 0.0004, 0.0177, 0.0004, 0.0004, 0.0363, 0.0293, 0.0930, 0.0088,
         0.0042, 0.0070, 0.0784, 0.0002, 0.0099, 0.0018, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0252],
        [0.0004, 0.0004],
        [0.0004, 0.0177],
        [0.0003, 0.0004],
        [0.0003, 0.0004],
        [0.0006, 0.0363],
        [0.0008, 0.0293],
        [0.0011, 0.0930],
        [0.0003, 0.0088],
        [0.0007, 0.0042],
        [0.0003, 0.0070],
        [0.0015, 0.0784],
        [0.0005, 0.0002],
        [0.0001, 0.0099],
        [0.0005, 0.0018],
        [0.0003, 0.0002]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0001],
        [0.0009],
        [0.0004],
        [0.0014],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0001, 0.0009, 0.0004, 0.0014, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0055],
        [0.0010],
        [0.0164],
        [0.0029],
        [0.0098],
        [0.0120],
        [0.0045],
        [0.0170]], device='cuda:0')/tensor([[0.0055, 0.0010, 0.0164, 0.0029, 0.0098, 0.0120, 0.0045, 0.0170]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0055],
        [0.0005, 0.0010],
        [0.0001, 0.0164],
        [0.0009, 0.0029],
        [0.0004, 0.0098],
        [0.0014, 0.0120],
        [0.0002, 0.0045],
        [0.0003, 0.0170]], device='cuda:0')
acc:  0.56
Time taken to execute the de SA task with prompt type modal, variation 5 and batchsize 16: 0:03:16.651363
path ['42', 'de', 'flan', 'SA', 'modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA common 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 335.04it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0007],
        [0.0010],
        [0.0006],
        [0.0015],
        [0.0027],
        [0.0033],
        [0.0011],
        [0.0006],
        [0.0013],
        [0.0008],
        [0.0002],
        [0.0008],
        [0.0025],
        [0.0017],
        [0.0014]], device='cuda:0')/tensor([[0.0011, 0.0007, 0.0010, 0.0006, 0.0015, 0.0027, 0.0033, 0.0011, 0.0006,
         0.0013, 0.0008, 0.0002, 0.0008, 0.0025, 0.0017, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0956],
        [0.0890],
        [0.0009],
        [0.0051],
        [0.1411],
        [0.0182],
        [0.1260],
        [0.0150],
        [0.1163],
        [0.0978],
        [0.0149],
        [0.0016],
        [0.0509],
        [0.0190],
        [0.1128],
        [0.2049]], device='cuda:0')/tensor([[0.0956, 0.0890, 0.0009, 0.0051, 0.1411, 0.0182, 0.1260, 0.0150, 0.1163,
         0.0978, 0.0149, 0.0016, 0.0509, 0.0190, 0.1128, 0.2049]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0956],
        [0.0007, 0.0890],
        [0.0010, 0.0009],
        [0.0006, 0.0051],
        [0.0015, 0.1411],
        [0.0027, 0.0182],
        [0.0033, 0.1260],
        [0.0011, 0.0150],
        [0.0006, 0.1163],
        [0.0013, 0.0978],
        [0.0008, 0.0149],
        [0.0002, 0.0016],
        [0.0008, 0.0509],
        [0.0025, 0.0190],
        [0.0017, 0.1128],
        [0.0014, 0.2049]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0037],
        [0.0008],
        [0.0015],
        [0.0005],
        [0.0005],
        [0.0018],
        [0.0003],
        [0.0020],
        [0.0041],
        [0.0011],
        [0.0012],
        [0.0010],
        [0.0007],
        [0.0011],
        [0.0017],
        [0.0017]], device='cuda:0')/tensor([[0.0037, 0.0008, 0.0015, 0.0005, 0.0005, 0.0018, 0.0003, 0.0020, 0.0041,
         0.0011, 0.0012, 0.0010, 0.0007, 0.0011, 0.0017, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0158],
        [0.1548],
        [0.0050],
        [0.0039],
        [0.0033],
        [0.0066],
        [0.0650],
        [0.0748],
        [0.0501],
        [0.0164],
        [0.0602],
        [0.0254],
        [0.0786],
        [0.0385],
        [0.0922],
        [0.0072]], device='cuda:0')/tensor([[0.0158, 0.1548, 0.0050, 0.0039, 0.0033, 0.0066, 0.0650, 0.0748, 0.0501,
         0.0164, 0.0602, 0.0254, 0.0786, 0.0385, 0.0922, 0.0072]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0037, 0.0158],
        [0.0008, 0.1548],
        [0.0015, 0.0050],
        [0.0005, 0.0039],
        [0.0005, 0.0033],
        [0.0018, 0.0066],
        [0.0003, 0.0650],
        [0.0020, 0.0748],
        [0.0041, 0.0501],
        [0.0011, 0.0164],
        [0.0012, 0.0602],
        [0.0010, 0.0254],
        [0.0007, 0.0786],
        [0.0011, 0.0385],
        [0.0017, 0.0922],
        [0.0017, 0.0072]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0006],
        [0.0011],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0009],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0014],
        [0.0015],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0014, 0.0006, 0.0011, 0.0004, 0.0002, 0.0005, 0.0009, 0.0011, 0.0005,
         0.0003, 0.0002, 0.0002, 0.0014, 0.0015, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0758],
        [0.0055],
        [0.0244],
        [0.0123],
        [0.0002],
        [0.0516],
        [0.0445],
        [0.0931],
        [0.0261],
        [0.0001],
        [0.0007],
        [0.0657],
        [0.0007],
        [0.0731],
        [0.0079],
        [0.0013]], device='cuda:0')/tensor([[0.0758, 0.0055, 0.0244, 0.0123, 0.0002, 0.0516, 0.0445, 0.0931, 0.0261,
         0.0001, 0.0007, 0.0657, 0.0007, 0.0731, 0.0079, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0758],
        [0.0006, 0.0055],
        [0.0011, 0.0244],
        [0.0004, 0.0123],
        [0.0002, 0.0002],
        [0.0005, 0.0516],
        [0.0009, 0.0445],
        [0.0011, 0.0931],
        [0.0005, 0.0261],
        [0.0003, 0.0001],
        [0.0002, 0.0007],
        [0.0002, 0.0657],
        [0.0014, 0.0007],
        [0.0015, 0.0731],
        [0.0006, 0.0079],
        [0.0005, 0.0013]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0022],
        [0.0006],
        [0.0005],
        [0.0031],
        [0.0008],
        [0.0007],
        [0.0016],
        [0.0009],
        [0.0009],
        [0.0010],
        [0.0046],
        [0.0027],
        [0.0002],
        [0.0011],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0022, 0.0006, 0.0005, 0.0031, 0.0008, 0.0007, 0.0016, 0.0009,
         0.0009, 0.0010, 0.0046, 0.0027, 0.0002, 0.0011, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4518e-04],
        [1.3810e-01],
        [2.8146e-02],
        [1.8967e-02],
        [3.9050e-02],
        [7.3543e-03],
        [4.7346e-02],
        [1.0274e-01],
        [1.6822e-03],
        [4.8791e-03],
        [3.2758e-03],
        [8.7738e-02],
        [5.7275e-02],
        [1.7819e-01],
        [5.7655e-02],
        [9.5807e-02]], device='cuda:0')/tensor([[1.4518e-04, 1.3810e-01, 2.8146e-02, 1.8967e-02, 3.9050e-02, 7.3543e-03,
         4.7346e-02, 1.0274e-01, 1.6822e-03, 4.8791e-03, 3.2758e-03, 8.7738e-02,
         5.7275e-02, 1.7819e-01, 5.7655e-02, 9.5807e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.5899e-04, 1.4518e-04],
        [2.1542e-03, 1.3810e-01],
        [6.2079e-04, 2.8146e-02],
        [5.0730e-04, 1.8967e-02],
        [3.0519e-03, 3.9050e-02],
        [8.4110e-04, 7.3543e-03],
        [7.2857e-04, 4.7346e-02],
        [1.6206e-03, 1.0274e-01],
        [8.6551e-04, 1.6822e-03],
        [8.9386e-04, 4.8791e-03],
        [1.0377e-03, 3.2758e-03],
        [4.5584e-03, 8.7738e-02],
        [2.6679e-03, 5.7275e-02],
        [1.8729e-04, 1.7819e-01],
        [1.1329e-03, 5.7655e-02],
        [1.2858e-03, 9.5807e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0003],
        [0.0015],
        [0.0014],
        [0.0004],
        [0.0008],
        [0.0007],
        [0.0008],
        [0.0013],
        [0.0006],
        [0.0014],
        [0.0016],
        [0.0012],
        [0.0013],
        [0.0016],
        [0.0031]], device='cuda:0')/tensor([[0.0008, 0.0003, 0.0015, 0.0014, 0.0004, 0.0008, 0.0007, 0.0008, 0.0013,
         0.0006, 0.0014, 0.0016, 0.0012, 0.0013, 0.0016, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0366],
        [0.0216],
        [0.0206],
        [0.0283],
        [0.0360],
        [0.0385],
        [0.0324],
        [0.0124],
        [0.1043],
        [0.1689],
        [0.0029],
        [0.0021],
        [0.0980],
        [0.0160],
        [0.0208],
        [0.1095]], device='cuda:0')/tensor([[0.0366, 0.0216, 0.0206, 0.0283, 0.0360, 0.0385, 0.0324, 0.0124, 0.1043,
         0.1689, 0.0029, 0.0021, 0.0980, 0.0160, 0.0208, 0.1095]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0366],
        [0.0003, 0.0216],
        [0.0015, 0.0206],
        [0.0014, 0.0283],
        [0.0004, 0.0360],
        [0.0008, 0.0385],
        [0.0007, 0.0324],
        [0.0008, 0.0124],
        [0.0013, 0.1043],
        [0.0006, 0.1689],
        [0.0014, 0.0029],
        [0.0016, 0.0021],
        [0.0012, 0.0980],
        [0.0013, 0.0160],
        [0.0016, 0.0208],
        [0.0031, 0.1095]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0006],
        [0.0004],
        [0.0016],
        [0.0016],
        [0.0007],
        [0.0007],
        [0.0007],
        [0.0007],
        [0.0013],
        [0.0022],
        [0.0014],
        [0.0015],
        [0.0008],
        [0.0024],
        [0.0022]], device='cuda:0')/tensor([[0.0014, 0.0006, 0.0004, 0.0016, 0.0016, 0.0007, 0.0007, 0.0007, 0.0007,
         0.0013, 0.0022, 0.0014, 0.0015, 0.0008, 0.0024, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0019],
        [0.0008],
        [0.0111],
        [0.1134],
        [0.0086],
        [0.0129],
        [0.0004],
        [0.0161],
        [0.0490],
        [0.0627],
        [0.0044],
        [0.0149],
        [0.0515],
        [0.0020],
        [0.0091],
        [0.0590]], device='cuda:0')/tensor([[0.0019, 0.0008, 0.0111, 0.1134, 0.0086, 0.0129, 0.0004, 0.0161, 0.0490,
         0.0627, 0.0044, 0.0149, 0.0515, 0.0020, 0.0091, 0.0590]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0019],
        [0.0006, 0.0008],
        [0.0004, 0.0111],
        [0.0016, 0.1134],
        [0.0016, 0.0086],
        [0.0007, 0.0129],
        [0.0007, 0.0004],
        [0.0007, 0.0161],
        [0.0007, 0.0490],
        [0.0013, 0.0627],
        [0.0022, 0.0044],
        [0.0014, 0.0149],
        [0.0015, 0.0515],
        [0.0008, 0.0020],
        [0.0024, 0.0091],
        [0.0022, 0.0590]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0023],
        [0.0005],
        [0.0012],
        [0.0012],
        [0.0037],
        [0.0011],
        [0.0020],
        [0.0009],
        [0.0009],
        [0.0011],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0007],
        [0.0019]], device='cuda:0')/tensor([[0.0001, 0.0023, 0.0005, 0.0012, 0.0012, 0.0037, 0.0011, 0.0020, 0.0009,
         0.0009, 0.0011, 0.0004, 0.0004, 0.0005, 0.0007, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0293],
        [0.0009],
        [0.0019],
        [0.1098],
        [0.0104],
        [0.0036],
        [0.0220],
        [0.0226],
        [0.0009],
        [0.0523],
        [0.0084],
        [0.0005],
        [0.0327],
        [0.0013],
        [0.1086]], device='cuda:0')/tensor([[0.0025, 0.0293, 0.0009, 0.0019, 0.1098, 0.0104, 0.0036, 0.0220, 0.0226,
         0.0009, 0.0523, 0.0084, 0.0005, 0.0327, 0.0013, 0.1086]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0025],
        [0.0023, 0.0293],
        [0.0005, 0.0009],
        [0.0012, 0.0019],
        [0.0012, 0.1098],
        [0.0037, 0.0104],
        [0.0011, 0.0036],
        [0.0020, 0.0220],
        [0.0009, 0.0226],
        [0.0009, 0.0009],
        [0.0011, 0.0523],
        [0.0004, 0.0084],
        [0.0004, 0.0005],
        [0.0005, 0.0327],
        [0.0007, 0.0013],
        [0.0019, 0.1086]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0034],
        [0.0023],
        [0.0004],
        [0.0009],
        [0.0026],
        [0.0014],
        [0.0012],
        [0.0007],
        [0.0008],
        [0.0013],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0034, 0.0023, 0.0004, 0.0009, 0.0026, 0.0014, 0.0012, 0.0007, 0.0008,
         0.0013, 0.0009, 0.0002, 0.0003, 0.0009, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0118],
        [0.0764],
        [0.0003],
        [0.0099],
        [0.0047],
        [0.1319],
        [0.0100],
        [0.0184],
        [0.0765],
        [0.1683],
        [0.0874],
        [0.0025],
        [0.0003],
        [0.1479],
        [0.2506],
        [0.0009]], device='cuda:0')/tensor([[0.0118, 0.0764, 0.0003, 0.0099, 0.0047, 0.1319, 0.0100, 0.0184, 0.0765,
         0.1683, 0.0874, 0.0025, 0.0003, 0.1479, 0.2506, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.4073e-03, 1.1827e-02],
        [2.2548e-03, 7.6352e-02],
        [3.6993e-04, 3.1435e-04],
        [8.9622e-04, 9.8859e-03],
        [2.5960e-03, 4.6547e-03],
        [1.4218e-03, 1.3185e-01],
        [1.1513e-03, 1.0026e-02],
        [6.7599e-04, 1.8369e-02],
        [7.7985e-04, 7.6471e-02],
        [1.2736e-03, 1.6831e-01],
        [8.8831e-04, 8.7407e-02],
        [1.5508e-04, 2.4638e-03],
        [3.2519e-04, 3.4815e-04],
        [9.4380e-04, 1.4788e-01],
        [3.7238e-04, 2.5062e-01],
        [7.1468e-04, 8.7380e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0015],
        [0.0014],
        [0.0011],
        [0.0009],
        [0.0026],
        [0.0002],
        [0.0014],
        [0.0013],
        [0.0009],
        [0.0021],
        [0.0007],
        [0.0008],
        [0.0012],
        [0.0023],
        [0.0008]], device='cuda:0')/tensor([[0.0014, 0.0015, 0.0014, 0.0011, 0.0009, 0.0026, 0.0002, 0.0014, 0.0013,
         0.0009, 0.0021, 0.0007, 0.0008, 0.0012, 0.0023, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0136],
        [0.0017],
        [0.1351],
        [0.1281],
        [0.0313],
        [0.0167],
        [0.0057],
        [0.0027],
        [0.0013],
        [0.0055],
        [0.1052],
        [0.0520],
        [0.0597],
        [0.0945],
        [0.0058],
        [0.0188]], device='cuda:0')/tensor([[0.0136, 0.0017, 0.1351, 0.1281, 0.0313, 0.0167, 0.0057, 0.0027, 0.0013,
         0.0055, 0.1052, 0.0520, 0.0597, 0.0945, 0.0058, 0.0188]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0136],
        [0.0015, 0.0017],
        [0.0014, 0.1351],
        [0.0011, 0.1281],
        [0.0009, 0.0313],
        [0.0026, 0.0167],
        [0.0002, 0.0057],
        [0.0014, 0.0027],
        [0.0013, 0.0013],
        [0.0009, 0.0055],
        [0.0021, 0.1052],
        [0.0007, 0.0520],
        [0.0008, 0.0597],
        [0.0012, 0.0945],
        [0.0023, 0.0058],
        [0.0008, 0.0188]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0007],
        [0.0018],
        [0.0004],
        [0.0004],
        [0.0020],
        [0.0024],
        [0.0001],
        [0.0002],
        [0.0021],
        [0.0008],
        [0.0012],
        [0.0014],
        [0.0010],
        [0.0007],
        [0.0003]], device='cuda:0')/tensor([[0.0006, 0.0007, 0.0018, 0.0004, 0.0004, 0.0020, 0.0024, 0.0001, 0.0002,
         0.0021, 0.0008, 0.0012, 0.0014, 0.0010, 0.0007, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1163],
        [0.0408],
        [0.0061],
        [0.0006],
        [0.0093],
        [0.0563],
        [0.0333],
        [0.0663],
        [0.0001],
        [0.0066],
        [0.0992],
        [0.0535],
        [0.0107],
        [0.0006],
        [0.0172],
        [0.0009]], device='cuda:0')/tensor([[0.1163, 0.0408, 0.0061, 0.0006, 0.0093, 0.0563, 0.0333, 0.0663, 0.0001,
         0.0066, 0.0992, 0.0535, 0.0107, 0.0006, 0.0172, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.3272e-04, 1.1626e-01],
        [7.2502e-04, 4.0844e-02],
        [1.8498e-03, 6.1226e-03],
        [4.3053e-04, 6.4958e-04],
        [3.8734e-04, 9.2873e-03],
        [2.0281e-03, 5.6253e-02],
        [2.4483e-03, 3.3259e-02],
        [1.0123e-04, 6.6330e-02],
        [1.5690e-04, 1.4500e-04],
        [2.0666e-03, 6.6247e-03],
        [8.4625e-04, 9.9163e-02],
        [1.1817e-03, 5.3452e-02],
        [1.4205e-03, 1.0669e-02],
        [9.7508e-04, 6.3269e-04],
        [6.8211e-04, 1.7196e-02],
        [3.2527e-04, 9.0117e-04]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0015],
        [0.0003],
        [0.0006],
        [0.0055],
        [0.0007],
        [0.0007],
        [0.0009],
        [0.0030],
        [0.0015],
        [0.0036],
        [0.0012],
        [0.0007],
        [0.0011],
        [0.0004],
        [0.0027]], device='cuda:0')/tensor([[0.0013, 0.0015, 0.0003, 0.0006, 0.0055, 0.0007, 0.0007, 0.0009, 0.0030,
         0.0015, 0.0036, 0.0012, 0.0007, 0.0011, 0.0004, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0084],
        [0.0006],
        [0.0041],
        [0.1150],
        [0.0474],
        [0.0889],
        [0.0019],
        [0.0166],
        [0.0045],
        [0.0214],
        [0.0106],
        [0.0050],
        [0.1243],
        [0.0246],
        [0.0227]], device='cuda:0')/tensor([[0.0012, 0.0084, 0.0006, 0.0041, 0.1150, 0.0474, 0.0889, 0.0019, 0.0166,
         0.0045, 0.0214, 0.0106, 0.0050, 0.1243, 0.0246, 0.0227]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0013, 0.0012],
        [0.0015, 0.0084],
        [0.0003, 0.0006],
        [0.0006, 0.0041],
        [0.0055, 0.1150],
        [0.0007, 0.0474],
        [0.0007, 0.0889],
        [0.0009, 0.0019],
        [0.0030, 0.0166],
        [0.0015, 0.0045],
        [0.0036, 0.0214],
        [0.0012, 0.0106],
        [0.0007, 0.0050],
        [0.0011, 0.1243],
        [0.0004, 0.0246],
        [0.0027, 0.0227]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0008],
        [0.0012],
        [0.0011],
        [0.0011],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0005],
        [0.0010],
        [0.0013],
        [0.0002],
        [0.0016],
        [0.0008],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0012, 0.0011, 0.0011, 0.0002, 0.0009, 0.0002, 0.0005,
         0.0010, 0.0013, 0.0002, 0.0016, 0.0008, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.8069e-04],
        [1.0500e-02],
        [8.1071e-03],
        [1.7797e-01],
        [4.7561e-03],
        [7.3314e-05],
        [1.6558e-02],
        [5.2118e-03],
        [8.8385e-02],
        [4.7217e-03],
        [7.3208e-03],
        [1.1915e-03],
        [3.3598e-02],
        [1.1033e-02],
        [3.0694e-02],
        [4.0029e-02]], device='cuda:0')/tensor([[4.8069e-04, 1.0500e-02, 8.1071e-03, 1.7797e-01, 4.7561e-03, 7.3314e-05,
         1.6558e-02, 5.2118e-03, 8.8385e-02, 4.7217e-03, 7.3208e-03, 1.1915e-03,
         3.3598e-02, 1.1033e-02, 3.0694e-02, 4.0029e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2337e-04, 4.8069e-04],
        [8.2215e-04, 1.0500e-02],
        [1.2429e-03, 8.1071e-03],
        [1.0713e-03, 1.7797e-01],
        [1.0780e-03, 4.7561e-03],
        [1.8658e-04, 7.3314e-05],
        [9.1113e-04, 1.6558e-02],
        [2.2470e-04, 5.2118e-03],
        [4.6154e-04, 8.8385e-02],
        [9.6056e-04, 4.7217e-03],
        [1.2839e-03, 7.3208e-03],
        [2.4132e-04, 1.1915e-03],
        [1.6127e-03, 3.3598e-02],
        [8.2168e-04, 1.1033e-02],
        [3.5633e-04, 3.0694e-02],
        [6.9567e-04, 4.0029e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0015],
        [0.0016],
        [0.0031],
        [0.0014],
        [0.0006],
        [0.0016],
        [0.0025],
        [0.0001]], device='cuda:0')/tensor([[0.0015, 0.0016, 0.0031, 0.0014, 0.0006, 0.0016, 0.0025, 0.0001]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0694],
        [0.0497],
        [0.0847],
        [0.0413],
        [0.0242],
        [0.0039],
        [0.0018],
        [0.0045]], device='cuda:0')/tensor([[0.0694, 0.0497, 0.0847, 0.0413, 0.0242, 0.0039, 0.0018, 0.0045]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0015, 0.0694],
        [0.0016, 0.0497],
        [0.0031, 0.0847],
        [0.0014, 0.0413],
        [0.0006, 0.0242],
        [0.0016, 0.0039],
        [0.0025, 0.0018],
        [0.0001, 0.0045]], device='cuda:0')
acc:  0.56
Time taken to execute the de SA task with prompt type common, variation 0 and batchsize 16: 0:03:16.976924
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA common 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 349.45it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0003],
        [0.0014],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0015],
        [0.0002],
        [0.0002],
        [0.0008],
        [0.0017],
        [0.0005],
        [0.0001],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0003, 0.0014, 0.0002, 0.0003, 0.0006, 0.0007, 0.0015,
         0.0002, 0.0002, 0.0008, 0.0017, 0.0005, 0.0001, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0073],
        [0.0024],
        [0.0007],
        [0.0256],
        [0.0003],
        [0.0008],
        [0.0434],
        [0.0023],
        [0.0002],
        [0.0023],
        [0.0028],
        [0.0064],
        [0.0171],
        [0.0084],
        [0.0343]], device='cuda:0')/tensor([[0.0007, 0.0073, 0.0024, 0.0007, 0.0256, 0.0003, 0.0008, 0.0434, 0.0023,
         0.0002, 0.0023, 0.0028, 0.0064, 0.0171, 0.0084, 0.0343]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0007],
        [0.0004, 0.0073],
        [0.0003, 0.0024],
        [0.0014, 0.0007],
        [0.0002, 0.0256],
        [0.0003, 0.0003],
        [0.0006, 0.0008],
        [0.0007, 0.0434],
        [0.0015, 0.0023],
        [0.0002, 0.0002],
        [0.0002, 0.0023],
        [0.0008, 0.0028],
        [0.0017, 0.0064],
        [0.0005, 0.0171],
        [0.0001, 0.0084],
        [0.0004, 0.0343]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0005],
        [0.0014],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0026],
        [0.0004],
        [0.0011],
        [0.0004],
        [0.0020]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0004, 0.0002, 0.0005, 0.0005, 0.0014, 0.0006, 0.0005,
         0.0005, 0.0008, 0.0026, 0.0004, 0.0011, 0.0004, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0050],
        [0.0001],
        [0.0002],
        [0.0062],
        [0.0002],
        [0.0008],
        [0.0122],
        [0.0060],
        [0.0105],
        [0.0464],
        [0.0044],
        [0.0387],
        [0.0301],
        [0.0108],
        [0.0080],
        [0.0229]], device='cuda:0')/tensor([[0.0050, 0.0001, 0.0002, 0.0062, 0.0002, 0.0008, 0.0122, 0.0060, 0.0105,
         0.0464, 0.0044, 0.0387, 0.0301, 0.0108, 0.0080, 0.0229]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0050],
        [0.0002, 0.0001],
        [0.0004, 0.0002],
        [0.0002, 0.0062],
        [0.0005, 0.0002],
        [0.0005, 0.0008],
        [0.0014, 0.0122],
        [0.0006, 0.0060],
        [0.0005, 0.0105],
        [0.0005, 0.0464],
        [0.0008, 0.0044],
        [0.0026, 0.0387],
        [0.0004, 0.0301],
        [0.0011, 0.0108],
        [0.0004, 0.0080],
        [0.0020, 0.0229]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0001],
        [0.0004],
        [0.0008],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0013],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0004],
        [0.0023]], device='cuda:0')/tensor([[0.0002, 0.0001, 0.0004, 0.0008, 0.0003, 0.0002, 0.0002, 0.0007, 0.0013,
         0.0001, 0.0002, 0.0002, 0.0003, 0.0006, 0.0004, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0199],
        [0.0061],
        [0.0013],
        [0.0006],
        [0.0096],
        [0.0012],
        [0.0005],
        [0.0012],
        [0.0091],
        [0.0031],
        [0.0383],
        [0.0002],
        [0.0061],
        [0.0214],
        [0.0550],
        [0.0075]], device='cuda:0')/tensor([[0.0199, 0.0061, 0.0013, 0.0006, 0.0096, 0.0012, 0.0005, 0.0012, 0.0091,
         0.0031, 0.0383, 0.0002, 0.0061, 0.0214, 0.0550, 0.0075]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0199],
        [0.0001, 0.0061],
        [0.0004, 0.0013],
        [0.0008, 0.0006],
        [0.0003, 0.0096],
        [0.0002, 0.0012],
        [0.0002, 0.0005],
        [0.0007, 0.0012],
        [0.0013, 0.0091],
        [0.0001, 0.0031],
        [0.0002, 0.0383],
        [0.0002, 0.0002],
        [0.0003, 0.0061],
        [0.0006, 0.0214],
        [0.0004, 0.0550],
        [0.0023, 0.0075]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0005],
        [0.0010],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0005, 0.0005, 0.0004, 0.0007, 0.0002, 0.0005, 0.0010,
         0.0006, 0.0006, 0.0007, 0.0002, 0.0006, 0.0006, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0045],
        [0.0405],
        [0.0032],
        [0.0078],
        [0.0023],
        [0.0053],
        [0.0131],
        [0.0639],
        [0.0020],
        [0.0566],
        [0.0042],
        [0.0426],
        [0.0001],
        [0.0271],
        [0.0015],
        [0.0008]], device='cuda:0')/tensor([[0.0045, 0.0405, 0.0032, 0.0078, 0.0023, 0.0053, 0.0131, 0.0639, 0.0020,
         0.0566, 0.0042, 0.0426, 0.0001, 0.0271, 0.0015, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0045],
        [0.0003, 0.0405],
        [0.0005, 0.0032],
        [0.0005, 0.0078],
        [0.0004, 0.0023],
        [0.0007, 0.0053],
        [0.0002, 0.0131],
        [0.0005, 0.0639],
        [0.0010, 0.0020],
        [0.0006, 0.0566],
        [0.0006, 0.0042],
        [0.0007, 0.0426],
        [0.0002, 0.0001],
        [0.0006, 0.0271],
        [0.0006, 0.0015],
        [0.0004, 0.0008]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0002],
        [0.0003],
        [0.0023],
        [0.0004],
        [0.0003],
        [0.0016],
        [0.0002],
        [0.0012],
        [0.0006],
        [0.0009],
        [0.0011],
        [0.0002],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0002, 0.0003, 0.0023, 0.0004, 0.0003, 0.0016, 0.0002,
         0.0012, 0.0006, 0.0009, 0.0011, 0.0002, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.3771e-02],
        [4.5398e-03],
        [2.1016e-02],
        [2.2160e-04],
        [1.8543e-03],
        [1.4679e-02],
        [6.4880e-03],
        [4.0395e-03],
        [5.9512e-05],
        [4.5831e-03],
        [4.5254e-04],
        [1.9726e-04],
        [1.6825e-03],
        [2.7486e-02],
        [2.4100e-02],
        [4.7815e-02]], device='cuda:0')/tensor([[4.3771e-02, 4.5398e-03, 2.1016e-02, 2.2160e-04, 1.8543e-03, 1.4679e-02,
         6.4880e-03, 4.0395e-03, 5.9512e-05, 4.5831e-03, 4.5254e-04, 1.9726e-04,
         1.6825e-03, 2.7486e-02, 2.4100e-02, 4.7815e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.5193e-04, 4.3771e-02],
        [3.7917e-04, 4.5398e-03],
        [2.4219e-04, 2.1016e-02],
        [3.3336e-04, 2.2160e-04],
        [2.3487e-03, 1.8543e-03],
        [3.6306e-04, 1.4679e-02],
        [3.3522e-04, 6.4880e-03],
        [1.5813e-03, 4.0395e-03],
        [2.3092e-04, 5.9512e-05],
        [1.1723e-03, 4.5831e-03],
        [6.3408e-04, 4.5254e-04],
        [9.4977e-04, 1.9726e-04],
        [1.0643e-03, 1.6825e-03],
        [1.6427e-04, 2.7486e-02],
        [5.4699e-04, 2.4100e-02],
        [5.3812e-04, 4.7815e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0002],
        [0.0011],
        [0.0012],
        [0.0004],
        [0.0014],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0011]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0005, 0.0002, 0.0008, 0.0002, 0.0011, 0.0012, 0.0004,
         0.0014, 0.0005, 0.0004, 0.0002, 0.0006, 0.0005, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0021],
        [0.0168],
        [0.0213],
        [0.0227],
        [0.0691],
        [0.0029],
        [0.0240],
        [0.0013],
        [0.0004],
        [0.0015],
        [0.0002],
        [0.0088],
        [0.0075],
        [0.0118],
        [0.0400],
        [0.0196]], device='cuda:0')/tensor([[0.0021, 0.0168, 0.0213, 0.0227, 0.0691, 0.0029, 0.0240, 0.0013, 0.0004,
         0.0015, 0.0002, 0.0088, 0.0075, 0.0118, 0.0400, 0.0196]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0021],
        [0.0005, 0.0168],
        [0.0005, 0.0213],
        [0.0002, 0.0227],
        [0.0008, 0.0691],
        [0.0002, 0.0029],
        [0.0011, 0.0240],
        [0.0012, 0.0013],
        [0.0004, 0.0004],
        [0.0014, 0.0015],
        [0.0005, 0.0002],
        [0.0004, 0.0088],
        [0.0002, 0.0075],
        [0.0006, 0.0118],
        [0.0005, 0.0400],
        [0.0011, 0.0196]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7292e-03],
        [5.5595e-04],
        [7.8489e-04],
        [2.0506e-04],
        [2.9930e-04],
        [1.4143e-04],
        [5.2512e-06],
        [4.5772e-04],
        [5.5701e-04],
        [5.0609e-04],
        [3.8270e-04],
        [3.8964e-04],
        [1.7690e-03],
        [1.8967e-04],
        [1.1673e-03],
        [2.4430e-04]], device='cuda:0')/tensor([[1.7292e-03, 5.5595e-04, 7.8489e-04, 2.0506e-04, 2.9930e-04, 1.4143e-04,
         5.2512e-06, 4.5772e-04, 5.5701e-04, 5.0609e-04, 3.8270e-04, 3.8964e-04,
         1.7690e-03, 1.8967e-04, 1.1673e-03, 2.4430e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.0575e-02],
        [1.9278e-02],
        [8.1445e-04],
        [2.2994e-02],
        [3.2385e-02],
        [9.3323e-05],
        [2.2054e-04],
        [5.4516e-02],
        [3.9775e-02],
        [3.3135e-03],
        [1.2229e-02],
        [2.0176e-01],
        [1.2121e-02],
        [2.2072e-02],
        [3.7262e-02],
        [4.0215e-04]], device='cuda:0')/tensor([[5.0575e-02, 1.9278e-02, 8.1445e-04, 2.2994e-02, 3.2385e-02, 9.3323e-05,
         2.2054e-04, 5.4516e-02, 3.9775e-02, 3.3135e-03, 1.2229e-02, 2.0176e-01,
         1.2121e-02, 2.2072e-02, 3.7262e-02, 4.0215e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7292e-03, 5.0575e-02],
        [5.5595e-04, 1.9278e-02],
        [7.8489e-04, 8.1445e-04],
        [2.0506e-04, 2.2994e-02],
        [2.9930e-04, 3.2385e-02],
        [1.4143e-04, 9.3323e-05],
        [5.2512e-06, 2.2054e-04],
        [4.5772e-04, 5.4516e-02],
        [5.5701e-04, 3.9775e-02],
        [5.0609e-04, 3.3135e-03],
        [3.8270e-04, 1.2229e-02],
        [3.8964e-04, 2.0176e-01],
        [1.7690e-03, 1.2121e-02],
        [1.8967e-04, 2.2072e-02],
        [1.1673e-03, 3.7262e-02],
        [2.4430e-04, 4.0215e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0010],
        [0.0005],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0010],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0007],
        [0.0008]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0003, 0.0003, 0.0003, 0.0010, 0.0005, 0.0010, 0.0005,
         0.0005, 0.0010, 0.0004, 0.0007, 0.0002, 0.0007, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0005],
        [0.0018],
        [0.0185],
        [0.0146],
        [0.0033],
        [0.0583],
        [0.0041],
        [0.0479],
        [0.0092],
        [0.0031],
        [0.0013],
        [0.0051],
        [0.0223],
        [0.0157],
        [0.0085],
        [0.0901]], device='cuda:0')/tensor([[0.0005, 0.0018, 0.0185, 0.0146, 0.0033, 0.0583, 0.0041, 0.0479, 0.0092,
         0.0031, 0.0013, 0.0051, 0.0223, 0.0157, 0.0085, 0.0901]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0005],
        [0.0002, 0.0018],
        [0.0003, 0.0185],
        [0.0003, 0.0146],
        [0.0003, 0.0033],
        [0.0010, 0.0583],
        [0.0005, 0.0041],
        [0.0010, 0.0479],
        [0.0005, 0.0092],
        [0.0005, 0.0031],
        [0.0010, 0.0013],
        [0.0004, 0.0051],
        [0.0007, 0.0223],
        [0.0002, 0.0157],
        [0.0007, 0.0085],
        [0.0008, 0.0901]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0026],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0003],
        [0.0013],
        [0.0006],
        [0.0011],
        [0.0003],
        [0.0006],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0011],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0026, 0.0004, 0.0006, 0.0010, 0.0003, 0.0013, 0.0006, 0.0011,
         0.0003, 0.0006, 0.0005, 0.0003, 0.0004, 0.0011, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0249],
        [0.0260],
        [0.0028],
        [0.0686],
        [0.0038],
        [0.0294],
        [0.0019],
        [0.0006],
        [0.0117],
        [0.0349],
        [0.0220],
        [0.0430],
        [0.0047],
        [0.0009],
        [0.0015],
        [0.0140]], device='cuda:0')/tensor([[0.0249, 0.0260, 0.0028, 0.0686, 0.0038, 0.0294, 0.0019, 0.0006, 0.0117,
         0.0349, 0.0220, 0.0430, 0.0047, 0.0009, 0.0015, 0.0140]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0002, 0.0249],
        [0.0026, 0.0260],
        [0.0004, 0.0028],
        [0.0006, 0.0686],
        [0.0010, 0.0038],
        [0.0003, 0.0294],
        [0.0013, 0.0019],
        [0.0006, 0.0006],
        [0.0011, 0.0117],
        [0.0003, 0.0349],
        [0.0006, 0.0220],
        [0.0005, 0.0430],
        [0.0003, 0.0047],
        [0.0004, 0.0009],
        [0.0011, 0.0015],
        [0.0003, 0.0140]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0006],
        [0.0014],
        [0.0003],
        [0.0011],
        [0.0005],
        [0.0012],
        [0.0001],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0004],
        [0.0008]], device='cuda:0')/tensor([[0.0012, 0.0006, 0.0014, 0.0003, 0.0011, 0.0005, 0.0012, 0.0001, 0.0003,
         0.0005, 0.0008, 0.0003, 0.0009, 0.0004, 0.0004, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0382],
        [0.0314],
        [0.0504],
        [0.0371],
        [0.0019],
        [0.0016],
        [0.0066],
        [0.0315],
        [0.0141],
        [0.0025],
        [0.0017],
        [0.0171],
        [0.0096],
        [0.0042],
        [0.0035],
        [0.0003]], device='cuda:0')/tensor([[0.0382, 0.0314, 0.0504, 0.0371, 0.0019, 0.0016, 0.0066, 0.0315, 0.0141,
         0.0025, 0.0017, 0.0171, 0.0096, 0.0042, 0.0035, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0382],
        [0.0006, 0.0314],
        [0.0014, 0.0504],
        [0.0003, 0.0371],
        [0.0011, 0.0019],
        [0.0005, 0.0016],
        [0.0012, 0.0066],
        [0.0001, 0.0315],
        [0.0003, 0.0141],
        [0.0005, 0.0025],
        [0.0008, 0.0017],
        [0.0003, 0.0171],
        [0.0009, 0.0096],
        [0.0004, 0.0042],
        [0.0004, 0.0035],
        [0.0008, 0.0003]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.4635e-04],
        [4.2505e-04],
        [2.2683e-04],
        [4.0208e-03],
        [1.6506e-03],
        [2.0774e-03],
        [2.1299e-04],
        [5.5235e-05],
        [4.8765e-04],
        [8.3967e-04],
        [6.1065e-04],
        [5.5363e-04],
        [3.4617e-04],
        [1.6740e-04],
        [3.6719e-04],
        [9.6619e-04]], device='cuda:0')/tensor([[2.4635e-04, 4.2505e-04, 2.2683e-04, 4.0208e-03, 1.6506e-03, 2.0774e-03,
         2.1299e-04, 5.5235e-05, 4.8765e-04, 8.3967e-04, 6.1065e-04, 5.5363e-04,
         3.4617e-04, 1.6740e-04, 3.6719e-04, 9.6619e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0001],
        [0.0011],
        [0.0410],
        [0.0627],
        [0.0041],
        [0.0027],
        [0.0021],
        [0.0366],
        [0.0025],
        [0.0006],
        [0.0191],
        [0.0306],
        [0.0244],
        [0.0102],
        [0.0126],
        [0.0027]], device='cuda:0')/tensor([[0.0001, 0.0011, 0.0410, 0.0627, 0.0041, 0.0027, 0.0021, 0.0366, 0.0025,
         0.0006, 0.0191, 0.0306, 0.0244, 0.0102, 0.0126, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4635e-04, 1.3125e-04],
        [4.2505e-04, 1.1237e-03],
        [2.2683e-04, 4.1050e-02],
        [4.0208e-03, 6.2724e-02],
        [1.6506e-03, 4.1475e-03],
        [2.0774e-03, 2.7243e-03],
        [2.1299e-04, 2.0659e-03],
        [5.5235e-05, 3.6637e-02],
        [4.8765e-04, 2.5044e-03],
        [8.3967e-04, 6.3682e-04],
        [6.1065e-04, 1.9091e-02],
        [5.5363e-04, 3.0644e-02],
        [3.4617e-04, 2.4446e-02],
        [1.6740e-04, 1.0234e-02],
        [3.6719e-04, 1.2639e-02],
        [9.6619e-04, 2.7097e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0007, 0.0006, 0.0002, 0.0002, 0.0003, 0.0005, 0.0003,
         0.0003, 0.0005, 0.0007, 0.0003, 0.0004, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0098],
        [0.0444],
        [0.0264],
        [0.0045],
        [0.0310],
        [0.0644],
        [0.0006],
        [0.0015],
        [0.0128],
        [0.0016],
        [0.0599],
        [0.0010],
        [0.0080],
        [0.0008],
        [0.0280],
        [0.0035]], device='cuda:0')/tensor([[0.0098, 0.0444, 0.0264, 0.0045, 0.0310, 0.0644, 0.0006, 0.0015, 0.0128,
         0.0016, 0.0599, 0.0010, 0.0080, 0.0008, 0.0280, 0.0035]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0098],
        [0.0003, 0.0444],
        [0.0007, 0.0264],
        [0.0006, 0.0045],
        [0.0002, 0.0310],
        [0.0002, 0.0644],
        [0.0003, 0.0006],
        [0.0005, 0.0015],
        [0.0003, 0.0128],
        [0.0003, 0.0016],
        [0.0005, 0.0599],
        [0.0007, 0.0010],
        [0.0003, 0.0080],
        [0.0004, 0.0008],
        [0.0007, 0.0280],
        [0.0005, 0.0035]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0002],
        [0.0010],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0005, 0.0005, 0.0008, 0.0002, 0.0010, 0.0006]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0025],
        [0.0004],
        [0.0055],
        [0.0107],
        [0.0018],
        [0.0105],
        [0.0482],
        [0.0004]], device='cuda:0')/tensor([[0.0025, 0.0004, 0.0055, 0.0107, 0.0018, 0.0105, 0.0482, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0025],
        [0.0005, 0.0004],
        [0.0005, 0.0055],
        [0.0005, 0.0107],
        [0.0008, 0.0018],
        [0.0002, 0.0105],
        [0.0010, 0.0482],
        [0.0006, 0.0004]], device='cuda:0')
acc:  0.605
Time taken to execute the de SA task with prompt type common, variation 1 and batchsize 16: 0:03:17.683685
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA common 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 344.97it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0010],
        [0.0008],
        [0.0007],
        [0.0009],
        [0.0011],
        [0.0006],
        [0.0019],
        [0.0030],
        [0.0002],
        [0.0006],
        [0.0004],
        [0.0014],
        [0.0004],
        [0.0006],
        [0.0015]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0008, 0.0007, 0.0009, 0.0011, 0.0006, 0.0019, 0.0030,
         0.0002, 0.0006, 0.0004, 0.0014, 0.0004, 0.0006, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.2988e-03],
        [6.6521e-03],
        [1.4282e-02],
        [2.5118e-02],
        [2.4117e-02],
        [5.8145e-03],
        [1.2086e-03],
        [1.1530e-02],
        [5.5259e-03],
        [6.7422e-05],
        [4.5410e-03],
        [4.6198e-03],
        [1.1308e-02],
        [1.1028e-02],
        [7.8309e-04],
        [1.3577e-03]], device='cuda:0')/tensor([[9.2988e-03, 6.6521e-03, 1.4282e-02, 2.5118e-02, 2.4117e-02, 5.8145e-03,
         1.2086e-03, 1.1530e-02, 5.5259e-03, 6.7422e-05, 4.5410e-03, 4.6198e-03,
         1.1308e-02, 1.1028e-02, 7.8309e-04, 1.3577e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.1586e-04, 9.2988e-03],
        [1.0435e-03, 6.6521e-03],
        [7.8625e-04, 1.4282e-02],
        [6.7751e-04, 2.5118e-02],
        [9.0513e-04, 2.4117e-02],
        [1.1366e-03, 5.8145e-03],
        [5.6383e-04, 1.2086e-03],
        [1.9204e-03, 1.1530e-02],
        [3.0175e-03, 5.5259e-03],
        [1.6220e-04, 6.7422e-05],
        [6.3105e-04, 4.5410e-03],
        [3.5948e-04, 4.6198e-03],
        [1.3766e-03, 1.1308e-02],
        [3.9672e-04, 1.1028e-02],
        [5.5958e-04, 7.8309e-04],
        [1.5066e-03, 1.3577e-03]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0033],
        [0.0005],
        [0.0010],
        [0.0005],
        [0.0010],
        [0.0003],
        [0.0020],
        [0.0005],
        [0.0011],
        [0.0011],
        [0.0004],
        [0.0007],
        [0.0012],
        [0.0005],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0033, 0.0005, 0.0010, 0.0005, 0.0010, 0.0003, 0.0020, 0.0005,
         0.0011, 0.0011, 0.0004, 0.0007, 0.0012, 0.0005, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0085],
        [0.0331],
        [0.0170],
        [0.0481],
        [0.0034],
        [0.0925],
        [0.0003],
        [0.0194],
        [0.0008],
        [0.0028],
        [0.0894],
        [0.0147],
        [0.0336],
        [0.0024],
        [0.0121],
        [0.0019]], device='cuda:0')/tensor([[0.0085, 0.0331, 0.0170, 0.0481, 0.0034, 0.0925, 0.0003, 0.0194, 0.0008,
         0.0028, 0.0894, 0.0147, 0.0336, 0.0024, 0.0121, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0085],
        [0.0033, 0.0331],
        [0.0005, 0.0170],
        [0.0010, 0.0481],
        [0.0005, 0.0034],
        [0.0010, 0.0925],
        [0.0003, 0.0003],
        [0.0020, 0.0194],
        [0.0005, 0.0008],
        [0.0011, 0.0028],
        [0.0011, 0.0894],
        [0.0004, 0.0147],
        [0.0007, 0.0336],
        [0.0012, 0.0024],
        [0.0005, 0.0121],
        [0.0011, 0.0019]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0001],
        [0.0018],
        [0.0009],
        [0.0010],
        [0.0001],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0010],
        [0.0009],
        [0.0009],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0005, 0.0005, 0.0001, 0.0018, 0.0009, 0.0010, 0.0001,
         0.0005, 0.0007, 0.0003, 0.0010, 0.0009, 0.0009, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0069],
        [0.0016],
        [0.0004],
        [0.0104],
        [0.0138],
        [0.0412],
        [0.0428],
        [0.0006],
        [0.0125],
        [0.0011],
        [0.0018],
        [0.0003],
        [0.0055],
        [0.0231],
        [0.0097],
        [0.0082]], device='cuda:0')/tensor([[0.0069, 0.0016, 0.0004, 0.0104, 0.0138, 0.0412, 0.0428, 0.0006, 0.0125,
         0.0011, 0.0018, 0.0003, 0.0055, 0.0231, 0.0097, 0.0082]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0069],
        [0.0007, 0.0016],
        [0.0005, 0.0004],
        [0.0005, 0.0104],
        [0.0001, 0.0138],
        [0.0018, 0.0412],
        [0.0009, 0.0428],
        [0.0010, 0.0006],
        [0.0001, 0.0125],
        [0.0005, 0.0011],
        [0.0007, 0.0018],
        [0.0003, 0.0003],
        [0.0010, 0.0055],
        [0.0009, 0.0231],
        [0.0009, 0.0097],
        [0.0001, 0.0082]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0001],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0016],
        [0.0007],
        [0.0009],
        [0.0007],
        [0.0005],
        [0.0009],
        [0.0016],
        [0.0012]], device='cuda:0')/tensor([[0.0007, 0.0001, 0.0004, 0.0002, 0.0004, 0.0002, 0.0004, 0.0004, 0.0016,
         0.0007, 0.0009, 0.0007, 0.0005, 0.0009, 0.0016, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0039],
        [0.0003],
        [0.0017],
        [0.0037],
        [0.1134],
        [0.0099],
        [0.0208],
        [0.0020],
        [0.0294],
        [0.0009],
        [0.0012],
        [0.0018],
        [0.0005],
        [0.0006],
        [0.0048]], device='cuda:0')/tensor([[0.0020, 0.0039, 0.0003, 0.0017, 0.0037, 0.1134, 0.0099, 0.0208, 0.0020,
         0.0294, 0.0009, 0.0012, 0.0018, 0.0005, 0.0006, 0.0048]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.2579e-04, 1.9844e-03],
        [1.0572e-04, 3.9363e-03],
        [3.5761e-04, 3.2700e-04],
        [1.9025e-04, 1.7374e-03],
        [4.0066e-04, 3.6674e-03],
        [2.2502e-04, 1.1342e-01],
        [4.1019e-04, 9.8747e-03],
        [4.4373e-04, 2.0795e-02],
        [1.6169e-03, 1.9671e-03],
        [7.4137e-04, 2.9392e-02],
        [8.6548e-04, 9.0937e-04],
        [7.4629e-04, 1.2139e-03],
        [4.8960e-04, 1.7604e-03],
        [9.4227e-04, 5.0998e-04],
        [1.5781e-03, 5.9913e-04],
        [1.1993e-03, 4.7782e-03]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0088e-03],
        [5.9254e-03],
        [7.1645e-04],
        [8.1926e-04],
        [9.8794e-04],
        [8.5595e-04],
        [3.7922e-04],
        [1.4255e-05],
        [4.2813e-04],
        [2.6066e-04],
        [1.6112e-03],
        [3.2902e-04],
        [6.9112e-04],
        [1.0154e-03],
        [2.6814e-03],
        [5.5834e-04]], device='cuda:0')/tensor([[1.0088e-03, 5.9254e-03, 7.1645e-04, 8.1926e-04, 9.8794e-04, 8.5595e-04,
         3.7922e-04, 1.4255e-05, 4.2813e-04, 2.6066e-04, 1.6112e-03, 3.2902e-04,
         6.9112e-04, 1.0154e-03, 2.6814e-03, 5.5834e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0470],
        [0.0010],
        [0.0219],
        [0.0079],
        [0.0010],
        [0.0181],
        [0.0002],
        [0.0044],
        [0.0003],
        [0.1683],
        [0.0032],
        [0.0130],
        [0.0656],
        [0.0213],
        [0.0104]], device='cuda:0')/tensor([[0.0012, 0.0470, 0.0010, 0.0219, 0.0079, 0.0010, 0.0181, 0.0002, 0.0044,
         0.0003, 0.1683, 0.0032, 0.0130, 0.0656, 0.0213, 0.0104]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0088e-03, 1.1593e-03],
        [5.9254e-03, 4.6959e-02],
        [7.1645e-04, 1.0097e-03],
        [8.1926e-04, 2.1901e-02],
        [9.8794e-04, 7.9289e-03],
        [8.5595e-04, 9.6774e-04],
        [3.7922e-04, 1.8116e-02],
        [1.4255e-05, 2.0801e-04],
        [4.2813e-04, 4.4404e-03],
        [2.6066e-04, 2.8512e-04],
        [1.6112e-03, 1.6833e-01],
        [3.2902e-04, 3.1873e-03],
        [6.9112e-04, 1.3034e-02],
        [1.0154e-03, 6.5611e-02],
        [2.6814e-03, 2.1332e-02],
        [5.5834e-04, 1.0390e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0003],
        [0.0028],
        [0.0008],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0011],
        [0.0017],
        [0.0010],
        [0.0009],
        [0.0005],
        [0.0007]], device='cuda:0')/tensor([[0.0006, 0.0003, 0.0028, 0.0008, 0.0003, 0.0007, 0.0006, 0.0003, 0.0004,
         0.0004, 0.0011, 0.0017, 0.0010, 0.0009, 0.0005, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0170],
        [0.0052],
        [0.0092],
        [0.0148],
        [0.0013],
        [0.0044],
        [0.0042],
        [0.0073],
        [0.0095],
        [0.0052],
        [0.0024],
        [0.0065],
        [0.0140],
        [0.0266],
        [0.0307],
        [0.0062]], device='cuda:0')/tensor([[0.0170, 0.0052, 0.0092, 0.0148, 0.0013, 0.0044, 0.0042, 0.0073, 0.0095,
         0.0052, 0.0024, 0.0065, 0.0140, 0.0266, 0.0307, 0.0062]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0170],
        [0.0003, 0.0052],
        [0.0028, 0.0092],
        [0.0008, 0.0148],
        [0.0003, 0.0013],
        [0.0007, 0.0044],
        [0.0006, 0.0042],
        [0.0003, 0.0073],
        [0.0004, 0.0095],
        [0.0004, 0.0052],
        [0.0011, 0.0024],
        [0.0017, 0.0065],
        [0.0010, 0.0140],
        [0.0009, 0.0266],
        [0.0005, 0.0307],
        [0.0007, 0.0062]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0005],
        [0.0007],
        [0.0011],
        [0.0004],
        [0.0007],
        [0.0022],
        [0.0002],
        [0.0023],
        [0.0011],
        [0.0006],
        [0.0008],
        [0.0003],
        [0.0011],
        [0.0015],
        [0.0004]], device='cuda:0')/tensor([[0.0009, 0.0005, 0.0007, 0.0011, 0.0004, 0.0007, 0.0022, 0.0002, 0.0023,
         0.0011, 0.0006, 0.0008, 0.0003, 0.0011, 0.0015, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.2713e-03],
        [6.4263e-03],
        [3.5160e-02],
        [1.9771e-02],
        [2.2813e-02],
        [3.8963e-03],
        [1.0300e-02],
        [6.9116e-03],
        [4.3699e-03],
        [1.4074e-03],
        [3.0789e-03],
        [1.4858e-04],
        [6.4622e-05],
        [8.5548e-02],
        [3.0796e-03],
        [1.7762e-02]], device='cuda:0')/tensor([[2.2713e-03, 6.4263e-03, 3.5160e-02, 1.9771e-02, 2.2813e-02, 3.8963e-03,
         1.0300e-02, 6.9116e-03, 4.3699e-03, 1.4074e-03, 3.0789e-03, 1.4858e-04,
         6.4622e-05, 8.5548e-02, 3.0796e-03, 1.7762e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.7815e-04, 2.2713e-03],
        [5.4228e-04, 6.4263e-03],
        [6.5558e-04, 3.5160e-02],
        [1.0545e-03, 1.9771e-02],
        [3.5508e-04, 2.2813e-02],
        [7.3194e-04, 3.8963e-03],
        [2.2417e-03, 1.0300e-02],
        [2.0556e-04, 6.9116e-03],
        [2.3142e-03, 4.3699e-03],
        [1.1049e-03, 1.4074e-03],
        [6.2992e-04, 3.0789e-03],
        [7.9523e-04, 1.4858e-04],
        [2.9415e-04, 6.4622e-05],
        [1.1256e-03, 8.5548e-02],
        [1.5123e-03, 3.0796e-03],
        [4.4477e-04, 1.7762e-02]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0009],
        [0.0038],
        [0.0011],
        [0.0017],
        [0.0004],
        [0.0006],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0021],
        [0.0016],
        [0.0005],
        [0.0006],
        [0.0026],
        [0.0003]], device='cuda:0')/tensor([[0.0008, 0.0009, 0.0038, 0.0011, 0.0017, 0.0004, 0.0006, 0.0006, 0.0005,
         0.0005, 0.0021, 0.0016, 0.0005, 0.0006, 0.0026, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0062],
        [0.0074],
        [0.0136],
        [0.0243],
        [0.0043],
        [0.0161],
        [0.0007],
        [0.0045],
        [0.0020],
        [0.0028],
        [0.0375],
        [0.0006],
        [0.0027],
        [0.0189],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0062, 0.0074, 0.0136, 0.0243, 0.0043, 0.0161, 0.0007, 0.0045,
         0.0020, 0.0028, 0.0375, 0.0006, 0.0027, 0.0189, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0004],
        [0.0009, 0.0062],
        [0.0038, 0.0074],
        [0.0011, 0.0136],
        [0.0017, 0.0243],
        [0.0004, 0.0043],
        [0.0006, 0.0161],
        [0.0006, 0.0007],
        [0.0005, 0.0045],
        [0.0005, 0.0020],
        [0.0021, 0.0028],
        [0.0016, 0.0375],
        [0.0005, 0.0006],
        [0.0006, 0.0027],
        [0.0026, 0.0189],
        [0.0003, 0.0007]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0011],
        [0.0014],
        [0.0027],
        [0.0017],
        [0.0002],
        [0.0010],
        [0.0011],
        [0.0002],
        [0.0009],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0018, 0.0003, 0.0004, 0.0003, 0.0005, 0.0011, 0.0014, 0.0027, 0.0017,
         0.0002, 0.0010, 0.0011, 0.0002, 0.0009, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[1.9028e-02],
        [3.5459e-03],
        [7.5831e-03],
        [5.0322e-03],
        [8.5764e-04],
        [4.4776e-03],
        [4.7365e-02],
        [1.0879e-02],
        [7.3537e-02],
        [4.5352e-03],
        [1.9737e-03],
        [1.8325e-03],
        [5.5685e-05],
        [3.9844e-03],
        [5.9052e-03],
        [2.0644e-02]], device='cuda:0')/tensor([[1.9028e-02, 3.5459e-03, 7.5831e-03, 5.0322e-03, 8.5764e-04, 4.4776e-03,
         4.7365e-02, 1.0879e-02, 7.3537e-02, 4.5352e-03, 1.9737e-03, 1.8325e-03,
         5.5685e-05, 3.9844e-03, 5.9052e-03, 2.0644e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8420e-03, 1.9028e-02],
        [2.9386e-04, 3.5459e-03],
        [3.7851e-04, 7.5831e-03],
        [3.4193e-04, 5.0322e-03],
        [4.6412e-04, 8.5764e-04],
        [1.0522e-03, 4.4776e-03],
        [1.3723e-03, 4.7365e-02],
        [2.6559e-03, 1.0879e-02],
        [1.6719e-03, 7.3537e-02],
        [2.2722e-04, 4.5352e-03],
        [1.0212e-03, 1.9737e-03],
        [1.1404e-03, 1.8325e-03],
        [2.1378e-04, 5.5685e-05],
        [8.8358e-04, 3.9844e-03],
        [3.9076e-04, 5.9052e-03],
        [3.6678e-04, 2.0644e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0004],
        [0.0014],
        [0.0014],
        [0.0007],
        [0.0029],
        [0.0004],
        [0.0006],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0004, 0.0014, 0.0014, 0.0007, 0.0029, 0.0004, 0.0006, 0.0004,
         0.0006, 0.0005, 0.0005, 0.0005, 0.0003, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0123],
        [0.0337],
        [0.0475],
        [0.0047],
        [0.0187],
        [0.0541],
        [0.0112],
        [0.0023],
        [0.0268],
        [0.0014],
        [0.0047],
        [0.0127],
        [0.0032],
        [0.0102],
        [0.0032],
        [0.0008]], device='cuda:0')/tensor([[0.0123, 0.0337, 0.0475, 0.0047, 0.0187, 0.0541, 0.0112, 0.0023, 0.0268,
         0.0014, 0.0047, 0.0127, 0.0032, 0.0102, 0.0032, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0123],
        [0.0004, 0.0337],
        [0.0014, 0.0475],
        [0.0014, 0.0047],
        [0.0007, 0.0187],
        [0.0029, 0.0541],
        [0.0004, 0.0112],
        [0.0006, 0.0023],
        [0.0004, 0.0268],
        [0.0006, 0.0014],
        [0.0005, 0.0047],
        [0.0005, 0.0127],
        [0.0005, 0.0032],
        [0.0003, 0.0102],
        [0.0007, 0.0032],
        [0.0005, 0.0008]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0014],
        [0.0007],
        [0.0008],
        [0.0028],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0002, 0.0005, 0.0003, 0.0014, 0.0007, 0.0008, 0.0028,
         0.0005, 0.0002, 0.0008, 0.0004, 0.0003, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0223],
        [0.0189],
        [0.0029],
        [0.0033],
        [0.0378],
        [0.0052],
        [0.0271],
        [0.0386],
        [0.0011],
        [0.0030],
        [0.0006],
        [0.0056],
        [0.0163],
        [0.0096],
        [0.0082]], device='cuda:0')/tensor([[0.0004, 0.0223, 0.0189, 0.0029, 0.0033, 0.0378, 0.0052, 0.0271, 0.0386,
         0.0011, 0.0030, 0.0006, 0.0056, 0.0163, 0.0096, 0.0082]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0004],
        [0.0004, 0.0223],
        [0.0002, 0.0189],
        [0.0005, 0.0029],
        [0.0003, 0.0033],
        [0.0014, 0.0378],
        [0.0007, 0.0052],
        [0.0008, 0.0271],
        [0.0028, 0.0386],
        [0.0005, 0.0011],
        [0.0002, 0.0030],
        [0.0008, 0.0006],
        [0.0004, 0.0056],
        [0.0003, 0.0163],
        [0.0005, 0.0096],
        [0.0008, 0.0082]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0026],
        [0.0004],
        [0.0004],
        [0.0009],
        [0.0029],
        [0.0016],
        [0.0003],
        [0.0017],
        [0.0003],
        [0.0008],
        [0.0010],
        [0.0005],
        [0.0014],
        [0.0011]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0026, 0.0004, 0.0004, 0.0009, 0.0029, 0.0016, 0.0003,
         0.0017, 0.0003, 0.0008, 0.0010, 0.0005, 0.0014, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0082],
        [0.0071],
        [0.0402],
        [0.0161],
        [0.0120],
        [0.0565],
        [0.0046],
        [0.0340],
        [0.0004],
        [0.0473],
        [0.0100],
        [0.0018],
        [0.0010],
        [0.0029],
        [0.0322],
        [0.0017]], device='cuda:0')/tensor([[0.0082, 0.0071, 0.0402, 0.0161, 0.0120, 0.0565, 0.0046, 0.0340, 0.0004,
         0.0473, 0.0100, 0.0018, 0.0010, 0.0029, 0.0322, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0082],
        [0.0003, 0.0071],
        [0.0026, 0.0402],
        [0.0004, 0.0161],
        [0.0004, 0.0120],
        [0.0009, 0.0565],
        [0.0029, 0.0046],
        [0.0016, 0.0340],
        [0.0003, 0.0004],
        [0.0017, 0.0473],
        [0.0003, 0.0100],
        [0.0008, 0.0018],
        [0.0010, 0.0010],
        [0.0005, 0.0029],
        [0.0014, 0.0322],
        [0.0011, 0.0017]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0002],
        [0.0012],
        [0.0017],
        [0.0018],
        [0.0004],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0002, 0.0012, 0.0017, 0.0018, 0.0004, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0176],
        [0.0002],
        [0.1022],
        [0.0051],
        [0.0017],
        [0.0131],
        [0.0093],
        [0.0061]], device='cuda:0')/tensor([[0.0176, 0.0002, 0.1022, 0.0051, 0.0017, 0.0131, 0.0093, 0.0061]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0176],
        [0.0002, 0.0002],
        [0.0012, 0.1022],
        [0.0017, 0.0051],
        [0.0018, 0.0017],
        [0.0004, 0.0131],
        [0.0007, 0.0093],
        [0.0006, 0.0061]], device='cuda:0')
acc:  0.575
Time taken to execute the de SA task with prompt type common, variation 2 and batchsize 16: 0:03:17.153283
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA common 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 345.91it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0010],
        [0.0014],
        [0.0006],
        [0.0004],
        [0.0005],
        [0.0011],
        [0.0012],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0008],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0010, 0.0010, 0.0014, 0.0006, 0.0004, 0.0005, 0.0011, 0.0012, 0.0002,
         0.0002, 0.0004, 0.0004, 0.0006, 0.0008, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0128],
        [0.0042],
        [0.0079],
        [0.0291],
        [0.0468],
        [0.0640],
        [0.0323],
        [0.0700],
        [0.0051],
        [0.0008],
        [0.0042],
        [0.0423],
        [0.0441],
        [0.0376],
        [0.0124],
        [0.0854]], device='cuda:0')/tensor([[0.0128, 0.0042, 0.0079, 0.0291, 0.0468, 0.0640, 0.0323, 0.0700, 0.0051,
         0.0008, 0.0042, 0.0423, 0.0441, 0.0376, 0.0124, 0.0854]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0128],
        [0.0010, 0.0042],
        [0.0014, 0.0079],
        [0.0006, 0.0291],
        [0.0004, 0.0468],
        [0.0005, 0.0640],
        [0.0011, 0.0323],
        [0.0012, 0.0700],
        [0.0002, 0.0051],
        [0.0002, 0.0008],
        [0.0004, 0.0042],
        [0.0004, 0.0423],
        [0.0006, 0.0441],
        [0.0008, 0.0376],
        [0.0002, 0.0124],
        [0.0008, 0.0854]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0010],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0009],
        [0.0004],
        [0.0004],
        [0.0010],
        [0.0008],
        [0.0009],
        [0.0010]], device='cuda:0')/tensor([[0.0005, 0.0010, 0.0003, 0.0005, 0.0010, 0.0004, 0.0003, 0.0005, 0.0010,
         0.0009, 0.0004, 0.0004, 0.0010, 0.0008, 0.0009, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0072],
        [0.0679],
        [0.0021],
        [0.0022],
        [0.0030],
        [0.0545],
        [0.0099],
        [0.0198],
        [0.0051],
        [0.0806],
        [0.0237],
        [0.0028],
        [0.0069],
        [0.0522],
        [0.0063],
        [0.0104]], device='cuda:0')/tensor([[0.0072, 0.0679, 0.0021, 0.0022, 0.0030, 0.0545, 0.0099, 0.0198, 0.0051,
         0.0806, 0.0237, 0.0028, 0.0069, 0.0522, 0.0063, 0.0104]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0072],
        [0.0010, 0.0679],
        [0.0003, 0.0021],
        [0.0005, 0.0022],
        [0.0010, 0.0030],
        [0.0004, 0.0545],
        [0.0003, 0.0099],
        [0.0005, 0.0198],
        [0.0010, 0.0051],
        [0.0009, 0.0806],
        [0.0004, 0.0237],
        [0.0004, 0.0028],
        [0.0010, 0.0069],
        [0.0008, 0.0522],
        [0.0009, 0.0063],
        [0.0010, 0.0104]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0015],
        [0.0015],
        [0.0009],
        [0.0004],
        [0.0014],
        [0.0018],
        [0.0005],
        [0.0011],
        [0.0030],
        [0.0005],
        [0.0010],
        [0.0011],
        [0.0006],
        [0.0012],
        [0.0010]], device='cuda:0')/tensor([[0.0003, 0.0015, 0.0015, 0.0009, 0.0004, 0.0014, 0.0018, 0.0005, 0.0011,
         0.0030, 0.0005, 0.0010, 0.0011, 0.0006, 0.0012, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0143],
        [0.0220],
        [0.0235],
        [0.0063],
        [0.0024],
        [0.0864],
        [0.0224],
        [0.0046],
        [0.0090],
        [0.0604],
        [0.0112],
        [0.0483],
        [0.0541],
        [0.0273],
        [0.0562],
        [0.0249]], device='cuda:0')/tensor([[0.0143, 0.0220, 0.0235, 0.0063, 0.0024, 0.0864, 0.0224, 0.0046, 0.0090,
         0.0604, 0.0112, 0.0483, 0.0541, 0.0273, 0.0562, 0.0249]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0143],
        [0.0015, 0.0220],
        [0.0015, 0.0235],
        [0.0009, 0.0063],
        [0.0004, 0.0024],
        [0.0014, 0.0864],
        [0.0018, 0.0224],
        [0.0005, 0.0046],
        [0.0011, 0.0090],
        [0.0030, 0.0604],
        [0.0005, 0.0112],
        [0.0010, 0.0483],
        [0.0011, 0.0541],
        [0.0006, 0.0273],
        [0.0012, 0.0562],
        [0.0010, 0.0249]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0005],
        [0.0013],
        [0.0014],
        [0.0001],
        [0.0010],
        [0.0004],
        [0.0013],
        [0.0007],
        [0.0028],
        [0.0006],
        [0.0003],
        [0.0032],
        [0.0002],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0008, 0.0005, 0.0013, 0.0014, 0.0001, 0.0010, 0.0004, 0.0013, 0.0007,
         0.0028, 0.0006, 0.0003, 0.0032, 0.0002, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0119],
        [0.0991],
        [0.0104],
        [0.0042],
        [0.0376],
        [0.0296],
        [0.0606],
        [0.0037],
        [0.0568],
        [0.0221],
        [0.0190],
        [0.0067],
        [0.0544],
        [0.0120],
        [0.0380],
        [0.0559]], device='cuda:0')/tensor([[0.0119, 0.0991, 0.0104, 0.0042, 0.0376, 0.0296, 0.0606, 0.0037, 0.0568,
         0.0221, 0.0190, 0.0067, 0.0544, 0.0120, 0.0380, 0.0559]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0119],
        [0.0005, 0.0991],
        [0.0013, 0.0104],
        [0.0014, 0.0042],
        [0.0001, 0.0376],
        [0.0010, 0.0296],
        [0.0004, 0.0606],
        [0.0013, 0.0037],
        [0.0007, 0.0568],
        [0.0028, 0.0221],
        [0.0006, 0.0190],
        [0.0003, 0.0067],
        [0.0032, 0.0544],
        [0.0002, 0.0120],
        [0.0008, 0.0380],
        [0.0007, 0.0559]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.1807e-05],
        [1.1732e-03],
        [1.4863e-03],
        [4.0018e-04],
        [5.0706e-04],
        [3.6851e-04],
        [3.3667e-04],
        [1.0484e-03],
        [7.0453e-04],
        [1.1694e-03],
        [1.0031e-03],
        [7.6569e-04],
        [1.0824e-03],
        [4.8078e-04],
        [2.2779e-04],
        [9.1661e-04]], device='cuda:0')/tensor([[9.1807e-05, 1.1732e-03, 1.4863e-03, 4.0018e-04, 5.0706e-04, 3.6851e-04,
         3.3667e-04, 1.0484e-03, 7.0453e-04, 1.1694e-03, 1.0031e-03, 7.6569e-04,
         1.0824e-03, 4.8078e-04, 2.2779e-04, 9.1661e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0192],
        [0.0088],
        [0.1014],
        [0.0033],
        [0.0248],
        [0.0057],
        [0.0067],
        [0.0344],
        [0.0594],
        [0.0476],
        [0.0494],
        [0.0127],
        [0.0063],
        [0.0096],
        [0.0037],
        [0.0163]], device='cuda:0')/tensor([[0.0192, 0.0088, 0.1014, 0.0033, 0.0248, 0.0057, 0.0067, 0.0344, 0.0594,
         0.0476, 0.0494, 0.0127, 0.0063, 0.0096, 0.0037, 0.0163]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.1807e-05, 1.9161e-02],
        [1.1732e-03, 8.8322e-03],
        [1.4863e-03, 1.0137e-01],
        [4.0018e-04, 3.3026e-03],
        [5.0706e-04, 2.4833e-02],
        [3.6851e-04, 5.7009e-03],
        [3.3667e-04, 6.7055e-03],
        [1.0484e-03, 3.4437e-02],
        [7.0453e-04, 5.9356e-02],
        [1.1694e-03, 4.7591e-02],
        [1.0031e-03, 4.9419e-02],
        [7.6569e-04, 1.2693e-02],
        [1.0824e-03, 6.2500e-03],
        [4.8078e-04, 9.5874e-03],
        [2.2779e-04, 3.7048e-03],
        [9.1661e-04, 1.6325e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0005],
        [0.0003],
        [0.0011],
        [0.0015],
        [0.0016],
        [0.0041],
        [0.0017],
        [0.0005],
        [0.0012],
        [0.0008],
        [0.0001],
        [0.0003],
        [0.0007],
        [0.0005],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0005, 0.0003, 0.0011, 0.0015, 0.0016, 0.0041, 0.0017, 0.0005,
         0.0012, 0.0008, 0.0001, 0.0003, 0.0007, 0.0005, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0111],
        [0.0078],
        [0.0293],
        [0.0071],
        [0.0820],
        [0.0267],
        [0.0461],
        [0.0158],
        [0.0583],
        [0.0044],
        [0.0076],
        [0.0008],
        [0.0097],
        [0.0830],
        [0.0077],
        [0.0250]], device='cuda:0')/tensor([[0.0111, 0.0078, 0.0293, 0.0071, 0.0820, 0.0267, 0.0461, 0.0158, 0.0583,
         0.0044, 0.0076, 0.0008, 0.0097, 0.0830, 0.0077, 0.0250]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0111],
        [0.0005, 0.0078],
        [0.0003, 0.0293],
        [0.0011, 0.0071],
        [0.0015, 0.0820],
        [0.0016, 0.0267],
        [0.0041, 0.0461],
        [0.0017, 0.0158],
        [0.0005, 0.0583],
        [0.0012, 0.0044],
        [0.0008, 0.0076],
        [0.0001, 0.0008],
        [0.0003, 0.0097],
        [0.0007, 0.0830],
        [0.0005, 0.0077],
        [0.0006, 0.0250]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0003],
        [0.0015],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0001],
        [0.0013],
        [0.0012],
        [0.0005],
        [0.0030],
        [0.0003],
        [0.0008],
        [0.0013],
        [0.0007],
        [0.0007]], device='cuda:0')/tensor([[0.0010, 0.0003, 0.0015, 0.0005, 0.0007, 0.0008, 0.0001, 0.0013, 0.0012,
         0.0005, 0.0030, 0.0003, 0.0008, 0.0013, 0.0007, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0703],
        [0.0037],
        [0.0108],
        [0.0120],
        [0.0152],
        [0.0373],
        [0.0062],
        [0.0474],
        [0.0415],
        [0.0202],
        [0.0538],
        [0.0209],
        [0.0215],
        [0.0671],
        [0.0222],
        [0.0202]], device='cuda:0')/tensor([[0.0703, 0.0037, 0.0108, 0.0120, 0.0152, 0.0373, 0.0062, 0.0474, 0.0415,
         0.0202, 0.0538, 0.0209, 0.0215, 0.0671, 0.0222, 0.0202]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0703],
        [0.0003, 0.0037],
        [0.0015, 0.0108],
        [0.0005, 0.0120],
        [0.0007, 0.0152],
        [0.0008, 0.0373],
        [0.0001, 0.0062],
        [0.0013, 0.0474],
        [0.0012, 0.0415],
        [0.0005, 0.0202],
        [0.0030, 0.0538],
        [0.0003, 0.0209],
        [0.0008, 0.0215],
        [0.0013, 0.0671],
        [0.0007, 0.0222],
        [0.0007, 0.0202]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0002],
        [0.0008],
        [0.0009],
        [0.0012],
        [0.0003],
        [0.0011],
        [0.0001],
        [0.0005],
        [0.0005],
        [0.0014],
        [0.0007],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0016]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0008, 0.0009, 0.0012, 0.0003, 0.0011, 0.0001, 0.0005,
         0.0005, 0.0014, 0.0007, 0.0006, 0.0003, 0.0003, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0127],
        [0.0029],
        [0.0072],
        [0.0132],
        [0.0236],
        [0.0268],
        [0.0429],
        [0.0061],
        [0.0032],
        [0.0078],
        [0.0152],
        [0.0425],
        [0.0417],
        [0.0323],
        [0.0247],
        [0.0243]], device='cuda:0')/tensor([[0.0127, 0.0029, 0.0072, 0.0132, 0.0236, 0.0268, 0.0429, 0.0061, 0.0032,
         0.0078, 0.0152, 0.0425, 0.0417, 0.0323, 0.0247, 0.0243]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0127],
        [0.0002, 0.0029],
        [0.0008, 0.0072],
        [0.0009, 0.0132],
        [0.0012, 0.0236],
        [0.0003, 0.0268],
        [0.0011, 0.0429],
        [0.0001, 0.0061],
        [0.0005, 0.0032],
        [0.0005, 0.0078],
        [0.0014, 0.0152],
        [0.0007, 0.0425],
        [0.0006, 0.0417],
        [0.0003, 0.0323],
        [0.0003, 0.0247],
        [0.0016, 0.0243]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0006],
        [0.0009],
        [0.0012],
        [0.0016],
        [0.0010],
        [0.0006],
        [0.0003],
        [0.0021],
        [0.0008],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0009],
        [0.0006]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0006, 0.0009, 0.0012, 0.0016, 0.0010, 0.0006, 0.0003,
         0.0021, 0.0008, 0.0004, 0.0003, 0.0007, 0.0009, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0226],
        [0.0072],
        [0.0398],
        [0.0555],
        [0.0720],
        [0.0136],
        [0.0069],
        [0.0279],
        [0.0016],
        [0.0083],
        [0.0382],
        [0.0036],
        [0.0464],
        [0.0112],
        [0.0056],
        [0.0546]], device='cuda:0')/tensor([[0.0226, 0.0072, 0.0398, 0.0555, 0.0720, 0.0136, 0.0069, 0.0279, 0.0016,
         0.0083, 0.0382, 0.0036, 0.0464, 0.0112, 0.0056, 0.0546]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0226],
        [0.0002, 0.0072],
        [0.0006, 0.0398],
        [0.0009, 0.0555],
        [0.0012, 0.0720],
        [0.0016, 0.0136],
        [0.0010, 0.0069],
        [0.0006, 0.0279],
        [0.0003, 0.0016],
        [0.0021, 0.0083],
        [0.0008, 0.0382],
        [0.0004, 0.0036],
        [0.0003, 0.0464],
        [0.0007, 0.0112],
        [0.0009, 0.0056],
        [0.0006, 0.0546]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0010],
        [0.0004],
        [0.0002],
        [0.0008],
        [0.0013],
        [0.0004],
        [0.0009],
        [0.0002],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0002, 0.0002, 0.0010, 0.0004, 0.0002, 0.0008, 0.0013,
         0.0004, 0.0009, 0.0002, 0.0004, 0.0006, 0.0010, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0267],
        [0.0149],
        [0.0011],
        [0.0008],
        [0.0973],
        [0.0038],
        [0.0089],
        [0.0179],
        [0.0129],
        [0.0120],
        [0.0091],
        [0.0035],
        [0.0234],
        [0.0016],
        [0.0253],
        [0.0135]], device='cuda:0')/tensor([[0.0267, 0.0149, 0.0011, 0.0008, 0.0973, 0.0038, 0.0089, 0.0179, 0.0129,
         0.0120, 0.0091, 0.0035, 0.0234, 0.0016, 0.0253, 0.0135]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0267],
        [0.0004, 0.0149],
        [0.0002, 0.0011],
        [0.0002, 0.0008],
        [0.0010, 0.0973],
        [0.0004, 0.0038],
        [0.0002, 0.0089],
        [0.0008, 0.0179],
        [0.0013, 0.0129],
        [0.0004, 0.0120],
        [0.0009, 0.0091],
        [0.0002, 0.0035],
        [0.0004, 0.0234],
        [0.0006, 0.0016],
        [0.0010, 0.0253],
        [0.0002, 0.0135]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0007],
        [0.0009],
        [0.0004],
        [0.0008],
        [0.0010],
        [0.0007],
        [0.0006],
        [0.0005],
        [0.0013],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0011],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0007, 0.0009, 0.0004, 0.0008, 0.0010, 0.0007, 0.0006,
         0.0005, 0.0013, 0.0003, 0.0004, 0.0002, 0.0011, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0390],
        [0.0303],
        [0.0038],
        [0.0378],
        [0.0121],
        [0.0371],
        [0.0781],
        [0.0073],
        [0.0825],
        [0.0030],
        [0.0047],
        [0.0309],
        [0.0845],
        [0.0219],
        [0.0125],
        [0.0217]], device='cuda:0')/tensor([[0.0390, 0.0303, 0.0038, 0.0378, 0.0121, 0.0371, 0.0781, 0.0073, 0.0825,
         0.0030, 0.0047, 0.0309, 0.0845, 0.0219, 0.0125, 0.0217]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0390],
        [0.0002, 0.0303],
        [0.0007, 0.0038],
        [0.0009, 0.0378],
        [0.0004, 0.0121],
        [0.0008, 0.0371],
        [0.0010, 0.0781],
        [0.0007, 0.0073],
        [0.0006, 0.0825],
        [0.0005, 0.0030],
        [0.0013, 0.0047],
        [0.0003, 0.0309],
        [0.0004, 0.0845],
        [0.0002, 0.0219],
        [0.0011, 0.0125],
        [0.0011, 0.0217]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0003],
        [0.0003],
        [0.0013],
        [0.0007],
        [0.0002],
        [0.0008],
        [0.0003],
        [0.0014],
        [0.0004],
        [0.0032],
        [0.0001],
        [0.0005],
        [0.0010],
        [0.0013],
        [0.0004]], device='cuda:0')/tensor([[0.0009, 0.0003, 0.0003, 0.0013, 0.0007, 0.0002, 0.0008, 0.0003, 0.0014,
         0.0004, 0.0032, 0.0001, 0.0005, 0.0010, 0.0013, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0552],
        [0.0129],
        [0.0431],
        [0.1486],
        [0.0599],
        [0.0154],
        [0.0236],
        [0.0437],
        [0.0130],
        [0.0042],
        [0.0224],
        [0.0074],
        [0.0041],
        [0.0319],
        [0.0256],
        [0.0183]], device='cuda:0')/tensor([[0.0552, 0.0129, 0.0431, 0.1486, 0.0599, 0.0154, 0.0236, 0.0437, 0.0130,
         0.0042, 0.0224, 0.0074, 0.0041, 0.0319, 0.0256, 0.0183]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.9361e-04, 5.5194e-02],
        [3.3210e-04, 1.2868e-02],
        [2.7463e-04, 4.3099e-02],
        [1.3370e-03, 1.4859e-01],
        [6.6189e-04, 5.9878e-02],
        [1.9335e-04, 1.5407e-02],
        [7.6817e-04, 2.3568e-02],
        [3.4220e-04, 4.3688e-02],
        [1.4000e-03, 1.2951e-02],
        [3.9376e-04, 4.2076e-03],
        [3.1964e-03, 2.2374e-02],
        [1.3278e-04, 7.4240e-03],
        [4.6671e-04, 4.1014e-03],
        [9.8368e-04, 3.1867e-02],
        [1.2742e-03, 2.5556e-02],
        [3.7837e-04, 1.8323e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0005],
        [0.0008],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0007]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0005, 0.0008, 0.0004, 0.0004, 0.0003, 0.0007]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0697],
        [0.0073],
        [0.0185],
        [0.0341],
        [0.0565],
        [0.0158],
        [0.0006],
        [0.0725]], device='cuda:0')/tensor([[0.0697, 0.0073, 0.0185, 0.0341, 0.0565, 0.0158, 0.0006, 0.0725]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0015, 0.0697],
        [0.0002, 0.0073],
        [0.0005, 0.0185],
        [0.0008, 0.0341],
        [0.0004, 0.0565],
        [0.0004, 0.0158],
        [0.0003, 0.0006],
        [0.0007, 0.0725]], device='cuda:0')
acc:  0.5
Time taken to execute the de SA task with prompt type common, variation 3 and batchsize 16: 0:03:18.235187
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA common 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 348.62it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0055],
        [0.0010],
        [0.0013],
        [0.0018],
        [0.0008],
        [0.0020],
        [0.0040],
        [0.0023],
        [0.0014],
        [0.0028],
        [0.0003],
        [0.0012],
        [0.0019],
        [0.0009],
        [0.0050],
        [0.0013]], device='cuda:0')/tensor([[0.0055, 0.0010, 0.0013, 0.0018, 0.0008, 0.0020, 0.0040, 0.0023, 0.0014,
         0.0028, 0.0003, 0.0012, 0.0019, 0.0009, 0.0050, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0102],
        [0.0026],
        [0.0012],
        [0.0004],
        [0.1541],
        [0.0161],
        [0.2060],
        [0.1076],
        [0.0391],
        [0.0031],
        [0.0213],
        [0.0018],
        [0.0560],
        [0.0160],
        [0.0049]], device='cuda:0')/tensor([[0.0025, 0.0102, 0.0026, 0.0012, 0.0004, 0.1541, 0.0161, 0.2060, 0.1076,
         0.0391, 0.0031, 0.0213, 0.0018, 0.0560, 0.0160, 0.0049]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0055, 0.0025],
        [0.0010, 0.0102],
        [0.0013, 0.0026],
        [0.0018, 0.0012],
        [0.0008, 0.0004],
        [0.0020, 0.1541],
        [0.0040, 0.0161],
        [0.0023, 0.2060],
        [0.0014, 0.1076],
        [0.0028, 0.0391],
        [0.0003, 0.0031],
        [0.0012, 0.0213],
        [0.0019, 0.0018],
        [0.0009, 0.0560],
        [0.0050, 0.0160],
        [0.0013, 0.0049]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0009],
        [0.0002],
        [0.0015],
        [0.0007],
        [0.0025],
        [0.0017],
        [0.0008],
        [0.0008],
        [0.0039],
        [0.0038],
        [0.0016],
        [0.0027],
        [0.0022],
        [0.0011],
        [0.0012]], device='cuda:0')/tensor([[0.0006, 0.0009, 0.0002, 0.0015, 0.0007, 0.0025, 0.0017, 0.0008, 0.0008,
         0.0039, 0.0038, 0.0016, 0.0027, 0.0022, 0.0011, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0333],
        [0.0059],
        [0.0140],
        [0.0457],
        [0.0163],
        [0.0047],
        [0.0027],
        [0.0126],
        [0.0204],
        [0.0178],
        [0.0018],
        [0.0398],
        [0.0026],
        [0.0025],
        [0.0188],
        [0.0194]], device='cuda:0')/tensor([[0.0333, 0.0059, 0.0140, 0.0457, 0.0163, 0.0047, 0.0027, 0.0126, 0.0204,
         0.0178, 0.0018, 0.0398, 0.0026, 0.0025, 0.0188, 0.0194]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0333],
        [0.0009, 0.0059],
        [0.0002, 0.0140],
        [0.0015, 0.0457],
        [0.0007, 0.0163],
        [0.0025, 0.0047],
        [0.0017, 0.0027],
        [0.0008, 0.0126],
        [0.0008, 0.0204],
        [0.0039, 0.0178],
        [0.0038, 0.0018],
        [0.0016, 0.0398],
        [0.0027, 0.0026],
        [0.0022, 0.0025],
        [0.0011, 0.0188],
        [0.0012, 0.0194]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0008],
        [0.0011],
        [0.0002],
        [0.0031],
        [0.0008],
        [0.0011],
        [0.0013],
        [0.0008],
        [0.0003],
        [0.0007],
        [0.0029],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0023, 0.0008, 0.0011, 0.0002, 0.0031, 0.0008, 0.0011, 0.0013, 0.0008,
         0.0003, 0.0007, 0.0029, 0.0005, 0.0006, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0482],
        [0.0042],
        [0.0549],
        [0.0001],
        [0.0503],
        [0.0458],
        [0.0263],
        [0.0003],
        [0.0015],
        [0.0087],
        [0.0018],
        [0.0018],
        [0.0098],
        [0.0851],
        [0.0038],
        [0.0567]], device='cuda:0')/tensor([[0.0482, 0.0042, 0.0549, 0.0001, 0.0503, 0.0458, 0.0263, 0.0003, 0.0015,
         0.0087, 0.0018, 0.0018, 0.0098, 0.0851, 0.0038, 0.0567]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0023, 0.0482],
        [0.0008, 0.0042],
        [0.0011, 0.0549],
        [0.0002, 0.0001],
        [0.0031, 0.0503],
        [0.0008, 0.0458],
        [0.0011, 0.0263],
        [0.0013, 0.0003],
        [0.0008, 0.0015],
        [0.0003, 0.0087],
        [0.0007, 0.0018],
        [0.0029, 0.0018],
        [0.0005, 0.0098],
        [0.0006, 0.0851],
        [0.0004, 0.0038],
        [0.0005, 0.0567]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0022],
        [0.0039],
        [0.0032],
        [0.0014],
        [0.0014],
        [0.0007],
        [0.0009],
        [0.0036],
        [0.0009],
        [0.0026],
        [0.0001],
        [0.0008],
        [0.0014],
        [0.0011],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0022, 0.0039, 0.0032, 0.0014, 0.0014, 0.0007, 0.0009, 0.0036,
         0.0009, 0.0026, 0.0001, 0.0008, 0.0014, 0.0011, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0032],
        [0.0426],
        [0.0106],
        [0.0006],
        [0.0011],
        [0.0208],
        [0.0150],
        [0.0852],
        [0.0088],
        [0.0185],
        [0.0596],
        [0.0003],
        [0.0201],
        [0.0054],
        [0.0103]], device='cuda:0')/tensor([[0.0020, 0.0032, 0.0426, 0.0106, 0.0006, 0.0011, 0.0208, 0.0150, 0.0852,
         0.0088, 0.0185, 0.0596, 0.0003, 0.0201, 0.0054, 0.0103]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0020],
        [0.0022, 0.0032],
        [0.0039, 0.0426],
        [0.0032, 0.0106],
        [0.0014, 0.0006],
        [0.0014, 0.0011],
        [0.0007, 0.0208],
        [0.0009, 0.0150],
        [0.0036, 0.0852],
        [0.0009, 0.0088],
        [0.0026, 0.0185],
        [0.0001, 0.0596],
        [0.0008, 0.0003],
        [0.0014, 0.0201],
        [0.0011, 0.0054],
        [0.0004, 0.0103]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0011],
        [0.0009],
        [0.0042],
        [0.0003],
        [0.0019],
        [0.0025],
        [0.0007],
        [0.0010],
        [0.0024],
        [0.0020],
        [0.0027],
        [0.0014],
        [0.0009],
        [0.0007],
        [0.0024]], device='cuda:0')/tensor([[0.0010, 0.0011, 0.0009, 0.0042, 0.0003, 0.0019, 0.0025, 0.0007, 0.0010,
         0.0024, 0.0020, 0.0027, 0.0014, 0.0009, 0.0007, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0225],
        [0.0107],
        [0.0469],
        [0.0193],
        [0.0121],
        [0.0080],
        [0.0541],
        [0.0139],
        [0.0016],
        [0.0045],
        [0.0007],
        [0.0046],
        [0.0179],
        [0.0005],
        [0.0093],
        [0.0161]], device='cuda:0')/tensor([[0.0225, 0.0107, 0.0469, 0.0193, 0.0121, 0.0080, 0.0541, 0.0139, 0.0016,
         0.0045, 0.0007, 0.0046, 0.0179, 0.0005, 0.0093, 0.0161]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0225],
        [0.0011, 0.0107],
        [0.0009, 0.0469],
        [0.0042, 0.0193],
        [0.0003, 0.0121],
        [0.0019, 0.0080],
        [0.0025, 0.0541],
        [0.0007, 0.0139],
        [0.0010, 0.0016],
        [0.0024, 0.0045],
        [0.0020, 0.0007],
        [0.0027, 0.0046],
        [0.0014, 0.0179],
        [0.0009, 0.0005],
        [0.0007, 0.0093],
        [0.0024, 0.0161]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0081],
        [0.0018],
        [0.0014],
        [0.0040],
        [0.0006],
        [0.0006],
        [0.0010],
        [0.0020],
        [0.0026],
        [0.0010],
        [0.0024],
        [0.0003],
        [0.0014],
        [0.0009],
        [0.0013]], device='cuda:0')/tensor([[0.0024, 0.0081, 0.0018, 0.0014, 0.0040, 0.0006, 0.0006, 0.0010, 0.0020,
         0.0026, 0.0010, 0.0024, 0.0003, 0.0014, 0.0009, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0065],
        [0.0320],
        [0.0069],
        [0.0460],
        [0.0003],
        [0.0094],
        [0.0340],
        [0.0091],
        [0.0010],
        [0.0180],
        [0.0009],
        [0.0017],
        [0.0013],
        [0.0420],
        [0.0017]], device='cuda:0')/tensor([[0.0015, 0.0065, 0.0320, 0.0069, 0.0460, 0.0003, 0.0094, 0.0340, 0.0091,
         0.0010, 0.0180, 0.0009, 0.0017, 0.0013, 0.0420, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0024, 0.0015],
        [0.0081, 0.0065],
        [0.0018, 0.0320],
        [0.0014, 0.0069],
        [0.0040, 0.0460],
        [0.0006, 0.0003],
        [0.0006, 0.0094],
        [0.0010, 0.0340],
        [0.0020, 0.0091],
        [0.0026, 0.0010],
        [0.0010, 0.0180],
        [0.0024, 0.0009],
        [0.0003, 0.0017],
        [0.0014, 0.0013],
        [0.0009, 0.0420],
        [0.0013, 0.0017]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0018],
        [0.0017],
        [0.0023],
        [0.0026],
        [0.0011],
        [0.0011],
        [0.0017],
        [0.0018],
        [0.0026],
        [0.0023],
        [0.0097],
        [0.0018],
        [0.0019],
        [0.0021],
        [0.0003]], device='cuda:0')/tensor([[0.0007, 0.0018, 0.0017, 0.0023, 0.0026, 0.0011, 0.0011, 0.0017, 0.0018,
         0.0026, 0.0023, 0.0097, 0.0018, 0.0019, 0.0021, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0235],
        [0.0090],
        [0.0009],
        [0.0036],
        [0.0424],
        [0.0088],
        [0.0078],
        [0.0835],
        [0.0084],
        [0.0751],
        [0.0283],
        [0.0005],
        [0.0071],
        [0.0064],
        [0.0173]], device='cuda:0')/tensor([[0.0028, 0.0235, 0.0090, 0.0009, 0.0036, 0.0424, 0.0088, 0.0078, 0.0835,
         0.0084, 0.0751, 0.0283, 0.0005, 0.0071, 0.0064, 0.0173]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0028],
        [0.0018, 0.0235],
        [0.0017, 0.0090],
        [0.0023, 0.0009],
        [0.0026, 0.0036],
        [0.0011, 0.0424],
        [0.0011, 0.0088],
        [0.0017, 0.0078],
        [0.0018, 0.0835],
        [0.0026, 0.0084],
        [0.0023, 0.0751],
        [0.0097, 0.0283],
        [0.0018, 0.0005],
        [0.0019, 0.0071],
        [0.0021, 0.0064],
        [0.0003, 0.0173]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0008],
        [0.0065],
        [0.0017],
        [0.0006],
        [0.0020],
        [0.0021],
        [0.0011],
        [0.0004],
        [0.0017],
        [0.0017],
        [0.0014],
        [0.0007],
        [0.0027],
        [0.0009],
        [0.0013]], device='cuda:0')/tensor([[0.0006, 0.0008, 0.0065, 0.0017, 0.0006, 0.0020, 0.0021, 0.0011, 0.0004,
         0.0017, 0.0017, 0.0014, 0.0007, 0.0027, 0.0009, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0214],
        [0.0080],
        [0.0102],
        [0.0278],
        [0.0013],
        [0.0028],
        [0.0171],
        [0.0429],
        [0.0152],
        [0.0169],
        [0.0057],
        [0.0016],
        [0.0037],
        [0.0019],
        [0.0257],
        [0.0163]], device='cuda:0')/tensor([[0.0214, 0.0080, 0.0102, 0.0278, 0.0013, 0.0028, 0.0171, 0.0429, 0.0152,
         0.0169, 0.0057, 0.0016, 0.0037, 0.0019, 0.0257, 0.0163]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0214],
        [0.0008, 0.0080],
        [0.0065, 0.0102],
        [0.0017, 0.0278],
        [0.0006, 0.0013],
        [0.0020, 0.0028],
        [0.0021, 0.0171],
        [0.0011, 0.0429],
        [0.0004, 0.0152],
        [0.0017, 0.0169],
        [0.0017, 0.0057],
        [0.0014, 0.0016],
        [0.0007, 0.0037],
        [0.0027, 0.0019],
        [0.0009, 0.0257],
        [0.0013, 0.0163]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0019],
        [0.0009],
        [0.0063],
        [0.0006],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0029],
        [0.0048],
        [0.0019],
        [0.0014],
        [0.0021],
        [0.0033],
        [0.0007],
        [0.0004]], device='cuda:0')/tensor([[0.0011, 0.0019, 0.0009, 0.0063, 0.0006, 0.0006, 0.0005, 0.0006, 0.0029,
         0.0048, 0.0019, 0.0014, 0.0021, 0.0033, 0.0007, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.3755e-02],
        [1.3358e-03],
        [2.9863e-02],
        [3.4542e-02],
        [8.3107e-05],
        [1.7260e-04],
        [1.2688e-02],
        [4.3978e-03],
        [2.4821e-02],
        [6.4191e-03],
        [9.1170e-04],
        [5.7680e-04],
        [4.8965e-04],
        [8.1517e-03],
        [1.8619e-02],
        [4.5980e-03]], device='cuda:0')/tensor([[5.3755e-02, 1.3358e-03, 2.9863e-02, 3.4542e-02, 8.3107e-05, 1.7260e-04,
         1.2688e-02, 4.3978e-03, 2.4821e-02, 6.4191e-03, 9.1170e-04, 5.7680e-04,
         4.8965e-04, 8.1517e-03, 1.8619e-02, 4.5980e-03]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[1.0958e-03, 5.3755e-02],
        [1.9197e-03, 1.3358e-03],
        [9.4932e-04, 2.9863e-02],
        [6.2575e-03, 3.4542e-02],
        [5.6115e-04, 8.3107e-05],
        [6.0267e-04, 1.7260e-04],
        [5.3255e-04, 1.2688e-02],
        [6.2604e-04, 4.3978e-03],
        [2.8998e-03, 2.4821e-02],
        [4.7852e-03, 6.4191e-03],
        [1.8694e-03, 9.1170e-04],
        [1.4239e-03, 5.7680e-04],
        [2.1332e-03, 4.8965e-04],
        [3.3242e-03, 8.1517e-03],
        [7.4250e-04, 1.8619e-02],
        [4.2074e-04, 4.5980e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0035],
        [0.0025],
        [0.0009],
        [0.0020],
        [0.0003],
        [0.0020],
        [0.0012],
        [0.0029],
        [0.0020],
        [0.0046],
        [0.0010],
        [0.0010],
        [0.0006],
        [0.0020],
        [0.0008],
        [0.0017]], device='cuda:0')/tensor([[0.0035, 0.0025, 0.0009, 0.0020, 0.0003, 0.0020, 0.0012, 0.0029, 0.0020,
         0.0046, 0.0010, 0.0010, 0.0006, 0.0020, 0.0008, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0373],
        [0.0171],
        [0.0004],
        [0.0071],
        [0.0024],
        [0.0033],
        [0.0043],
        [0.0290],
        [0.0013],
        [0.0005],
        [0.0117],
        [0.0042],
        [0.0912],
        [0.0837],
        [0.0061]], device='cuda:0')/tensor([[0.0011, 0.0373, 0.0171, 0.0004, 0.0071, 0.0024, 0.0033, 0.0043, 0.0290,
         0.0013, 0.0005, 0.0117, 0.0042, 0.0912, 0.0837, 0.0061]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0035, 0.0011],
        [0.0025, 0.0373],
        [0.0009, 0.0171],
        [0.0020, 0.0004],
        [0.0003, 0.0071],
        [0.0020, 0.0024],
        [0.0012, 0.0033],
        [0.0029, 0.0043],
        [0.0020, 0.0290],
        [0.0046, 0.0013],
        [0.0010, 0.0005],
        [0.0010, 0.0117],
        [0.0006, 0.0042],
        [0.0020, 0.0912],
        [0.0008, 0.0837],
        [0.0017, 0.0061]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0024],
        [0.0020],
        [0.0003],
        [0.0012],
        [0.0007],
        [0.0012],
        [0.0009],
        [0.0010],
        [0.0018],
        [0.0020],
        [0.0011],
        [0.0017],
        [0.0014],
        [0.0022],
        [0.0018]], device='cuda:0')/tensor([[0.0015, 0.0024, 0.0020, 0.0003, 0.0012, 0.0007, 0.0012, 0.0009, 0.0010,
         0.0018, 0.0020, 0.0011, 0.0017, 0.0014, 0.0022, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0045],
        [0.0550],
        [0.0049],
        [0.0230],
        [0.0005],
        [0.0209],
        [0.0095],
        [0.0135],
        [0.0076],
        [0.0274],
        [0.0330],
        [0.0438],
        [0.0023],
        [0.0563],
        [0.0567]], device='cuda:0')/tensor([[0.0025, 0.0045, 0.0550, 0.0049, 0.0230, 0.0005, 0.0209, 0.0095, 0.0135,
         0.0076, 0.0274, 0.0330, 0.0438, 0.0023, 0.0563, 0.0567]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.0025],
        [0.0024, 0.0045],
        [0.0020, 0.0550],
        [0.0003, 0.0049],
        [0.0012, 0.0230],
        [0.0007, 0.0005],
        [0.0012, 0.0209],
        [0.0009, 0.0095],
        [0.0010, 0.0135],
        [0.0018, 0.0076],
        [0.0020, 0.0274],
        [0.0011, 0.0330],
        [0.0017, 0.0438],
        [0.0014, 0.0023],
        [0.0022, 0.0563],
        [0.0018, 0.0567]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0013],
        [0.0017],
        [0.0014],
        [0.0007],
        [0.0018],
        [0.0028],
        [0.0019],
        [0.0014],
        [0.0022],
        [0.0023],
        [0.0023],
        [0.0009],
        [0.0027],
        [0.0008],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0013, 0.0017, 0.0014, 0.0007, 0.0018, 0.0028, 0.0019, 0.0014,
         0.0022, 0.0023, 0.0023, 0.0009, 0.0027, 0.0008, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0148],
        [0.0228],
        [0.0010],
        [0.0006],
        [0.0004],
        [0.0187],
        [0.0824],
        [0.0192],
        [0.0156],
        [0.0027],
        [0.0360],
        [0.0048],
        [0.0156],
        [0.0310],
        [0.0006],
        [0.0272]], device='cuda:0')/tensor([[0.0148, 0.0228, 0.0010, 0.0006, 0.0004, 0.0187, 0.0824, 0.0192, 0.0156,
         0.0027, 0.0360, 0.0048, 0.0156, 0.0310, 0.0006, 0.0272]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0148],
        [0.0013, 0.0228],
        [0.0017, 0.0010],
        [0.0014, 0.0006],
        [0.0007, 0.0004],
        [0.0018, 0.0187],
        [0.0028, 0.0824],
        [0.0019, 0.0192],
        [0.0014, 0.0156],
        [0.0022, 0.0027],
        [0.0023, 0.0360],
        [0.0023, 0.0048],
        [0.0009, 0.0156],
        [0.0027, 0.0310],
        [0.0008, 0.0006],
        [0.0005, 0.0272]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0025],
        [0.0025],
        [0.0005],
        [0.0038],
        [0.0009],
        [0.0004],
        [0.0048],
        [0.0025]], device='cuda:0')/tensor([[0.0025, 0.0025, 0.0005, 0.0038, 0.0009, 0.0004, 0.0048, 0.0025]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0007],
        [0.0081],
        [0.0071],
        [0.0051],
        [0.0002],
        [0.0118],
        [0.0038],
        [0.0029]], device='cuda:0')/tensor([[0.0007, 0.0081, 0.0071, 0.0051, 0.0002, 0.0118, 0.0038, 0.0029]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0025, 0.0007],
        [0.0025, 0.0081],
        [0.0005, 0.0071],
        [0.0038, 0.0051],
        [0.0009, 0.0002],
        [0.0004, 0.0118],
        [0.0048, 0.0038],
        [0.0025, 0.0029]], device='cuda:0')
acc:  0.695
Time taken to execute the de SA task with prompt type common, variation 4 and batchsize 16: 0:03:16.731593
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA common 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.52it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0548e-03],
        [1.8513e-04],
        [2.0329e-03],
        [7.1051e-04],
        [6.2674e-04],
        [1.3304e-03],
        [1.7352e-04],
        [6.7882e-05],
        [2.4498e-03],
        [1.5980e-03],
        [6.1498e-04],
        [4.5577e-04],
        [1.1703e-03],
        [7.1690e-04],
        [4.1309e-04],
        [3.7602e-04]], device='cuda:0')/tensor([[1.0548e-03, 1.8513e-04, 2.0329e-03, 7.1051e-04, 6.2674e-04, 1.3304e-03,
         1.7352e-04, 6.7882e-05, 2.4498e-03, 1.5980e-03, 6.1498e-04, 4.5577e-04,
         1.1703e-03, 7.1690e-04, 4.1309e-04, 3.7602e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.6487e-04],
        [3.5349e-05],
        [1.4284e-02],
        [5.4257e-03],
        [3.3112e-04],
        [9.0587e-04],
        [1.1940e-04],
        [3.4532e-02],
        [9.0472e-02],
        [3.2969e-03],
        [1.8527e-02],
        [2.7289e-04],
        [5.9648e-02],
        [1.4531e-02],
        [8.9111e-05],
        [4.0419e-04]], device='cuda:0')/tensor([[6.6487e-04, 3.5349e-05, 1.4284e-02, 5.4257e-03, 3.3112e-04, 9.0587e-04,
         1.1940e-04, 3.4532e-02, 9.0472e-02, 3.2969e-03, 1.8527e-02, 2.7289e-04,
         5.9648e-02, 1.4531e-02, 8.9111e-05, 4.0419e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0548e-03, 6.6487e-04],
        [1.8513e-04, 3.5349e-05],
        [2.0329e-03, 1.4284e-02],
        [7.1051e-04, 5.4257e-03],
        [6.2674e-04, 3.3112e-04],
        [1.3304e-03, 9.0587e-04],
        [1.7352e-04, 1.1940e-04],
        [6.7882e-05, 3.4532e-02],
        [2.4498e-03, 9.0472e-02],
        [1.5980e-03, 3.2969e-03],
        [6.1498e-04, 1.8527e-02],
        [4.5577e-04, 2.7289e-04],
        [1.1703e-03, 5.9648e-02],
        [7.1690e-04, 1.4531e-02],
        [4.1309e-04, 8.9111e-05],
        [3.7602e-04, 4.0419e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0008],
        [0.0017],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0022],
        [0.0006],
        [0.0006],
        [0.0025],
        [0.0003],
        [0.0006],
        [0.0068],
        [0.0047],
        [0.0015],
        [0.0008]], device='cuda:0')/tensor([[0.0010, 0.0008, 0.0017, 0.0006, 0.0002, 0.0005, 0.0022, 0.0006, 0.0006,
         0.0025, 0.0003, 0.0006, 0.0068, 0.0047, 0.0015, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0223],
        [0.0235],
        [0.0361],
        [0.0755],
        [0.0087],
        [0.0100],
        [0.0333],
        [0.0006],
        [0.0555],
        [0.0933],
        [0.0017],
        [0.0232],
        [0.0544],
        [0.0355],
        [0.0019],
        [0.0122]], device='cuda:0')/tensor([[0.0223, 0.0235, 0.0361, 0.0755, 0.0087, 0.0100, 0.0333, 0.0006, 0.0555,
         0.0933, 0.0017, 0.0232, 0.0544, 0.0355, 0.0019, 0.0122]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0223],
        [0.0008, 0.0235],
        [0.0017, 0.0361],
        [0.0006, 0.0755],
        [0.0002, 0.0087],
        [0.0005, 0.0100],
        [0.0022, 0.0333],
        [0.0006, 0.0006],
        [0.0006, 0.0555],
        [0.0025, 0.0933],
        [0.0003, 0.0017],
        [0.0006, 0.0232],
        [0.0068, 0.0544],
        [0.0047, 0.0355],
        [0.0015, 0.0019],
        [0.0008, 0.0122]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0012],
        [0.0015],
        [0.0011],
        [0.0004],
        [0.0014],
        [0.0011],
        [0.0003],
        [0.0050],
        [0.0011],
        [0.0010],
        [0.0018],
        [0.0012],
        [0.0007],
        [0.0019],
        [0.0015]], device='cuda:0')/tensor([[0.0015, 0.0012, 0.0015, 0.0011, 0.0004, 0.0014, 0.0011, 0.0003, 0.0050,
         0.0011, 0.0010, 0.0018, 0.0012, 0.0007, 0.0019, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1696],
        [0.1197],
        [0.1184],
        [0.0049],
        [0.0004],
        [0.0024],
        [0.1573],
        [0.0004],
        [0.0127],
        [0.0156],
        [0.1028],
        [0.0021],
        [0.0069],
        [0.0172],
        [0.0106],
        [0.0043]], device='cuda:0')/tensor([[0.1696, 0.1197, 0.1184, 0.0049, 0.0004, 0.0024, 0.1573, 0.0004, 0.0127,
         0.0156, 0.1028, 0.0021, 0.0069, 0.0172, 0.0106, 0.0043]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.1696],
        [0.0012, 0.1197],
        [0.0015, 0.1184],
        [0.0011, 0.0049],
        [0.0004, 0.0004],
        [0.0014, 0.0024],
        [0.0011, 0.1573],
        [0.0003, 0.0004],
        [0.0050, 0.0127],
        [0.0011, 0.0156],
        [0.0010, 0.1028],
        [0.0018, 0.0021],
        [0.0012, 0.0069],
        [0.0007, 0.0172],
        [0.0019, 0.0106],
        [0.0015, 0.0043]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0021],
        [0.0001],
        [0.0001],
        [0.0011],
        [0.0015],
        [0.0018],
        [0.0006],
        [0.0009],
        [0.0006],
        [0.0009],
        [0.0007],
        [0.0009],
        [0.0012],
        [0.0002],
        [0.0011]], device='cuda:0')/tensor([[0.0009, 0.0021, 0.0001, 0.0001, 0.0011, 0.0015, 0.0018, 0.0006, 0.0009,
         0.0006, 0.0009, 0.0007, 0.0009, 0.0012, 0.0002, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.9430e-04],
        [1.2887e-02],
        [5.4085e-03],
        [3.4554e-03],
        [3.1479e-03],
        [1.3253e-01],
        [2.3855e-03],
        [5.6116e-02],
        [7.9397e-02],
        [2.5429e-03],
        [4.7054e-02],
        [3.8875e-02],
        [2.9419e-02],
        [1.7560e-01],
        [1.0181e-04],
        [4.8543e-02]], device='cuda:0')/tensor([[4.9430e-04, 1.2887e-02, 5.4085e-03, 3.4554e-03, 3.1479e-03, 1.3253e-01,
         2.3855e-03, 5.6116e-02, 7.9397e-02, 2.5429e-03, 4.7054e-02, 3.8875e-02,
         2.9419e-02, 1.7560e-01, 1.0181e-04, 4.8543e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.4722e-04, 4.9430e-04],
        [2.1403e-03, 1.2887e-02],
        [1.3267e-04, 5.4085e-03],
        [1.3817e-04, 3.4554e-03],
        [1.0589e-03, 3.1479e-03],
        [1.4638e-03, 1.3253e-01],
        [1.8354e-03, 2.3855e-03],
        [6.4934e-04, 5.6116e-02],
        [9.2185e-04, 7.9397e-02],
        [6.2879e-04, 2.5429e-03],
        [8.8670e-04, 4.7054e-02],
        [6.5923e-04, 3.8875e-02],
        [8.6525e-04, 2.9419e-02],
        [1.2057e-03, 1.7560e-01],
        [1.9061e-04, 1.0181e-04],
        [1.0932e-03, 4.8543e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0007],
        [0.0009],
        [0.0018],
        [0.0012],
        [0.0012],
        [0.0023],
        [0.0002],
        [0.0012],
        [0.0008],
        [0.0019],
        [0.0007],
        [0.0003],
        [0.0006],
        [0.0027],
        [0.0018]], device='cuda:0')/tensor([[0.0008, 0.0007, 0.0009, 0.0018, 0.0012, 0.0012, 0.0023, 0.0002, 0.0012,
         0.0008, 0.0019, 0.0007, 0.0003, 0.0006, 0.0027, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0021],
        [0.0217],
        [0.0040],
        [0.0164],
        [0.0827],
        [0.0323],
        [0.0286],
        [0.0021],
        [0.0261],
        [0.0028],
        [0.0302],
        [0.1117],
        [0.0264],
        [0.0004],
        [0.0217],
        [0.0176]], device='cuda:0')/tensor([[0.0021, 0.0217, 0.0040, 0.0164, 0.0827, 0.0323, 0.0286, 0.0021, 0.0261,
         0.0028, 0.0302, 0.1117, 0.0264, 0.0004, 0.0217, 0.0176]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0021],
        [0.0007, 0.0217],
        [0.0009, 0.0040],
        [0.0018, 0.0164],
        [0.0012, 0.0827],
        [0.0012, 0.0323],
        [0.0023, 0.0286],
        [0.0002, 0.0021],
        [0.0012, 0.0261],
        [0.0008, 0.0028],
        [0.0019, 0.0302],
        [0.0007, 0.1117],
        [0.0003, 0.0264],
        [0.0006, 0.0004],
        [0.0027, 0.0217],
        [0.0018, 0.0176]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0008],
        [0.0008],
        [0.0007],
        [0.0016],
        [0.0007],
        [0.0008],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0010],
        [0.0017],
        [0.0010],
        [0.0013],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0008, 0.0008, 0.0007, 0.0016, 0.0007, 0.0008, 0.0006,
         0.0006, 0.0007, 0.0010, 0.0017, 0.0010, 0.0013, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0230],
        [0.0070],
        [0.0325],
        [0.0050],
        [0.0379],
        [0.0221],
        [0.0179],
        [0.0192],
        [0.0005],
        [0.0021],
        [0.0585],
        [0.0062],
        [0.0693],
        [0.0109],
        [0.0359],
        [0.0007]], device='cuda:0')/tensor([[0.0230, 0.0070, 0.0325, 0.0050, 0.0379, 0.0221, 0.0179, 0.0192, 0.0005,
         0.0021, 0.0585, 0.0062, 0.0693, 0.0109, 0.0359, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0230],
        [0.0002, 0.0070],
        [0.0008, 0.0325],
        [0.0008, 0.0050],
        [0.0007, 0.0379],
        [0.0016, 0.0221],
        [0.0007, 0.0179],
        [0.0008, 0.0192],
        [0.0006, 0.0005],
        [0.0006, 0.0021],
        [0.0007, 0.0585],
        [0.0010, 0.0062],
        [0.0017, 0.0693],
        [0.0010, 0.0109],
        [0.0013, 0.0359],
        [0.0005, 0.0007]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0024],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0009],
        [0.0003],
        [0.0040],
        [0.0006],
        [0.0022],
        [0.0006],
        [0.0012],
        [0.0004],
        [0.0015]], device='cuda:0')/tensor([[0.0008, 0.0024, 0.0005, 0.0004, 0.0005, 0.0004, 0.0005, 0.0009, 0.0003,
         0.0040, 0.0006, 0.0022, 0.0006, 0.0012, 0.0004, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0659],
        [0.0055],
        [0.0058],
        [0.0256],
        [0.0216],
        [0.0007],
        [0.0059],
        [0.0071],
        [0.0004],
        [0.0096],
        [0.0009],
        [0.0051],
        [0.0202],
        [0.0347],
        [0.0051],
        [0.0028]], device='cuda:0')/tensor([[0.0659, 0.0055, 0.0058, 0.0256, 0.0216, 0.0007, 0.0059, 0.0071, 0.0004,
         0.0096, 0.0009, 0.0051, 0.0202, 0.0347, 0.0051, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0659],
        [0.0024, 0.0055],
        [0.0005, 0.0058],
        [0.0004, 0.0256],
        [0.0005, 0.0216],
        [0.0004, 0.0007],
        [0.0005, 0.0059],
        [0.0009, 0.0071],
        [0.0003, 0.0004],
        [0.0040, 0.0096],
        [0.0006, 0.0009],
        [0.0022, 0.0051],
        [0.0006, 0.0202],
        [0.0012, 0.0347],
        [0.0004, 0.0051],
        [0.0015, 0.0028]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0007],
        [0.0011],
        [0.0010],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0010],
        [0.0018],
        [0.0020],
        [0.0015],
        [0.0008],
        [0.0002],
        [0.0014],
        [0.0008],
        [0.0012]], device='cuda:0')/tensor([[0.0017, 0.0007, 0.0011, 0.0010, 0.0004, 0.0006, 0.0005, 0.0010, 0.0018,
         0.0020, 0.0015, 0.0008, 0.0002, 0.0014, 0.0008, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0932],
        [0.0255],
        [0.0281],
        [0.0068],
        [0.0008],
        [0.0130],
        [0.0065],
        [0.0638],
        [0.0420],
        [0.0071],
        [0.0062],
        [0.0667],
        [0.0055],
        [0.0005],
        [0.0093],
        [0.0458]], device='cuda:0')/tensor([[0.0932, 0.0255, 0.0281, 0.0068, 0.0008, 0.0130, 0.0065, 0.0638, 0.0420,
         0.0071, 0.0062, 0.0667, 0.0055, 0.0005, 0.0093, 0.0458]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0932],
        [0.0007, 0.0255],
        [0.0011, 0.0281],
        [0.0010, 0.0068],
        [0.0004, 0.0008],
        [0.0006, 0.0130],
        [0.0005, 0.0065],
        [0.0010, 0.0638],
        [0.0018, 0.0420],
        [0.0020, 0.0071],
        [0.0015, 0.0062],
        [0.0008, 0.0667],
        [0.0002, 0.0055],
        [0.0014, 0.0005],
        [0.0008, 0.0093],
        [0.0012, 0.0458]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0011],
        [0.0007],
        [0.0038],
        [0.0009],
        [0.0002],
        [0.0001],
        [0.0010],
        [0.0010],
        [0.0014],
        [0.0005],
        [0.0006],
        [0.0006],
        [0.0010],
        [0.0013],
        [0.0010]], device='cuda:0')/tensor([[0.0011, 0.0011, 0.0007, 0.0038, 0.0009, 0.0002, 0.0001, 0.0010, 0.0010,
         0.0014, 0.0005, 0.0006, 0.0006, 0.0010, 0.0013, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0095],
        [0.0397],
        [0.0044],
        [0.0360],
        [0.0090],
        [0.0255],
        [0.0050],
        [0.0080],
        [0.0326],
        [0.0015],
        [0.0266],
        [0.1129],
        [0.0385],
        [0.0661],
        [0.0011],
        [0.0043]], device='cuda:0')/tensor([[0.0095, 0.0397, 0.0044, 0.0360, 0.0090, 0.0255, 0.0050, 0.0080, 0.0326,
         0.0015, 0.0266, 0.1129, 0.0385, 0.0661, 0.0011, 0.0043]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[1.0905e-03, 9.4670e-03],
        [1.0954e-03, 3.9660e-02],
        [7.1384e-04, 4.3815e-03],
        [3.7811e-03, 3.6021e-02],
        [8.6430e-04, 9.0470e-03],
        [2.2743e-04, 2.5527e-02],
        [1.0983e-04, 5.0055e-03],
        [1.0243e-03, 7.9630e-03],
        [1.0254e-03, 3.2563e-02],
        [1.3616e-03, 1.4519e-03],
        [4.6565e-04, 2.6586e-02],
        [5.8423e-04, 1.1287e-01],
        [6.2254e-04, 3.8502e-02],
        [9.9953e-04, 6.6125e-02],
        [1.3381e-03, 1.0781e-03],
        [9.8912e-04, 4.2975e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.6473e-04],
        [6.7531e-04],
        [1.5420e-03],
        [3.1875e-04],
        [6.9784e-04],
        [6.4590e-04],
        [4.4561e-04],
        [1.1253e-03],
        [8.6111e-05],
        [6.0754e-04],
        [1.1096e-03],
        [2.7819e-03],
        [9.6614e-04],
        [3.0416e-04],
        [2.1416e-03],
        [1.1616e-03]], device='cuda:0')/tensor([[8.6473e-04, 6.7531e-04, 1.5420e-03, 3.1875e-04, 6.9784e-04, 6.4590e-04,
         4.4561e-04, 1.1253e-03, 8.6111e-05, 6.0754e-04, 1.1096e-03, 2.7819e-03,
         9.6614e-04, 3.0416e-04, 2.1416e-03, 1.1616e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0091],
        [0.0282],
        [0.0068],
        [0.0066],
        [0.0264],
        [0.0600],
        [0.0479],
        [0.0389],
        [0.0544],
        [0.0600],
        [0.0365],
        [0.0050],
        [0.0904],
        [0.0358],
        [0.0652],
        [0.0012]], device='cuda:0')/tensor([[0.0091, 0.0282, 0.0068, 0.0066, 0.0264, 0.0600, 0.0479, 0.0389, 0.0544,
         0.0600, 0.0365, 0.0050, 0.0904, 0.0358, 0.0652, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.6473e-04, 9.1173e-03],
        [6.7531e-04, 2.8249e-02],
        [1.5420e-03, 6.7863e-03],
        [3.1875e-04, 6.5987e-03],
        [6.9784e-04, 2.6423e-02],
        [6.4590e-04, 5.9980e-02],
        [4.4561e-04, 4.7938e-02],
        [1.1253e-03, 3.8876e-02],
        [8.6111e-05, 5.4359e-02],
        [6.0754e-04, 6.0028e-02],
        [1.1096e-03, 3.6523e-02],
        [2.7819e-03, 5.0021e-03],
        [9.6614e-04, 9.0384e-02],
        [3.0416e-04, 3.5828e-02],
        [2.1416e-03, 6.5228e-02],
        [1.1616e-03, 1.2108e-03]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0012],
        [0.0006],
        [0.0038],
        [0.0006],
        [0.0009],
        [0.0009],
        [0.0007],
        [0.0013],
        [0.0005],
        [0.0005],
        [0.0009],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0011, 0.0012, 0.0006, 0.0038, 0.0006, 0.0009, 0.0009, 0.0007, 0.0013,
         0.0005, 0.0005, 0.0009, 0.0005, 0.0004, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0197],
        [0.0618],
        [0.0509],
        [0.0074],
        [0.0010],
        [0.0981],
        [0.0005],
        [0.0079],
        [0.0014],
        [0.0008],
        [0.0033],
        [0.0004],
        [0.0200],
        [0.1043],
        [0.0331],
        [0.0101]], device='cuda:0')/tensor([[0.0197, 0.0618, 0.0509, 0.0074, 0.0010, 0.0981, 0.0005, 0.0079, 0.0014,
         0.0008, 0.0033, 0.0004, 0.0200, 0.1043, 0.0331, 0.0101]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0197],
        [0.0012, 0.0618],
        [0.0006, 0.0509],
        [0.0038, 0.0074],
        [0.0006, 0.0010],
        [0.0009, 0.0981],
        [0.0009, 0.0005],
        [0.0007, 0.0079],
        [0.0013, 0.0014],
        [0.0005, 0.0008],
        [0.0005, 0.0033],
        [0.0009, 0.0004],
        [0.0005, 0.0200],
        [0.0004, 0.1043],
        [0.0004, 0.0331],
        [0.0007, 0.0101]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0010],
        [0.0005],
        [0.0037],
        [0.0003],
        [0.0009],
        [0.0025],
        [0.0003],
        [0.0013],
        [0.0006],
        [0.0038],
        [0.0012],
        [0.0010],
        [0.0003],
        [0.0028],
        [0.0042]], device='cuda:0')/tensor([[0.0008, 0.0010, 0.0005, 0.0037, 0.0003, 0.0009, 0.0025, 0.0003, 0.0013,
         0.0006, 0.0038, 0.0012, 0.0010, 0.0003, 0.0028, 0.0042]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0078],
        [0.0053],
        [0.0833],
        [0.0042],
        [0.0045],
        [0.0010],
        [0.0839],
        [0.0164],
        [0.1161],
        [0.0003],
        [0.0107],
        [0.0215],
        [0.0011],
        [0.0001],
        [0.0095],
        [0.0075]], device='cuda:0')/tensor([[0.0078, 0.0053, 0.0833, 0.0042, 0.0045, 0.0010, 0.0839, 0.0164, 0.1161,
         0.0003, 0.0107, 0.0215, 0.0011, 0.0001, 0.0095, 0.0075]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0078],
        [0.0010, 0.0053],
        [0.0005, 0.0833],
        [0.0037, 0.0042],
        [0.0003, 0.0045],
        [0.0009, 0.0010],
        [0.0025, 0.0839],
        [0.0003, 0.0164],
        [0.0013, 0.1161],
        [0.0006, 0.0003],
        [0.0038, 0.0107],
        [0.0012, 0.0215],
        [0.0010, 0.0011],
        [0.0003, 0.0001],
        [0.0028, 0.0095],
        [0.0042, 0.0075]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0002],
        [0.0018],
        [0.0029],
        [0.0006],
        [0.0024],
        [0.0015],
        [0.0001]], device='cuda:0')/tensor([[0.0005, 0.0002, 0.0018, 0.0029, 0.0006, 0.0024, 0.0015, 0.0001]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0111],
        [0.0084],
        [0.0797],
        [0.0343],
        [0.0018],
        [0.0453],
        [0.0012],
        [0.0137]], device='cuda:0')/tensor([[0.0111, 0.0084, 0.0797, 0.0343, 0.0018, 0.0453, 0.0012, 0.0137]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0111],
        [0.0002, 0.0084],
        [0.0018, 0.0797],
        [0.0029, 0.0343],
        [0.0006, 0.0018],
        [0.0024, 0.0453],
        [0.0015, 0.0012],
        [0.0001, 0.0137]], device='cuda:0')
acc:  0.6
Time taken to execute the de SA task with prompt type common, variation 5 and batchsize 16: 0:03:19.313444
path ['42', 'de', 'flan', 'SA', 'common', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA rare_synonyms 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 338.79it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0029],
        [0.0007],
        [0.0034],
        [0.0016],
        [0.0039],
        [0.0033],
        [0.0012],
        [0.0007],
        [0.0003],
        [0.0009],
        [0.0052],
        [0.0002],
        [0.0008],
        [0.0021],
        [0.0011],
        [0.0017]], device='cuda:0')/tensor([[0.0029, 0.0007, 0.0034, 0.0016, 0.0039, 0.0033, 0.0012, 0.0007, 0.0003,
         0.0009, 0.0052, 0.0002, 0.0008, 0.0021, 0.0011, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0234],
        [0.0016],
        [0.0366],
        [0.0317],
        [0.0263],
        [0.0155],
        [0.0050],
        [0.0265],
        [0.0107],
        [0.0345],
        [0.0094],
        [0.0039],
        [0.0589],
        [0.1469],
        [0.0311],
        [0.0127]], device='cuda:0')/tensor([[0.0234, 0.0016, 0.0366, 0.0317, 0.0263, 0.0155, 0.0050, 0.0265, 0.0107,
         0.0345, 0.0094, 0.0039, 0.0589, 0.1469, 0.0311, 0.0127]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0029, 0.0234],
        [0.0007, 0.0016],
        [0.0034, 0.0366],
        [0.0016, 0.0317],
        [0.0039, 0.0263],
        [0.0033, 0.0155],
        [0.0012, 0.0050],
        [0.0007, 0.0265],
        [0.0003, 0.0107],
        [0.0009, 0.0345],
        [0.0052, 0.0094],
        [0.0002, 0.0039],
        [0.0008, 0.0589],
        [0.0021, 0.1469],
        [0.0011, 0.0311],
        [0.0017, 0.0127]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0022],
        [0.0012],
        [0.0021],
        [0.0003],
        [0.0035],
        [0.0012],
        [0.0022],
        [0.0013],
        [0.0021],
        [0.0016],
        [0.0030],
        [0.0018],
        [0.0017],
        [0.0015],
        [0.0007]], device='cuda:0')/tensor([[0.0009, 0.0022, 0.0012, 0.0021, 0.0003, 0.0035, 0.0012, 0.0022, 0.0013,
         0.0021, 0.0016, 0.0030, 0.0018, 0.0017, 0.0015, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0212],
        [0.0248],
        [0.0463],
        [0.0032],
        [0.0262],
        [0.0441],
        [0.0295],
        [0.0379],
        [0.0772],
        [0.0030],
        [0.0075],
        [0.0833],
        [0.0141],
        [0.0360],
        [0.0171]], device='cuda:0')/tensor([[0.0028, 0.0212, 0.0248, 0.0463, 0.0032, 0.0262, 0.0441, 0.0295, 0.0379,
         0.0772, 0.0030, 0.0075, 0.0833, 0.0141, 0.0360, 0.0171]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0028],
        [0.0022, 0.0212],
        [0.0012, 0.0248],
        [0.0021, 0.0463],
        [0.0003, 0.0032],
        [0.0035, 0.0262],
        [0.0012, 0.0441],
        [0.0022, 0.0295],
        [0.0013, 0.0379],
        [0.0021, 0.0772],
        [0.0016, 0.0030],
        [0.0030, 0.0075],
        [0.0018, 0.0833],
        [0.0017, 0.0141],
        [0.0015, 0.0360],
        [0.0007, 0.0171]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0025],
        [0.0013],
        [0.0019],
        [0.0004],
        [0.0073],
        [0.0012],
        [0.0009],
        [0.0013],
        [0.0002],
        [0.0004],
        [0.0010],
        [0.0021],
        [0.0008],
        [0.0017],
        [0.0015],
        [0.0010]], device='cuda:0')/tensor([[0.0025, 0.0013, 0.0019, 0.0004, 0.0073, 0.0012, 0.0009, 0.0013, 0.0002,
         0.0004, 0.0010, 0.0021, 0.0008, 0.0017, 0.0015, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0088],
        [0.0063],
        [0.0134],
        [0.0542],
        [0.0060],
        [0.0263],
        [0.0278],
        [0.0041],
        [0.0032],
        [0.0006],
        [0.0427],
        [0.0445],
        [0.1176],
        [0.0329],
        [0.0149]], device='cuda:0')/tensor([[0.0028, 0.0088, 0.0063, 0.0134, 0.0542, 0.0060, 0.0263, 0.0278, 0.0041,
         0.0032, 0.0006, 0.0427, 0.0445, 0.1176, 0.0329, 0.0149]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0025, 0.0028],
        [0.0013, 0.0088],
        [0.0019, 0.0063],
        [0.0004, 0.0134],
        [0.0073, 0.0542],
        [0.0012, 0.0060],
        [0.0009, 0.0263],
        [0.0013, 0.0278],
        [0.0002, 0.0041],
        [0.0004, 0.0032],
        [0.0010, 0.0006],
        [0.0021, 0.0427],
        [0.0008, 0.0445],
        [0.0017, 0.1176],
        [0.0015, 0.0329],
        [0.0010, 0.0149]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0038],
        [0.0094],
        [0.0006],
        [0.0037],
        [0.0026],
        [0.0014],
        [0.0037],
        [0.0016],
        [0.0001],
        [0.0018],
        [0.0031],
        [0.0021],
        [0.0017],
        [0.0008],
        [0.0055]], device='cuda:0')/tensor([[0.0018, 0.0038, 0.0094, 0.0006, 0.0037, 0.0026, 0.0014, 0.0037, 0.0016,
         0.0001, 0.0018, 0.0031, 0.0021, 0.0017, 0.0008, 0.0055]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0525],
        [0.0724],
        [0.0807],
        [0.0116],
        [0.0438],
        [0.0136],
        [0.0335],
        [0.0029],
        [0.0041],
        [0.0324],
        [0.0368],
        [0.1423],
        [0.0037],
        [0.0039],
        [0.0021],
        [0.0765]], device='cuda:0')/tensor([[0.0525, 0.0724, 0.0807, 0.0116, 0.0438, 0.0136, 0.0335, 0.0029, 0.0041,
         0.0324, 0.0368, 0.1423, 0.0037, 0.0039, 0.0021, 0.0765]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8302e-03, 5.2483e-02],
        [3.7531e-03, 7.2366e-02],
        [9.4054e-03, 8.0652e-02],
        [5.6315e-04, 1.1553e-02],
        [3.7317e-03, 4.3827e-02],
        [2.6390e-03, 1.3621e-02],
        [1.3655e-03, 3.3512e-02],
        [3.7074e-03, 2.9118e-03],
        [1.6349e-03, 4.0800e-03],
        [1.3775e-04, 3.2429e-02],
        [1.8228e-03, 3.6822e-02],
        [3.1182e-03, 1.4227e-01],
        [2.0714e-03, 3.6909e-03],
        [1.7014e-03, 3.8962e-03],
        [7.9698e-04, 2.1083e-03],
        [5.4947e-03, 7.6516e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0011],
        [0.0011],
        [0.0034],
        [0.0017],
        [0.0022],
        [0.0010],
        [0.0016],
        [0.0005],
        [0.0021],
        [0.0038],
        [0.0026],
        [0.0008],
        [0.0002],
        [0.0042],
        [0.0009]], device='cuda:0')/tensor([[0.0011, 0.0011, 0.0011, 0.0034, 0.0017, 0.0022, 0.0010, 0.0016, 0.0005,
         0.0021, 0.0038, 0.0026, 0.0008, 0.0002, 0.0042, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0360],
        [0.0005],
        [0.1261],
        [0.0759],
        [0.0051],
        [0.0028],
        [0.0352],
        [0.0103],
        [0.0007],
        [0.0776],
        [0.0226],
        [0.1102],
        [0.0053],
        [0.0635],
        [0.1226],
        [0.0003]], device='cuda:0')/tensor([[0.0360, 0.0005, 0.1261, 0.0759, 0.0051, 0.0028, 0.0352, 0.0103, 0.0007,
         0.0776, 0.0226, 0.1102, 0.0053, 0.0635, 0.1226, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0360],
        [0.0011, 0.0005],
        [0.0011, 0.1261],
        [0.0034, 0.0759],
        [0.0017, 0.0051],
        [0.0022, 0.0028],
        [0.0010, 0.0352],
        [0.0016, 0.0103],
        [0.0005, 0.0007],
        [0.0021, 0.0776],
        [0.0038, 0.0226],
        [0.0026, 0.1102],
        [0.0008, 0.0053],
        [0.0002, 0.0635],
        [0.0042, 0.1226],
        [0.0009, 0.0003]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0019],
        [0.0008],
        [0.0002],
        [0.0005],
        [0.0012],
        [0.0024],
        [0.0010],
        [0.0037],
        [0.0004],
        [0.0022],
        [0.0018],
        [0.0029],
        [0.0022],
        [0.0017],
        [0.0019]], device='cuda:0')/tensor([[0.0023, 0.0019, 0.0008, 0.0002, 0.0005, 0.0012, 0.0024, 0.0010, 0.0037,
         0.0004, 0.0022, 0.0018, 0.0029, 0.0022, 0.0017, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0270],
        [0.0116],
        [0.1166],
        [0.0120],
        [0.0190],
        [0.0735],
        [0.0721],
        [0.0505],
        [0.0896],
        [0.0105],
        [0.0189],
        [0.0074],
        [0.1504],
        [0.0032],
        [0.0173],
        [0.0585]], device='cuda:0')/tensor([[0.0270, 0.0116, 0.1166, 0.0120, 0.0190, 0.0735, 0.0721, 0.0505, 0.0896,
         0.0105, 0.0189, 0.0074, 0.1504, 0.0032, 0.0173, 0.0585]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0023, 0.0270],
        [0.0019, 0.0116],
        [0.0008, 0.1166],
        [0.0002, 0.0120],
        [0.0005, 0.0190],
        [0.0012, 0.0735],
        [0.0024, 0.0721],
        [0.0010, 0.0505],
        [0.0037, 0.0896],
        [0.0004, 0.0105],
        [0.0022, 0.0189],
        [0.0018, 0.0074],
        [0.0029, 0.1504],
        [0.0022, 0.0032],
        [0.0017, 0.0173],
        [0.0019, 0.0585]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0045],
        [0.0022],
        [0.0017],
        [0.0012],
        [0.0006],
        [0.0021],
        [0.0021],
        [0.0051],
        [0.0062],
        [0.0008],
        [0.0017],
        [0.0008],
        [0.0016],
        [0.0013],
        [0.0030],
        [0.0023]], device='cuda:0')/tensor([[0.0045, 0.0022, 0.0017, 0.0012, 0.0006, 0.0021, 0.0021, 0.0051, 0.0062,
         0.0008, 0.0017, 0.0008, 0.0016, 0.0013, 0.0030, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0336],
        [0.0849],
        [0.0142],
        [0.0063],
        [0.0704],
        [0.0171],
        [0.0768],
        [0.0535],
        [0.0492],
        [0.0466],
        [0.0265],
        [0.0008],
        [0.0106],
        [0.0076],
        [0.0047],
        [0.0342]], device='cuda:0')/tensor([[0.0336, 0.0849, 0.0142, 0.0063, 0.0704, 0.0171, 0.0768, 0.0535, 0.0492,
         0.0466, 0.0265, 0.0008, 0.0106, 0.0076, 0.0047, 0.0342]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0045, 0.0336],
        [0.0022, 0.0849],
        [0.0017, 0.0142],
        [0.0012, 0.0063],
        [0.0006, 0.0704],
        [0.0021, 0.0171],
        [0.0021, 0.0768],
        [0.0051, 0.0535],
        [0.0062, 0.0492],
        [0.0008, 0.0466],
        [0.0017, 0.0265],
        [0.0008, 0.0008],
        [0.0016, 0.0106],
        [0.0013, 0.0076],
        [0.0030, 0.0047],
        [0.0023, 0.0342]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0087],
        [0.0029],
        [0.0021],
        [0.0009],
        [0.0003],
        [0.0016],
        [0.0009],
        [0.0015],
        [0.0027],
        [0.0021],
        [0.0027],
        [0.0013],
        [0.0007],
        [0.0019],
        [0.0025]], device='cuda:0')/tensor([[0.0013, 0.0087, 0.0029, 0.0021, 0.0009, 0.0003, 0.0016, 0.0009, 0.0015,
         0.0027, 0.0021, 0.0027, 0.0013, 0.0007, 0.0019, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0216],
        [0.0390],
        [0.0493],
        [0.0209],
        [0.0112],
        [0.0200],
        [0.0054],
        [0.0246],
        [0.0154],
        [0.0099],
        [0.1132],
        [0.0518],
        [0.1236],
        [0.0117],
        [0.0628],
        [0.0216]], device='cuda:0')/tensor([[0.0216, 0.0390, 0.0493, 0.0209, 0.0112, 0.0200, 0.0054, 0.0246, 0.0154,
         0.0099, 0.1132, 0.0518, 0.1236, 0.0117, 0.0628, 0.0216]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0013, 0.0216],
        [0.0087, 0.0390],
        [0.0029, 0.0493],
        [0.0021, 0.0209],
        [0.0009, 0.0112],
        [0.0003, 0.0200],
        [0.0016, 0.0054],
        [0.0009, 0.0246],
        [0.0015, 0.0154],
        [0.0027, 0.0099],
        [0.0021, 0.1132],
        [0.0027, 0.0518],
        [0.0013, 0.1236],
        [0.0007, 0.0117],
        [0.0019, 0.0628],
        [0.0025, 0.0216]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0033],
        [0.0016],
        [0.0091],
        [0.0019],
        [0.0001],
        [0.0019],
        [0.0011],
        [0.0033],
        [0.0066],
        [0.0006],
        [0.0047],
        [0.0014],
        [0.0018],
        [0.0007],
        [0.0012],
        [0.0004]], device='cuda:0')/tensor([[0.0033, 0.0016, 0.0091, 0.0019, 0.0001, 0.0019, 0.0011, 0.0033, 0.0066,
         0.0006, 0.0047, 0.0014, 0.0018, 0.0007, 0.0012, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0636],
        [0.0514],
        [0.0370],
        [0.0525],
        [0.0278],
        [0.0022],
        [0.0035],
        [0.0973],
        [0.0339],
        [0.0436],
        [0.0156],
        [0.0099],
        [0.0232],
        [0.0107],
        [0.0211],
        [0.0014]], device='cuda:0')/tensor([[0.0636, 0.0514, 0.0370, 0.0525, 0.0278, 0.0022, 0.0035, 0.0973, 0.0339,
         0.0436, 0.0156, 0.0099, 0.0232, 0.0107, 0.0211, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0033, 0.0636],
        [0.0016, 0.0514],
        [0.0091, 0.0370],
        [0.0019, 0.0525],
        [0.0001, 0.0278],
        [0.0019, 0.0022],
        [0.0011, 0.0035],
        [0.0033, 0.0973],
        [0.0066, 0.0339],
        [0.0006, 0.0436],
        [0.0047, 0.0156],
        [0.0014, 0.0099],
        [0.0018, 0.0232],
        [0.0007, 0.0107],
        [0.0012, 0.0211],
        [0.0004, 0.0014]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [2662] -> tensor([[0.0004],
        [0.0012],
        [0.0011],
        [0.0063],
        [0.0003],
        [0.0031],
        [0.0011],
        [0.0011],
        [0.0034],
        [0.0007],
        [0.0017],
        [0.0026],
        [0.0019],
        [0.0024],
        [0.0009],
        [0.0026]], device='cuda:0')/tensor([[0.0004, 0.0012, 0.0011, 0.0063, 0.0003, 0.0031, 0.0011, 0.0011, 0.0034,
         0.0007, 0.0017, 0.0026, 0.0019, 0.0024, 0.0009, 0.0026]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0093],
        [0.0396],
        [0.0524],
        [0.0191],
        [0.0138],
        [0.0039],
        [0.0013],
        [0.0360],
        [0.0132],
        [0.0443],
        [0.0122],
        [0.0561],
        [0.0019],
        [0.0069],
        [0.0672],
        [0.1404]], device='cuda:0')/tensor([[0.0093, 0.0396, 0.0524, 0.0191, 0.0138, 0.0039, 0.0013, 0.0360, 0.0132,
         0.0443, 0.0122, 0.0561, 0.0019, 0.0069, 0.0672, 0.1404]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0093],
        [0.0012, 0.0396],
        [0.0011, 0.0524],
        [0.0063, 0.0191],
        [0.0003, 0.0138],
        [0.0031, 0.0039],
        [0.0011, 0.0013],
        [0.0011, 0.0360],
        [0.0034, 0.0132],
        [0.0007, 0.0443],
        [0.0017, 0.0122],
        [0.0026, 0.0561],
        [0.0019, 0.0019],
        [0.0024, 0.0069],
        [0.0009, 0.0672],
        [0.0026, 0.1404]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0008],
        [0.0042],
        [0.0017],
        [0.0029],
        [0.0006],
        [0.0004],
        [0.0013],
        [0.0011],
        [0.0009],
        [0.0032],
        [0.0013],
        [0.0024],
        [0.0007],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0023, 0.0008, 0.0042, 0.0017, 0.0029, 0.0006, 0.0004, 0.0013, 0.0011,
         0.0009, 0.0032, 0.0013, 0.0024, 0.0007, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0045],
        [0.0143],
        [0.0144],
        [0.0293],
        [0.0039],
        [0.0660],
        [0.0746],
        [0.0020],
        [0.0277],
        [0.1112],
        [0.0170],
        [0.0047],
        [0.0039],
        [0.0008],
        [0.0093],
        [0.0086]], device='cuda:0')/tensor([[0.0045, 0.0143, 0.0144, 0.0293, 0.0039, 0.0660, 0.0746, 0.0020, 0.0277,
         0.1112, 0.0170, 0.0047, 0.0039, 0.0008, 0.0093, 0.0086]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0023, 0.0045],
        [0.0008, 0.0143],
        [0.0042, 0.0144],
        [0.0017, 0.0293],
        [0.0029, 0.0039],
        [0.0006, 0.0660],
        [0.0004, 0.0746],
        [0.0013, 0.0020],
        [0.0011, 0.0277],
        [0.0009, 0.1112],
        [0.0032, 0.0170],
        [0.0013, 0.0047],
        [0.0024, 0.0039],
        [0.0007, 0.0008],
        [0.0004, 0.0093],
        [0.0004, 0.0086]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0027],
        [0.0010],
        [0.0008],
        [0.0024],
        [0.0027],
        [0.0008],
        [0.0013],
        [0.0018],
        [0.0037],
        [0.0026],
        [0.0015],
        [0.0019],
        [0.0022],
        [0.0011],
        [0.0029],
        [0.0017]], device='cuda:0')/tensor([[0.0027, 0.0010, 0.0008, 0.0024, 0.0027, 0.0008, 0.0013, 0.0018, 0.0037,
         0.0026, 0.0015, 0.0019, 0.0022, 0.0011, 0.0029, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0637],
        [0.0308],
        [0.0020],
        [0.0057],
        [0.0043],
        [0.0377],
        [0.1490],
        [0.0281],
        [0.0722],
        [0.0439],
        [0.0859],
        [0.0029],
        [0.1539],
        [0.0252],
        [0.0172],
        [0.0152]], device='cuda:0')/tensor([[0.0637, 0.0308, 0.0020, 0.0057, 0.0043, 0.0377, 0.1490, 0.0281, 0.0722,
         0.0439, 0.0859, 0.0029, 0.1539, 0.0252, 0.0172, 0.0152]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0027, 0.0637],
        [0.0010, 0.0308],
        [0.0008, 0.0020],
        [0.0024, 0.0057],
        [0.0027, 0.0043],
        [0.0008, 0.0377],
        [0.0013, 0.1490],
        [0.0018, 0.0281],
        [0.0037, 0.0722],
        [0.0026, 0.0439],
        [0.0015, 0.0859],
        [0.0019, 0.0029],
        [0.0022, 0.1539],
        [0.0011, 0.0252],
        [0.0029, 0.0172],
        [0.0017, 0.0152]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0019],
        [0.0011],
        [0.0059],
        [0.0026],
        [0.0003],
        [0.0010],
        [0.0015],
        [0.0036]], device='cuda:0')/tensor([[0.0019, 0.0011, 0.0059, 0.0026, 0.0003, 0.0010, 0.0015, 0.0036]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0044],
        [0.0318],
        [0.0213],
        [0.2331],
        [0.0460],
        [0.1774],
        [0.0375],
        [0.2126]], device='cuda:0')/tensor([[0.0044, 0.0318, 0.0213, 0.2331, 0.0460, 0.1774, 0.0375, 0.2126]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0019, 0.0044],
        [0.0011, 0.0318],
        [0.0059, 0.0213],
        [0.0026, 0.2331],
        [0.0003, 0.0460],
        [0.0010, 0.1774],
        [0.0015, 0.0375],
        [0.0036, 0.2126]], device='cuda:0')
acc:  0.525
Time taken to execute the de SA task with prompt type rare_synonyms, variation 0 and batchsize 16: 0:03:18.073208
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA rare_synonyms 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.56it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0007],
        [0.0021],
        [0.0005],
        [0.0003],
        [0.0009],
        [0.0001],
        [0.0015],
        [0.0009],
        [0.0003],
        [0.0015],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0001],
        [0.0009]], device='cuda:0')/tensor([[0.0005, 0.0007, 0.0021, 0.0005, 0.0003, 0.0009, 0.0001, 0.0015, 0.0009,
         0.0003, 0.0015, 0.0001, 0.0002, 0.0002, 0.0001, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0178],
        [0.0248],
        [0.0229],
        [0.0249],
        [0.0282],
        [0.0007],
        [0.0166],
        [0.0040],
        [0.0366],
        [0.0008],
        [0.0058],
        [0.0002],
        [0.0245],
        [0.0018],
        [0.0024],
        [0.0251]], device='cuda:0')/tensor([[0.0178, 0.0248, 0.0229, 0.0249, 0.0282, 0.0007, 0.0166, 0.0040, 0.0366,
         0.0008, 0.0058, 0.0002, 0.0245, 0.0018, 0.0024, 0.0251]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0178],
        [0.0007, 0.0248],
        [0.0021, 0.0229],
        [0.0005, 0.0249],
        [0.0003, 0.0282],
        [0.0009, 0.0007],
        [0.0001, 0.0166],
        [0.0015, 0.0040],
        [0.0009, 0.0366],
        [0.0003, 0.0008],
        [0.0015, 0.0058],
        [0.0001, 0.0002],
        [0.0002, 0.0245],
        [0.0002, 0.0018],
        [0.0001, 0.0024],
        [0.0009, 0.0251]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.3002e-04],
        [3.6971e-04],
        [6.5996e-04],
        [5.2066e-04],
        [5.4261e-04],
        [6.3690e-04],
        [3.2907e-04],
        [1.5083e-04],
        [5.8604e-04],
        [2.6666e-04],
        [1.9508e-04],
        [9.7111e-05],
        [4.8026e-04],
        [4.2936e-04],
        [8.3688e-04],
        [2.4205e-04]], device='cuda:0')/tensor([[3.3002e-04, 3.6971e-04, 6.5996e-04, 5.2066e-04, 5.4261e-04, 6.3690e-04,
         3.2907e-04, 1.5083e-04, 5.8604e-04, 2.6666e-04, 1.9508e-04, 9.7111e-05,
         4.8026e-04, 4.2936e-04, 8.3688e-04, 2.4205e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0267],
        [0.0239],
        [0.0011],
        [0.0251],
        [0.0008],
        [0.0010],
        [0.0124],
        [0.0004],
        [0.0053],
        [0.0267],
        [0.0028],
        [0.0041],
        [0.0004],
        [0.0024],
        [0.0016],
        [0.0583]], device='cuda:0')/tensor([[0.0267, 0.0239, 0.0011, 0.0251, 0.0008, 0.0010, 0.0124, 0.0004, 0.0053,
         0.0267, 0.0028, 0.0041, 0.0004, 0.0024, 0.0016, 0.0583]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3002e-04, 2.6715e-02],
        [3.6971e-04, 2.3913e-02],
        [6.5996e-04, 1.1023e-03],
        [5.2066e-04, 2.5102e-02],
        [5.4261e-04, 7.9710e-04],
        [6.3690e-04, 9.9665e-04],
        [3.2907e-04, 1.2356e-02],
        [1.5083e-04, 3.6149e-04],
        [5.8604e-04, 5.2852e-03],
        [2.6666e-04, 2.6746e-02],
        [1.9508e-04, 2.8060e-03],
        [9.7111e-05, 4.1185e-03],
        [4.8026e-04, 3.8031e-04],
        [4.2936e-04, 2.3824e-03],
        [8.3688e-04, 1.5927e-03],
        [2.4205e-04, 5.8337e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0010],
        [0.0001],
        [0.0010],
        [0.0001],
        [0.0005],
        [0.0009],
        [0.0005],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0002],
        [0.0011],
        [0.0015],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0001, 0.0010, 0.0001, 0.0005, 0.0009, 0.0005, 0.0003,
         0.0009, 0.0004, 0.0002, 0.0011, 0.0015, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0423],
        [0.0965],
        [0.0360],
        [0.0101],
        [0.0169],
        [0.0028],
        [0.0216],
        [0.0334],
        [0.0176],
        [0.0010],
        [0.0284],
        [0.0183],
        [0.0280],
        [0.0035],
        [0.0186],
        [0.0036]], device='cuda:0')/tensor([[0.0423, 0.0965, 0.0360, 0.0101, 0.0169, 0.0028, 0.0216, 0.0334, 0.0176,
         0.0010, 0.0284, 0.0183, 0.0280, 0.0035, 0.0186, 0.0036]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0423],
        [0.0010, 0.0965],
        [0.0001, 0.0360],
        [0.0010, 0.0101],
        [0.0001, 0.0169],
        [0.0005, 0.0028],
        [0.0009, 0.0216],
        [0.0005, 0.0334],
        [0.0003, 0.0176],
        [0.0009, 0.0010],
        [0.0004, 0.0284],
        [0.0002, 0.0183],
        [0.0011, 0.0280],
        [0.0015, 0.0035],
        [0.0003, 0.0186],
        [0.0004, 0.0036]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0001],
        [0.0004],
        [0.0008],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0022],
        [0.0002],
        [0.0011],
        [0.0027]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0001, 0.0004, 0.0008, 0.0005, 0.0004, 0.0004, 0.0003,
         0.0002, 0.0002, 0.0003, 0.0022, 0.0002, 0.0011, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0308],
        [0.0049],
        [0.0072],
        [0.0083],
        [0.0030],
        [0.0100],
        [0.0012],
        [0.0038],
        [0.0006],
        [0.0139],
        [0.0059],
        [0.0134],
        [0.0140],
        [0.0200],
        [0.0593],
        [0.0430]], device='cuda:0')/tensor([[0.0308, 0.0049, 0.0072, 0.0083, 0.0030, 0.0100, 0.0012, 0.0038, 0.0006,
         0.0139, 0.0059, 0.0134, 0.0140, 0.0200, 0.0593, 0.0430]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0308],
        [0.0003, 0.0049],
        [0.0001, 0.0072],
        [0.0004, 0.0083],
        [0.0008, 0.0030],
        [0.0005, 0.0100],
        [0.0004, 0.0012],
        [0.0004, 0.0038],
        [0.0003, 0.0006],
        [0.0002, 0.0139],
        [0.0002, 0.0059],
        [0.0003, 0.0134],
        [0.0022, 0.0140],
        [0.0002, 0.0200],
        [0.0011, 0.0593],
        [0.0027, 0.0430]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0012],
        [0.0026],
        [0.0001],
        [0.0005],
        [0.0008],
        [0.0002],
        [0.0004],
        [0.0011],
        [0.0010],
        [0.0007],
        [0.0017],
        [0.0007],
        [0.0004],
        [0.0010],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0012, 0.0026, 0.0001, 0.0005, 0.0008, 0.0002, 0.0004, 0.0011,
         0.0010, 0.0007, 0.0017, 0.0007, 0.0004, 0.0010, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0308],
        [0.0169],
        [0.0709],
        [0.0011],
        [0.0363],
        [0.0342],
        [0.0002],
        [0.0045],
        [0.0028],
        [0.0022],
        [0.0632],
        [0.0024],
        [0.0007],
        [0.0145],
        [0.0062],
        [0.0009]], device='cuda:0')/tensor([[0.0308, 0.0169, 0.0709, 0.0011, 0.0363, 0.0342, 0.0002, 0.0045, 0.0028,
         0.0022, 0.0632, 0.0024, 0.0007, 0.0145, 0.0062, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0308],
        [0.0012, 0.0169],
        [0.0026, 0.0709],
        [0.0001, 0.0011],
        [0.0005, 0.0363],
        [0.0008, 0.0342],
        [0.0002, 0.0002],
        [0.0004, 0.0045],
        [0.0011, 0.0028],
        [0.0010, 0.0022],
        [0.0007, 0.0632],
        [0.0017, 0.0024],
        [0.0007, 0.0007],
        [0.0004, 0.0145],
        [0.0010, 0.0062],
        [0.0005, 0.0009]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0009],
        [0.0015],
        [0.0010],
        [0.0018],
        [0.0004],
        [0.0005],
        [0.0011],
        [0.0007],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0005],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0009, 0.0015, 0.0010, 0.0018, 0.0004, 0.0005, 0.0011,
         0.0007, 0.0002, 0.0005, 0.0007, 0.0005, 0.0002, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0026],
        [0.0001],
        [0.0024],
        [0.0032],
        [0.0214],
        [0.0505],
        [0.0070],
        [0.0007],
        [0.0627],
        [0.0040],
        [0.0009],
        [0.0136],
        [0.0616],
        [0.0005],
        [0.0578],
        [0.0002]], device='cuda:0')/tensor([[0.0026, 0.0001, 0.0024, 0.0032, 0.0214, 0.0505, 0.0070, 0.0007, 0.0627,
         0.0040, 0.0009, 0.0136, 0.0616, 0.0005, 0.0578, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0026],
        [0.0002, 0.0001],
        [0.0009, 0.0024],
        [0.0015, 0.0032],
        [0.0010, 0.0214],
        [0.0018, 0.0505],
        [0.0004, 0.0070],
        [0.0005, 0.0007],
        [0.0011, 0.0627],
        [0.0007, 0.0040],
        [0.0002, 0.0009],
        [0.0005, 0.0136],
        [0.0007, 0.0616],
        [0.0005, 0.0005],
        [0.0002, 0.0578],
        [0.0002, 0.0002]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.0988e-04],
        [9.8067e-04],
        [2.2009e-04],
        [3.1102e-03],
        [5.4838e-04],
        [1.7767e-04],
        [9.4629e-05],
        [4.9814e-04],
        [2.5215e-04],
        [2.0251e-04],
        [3.7726e-04],
        [6.6718e-04],
        [1.0674e-03],
        [9.5738e-04],
        [5.2319e-04],
        [5.6425e-04]], device='cuda:0')/tensor([[5.0988e-04, 9.8067e-04, 2.2009e-04, 3.1102e-03, 5.4838e-04, 1.7767e-04,
         9.4629e-05, 4.9814e-04, 2.5215e-04, 2.0251e-04, 3.7726e-04, 6.6718e-04,
         1.0674e-03, 9.5738e-04, 5.2319e-04, 5.6425e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0750],
        [0.0035],
        [0.0038],
        [0.0081],
        [0.0008],
        [0.0016],
        [0.0084],
        [0.0023],
        [0.0251],
        [0.0002],
        [0.0099],
        [0.0097],
        [0.0015],
        [0.0082],
        [0.0172],
        [0.0060]], device='cuda:0')/tensor([[0.0750, 0.0035, 0.0038, 0.0081, 0.0008, 0.0016, 0.0084, 0.0023, 0.0251,
         0.0002, 0.0099, 0.0097, 0.0015, 0.0082, 0.0172, 0.0060]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.0988e-04, 7.4982e-02],
        [9.8067e-04, 3.5028e-03],
        [2.2009e-04, 3.7789e-03],
        [3.1102e-03, 8.0526e-03],
        [5.4838e-04, 7.5968e-04],
        [1.7767e-04, 1.5826e-03],
        [9.4629e-05, 8.4479e-03],
        [4.9814e-04, 2.2967e-03],
        [2.5215e-04, 2.5079e-02],
        [2.0251e-04, 1.6567e-04],
        [3.7726e-04, 9.9302e-03],
        [6.6718e-04, 9.6748e-03],
        [1.0674e-03, 1.5400e-03],
        [9.5738e-04, 8.2037e-03],
        [5.2319e-04, 1.7169e-02],
        [5.6425e-04, 6.0148e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0004],
        [0.0015],
        [0.0004],
        [0.0013],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0012],
        [0.0007],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0004, 0.0015, 0.0004, 0.0013, 0.0002, 0.0004, 0.0005, 0.0012,
         0.0007, 0.0005, 0.0004, 0.0003, 0.0002, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0041],
        [0.0010],
        [0.0227],
        [0.0012],
        [0.0023],
        [0.0062],
        [0.0009],
        [0.0077],
        [0.0041],
        [0.0913],
        [0.0048],
        [0.0834],
        [0.0139],
        [0.0275],
        [0.0289],
        [0.0368]], device='cuda:0')/tensor([[0.0041, 0.0010, 0.0227, 0.0012, 0.0023, 0.0062, 0.0009, 0.0077, 0.0041,
         0.0913, 0.0048, 0.0834, 0.0139, 0.0275, 0.0289, 0.0368]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0041],
        [0.0004, 0.0010],
        [0.0015, 0.0227],
        [0.0004, 0.0012],
        [0.0013, 0.0023],
        [0.0002, 0.0062],
        [0.0004, 0.0009],
        [0.0005, 0.0077],
        [0.0012, 0.0041],
        [0.0007, 0.0913],
        [0.0005, 0.0048],
        [0.0004, 0.0834],
        [0.0003, 0.0139],
        [0.0002, 0.0275],
        [0.0002, 0.0289],
        [0.0006, 0.0368]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0012],
        [0.0008],
        [0.0006],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0012],
        [0.0021],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0012, 0.0008, 0.0006, 0.0007, 0.0007, 0.0003, 0.0005, 0.0003,
         0.0004, 0.0004, 0.0006, 0.0012, 0.0021, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0216],
        [0.0069],
        [0.0485],
        [0.0021],
        [0.0107],
        [0.0010],
        [0.0180],
        [0.0225],
        [0.0165],
        [0.0296],
        [0.0087],
        [0.0019],
        [0.0136],
        [0.0424],
        [0.0141],
        [0.0006]], device='cuda:0')/tensor([[0.0216, 0.0069, 0.0485, 0.0021, 0.0107, 0.0010, 0.0180, 0.0225, 0.0165,
         0.0296, 0.0087, 0.0019, 0.0136, 0.0424, 0.0141, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0216],
        [0.0012, 0.0069],
        [0.0008, 0.0485],
        [0.0006, 0.0021],
        [0.0007, 0.0107],
        [0.0007, 0.0010],
        [0.0003, 0.0180],
        [0.0005, 0.0225],
        [0.0003, 0.0165],
        [0.0004, 0.0296],
        [0.0004, 0.0087],
        [0.0006, 0.0019],
        [0.0012, 0.0136],
        [0.0021, 0.0424],
        [0.0003, 0.0141],
        [0.0004, 0.0006]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.6072e-05],
        [5.5891e-04],
        [1.2133e-03],
        [7.4287e-04],
        [1.1592e-03],
        [3.2455e-04],
        [5.2818e-04],
        [5.6938e-04],
        [2.5254e-04],
        [6.6552e-04],
        [7.7134e-04],
        [1.1158e-03],
        [3.7624e-04],
        [2.7238e-04],
        [4.7017e-04],
        [2.6494e-04]], device='cuda:0')/tensor([[9.6072e-05, 5.5891e-04, 1.2133e-03, 7.4287e-04, 1.1592e-03, 3.2455e-04,
         5.2818e-04, 5.6938e-04, 2.5254e-04, 6.6552e-04, 7.7134e-04, 1.1158e-03,
         3.7624e-04, 2.7238e-04, 4.7017e-04, 2.6494e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0071],
        [0.0330],
        [0.0170],
        [0.1690],
        [0.0705],
        [0.0446],
        [0.0019],
        [0.0106],
        [0.0406],
        [0.0026],
        [0.0449],
        [0.0289],
        [0.1283],
        [0.0181],
        [0.0981],
        [0.0081]], device='cuda:0')/tensor([[0.0071, 0.0330, 0.0170, 0.1690, 0.0705, 0.0446, 0.0019, 0.0106, 0.0406,
         0.0026, 0.0449, 0.0289, 0.1283, 0.0181, 0.0981, 0.0081]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.6072e-05, 7.1434e-03],
        [5.5891e-04, 3.2958e-02],
        [1.2133e-03, 1.7049e-02],
        [7.4287e-04, 1.6899e-01],
        [1.1592e-03, 7.0498e-02],
        [3.2455e-04, 4.4630e-02],
        [5.2818e-04, 1.8513e-03],
        [5.6938e-04, 1.0609e-02],
        [2.5254e-04, 4.0621e-02],
        [6.6552e-04, 2.5594e-03],
        [7.7134e-04, 4.4886e-02],
        [1.1158e-03, 2.8898e-02],
        [3.7624e-04, 1.2834e-01],
        [2.7238e-04, 1.8107e-02],
        [4.7017e-04, 9.8092e-02],
        [2.6494e-04, 8.0799e-03]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.2586e-04],
        [3.7279e-04],
        [1.4500e-04],
        [4.6199e-04],
        [3.6210e-04],
        [5.6317e-04],
        [2.5128e-03],
        [2.6796e-04],
        [2.1320e-03],
        [2.7752e-04],
        [3.8687e-04],
        [4.2158e-04],
        [6.9159e-04],
        [5.7841e-05],
        [2.7011e-04],
        [9.7414e-05]], device='cuda:0')/tensor([[4.2586e-04, 3.7279e-04, 1.4500e-04, 4.6199e-04, 3.6210e-04, 5.6317e-04,
         2.5128e-03, 2.6796e-04, 2.1320e-03, 2.7752e-04, 3.8687e-04, 4.2158e-04,
         6.9159e-04, 5.7841e-05, 2.7011e-04, 9.7414e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0229],
        [0.0302],
        [0.0254],
        [0.0502],
        [0.0094],
        [0.0036],
        [0.0189],
        [0.0078],
        [0.0003],
        [0.0030],
        [0.0216],
        [0.0421],
        [0.0249],
        [0.0130],
        [0.0029]], device='cuda:0')/tensor([[0.0014, 0.0229, 0.0302, 0.0254, 0.0502, 0.0094, 0.0036, 0.0189, 0.0078,
         0.0003, 0.0030, 0.0216, 0.0421, 0.0249, 0.0130, 0.0029]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2586e-04, 1.3858e-03],
        [3.7279e-04, 2.2851e-02],
        [1.4500e-04, 3.0222e-02],
        [4.6199e-04, 2.5390e-02],
        [3.6210e-04, 5.0200e-02],
        [5.6317e-04, 9.3965e-03],
        [2.5128e-03, 3.6045e-03],
        [2.6796e-04, 1.8898e-02],
        [2.1320e-03, 7.8010e-03],
        [2.7752e-04, 2.7467e-04],
        [3.8687e-04, 3.0030e-03],
        [4.2158e-04, 2.1566e-02],
        [6.9159e-04, 4.2067e-02],
        [5.7841e-05, 2.4896e-02],
        [2.7011e-04, 1.3049e-02],
        [9.7414e-05, 2.9419e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0010],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0010],
        [0.0001],
        [0.0014],
        [0.0010],
        [0.0004]], device='cuda:0')/tensor([[0.0024, 0.0010, 0.0004, 0.0005, 0.0003, 0.0003, 0.0002, 0.0002, 0.0002,
         0.0003, 0.0003, 0.0010, 0.0001, 0.0014, 0.0010, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0074],
        [0.0022],
        [0.1039],
        [0.0212],
        [0.0251],
        [0.0015],
        [0.0140],
        [0.0208],
        [0.0018],
        [0.0223],
        [0.0049],
        [0.0042],
        [0.0003],
        [0.0520],
        [0.0013],
        [0.0087]], device='cuda:0')/tensor([[0.0074, 0.0022, 0.1039, 0.0212, 0.0251, 0.0015, 0.0140, 0.0208, 0.0018,
         0.0223, 0.0049, 0.0042, 0.0003, 0.0520, 0.0013, 0.0087]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0024, 0.0074],
        [0.0010, 0.0022],
        [0.0004, 0.1039],
        [0.0005, 0.0212],
        [0.0003, 0.0251],
        [0.0003, 0.0015],
        [0.0002, 0.0140],
        [0.0002, 0.0208],
        [0.0002, 0.0018],
        [0.0003, 0.0223],
        [0.0003, 0.0049],
        [0.0010, 0.0042],
        [0.0001, 0.0003],
        [0.0014, 0.0520],
        [0.0010, 0.0013],
        [0.0004, 0.0087]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0008],
        [0.0001],
        [0.0012],
        [0.0006],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0008, 0.0001, 0.0012, 0.0006, 0.0004, 0.0005, 0.0002, 0.0004]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0411],
        [0.0240],
        [0.0218],
        [0.0066],
        [0.0090],
        [0.0094],
        [0.0002],
        [0.0129]], device='cuda:0')/tensor([[0.0411, 0.0240, 0.0218, 0.0066, 0.0090, 0.0094, 0.0002, 0.0129]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0008, 0.0411],
        [0.0001, 0.0240],
        [0.0012, 0.0218],
        [0.0006, 0.0066],
        [0.0004, 0.0090],
        [0.0005, 0.0094],
        [0.0002, 0.0002],
        [0.0004, 0.0129]], device='cuda:0')
acc:  0.535
Time taken to execute the de SA task with prompt type rare_synonyms, variation 1 and batchsize 16: 0:03:19.197245
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA rare_synonyms 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 192.90it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7276e-04],
        [6.9462e-04],
        [2.0173e-04],
        [1.3950e-03],
        [3.5436e-04],
        [5.5282e-04],
        [3.5018e-04],
        [1.7161e-04],
        [2.6788e-04],
        [1.6414e-04],
        [8.8150e-05],
        [1.6309e-04],
        [4.1329e-04],
        [4.0425e-04],
        [2.4058e-04],
        [8.2576e-04]], device='cuda:0')/tensor([[1.7276e-04, 6.9462e-04, 2.0173e-04, 1.3950e-03, 3.5436e-04, 5.5282e-04,
         3.5018e-04, 1.7161e-04, 2.6788e-04, 1.6414e-04, 8.8150e-05, 1.6309e-04,
         4.1329e-04, 4.0425e-04, 2.4058e-04, 8.2576e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0001],
        [0.0013],
        [0.0002],
        [0.0151],
        [0.0053],
        [0.0098],
        [0.0003],
        [0.0021],
        [0.0095],
        [0.0029],
        [0.0109],
        [0.0026],
        [0.0026],
        [0.0233],
        [0.0150],
        [0.0022]], device='cuda:0')/tensor([[0.0001, 0.0013, 0.0002, 0.0151, 0.0053, 0.0098, 0.0003, 0.0021, 0.0095,
         0.0029, 0.0109, 0.0026, 0.0026, 0.0233, 0.0150, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7276e-04, 1.2578e-04],
        [6.9462e-04, 1.3393e-03],
        [2.0173e-04, 2.1283e-04],
        [1.3950e-03, 1.5060e-02],
        [3.5436e-04, 5.2934e-03],
        [5.5282e-04, 9.7923e-03],
        [3.5018e-04, 2.5137e-04],
        [1.7161e-04, 2.1163e-03],
        [2.6788e-04, 9.5079e-03],
        [1.6414e-04, 2.9406e-03],
        [8.8150e-05, 1.0943e-02],
        [1.6309e-04, 2.6488e-03],
        [4.1329e-04, 2.6142e-03],
        [4.0425e-04, 2.3280e-02],
        [2.4058e-04, 1.5031e-02],
        [8.2576e-04, 2.1986e-03]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0015],
        [0.0002],
        [0.0001],
        [0.0001],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0003],
        [0.0022],
        [0.0015],
        [0.0003],
        [0.0019]], device='cuda:0')/tensor([[0.0002, 0.0015, 0.0002, 0.0001, 0.0001, 0.0004, 0.0005, 0.0003, 0.0006,
         0.0006, 0.0009, 0.0003, 0.0022, 0.0015, 0.0003, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0041],
        [0.0174],
        [0.0025],
        [0.0028],
        [0.0017],
        [0.0362],
        [0.0003],
        [0.0008],
        [0.0016],
        [0.0473],
        [0.0049],
        [0.0102],
        [0.0035],
        [0.0002],
        [0.0104]], device='cuda:0')/tensor([[0.0003, 0.0041, 0.0174, 0.0025, 0.0028, 0.0017, 0.0362, 0.0003, 0.0008,
         0.0016, 0.0473, 0.0049, 0.0102, 0.0035, 0.0002, 0.0104]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0003],
        [0.0015, 0.0041],
        [0.0002, 0.0174],
        [0.0001, 0.0025],
        [0.0001, 0.0028],
        [0.0004, 0.0017],
        [0.0005, 0.0362],
        [0.0003, 0.0003],
        [0.0006, 0.0008],
        [0.0006, 0.0016],
        [0.0009, 0.0473],
        [0.0003, 0.0049],
        [0.0022, 0.0102],
        [0.0015, 0.0035],
        [0.0003, 0.0002],
        [0.0019, 0.0104]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0014],
        [0.0003],
        [0.0005],
        [0.0006],
        [0.0009],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0016],
        [0.0021],
        [0.0012],
        [0.0002]], device='cuda:0')/tensor([[0.0009, 0.0014, 0.0003, 0.0005, 0.0006, 0.0009, 0.0004, 0.0002, 0.0002,
         0.0003, 0.0005, 0.0002, 0.0016, 0.0021, 0.0012, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0886],
        [0.0112],
        [0.0025],
        [0.0111],
        [0.0023],
        [0.0032],
        [0.0123],
        [0.0021],
        [0.0223],
        [0.0598],
        [0.0026],
        [0.0154],
        [0.0877],
        [0.0014],
        [0.0002]], device='cuda:0')/tensor([[0.0024, 0.0886, 0.0112, 0.0025, 0.0111, 0.0023, 0.0032, 0.0123, 0.0021,
         0.0223, 0.0598, 0.0026, 0.0154, 0.0877, 0.0014, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0024],
        [0.0014, 0.0886],
        [0.0003, 0.0112],
        [0.0005, 0.0025],
        [0.0006, 0.0111],
        [0.0009, 0.0023],
        [0.0004, 0.0032],
        [0.0002, 0.0123],
        [0.0002, 0.0021],
        [0.0003, 0.0223],
        [0.0005, 0.0598],
        [0.0002, 0.0026],
        [0.0016, 0.0154],
        [0.0021, 0.0877],
        [0.0012, 0.0014],
        [0.0002, 0.0002]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0003],
        [0.0012],
        [0.0003],
        [0.0009],
        [0.0003],
        [0.0028],
        [0.0027],
        [0.0007],
        [0.0005],
        [0.0008],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0005, 0.0006, 0.0004, 0.0003, 0.0012, 0.0003, 0.0009, 0.0003,
         0.0028, 0.0027, 0.0007, 0.0005, 0.0008, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0062],
        [0.0139],
        [0.0031],
        [0.0009],
        [0.0146],
        [0.0005],
        [0.0079],
        [0.0127],
        [0.0033],
        [0.0069],
        [0.0251],
        [0.0040],
        [0.0188],
        [0.0012],
        [0.0008],
        [0.0056]], device='cuda:0')/tensor([[0.0062, 0.0139, 0.0031, 0.0009, 0.0146, 0.0005, 0.0079, 0.0127, 0.0033,
         0.0069, 0.0251, 0.0040, 0.0188, 0.0012, 0.0008, 0.0056]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0062],
        [0.0005, 0.0139],
        [0.0006, 0.0031],
        [0.0004, 0.0009],
        [0.0003, 0.0146],
        [0.0012, 0.0005],
        [0.0003, 0.0079],
        [0.0009, 0.0127],
        [0.0003, 0.0033],
        [0.0028, 0.0069],
        [0.0027, 0.0251],
        [0.0007, 0.0040],
        [0.0005, 0.0188],
        [0.0008, 0.0012],
        [0.0006, 0.0008],
        [0.0005, 0.0056]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0008],
        [0.0009],
        [0.0015],
        [0.0003],
        [0.0003],
        [0.0015],
        [0.0005],
        [0.0003],
        [0.0008],
        [0.0032],
        [0.0008],
        [0.0004],
        [0.0018],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0008, 0.0009, 0.0015, 0.0003, 0.0003, 0.0015, 0.0005, 0.0003,
         0.0008, 0.0032, 0.0008, 0.0004, 0.0018, 0.0006, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0018],
        [0.0013],
        [0.0040],
        [0.0017],
        [0.0438],
        [0.0678],
        [0.0152],
        [0.0062],
        [0.0404],
        [0.0436],
        [0.0008],
        [0.0133],
        [0.1187],
        [0.0108],
        [0.0080]], device='cuda:0')/tensor([[0.0007, 0.0018, 0.0013, 0.0040, 0.0017, 0.0438, 0.0678, 0.0152, 0.0062,
         0.0404, 0.0436, 0.0008, 0.0133, 0.1187, 0.0108, 0.0080]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0007],
        [0.0008, 0.0018],
        [0.0009, 0.0013],
        [0.0015, 0.0040],
        [0.0003, 0.0017],
        [0.0003, 0.0438],
        [0.0015, 0.0678],
        [0.0005, 0.0152],
        [0.0003, 0.0062],
        [0.0008, 0.0404],
        [0.0032, 0.0436],
        [0.0008, 0.0008],
        [0.0004, 0.0133],
        [0.0018, 0.1187],
        [0.0006, 0.0108],
        [0.0013, 0.0080]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0008],
        [0.0004],
        [0.0007],
        [0.0008],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0007],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0022]], device='cuda:0')/tensor([[0.0014, 0.0006, 0.0003, 0.0003, 0.0008, 0.0004, 0.0007, 0.0008, 0.0004,
         0.0002, 0.0006, 0.0007, 0.0004, 0.0002, 0.0004, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0023],
        [0.0415],
        [0.0174],
        [0.0122],
        [0.0263],
        [0.0005],
        [0.0015],
        [0.0057],
        [0.0029],
        [0.0264],
        [0.0049],
        [0.0105],
        [0.0086],
        [0.0003],
        [0.0126],
        [0.1776]], device='cuda:0')/tensor([[0.0023, 0.0415, 0.0174, 0.0122, 0.0263, 0.0005, 0.0015, 0.0057, 0.0029,
         0.0264, 0.0049, 0.0105, 0.0086, 0.0003, 0.0126, 0.1776]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0023],
        [0.0006, 0.0415],
        [0.0003, 0.0174],
        [0.0003, 0.0122],
        [0.0008, 0.0263],
        [0.0004, 0.0005],
        [0.0007, 0.0015],
        [0.0008, 0.0057],
        [0.0004, 0.0029],
        [0.0002, 0.0264],
        [0.0006, 0.0049],
        [0.0007, 0.0105],
        [0.0004, 0.0086],
        [0.0002, 0.0003],
        [0.0004, 0.0126],
        [0.0022, 0.1776]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0014],
        [0.0006],
        [0.0004],
        [0.0011],
        [0.0012],
        [0.0012],
        [0.0006],
        [0.0008],
        [0.0017],
        [0.0007],
        [0.0014],
        [0.0005],
        [0.0001],
        [0.0023],
        [0.0011]], device='cuda:0')/tensor([[0.0024, 0.0014, 0.0006, 0.0004, 0.0011, 0.0012, 0.0012, 0.0006, 0.0008,
         0.0017, 0.0007, 0.0014, 0.0005, 0.0001, 0.0023, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0041],
        [0.0011],
        [0.0435],
        [0.0038],
        [0.0102],
        [0.0123],
        [0.0059],
        [0.0038],
        [0.0020],
        [0.0350],
        [0.0014],
        [0.0568],
        [0.0021],
        [0.0084],
        [0.0032],
        [0.0016]], device='cuda:0')/tensor([[0.0041, 0.0011, 0.0435, 0.0038, 0.0102, 0.0123, 0.0059, 0.0038, 0.0020,
         0.0350, 0.0014, 0.0568, 0.0021, 0.0084, 0.0032, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0024, 0.0041],
        [0.0014, 0.0011],
        [0.0006, 0.0435],
        [0.0004, 0.0038],
        [0.0011, 0.0102],
        [0.0012, 0.0123],
        [0.0012, 0.0059],
        [0.0006, 0.0038],
        [0.0008, 0.0020],
        [0.0017, 0.0350],
        [0.0007, 0.0014],
        [0.0014, 0.0568],
        [0.0005, 0.0021],
        [0.0001, 0.0084],
        [0.0023, 0.0032],
        [0.0011, 0.0016]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0009],
        [0.0011],
        [0.0008],
        [0.0055],
        [0.0009],
        [0.0013],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0013],
        [0.0003],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0009, 0.0011, 0.0008, 0.0055, 0.0009, 0.0013, 0.0003, 0.0002,
         0.0002, 0.0013, 0.0003, 0.0005, 0.0007, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0009],
        [0.0174],
        [0.0098],
        [0.0406],
        [0.0688],
        [0.0060],
        [0.0017],
        [0.0073],
        [0.0003],
        [0.0003],
        [0.0089],
        [0.0002],
        [0.0020],
        [0.0268],
        [0.0009],
        [0.0009]], device='cuda:0')/tensor([[0.0009, 0.0174, 0.0098, 0.0406, 0.0688, 0.0060, 0.0017, 0.0073, 0.0003,
         0.0003, 0.0089, 0.0002, 0.0020, 0.0268, 0.0009, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0009],
        [0.0009, 0.0174],
        [0.0011, 0.0098],
        [0.0008, 0.0406],
        [0.0055, 0.0688],
        [0.0009, 0.0060],
        [0.0013, 0.0017],
        [0.0003, 0.0073],
        [0.0002, 0.0003],
        [0.0002, 0.0003],
        [0.0013, 0.0089],
        [0.0003, 0.0002],
        [0.0005, 0.0020],
        [0.0007, 0.0268],
        [0.0004, 0.0009],
        [0.0005, 0.0009]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0025],
        [0.0003],
        [0.0001],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0011],
        [0.0005],
        [0.0013],
        [0.0006],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0003]], device='cuda:0')/tensor([[0.0025, 0.0003, 0.0001, 0.0005, 0.0004, 0.0007, 0.0002, 0.0011, 0.0005,
         0.0013, 0.0006, 0.0003, 0.0005, 0.0005, 0.0012, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0598],
        [0.0108],
        [0.0282],
        [0.0029],
        [0.0089],
        [0.0168],
        [0.0001],
        [0.0029],
        [0.0243],
        [0.0029],
        [0.0025],
        [0.0115],
        [0.0014],
        [0.0017],
        [0.0354],
        [0.0110]], device='cuda:0')/tensor([[0.0598, 0.0108, 0.0282, 0.0029, 0.0089, 0.0168, 0.0001, 0.0029, 0.0243,
         0.0029, 0.0025, 0.0115, 0.0014, 0.0017, 0.0354, 0.0110]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0025, 0.0598],
        [0.0003, 0.0108],
        [0.0001, 0.0282],
        [0.0005, 0.0029],
        [0.0004, 0.0089],
        [0.0007, 0.0168],
        [0.0002, 0.0001],
        [0.0011, 0.0029],
        [0.0005, 0.0243],
        [0.0013, 0.0029],
        [0.0006, 0.0025],
        [0.0003, 0.0115],
        [0.0005, 0.0014],
        [0.0005, 0.0017],
        [0.0012, 0.0354],
        [0.0003, 0.0110]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0019],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0009],
        [0.0015],
        [0.0014]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0006, 0.0005, 0.0019, 0.0007, 0.0003, 0.0005, 0.0003,
         0.0002, 0.0004, 0.0006, 0.0007, 0.0009, 0.0015, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0040],
        [0.0042],
        [0.0239],
        [0.0078],
        [0.0360],
        [0.0048],
        [0.0092],
        [0.0051],
        [0.0042],
        [0.0029],
        [0.0199],
        [0.0018],
        [0.0004],
        [0.0014],
        [0.0445],
        [0.0199]], device='cuda:0')/tensor([[0.0040, 0.0042, 0.0239, 0.0078, 0.0360, 0.0048, 0.0092, 0.0051, 0.0042,
         0.0029, 0.0199, 0.0018, 0.0004, 0.0014, 0.0445, 0.0199]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0040],
        [0.0004, 0.0042],
        [0.0006, 0.0239],
        [0.0005, 0.0078],
        [0.0019, 0.0360],
        [0.0007, 0.0048],
        [0.0003, 0.0092],
        [0.0005, 0.0051],
        [0.0003, 0.0042],
        [0.0002, 0.0029],
        [0.0004, 0.0199],
        [0.0006, 0.0018],
        [0.0007, 0.0004],
        [0.0009, 0.0014],
        [0.0015, 0.0445],
        [0.0014, 0.0199]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0012],
        [0.0011],
        [0.0003],
        [0.0005],
        [0.0009],
        [0.0001],
        [0.0009],
        [0.0040],
        [0.0003],
        [0.0006],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0002, 0.0002, 0.0004, 0.0012, 0.0011, 0.0003, 0.0005, 0.0009,
         0.0001, 0.0009, 0.0040, 0.0003, 0.0006, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0155],
        [0.0075],
        [0.0031],
        [0.0151],
        [0.0471],
        [0.0031],
        [0.0050],
        [0.0128],
        [0.0088],
        [0.0140],
        [0.0082],
        [0.0080],
        [0.0133],
        [0.0096],
        [0.0088],
        [0.0050]], device='cuda:0')/tensor([[0.0155, 0.0075, 0.0031, 0.0151, 0.0471, 0.0031, 0.0050, 0.0128, 0.0088,
         0.0140, 0.0082, 0.0080, 0.0133, 0.0096, 0.0088, 0.0050]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0155],
        [0.0002, 0.0075],
        [0.0002, 0.0031],
        [0.0004, 0.0151],
        [0.0012, 0.0471],
        [0.0011, 0.0031],
        [0.0003, 0.0050],
        [0.0005, 0.0128],
        [0.0009, 0.0088],
        [0.0001, 0.0140],
        [0.0009, 0.0082],
        [0.0040, 0.0080],
        [0.0003, 0.0133],
        [0.0006, 0.0096],
        [0.0003, 0.0088],
        [0.0005, 0.0050]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0003],
        [0.0004],
        [0.0009],
        [0.0005],
        [0.0009],
        [0.0004],
        [0.0011],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0006],
        [0.0009],
        [0.0005],
        [0.0012],
        [0.0004]], device='cuda:0')/tensor([[0.0007, 0.0003, 0.0004, 0.0009, 0.0005, 0.0009, 0.0004, 0.0011, 0.0004,
         0.0004, 0.0003, 0.0006, 0.0009, 0.0005, 0.0012, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0003],
        [0.0023],
        [0.1485],
        [0.0012],
        [0.0030],
        [0.0135],
        [0.0262],
        [0.0309],
        [0.0410],
        [0.0248],
        [0.0004],
        [0.0472],
        [0.0100],
        [0.0028],
        [0.0040]], device='cuda:0')/tensor([[0.0010, 0.0003, 0.0023, 0.1485, 0.0012, 0.0030, 0.0135, 0.0262, 0.0309,
         0.0410, 0.0248, 0.0004, 0.0472, 0.0100, 0.0028, 0.0040]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0010],
        [0.0003, 0.0003],
        [0.0004, 0.0023],
        [0.0009, 0.1485],
        [0.0005, 0.0012],
        [0.0009, 0.0030],
        [0.0004, 0.0135],
        [0.0011, 0.0262],
        [0.0004, 0.0309],
        [0.0004, 0.0410],
        [0.0003, 0.0248],
        [0.0006, 0.0004],
        [0.0009, 0.0472],
        [0.0005, 0.0100],
        [0.0012, 0.0028],
        [0.0004, 0.0040]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0009],
        [0.0007],
        [0.0004],
        [0.0010],
        [0.0010],
        [0.0005],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0009, 0.0007, 0.0004, 0.0010, 0.0010, 0.0005, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0262],
        [0.0311],
        [0.0002],
        [0.0015],
        [0.0789],
        [0.0083],
        [0.0057],
        [0.0135]], device='cuda:0')/tensor([[0.0262, 0.0311, 0.0002, 0.0015, 0.0789, 0.0083, 0.0057, 0.0135]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0009, 0.0262],
        [0.0007, 0.0311],
        [0.0004, 0.0002],
        [0.0010, 0.0015],
        [0.0010, 0.0789],
        [0.0005, 0.0083],
        [0.0002, 0.0057],
        [0.0003, 0.0135]], device='cuda:0')
acc:  0.555
Time taken to execute the de SA task with prompt type rare_synonyms, variation 2 and batchsize 16: 0:03:16.872403
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA rare_synonyms 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 213.92it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0015],
        [0.0011],
        [0.0006],
        [0.0011],
        [0.0012],
        [0.0006],
        [0.0011],
        [0.0009],
        [0.0001],
        [0.0012],
        [0.0003],
        [0.0004],
        [0.0019],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0012, 0.0015, 0.0011, 0.0006, 0.0011, 0.0012, 0.0006, 0.0011, 0.0009,
         0.0001, 0.0012, 0.0003, 0.0004, 0.0019, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0188],
        [0.0193],
        [0.0138],
        [0.0132],
        [0.0924],
        [0.0645],
        [0.0015],
        [0.0071],
        [0.0552],
        [0.0133],
        [0.0344],
        [0.0210],
        [0.0433],
        [0.0212],
        [0.0223],
        [0.0240]], device='cuda:0')/tensor([[0.0188, 0.0193, 0.0138, 0.0132, 0.0924, 0.0645, 0.0015, 0.0071, 0.0552,
         0.0133, 0.0344, 0.0210, 0.0433, 0.0212, 0.0223, 0.0240]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0188],
        [0.0015, 0.0193],
        [0.0011, 0.0138],
        [0.0006, 0.0132],
        [0.0011, 0.0924],
        [0.0012, 0.0645],
        [0.0006, 0.0015],
        [0.0011, 0.0071],
        [0.0009, 0.0552],
        [0.0001, 0.0133],
        [0.0012, 0.0344],
        [0.0003, 0.0210],
        [0.0004, 0.0433],
        [0.0019, 0.0212],
        [0.0008, 0.0223],
        [0.0007, 0.0240]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.9832e-04],
        [7.0081e-04],
        [1.0722e-03],
        [8.7487e-04],
        [1.5301e-03],
        [6.7593e-04],
        [5.8560e-04],
        [7.0100e-04],
        [5.4310e-04],
        [1.8249e-03],
        [1.0761e-03],
        [1.1088e-03],
        [6.3266e-04],
        [4.2597e-04],
        [8.8969e-05],
        [1.3132e-03]], device='cuda:0')/tensor([[7.9832e-04, 7.0081e-04, 1.0722e-03, 8.7487e-04, 1.5301e-03, 6.7593e-04,
         5.8560e-04, 7.0100e-04, 5.4310e-04, 1.8249e-03, 1.0761e-03, 1.1088e-03,
         6.3266e-04, 4.2597e-04, 8.8969e-05, 1.3132e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0112],
        [0.0503],
        [0.0074],
        [0.0886],
        [0.1142],
        [0.0768],
        [0.1691],
        [0.0392],
        [0.0025],
        [0.0156],
        [0.0101],
        [0.0415],
        [0.0207],
        [0.0074],
        [0.0023],
        [0.0386]], device='cuda:0')/tensor([[0.0112, 0.0503, 0.0074, 0.0886, 0.1142, 0.0768, 0.1691, 0.0392, 0.0025,
         0.0156, 0.0101, 0.0415, 0.0207, 0.0074, 0.0023, 0.0386]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.9832e-04, 1.1161e-02],
        [7.0081e-04, 5.0344e-02],
        [1.0722e-03, 7.3940e-03],
        [8.7487e-04, 8.8649e-02],
        [1.5301e-03, 1.1422e-01],
        [6.7593e-04, 7.6801e-02],
        [5.8560e-04, 1.6905e-01],
        [7.0100e-04, 3.9156e-02],
        [5.4310e-04, 2.4660e-03],
        [1.8249e-03, 1.5625e-02],
        [1.0761e-03, 1.0111e-02],
        [1.1088e-03, 4.1531e-02],
        [6.3266e-04, 2.0723e-02],
        [4.2597e-04, 7.4155e-03],
        [8.8969e-05, 2.2513e-03],
        [1.3132e-03, 3.8567e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.6849e-04],
        [8.6603e-05],
        [1.2968e-03],
        [1.9653e-03],
        [1.6267e-03],
        [1.1761e-03],
        [3.0771e-04],
        [1.9059e-03],
        [1.0834e-03],
        [1.0760e-03],
        [1.3921e-03],
        [4.5122e-04],
        [4.2654e-04],
        [1.3275e-03],
        [1.7545e-03],
        [7.2235e-04]], device='cuda:0')/tensor([[9.6849e-04, 8.6603e-05, 1.2968e-03, 1.9653e-03, 1.6267e-03, 1.1761e-03,
         3.0771e-04, 1.9059e-03, 1.0834e-03, 1.0760e-03, 1.3921e-03, 4.5122e-04,
         4.2654e-04, 1.3275e-03, 1.7545e-03, 7.2235e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.1538],
        [0.0025],
        [0.0499],
        [0.0688],
        [0.0536],
        [0.0379],
        [0.0035],
        [0.0274],
        [0.0531],
        [0.0066],
        [0.0286],
        [0.0114],
        [0.0151],
        [0.0724],
        [0.0151],
        [0.0069]], device='cuda:0')/tensor([[0.1538, 0.0025, 0.0499, 0.0688, 0.0536, 0.0379, 0.0035, 0.0274, 0.0531,
         0.0066, 0.0286, 0.0114, 0.0151, 0.0724, 0.0151, 0.0069]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.6849e-04, 1.5378e-01],
        [8.6603e-05, 2.4881e-03],
        [1.2968e-03, 4.9927e-02],
        [1.9653e-03, 6.8761e-02],
        [1.6267e-03, 5.3551e-02],
        [1.1761e-03, 3.7888e-02],
        [3.0771e-04, 3.5050e-03],
        [1.9059e-03, 2.7425e-02],
        [1.0834e-03, 5.3096e-02],
        [1.0760e-03, 6.5846e-03],
        [1.3921e-03, 2.8559e-02],
        [4.5122e-04, 1.1370e-02],
        [4.2654e-04, 1.5098e-02],
        [1.3275e-03, 7.2392e-02],
        [1.7545e-03, 1.5077e-02],
        [7.2235e-04, 6.8752e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0008],
        [0.0006],
        [0.0017],
        [0.0019],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0013],
        [0.0017],
        [0.0012],
        [0.0007],
        [0.0006],
        [0.0007],
        [0.0004],
        [0.0026]], device='cuda:0')/tensor([[0.0005, 0.0008, 0.0006, 0.0017, 0.0019, 0.0003, 0.0007, 0.0006, 0.0013,
         0.0017, 0.0012, 0.0007, 0.0006, 0.0007, 0.0004, 0.0026]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0073],
        [0.0461],
        [0.0103],
        [0.0110],
        [0.0080],
        [0.0065],
        [0.0066],
        [0.0147],
        [0.0206],
        [0.0086],
        [0.0596],
        [0.0610],
        [0.0395],
        [0.0817],
        [0.0036],
        [0.0650]], device='cuda:0')/tensor([[0.0073, 0.0461, 0.0103, 0.0110, 0.0080, 0.0065, 0.0066, 0.0147, 0.0206,
         0.0086, 0.0596, 0.0610, 0.0395, 0.0817, 0.0036, 0.0650]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0073],
        [0.0008, 0.0461],
        [0.0006, 0.0103],
        [0.0017, 0.0110],
        [0.0019, 0.0080],
        [0.0003, 0.0065],
        [0.0007, 0.0066],
        [0.0006, 0.0147],
        [0.0013, 0.0206],
        [0.0017, 0.0086],
        [0.0012, 0.0596],
        [0.0007, 0.0610],
        [0.0006, 0.0395],
        [0.0007, 0.0817],
        [0.0004, 0.0036],
        [0.0026, 0.0650]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0021],
        [0.0011],
        [0.0003],
        [0.0035],
        [0.0015],
        [0.0010],
        [0.0008],
        [0.0007],
        [0.0007],
        [0.0001],
        [0.0009],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0005, 0.0021, 0.0011, 0.0003, 0.0035, 0.0015, 0.0010, 0.0008, 0.0007,
         0.0007, 0.0001, 0.0009, 0.0008, 0.0004, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0222],
        [0.0355],
        [0.0070],
        [0.0346],
        [0.0479],
        [0.0422],
        [0.0118],
        [0.1084],
        [0.0538],
        [0.0389],
        [0.0012],
        [0.0580],
        [0.0425],
        [0.0617],
        [0.0435],
        [0.0562]], device='cuda:0')/tensor([[0.0222, 0.0355, 0.0070, 0.0346, 0.0479, 0.0422, 0.0118, 0.1084, 0.0538,
         0.0389, 0.0012, 0.0580, 0.0425, 0.0617, 0.0435, 0.0562]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0222],
        [0.0021, 0.0355],
        [0.0011, 0.0070],
        [0.0003, 0.0346],
        [0.0035, 0.0479],
        [0.0015, 0.0422],
        [0.0010, 0.0118],
        [0.0008, 0.1084],
        [0.0007, 0.0538],
        [0.0007, 0.0389],
        [0.0001, 0.0012],
        [0.0009, 0.0580],
        [0.0008, 0.0425],
        [0.0004, 0.0617],
        [0.0006, 0.0435],
        [0.0005, 0.0562]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.8504e-04],
        [2.0611e-04],
        [1.1558e-03],
        [5.4178e-04],
        [9.9016e-04],
        [6.1536e-04],
        [1.4252e-03],
        [1.6747e-03],
        [7.7347e-04],
        [6.7922e-04],
        [5.1604e-04],
        [5.2054e-05],
        [1.4262e-04],
        [1.6952e-03],
        [5.9560e-04],
        [8.5747e-04]], device='cuda:0')/tensor([[9.8504e-04, 2.0611e-04, 1.1558e-03, 5.4178e-04, 9.9016e-04, 6.1536e-04,
         1.4252e-03, 1.6747e-03, 7.7347e-04, 6.7922e-04, 5.1604e-04, 5.2054e-05,
         1.4262e-04, 1.6952e-03, 5.9560e-04, 8.5747e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0383],
        [0.1549],
        [0.0050],
        [0.0338],
        [0.1477],
        [0.0333],
        [0.0291],
        [0.0894],
        [0.0167],
        [0.1172],
        [0.0489],
        [0.0027],
        [0.0036],
        [0.0236],
        [0.0344],
        [0.0199]], device='cuda:0')/tensor([[0.0383, 0.1549, 0.0050, 0.0338, 0.1477, 0.0333, 0.0291, 0.0894, 0.0167,
         0.1172, 0.0489, 0.0027, 0.0036, 0.0236, 0.0344, 0.0199]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.8504e-04, 3.8323e-02],
        [2.0611e-04, 1.5489e-01],
        [1.1558e-03, 5.0051e-03],
        [5.4178e-04, 3.3797e-02],
        [9.9016e-04, 1.4769e-01],
        [6.1536e-04, 3.3305e-02],
        [1.4252e-03, 2.9145e-02],
        [1.6747e-03, 8.9414e-02],
        [7.7347e-04, 1.6745e-02],
        [6.7922e-04, 1.1719e-01],
        [5.1604e-04, 4.8945e-02],
        [5.2054e-05, 2.6506e-03],
        [1.4262e-04, 3.5981e-03],
        [1.6952e-03, 2.3612e-02],
        [5.9560e-04, 3.4424e-02],
        [8.5747e-04, 1.9921e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0022],
        [0.0015],
        [0.0020],
        [0.0008],
        [0.0009],
        [0.0022],
        [0.0019],
        [0.0007],
        [0.0009],
        [0.0011],
        [0.0010],
        [0.0008],
        [0.0009],
        [0.0039],
        [0.0002],
        [0.0014]], device='cuda:0')/tensor([[0.0022, 0.0015, 0.0020, 0.0008, 0.0009, 0.0022, 0.0019, 0.0007, 0.0009,
         0.0011, 0.0010, 0.0008, 0.0009, 0.0039, 0.0002, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0113],
        [0.0314],
        [0.0213],
        [0.0017],
        [0.0343],
        [0.0064],
        [0.0150],
        [0.0763],
        [0.0530],
        [0.0283],
        [0.0356],
        [0.0986],
        [0.0210],
        [0.0344],
        [0.0064],
        [0.0256]], device='cuda:0')/tensor([[0.0113, 0.0314, 0.0213, 0.0017, 0.0343, 0.0064, 0.0150, 0.0763, 0.0530,
         0.0283, 0.0356, 0.0986, 0.0210, 0.0344, 0.0064, 0.0256]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0022, 0.0113],
        [0.0015, 0.0314],
        [0.0020, 0.0213],
        [0.0008, 0.0017],
        [0.0009, 0.0343],
        [0.0022, 0.0064],
        [0.0019, 0.0150],
        [0.0007, 0.0763],
        [0.0009, 0.0530],
        [0.0011, 0.0283],
        [0.0010, 0.0356],
        [0.0008, 0.0986],
        [0.0009, 0.0210],
        [0.0039, 0.0344],
        [0.0002, 0.0064],
        [0.0014, 0.0256]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0009],
        [0.0017],
        [0.0015],
        [0.0007],
        [0.0029],
        [0.0004],
        [0.0001],
        [0.0006],
        [0.0038],
        [0.0019],
        [0.0006],
        [0.0015],
        [0.0010],
        [0.0012],
        [0.0025]], device='cuda:0')/tensor([[0.0008, 0.0009, 0.0017, 0.0015, 0.0007, 0.0029, 0.0004, 0.0001, 0.0006,
         0.0038, 0.0019, 0.0006, 0.0015, 0.0010, 0.0012, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0224],
        [0.0147],
        [0.0311],
        [0.0115],
        [0.0454],
        [0.0638],
        [0.0059],
        [0.0057],
        [0.0148],
        [0.0723],
        [0.0479],
        [0.0335],
        [0.0556],
        [0.0050],
        [0.0398],
        [0.0368]], device='cuda:0')/tensor([[0.0224, 0.0147, 0.0311, 0.0115, 0.0454, 0.0638, 0.0059, 0.0057, 0.0148,
         0.0723, 0.0479, 0.0335, 0.0556, 0.0050, 0.0398, 0.0368]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0224],
        [0.0009, 0.0147],
        [0.0017, 0.0311],
        [0.0015, 0.0115],
        [0.0007, 0.0454],
        [0.0029, 0.0638],
        [0.0004, 0.0059],
        [0.0001, 0.0057],
        [0.0006, 0.0148],
        [0.0038, 0.0723],
        [0.0019, 0.0479],
        [0.0006, 0.0335],
        [0.0015, 0.0556],
        [0.0010, 0.0050],
        [0.0012, 0.0398],
        [0.0025, 0.0368]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0005],
        [0.0013],
        [0.0006],
        [0.0014],
        [0.0012],
        [0.0006],
        [0.0021],
        [0.0015],
        [0.0010],
        [0.0014],
        [0.0004],
        [0.0009],
        [0.0022],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0009, 0.0005, 0.0013, 0.0006, 0.0014, 0.0012, 0.0006, 0.0021, 0.0015,
         0.0010, 0.0014, 0.0004, 0.0009, 0.0022, 0.0006, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0041],
        [0.0027],
        [0.0513],
        [0.0162],
        [0.0336],
        [0.0141],
        [0.0374],
        [0.0086],
        [0.1886],
        [0.0299],
        [0.0410],
        [0.0187],
        [0.0290],
        [0.0547],
        [0.0113],
        [0.0061]], device='cuda:0')/tensor([[0.0041, 0.0027, 0.0513, 0.0162, 0.0336, 0.0141, 0.0374, 0.0086, 0.1886,
         0.0299, 0.0410, 0.0187, 0.0290, 0.0547, 0.0113, 0.0061]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0041],
        [0.0005, 0.0027],
        [0.0013, 0.0513],
        [0.0006, 0.0162],
        [0.0014, 0.0336],
        [0.0012, 0.0141],
        [0.0006, 0.0374],
        [0.0021, 0.0086],
        [0.0015, 0.1886],
        [0.0010, 0.0299],
        [0.0014, 0.0410],
        [0.0004, 0.0187],
        [0.0009, 0.0290],
        [0.0022, 0.0547],
        [0.0006, 0.0113],
        [0.0002, 0.0061]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0007],
        [0.0005],
        [0.0016],
        [0.0012],
        [0.0005],
        [0.0004],
        [0.0016],
        [0.0007],
        [0.0018],
        [0.0007],
        [0.0029],
        [0.0013],
        [0.0002],
        [0.0016],
        [0.0012]], device='cuda:0')/tensor([[0.0008, 0.0007, 0.0005, 0.0016, 0.0012, 0.0005, 0.0004, 0.0016, 0.0007,
         0.0018, 0.0007, 0.0029, 0.0013, 0.0002, 0.0016, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0271],
        [0.0117],
        [0.0066],
        [0.0409],
        [0.0824],
        [0.0157],
        [0.0056],
        [0.1069],
        [0.0243],
        [0.0172],
        [0.0044],
        [0.0254],
        [0.0573],
        [0.0064],
        [0.0155],
        [0.0085]], device='cuda:0')/tensor([[0.0271, 0.0117, 0.0066, 0.0409, 0.0824, 0.0157, 0.0056, 0.1069, 0.0243,
         0.0172, 0.0044, 0.0254, 0.0573, 0.0064, 0.0155, 0.0085]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0271],
        [0.0007, 0.0117],
        [0.0005, 0.0066],
        [0.0016, 0.0409],
        [0.0012, 0.0824],
        [0.0005, 0.0157],
        [0.0004, 0.0056],
        [0.0016, 0.1069],
        [0.0007, 0.0243],
        [0.0018, 0.0172],
        [0.0007, 0.0044],
        [0.0029, 0.0254],
        [0.0013, 0.0573],
        [0.0002, 0.0064],
        [0.0016, 0.0155],
        [0.0012, 0.0085]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0010],
        [0.0018],
        [0.0007],
        [0.0008],
        [0.0010],
        [0.0009],
        [0.0013],
        [0.0011],
        [0.0018],
        [0.0034],
        [0.0015],
        [0.0019],
        [0.0002],
        [0.0013],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0010, 0.0018, 0.0007, 0.0008, 0.0010, 0.0009, 0.0013, 0.0011,
         0.0018, 0.0034, 0.0015, 0.0019, 0.0002, 0.0013, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0613],
        [0.0159],
        [0.0146],
        [0.0447],
        [0.0160],
        [0.0087],
        [0.0343],
        [0.0162],
        [0.0129],
        [0.0883],
        [0.0661],
        [0.0470],
        [0.0656],
        [0.0074],
        [0.0344],
        [0.0187]], device='cuda:0')/tensor([[0.0613, 0.0159, 0.0146, 0.0447, 0.0160, 0.0087, 0.0343, 0.0162, 0.0129,
         0.0883, 0.0661, 0.0470, 0.0656, 0.0074, 0.0344, 0.0187]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0613],
        [0.0010, 0.0159],
        [0.0018, 0.0146],
        [0.0007, 0.0447],
        [0.0008, 0.0160],
        [0.0010, 0.0087],
        [0.0009, 0.0343],
        [0.0013, 0.0162],
        [0.0011, 0.0129],
        [0.0018, 0.0883],
        [0.0034, 0.0661],
        [0.0015, 0.0470],
        [0.0019, 0.0656],
        [0.0002, 0.0074],
        [0.0013, 0.0344],
        [0.0003, 0.0187]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0010],
        [0.0020],
        [0.0008],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0009],
        [0.0006],
        [0.0011],
        [0.0013],
        [0.0013],
        [0.0004],
        [0.0010],
        [0.0030],
        [0.0014]], device='cuda:0')/tensor([[0.0011, 0.0010, 0.0020, 0.0008, 0.0005, 0.0005, 0.0004, 0.0009, 0.0006,
         0.0011, 0.0013, 0.0013, 0.0004, 0.0010, 0.0030, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0222],
        [0.0098],
        [0.0263],
        [0.0381],
        [0.0408],
        [0.0624],
        [0.0637],
        [0.0078],
        [0.0125],
        [0.0209],
        [0.0119],
        [0.0577],
        [0.0023],
        [0.0570],
        [0.1005],
        [0.0665]], device='cuda:0')/tensor([[0.0222, 0.0098, 0.0263, 0.0381, 0.0408, 0.0624, 0.0637, 0.0078, 0.0125,
         0.0209, 0.0119, 0.0577, 0.0023, 0.0570, 0.1005, 0.0665]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0222],
        [0.0010, 0.0098],
        [0.0020, 0.0263],
        [0.0008, 0.0381],
        [0.0005, 0.0408],
        [0.0005, 0.0624],
        [0.0004, 0.0637],
        [0.0009, 0.0078],
        [0.0006, 0.0125],
        [0.0011, 0.0209],
        [0.0013, 0.0119],
        [0.0013, 0.0577],
        [0.0004, 0.0023],
        [0.0010, 0.0570],
        [0.0030, 0.1005],
        [0.0014, 0.0665]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0018],
        [0.0002],
        [0.0010],
        [0.0011],
        [0.0007],
        [0.0008]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0018, 0.0002, 0.0010, 0.0011, 0.0007, 0.0008]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0192],
        [0.0232],
        [0.0409],
        [0.0085],
        [0.0325],
        [0.0095],
        [0.0462],
        [0.0145]], device='cuda:0')/tensor([[0.0192, 0.0232, 0.0409, 0.0085, 0.0325, 0.0095, 0.0462, 0.0145]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0004, 0.0192],
        [0.0011, 0.0232],
        [0.0018, 0.0409],
        [0.0002, 0.0085],
        [0.0010, 0.0325],
        [0.0011, 0.0095],
        [0.0007, 0.0462],
        [0.0008, 0.0145]], device='cuda:0')
acc:  0.5
Time taken to execute the de SA task with prompt type rare_synonyms, variation 3 and batchsize 16: 0:03:15.582750
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA rare_synonyms 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 192.24it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0033],
        [0.0005],
        [0.0010],
        [0.0011],
        [0.0081],
        [0.0056],
        [0.0027],
        [0.0041],
        [0.0005],
        [0.0010],
        [0.0006],
        [0.0008],
        [0.0015],
        [0.0052],
        [0.0009]], device='cuda:0')/tensor([[0.0006, 0.0033, 0.0005, 0.0010, 0.0011, 0.0081, 0.0056, 0.0027, 0.0041,
         0.0005, 0.0010, 0.0006, 0.0008, 0.0015, 0.0052, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0092],
        [0.0132],
        [0.0017],
        [0.0468],
        [0.0300],
        [0.0740],
        [0.0192],
        [0.0508],
        [0.0078],
        [0.0260],
        [0.0003],
        [0.0147],
        [0.0677],
        [0.0046],
        [0.0326],
        [0.0058]], device='cuda:0')/tensor([[0.0092, 0.0132, 0.0017, 0.0468, 0.0300, 0.0740, 0.0192, 0.0508, 0.0078,
         0.0260, 0.0003, 0.0147, 0.0677, 0.0046, 0.0326, 0.0058]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0092],
        [0.0033, 0.0132],
        [0.0005, 0.0017],
        [0.0010, 0.0468],
        [0.0011, 0.0300],
        [0.0081, 0.0740],
        [0.0056, 0.0192],
        [0.0027, 0.0508],
        [0.0041, 0.0078],
        [0.0005, 0.0260],
        [0.0010, 0.0003],
        [0.0006, 0.0147],
        [0.0008, 0.0677],
        [0.0015, 0.0046],
        [0.0052, 0.0326],
        [0.0009, 0.0058]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0011],
        [0.0023],
        [0.0041],
        [0.0022],
        [0.0037],
        [0.0009],
        [0.0025],
        [0.0011],
        [0.0043],
        [0.0003],
        [0.0005],
        [0.0010],
        [0.0012],
        [0.0007],
        [0.0014]], device='cuda:0')/tensor([[0.0009, 0.0011, 0.0023, 0.0041, 0.0022, 0.0037, 0.0009, 0.0025, 0.0011,
         0.0043, 0.0003, 0.0005, 0.0010, 0.0012, 0.0007, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0215],
        [0.0136],
        [0.0055],
        [0.0554],
        [0.1224],
        [0.0319],
        [0.0150],
        [0.0442],
        [0.0315],
        [0.0070],
        [0.0280],
        [0.0019],
        [0.0192],
        [0.0137],
        [0.0463],
        [0.0291]], device='cuda:0')/tensor([[0.0215, 0.0136, 0.0055, 0.0554, 0.1224, 0.0319, 0.0150, 0.0442, 0.0315,
         0.0070, 0.0280, 0.0019, 0.0192, 0.0137, 0.0463, 0.0291]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0215],
        [0.0011, 0.0136],
        [0.0023, 0.0055],
        [0.0041, 0.0554],
        [0.0022, 0.1224],
        [0.0037, 0.0319],
        [0.0009, 0.0150],
        [0.0025, 0.0442],
        [0.0011, 0.0315],
        [0.0043, 0.0070],
        [0.0003, 0.0280],
        [0.0005, 0.0019],
        [0.0010, 0.0192],
        [0.0012, 0.0137],
        [0.0007, 0.0463],
        [0.0014, 0.0291]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0012],
        [0.0024],
        [0.0091],
        [0.0018],
        [0.0044],
        [0.0035],
        [0.0018],
        [0.0007],
        [0.0025],
        [0.0008],
        [0.0032],
        [0.0024],
        [0.0008],
        [0.0020],
        [0.0036]], device='cuda:0')/tensor([[0.0009, 0.0012, 0.0024, 0.0091, 0.0018, 0.0044, 0.0035, 0.0018, 0.0007,
         0.0025, 0.0008, 0.0032, 0.0024, 0.0008, 0.0020, 0.0036]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0791],
        [0.0177],
        [0.0316],
        [0.0796],
        [0.0091],
        [0.0436],
        [0.1102],
        [0.0991],
        [0.0006],
        [0.0025],
        [0.0173],
        [0.0023],
        [0.0069],
        [0.0005],
        [0.0317],
        [0.0101]], device='cuda:0')/tensor([[0.0791, 0.0177, 0.0316, 0.0796, 0.0091, 0.0436, 0.1102, 0.0991, 0.0006,
         0.0025, 0.0173, 0.0023, 0.0069, 0.0005, 0.0317, 0.0101]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0791],
        [0.0012, 0.0177],
        [0.0024, 0.0316],
        [0.0091, 0.0796],
        [0.0018, 0.0091],
        [0.0044, 0.0436],
        [0.0035, 0.1102],
        [0.0018, 0.0991],
        [0.0007, 0.0006],
        [0.0025, 0.0025],
        [0.0008, 0.0173],
        [0.0032, 0.0023],
        [0.0024, 0.0069],
        [0.0008, 0.0005],
        [0.0020, 0.0317],
        [0.0036, 0.0101]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0084],
        [0.0027],
        [0.0014],
        [0.0036],
        [0.0016],
        [0.0058],
        [0.0023],
        [0.0019],
        [0.0083],
        [0.0020],
        [0.0009],
        [0.0015],
        [0.0010],
        [0.0026],
        [0.0027],
        [0.0004]], device='cuda:0')/tensor([[0.0084, 0.0027, 0.0014, 0.0036, 0.0016, 0.0058, 0.0023, 0.0019, 0.0083,
         0.0020, 0.0009, 0.0015, 0.0010, 0.0026, 0.0027, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0256],
        [0.0067],
        [0.0016],
        [0.0503],
        [0.0505],
        [0.0123],
        [0.0045],
        [0.0010],
        [0.0072],
        [0.0022],
        [0.0179],
        [0.0020],
        [0.0235],
        [0.0370],
        [0.0083],
        [0.0006]], device='cuda:0')/tensor([[0.0256, 0.0067, 0.0016, 0.0503, 0.0505, 0.0123, 0.0045, 0.0010, 0.0072,
         0.0022, 0.0179, 0.0020, 0.0235, 0.0370, 0.0083, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0084, 0.0256],
        [0.0027, 0.0067],
        [0.0014, 0.0016],
        [0.0036, 0.0503],
        [0.0016, 0.0505],
        [0.0058, 0.0123],
        [0.0023, 0.0045],
        [0.0019, 0.0010],
        [0.0083, 0.0072],
        [0.0020, 0.0022],
        [0.0009, 0.0179],
        [0.0015, 0.0020],
        [0.0010, 0.0235],
        [0.0026, 0.0370],
        [0.0027, 0.0083],
        [0.0004, 0.0006]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0010],
        [0.0023],
        [0.0027],
        [0.0022],
        [0.0038],
        [0.0032],
        [0.0043],
        [0.0020],
        [0.0033],
        [0.0010],
        [0.0036],
        [0.0022],
        [0.0018],
        [0.0012],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0010, 0.0023, 0.0027, 0.0022, 0.0038, 0.0032, 0.0043, 0.0020,
         0.0033, 0.0010, 0.0036, 0.0022, 0.0018, 0.0012, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0140],
        [0.0024],
        [0.0333],
        [0.0045],
        [0.0214],
        [0.0540],
        [0.0057],
        [0.0316],
        [0.0150],
        [0.0084],
        [0.0019],
        [0.0500],
        [0.0434],
        [0.0012],
        [0.0175],
        [0.0047]], device='cuda:0')/tensor([[0.0140, 0.0024, 0.0333, 0.0045, 0.0214, 0.0540, 0.0057, 0.0316, 0.0150,
         0.0084, 0.0019, 0.0500, 0.0434, 0.0012, 0.0175, 0.0047]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0140],
        [0.0010, 0.0024],
        [0.0023, 0.0333],
        [0.0027, 0.0045],
        [0.0022, 0.0214],
        [0.0038, 0.0540],
        [0.0032, 0.0057],
        [0.0043, 0.0316],
        [0.0020, 0.0150],
        [0.0033, 0.0084],
        [0.0010, 0.0019],
        [0.0036, 0.0500],
        [0.0022, 0.0434],
        [0.0018, 0.0012],
        [0.0012, 0.0175],
        [0.0006, 0.0047]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0012],
        [0.0012],
        [0.0047],
        [0.0006],
        [0.0027],
        [0.0011],
        [0.0003],
        [0.0016],
        [0.0006],
        [0.0019],
        [0.0019],
        [0.0007],
        [0.0011],
        [0.0010],
        [0.0027]], device='cuda:0')/tensor([[0.0007, 0.0012, 0.0012, 0.0047, 0.0006, 0.0027, 0.0011, 0.0003, 0.0016,
         0.0006, 0.0019, 0.0019, 0.0007, 0.0011, 0.0010, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0012],
        [0.0195],
        [0.0225],
        [0.0002],
        [0.0532],
        [0.0060],
        [0.0028],
        [0.0348],
        [0.0065],
        [0.0056],
        [0.0216],
        [0.0056],
        [0.0102],
        [0.0209],
        [0.0672]], device='cuda:0')/tensor([[0.0025, 0.0012, 0.0195, 0.0225, 0.0002, 0.0532, 0.0060, 0.0028, 0.0348,
         0.0065, 0.0056, 0.0216, 0.0056, 0.0102, 0.0209, 0.0672]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0025],
        [0.0012, 0.0012],
        [0.0012, 0.0195],
        [0.0047, 0.0225],
        [0.0006, 0.0002],
        [0.0027, 0.0532],
        [0.0011, 0.0060],
        [0.0003, 0.0028],
        [0.0016, 0.0348],
        [0.0006, 0.0065],
        [0.0019, 0.0056],
        [0.0019, 0.0216],
        [0.0007, 0.0056],
        [0.0011, 0.0102],
        [0.0010, 0.0209],
        [0.0027, 0.0672]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0028],
        [0.0028],
        [0.0019],
        [0.0009],
        [0.0010],
        [0.0020],
        [0.0017],
        [0.0015],
        [0.0003],
        [0.0017],
        [0.0018],
        [0.0029],
        [0.0031],
        [0.0007],
        [0.0023],
        [0.0007]], device='cuda:0')/tensor([[0.0028, 0.0028, 0.0019, 0.0009, 0.0010, 0.0020, 0.0017, 0.0015, 0.0003,
         0.0017, 0.0018, 0.0029, 0.0031, 0.0007, 0.0023, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0127],
        [0.0365],
        [0.0090],
        [0.0141],
        [0.0108],
        [0.0547],
        [0.0073],
        [0.0020],
        [0.0148],
        [0.0047],
        [0.0236],
        [0.0037],
        [0.0054],
        [0.0069],
        [0.0135],
        [0.0067]], device='cuda:0')/tensor([[0.0127, 0.0365, 0.0090, 0.0141, 0.0108, 0.0547, 0.0073, 0.0020, 0.0148,
         0.0047, 0.0236, 0.0037, 0.0054, 0.0069, 0.0135, 0.0067]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0028, 0.0127],
        [0.0028, 0.0365],
        [0.0019, 0.0090],
        [0.0009, 0.0141],
        [0.0010, 0.0108],
        [0.0020, 0.0547],
        [0.0017, 0.0073],
        [0.0015, 0.0020],
        [0.0003, 0.0148],
        [0.0017, 0.0047],
        [0.0018, 0.0236],
        [0.0029, 0.0037],
        [0.0031, 0.0054],
        [0.0007, 0.0069],
        [0.0023, 0.0135],
        [0.0007, 0.0067]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0017],
        [0.0011],
        [0.0012],
        [0.0038],
        [0.0014],
        [0.0007],
        [0.0017],
        [0.0017],
        [0.0031],
        [0.0005],
        [0.0044],
        [0.0018],
        [0.0076],
        [0.0007],
        [0.0025]], device='cuda:0')/tensor([[0.0007, 0.0017, 0.0011, 0.0012, 0.0038, 0.0014, 0.0007, 0.0017, 0.0017,
         0.0031, 0.0005, 0.0044, 0.0018, 0.0076, 0.0007, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0219],
        [0.0039],
        [0.0047],
        [0.0112],
        [0.0022],
        [0.0421],
        [0.0118],
        [0.0057],
        [0.0565],
        [0.0289],
        [0.0028],
        [0.0156],
        [0.0392],
        [0.0070],
        [0.0732],
        [0.0147]], device='cuda:0')/tensor([[0.0219, 0.0039, 0.0047, 0.0112, 0.0022, 0.0421, 0.0118, 0.0057, 0.0565,
         0.0289, 0.0028, 0.0156, 0.0392, 0.0070, 0.0732, 0.0147]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0219],
        [0.0017, 0.0039],
        [0.0011, 0.0047],
        [0.0012, 0.0112],
        [0.0038, 0.0022],
        [0.0014, 0.0421],
        [0.0007, 0.0118],
        [0.0017, 0.0057],
        [0.0017, 0.0565],
        [0.0031, 0.0289],
        [0.0005, 0.0028],
        [0.0044, 0.0156],
        [0.0018, 0.0392],
        [0.0076, 0.0070],
        [0.0007, 0.0732],
        [0.0025, 0.0147]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0007],
        [0.0021],
        [0.0007],
        [0.0011],
        [0.0010],
        [0.0024],
        [0.0028],
        [0.0012],
        [0.0010],
        [0.0021],
        [0.0004],
        [0.0018],
        [0.0006],
        [0.0009],
        [0.0047]], device='cuda:0')/tensor([[0.0010, 0.0007, 0.0021, 0.0007, 0.0011, 0.0010, 0.0024, 0.0028, 0.0012,
         0.0010, 0.0021, 0.0004, 0.0018, 0.0006, 0.0009, 0.0047]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0054],
        [0.0118],
        [0.0061],
        [0.0396],
        [0.0490],
        [0.0101],
        [0.0010],
        [0.0049],
        [0.0036],
        [0.0120],
        [0.0078],
        [0.0073],
        [0.0096],
        [0.0119],
        [0.0035],
        [0.0948]], device='cuda:0')/tensor([[0.0054, 0.0118, 0.0061, 0.0396, 0.0490, 0.0101, 0.0010, 0.0049, 0.0036,
         0.0120, 0.0078, 0.0073, 0.0096, 0.0119, 0.0035, 0.0948]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0054],
        [0.0007, 0.0118],
        [0.0021, 0.0061],
        [0.0007, 0.0396],
        [0.0011, 0.0490],
        [0.0010, 0.0101],
        [0.0024, 0.0010],
        [0.0028, 0.0049],
        [0.0012, 0.0036],
        [0.0010, 0.0120],
        [0.0021, 0.0078],
        [0.0004, 0.0073],
        [0.0018, 0.0096],
        [0.0006, 0.0119],
        [0.0009, 0.0035],
        [0.0047, 0.0948]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [2662] -> tensor([[0.0004],
        [0.0033],
        [0.0018],
        [0.0006],
        [0.0015],
        [0.0022],
        [0.0008],
        [0.0020],
        [0.0020],
        [0.0010],
        [0.0023],
        [0.0011],
        [0.0015],
        [0.0006],
        [0.0023],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0033, 0.0018, 0.0006, 0.0015, 0.0022, 0.0008, 0.0020, 0.0020,
         0.0010, 0.0023, 0.0011, 0.0015, 0.0006, 0.0023, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0070],
        [0.0313],
        [0.0223],
        [0.0370],
        [0.0056],
        [0.0138],
        [0.0252],
        [0.0046],
        [0.0404],
        [0.0093],
        [0.0358],
        [0.0155],
        [0.0368],
        [0.0756],
        [0.0066]], device='cuda:0')/tensor([[0.0007, 0.0070, 0.0313, 0.0223, 0.0370, 0.0056, 0.0138, 0.0252, 0.0046,
         0.0404, 0.0093, 0.0358, 0.0155, 0.0368, 0.0756, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0007],
        [0.0033, 0.0070],
        [0.0018, 0.0313],
        [0.0006, 0.0223],
        [0.0015, 0.0370],
        [0.0022, 0.0056],
        [0.0008, 0.0138],
        [0.0020, 0.0252],
        [0.0020, 0.0046],
        [0.0010, 0.0404],
        [0.0023, 0.0093],
        [0.0011, 0.0358],
        [0.0015, 0.0155],
        [0.0006, 0.0368],
        [0.0023, 0.0756],
        [0.0006, 0.0066]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0040],
        [0.0018],
        [0.0022],
        [0.0023],
        [0.0015],
        [0.0011],
        [0.0010],
        [0.0021],
        [0.0010],
        [0.0009],
        [0.0035],
        [0.0014],
        [0.0003],
        [0.0029],
        [0.0003]], device='cuda:0')/tensor([[0.0019, 0.0040, 0.0018, 0.0022, 0.0023, 0.0015, 0.0011, 0.0010, 0.0021,
         0.0010, 0.0009, 0.0035, 0.0014, 0.0003, 0.0029, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0100],
        [0.0474],
        [0.0430],
        [0.0012],
        [0.0257],
        [0.0695],
        [0.0549],
        [0.0007],
        [0.0200],
        [0.0195],
        [0.0089],
        [0.0197],
        [0.0167],
        [0.0030],
        [0.0047],
        [0.0061]], device='cuda:0')/tensor([[0.0100, 0.0474, 0.0430, 0.0012, 0.0257, 0.0695, 0.0549, 0.0007, 0.0200,
         0.0195, 0.0089, 0.0197, 0.0167, 0.0030, 0.0047, 0.0061]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0019, 0.0100],
        [0.0040, 0.0474],
        [0.0018, 0.0430],
        [0.0022, 0.0012],
        [0.0023, 0.0257],
        [0.0015, 0.0695],
        [0.0011, 0.0549],
        [0.0010, 0.0007],
        [0.0021, 0.0200],
        [0.0010, 0.0195],
        [0.0009, 0.0089],
        [0.0035, 0.0197],
        [0.0014, 0.0167],
        [0.0003, 0.0030],
        [0.0029, 0.0047],
        [0.0003, 0.0061]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0023],
        [0.0009],
        [0.0023],
        [0.0028],
        [0.0007],
        [0.0012],
        [0.0006],
        [0.0018],
        [0.0006],
        [0.0027],
        [0.0005],
        [0.0025],
        [0.0048],
        [0.0010],
        [0.0003]], device='cuda:0')/tensor([[0.0011, 0.0023, 0.0009, 0.0023, 0.0028, 0.0007, 0.0012, 0.0006, 0.0018,
         0.0006, 0.0027, 0.0005, 0.0025, 0.0048, 0.0010, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0023],
        [0.0456],
        [0.0151],
        [0.1211],
        [0.0092],
        [0.0191],
        [0.0450],
        [0.0127],
        [0.0119],
        [0.0340],
        [0.0047],
        [0.0039],
        [0.0520],
        [0.0062],
        [0.0453],
        [0.0071]], device='cuda:0')/tensor([[0.0023, 0.0456, 0.0151, 0.1211, 0.0092, 0.0191, 0.0450, 0.0127, 0.0119,
         0.0340, 0.0047, 0.0039, 0.0520, 0.0062, 0.0453, 0.0071]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0023],
        [0.0023, 0.0456],
        [0.0009, 0.0151],
        [0.0023, 0.1211],
        [0.0028, 0.0092],
        [0.0007, 0.0191],
        [0.0012, 0.0450],
        [0.0006, 0.0127],
        [0.0018, 0.0119],
        [0.0006, 0.0340],
        [0.0027, 0.0047],
        [0.0005, 0.0039],
        [0.0025, 0.0520],
        [0.0048, 0.0062],
        [0.0010, 0.0453],
        [0.0003, 0.0071]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0012],
        [0.0040],
        [0.0061],
        [0.0004],
        [0.0022],
        [0.0024],
        [0.0007],
        [0.0016]], device='cuda:0')/tensor([[0.0012, 0.0040, 0.0061, 0.0004, 0.0022, 0.0024, 0.0007, 0.0016]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0035],
        [0.0069],
        [0.0037],
        [0.0185],
        [0.0525],
        [0.1662],
        [0.0023],
        [0.0070]], device='cuda:0')/tensor([[0.0035, 0.0069, 0.0037, 0.0185, 0.0525, 0.1662, 0.0023, 0.0070]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0012, 0.0035],
        [0.0040, 0.0069],
        [0.0061, 0.0037],
        [0.0004, 0.0185],
        [0.0022, 0.0525],
        [0.0024, 0.1662],
        [0.0007, 0.0023],
        [0.0016, 0.0070]], device='cuda:0')
acc:  0.58
Time taken to execute the de SA task with prompt type rare_synonyms, variation 4 and batchsize 16: 0:03:14.009228
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA rare_synonyms 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 350.20it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.1998e-03],
        [1.0297e-03],
        [1.0077e-03],
        [1.9819e-04],
        [1.0730e-03],
        [4.0651e-07],
        [1.9091e-03],
        [2.5598e-03],
        [1.7731e-03],
        [2.6456e-03],
        [6.8314e-04],
        [1.8504e-03],
        [1.1538e-03],
        [4.0230e-03],
        [1.2884e-03],
        [1.9595e-03]], device='cuda:0')/tensor([[3.1998e-03, 1.0297e-03, 1.0077e-03, 1.9819e-04, 1.0730e-03, 4.0651e-07,
         1.9091e-03, 2.5598e-03, 1.7731e-03, 2.6456e-03, 6.8314e-04, 1.8504e-03,
         1.1538e-03, 4.0230e-03, 1.2884e-03, 1.9595e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.0583e-03],
        [7.2923e-04],
        [6.0221e-03],
        [4.8409e-03],
        [9.7752e-03],
        [2.0810e-05],
        [3.2159e-03],
        [1.5043e-02],
        [1.6823e-02],
        [2.2677e-02],
        [1.4857e-02],
        [2.8003e-03],
        [3.3530e-02],
        [1.8339e-02],
        [5.5814e-04],
        [4.0019e-02]], device='cuda:0')/tensor([[4.0583e-03, 7.2923e-04, 6.0221e-03, 4.8409e-03, 9.7752e-03, 2.0810e-05,
         3.2159e-03, 1.5043e-02, 1.6823e-02, 2.2677e-02, 1.4857e-02, 2.8003e-03,
         3.3530e-02, 1.8339e-02, 5.5814e-04, 4.0019e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.1998e-03, 4.0583e-03],
        [1.0297e-03, 7.2923e-04],
        [1.0077e-03, 6.0221e-03],
        [1.9819e-04, 4.8409e-03],
        [1.0730e-03, 9.7752e-03],
        [4.0651e-07, 2.0810e-05],
        [1.9091e-03, 3.2159e-03],
        [2.5598e-03, 1.5043e-02],
        [1.7731e-03, 1.6823e-02],
        [2.6456e-03, 2.2677e-02],
        [6.8314e-04, 1.4857e-02],
        [1.8504e-03, 2.8003e-03],
        [1.1538e-03, 3.3530e-02],
        [4.0230e-03, 1.8339e-02],
        [1.2884e-03, 5.5814e-04],
        [1.9595e-03, 4.0019e-02]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0008],
        [0.0007],
        [0.0014],
        [0.0017],
        [0.0012],
        [0.0020],
        [0.0007],
        [0.0004],
        [0.0007],
        [0.0020],
        [0.0015],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0010]], device='cuda:0')/tensor([[0.0007, 0.0008, 0.0007, 0.0014, 0.0017, 0.0012, 0.0020, 0.0007, 0.0004,
         0.0007, 0.0020, 0.0015, 0.0004, 0.0006, 0.0007, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0023],
        [0.0687],
        [0.0072],
        [0.0363],
        [0.0211],
        [0.0133],
        [0.0036],
        [0.0198],
        [0.0102],
        [0.0227],
        [0.0425],
        [0.0021],
        [0.0075],
        [0.0007],
        [0.0146],
        [0.0037]], device='cuda:0')/tensor([[0.0023, 0.0687, 0.0072, 0.0363, 0.0211, 0.0133, 0.0036, 0.0198, 0.0102,
         0.0227, 0.0425, 0.0021, 0.0075, 0.0007, 0.0146, 0.0037]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0023],
        [0.0008, 0.0687],
        [0.0007, 0.0072],
        [0.0014, 0.0363],
        [0.0017, 0.0211],
        [0.0012, 0.0133],
        [0.0020, 0.0036],
        [0.0007, 0.0198],
        [0.0004, 0.0102],
        [0.0007, 0.0227],
        [0.0020, 0.0425],
        [0.0015, 0.0021],
        [0.0004, 0.0075],
        [0.0006, 0.0007],
        [0.0007, 0.0146],
        [0.0010, 0.0037]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0012],
        [0.0024],
        [0.0012],
        [0.0031],
        [0.0025],
        [0.0010],
        [0.0023],
        [0.0002],
        [0.0009],
        [0.0023],
        [0.0014],
        [0.0027],
        [0.0012],
        [0.0086],
        [0.0009]], device='cuda:0')/tensor([[0.0016, 0.0012, 0.0024, 0.0012, 0.0031, 0.0025, 0.0010, 0.0023, 0.0002,
         0.0009, 0.0023, 0.0014, 0.0027, 0.0012, 0.0086, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0371],
        [0.0016],
        [0.0347],
        [0.0668],
        [0.0085],
        [0.0073],
        [0.0016],
        [0.0021],
        [0.0407],
        [0.0706],
        [0.0010],
        [0.0315],
        [0.1221],
        [0.0908],
        [0.0020]], device='cuda:0')/tensor([[0.0003, 0.0371, 0.0016, 0.0347, 0.0668, 0.0085, 0.0073, 0.0016, 0.0021,
         0.0407, 0.0706, 0.0010, 0.0315, 0.1221, 0.0908, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0016, 0.0003],
        [0.0012, 0.0371],
        [0.0024, 0.0016],
        [0.0012, 0.0347],
        [0.0031, 0.0668],
        [0.0025, 0.0085],
        [0.0010, 0.0073],
        [0.0023, 0.0016],
        [0.0002, 0.0021],
        [0.0009, 0.0407],
        [0.0023, 0.0706],
        [0.0014, 0.0010],
        [0.0027, 0.0315],
        [0.0012, 0.1221],
        [0.0086, 0.0908],
        [0.0009, 0.0020]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0006],
        [0.0020],
        [0.0036],
        [0.0018],
        [0.0048],
        [0.0008],
        [0.0011],
        [0.0022],
        [0.0012],
        [0.0006],
        [0.0004],
        [0.0008],
        [0.0054],
        [0.0001],
        [0.0014]], device='cuda:0')/tensor([[0.0011, 0.0006, 0.0020, 0.0036, 0.0018, 0.0048, 0.0008, 0.0011, 0.0022,
         0.0012, 0.0006, 0.0004, 0.0008, 0.0054, 0.0001, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0013],
        [0.0150],
        [0.0186],
        [0.0071],
        [0.0116],
        [0.0105],
        [0.0086],
        [0.0009],
        [0.0527],
        [0.0146],
        [0.0061],
        [0.0149],
        [0.0046],
        [0.0044],
        [0.0131],
        [0.0061]], device='cuda:0')/tensor([[0.0013, 0.0150, 0.0186, 0.0071, 0.0116, 0.0105, 0.0086, 0.0009, 0.0527,
         0.0146, 0.0061, 0.0149, 0.0046, 0.0044, 0.0131, 0.0061]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0013],
        [0.0006, 0.0150],
        [0.0020, 0.0186],
        [0.0036, 0.0071],
        [0.0018, 0.0116],
        [0.0048, 0.0105],
        [0.0008, 0.0086],
        [0.0011, 0.0009],
        [0.0022, 0.0527],
        [0.0012, 0.0146],
        [0.0006, 0.0061],
        [0.0004, 0.0149],
        [0.0008, 0.0046],
        [0.0054, 0.0044],
        [0.0001, 0.0131],
        [0.0014, 0.0061]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0018],
        [0.0003],
        [0.0036],
        [0.0023],
        [0.0007],
        [0.0007],
        [0.0012],
        [0.0022],
        [0.0012],
        [0.0020],
        [0.0010],
        [0.0011],
        [0.0022],
        [0.0002],
        [0.0018]], device='cuda:0')/tensor([[0.0015, 0.0018, 0.0003, 0.0036, 0.0023, 0.0007, 0.0007, 0.0012, 0.0022,
         0.0012, 0.0020, 0.0010, 0.0011, 0.0022, 0.0002, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0055],
        [0.0025],
        [0.0054],
        [0.0363],
        [0.0244],
        [0.0078],
        [0.0130],
        [0.0384],
        [0.0141],
        [0.0476],
        [0.0134],
        [0.0155],
        [0.0256],
        [0.0558],
        [0.0039],
        [0.0540]], device='cuda:0')/tensor([[0.0055, 0.0025, 0.0054, 0.0363, 0.0244, 0.0078, 0.0130, 0.0384, 0.0141,
         0.0476, 0.0134, 0.0155, 0.0256, 0.0558, 0.0039, 0.0540]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0015, 0.0055],
        [0.0018, 0.0025],
        [0.0003, 0.0054],
        [0.0036, 0.0363],
        [0.0023, 0.0244],
        [0.0007, 0.0078],
        [0.0007, 0.0130],
        [0.0012, 0.0384],
        [0.0022, 0.0141],
        [0.0012, 0.0476],
        [0.0020, 0.0134],
        [0.0010, 0.0155],
        [0.0011, 0.0256],
        [0.0022, 0.0558],
        [0.0002, 0.0039],
        [0.0018, 0.0540]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0024],
        [0.0005],
        [0.0005],
        [0.0021],
        [0.0032],
        [0.0003],
        [0.0007],
        [0.0037],
        [0.0027],
        [0.0011],
        [0.0003],
        [0.0017],
        [0.0006],
        [0.0011]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0024, 0.0005, 0.0005, 0.0021, 0.0032, 0.0003, 0.0007,
         0.0037, 0.0027, 0.0011, 0.0003, 0.0017, 0.0006, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0031],
        [0.0290],
        [0.0266],
        [0.0115],
        [0.0559],
        [0.0681],
        [0.0147],
        [0.0062],
        [0.0043],
        [0.0248],
        [0.0023],
        [0.0338],
        [0.0011],
        [0.0155],
        [0.0091],
        [0.0204]], device='cuda:0')/tensor([[0.0031, 0.0290, 0.0266, 0.0115, 0.0559, 0.0681, 0.0147, 0.0062, 0.0043,
         0.0248, 0.0023, 0.0338, 0.0011, 0.0155, 0.0091, 0.0204]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0031],
        [0.0004, 0.0290],
        [0.0024, 0.0266],
        [0.0005, 0.0115],
        [0.0005, 0.0559],
        [0.0021, 0.0681],
        [0.0032, 0.0147],
        [0.0003, 0.0062],
        [0.0007, 0.0043],
        [0.0037, 0.0248],
        [0.0027, 0.0023],
        [0.0011, 0.0338],
        [0.0003, 0.0011],
        [0.0017, 0.0155],
        [0.0006, 0.0091],
        [0.0011, 0.0204]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0042],
        [0.0036],
        [0.0006],
        [0.0009],
        [0.0011],
        [0.0016],
        [0.0018],
        [0.0009],
        [0.0018],
        [0.0010],
        [0.0020],
        [0.0014],
        [0.0014],
        [0.0002],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0042, 0.0036, 0.0006, 0.0009, 0.0011, 0.0016, 0.0018, 0.0009, 0.0018,
         0.0010, 0.0020, 0.0014, 0.0014, 0.0002, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0169],
        [0.0479],
        [0.0004],
        [0.0273],
        [0.0004],
        [0.0030],
        [0.0275],
        [0.0783],
        [0.0027],
        [0.0032],
        [0.0066],
        [0.0638],
        [0.0009],
        [0.0032],
        [0.0169],
        [0.0012]], device='cuda:0')/tensor([[0.0169, 0.0479, 0.0004, 0.0273, 0.0004, 0.0030, 0.0275, 0.0783, 0.0027,
         0.0032, 0.0066, 0.0638, 0.0009, 0.0032, 0.0169, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0042, 0.0169],
        [0.0036, 0.0479],
        [0.0006, 0.0004],
        [0.0009, 0.0273],
        [0.0011, 0.0004],
        [0.0016, 0.0030],
        [0.0018, 0.0275],
        [0.0009, 0.0783],
        [0.0018, 0.0027],
        [0.0010, 0.0032],
        [0.0020, 0.0066],
        [0.0014, 0.0638],
        [0.0014, 0.0009],
        [0.0002, 0.0032],
        [0.0003, 0.0169],
        [0.0006, 0.0012]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0006],
        [0.0058],
        [0.0006],
        [0.0013],
        [0.0021],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0017],
        [0.0007],
        [0.0011],
        [0.0025],
        [0.0001],
        [0.0014],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0006, 0.0058, 0.0006, 0.0013, 0.0021, 0.0005, 0.0005, 0.0006,
         0.0017, 0.0007, 0.0011, 0.0025, 0.0001, 0.0014, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2292e-02],
        [3.3544e-04],
        [3.2852e-03],
        [6.2772e-03],
        [4.1205e-03],
        [1.7580e-03],
        [6.1569e-05],
        [8.4295e-03],
        [9.5499e-03],
        [1.8225e-02],
        [8.0204e-04],
        [4.3665e-03],
        [1.7361e-04],
        [2.9935e-03],
        [1.5881e-02],
        [4.4188e-04]], device='cuda:0')/tensor([[1.2292e-02, 3.3544e-04, 3.2852e-03, 6.2772e-03, 4.1205e-03, 1.7580e-03,
         6.1569e-05, 8.4295e-03, 9.5499e-03, 1.8225e-02, 8.0204e-04, 4.3665e-03,
         1.7361e-04, 2.9935e-03, 1.5881e-02, 4.4188e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.0392e-04, 1.2292e-02],
        [6.3334e-04, 3.3544e-04],
        [5.7797e-03, 3.2852e-03],
        [6.1943e-04, 6.2772e-03],
        [1.2599e-03, 4.1205e-03],
        [2.1326e-03, 1.7580e-03],
        [5.2894e-04, 6.1569e-05],
        [4.8332e-04, 8.4295e-03],
        [5.7482e-04, 9.5499e-03],
        [1.6846e-03, 1.8225e-02],
        [7.2203e-04, 8.0204e-04],
        [1.1442e-03, 4.3665e-03],
        [2.4885e-03, 1.7361e-04],
        [1.2524e-04, 2.9935e-03],
        [1.4281e-03, 1.5881e-02],
        [4.0036e-04, 4.4188e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0018],
        [0.0009],
        [0.0008],
        [0.0023],
        [0.0013],
        [0.0008],
        [0.0012],
        [0.0013],
        [0.0012],
        [0.0016],
        [0.0011],
        [0.0014],
        [0.0002],
        [0.0008],
        [0.0005]], device='cuda:0')/tensor([[0.0010, 0.0018, 0.0009, 0.0008, 0.0023, 0.0013, 0.0008, 0.0012, 0.0013,
         0.0012, 0.0016, 0.0011, 0.0014, 0.0002, 0.0008, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0142],
        [0.0119],
        [0.0045],
        [0.0084],
        [0.0304],
        [0.0206],
        [0.0054],
        [0.0070],
        [0.0171],
        [0.0097],
        [0.0014],
        [0.0073],
        [0.0257],
        [0.0050],
        [0.0145],
        [0.0286]], device='cuda:0')/tensor([[0.0142, 0.0119, 0.0045, 0.0084, 0.0304, 0.0206, 0.0054, 0.0070, 0.0171,
         0.0097, 0.0014, 0.0073, 0.0257, 0.0050, 0.0145, 0.0286]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0142],
        [0.0018, 0.0119],
        [0.0009, 0.0045],
        [0.0008, 0.0084],
        [0.0023, 0.0304],
        [0.0013, 0.0206],
        [0.0008, 0.0054],
        [0.0012, 0.0070],
        [0.0013, 0.0171],
        [0.0012, 0.0097],
        [0.0016, 0.0014],
        [0.0011, 0.0073],
        [0.0014, 0.0257],
        [0.0002, 0.0050],
        [0.0008, 0.0145],
        [0.0005, 0.0286]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0006],
        [0.0008],
        [0.0034],
        [0.0024],
        [0.0005],
        [0.0016],
        [0.0002],
        [0.0009],
        [0.0005],
        [0.0008],
        [0.0009],
        [0.0010],
        [0.0009],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0015, 0.0006, 0.0008, 0.0034, 0.0024, 0.0005, 0.0016, 0.0002, 0.0009,
         0.0005, 0.0008, 0.0009, 0.0010, 0.0009, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4891e-02],
        [2.4120e-02],
        [1.6394e-03],
        [5.5202e-03],
        [3.1569e-02],
        [4.6201e-03],
        [3.1860e-03],
        [5.9835e-05],
        [1.4353e-03],
        [7.6065e-03],
        [1.6306e-03],
        [4.5355e-02],
        [2.7123e-04],
        [2.9422e-03],
        [6.0787e-03],
        [5.2686e-05]], device='cuda:0')/tensor([[2.4891e-02, 2.4120e-02, 1.6394e-03, 5.5202e-03, 3.1569e-02, 4.6201e-03,
         3.1860e-03, 5.9835e-05, 1.4353e-03, 7.6065e-03, 1.6306e-03, 4.5355e-02,
         2.7123e-04, 2.9422e-03, 6.0787e-03, 5.2686e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4664e-03, 2.4891e-02],
        [5.6936e-04, 2.4120e-02],
        [8.2326e-04, 1.6394e-03],
        [3.3879e-03, 5.5202e-03],
        [2.4328e-03, 3.1569e-02],
        [4.6001e-04, 4.6201e-03],
        [1.5544e-03, 3.1860e-03],
        [2.3480e-04, 5.9835e-05],
        [9.3433e-04, 1.4353e-03],
        [5.2406e-04, 7.6065e-03],
        [8.4316e-04, 1.6306e-03],
        [8.7122e-04, 4.5355e-02],
        [9.9038e-04, 2.7123e-04],
        [9.4406e-04, 2.9422e-03],
        [2.8953e-04, 6.0787e-03],
        [2.9975e-04, 5.2686e-05]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0028],
        [0.0002],
        [0.0014],
        [0.0022],
        [0.0016],
        [0.0030],
        [0.0010],
        [0.0008],
        [0.0008],
        [0.0006],
        [0.0024],
        [0.0012],
        [0.0012],
        [0.0012],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0028, 0.0002, 0.0014, 0.0022, 0.0016, 0.0030, 0.0010, 0.0008,
         0.0008, 0.0006, 0.0024, 0.0012, 0.0012, 0.0012, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0236],
        [0.0090],
        [0.0120],
        [0.0418],
        [0.0284],
        [0.0064],
        [0.0030],
        [0.0389],
        [0.0006],
        [0.0007],
        [0.0010],
        [0.0301],
        [0.0026],
        [0.0275],
        [0.0111],
        [0.0004]], device='cuda:0')/tensor([[0.0236, 0.0090, 0.0120, 0.0418, 0.0284, 0.0064, 0.0030, 0.0389, 0.0006,
         0.0007, 0.0010, 0.0301, 0.0026, 0.0275, 0.0111, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0236],
        [0.0028, 0.0090],
        [0.0002, 0.0120],
        [0.0014, 0.0418],
        [0.0022, 0.0284],
        [0.0016, 0.0064],
        [0.0030, 0.0030],
        [0.0010, 0.0389],
        [0.0008, 0.0006],
        [0.0008, 0.0007],
        [0.0006, 0.0010],
        [0.0024, 0.0301],
        [0.0012, 0.0026],
        [0.0012, 0.0275],
        [0.0012, 0.0111],
        [0.0007, 0.0004]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0051],
        [0.0007],
        [0.0009],
        [0.0021],
        [0.0027],
        [0.0009],
        [0.0012],
        [0.0003],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0008],
        [0.0004],
        [0.0009],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0051, 0.0007, 0.0009, 0.0021, 0.0027, 0.0009, 0.0012, 0.0003, 0.0006,
         0.0006, 0.0007, 0.0008, 0.0004, 0.0009, 0.0006, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0086],
        [0.0069],
        [0.0129],
        [0.0038],
        [0.0034],
        [0.0329],
        [0.0357],
        [0.0131],
        [0.0096],
        [0.0168],
        [0.0064],
        [0.0285],
        [0.0017],
        [0.0011],
        [0.0056],
        [0.0014]], device='cuda:0')/tensor([[0.0086, 0.0069, 0.0129, 0.0038, 0.0034, 0.0329, 0.0357, 0.0131, 0.0096,
         0.0168, 0.0064, 0.0285, 0.0017, 0.0011, 0.0056, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0051, 0.0086],
        [0.0007, 0.0069],
        [0.0009, 0.0129],
        [0.0021, 0.0038],
        [0.0027, 0.0034],
        [0.0009, 0.0329],
        [0.0012, 0.0357],
        [0.0003, 0.0131],
        [0.0006, 0.0096],
        [0.0006, 0.0168],
        [0.0007, 0.0064],
        [0.0008, 0.0285],
        [0.0004, 0.0017],
        [0.0009, 0.0011],
        [0.0006, 0.0056],
        [0.0013, 0.0014]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0009],
        [0.0008],
        [0.0003],
        [0.0013],
        [0.0002],
        [0.0026],
        [0.0015],
        [0.0036]], device='cuda:0')/tensor([[0.0009, 0.0008, 0.0003, 0.0013, 0.0002, 0.0026, 0.0015, 0.0036]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0014],
        [0.0105],
        [0.0002],
        [0.0833],
        [0.0413],
        [0.0076],
        [0.0190],
        [0.0385]], device='cuda:0')/tensor([[0.0014, 0.0105, 0.0002, 0.0833, 0.0413, 0.0076, 0.0190, 0.0385]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0009, 0.0014],
        [0.0008, 0.0105],
        [0.0003, 0.0002],
        [0.0013, 0.0833],
        [0.0002, 0.0413],
        [0.0026, 0.0076],
        [0.0015, 0.0190],
        [0.0036, 0.0385]], device='cuda:0')
acc:  0.625
Time taken to execute the de SA task with prompt type rare_synonyms, variation 5 and batchsize 16: 0:03:15.989192
path ['42', 'de', 'flan', 'SA', 'rare_synonyms', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base SA identical_modal 0 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 344.09it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0004],
        [0.0007],
        [0.0018],
        [0.0012],
        [0.0012],
        [0.0013],
        [0.0002],
        [0.0006],
        [0.0040],
        [0.0007],
        [0.0004],
        [0.0012],
        [0.0002],
        [0.0004],
        [0.0018]], device='cuda:0')/tensor([[0.0001, 0.0004, 0.0007, 0.0018, 0.0012, 0.0012, 0.0013, 0.0002, 0.0006,
         0.0040, 0.0007, 0.0004, 0.0012, 0.0002, 0.0004, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0074],
        [0.0262],
        [0.0124],
        [0.0081],
        [0.0371],
        [0.0014],
        [0.0174],
        [0.0170],
        [0.0176],
        [0.0508],
        [0.0095],
        [0.0024],
        [0.0284],
        [0.0026],
        [0.0011],
        [0.0063]], device='cuda:0')/tensor([[0.0074, 0.0262, 0.0124, 0.0081, 0.0371, 0.0014, 0.0174, 0.0170, 0.0176,
         0.0508, 0.0095, 0.0024, 0.0284, 0.0026, 0.0011, 0.0063]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0074],
        [0.0004, 0.0262],
        [0.0007, 0.0124],
        [0.0018, 0.0081],
        [0.0012, 0.0371],
        [0.0012, 0.0014],
        [0.0013, 0.0174],
        [0.0002, 0.0170],
        [0.0006, 0.0176],
        [0.0040, 0.0508],
        [0.0007, 0.0095],
        [0.0004, 0.0024],
        [0.0012, 0.0284],
        [0.0002, 0.0026],
        [0.0004, 0.0011],
        [0.0018, 0.0063]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0001],
        [0.0005],
        [0.0018],
        [0.0002],
        [0.0005],
        [0.0012],
        [0.0008],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0009]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0001, 0.0005, 0.0018, 0.0002, 0.0005, 0.0012, 0.0008,
         0.0002, 0.0003, 0.0004, 0.0003, 0.0002, 0.0002, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0054],
        [0.0002],
        [0.0304],
        [0.0097],
        [0.0006],
        [0.0078],
        [0.0152],
        [0.0021],
        [0.0013],
        [0.0023],
        [0.0082],
        [0.0057],
        [0.0003],
        [0.0270],
        [0.0154]], device='cuda:0')/tensor([[0.0028, 0.0054, 0.0002, 0.0304, 0.0097, 0.0006, 0.0078, 0.0152, 0.0021,
         0.0013, 0.0023, 0.0082, 0.0057, 0.0003, 0.0270, 0.0154]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0028],
        [0.0002, 0.0054],
        [0.0001, 0.0002],
        [0.0005, 0.0304],
        [0.0018, 0.0097],
        [0.0002, 0.0006],
        [0.0005, 0.0078],
        [0.0012, 0.0152],
        [0.0008, 0.0021],
        [0.0002, 0.0013],
        [0.0003, 0.0023],
        [0.0004, 0.0082],
        [0.0003, 0.0057],
        [0.0002, 0.0003],
        [0.0002, 0.0270],
        [0.0009, 0.0154]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.1905e-04],
        [4.3753e-04],
        [4.2662e-04],
        [3.2243e-04],
        [1.8308e-04],
        [9.1631e-04],
        [2.6871e-04],
        [1.8949e-03],
        [4.0858e-04],
        [7.4232e-04],
        [4.2781e-04],
        [2.9676e-04],
        [8.3088e-05],
        [2.4546e-03],
        [3.8788e-04],
        [5.2073e-04]], device='cuda:0')/tensor([[3.1905e-04, 4.3753e-04, 4.2662e-04, 3.2243e-04, 1.8308e-04, 9.1631e-04,
         2.6871e-04, 1.8949e-03, 4.0858e-04, 7.4232e-04, 4.2781e-04, 2.9676e-04,
         8.3088e-05, 2.4546e-03, 3.8788e-04, 5.2073e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0373],
        [0.0511],
        [0.0375],
        [0.0044],
        [0.0024],
        [0.0130],
        [0.0113],
        [0.0203],
        [0.0023],
        [0.0130],
        [0.0289],
        [0.0041],
        [0.0611],
        [0.0596],
        [0.0006],
        [0.0087]], device='cuda:0')/tensor([[0.0373, 0.0511, 0.0375, 0.0044, 0.0024, 0.0130, 0.0113, 0.0203, 0.0023,
         0.0130, 0.0289, 0.0041, 0.0611, 0.0596, 0.0006, 0.0087]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.1905e-04, 3.7328e-02],
        [4.3753e-04, 5.1106e-02],
        [4.2662e-04, 3.7532e-02],
        [3.2243e-04, 4.4313e-03],
        [1.8308e-04, 2.3587e-03],
        [9.1631e-04, 1.3002e-02],
        [2.6871e-04, 1.1342e-02],
        [1.8949e-03, 2.0339e-02],
        [4.0858e-04, 2.2903e-03],
        [7.4232e-04, 1.3013e-02],
        [4.2781e-04, 2.8939e-02],
        [2.9676e-04, 4.0660e-03],
        [8.3088e-05, 6.1139e-02],
        [2.4546e-03, 5.9606e-02],
        [3.8788e-04, 5.8692e-04],
        [5.2073e-04, 8.6791e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.5625e-04],
        [1.2280e-03],
        [1.1251e-03],
        [4.3927e-04],
        [8.5974e-04],
        [7.7848e-04],
        [3.8026e-04],
        [2.7975e-04],
        [6.3010e-04],
        [3.9642e-05],
        [6.1738e-04],
        [2.0134e-03],
        [3.5516e-04],
        [1.2280e-04],
        [1.0194e-03],
        [4.5244e-04]], device='cuda:0')/tensor([[3.5625e-04, 1.2280e-03, 1.1251e-03, 4.3927e-04, 8.5974e-04, 7.7848e-04,
         3.8026e-04, 2.7975e-04, 6.3010e-04, 3.9642e-05, 6.1738e-04, 2.0134e-03,
         3.5516e-04, 1.2280e-04, 1.0194e-03, 4.5244e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0017],
        [0.0817],
        [0.0886],
        [0.0161],
        [0.1097],
        [0.0641],
        [0.0103],
        [0.0199],
        [0.0220],
        [0.0008],
        [0.0062],
        [0.1673],
        [0.0025],
        [0.0182],
        [0.0040],
        [0.0005]], device='cuda:0')/tensor([[0.0017, 0.0817, 0.0886, 0.0161, 0.1097, 0.0641, 0.0103, 0.0199, 0.0220,
         0.0008, 0.0062, 0.1673, 0.0025, 0.0182, 0.0040, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.5625e-04, 1.6835e-03],
        [1.2280e-03, 8.1745e-02],
        [1.1251e-03, 8.8562e-02],
        [4.3927e-04, 1.6132e-02],
        [8.5974e-04, 1.0967e-01],
        [7.7848e-04, 6.4110e-02],
        [3.8026e-04, 1.0261e-02],
        [2.7975e-04, 1.9907e-02],
        [6.3010e-04, 2.2010e-02],
        [3.9642e-05, 8.4532e-04],
        [6.1738e-04, 6.1962e-03],
        [2.0134e-03, 1.6729e-01],
        [3.5516e-04, 2.5458e-03],
        [1.2280e-04, 1.8232e-02],
        [1.0194e-03, 4.0187e-03],
        [4.5244e-04, 5.3285e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0008],
        [0.0004],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0006],
        [0.0086],
        [0.0014],
        [0.0009],
        [0.0005]], device='cuda:0')/tensor([[0.0011, 0.0005, 0.0005, 0.0002, 0.0008, 0.0008, 0.0004, 0.0005, 0.0006,
         0.0005, 0.0006, 0.0006, 0.0086, 0.0014, 0.0009, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0068],
        [0.0106],
        [0.0016],
        [0.0151],
        [0.0030],
        [0.0032],
        [0.0092],
        [0.0019],
        [0.0224],
        [0.0172],
        [0.0032],
        [0.0432],
        [0.0405],
        [0.0289],
        [0.0035],
        [0.0094]], device='cuda:0')/tensor([[0.0068, 0.0106, 0.0016, 0.0151, 0.0030, 0.0032, 0.0092, 0.0019, 0.0224,
         0.0172, 0.0032, 0.0432, 0.0405, 0.0289, 0.0035, 0.0094]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0068],
        [0.0005, 0.0106],
        [0.0005, 0.0016],
        [0.0002, 0.0151],
        [0.0008, 0.0030],
        [0.0008, 0.0032],
        [0.0004, 0.0092],
        [0.0005, 0.0019],
        [0.0006, 0.0224],
        [0.0005, 0.0172],
        [0.0006, 0.0032],
        [0.0006, 0.0432],
        [0.0086, 0.0405],
        [0.0014, 0.0289],
        [0.0009, 0.0035],
        [0.0005, 0.0094]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0008],
        [0.0012],
        [0.0006],
        [0.0009],
        [0.0008],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0005],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0010],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0008, 0.0012, 0.0006, 0.0009, 0.0008, 0.0003, 0.0003, 0.0005,
         0.0008, 0.0005, 0.0002, 0.0005, 0.0004, 0.0010, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0117],
        [0.0018],
        [0.0795],
        [0.0011],
        [0.0008],
        [0.0211],
        [0.0006],
        [0.0207],
        [0.0295],
        [0.0088],
        [0.0004],
        [0.0012],
        [0.0003],
        [0.0652],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0117, 0.0018, 0.0795, 0.0011, 0.0008, 0.0211, 0.0006, 0.0207,
         0.0295, 0.0088, 0.0004, 0.0012, 0.0003, 0.0652, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0003],
        [0.0008, 0.0117],
        [0.0012, 0.0018],
        [0.0006, 0.0795],
        [0.0009, 0.0011],
        [0.0008, 0.0008],
        [0.0003, 0.0211],
        [0.0003, 0.0006],
        [0.0005, 0.0207],
        [0.0008, 0.0295],
        [0.0005, 0.0088],
        [0.0002, 0.0004],
        [0.0005, 0.0012],
        [0.0004, 0.0003],
        [0.0010, 0.0652],
        [0.0003, 0.0008]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0014],
        [0.0003],
        [0.0008],
        [0.0003],
        [0.0016],
        [0.0003],
        [0.0001],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0014, 0.0003, 0.0008, 0.0003, 0.0016, 0.0003, 0.0001,
         0.0005, 0.0002, 0.0003, 0.0007, 0.0007, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0158],
        [0.0154],
        [0.0787],
        [0.0008],
        [0.0056],
        [0.0004],
        [0.0418],
        [0.0164],
        [0.0078],
        [0.0041],
        [0.0071],
        [0.0068],
        [0.0056],
        [0.0125],
        [0.0029],
        [0.0194]], device='cuda:0')/tensor([[0.0158, 0.0154, 0.0787, 0.0008, 0.0056, 0.0004, 0.0418, 0.0164, 0.0078,
         0.0041, 0.0071, 0.0068, 0.0056, 0.0125, 0.0029, 0.0194]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0158],
        [0.0003, 0.0154],
        [0.0014, 0.0787],
        [0.0003, 0.0008],
        [0.0008, 0.0056],
        [0.0003, 0.0004],
        [0.0016, 0.0418],
        [0.0003, 0.0164],
        [0.0001, 0.0078],
        [0.0005, 0.0041],
        [0.0002, 0.0071],
        [0.0003, 0.0068],
        [0.0007, 0.0056],
        [0.0007, 0.0125],
        [0.0003, 0.0029],
        [0.0005, 0.0194]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.2962e-05],
        [4.2827e-04],
        [1.4842e-03],
        [3.6561e-04],
        [1.3030e-03],
        [2.9371e-04],
        [1.5191e-04],
        [3.7810e-04],
        [6.9874e-04],
        [1.5601e-04],
        [1.6043e-04],
        [1.4211e-04],
        [1.5082e-03],
        [5.7678e-04],
        [8.9007e-04],
        [5.2612e-04]], device='cuda:0')/tensor([[7.2962e-05, 4.2827e-04, 1.4842e-03, 3.6561e-04, 1.3030e-03, 2.9371e-04,
         1.5191e-04, 3.7810e-04, 6.9874e-04, 1.5601e-04, 1.6043e-04, 1.4211e-04,
         1.5082e-03, 5.7678e-04, 8.9007e-04, 5.2612e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0256],
        [0.0129],
        [0.0377],
        [0.0006],
        [0.0391],
        [0.0368],
        [0.0365],
        [0.0145],
        [0.0064],
        [0.0047],
        [0.0038],
        [0.0187],
        [0.0050],
        [0.0007],
        [0.0013],
        [0.0670]], device='cuda:0')/tensor([[0.0256, 0.0129, 0.0377, 0.0006, 0.0391, 0.0368, 0.0365, 0.0145, 0.0064,
         0.0047, 0.0038, 0.0187, 0.0050, 0.0007, 0.0013, 0.0670]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.2962e-05, 2.5612e-02],
        [4.2827e-04, 1.2939e-02],
        [1.4842e-03, 3.7718e-02],
        [3.6561e-04, 5.9997e-04],
        [1.3030e-03, 3.9110e-02],
        [2.9371e-04, 3.6762e-02],
        [1.5191e-04, 3.6451e-02],
        [3.7810e-04, 1.4469e-02],
        [6.9874e-04, 6.3887e-03],
        [1.5601e-04, 4.7053e-03],
        [1.6043e-04, 3.7994e-03],
        [1.4211e-04, 1.8677e-02],
        [1.5082e-03, 4.9841e-03],
        [5.7678e-04, 7.0634e-04],
        [8.9007e-04, 1.3039e-03],
        [5.2612e-04, 6.7050e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.4250e-04],
        [1.9749e-03],
        [3.9329e-04],
        [4.8226e-04],
        [1.2573e-04],
        [6.1193e-04],
        [7.0540e-04],
        [2.6425e-04],
        [3.8573e-04],
        [8.1138e-05],
        [1.4625e-03],
        [2.6776e-04],
        [5.7834e-04],
        [5.5125e-04],
        [1.1682e-04],
        [1.6446e-03]], device='cuda:0')/tensor([[8.4250e-04, 1.9749e-03, 3.9329e-04, 4.8226e-04, 1.2573e-04, 6.1193e-04,
         7.0540e-04, 2.6425e-04, 3.8573e-04, 8.1138e-05, 1.4625e-03, 2.6776e-04,
         5.7834e-04, 5.5125e-04, 1.1682e-04, 1.6446e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[2.1900e-02],
        [1.6244e-02],
        [1.8738e-02],
        [1.0104e-02],
        [5.7751e-03],
        [8.9767e-03],
        [3.5281e-02],
        [7.0076e-03],
        [9.2495e-04],
        [9.0413e-05],
        [2.8833e-02],
        [4.4336e-03],
        [8.5372e-04],
        [4.0939e-02],
        [7.9544e-02],
        [9.9239e-03]], device='cuda:0')/tensor([[2.1900e-02, 1.6244e-02, 1.8738e-02, 1.0104e-02, 5.7751e-03, 8.9767e-03,
         3.5281e-02, 7.0076e-03, 9.2495e-04, 9.0413e-05, 2.8833e-02, 4.4336e-03,
         8.5372e-04, 4.0939e-02, 7.9544e-02, 9.9239e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.4250e-04, 2.1900e-02],
        [1.9749e-03, 1.6244e-02],
        [3.9329e-04, 1.8738e-02],
        [4.8226e-04, 1.0104e-02],
        [1.2573e-04, 5.7751e-03],
        [6.1193e-04, 8.9767e-03],
        [7.0540e-04, 3.5281e-02],
        [2.6425e-04, 7.0076e-03],
        [3.8573e-04, 9.2495e-04],
        [8.1138e-05, 9.0413e-05],
        [1.4625e-03, 2.8833e-02],
        [2.6776e-04, 4.4336e-03],
        [5.7834e-04, 8.5372e-04],
        [5.5125e-04, 4.0939e-02],
        [1.1682e-04, 7.9544e-02],
        [1.6446e-03, 9.9239e-03]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0002],
        [0.0011],
        [0.0032],
        [0.0003],
        [0.0010],
        [0.0013],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0014],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0001]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0002, 0.0011, 0.0032, 0.0003, 0.0010, 0.0013, 0.0002,
         0.0006, 0.0006, 0.0014, 0.0002, 0.0003, 0.0004, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0053],
        [0.0136],
        [0.0125],
        [0.1160],
        [0.0060],
        [0.0081],
        [0.0773],
        [0.0291],
        [0.0045],
        [0.0512],
        [0.0173],
        [0.0100],
        [0.0103],
        [0.0050],
        [0.0128],
        [0.0004]], device='cuda:0')/tensor([[0.0053, 0.0136, 0.0125, 0.1160, 0.0060, 0.0081, 0.0773, 0.0291, 0.0045,
         0.0512, 0.0173, 0.0100, 0.0103, 0.0050, 0.0128, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0053],
        [0.0006, 0.0136],
        [0.0002, 0.0125],
        [0.0011, 0.1160],
        [0.0032, 0.0060],
        [0.0003, 0.0081],
        [0.0010, 0.0773],
        [0.0013, 0.0291],
        [0.0002, 0.0045],
        [0.0006, 0.0512],
        [0.0006, 0.0173],
        [0.0014, 0.0100],
        [0.0002, 0.0103],
        [0.0003, 0.0050],
        [0.0004, 0.0128],
        [0.0001, 0.0004]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0004],
        [0.0026],
        [0.0023],
        [0.0001],
        [0.0003],
        [0.0007],
        [0.0010],
        [0.0023],
        [0.0005],
        [0.0004],
        [0.0014],
        [0.0024],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0004, 0.0026, 0.0023, 0.0001, 0.0003, 0.0007, 0.0010,
         0.0023, 0.0005, 0.0004, 0.0014, 0.0024, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0076],
        [0.0231],
        [0.0438],
        [0.0146],
        [0.0374],
        [0.0023],
        [0.0071],
        [0.0028],
        [0.0499],
        [0.0198],
        [0.0231],
        [0.0007],
        [0.0286],
        [0.0613],
        [0.0039],
        [0.0111]], device='cuda:0')/tensor([[0.0076, 0.0231, 0.0438, 0.0146, 0.0374, 0.0023, 0.0071, 0.0028, 0.0499,
         0.0198, 0.0231, 0.0007, 0.0286, 0.0613, 0.0039, 0.0111]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0076],
        [0.0004, 0.0231],
        [0.0004, 0.0438],
        [0.0026, 0.0146],
        [0.0023, 0.0374],
        [0.0001, 0.0023],
        [0.0003, 0.0071],
        [0.0007, 0.0028],
        [0.0010, 0.0499],
        [0.0023, 0.0198],
        [0.0005, 0.0231],
        [0.0004, 0.0007],
        [0.0014, 0.0286],
        [0.0024, 0.0613],
        [0.0003, 0.0039],
        [0.0002, 0.0111]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0001],
        [0.0005],
        [0.0001],
        [0.0002],
        [0.0005],
        [0.0019],
        [0.0003],
        [0.0004],
        [0.0008],
        [0.0003],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0001, 0.0005, 0.0001, 0.0002, 0.0005, 0.0019, 0.0003, 0.0004,
         0.0008, 0.0003, 0.0003, 0.0002, 0.0003, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4630e-02],
        [8.7039e-03],
        [2.0985e-03],
        [4.4404e-04],
        [8.7664e-03],
        [3.5200e-02],
        [7.4359e-03],
        [1.5346e-02],
        [9.1247e-03],
        [5.5933e-03],
        [2.7463e-04],
        [1.2876e-02],
        [9.7929e-05],
        [1.6827e-03],
        [1.3770e-03],
        [1.6924e-03]], device='cuda:0')/tensor([[1.4630e-02, 8.7039e-03, 2.0985e-03, 4.4404e-04, 8.7664e-03, 3.5200e-02,
         7.4359e-03, 1.5346e-02, 9.1247e-03, 5.5933e-03, 2.7463e-04, 1.2876e-02,
         9.7929e-05, 1.6827e-03, 1.3770e-03, 1.6924e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1368e-04, 1.4630e-02],
        [1.2145e-04, 8.7039e-03],
        [4.6636e-04, 2.0985e-03],
        [1.2524e-04, 4.4404e-04],
        [1.9991e-04, 8.7664e-03],
        [5.3922e-04, 3.5200e-02],
        [1.9009e-03, 7.4359e-03],
        [3.3997e-04, 1.5346e-02],
        [3.6533e-04, 9.1247e-03],
        [8.2668e-04, 5.5933e-03],
        [3.0112e-04, 2.7463e-04],
        [3.2931e-04, 1.2876e-02],
        [1.8797e-04, 9.7929e-05],
        [3.1742e-04, 1.6827e-03],
        [8.3488e-04, 1.3770e-03],
        [7.1861e-04, 1.6924e-03]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0014],
        [0.0007],
        [0.0007],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0002, 0.0005, 0.0014, 0.0007, 0.0007, 0.0011]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0049],
        [0.0019],
        [0.0026],
        [0.0443],
        [0.0298],
        [0.0025],
        [0.0013],
        [0.0120]], device='cuda:0')/tensor([[0.0049, 0.0019, 0.0026, 0.0443, 0.0298, 0.0025, 0.0013, 0.0120]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0006, 0.0049],
        [0.0002, 0.0019],
        [0.0002, 0.0026],
        [0.0005, 0.0443],
        [0.0014, 0.0298],
        [0.0007, 0.0025],
        [0.0007, 0.0013],
        [0.0011, 0.0120]], device='cuda:0')
acc:  0.52
Time taken to execute the de SA task with prompt type identical_modal, variation 0 and batchsize 16: 0:03:14.569836
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_0']
----------- 42 de google/flan-t5-base SA identical_modal 1 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 348.05it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0001],
        [0.0004],
        [0.0011],
        [0.0010]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0005, 0.0002, 0.0004, 0.0005, 0.0007, 0.0002, 0.0004,
         0.0003, 0.0004, 0.0004, 0.0001, 0.0004, 0.0011, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0022],
        [0.0093],
        [0.0224],
        [0.0139],
        [0.0165],
        [0.0010],
        [0.0028],
        [0.0291],
        [0.0193],
        [0.0178],
        [0.0021],
        [0.0075],
        [0.0080],
        [0.0049],
        [0.0252]], device='cuda:0')/tensor([[0.0028, 0.0022, 0.0093, 0.0224, 0.0139, 0.0165, 0.0010, 0.0028, 0.0291,
         0.0193, 0.0178, 0.0021, 0.0075, 0.0080, 0.0049, 0.0252]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0028],
        [0.0002, 0.0022],
        [0.0005, 0.0093],
        [0.0002, 0.0224],
        [0.0004, 0.0139],
        [0.0005, 0.0165],
        [0.0007, 0.0010],
        [0.0002, 0.0028],
        [0.0004, 0.0291],
        [0.0003, 0.0193],
        [0.0004, 0.0178],
        [0.0004, 0.0021],
        [0.0001, 0.0075],
        [0.0004, 0.0080],
        [0.0011, 0.0049],
        [0.0010, 0.0252]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0015],
        [0.0010],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0012],
        [0.0008],
        [0.0017]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0015, 0.0010, 0.0007, 0.0005, 0.0003, 0.0002, 0.0005,
         0.0003, 0.0002, 0.0003, 0.0003, 0.0012, 0.0008, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0133],
        [0.0043],
        [0.0828],
        [0.0144],
        [0.0160],
        [0.0093],
        [0.0104],
        [0.0036],
        [0.0008],
        [0.0180],
        [0.0162],
        [0.0099],
        [0.0005],
        [0.0938],
        [0.0049],
        [0.0078]], device='cuda:0')/tensor([[0.0133, 0.0043, 0.0828, 0.0144, 0.0160, 0.0093, 0.0104, 0.0036, 0.0008,
         0.0180, 0.0162, 0.0099, 0.0005, 0.0938, 0.0049, 0.0078]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0133],
        [0.0002, 0.0043],
        [0.0015, 0.0828],
        [0.0010, 0.0144],
        [0.0007, 0.0160],
        [0.0005, 0.0093],
        [0.0003, 0.0104],
        [0.0002, 0.0036],
        [0.0005, 0.0008],
        [0.0003, 0.0180],
        [0.0002, 0.0162],
        [0.0003, 0.0099],
        [0.0003, 0.0005],
        [0.0012, 0.0938],
        [0.0008, 0.0049],
        [0.0017, 0.0078]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0015],
        [0.0009],
        [0.0003],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0001],
        [0.0006],
        [0.0032],
        [0.0005],
        [0.0010],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0015, 0.0009, 0.0003, 0.0006, 0.0005, 0.0002, 0.0003,
         0.0001, 0.0006, 0.0032, 0.0005, 0.0010, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0005],
        [0.0149],
        [0.0275],
        [0.0021],
        [0.0124],
        [0.0008],
        [0.0304],
        [0.0098],
        [0.0006],
        [0.0159],
        [0.0106],
        [0.0053],
        [0.0012],
        [0.0014],
        [0.0009],
        [0.0101]], device='cuda:0')/tensor([[0.0005, 0.0149, 0.0275, 0.0021, 0.0124, 0.0008, 0.0304, 0.0098, 0.0006,
         0.0159, 0.0106, 0.0053, 0.0012, 0.0014, 0.0009, 0.0101]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0005],
        [0.0003, 0.0149],
        [0.0015, 0.0275],
        [0.0009, 0.0021],
        [0.0003, 0.0124],
        [0.0006, 0.0008],
        [0.0005, 0.0304],
        [0.0002, 0.0098],
        [0.0003, 0.0006],
        [0.0001, 0.0159],
        [0.0006, 0.0106],
        [0.0032, 0.0053],
        [0.0005, 0.0012],
        [0.0010, 0.0014],
        [0.0004, 0.0009],
        [0.0005, 0.0101]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.9574e-04],
        [2.2957e-04],
        [6.8548e-04],
        [7.0524e-04],
        [2.9886e-04],
        [1.2291e-03],
        [7.6904e-05],
        [1.0305e-03],
        [4.8123e-04],
        [2.3311e-04],
        [5.5644e-04],
        [1.4497e-04],
        [8.1453e-04],
        [7.9566e-04],
        [1.7231e-04],
        [2.3028e-03]], device='cuda:0')/tensor([[5.9574e-04, 2.2957e-04, 6.8548e-04, 7.0524e-04, 2.9886e-04, 1.2291e-03,
         7.6904e-05, 1.0305e-03, 4.8123e-04, 2.3311e-04, 5.5644e-04, 1.4497e-04,
         8.1453e-04, 7.9566e-04, 1.7231e-04, 2.3028e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0419],
        [0.0062],
        [0.0276],
        [0.0473],
        [0.0233],
        [0.0403],
        [0.0002],
        [0.0209],
        [0.0005],
        [0.0003],
        [0.0118],
        [0.0165],
        [0.0113],
        [0.0194],
        [0.0548],
        [0.0402]], device='cuda:0')/tensor([[0.0419, 0.0062, 0.0276, 0.0473, 0.0233, 0.0403, 0.0002, 0.0209, 0.0005,
         0.0003, 0.0118, 0.0165, 0.0113, 0.0194, 0.0548, 0.0402]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.9574e-04, 4.1865e-02],
        [2.2957e-04, 6.2038e-03],
        [6.8548e-04, 2.7566e-02],
        [7.0524e-04, 4.7331e-02],
        [2.9886e-04, 2.3293e-02],
        [1.2291e-03, 4.0333e-02],
        [7.6904e-05, 1.9651e-04],
        [1.0305e-03, 2.0922e-02],
        [4.8123e-04, 4.5507e-04],
        [2.3311e-04, 3.0362e-04],
        [5.5644e-04, 1.1759e-02],
        [1.4497e-04, 1.6476e-02],
        [8.1453e-04, 1.1272e-02],
        [7.9566e-04, 1.9412e-02],
        [1.7231e-04, 5.4842e-02],
        [2.3028e-03, 4.0237e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0015],
        [0.0003],
        [0.0006],
        [0.0009],
        [0.0007],
        [0.0014],
        [0.0011],
        [0.0003],
        [0.0009],
        [0.0007],
        [0.0014],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0003, 0.0004, 0.0003, 0.0015, 0.0003, 0.0006, 0.0009, 0.0007,
         0.0014, 0.0011, 0.0003, 0.0009, 0.0007, 0.0014, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0275],
        [0.0007],
        [0.0104],
        [0.0133],
        [0.0047],
        [0.0268],
        [0.0027],
        [0.0034],
        [0.0157],
        [0.0409],
        [0.0124],
        [0.0142],
        [0.0081],
        [0.0018],
        [0.0287],
        [0.0025]], device='cuda:0')/tensor([[0.0275, 0.0007, 0.0104, 0.0133, 0.0047, 0.0268, 0.0027, 0.0034, 0.0157,
         0.0409, 0.0124, 0.0142, 0.0081, 0.0018, 0.0287, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0275],
        [0.0003, 0.0007],
        [0.0004, 0.0104],
        [0.0003, 0.0133],
        [0.0015, 0.0047],
        [0.0003, 0.0268],
        [0.0006, 0.0027],
        [0.0009, 0.0034],
        [0.0007, 0.0157],
        [0.0014, 0.0409],
        [0.0011, 0.0124],
        [0.0003, 0.0142],
        [0.0009, 0.0081],
        [0.0007, 0.0018],
        [0.0014, 0.0287],
        [0.0006, 0.0025]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.9197e-04],
        [9.2440e-04],
        [3.5146e-04],
        [2.7001e-04],
        [1.2134e-04],
        [2.4749e-04],
        [2.6194e-04],
        [3.4572e-04],
        [2.1203e-03],
        [8.2973e-04],
        [7.3368e-04],
        [1.3974e-03],
        [3.8069e-04],
        [1.3515e-03],
        [1.6201e-04],
        [9.3012e-05]], device='cuda:0')/tensor([[2.9197e-04, 9.2440e-04, 3.5146e-04, 2.7001e-04, 1.2134e-04, 2.4749e-04,
         2.6194e-04, 3.4572e-04, 2.1203e-03, 8.2973e-04, 7.3368e-04, 1.3974e-03,
         3.8069e-04, 1.3515e-03, 1.6201e-04, 9.3012e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0200],
        [0.0427],
        [0.0262],
        [0.0119],
        [0.0010],
        [0.0053],
        [0.0021],
        [0.0012],
        [0.0113],
        [0.0489],
        [0.0101],
        [0.0202],
        [0.0050],
        [0.0285],
        [0.0083],
        [0.0001]], device='cuda:0')/tensor([[0.0200, 0.0427, 0.0262, 0.0119, 0.0010, 0.0053, 0.0021, 0.0012, 0.0113,
         0.0489, 0.0101, 0.0202, 0.0050, 0.0285, 0.0083, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.9197e-04, 2.0042e-02],
        [9.2440e-04, 4.2685e-02],
        [3.5146e-04, 2.6177e-02],
        [2.7001e-04, 1.1921e-02],
        [1.2134e-04, 9.9369e-04],
        [2.4749e-04, 5.3306e-03],
        [2.6194e-04, 2.0957e-03],
        [3.4572e-04, 1.2211e-03],
        [2.1203e-03, 1.1270e-02],
        [8.2973e-04, 4.8910e-02],
        [7.3368e-04, 1.0092e-02],
        [1.3974e-03, 2.0216e-02],
        [3.8069e-04, 4.9589e-03],
        [1.3515e-03, 2.8515e-02],
        [1.6201e-04, 8.2998e-03],
        [9.3012e-05, 1.2284e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0551e-03],
        [2.4401e-03],
        [9.0560e-04],
        [1.5284e-04],
        [3.2559e-04],
        [1.1404e-03],
        [1.3872e-03],
        [6.6977e-04],
        [6.2940e-04],
        [3.6232e-04],
        [5.0209e-04],
        [5.7879e-04],
        [2.7639e-03],
        [1.0116e-03],
        [3.5887e-04],
        [4.7591e-05]], device='cuda:0')/tensor([[1.0551e-03, 2.4401e-03, 9.0560e-04, 1.5284e-04, 3.2559e-04, 1.1404e-03,
         1.3872e-03, 6.6977e-04, 6.2940e-04, 3.6232e-04, 5.0209e-04, 5.7879e-04,
         2.7639e-03, 1.0116e-03, 3.5887e-04, 4.7591e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0031],
        [0.0961],
        [0.0017],
        [0.0003],
        [0.0498],
        [0.0198],
        [0.0047],
        [0.0228],
        [0.0271],
        [0.0013],
        [0.0007],
        [0.0036],
        [0.0680],
        [0.0137],
        [0.0106],
        [0.0008]], device='cuda:0')/tensor([[0.0031, 0.0961, 0.0017, 0.0003, 0.0498, 0.0198, 0.0047, 0.0228, 0.0271,
         0.0013, 0.0007, 0.0036, 0.0680, 0.0137, 0.0106, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0551e-03, 3.1287e-03],
        [2.4401e-03, 9.6091e-02],
        [9.0560e-04, 1.6908e-03],
        [1.5284e-04, 3.1382e-04],
        [3.2559e-04, 4.9835e-02],
        [1.1404e-03, 1.9795e-02],
        [1.3872e-03, 4.7289e-03],
        [6.6977e-04, 2.2776e-02],
        [6.2940e-04, 2.7055e-02],
        [3.6232e-04, 1.3467e-03],
        [5.0209e-04, 6.8380e-04],
        [5.7879e-04, 3.6322e-03],
        [2.7639e-03, 6.8032e-02],
        [1.0116e-03, 1.3658e-02],
        [3.5887e-04, 1.0608e-02],
        [4.7591e-05, 7.7914e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0046],
        [0.0012],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0015],
        [0.0014],
        [0.0011],
        [0.0015],
        [0.0025],
        [0.0014],
        [0.0012],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0017]], device='cuda:0')/tensor([[0.0046, 0.0012, 0.0004, 0.0005, 0.0003, 0.0015, 0.0014, 0.0011, 0.0015,
         0.0025, 0.0014, 0.0012, 0.0004, 0.0001, 0.0003, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0531],
        [0.0331],
        [0.0128],
        [0.0463],
        [0.0279],
        [0.0124],
        [0.0181],
        [0.0051],
        [0.0202],
        [0.0242],
        [0.0327],
        [0.0450],
        [0.0122],
        [0.0002],
        [0.0104],
        [0.0045]], device='cuda:0')/tensor([[0.0531, 0.0331, 0.0128, 0.0463, 0.0279, 0.0124, 0.0181, 0.0051, 0.0202,
         0.0242, 0.0327, 0.0450, 0.0122, 0.0002, 0.0104, 0.0045]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0046, 0.0531],
        [0.0012, 0.0331],
        [0.0004, 0.0128],
        [0.0005, 0.0463],
        [0.0003, 0.0279],
        [0.0015, 0.0124],
        [0.0014, 0.0181],
        [0.0011, 0.0051],
        [0.0015, 0.0202],
        [0.0025, 0.0242],
        [0.0014, 0.0327],
        [0.0012, 0.0450],
        [0.0004, 0.0122],
        [0.0001, 0.0002],
        [0.0003, 0.0104],
        [0.0017, 0.0045]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0007],
        [0.0008],
        [0.0002],
        [0.0009],
        [0.0008],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0001],
        [0.0005],
        [0.0011],
        [0.0005],
        [0.0015],
        [0.0024],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0007, 0.0008, 0.0002, 0.0009, 0.0008, 0.0002, 0.0004, 0.0002,
         0.0001, 0.0005, 0.0011, 0.0005, 0.0015, 0.0024, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
id: [23607] -> tensor([[0.0046],
        [0.0128],
        [0.0219],
        [0.0097],
        [0.0015],
        [0.0296],
        [0.0065],
        [0.0059],
        [0.0010],
        [0.0002],
        [0.0186],
        [0.0030],
        [0.0113],
        [0.0308],
        [0.0319],
        [0.0107]], device='cuda:0')/tensor([[0.0046, 0.0128, 0.0219, 0.0097, 0.0015, 0.0296, 0.0065, 0.0059, 0.0010,
         0.0002, 0.0186, 0.0030, 0.0113, 0.0308, 0.0319, 0.0107]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0046],
        [0.0007, 0.0128],
        [0.0008, 0.0219],
        [0.0002, 0.0097],
        [0.0009, 0.0015],
        [0.0008, 0.0296],
        [0.0002, 0.0065],
        [0.0004, 0.0059],
        [0.0002, 0.0010],
        [0.0001, 0.0002],
        [0.0005, 0.0186],
        [0.0011, 0.0030],
        [0.0005, 0.0113],
        [0.0015, 0.0308],
        [0.0024, 0.0319],
        [0.0004, 0.0107]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0021],
        [0.0002],
        [0.0010],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0010],
        [0.0013],
        [0.0003],
        [0.0009],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0021, 0.0002, 0.0010, 0.0003, 0.0004, 0.0004, 0.0002, 0.0005,
         0.0004, 0.0002, 0.0010, 0.0013, 0.0003, 0.0009, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5080e-03],
        [1.0002e-02],
        [6.6207e-05],
        [9.7849e-04],
        [4.8299e-03],
        [4.2768e-03],
        [3.1038e-03],
        [3.7428e-04],
        [2.3844e-02],
        [1.7466e-02],
        [7.2134e-04],
        [1.3448e-02],
        [5.4637e-02],
        [3.7204e-03],
        [5.7847e-02],
        [2.2615e-02]], device='cuda:0')/tensor([[1.5080e-03, 1.0002e-02, 6.6207e-05, 9.7849e-04, 4.8299e-03, 4.2768e-03,
         3.1038e-03, 3.7428e-04, 2.3844e-02, 1.7466e-02, 7.2134e-04, 1.3448e-02,
         5.4637e-02, 3.7204e-03, 5.7847e-02, 2.2615e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7564e-04, 1.5080e-03],
        [2.1047e-03, 1.0002e-02],
        [1.8330e-04, 6.6207e-05],
        [9.5557e-04, 9.7849e-04],
        [2.7449e-04, 4.8299e-03],
        [4.0210e-04, 4.2768e-03],
        [3.5607e-04, 3.1038e-03],
        [2.4369e-04, 3.7428e-04],
        [4.7787e-04, 2.3844e-02],
        [3.8010e-04, 1.7466e-02],
        [1.6011e-04, 7.2134e-04],
        [9.7822e-04, 1.3448e-02],
        [1.2586e-03, 5.4637e-02],
        [3.1622e-04, 3.7204e-03],
        [8.9770e-04, 5.7847e-02],
        [5.5699e-04, 2.2615e-02]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0014],
        [0.0005],
        [0.0018],
        [0.0004],
        [0.0024],
        [0.0005],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0008],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0007],
        [0.0002]], device='cuda:0')/tensor([[0.0010, 0.0014, 0.0005, 0.0018, 0.0004, 0.0024, 0.0005, 0.0008, 0.0004,
         0.0006, 0.0008, 0.0002, 0.0006, 0.0005, 0.0007, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0558],
        [0.0022],
        [0.0331],
        [0.0008],
        [0.0576],
        [0.0043],
        [0.0036],
        [0.0008],
        [0.0010],
        [0.0007],
        [0.0007],
        [0.0012],
        [0.0322],
        [0.0041],
        [0.0017]], device='cuda:0')/tensor([[0.0010, 0.0558, 0.0022, 0.0331, 0.0008, 0.0576, 0.0043, 0.0036, 0.0008,
         0.0010, 0.0007, 0.0007, 0.0012, 0.0322, 0.0041, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0010],
        [0.0014, 0.0558],
        [0.0005, 0.0022],
        [0.0018, 0.0331],
        [0.0004, 0.0008],
        [0.0024, 0.0576],
        [0.0005, 0.0043],
        [0.0008, 0.0036],
        [0.0004, 0.0008],
        [0.0006, 0.0010],
        [0.0008, 0.0007],
        [0.0002, 0.0007],
        [0.0006, 0.0012],
        [0.0005, 0.0322],
        [0.0007, 0.0041],
        [0.0002, 0.0017]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0004],
        [0.0011],
        [0.0003],
        [0.0004],
        [0.0012],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0014],
        [0.0008],
        [0.0015],
        [0.0015],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0004, 0.0011, 0.0003, 0.0004, 0.0012, 0.0005, 0.0003, 0.0003,
         0.0003, 0.0014, 0.0008, 0.0015, 0.0015, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0639],
        [0.0269],
        [0.0015],
        [0.0002],
        [0.0091],
        [0.0433],
        [0.0022],
        [0.0002],
        [0.0273],
        [0.0101],
        [0.0389],
        [0.0079],
        [0.0065],
        [0.1299],
        [0.0166],
        [0.0022]], device='cuda:0')/tensor([[0.0639, 0.0269, 0.0015, 0.0002, 0.0091, 0.0433, 0.0022, 0.0002, 0.0273,
         0.0101, 0.0389, 0.0079, 0.0065, 0.1299, 0.0166, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0639],
        [0.0004, 0.0269],
        [0.0011, 0.0015],
        [0.0003, 0.0002],
        [0.0004, 0.0091],
        [0.0012, 0.0433],
        [0.0005, 0.0022],
        [0.0003, 0.0002],
        [0.0003, 0.0273],
        [0.0003, 0.0101],
        [0.0014, 0.0389],
        [0.0008, 0.0079],
        [0.0015, 0.0065],
        [0.0015, 0.1299],
        [0.0005, 0.0166],
        [0.0005, 0.0022]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0008],
        [0.0002],
        [0.0015],
        [0.0005],
        [0.0018],
        [0.0007],
        [0.0004],
        [0.0010]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0015, 0.0005, 0.0018, 0.0007, 0.0004, 0.0010]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0374],
        [0.0351],
        [0.0065],
        [0.0025],
        [0.0044],
        [0.0203],
        [0.0042],
        [0.0015]], device='cuda:0')/tensor([[0.0374, 0.0351, 0.0065, 0.0025, 0.0044, 0.0203, 0.0042, 0.0015]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0008, 0.0374],
        [0.0002, 0.0351],
        [0.0015, 0.0065],
        [0.0005, 0.0025],
        [0.0018, 0.0044],
        [0.0007, 0.0203],
        [0.0004, 0.0042],
        [0.0010, 0.0015]], device='cuda:0')
acc:  0.525
Time taken to execute the de SA task with prompt type identical_modal, variation 1 and batchsize 16: 0:03:16.138788
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_1']
----------- 42 de google/flan-t5-base SA identical_modal 2 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 337.64it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0037],
        [0.0001],
        [0.0010],
        [0.0004],
        [0.0002],
        [0.0016],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0013],
        [0.0006],
        [0.0004],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0037, 0.0001, 0.0010, 0.0004, 0.0002, 0.0016, 0.0004, 0.0007, 0.0003,
         0.0007, 0.0004, 0.0013, 0.0006, 0.0004, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5649e-03],
        [1.6246e-04],
        [9.7590e-03],
        [6.6849e-03],
        [8.6557e-03],
        [2.3661e-03],
        [9.7740e-03],
        [3.6833e-02],
        [4.4934e-02],
        [4.8370e-02],
        [1.1058e-02],
        [1.0652e-01],
        [3.2789e-03],
        [5.6743e-03],
        [5.7277e-02],
        [9.3710e-05]], device='cuda:0')/tensor([[4.5649e-03, 1.6246e-04, 9.7590e-03, 6.6849e-03, 8.6557e-03, 2.3661e-03,
         9.7740e-03, 3.6833e-02, 4.4934e-02, 4.8370e-02, 1.1058e-02, 1.0652e-01,
         3.2789e-03, 5.6743e-03, 5.7277e-02, 9.3710e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6652e-03, 4.5649e-03],
        [1.4930e-04, 1.6246e-04],
        [1.0086e-03, 9.7590e-03],
        [4.3600e-04, 6.6849e-03],
        [2.0056e-04, 8.6557e-03],
        [1.6006e-03, 2.3661e-03],
        [4.4758e-04, 9.7740e-03],
        [7.0620e-04, 3.6833e-02],
        [3.4905e-04, 4.4934e-02],
        [6.6772e-04, 4.8370e-02],
        [3.8350e-04, 1.1058e-02],
        [1.3010e-03, 1.0652e-01],
        [6.4062e-04, 3.2789e-03],
        [4.1876e-04, 5.6743e-03],
        [3.9975e-04, 5.7277e-02],
        [1.9202e-04, 9.3710e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0007],
        [0.0012],
        [0.0009],
        [0.0004],
        [0.0009],
        [0.0001],
        [0.0004],
        [0.0012],
        [0.0012],
        [0.0013],
        [0.0011],
        [0.0013],
        [0.0002],
        [0.0006],
        [0.0001]], device='cuda:0')/tensor([[0.0012, 0.0007, 0.0012, 0.0009, 0.0004, 0.0009, 0.0001, 0.0004, 0.0012,
         0.0012, 0.0013, 0.0011, 0.0013, 0.0002, 0.0006, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0361],
        [0.0264],
        [0.0050],
        [0.0029],
        [0.0141],
        [0.0283],
        [0.0031],
        [0.0163],
        [0.0032],
        [0.0314],
        [0.0053],
        [0.0046],
        [0.0015],
        [0.0007],
        [0.0013],
        [0.0025]], device='cuda:0')/tensor([[0.0361, 0.0264, 0.0050, 0.0029, 0.0141, 0.0283, 0.0031, 0.0163, 0.0032,
         0.0314, 0.0053, 0.0046, 0.0015, 0.0007, 0.0013, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0361],
        [0.0007, 0.0264],
        [0.0012, 0.0050],
        [0.0009, 0.0029],
        [0.0004, 0.0141],
        [0.0009, 0.0283],
        [0.0001, 0.0031],
        [0.0004, 0.0163],
        [0.0012, 0.0032],
        [0.0012, 0.0314],
        [0.0013, 0.0053],
        [0.0011, 0.0046],
        [0.0013, 0.0015],
        [0.0002, 0.0007],
        [0.0006, 0.0013],
        [0.0001, 0.0025]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0011],
        [0.0003],
        [0.0004],
        [0.0017],
        [0.0015],
        [0.0003],
        [0.0026],
        [0.0003],
        [0.0016],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0003],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0009, 0.0011, 0.0003, 0.0004, 0.0017, 0.0015, 0.0003, 0.0026, 0.0003,
         0.0016, 0.0005, 0.0005, 0.0006, 0.0003, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0034],
        [0.0151],
        [0.0204],
        [0.0206],
        [0.0106],
        [0.0318],
        [0.0003],
        [0.0093],
        [0.0009],
        [0.0379],
        [0.0137],
        [0.0120],
        [0.0075],
        [0.0263],
        [0.0070],
        [0.0094]], device='cuda:0')/tensor([[0.0034, 0.0151, 0.0204, 0.0206, 0.0106, 0.0318, 0.0003, 0.0093, 0.0009,
         0.0379, 0.0137, 0.0120, 0.0075, 0.0263, 0.0070, 0.0094]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0009, 0.0034],
        [0.0011, 0.0151],
        [0.0003, 0.0204],
        [0.0004, 0.0206],
        [0.0017, 0.0106],
        [0.0015, 0.0318],
        [0.0003, 0.0003],
        [0.0026, 0.0093],
        [0.0003, 0.0009],
        [0.0016, 0.0379],
        [0.0005, 0.0137],
        [0.0005, 0.0120],
        [0.0006, 0.0075],
        [0.0003, 0.0263],
        [0.0004, 0.0070],
        [0.0003, 0.0094]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0009],
        [0.0009],
        [0.0005],
        [0.0007],
        [0.0006],
        [0.0005],
        [0.0009],
        [0.0007],
        [0.0017],
        [0.0015],
        [0.0010],
        [0.0002],
        [0.0034],
        [0.0010],
        [0.0053]], device='cuda:0')/tensor([[0.0010, 0.0009, 0.0009, 0.0005, 0.0007, 0.0006, 0.0005, 0.0009, 0.0007,
         0.0017, 0.0015, 0.0010, 0.0002, 0.0034, 0.0010, 0.0053]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0949],
        [0.0234],
        [0.0030],
        [0.0291],
        [0.0639],
        [0.0271],
        [0.0119],
        [0.0078],
        [0.0824],
        [0.0093],
        [0.0477],
        [0.0518],
        [0.0045],
        [0.0248],
        [0.0194],
        [0.0669]], device='cuda:0')/tensor([[0.0949, 0.0234, 0.0030, 0.0291, 0.0639, 0.0271, 0.0119, 0.0078, 0.0824,
         0.0093, 0.0477, 0.0518, 0.0045, 0.0248, 0.0194, 0.0669]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0949],
        [0.0009, 0.0234],
        [0.0009, 0.0030],
        [0.0005, 0.0291],
        [0.0007, 0.0639],
        [0.0006, 0.0271],
        [0.0005, 0.0119],
        [0.0009, 0.0078],
        [0.0007, 0.0824],
        [0.0017, 0.0093],
        [0.0015, 0.0477],
        [0.0010, 0.0518],
        [0.0002, 0.0045],
        [0.0034, 0.0248],
        [0.0010, 0.0194],
        [0.0053, 0.0669]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0011],
        [0.0003],
        [0.0010],
        [0.0006],
        [0.0017],
        [0.0027],
        [0.0012],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0013],
        [0.0026],
        [0.0005],
        [0.0004]], device='cuda:0')/tensor([[0.0001, 0.0011, 0.0003, 0.0010, 0.0006, 0.0017, 0.0027, 0.0012, 0.0004,
         0.0003, 0.0004, 0.0003, 0.0013, 0.0026, 0.0005, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0691],
        [0.0047],
        [0.0582],
        [0.0014],
        [0.0963],
        [0.0105],
        [0.0149],
        [0.0683],
        [0.0030],
        [0.0205],
        [0.0524],
        [0.1239],
        [0.0465],
        [0.0193],
        [0.0006]], device='cuda:0')/tensor([[0.0035, 0.0691, 0.0047, 0.0582, 0.0014, 0.0963, 0.0105, 0.0149, 0.0683,
         0.0030, 0.0205, 0.0524, 0.1239, 0.0465, 0.0193, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0001, 0.0035],
        [0.0011, 0.0691],
        [0.0003, 0.0047],
        [0.0010, 0.0582],
        [0.0006, 0.0014],
        [0.0017, 0.0963],
        [0.0027, 0.0105],
        [0.0012, 0.0149],
        [0.0004, 0.0683],
        [0.0003, 0.0030],
        [0.0004, 0.0205],
        [0.0003, 0.0524],
        [0.0013, 0.1239],
        [0.0026, 0.0465],
        [0.0005, 0.0193],
        [0.0004, 0.0006]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0016],
        [0.0006],
        [0.0008],
        [0.0007],
        [0.0002],
        [0.0014],
        [0.0006],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0008],
        [0.0007],
        [0.0011],
        [0.0031],
        [0.0014]], device='cuda:0')/tensor([[0.0005, 0.0016, 0.0006, 0.0008, 0.0007, 0.0002, 0.0014, 0.0006, 0.0005,
         0.0007, 0.0008, 0.0008, 0.0007, 0.0011, 0.0031, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0220],
        [0.0635],
        [0.0060],
        [0.0330],
        [0.0054],
        [0.0003],
        [0.0800],
        [0.0358],
        [0.0036],
        [0.0558],
        [0.0204],
        [0.0014],
        [0.0007],
        [0.0014],
        [0.0105],
        [0.0621]], device='cuda:0')/tensor([[0.0220, 0.0635, 0.0060, 0.0330, 0.0054, 0.0003, 0.0800, 0.0358, 0.0036,
         0.0558, 0.0204, 0.0014, 0.0007, 0.0014, 0.0105, 0.0621]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0220],
        [0.0016, 0.0635],
        [0.0006, 0.0060],
        [0.0008, 0.0330],
        [0.0007, 0.0054],
        [0.0002, 0.0003],
        [0.0014, 0.0800],
        [0.0006, 0.0358],
        [0.0005, 0.0036],
        [0.0007, 0.0558],
        [0.0008, 0.0204],
        [0.0008, 0.0014],
        [0.0007, 0.0007],
        [0.0011, 0.0014],
        [0.0031, 0.0105],
        [0.0014, 0.0621]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0020],
        [0.0010],
        [0.0005],
        [0.0011],
        [0.0009],
        [0.0015],
        [0.0010],
        [0.0001],
        [0.0012],
        [0.0003],
        [0.0011],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0020, 0.0010, 0.0005, 0.0011, 0.0009, 0.0015, 0.0010, 0.0001,
         0.0012, 0.0003, 0.0011, 0.0004, 0.0004, 0.0007, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0153],
        [0.0142],
        [0.0322],
        [0.0104],
        [0.0045],
        [0.0527],
        [0.0031],
        [0.0009],
        [0.0063],
        [0.0759],
        [0.0052],
        [0.0347],
        [0.0305],
        [0.0094],
        [0.0708],
        [0.0005]], device='cuda:0')/tensor([[0.0153, 0.0142, 0.0322, 0.0104, 0.0045, 0.0527, 0.0031, 0.0009, 0.0063,
         0.0759, 0.0052, 0.0347, 0.0305, 0.0094, 0.0708, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0153],
        [0.0020, 0.0142],
        [0.0010, 0.0322],
        [0.0005, 0.0104],
        [0.0011, 0.0045],
        [0.0009, 0.0527],
        [0.0015, 0.0031],
        [0.0010, 0.0009],
        [0.0001, 0.0063],
        [0.0012, 0.0759],
        [0.0003, 0.0052],
        [0.0011, 0.0347],
        [0.0004, 0.0305],
        [0.0004, 0.0094],
        [0.0007, 0.0708],
        [0.0004, 0.0005]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0015],
        [0.0001],
        [0.0005],
        [0.0033],
        [0.0007],
        [0.0014],
        [0.0004],
        [0.0007],
        [0.0006],
        [0.0008],
        [0.0006],
        [0.0027],
        [0.0006],
        [0.0014],
        [0.0009]], device='cuda:0')/tensor([[0.0004, 0.0015, 0.0001, 0.0005, 0.0033, 0.0007, 0.0014, 0.0004, 0.0007,
         0.0006, 0.0008, 0.0006, 0.0027, 0.0006, 0.0014, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0311],
        [0.0044],
        [0.0398],
        [0.0131],
        [0.0118],
        [0.0059],
        [0.0119],
        [0.0044],
        [0.0018],
        [0.0463],
        [0.0536],
        [0.0212],
        [0.0666],
        [0.0006],
        [0.0717],
        [0.0289]], device='cuda:0')/tensor([[0.0311, 0.0044, 0.0398, 0.0131, 0.0118, 0.0059, 0.0119, 0.0044, 0.0018,
         0.0463, 0.0536, 0.0212, 0.0666, 0.0006, 0.0717, 0.0289]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0311],
        [0.0015, 0.0044],
        [0.0001, 0.0398],
        [0.0005, 0.0131],
        [0.0033, 0.0118],
        [0.0007, 0.0059],
        [0.0014, 0.0119],
        [0.0004, 0.0044],
        [0.0007, 0.0018],
        [0.0006, 0.0463],
        [0.0008, 0.0536],
        [0.0006, 0.0212],
        [0.0027, 0.0666],
        [0.0006, 0.0006],
        [0.0014, 0.0717],
        [0.0009, 0.0289]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0005],
        [0.0004],
        [0.0016],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0011],
        [0.0003],
        [0.0010],
        [0.0012]], device='cuda:0')/tensor([[0.0011, 0.0005, 0.0004, 0.0016, 0.0002, 0.0002, 0.0005, 0.0007, 0.0008,
         0.0004, 0.0002, 0.0004, 0.0011, 0.0003, 0.0010, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0334],
        [0.0063],
        [0.0008],
        [0.0017],
        [0.0092],
        [0.0022],
        [0.0113],
        [0.0075],
        [0.0026],
        [0.0257],
        [0.0194],
        [0.0131],
        [0.0359],
        [0.0016],
        [0.0010],
        [0.0024]], device='cuda:0')/tensor([[0.0334, 0.0063, 0.0008, 0.0017, 0.0092, 0.0022, 0.0113, 0.0075, 0.0026,
         0.0257, 0.0194, 0.0131, 0.0359, 0.0016, 0.0010, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answers_probs: tensor([[0.0011, 0.0334],
        [0.0005, 0.0063],
        [0.0004, 0.0008],
        [0.0016, 0.0017],
        [0.0002, 0.0092],
        [0.0002, 0.0022],
        [0.0005, 0.0113],
        [0.0007, 0.0075],
        [0.0008, 0.0026],
        [0.0004, 0.0257],
        [0.0002, 0.0194],
        [0.0004, 0.0131],
        [0.0011, 0.0359],
        [0.0003, 0.0016],
        [0.0010, 0.0010],
        [0.0012, 0.0024]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0022],
        [0.0008],
        [0.0006],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0013],
        [0.0009],
        [0.0014],
        [0.0015],
        [0.0010],
        [0.0003],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0022, 0.0008, 0.0006, 0.0004, 0.0003, 0.0004, 0.0013,
         0.0009, 0.0014, 0.0015, 0.0010, 0.0003, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0063],
        [0.0213],
        [0.0108],
        [0.0062],
        [0.0017],
        [0.0190],
        [0.0006],
        [0.0151],
        [0.0785],
        [0.0332],
        [0.0197],
        [0.0045],
        [0.0027],
        [0.0004],
        [0.0253],
        [0.0002]], device='cuda:0')/tensor([[0.0063, 0.0213, 0.0108, 0.0062, 0.0017, 0.0190, 0.0006, 0.0151, 0.0785,
         0.0332, 0.0197, 0.0045, 0.0027, 0.0004, 0.0253, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0063],
        [0.0004, 0.0213],
        [0.0022, 0.0108],
        [0.0008, 0.0062],
        [0.0006, 0.0017],
        [0.0004, 0.0190],
        [0.0003, 0.0006],
        [0.0004, 0.0151],
        [0.0013, 0.0785],
        [0.0009, 0.0332],
        [0.0014, 0.0197],
        [0.0015, 0.0045],
        [0.0010, 0.0027],
        [0.0003, 0.0004],
        [0.0005, 0.0253],
        [0.0002, 0.0002]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0001],
        [0.0009],
        [0.0006],
        [0.0022],
        [0.0013],
        [0.0003],
        [0.0008],
        [0.0005],
        [0.0008],
        [0.0017],
        [0.0015],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0009]], device='cuda:0')/tensor([[0.0014, 0.0001, 0.0009, 0.0006, 0.0022, 0.0013, 0.0003, 0.0008, 0.0005,
         0.0008, 0.0017, 0.0015, 0.0005, 0.0004, 0.0004, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0037],
        [0.0086],
        [0.0008],
        [0.0278],
        [0.0519],
        [0.0002],
        [0.0007],
        [0.0001],
        [0.0006],
        [0.0162],
        [0.0224],
        [0.0003],
        [0.0005],
        [0.0038],
        [0.0049]], device='cuda:0')/tensor([[0.0035, 0.0037, 0.0086, 0.0008, 0.0278, 0.0519, 0.0002, 0.0007, 0.0001,
         0.0006, 0.0162, 0.0224, 0.0003, 0.0005, 0.0038, 0.0049]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0035],
        [0.0001, 0.0037],
        [0.0009, 0.0086],
        [0.0006, 0.0008],
        [0.0022, 0.0278],
        [0.0013, 0.0519],
        [0.0003, 0.0002],
        [0.0008, 0.0007],
        [0.0005, 0.0001],
        [0.0008, 0.0006],
        [0.0017, 0.0162],
        [0.0015, 0.0224],
        [0.0005, 0.0003],
        [0.0004, 0.0005],
        [0.0004, 0.0038],
        [0.0009, 0.0049]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0020],
        [0.0008],
        [0.0005],
        [0.0006],
        [0.0014],
        [0.0004],
        [0.0010],
        [0.0010],
        [0.0005],
        [0.0009],
        [0.0028],
        [0.0006],
        [0.0001],
        [0.0005],
        [0.0002],
        [0.0007]], device='cuda:0')/tensor([[0.0020, 0.0008, 0.0005, 0.0006, 0.0014, 0.0004, 0.0010, 0.0010, 0.0005,
         0.0009, 0.0028, 0.0006, 0.0001, 0.0005, 0.0002, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0076],
        [0.0015],
        [0.0067],
        [0.0209],
        [0.0291],
        [0.0226],
        [0.0009],
        [0.0149],
        [0.0021],
        [0.0009],
        [0.0663],
        [0.0028],
        [0.0005],
        [0.0032],
        [0.0163],
        [0.0063]], device='cuda:0')/tensor([[0.0076, 0.0015, 0.0067, 0.0209, 0.0291, 0.0226, 0.0009, 0.0149, 0.0021,
         0.0009, 0.0663, 0.0028, 0.0005, 0.0032, 0.0163, 0.0063]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0020, 0.0076],
        [0.0008, 0.0015],
        [0.0005, 0.0067],
        [0.0006, 0.0209],
        [0.0014, 0.0291],
        [0.0004, 0.0226],
        [0.0010, 0.0009],
        [0.0010, 0.0149],
        [0.0005, 0.0021],
        [0.0009, 0.0009],
        [0.0028, 0.0663],
        [0.0006, 0.0028],
        [0.0001, 0.0005],
        [0.0005, 0.0032],
        [0.0002, 0.0163],
        [0.0007, 0.0063]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0005],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0009],
        [0.0039],
        [0.0012]], device='cuda:0')/tensor([[0.0005, 0.0002, 0.0002, 0.0003, 0.0003, 0.0009, 0.0039, 0.0012]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0026],
        [0.0065],
        [0.0286],
        [0.0169],
        [0.0242],
        [0.0009],
        [0.0034],
        [0.0128]], device='cuda:0')/tensor([[0.0026, 0.0065, 0.0286, 0.0169, 0.0242, 0.0009, 0.0034, 0.0128]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0005, 0.0026],
        [0.0002, 0.0065],
        [0.0002, 0.0286],
        [0.0003, 0.0169],
        [0.0003, 0.0242],
        [0.0009, 0.0009],
        [0.0039, 0.0034],
        [0.0012, 0.0128]], device='cuda:0')
acc:  0.56
Time taken to execute the de SA task with prompt type identical_modal, variation 2 and batchsize 16: 0:03:16.942904
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_2']
----------- 42 de google/flan-t5-base SA identical_modal 3 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 344.11it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.5367e-04],
        [1.4573e-03],
        [1.1836e-03],
        [7.3003e-05],
        [1.1734e-03],
        [1.3974e-03],
        [1.2860e-03],
        [2.1941e-04],
        [8.1664e-04],
        [4.5707e-04],
        [1.8331e-04],
        [3.5036e-04],
        [1.8149e-03],
        [7.7201e-04],
        [1.1150e-03],
        [5.1975e-04]], device='cuda:0')/tensor([[7.5367e-04, 1.4573e-03, 1.1836e-03, 7.3003e-05, 1.1734e-03, 1.3974e-03,
         1.2860e-03, 2.1941e-04, 8.1664e-04, 4.5707e-04, 1.8331e-04, 3.5036e-04,
         1.8149e-03, 7.7201e-04, 1.1150e-03, 5.1975e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0065],
        [0.0365],
        [0.0080],
        [0.0212],
        [0.0531],
        [0.0735],
        [0.0364],
        [0.0041],
        [0.0015],
        [0.0266],
        [0.0002],
        [0.0036],
        [0.0427],
        [0.0583],
        [0.0242],
        [0.0269]], device='cuda:0')/tensor([[0.0065, 0.0365, 0.0080, 0.0212, 0.0531, 0.0735, 0.0364, 0.0041, 0.0015,
         0.0266, 0.0002, 0.0036, 0.0427, 0.0583, 0.0242, 0.0269]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.5367e-04, 6.5000e-03],
        [1.4573e-03, 3.6503e-02],
        [1.1836e-03, 8.0357e-03],
        [7.3003e-05, 2.1196e-02],
        [1.1734e-03, 5.3081e-02],
        [1.3974e-03, 7.3461e-02],
        [1.2860e-03, 3.6368e-02],
        [2.1941e-04, 4.0556e-03],
        [8.1664e-04, 1.4501e-03],
        [4.5707e-04, 2.6575e-02],
        [1.8331e-04, 1.8342e-04],
        [3.5036e-04, 3.6475e-03],
        [1.8149e-03, 4.2691e-02],
        [7.7201e-04, 5.8338e-02],
        [1.1150e-03, 2.4179e-02],
        [5.1975e-04, 2.6920e-02]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.2167e-04],
        [4.1912e-04],
        [6.8961e-04],
        [1.0425e-03],
        [6.8271e-05],
        [1.0648e-03],
        [1.1867e-03],
        [8.9923e-04],
        [1.0131e-03],
        [5.7086e-04],
        [5.8185e-04],
        [5.0646e-04],
        [4.7449e-04],
        [7.2341e-04],
        [3.6366e-04],
        [7.6137e-04]], device='cuda:0')/tensor([[6.2167e-04, 4.1912e-04, 6.8961e-04, 1.0425e-03, 6.8271e-05, 1.0648e-03,
         1.1867e-03, 8.9923e-04, 1.0131e-03, 5.7086e-04, 5.8185e-04, 5.0646e-04,
         4.7449e-04, 7.2341e-04, 3.6366e-04, 7.6137e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0111],
        [0.0306],
        [0.1416],
        [0.0045],
        [0.0496],
        [0.0876],
        [0.0208],
        [0.0051],
        [0.0141],
        [0.0189],
        [0.0175],
        [0.0158],
        [0.0543],
        [0.0221],
        [0.0122]], device='cuda:0')/tensor([[0.0024, 0.0111, 0.0306, 0.1416, 0.0045, 0.0496, 0.0876, 0.0208, 0.0051,
         0.0141, 0.0189, 0.0175, 0.0158, 0.0543, 0.0221, 0.0122]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.2167e-04, 2.4485e-03],
        [4.1912e-04, 1.1053e-02],
        [6.8961e-04, 3.0635e-02],
        [1.0425e-03, 1.4157e-01],
        [6.8271e-05, 4.5443e-03],
        [1.0648e-03, 4.9570e-02],
        [1.1867e-03, 8.7630e-02],
        [8.9923e-04, 2.0794e-02],
        [1.0131e-03, 5.0727e-03],
        [5.7086e-04, 1.4093e-02],
        [5.8185e-04, 1.8869e-02],
        [5.0646e-04, 1.7513e-02],
        [4.7449e-04, 1.5840e-02],
        [7.2341e-04, 5.4282e-02],
        [3.6366e-04, 2.2147e-02],
        [7.6137e-04, 1.2244e-02]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0010],
        [0.0003],
        [0.0003],
        [0.0007],
        [0.0018],
        [0.0001],
        [0.0007],
        [0.0005],
        [0.0008],
        [0.0008],
        [0.0003],
        [0.0013],
        [0.0007],
        [0.0004],
        [0.0044]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0003, 0.0003, 0.0007, 0.0018, 0.0001, 0.0007, 0.0005,
         0.0008, 0.0008, 0.0003, 0.0013, 0.0007, 0.0004, 0.0044]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0062],
        [0.0162],
        [0.0008],
        [0.0621],
        [0.0404],
        [0.0018],
        [0.0270],
        [0.0417],
        [0.0577],
        [0.0016],
        [0.0109],
        [0.0021],
        [0.0239],
        [0.0169],
        [0.0928]], device='cuda:0')/tensor([[0.0006, 0.0062, 0.0162, 0.0008, 0.0621, 0.0404, 0.0018, 0.0270, 0.0417,
         0.0577, 0.0016, 0.0109, 0.0021, 0.0239, 0.0169, 0.0928]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0006],
        [0.0010, 0.0062],
        [0.0003, 0.0162],
        [0.0003, 0.0008],
        [0.0007, 0.0621],
        [0.0018, 0.0404],
        [0.0001, 0.0018],
        [0.0007, 0.0270],
        [0.0005, 0.0417],
        [0.0008, 0.0577],
        [0.0008, 0.0016],
        [0.0003, 0.0109],
        [0.0013, 0.0021],
        [0.0007, 0.0239],
        [0.0004, 0.0169],
        [0.0044, 0.0928]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0108e-03],
        [2.7481e-03],
        [1.7653e-03],
        [4.7126e-04],
        [4.8484e-04],
        [1.2274e-03],
        [1.1095e-03],
        [1.2861e-03],
        [6.5907e-04],
        [3.1921e-04],
        [6.6649e-04],
        [6.3586e-05],
        [5.4962e-04],
        [5.3819e-04],
        [4.4076e-04],
        [5.6970e-04]], device='cuda:0')/tensor([[1.0108e-03, 2.7481e-03, 1.7653e-03, 4.7126e-04, 4.8484e-04, 1.2274e-03,
         1.1095e-03, 1.2861e-03, 6.5907e-04, 3.1921e-04, 6.6649e-04, 6.3586e-05,
         5.4962e-04, 5.3819e-04, 4.4076e-04, 5.6970e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0092],
        [0.1602],
        [0.0044],
        [0.0064],
        [0.0011],
        [0.0174],
        [0.0611],
        [0.0028],
        [0.0134],
        [0.0263],
        [0.0178],
        [0.0035],
        [0.0997],
        [0.0311],
        [0.0132],
        [0.0824]], device='cuda:0')/tensor([[0.0092, 0.1602, 0.0044, 0.0064, 0.0011, 0.0174, 0.0611, 0.0028, 0.0134,
         0.0263, 0.0178, 0.0035, 0.0997, 0.0311, 0.0132, 0.0824]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0108e-03, 9.1943e-03],
        [2.7481e-03, 1.6018e-01],
        [1.7653e-03, 4.4312e-03],
        [4.7126e-04, 6.4483e-03],
        [4.8484e-04, 1.1096e-03],
        [1.2274e-03, 1.7381e-02],
        [1.1095e-03, 6.1124e-02],
        [1.2861e-03, 2.7999e-03],
        [6.5907e-04, 1.3417e-02],
        [3.1921e-04, 2.6303e-02],
        [6.6649e-04, 1.7821e-02],
        [6.3586e-05, 3.4868e-03],
        [5.4962e-04, 9.9741e-02],
        [5.3819e-04, 3.1148e-02],
        [4.4076e-04, 1.3166e-02],
        [5.6970e-04, 8.2410e-02]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0016],
        [0.0003],
        [0.0015],
        [0.0010],
        [0.0017],
        [0.0006],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0016],
        [0.0004],
        [0.0006],
        [0.0025],
        [0.0022],
        [0.0007]], device='cuda:0')/tensor([[0.0014, 0.0016, 0.0003, 0.0015, 0.0010, 0.0017, 0.0006, 0.0003, 0.0004,
         0.0002, 0.0016, 0.0004, 0.0006, 0.0025, 0.0022, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0986],
        [0.0551],
        [0.0004],
        [0.0558],
        [0.0042],
        [0.0449],
        [0.0048],
        [0.0011],
        [0.0009],
        [0.0106],
        [0.0340],
        [0.0076],
        [0.0913],
        [0.0441],
        [0.0121],
        [0.0028]], device='cuda:0')/tensor([[0.0986, 0.0551, 0.0004, 0.0558, 0.0042, 0.0449, 0.0048, 0.0011, 0.0009,
         0.0106, 0.0340, 0.0076, 0.0913, 0.0441, 0.0121, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0014, 0.0986],
        [0.0016, 0.0551],
        [0.0003, 0.0004],
        [0.0015, 0.0558],
        [0.0010, 0.0042],
        [0.0017, 0.0449],
        [0.0006, 0.0048],
        [0.0003, 0.0011],
        [0.0004, 0.0009],
        [0.0002, 0.0106],
        [0.0016, 0.0340],
        [0.0004, 0.0076],
        [0.0006, 0.0913],
        [0.0025, 0.0441],
        [0.0022, 0.0121],
        [0.0007, 0.0028]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0014],
        [0.0028],
        [0.0012],
        [0.0009],
        [0.0006],
        [0.0027],
        [0.0021],
        [0.0009],
        [0.0014],
        [0.0008],
        [0.0020],
        [0.0012],
        [0.0033],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0014, 0.0028, 0.0012, 0.0009, 0.0006, 0.0027, 0.0021, 0.0009,
         0.0014, 0.0008, 0.0020, 0.0012, 0.0033, 0.0006, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0301],
        [0.0573],
        [0.0168],
        [0.0100],
        [0.0702],
        [0.0114],
        [0.0662],
        [0.0373],
        [0.0128],
        [0.0696],
        [0.0091],
        [0.0405],
        [0.0078],
        [0.0193],
        [0.0026],
        [0.0076]], device='cuda:0')/tensor([[0.0301, 0.0573, 0.0168, 0.0100, 0.0702, 0.0114, 0.0662, 0.0373, 0.0128,
         0.0696, 0.0091, 0.0405, 0.0078, 0.0193, 0.0026, 0.0076]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0301],
        [0.0014, 0.0573],
        [0.0028, 0.0168],
        [0.0012, 0.0100],
        [0.0009, 0.0702],
        [0.0006, 0.0114],
        [0.0027, 0.0662],
        [0.0021, 0.0373],
        [0.0009, 0.0128],
        [0.0014, 0.0696],
        [0.0008, 0.0091],
        [0.0020, 0.0405],
        [0.0012, 0.0078],
        [0.0033, 0.0193],
        [0.0006, 0.0026],
        [0.0013, 0.0076]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0014],
        [0.0011],
        [0.0001],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0017],
        [0.0002],
        [0.0009],
        [0.0009],
        [0.0021],
        [0.0002],
        [0.0018],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0014, 0.0011, 0.0001, 0.0004, 0.0005, 0.0003, 0.0017, 0.0002,
         0.0009, 0.0009, 0.0021, 0.0002, 0.0018, 0.0002, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0070],
        [0.0037],
        [0.0358],
        [0.0151],
        [0.0099],
        [0.0110],
        [0.0193],
        [0.0131],
        [0.0047],
        [0.0134],
        [0.0020],
        [0.0073],
        [0.0006],
        [0.0103],
        [0.0175],
        [0.0349]], device='cuda:0')/tensor([[0.0070, 0.0037, 0.0358, 0.0151, 0.0099, 0.0110, 0.0193, 0.0131, 0.0047,
         0.0134, 0.0020, 0.0073, 0.0006, 0.0103, 0.0175, 0.0349]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0070],
        [0.0014, 0.0037],
        [0.0011, 0.0358],
        [0.0001, 0.0151],
        [0.0004, 0.0099],
        [0.0005, 0.0110],
        [0.0003, 0.0193],
        [0.0017, 0.0131],
        [0.0002, 0.0047],
        [0.0009, 0.0134],
        [0.0009, 0.0020],
        [0.0021, 0.0073],
        [0.0002, 0.0006],
        [0.0018, 0.0103],
        [0.0002, 0.0175],
        [0.0004, 0.0349]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0006],
        [0.0004],
        [0.0017],
        [0.0005],
        [0.0010],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0016],
        [0.0004],
        [0.0018],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0006, 0.0004, 0.0017, 0.0005, 0.0010, 0.0004, 0.0006,
         0.0002, 0.0002, 0.0006, 0.0016, 0.0004, 0.0018, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0186],
        [0.0086],
        [0.0377],
        [0.0049],
        [0.0481],
        [0.0122],
        [0.0106],
        [0.0019],
        [0.0069],
        [0.0125],
        [0.0006],
        [0.0340],
        [0.0084],
        [0.0232],
        [0.0408],
        [0.0022]], device='cuda:0')/tensor([[0.0186, 0.0086, 0.0377, 0.0049, 0.0481, 0.0122, 0.0106, 0.0019, 0.0069,
         0.0125, 0.0006, 0.0340, 0.0084, 0.0232, 0.0408, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0186],
        [0.0002, 0.0086],
        [0.0006, 0.0377],
        [0.0004, 0.0049],
        [0.0017, 0.0481],
        [0.0005, 0.0122],
        [0.0010, 0.0106],
        [0.0004, 0.0019],
        [0.0006, 0.0069],
        [0.0002, 0.0125],
        [0.0002, 0.0006],
        [0.0006, 0.0340],
        [0.0016, 0.0084],
        [0.0004, 0.0232],
        [0.0018, 0.0408],
        [0.0011, 0.0022]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1252e-03],
        [1.0965e-03],
        [1.2782e-03],
        [7.5858e-04],
        [2.6917e-04],
        [2.2968e-03],
        [9.5829e-05],
        [1.1879e-03],
        [1.0831e-03],
        [8.7479e-04],
        [1.0625e-03],
        [8.7244e-04],
        [6.7497e-04],
        [2.3260e-03],
        [2.5628e-03],
        [5.7894e-04]], device='cuda:0')/tensor([[2.1252e-03, 1.0965e-03, 1.2782e-03, 7.5858e-04, 2.6917e-04, 2.2968e-03,
         9.5829e-05, 1.1879e-03, 1.0831e-03, 8.7479e-04, 1.0625e-03, 8.7244e-04,
         6.7497e-04, 2.3260e-03, 2.5628e-03, 5.7894e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0269],
        [0.0017],
        [0.0166],
        [0.0498],
        [0.0009],
        [0.0172],
        [0.0113],
        [0.0221],
        [0.0022],
        [0.0027],
        [0.0269],
        [0.0033],
        [0.0014],
        [0.0019],
        [0.0894],
        [0.0153]], device='cuda:0')/tensor([[0.0269, 0.0017, 0.0166, 0.0498, 0.0009, 0.0172, 0.0113, 0.0221, 0.0022,
         0.0027, 0.0269, 0.0033, 0.0014, 0.0019, 0.0894, 0.0153]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1252e-03, 2.6910e-02],
        [1.0965e-03, 1.6872e-03],
        [1.2782e-03, 1.6604e-02],
        [7.5858e-04, 4.9834e-02],
        [2.6917e-04, 8.5881e-04],
        [2.2968e-03, 1.7187e-02],
        [9.5829e-05, 1.1286e-02],
        [1.1879e-03, 2.2138e-02],
        [1.0831e-03, 2.1855e-03],
        [8.7479e-04, 2.6777e-03],
        [1.0625e-03, 2.6855e-02],
        [8.7244e-04, 3.3480e-03],
        [6.7497e-04, 1.4146e-03],
        [2.3260e-03, 1.9421e-03],
        [2.5628e-03, 8.9359e-02],
        [5.7894e-04, 1.5315e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0044],
        [0.0007],
        [0.0003],
        [0.0008],
        [0.0008],
        [0.0008],
        [0.0017],
        [0.0005],
        [0.0007],
        [0.0023],
        [0.0017],
        [0.0008],
        [0.0001],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0010, 0.0044, 0.0007, 0.0003, 0.0008, 0.0008, 0.0008, 0.0017, 0.0005,
         0.0007, 0.0023, 0.0017, 0.0008, 0.0001, 0.0008, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0139],
        [0.0369],
        [0.0265],
        [0.0136],
        [0.0290],
        [0.0012],
        [0.0251],
        [0.0491],
        [0.0113],
        [0.0156],
        [0.0080],
        [0.0153],
        [0.0871],
        [0.0010],
        [0.0027],
        [0.0131]], device='cuda:0')/tensor([[0.0139, 0.0369, 0.0265, 0.0136, 0.0290, 0.0012, 0.0251, 0.0491, 0.0113,
         0.0156, 0.0080, 0.0153, 0.0871, 0.0010, 0.0027, 0.0131]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0139],
        [0.0044, 0.0369],
        [0.0007, 0.0265],
        [0.0003, 0.0136],
        [0.0008, 0.0290],
        [0.0008, 0.0012],
        [0.0008, 0.0251],
        [0.0017, 0.0491],
        [0.0005, 0.0113],
        [0.0007, 0.0156],
        [0.0023, 0.0080],
        [0.0017, 0.0153],
        [0.0008, 0.0871],
        [0.0001, 0.0010],
        [0.0008, 0.0027],
        [0.0007, 0.0131]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0040],
        [0.0041],
        [0.0001],
        [0.0002],
        [0.0007],
        [0.0015],
        [0.0004],
        [0.0015],
        [0.0006],
        [0.0001],
        [0.0005],
        [0.0016],
        [0.0015],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0009, 0.0040, 0.0041, 0.0001, 0.0002, 0.0007, 0.0015, 0.0004, 0.0015,
         0.0006, 0.0001, 0.0005, 0.0016, 0.0015, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0344],
        [0.0145],
        [0.1038],
        [0.0051],
        [0.0249],
        [0.0319],
        [0.0079],
        [0.1554],
        [0.0226],
        [0.0083],
        [0.0398],
        [0.0197],
        [0.1956],
        [0.0390],
        [0.0372],
        [0.0025]], device='cuda:0')/tensor([[0.0344, 0.0145, 0.1038, 0.0051, 0.0249, 0.0319, 0.0079, 0.1554, 0.0226,
         0.0083, 0.0398, 0.0197, 0.1956, 0.0390, 0.0372, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.6254e-04, 3.4449e-02],
        [4.0347e-03, 1.4477e-02],
        [4.1363e-03, 1.0378e-01],
        [1.1737e-04, 5.1156e-03],
        [2.3687e-04, 2.4867e-02],
        [6.5897e-04, 3.1876e-02],
        [1.5322e-03, 7.8742e-03],
        [3.8381e-04, 1.5543e-01],
        [1.5333e-03, 2.2620e-02],
        [6.1219e-04, 8.2718e-03],
        [1.4977e-04, 3.9760e-02],
        [5.0416e-04, 1.9690e-02],
        [1.6051e-03, 1.9558e-01],
        [1.5279e-03, 3.9043e-02],
        [3.7339e-04, 3.7201e-02],
        [4.4050e-04, 2.4714e-03]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.3319e-05],
        [8.9703e-04],
        [4.2562e-04],
        [1.8449e-04],
        [4.8094e-04],
        [4.1694e-04],
        [4.6523e-04],
        [2.5941e-04],
        [4.8992e-04],
        [7.2212e-04],
        [1.5684e-03],
        [4.8982e-04],
        [1.7137e-03],
        [8.1349e-04],
        [8.0134e-04],
        [6.8085e-04]], device='cuda:0')/tensor([[7.3319e-05, 8.9703e-04, 4.2562e-04, 1.8449e-04, 4.8094e-04, 4.1694e-04,
         4.6523e-04, 2.5941e-04, 4.8992e-04, 7.2212e-04, 1.5684e-03, 4.8982e-04,
         1.7137e-03, 8.1349e-04, 8.0134e-04, 6.8085e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0026],
        [0.0173],
        [0.0042],
        [0.0027],
        [0.0168],
        [0.0506],
        [0.0047],
        [0.0004],
        [0.0116],
        [0.0041],
        [0.0056],
        [0.0354],
        [0.0141],
        [0.0040],
        [0.0046],
        [0.0495]], device='cuda:0')/tensor([[0.0026, 0.0173, 0.0042, 0.0027, 0.0168, 0.0506, 0.0047, 0.0004, 0.0116,
         0.0041, 0.0056, 0.0354, 0.0141, 0.0040, 0.0046, 0.0495]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.3319e-05, 2.5773e-03],
        [8.9703e-04, 1.7286e-02],
        [4.2562e-04, 4.2295e-03],
        [1.8449e-04, 2.7251e-03],
        [4.8094e-04, 1.6820e-02],
        [4.1694e-04, 5.0557e-02],
        [4.6523e-04, 4.7094e-03],
        [2.5941e-04, 3.7185e-04],
        [4.8992e-04, 1.1618e-02],
        [7.2212e-04, 4.0785e-03],
        [1.5684e-03, 5.6342e-03],
        [4.8982e-04, 3.5430e-02],
        [1.7137e-03, 1.4103e-02],
        [8.1349e-04, 4.0035e-03],
        [8.0134e-04, 4.6488e-03],
        [6.8085e-04, 4.9541e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[1.2783e-03],
        [5.1397e-04],
        [8.0502e-05],
        [9.6068e-05],
        [1.5189e-03],
        [1.1792e-03],
        [5.8344e-04],
        [1.0123e-03]], device='cuda:0')/tensor([[1.2783e-03, 5.1397e-04, 8.0502e-05, 9.6068e-05, 1.5189e-03, 1.1792e-03,
         5.8344e-04, 1.0123e-03]], device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[9.0249e-03],
        [2.2394e-03],
        [1.2010e-04],
        [1.4451e-02],
        [1.2893e-01],
        [7.5275e-02],
        [1.0034e-03],
        [2.3249e-02]], device='cuda:0')/tensor([[9.0249e-03, 2.2394e-03, 1.2010e-04, 1.4451e-02, 1.2893e-01, 7.5275e-02,
         1.0034e-03, 2.3249e-02]], device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[1.2783e-03, 9.0249e-03],
        [5.1397e-04, 2.2394e-03],
        [8.0502e-05, 1.2010e-04],
        [9.6068e-05, 1.4451e-02],
        [1.5189e-03, 1.2893e-01],
        [1.1792e-03, 7.5275e-02],
        [5.8344e-04, 1.0034e-03],
        [1.0123e-03, 2.3249e-02]], device='cuda:0')
acc:  0.505
Time taken to execute the de SA task with prompt type identical_modal, variation 3 and batchsize 16: 0:03:16.914079
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_3']
----------- 42 de google/flan-t5-base SA identical_modal 4 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 351.26it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0003],
        [0.0007],
        [0.0001],
        [0.0012],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0012],
        [0.0010],
        [0.0009],
        [0.0007],
        [0.0001]], device='cuda:0')/tensor([[0.0012, 0.0003, 0.0007, 0.0001, 0.0012, 0.0005, 0.0003, 0.0007, 0.0004,
         0.0004, 0.0003, 0.0012, 0.0010, 0.0009, 0.0007, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.0926e-03],
        [6.4317e-03],
        [3.9668e-03],
        [9.1693e-05],
        [3.1990e-02],
        [9.6268e-03],
        [5.1594e-04],
        [4.4666e-02],
        [1.7810e-02],
        [1.7846e-02],
        [4.9201e-04],
        [3.9200e-03],
        [5.8129e-02],
        [1.3103e-03],
        [3.9004e-03],
        [1.6105e-04]], device='cuda:0')/tensor([[3.0926e-03, 6.4317e-03, 3.9668e-03, 9.1693e-05, 3.1990e-02, 9.6268e-03,
         5.1594e-04, 4.4666e-02, 1.7810e-02, 1.7846e-02, 4.9201e-04, 3.9200e-03,
         5.8129e-02, 1.3103e-03, 3.9004e-03, 1.6105e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2285e-03, 3.0926e-03],
        [2.5720e-04, 6.4317e-03],
        [7.4760e-04, 3.9668e-03],
        [1.4120e-04, 9.1693e-05],
        [1.2061e-03, 3.1990e-02],
        [5.1869e-04, 9.6268e-03],
        [3.0748e-04, 5.1594e-04],
        [7.3181e-04, 4.4666e-02],
        [4.1219e-04, 1.7810e-02],
        [3.5875e-04, 1.7846e-02],
        [2.9685e-04, 4.9201e-04],
        [1.2453e-03, 3.9200e-03],
        [9.7786e-04, 5.8129e-02],
        [9.3179e-04, 1.3103e-03],
        [7.1563e-04, 3.9004e-03],
        [1.0654e-04, 1.6105e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0009],
        [0.0002],
        [0.0010],
        [0.0017],
        [0.0004],
        [0.0005],
        [0.0021],
        [0.0003]], device='cuda:0')/tensor([[0.0012, 0.0004, 0.0002, 0.0004, 0.0003, 0.0006, 0.0002, 0.0005, 0.0009,
         0.0002, 0.0010, 0.0017, 0.0004, 0.0005, 0.0021, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2707e-03],
        [6.6129e-04],
        [3.5707e-04],
        [1.9914e-03],
        [6.8942e-04],
        [1.0440e-03],
        [5.0433e-05],
        [5.8953e-03],
        [1.0576e-02],
        [7.9257e-04],
        [1.7998e-03],
        [3.8366e-02],
        [1.9410e-02],
        [5.7865e-03],
        [2.9998e-02],
        [1.9902e-04]], device='cuda:0')/tensor([[3.2707e-03, 6.6129e-04, 3.5707e-04, 1.9914e-03, 6.8942e-04, 1.0440e-03,
         5.0433e-05, 5.8953e-03, 1.0576e-02, 7.9257e-04, 1.7998e-03, 3.8366e-02,
         1.9410e-02, 5.7865e-03, 2.9998e-02, 1.9902e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2365e-03, 3.2707e-03],
        [3.7258e-04, 6.6129e-04],
        [2.2411e-04, 3.5707e-04],
        [4.4482e-04, 1.9914e-03],
        [2.9270e-04, 6.8942e-04],
        [5.6035e-04, 1.0440e-03],
        [1.7405e-04, 5.0433e-05],
        [4.9682e-04, 5.8953e-03],
        [9.3586e-04, 1.0576e-02],
        [1.6595e-04, 7.9257e-04],
        [1.0337e-03, 1.7998e-03],
        [1.6508e-03, 3.8366e-02],
        [3.6015e-04, 1.9410e-02],
        [5.2022e-04, 5.7865e-03],
        [2.1337e-03, 2.9998e-02],
        [3.2367e-04, 1.9902e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0020],
        [0.0007],
        [0.0003],
        [0.0028],
        [0.0009],
        [0.0014],
        [0.0007],
        [0.0004],
        [0.0008],
        [0.0019],
        [0.0044],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0016]], device='cuda:0')/tensor([[0.0020, 0.0007, 0.0003, 0.0028, 0.0009, 0.0014, 0.0007, 0.0004, 0.0008,
         0.0019, 0.0044, 0.0005, 0.0005, 0.0003, 0.0005, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0279],
        [0.0006],
        [0.0067],
        [0.0105],
        [0.0232],
        [0.0015],
        [0.0021],
        [0.0066],
        [0.0457],
        [0.0053],
        [0.0073],
        [0.0029],
        [0.0308],
        [0.0126],
        [0.0076],
        [0.0168]], device='cuda:0')/tensor([[0.0279, 0.0006, 0.0067, 0.0105, 0.0232, 0.0015, 0.0021, 0.0066, 0.0457,
         0.0053, 0.0073, 0.0029, 0.0308, 0.0126, 0.0076, 0.0168]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0020, 0.0279],
        [0.0007, 0.0006],
        [0.0003, 0.0067],
        [0.0028, 0.0105],
        [0.0009, 0.0232],
        [0.0014, 0.0015],
        [0.0007, 0.0021],
        [0.0004, 0.0066],
        [0.0008, 0.0457],
        [0.0019, 0.0053],
        [0.0044, 0.0073],
        [0.0005, 0.0029],
        [0.0005, 0.0308],
        [0.0003, 0.0126],
        [0.0005, 0.0076],
        [0.0016, 0.0168]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0005],
        [0.0007],
        [0.0002],
        [0.0014],
        [0.0009],
        [0.0014],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0012],
        [0.0014],
        [0.0011],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0007, 0.0002, 0.0014, 0.0009, 0.0014, 0.0002, 0.0004,
         0.0003, 0.0002, 0.0012, 0.0014, 0.0011, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0068],
        [0.0176],
        [0.0530],
        [0.0065],
        [0.0020],
        [0.0028],
        [0.0363],
        [0.0025],
        [0.0070],
        [0.0385],
        [0.0215],
        [0.0480],
        [0.0922],
        [0.0615],
        [0.0168],
        [0.0134]], device='cuda:0')/tensor([[0.0068, 0.0176, 0.0530, 0.0065, 0.0020, 0.0028, 0.0363, 0.0025, 0.0070,
         0.0385, 0.0215, 0.0480, 0.0922, 0.0615, 0.0168, 0.0134]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0068],
        [0.0005, 0.0176],
        [0.0007, 0.0530],
        [0.0002, 0.0065],
        [0.0014, 0.0020],
        [0.0009, 0.0028],
        [0.0014, 0.0363],
        [0.0002, 0.0025],
        [0.0004, 0.0070],
        [0.0003, 0.0385],
        [0.0002, 0.0215],
        [0.0012, 0.0480],
        [0.0014, 0.0922],
        [0.0011, 0.0615],
        [0.0006, 0.0168],
        [0.0005, 0.0134]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.5871e-04],
        [5.7338e-04],
        [2.8376e-04],
        [6.6164e-04],
        [1.8730e-04],
        [8.9945e-04],
        [5.0374e-04],
        [7.4230e-05],
        [4.5313e-04],
        [1.3192e-03],
        [1.3947e-04],
        [7.8274e-05],
        [9.8601e-04],
        [9.0545e-05],
        [1.9230e-03],
        [7.3931e-04]], device='cuda:0')/tensor([[8.5871e-04, 5.7338e-04, 2.8376e-04, 6.6164e-04, 1.8730e-04, 8.9945e-04,
         5.0374e-04, 7.4230e-05, 4.5313e-04, 1.3192e-03, 1.3947e-04, 7.8274e-05,
         9.8601e-04, 9.0545e-05, 1.9230e-03, 7.3931e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8269e-02],
        [4.4141e-02],
        [2.6765e-02],
        [5.5932e-02],
        [1.3611e-02],
        [1.3802e-02],
        [1.6073e-02],
        [6.9157e-05],
        [2.7984e-02],
        [2.4042e-02],
        [1.7364e-02],
        [5.1454e-03],
        [1.3424e-03],
        [2.1432e-03],
        [4.2754e-02],
        [3.0112e-02]], device='cuda:0')/tensor([[3.8269e-02, 4.4141e-02, 2.6765e-02, 5.5932e-02, 1.3611e-02, 1.3802e-02,
         1.6073e-02, 6.9157e-05, 2.7984e-02, 2.4042e-02, 1.7364e-02, 5.1454e-03,
         1.3424e-03, 2.1432e-03, 4.2754e-02, 3.0112e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.5871e-04, 3.8269e-02],
        [5.7338e-04, 4.4141e-02],
        [2.8376e-04, 2.6765e-02],
        [6.6164e-04, 5.5932e-02],
        [1.8730e-04, 1.3611e-02],
        [8.9945e-04, 1.3802e-02],
        [5.0374e-04, 1.6073e-02],
        [7.4230e-05, 6.9157e-05],
        [4.5313e-04, 2.7984e-02],
        [1.3192e-03, 2.4042e-02],
        [1.3947e-04, 1.7364e-02],
        [7.8274e-05, 5.1454e-03],
        [9.8601e-04, 1.3424e-03],
        [9.0545e-05, 2.1432e-03],
        [1.9230e-03, 4.2754e-02],
        [7.3931e-04, 3.0112e-02]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0018],
        [0.0008],
        [0.0024],
        [0.0004],
        [0.0038],
        [0.0017],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0018, 0.0008, 0.0024, 0.0004, 0.0038, 0.0017, 0.0002,
         0.0002, 0.0003, 0.0006, 0.0003, 0.0003, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0122],
        [0.0186],
        [0.0689],
        [0.0043],
        [0.0432],
        [0.0023],
        [0.0158],
        [0.0875],
        [0.0081],
        [0.0064],
        [0.0019],
        [0.0016],
        [0.0040],
        [0.0112],
        [0.0100],
        [0.0443]], device='cuda:0')/tensor([[0.0122, 0.0186, 0.0689, 0.0043, 0.0432, 0.0023, 0.0158, 0.0875, 0.0081,
         0.0064, 0.0019, 0.0016, 0.0040, 0.0112, 0.0100, 0.0443]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0122],
        [0.0011, 0.0186],
        [0.0018, 0.0689],
        [0.0008, 0.0043],
        [0.0024, 0.0432],
        [0.0004, 0.0023],
        [0.0038, 0.0158],
        [0.0017, 0.0875],
        [0.0002, 0.0081],
        [0.0002, 0.0064],
        [0.0003, 0.0019],
        [0.0006, 0.0016],
        [0.0003, 0.0040],
        [0.0003, 0.0112],
        [0.0005, 0.0100],
        [0.0008, 0.0443]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0029],
        [0.0006],
        [0.0006],
        [0.0008],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0002],
        [0.0047],
        [0.0015],
        [0.0004],
        [0.0006],
        [0.0009],
        [0.0014]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0029, 0.0006, 0.0006, 0.0008, 0.0005, 0.0004, 0.0004,
         0.0002, 0.0047, 0.0015, 0.0004, 0.0006, 0.0009, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0077],
        [0.0033],
        [0.0608],
        [0.0150],
        [0.0014],
        [0.0037],
        [0.0073],
        [0.0016],
        [0.0125],
        [0.0011],
        [0.0532],
        [0.0174],
        [0.0020],
        [0.0005],
        [0.0057],
        [0.0085]], device='cuda:0')/tensor([[0.0077, 0.0033, 0.0608, 0.0150, 0.0014, 0.0037, 0.0073, 0.0016, 0.0125,
         0.0011, 0.0532, 0.0174, 0.0020, 0.0005, 0.0057, 0.0085]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0077],
        [0.0003, 0.0033],
        [0.0029, 0.0608],
        [0.0006, 0.0150],
        [0.0006, 0.0014],
        [0.0008, 0.0037],
        [0.0005, 0.0073],
        [0.0004, 0.0016],
        [0.0004, 0.0125],
        [0.0002, 0.0011],
        [0.0047, 0.0532],
        [0.0015, 0.0174],
        [0.0004, 0.0020],
        [0.0006, 0.0005],
        [0.0009, 0.0057],
        [0.0014, 0.0085]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.6422e-04],
        [7.1561e-04],
        [2.6762e-03],
        [7.4098e-05],
        [7.6796e-04],
        [1.3812e-03],
        [4.2162e-04],
        [6.9775e-04],
        [1.9116e-03],
        [5.2679e-04],
        [2.5182e-03],
        [7.2782e-04],
        [3.8165e-04],
        [3.8477e-04],
        [1.0890e-03],
        [1.2046e-03]], device='cuda:0')/tensor([[3.6422e-04, 7.1561e-04, 2.6762e-03, 7.4098e-05, 7.6796e-04, 1.3812e-03,
         4.2162e-04, 6.9775e-04, 1.9116e-03, 5.2679e-04, 2.5182e-03, 7.2782e-04,
         3.8165e-04, 3.8477e-04, 1.0890e-03, 1.2046e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0141],
        [0.0166],
        [0.0348],
        [0.0014],
        [0.0278],
        [0.1129],
        [0.0135],
        [0.0008],
        [0.0524],
        [0.0173],
        [0.0085],
        [0.0013],
        [0.0106],
        [0.0005],
        [0.0165],
        [0.0778]], device='cuda:0')/tensor([[0.0141, 0.0166, 0.0348, 0.0014, 0.0278, 0.1129, 0.0135, 0.0008, 0.0524,
         0.0173, 0.0085, 0.0013, 0.0106, 0.0005, 0.0165, 0.0778]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6422e-04, 1.4084e-02],
        [7.1561e-04, 1.6590e-02],
        [2.6762e-03, 3.4812e-02],
        [7.4098e-05, 1.3573e-03],
        [7.6796e-04, 2.7772e-02],
        [1.3812e-03, 1.1290e-01],
        [4.2162e-04, 1.3467e-02],
        [6.9775e-04, 8.3806e-04],
        [1.9116e-03, 5.2420e-02],
        [5.2679e-04, 1.7315e-02],
        [2.5182e-03, 8.4534e-03],
        [7.2782e-04, 1.2957e-03],
        [3.8165e-04, 1.0642e-02],
        [3.8477e-04, 4.5152e-04],
        [1.0890e-03, 1.6453e-02],
        [1.2046e-03, 7.7765e-02]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0014],
        [0.0029],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0001],
        [0.0005],
        [0.0017],
        [0.0020],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0014, 0.0029, 0.0005, 0.0005, 0.0005, 0.0002, 0.0001, 0.0005,
         0.0017, 0.0020, 0.0002, 0.0005, 0.0004, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/de/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0099],
        [0.0012],
        [0.0621],
        [0.0093],
        [0.0057],
        [0.0341],
        [0.0002],
        [0.0018],
        [0.0013],
        [0.0378],
        [0.0439],
        [0.0115],
        [0.0130],
        [0.0019],
        [0.0038],
        [0.0014]], device='cuda:0')/tensor([[0.0099, 0.0012, 0.0621, 0.0093, 0.0057, 0.0341, 0.0002, 0.0018, 0.0013,
         0.0378, 0.0439, 0.0115, 0.0130, 0.0019, 0.0038, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0099],
        [0.0014, 0.0012],
        [0.0029, 0.0621],
        [0.0005, 0.0093],
        [0.0005, 0.0057],
        [0.0005, 0.0341],
        [0.0002, 0.0002],
        [0.0001, 0.0018],
        [0.0005, 0.0013],
        [0.0017, 0.0378],
        [0.0020, 0.0439],
        [0.0002, 0.0115],
        [0.0005, 0.0130],
        [0.0004, 0.0019],
        [0.0009, 0.0038],
        [0.0007, 0.0014]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0018],
        [0.0005],
        [0.0004],
        [0.0006],
        [0.0006],
        [0.0013],
        [0.0038],
        [0.0011],
        [0.0018],
        [0.0015],
        [0.0013],
        [0.0003],
        [0.0003],
        [0.0007],
        [0.0004]], device='cuda:0')/tensor([[0.0005, 0.0018, 0.0005, 0.0004, 0.0006, 0.0006, 0.0013, 0.0038, 0.0011,
         0.0018, 0.0015, 0.0013, 0.0003, 0.0003, 0.0007, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0215],
        [0.0061],
        [0.0657],
        [0.0059],
        [0.0430],
        [0.0013],
        [0.0060],
        [0.0252],
        [0.0017],
        [0.0041],
        [0.0054],
        [0.0306],
        [0.0143],
        [0.0189],
        [0.1048],
        [0.0241]], device='cuda:0')/tensor([[0.0215, 0.0061, 0.0657, 0.0059, 0.0430, 0.0013, 0.0060, 0.0252, 0.0017,
         0.0041, 0.0054, 0.0306, 0.0143, 0.0189, 0.1048, 0.0241]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0215],
        [0.0018, 0.0061],
        [0.0005, 0.0657],
        [0.0004, 0.0059],
        [0.0006, 0.0430],
        [0.0006, 0.0013],
        [0.0013, 0.0060],
        [0.0038, 0.0252],
        [0.0011, 0.0017],
        [0.0018, 0.0041],
        [0.0015, 0.0054],
        [0.0013, 0.0306],
        [0.0003, 0.0143],
        [0.0003, 0.0189],
        [0.0007, 0.1048],
        [0.0004, 0.0241]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0005],
        [0.0007],
        [0.0010],
        [0.0004],
        [0.0013],
        [0.0012],
        [0.0005],
        [0.0006],
        [0.0010],
        [0.0006],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0017, 0.0005, 0.0007, 0.0010, 0.0004, 0.0013, 0.0012, 0.0005, 0.0006,
         0.0010, 0.0006, 0.0006, 0.0003, 0.0003, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0101],
        [0.0149],
        [0.0043],
        [0.0058],
        [0.0011],
        [0.0012],
        [0.0013],
        [0.0031],
        [0.0412],
        [0.0052],
        [0.0123],
        [0.0109],
        [0.0043],
        [0.0026],
        [0.0129],
        [0.0006]], device='cuda:0')/tensor([[0.0101, 0.0149, 0.0043, 0.0058, 0.0011, 0.0012, 0.0013, 0.0031, 0.0412,
         0.0052, 0.0123, 0.0109, 0.0043, 0.0026, 0.0129, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0017, 0.0101],
        [0.0005, 0.0149],
        [0.0007, 0.0043],
        [0.0010, 0.0058],
        [0.0004, 0.0011],
        [0.0013, 0.0012],
        [0.0012, 0.0013],
        [0.0005, 0.0031],
        [0.0006, 0.0412],
        [0.0010, 0.0052],
        [0.0006, 0.0123],
        [0.0006, 0.0109],
        [0.0003, 0.0043],
        [0.0003, 0.0026],
        [0.0005, 0.0129],
        [0.0005, 0.0006]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0008],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0015],
        [0.0003],
        [0.0013],
        [0.0036],
        [0.0002],
        [0.0007],
        [0.0014],
        [0.0015],
        [0.0006],
        [0.0002],
        [0.0017]], device='cuda:0')/tensor([[0.0010, 0.0008, 0.0005, 0.0002, 0.0008, 0.0015, 0.0003, 0.0013, 0.0036,
         0.0002, 0.0007, 0.0014, 0.0015, 0.0006, 0.0002, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0378],
        [0.0060],
        [0.0045],
        [0.0028],
        [0.0223],
        [0.0689],
        [0.0069],
        [0.0034],
        [0.0147],
        [0.0004],
        [0.0358],
        [0.0595],
        [0.0085],
        [0.0361],
        [0.0440],
        [0.0395]], device='cuda:0')/tensor([[0.0378, 0.0060, 0.0045, 0.0028, 0.0223, 0.0689, 0.0069, 0.0034, 0.0147,
         0.0004, 0.0358, 0.0595, 0.0085, 0.0361, 0.0440, 0.0395]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0378],
        [0.0008, 0.0060],
        [0.0005, 0.0045],
        [0.0002, 0.0028],
        [0.0008, 0.0223],
        [0.0015, 0.0689],
        [0.0003, 0.0069],
        [0.0013, 0.0034],
        [0.0036, 0.0147],
        [0.0002, 0.0004],
        [0.0007, 0.0358],
        [0.0014, 0.0595],
        [0.0015, 0.0085],
        [0.0006, 0.0361],
        [0.0002, 0.0440],
        [0.0017, 0.0395]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0011],
        [0.0019],
        [0.0002],
        [0.0001],
        [0.0003],
        [0.0003],
        [0.0014],
        [0.0002]], device='cuda:0')/tensor([[0.0011, 0.0019, 0.0002, 0.0001, 0.0003, 0.0003, 0.0014, 0.0002]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0801],
        [0.0463],
        [0.0114],
        [0.0030],
        [0.0449],
        [0.0147],
        [0.0038],
        [0.0360]], device='cuda:0')/tensor([[0.0801, 0.0463, 0.0114, 0.0030, 0.0449, 0.0147, 0.0038, 0.0360]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0011, 0.0801],
        [0.0019, 0.0463],
        [0.0002, 0.0114],
        [0.0001, 0.0030],
        [0.0003, 0.0449],
        [0.0003, 0.0147],
        [0.0014, 0.0038],
        [0.0002, 0.0360]], device='cuda:0')
acc:  0.54
Time taken to execute the de SA task with prompt type identical_modal, variation 4 and batchsize 16: 0:03:16.036599
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_4']
----------- 42 de google/flan-t5-base SA identical_modal 5 200 16 --------------
Loading MARC dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 190.79it/s]
MARC dataset loaded
Average length of review_body for rows with 1 star: 199.5979
Average length of review_body for rows with 5 star: 177.19965
len of lowest cat:  38908
len of pos_reviews, neg_reviews:  38908 38908
len dataset  77816
len dataset  200
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0004],
        [0.0013],
        [0.0028],
        [0.0010],
        [0.0018],
        [0.0021],
        [0.0005],
        [0.0006],
        [0.0008],
        [0.0007],
        [0.0013],
        [0.0001],
        [0.0005],
        [0.0007],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0004, 0.0013, 0.0028, 0.0010, 0.0018, 0.0021, 0.0005, 0.0006,
         0.0008, 0.0007, 0.0013, 0.0001, 0.0005, 0.0007, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0057],
        [0.0009],
        [0.0113],
        [0.0255],
        [0.0042],
        [0.0152],
        [0.0269],
        [0.0361],
        [0.0026],
        [0.0870],
        [0.0578],
        [0.0286],
        [0.0856],
        [0.0006],
        [0.0446],
        [0.0009]], device='cuda:0')/tensor([[0.0057, 0.0009, 0.0113, 0.0255, 0.0042, 0.0152, 0.0269, 0.0361, 0.0026,
         0.0870, 0.0578, 0.0286, 0.0856, 0.0006, 0.0446, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0005, 0.0057],
        [0.0004, 0.0009],
        [0.0013, 0.0113],
        [0.0028, 0.0255],
        [0.0010, 0.0042],
        [0.0018, 0.0152],
        [0.0021, 0.0269],
        [0.0005, 0.0361],
        [0.0006, 0.0026],
        [0.0008, 0.0870],
        [0.0007, 0.0578],
        [0.0013, 0.0286],
        [0.0001, 0.0856],
        [0.0005, 0.0006],
        [0.0007, 0.0446],
        [0.0007, 0.0009]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0001],
        [0.0008],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0012],
        [0.0006],
        [0.0002],
        [0.0016],
        [0.0018],
        [0.0003],
        [0.0034]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0001, 0.0008, 0.0006, 0.0002, 0.0003, 0.0005, 0.0004,
         0.0012, 0.0006, 0.0002, 0.0016, 0.0018, 0.0003, 0.0034]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0362],
        [0.0070],
        [0.0118],
        [0.0047],
        [0.0171],
        [0.0061],
        [0.0009],
        [0.0186],
        [0.0242],
        [0.0671],
        [0.0030],
        [0.0004],
        [0.0068],
        [0.0050],
        [0.0039],
        [0.0108]], device='cuda:0')/tensor([[0.0362, 0.0070, 0.0118, 0.0047, 0.0171, 0.0061, 0.0009, 0.0186, 0.0242,
         0.0671, 0.0030, 0.0004, 0.0068, 0.0050, 0.0039, 0.0108]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0007, 0.0362],
        [0.0002, 0.0070],
        [0.0001, 0.0118],
        [0.0008, 0.0047],
        [0.0006, 0.0171],
        [0.0002, 0.0061],
        [0.0003, 0.0009],
        [0.0005, 0.0186],
        [0.0004, 0.0242],
        [0.0012, 0.0671],
        [0.0006, 0.0030],
        [0.0002, 0.0004],
        [0.0016, 0.0068],
        [0.0018, 0.0050],
        [0.0003, 0.0039],
        [0.0034, 0.0108]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0008],
        [0.0017],
        [0.0001],
        [0.0008],
        [0.0006],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0004, 0.0001, 0.0003, 0.0006, 0.0005, 0.0005, 0.0003, 0.0002,
         0.0004, 0.0008, 0.0017, 0.0001, 0.0008, 0.0006, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0826],
        [0.0052],
        [0.0197],
        [0.0009],
        [0.0108],
        [0.0083],
        [0.0031],
        [0.0105],
        [0.0015],
        [0.0114],
        [0.0065],
        [0.0224],
        [0.0075],
        [0.0214],
        [0.0031],
        [0.0019]], device='cuda:0')/tensor([[0.0826, 0.0052, 0.0197, 0.0009, 0.0108, 0.0083, 0.0031, 0.0105, 0.0015,
         0.0114, 0.0065, 0.0224, 0.0075, 0.0214, 0.0031, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0012, 0.0826],
        [0.0004, 0.0052],
        [0.0001, 0.0197],
        [0.0003, 0.0009],
        [0.0006, 0.0108],
        [0.0005, 0.0083],
        [0.0005, 0.0031],
        [0.0003, 0.0105],
        [0.0002, 0.0015],
        [0.0004, 0.0114],
        [0.0008, 0.0065],
        [0.0017, 0.0224],
        [0.0001, 0.0075],
        [0.0008, 0.0214],
        [0.0006, 0.0031],
        [0.0006, 0.0019]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0017],
        [0.0003],
        [0.0013],
        [0.0019],
        [0.0013],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0009],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0019, 0.0017, 0.0003, 0.0013, 0.0019, 0.0013, 0.0004, 0.0004, 0.0007,
         0.0003, 0.0004, 0.0009, 0.0003, 0.0005, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0171],
        [0.0071],
        [0.0165],
        [0.0048],
        [0.0035],
        [0.0394],
        [0.0005],
        [0.0150],
        [0.0167],
        [0.0099],
        [0.0070],
        [0.0010],
        [0.0037],
        [0.0403],
        [0.0155],
        [0.0069]], device='cuda:0')/tensor([[0.0171, 0.0071, 0.0165, 0.0048, 0.0035, 0.0394, 0.0005, 0.0150, 0.0167,
         0.0099, 0.0070, 0.0010, 0.0037, 0.0403, 0.0155, 0.0069]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0019, 0.0171],
        [0.0017, 0.0071],
        [0.0003, 0.0165],
        [0.0013, 0.0048],
        [0.0019, 0.0035],
        [0.0013, 0.0394],
        [0.0004, 0.0005],
        [0.0004, 0.0150],
        [0.0007, 0.0167],
        [0.0003, 0.0099],
        [0.0004, 0.0070],
        [0.0009, 0.0010],
        [0.0003, 0.0037],
        [0.0005, 0.0403],
        [0.0002, 0.0155],
        [0.0006, 0.0069]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0013],
        [0.0008],
        [0.0012],
        [0.0015],
        [0.0008],
        [0.0016],
        [0.0010],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0031],
        [0.0020],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0013, 0.0008, 0.0012, 0.0015, 0.0008, 0.0016, 0.0010, 0.0004,
         0.0005, 0.0002, 0.0004, 0.0031, 0.0020, 0.0006, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0039],
        [0.0315],
        [0.0028],
        [0.2058],
        [0.0531],
        [0.0335],
        [0.0598],
        [0.0044],
        [0.0004],
        [0.0047],
        [0.0025],
        [0.0480],
        [0.1761],
        [0.1583],
        [0.0242],
        [0.0002]], device='cuda:0')/tensor([[0.0039, 0.0315, 0.0028, 0.2058, 0.0531, 0.0335, 0.0598, 0.0044, 0.0004,
         0.0047, 0.0025, 0.0480, 0.1761, 0.1583, 0.0242, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5579e-04, 3.8690e-03],
        [1.3070e-03, 3.1464e-02],
        [7.6201e-04, 2.7757e-03],
        [1.2496e-03, 2.0581e-01],
        [1.5391e-03, 5.3073e-02],
        [7.6957e-04, 3.3453e-02],
        [1.6378e-03, 5.9777e-02],
        [1.0005e-03, 4.4104e-03],
        [4.0746e-04, 3.6728e-04],
        [4.9706e-04, 4.7124e-03],
        [2.3045e-04, 2.4711e-03],
        [3.5847e-04, 4.7960e-02],
        [3.1043e-03, 1.7608e-01],
        [1.9606e-03, 1.5828e-01],
        [5.6225e-04, 2.4162e-02],
        [1.7905e-04, 2.0694e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7464e-03],
        [1.0593e-04],
        [2.8044e-03],
        [9.9758e-05],
        [2.8107e-04],
        [6.4707e-04],
        [1.1756e-04],
        [8.2451e-04],
        [4.3308e-04],
        [1.0313e-04],
        [4.5371e-05],
        [3.6684e-04],
        [6.6819e-05],
        [2.9552e-04],
        [1.5144e-04],
        [4.3715e-04]], device='cuda:0')/tensor([[1.7464e-03, 1.0593e-04, 2.8044e-03, 9.9758e-05, 2.8107e-04, 6.4707e-04,
         1.1756e-04, 8.2451e-04, 4.3308e-04, 1.0313e-04, 4.5371e-05, 3.6684e-04,
         6.6819e-05, 2.9552e-04, 1.5144e-04, 4.3715e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5212e-02],
        [4.3580e-04],
        [8.6286e-03],
        [8.1635e-05],
        [1.4767e-02],
        [2.7739e-02],
        [1.4043e-02],
        [7.0843e-02],
        [3.2010e-04],
        [6.1769e-03],
        [9.8253e-04],
        [3.8664e-02],
        [1.0225e-03],
        [1.3520e-01],
        [1.5942e-02],
        [2.4630e-02]], device='cuda:0')/tensor([[1.5212e-02, 4.3580e-04, 8.6286e-03, 8.1635e-05, 1.4767e-02, 2.7739e-02,
         1.4043e-02, 7.0843e-02, 3.2010e-04, 6.1769e-03, 9.8253e-04, 3.8664e-02,
         1.0225e-03, 1.3520e-01, 1.5942e-02, 2.4630e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7464e-03, 1.5212e-02],
        [1.0593e-04, 4.3580e-04],
        [2.8044e-03, 8.6286e-03],
        [9.9758e-05, 8.1635e-05],
        [2.8107e-04, 1.4767e-02],
        [6.4707e-04, 2.7739e-02],
        [1.1756e-04, 1.4043e-02],
        [8.2451e-04, 7.0843e-02],
        [4.3308e-04, 3.2010e-04],
        [1.0313e-04, 6.1769e-03],
        [4.5371e-05, 9.8253e-04],
        [3.6684e-04, 3.8664e-02],
        [6.6819e-05, 1.0225e-03],
        [2.9552e-04, 1.3520e-01],
        [1.5144e-04, 1.5942e-02],
        [4.3715e-04, 2.4630e-02]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0008],
        [0.0029],
        [0.0011],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0013],
        [0.0002],
        [0.0004],
        [0.0012],
        [0.0009],
        [0.0013],
        [0.0003],
        [0.0009]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0029, 0.0011, 0.0003, 0.0005, 0.0004, 0.0005, 0.0013,
         0.0002, 0.0004, 0.0012, 0.0009, 0.0013, 0.0003, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0173],
        [0.0429],
        [0.0621],
        [0.0774],
        [0.0151],
        [0.0464],
        [0.0130],
        [0.0011],
        [0.0269],
        [0.0011],
        [0.0054],
        [0.0556],
        [0.0167],
        [0.0018],
        [0.0066],
        [0.0027]], device='cuda:0')/tensor([[0.0173, 0.0429, 0.0621, 0.0774, 0.0151, 0.0464, 0.0130, 0.0011, 0.0269,
         0.0011, 0.0054, 0.0556, 0.0167, 0.0018, 0.0066, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0173],
        [0.0008, 0.0429],
        [0.0029, 0.0621],
        [0.0011, 0.0774],
        [0.0003, 0.0151],
        [0.0005, 0.0464],
        [0.0004, 0.0130],
        [0.0005, 0.0011],
        [0.0013, 0.0269],
        [0.0002, 0.0011],
        [0.0004, 0.0054],
        [0.0012, 0.0556],
        [0.0009, 0.0167],
        [0.0013, 0.0018],
        [0.0003, 0.0066],
        [0.0009, 0.0027]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0012],
        [0.0004],
        [0.0009],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0008]], device='cuda:0')/tensor([[0.0010, 0.0006, 0.0006, 0.0007, 0.0003, 0.0005, 0.0003, 0.0005, 0.0012,
         0.0004, 0.0009, 0.0002, 0.0009, 0.0002, 0.0003, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0017],
        [0.0020],
        [0.0193],
        [0.0251],
        [0.0344],
        [0.0041],
        [0.0157],
        [0.0430],
        [0.0428],
        [0.0099],
        [0.0345],
        [0.0089],
        [0.0165],
        [0.0056],
        [0.0198],
        [0.0010]], device='cuda:0')/tensor([[0.0017, 0.0020, 0.0193, 0.0251, 0.0344, 0.0041, 0.0157, 0.0430, 0.0428,
         0.0099, 0.0345, 0.0089, 0.0165, 0.0056, 0.0198, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0017],
        [0.0006, 0.0020],
        [0.0006, 0.0193],
        [0.0007, 0.0251],
        [0.0003, 0.0344],
        [0.0005, 0.0041],
        [0.0003, 0.0157],
        [0.0005, 0.0430],
        [0.0012, 0.0428],
        [0.0004, 0.0099],
        [0.0009, 0.0345],
        [0.0002, 0.0089],
        [0.0009, 0.0165],
        [0.0002, 0.0056],
        [0.0003, 0.0198],
        [0.0008, 0.0010]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2173e-03],
        [5.8712e-04],
        [4.0596e-04],
        [1.1943e-03],
        [2.8990e-04],
        [8.4060e-04],
        [2.4669e-03],
        [2.8483e-04],
        [2.5063e-04],
        [1.5279e-03],
        [9.3055e-04],
        [1.6071e-03],
        [1.0141e-03],
        [2.4809e-04],
        [6.7987e-04],
        [9.2729e-05]], device='cuda:0')/tensor([[1.2173e-03, 5.8712e-04, 4.0596e-04, 1.1943e-03, 2.8990e-04, 8.4060e-04,
         2.4669e-03, 2.8483e-04, 2.5063e-04, 1.5279e-03, 9.3055e-04, 1.6071e-03,
         1.0141e-03, 2.4809e-04, 6.7987e-04, 9.2729e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0101],
        [0.0159],
        [0.0327],
        [0.1153],
        [0.0086],
        [0.0274],
        [0.0475],
        [0.0005],
        [0.0144],
        [0.0241],
        [0.0026],
        [0.0041],
        [0.0169],
        [0.0386],
        [0.0185],
        [0.0353]], device='cuda:0')/tensor([[0.0101, 0.0159, 0.0327, 0.1153, 0.0086, 0.0274, 0.0475, 0.0005, 0.0144,
         0.0241, 0.0026, 0.0041, 0.0169, 0.0386, 0.0185, 0.0353]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[1.2173e-03, 1.0066e-02],
        [5.8712e-04, 1.5907e-02],
        [4.0596e-04, 3.2686e-02],
        [1.1943e-03, 1.1533e-01],
        [2.8990e-04, 8.5781e-03],
        [8.4060e-04, 2.7398e-02],
        [2.4669e-03, 4.7467e-02],
        [2.8483e-04, 4.6770e-04],
        [2.5063e-04, 1.4388e-02],
        [1.5279e-03, 2.4061e-02],
        [9.3055e-04, 2.6122e-03],
        [1.6071e-03, 4.1470e-03],
        [1.0141e-03, 1.6866e-02],
        [2.4809e-04, 3.8595e-02],
        [6.7987e-04, 1.8460e-02],
        [9.2729e-05, 3.5308e-02]], device='cuda:0')
Batch: 9 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0005],
        [0.0006],
        [0.0010],
        [0.0005],
        [0.0020],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0006],
        [0.0004],
        [0.0002],
        [0.0009],
        [0.0026],
        [0.0005],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0005, 0.0006, 0.0010, 0.0005, 0.0020, 0.0003, 0.0005, 0.0002,
         0.0006, 0.0004, 0.0002, 0.0009, 0.0026, 0.0005, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0005],
        [0.0036],
        [0.0281],
        [0.0044],
        [0.0339],
        [0.0296],
        [0.0163],
        [0.0157],
        [0.0039],
        [0.0006],
        [0.0115],
        [0.0412],
        [0.0167],
        [0.0372],
        [0.0342],
        [0.0075]], device='cuda:0')/tensor([[0.0005, 0.0036, 0.0281, 0.0044, 0.0339, 0.0296, 0.0163, 0.0157, 0.0039,
         0.0006, 0.0115, 0.0412, 0.0167, 0.0372, 0.0342, 0.0075]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0005],
        [0.0005, 0.0036],
        [0.0006, 0.0281],
        [0.0010, 0.0044],
        [0.0005, 0.0339],
        [0.0020, 0.0296],
        [0.0003, 0.0163],
        [0.0005, 0.0157],
        [0.0002, 0.0039],
        [0.0006, 0.0006],
        [0.0004, 0.0115],
        [0.0002, 0.0412],
        [0.0009, 0.0167],
        [0.0026, 0.0372],
        [0.0005, 0.0342],
        [0.0004, 0.0075]], device='cuda:0')
Batch: 10 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0033],
        [0.0018],
        [0.0006],
        [0.0022],
        [0.0003],
        [0.0011],
        [0.0012],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0007],
        [0.0017],
        [0.0002],
        [0.0003],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0033, 0.0018, 0.0006, 0.0022, 0.0003, 0.0011, 0.0012, 0.0005,
         0.0003, 0.0001, 0.0007, 0.0017, 0.0002, 0.0003, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0203],
        [0.0061],
        [0.0431],
        [0.0025],
        [0.0071],
        [0.0029],
        [0.0302],
        [0.0010],
        [0.0113],
        [0.0004],
        [0.0001],
        [0.0056],
        [0.0508],
        [0.0011],
        [0.0139],
        [0.0060]], device='cuda:0')/tensor([[0.0203, 0.0061, 0.0431, 0.0025, 0.0071, 0.0029, 0.0302, 0.0010, 0.0113,
         0.0004, 0.0001, 0.0056, 0.0508, 0.0011, 0.0139, 0.0060]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0203],
        [0.0033, 0.0061],
        [0.0018, 0.0431],
        [0.0006, 0.0025],
        [0.0022, 0.0071],
        [0.0003, 0.0029],
        [0.0011, 0.0302],
        [0.0012, 0.0010],
        [0.0005, 0.0113],
        [0.0003, 0.0004],
        [0.0001, 0.0001],
        [0.0007, 0.0056],
        [0.0017, 0.0508],
        [0.0002, 0.0011],
        [0.0003, 0.0139],
        [0.0007, 0.0060]], device='cuda:0')
Batch: 11 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.8106e-04],
        [7.6728e-04],
        [1.5442e-04],
        [3.5490e-04],
        [5.5033e-04],
        [4.2456e-04],
        [2.2025e-04],
        [1.0001e-03],
        [1.5882e-03],
        [1.7488e-04],
        [3.5598e-03],
        [1.7607e-04],
        [1.4697e-04],
        [7.8510e-04],
        [8.7593e-05],
        [1.9999e-04]], device='cuda:0')/tensor([[8.8106e-04, 7.6728e-04, 1.5442e-04, 3.5490e-04, 5.5033e-04, 4.2456e-04,
         2.2025e-04, 1.0001e-03, 1.5882e-03, 1.7488e-04, 3.5598e-03, 1.7607e-04,
         1.4697e-04, 7.8510e-04, 8.7593e-05, 1.9999e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1243e-03],
        [1.3222e-03],
        [3.1797e-04],
        [5.8956e-04],
        [1.3400e-03],
        [1.7631e-02],
        [4.8616e-04],
        [8.4181e-02],
        [4.3808e-02],
        [2.4178e-03],
        [2.7802e-02],
        [2.0618e-02],
        [3.8605e-05],
        [1.4890e-02],
        [2.8051e-03],
        [3.9280e-02]], device='cuda:0')/tensor([[1.1243e-03, 1.3222e-03, 3.1797e-04, 5.8956e-04, 1.3400e-03, 1.7631e-02,
         4.8616e-04, 8.4181e-02, 4.3808e-02, 2.4178e-03, 2.7802e-02, 2.0618e-02,
         3.8605e-05, 1.4890e-02, 2.8051e-03, 3.9280e-02]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.8106e-04, 1.1243e-03],
        [7.6728e-04, 1.3222e-03],
        [1.5442e-04, 3.1797e-04],
        [3.5490e-04, 5.8956e-04],
        [5.5033e-04, 1.3400e-03],
        [4.2456e-04, 1.7631e-02],
        [2.2025e-04, 4.8616e-04],
        [1.0001e-03, 8.4181e-02],
        [1.5882e-03, 4.3808e-02],
        [1.7488e-04, 2.4178e-03],
        [3.5598e-03, 2.7802e-02],
        [1.7607e-04, 2.0618e-02],
        [1.4697e-04, 3.8605e-05],
        [7.8510e-04, 1.4890e-02],
        [8.7593e-05, 2.8051e-03],
        [1.9999e-04, 3.9280e-02]], device='cuda:0')
Batch: 12 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([8, 1])
id: [2662] -> tensor([[0.0003],
        [0.0015],
        [0.0009],
        [0.0007],
        [0.0013],
        [0.0006],
        [0.0002],
        [0.0001]], device='cuda:0')/tensor([[0.0003, 0.0015, 0.0009, 0.0007, 0.0013, 0.0006, 0.0002, 0.0001]],
       device='cuda:0'), torch.Size([1, 8])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([8, 1])
id: [23607] -> tensor([[0.0225],
        [0.0183],
        [0.0017],
        [0.0085],
        [0.0015],
        [0.0047],
        [0.0144],
        [0.0064]], device='cuda:0')/tensor([[0.0225, 0.0183, 0.0017, 0.0085, 0.0015, 0.0047, 0.0144, 0.0064]],
       device='cuda:0'), torch.Size([1, 8])
answers_probs: tensor([[0.0003, 0.0225],
        [0.0015, 0.0183],
        [0.0009, 0.0017],
        [0.0007, 0.0085],
        [0.0013, 0.0015],
        [0.0006, 0.0047],
        [0.0002, 0.0144],
        [0.0001, 0.0064]], device='cuda:0')
acc:  0.525
Time taken to execute the de SA task with prompt type identical_modal, variation 5 and batchsize 16: 0:03:16.854692
path ['42', 'de', 'flan', 'SA', 'identical_modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI active 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s] 33%|███▎      | 1/3 [00:00<00:00,  2.77it/s]100%|██████████| 3/3 [00:00<00:00,  7.55it/s]100%|██████████| 3/3 [00:00<00:00,  6.43it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0014],
        [0.0006],
        [0.0009],
        [0.0002],
        [0.0004],
        [0.0001],
        [0.0005],
        [0.0001],
        [0.0005],
        [0.0009],
        [0.0016],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0014, 0.0006, 0.0009, 0.0002, 0.0004, 0.0001, 0.0005, 0.0001,
         0.0005, 0.0009, 0.0016, 0.0004, 0.0004, 0.0006, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0140],
        [0.0023],
        [0.0024],
        [0.0005],
        [0.0027],
        [0.0028],
        [0.0025],
        [0.0002],
        [0.0022],
        [0.0013],
        [0.0094],
        [0.0016],
        [0.0044],
        [0.0031],
        [0.0028]], device='cuda:0')/tensor([[0.0003, 0.0140, 0.0023, 0.0024, 0.0005, 0.0027, 0.0028, 0.0025, 0.0002,
         0.0022, 0.0013, 0.0094, 0.0016, 0.0044, 0.0031, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.9959e-05],
        [3.0254e-04],
        [4.3989e-04],
        [9.1278e-04],
        [1.4712e-04],
        [6.4503e-04],
        [1.5187e-04],
        [6.5500e-04],
        [9.5833e-05],
        [3.7549e-04],
        [2.3899e-04],
        [4.5897e-04],
        [2.2946e-04],
        [5.2142e-04],
        [2.6142e-04],
        [3.4831e-04]], device='cuda:0')/tensor([[9.9959e-05, 3.0254e-04, 4.3989e-04, 9.1278e-04, 1.4712e-04, 6.4503e-04,
         1.5187e-04, 6.5500e-04, 9.5833e-05, 3.7549e-04, 2.3899e-04, 4.5897e-04,
         2.2946e-04, 5.2142e-04, 2.6142e-04, 3.4831e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7228e-04, 3.2606e-04, 9.9959e-05],
        [1.3568e-03, 1.4026e-02, 3.0254e-04],
        [5.8281e-04, 2.3425e-03, 4.3989e-04],
        [8.9132e-04, 2.3838e-03, 9.1278e-04],
        [1.8328e-04, 5.1962e-04, 1.4712e-04],
        [4.4852e-04, 2.6829e-03, 6.4503e-04],
        [1.0358e-04, 2.8257e-03, 1.5187e-04],
        [4.7483e-04, 2.4985e-03, 6.5500e-04],
        [1.3864e-04, 1.8347e-04, 9.5833e-05],
        [5.2481e-04, 2.1625e-03, 3.7549e-04],
        [8.9376e-04, 1.3020e-03, 2.3899e-04],
        [1.5575e-03, 9.3630e-03, 4.5897e-04],
        [4.3034e-04, 1.6202e-03, 2.2946e-04],
        [3.8192e-04, 4.4346e-03, 5.2142e-04],
        [6.0888e-04, 3.0671e-03, 2.6142e-04],
        [5.9393e-04, 2.8056e-03, 3.4831e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.7965e-04],
        [2.7915e-03],
        [1.0058e-03],
        [1.1159e-03],
        [1.9751e-03],
        [3.9081e-04],
        [1.3223e-03],
        [1.5971e-03],
        [4.2710e-04],
        [6.2892e-04],
        [1.2377e-03],
        [9.3178e-04],
        [7.7838e-05],
        [2.9752e-04],
        [3.2486e-04],
        [6.2891e-04]], device='cuda:0')/tensor([[7.7965e-04, 2.7915e-03, 1.0058e-03, 1.1159e-03, 1.9751e-03, 3.9081e-04,
         1.3223e-03, 1.5971e-03, 4.2710e-04, 6.2892e-04, 1.2377e-03, 9.3178e-04,
         7.7838e-05, 2.9752e-04, 3.2486e-04, 6.2891e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0046],
        [0.0079],
        [0.0101],
        [0.0041],
        [0.0047],
        [0.0004],
        [0.0016],
        [0.0014],
        [0.0011],
        [0.0067],
        [0.0046],
        [0.0104],
        [0.0009],
        [0.0017],
        [0.0067],
        [0.0033]], device='cuda:0')/tensor([[0.0046, 0.0079, 0.0101, 0.0041, 0.0047, 0.0004, 0.0016, 0.0014, 0.0011,
         0.0067, 0.0046, 0.0104, 0.0009, 0.0017, 0.0067, 0.0033]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.4687e-04],
        [5.1251e-04],
        [9.6632e-04],
        [2.6396e-04],
        [1.0336e-03],
        [1.9802e-04],
        [2.5656e-04],
        [1.6089e-04],
        [4.5351e-04],
        [4.8820e-04],
        [3.3633e-04],
        [1.0013e-03],
        [4.9423e-05],
        [2.0653e-04],
        [1.3983e-04],
        [3.2111e-04]], device='cuda:0')/tensor([[3.4687e-04, 5.1251e-04, 9.6632e-04, 2.6396e-04, 1.0336e-03, 1.9802e-04,
         2.5656e-04, 1.6089e-04, 4.5351e-04, 4.8820e-04, 3.3633e-04, 1.0013e-03,
         4.9423e-05, 2.0653e-04, 1.3983e-04, 3.2111e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.7965e-04, 4.6411e-03, 3.4687e-04],
        [2.7915e-03, 7.8640e-03, 5.1251e-04],
        [1.0058e-03, 1.0088e-02, 9.6632e-04],
        [1.1159e-03, 4.0541e-03, 2.6396e-04],
        [1.9751e-03, 4.7022e-03, 1.0336e-03],
        [3.9081e-04, 4.2663e-04, 1.9802e-04],
        [1.3223e-03, 1.6315e-03, 2.5656e-04],
        [1.5971e-03, 1.3804e-03, 1.6089e-04],
        [4.2710e-04, 1.0830e-03, 4.5351e-04],
        [6.2892e-04, 6.6744e-03, 4.8820e-04],
        [1.2377e-03, 4.6439e-03, 3.3633e-04],
        [9.3178e-04, 1.0400e-02, 1.0013e-03],
        [7.7838e-05, 8.5827e-04, 4.9423e-05],
        [2.9752e-04, 1.7055e-03, 2.0653e-04],
        [3.2486e-04, 6.7383e-03, 1.3983e-04],
        [6.2891e-04, 3.3457e-03, 3.2111e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.9521e-04],
        [4.2623e-04],
        [6.4404e-05],
        [7.4576e-04],
        [2.2193e-04],
        [5.6001e-04],
        [2.0848e-03],
        [1.0822e-03],
        [8.8835e-04],
        [5.1838e-04],
        [4.9407e-03],
        [5.2615e-04],
        [3.9197e-04],
        [1.4829e-03],
        [1.1233e-03],
        [5.9584e-04]], device='cuda:0')/tensor([[3.9521e-04, 4.2623e-04, 6.4404e-05, 7.4576e-04, 2.2193e-04, 5.6001e-04,
         2.0848e-03, 1.0822e-03, 8.8835e-04, 5.1838e-04, 4.9407e-03, 5.2615e-04,
         3.9197e-04, 1.4829e-03, 1.1233e-03, 5.9584e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0005],
        [0.0011],
        [0.0002],
        [0.0126],
        [0.0003],
        [0.0040],
        [0.0049],
        [0.0016],
        [0.0011],
        [0.0002],
        [0.0113],
        [0.0027],
        [0.0013],
        [0.0069],
        [0.0027],
        [0.0010]], device='cuda:0')/tensor([[0.0005, 0.0011, 0.0002, 0.0126, 0.0003, 0.0040, 0.0049, 0.0016, 0.0011,
         0.0002, 0.0113, 0.0027, 0.0013, 0.0069, 0.0027, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.9934e-05],
        [2.1529e-04],
        [5.4719e-05],
        [1.6020e-04],
        [9.0063e-05],
        [3.2643e-04],
        [1.8225e-04],
        [3.4010e-04],
        [5.1213e-05],
        [4.9161e-04],
        [1.2615e-03],
        [1.3000e-04],
        [6.5589e-05],
        [5.1506e-04],
        [5.5051e-04],
        [1.4295e-03]], device='cuda:0')/tensor([[8.9934e-05, 2.1529e-04, 5.4719e-05, 1.6020e-04, 9.0063e-05, 3.2643e-04,
         1.8225e-04, 3.4010e-04, 5.1213e-05, 4.9161e-04, 1.2615e-03, 1.3000e-04,
         6.5589e-05, 5.1506e-04, 5.5051e-04, 1.4295e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.9521e-04, 4.6110e-04, 8.9934e-05],
        [4.2623e-04, 1.1065e-03, 2.1529e-04],
        [6.4404e-05, 2.1566e-04, 5.4719e-05],
        [7.4576e-04, 1.2648e-02, 1.6020e-04],
        [2.2193e-04, 3.1068e-04, 9.0063e-05],
        [5.6001e-04, 4.0382e-03, 3.2643e-04],
        [2.0848e-03, 4.9251e-03, 1.8225e-04],
        [1.0822e-03, 1.6022e-03, 3.4010e-04],
        [8.8835e-04, 1.1306e-03, 5.1213e-05],
        [5.1838e-04, 2.0316e-04, 4.9161e-04],
        [4.9407e-03, 1.1328e-02, 1.2615e-03],
        [5.2615e-04, 2.7021e-03, 1.3000e-04],
        [3.9197e-04, 1.3035e-03, 6.5589e-05],
        [1.4829e-03, 6.9476e-03, 5.1506e-04],
        [1.1233e-03, 2.6874e-03, 5.5051e-04],
        [5.9584e-04, 1.0143e-03, 1.4295e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0003],
        [0.0006],
        [0.0008],
        [0.0010],
        [0.0009],
        [0.0008],
        [0.0008],
        [0.0008],
        [0.0004],
        [0.0005],
        [0.0009],
        [0.0008],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0003, 0.0006, 0.0008, 0.0010, 0.0009, 0.0008, 0.0008,
         0.0008, 0.0004, 0.0005, 0.0009, 0.0008, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0022],
        [0.0014],
        [0.0008],
        [0.0056],
        [0.0039],
        [0.0063],
        [0.0021],
        [0.0050],
        [0.0020],
        [0.0037],
        [0.0077],
        [0.0075],
        [0.0018],
        [0.0028],
        [0.0037],
        [0.0025]], device='cuda:0')/tensor([[0.0022, 0.0014, 0.0008, 0.0056, 0.0039, 0.0063, 0.0021, 0.0050, 0.0020,
         0.0037, 0.0077, 0.0075, 0.0018, 0.0028, 0.0037, 0.0025]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0001],
        [0.0005],
        [0.0002],
        [0.0011],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0005, 0.0002, 0.0003, 0.0004, 0.0002, 0.0007, 0.0001,
         0.0005, 0.0002, 0.0011, 0.0004, 0.0001, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0004, 0.0022, 0.0002],
        [0.0011, 0.0014, 0.0002],
        [0.0003, 0.0008, 0.0005],
        [0.0006, 0.0056, 0.0002],
        [0.0008, 0.0039, 0.0003],
        [0.0010, 0.0063, 0.0004],
        [0.0009, 0.0021, 0.0002],
        [0.0008, 0.0050, 0.0007],
        [0.0008, 0.0020, 0.0001],
        [0.0008, 0.0037, 0.0005],
        [0.0004, 0.0077, 0.0002],
        [0.0005, 0.0075, 0.0011],
        [0.0009, 0.0018, 0.0004],
        [0.0008, 0.0028, 0.0001],
        [0.0004, 0.0037, 0.0003],
        [0.0004, 0.0025, 0.0003]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0017],
        [0.0003],
        [0.0004],
        [0.0017],
        [0.0012],
        [0.0002],
        [0.0003],
        [0.0011],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0015]], device='cuda:0')/tensor([[0.0013, 0.0017, 0.0003, 0.0004, 0.0017, 0.0012, 0.0002, 0.0003, 0.0011,
         0.0005, 0.0004, 0.0004, 0.0005, 0.0005, 0.0003, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0056],
        [0.0001],
        [0.0002],
        [0.0042],
        [0.0017],
        [0.0025],
        [0.0028],
        [0.0027],
        [0.0034],
        [0.0009],
        [0.0022],
        [0.0011],
        [0.0007],
        [0.0030],
        [0.0021]], device='cuda:0')/tensor([[0.0015, 0.0056, 0.0001, 0.0002, 0.0042, 0.0017, 0.0025, 0.0028, 0.0027,
         0.0034, 0.0009, 0.0022, 0.0011, 0.0007, 0.0030, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.3995e-04],
        [4.1063e-04],
        [4.9390e-05],
        [4.6538e-04],
        [2.8397e-04],
        [2.4633e-04],
        [3.9818e-05],
        [3.4813e-05],
        [4.9773e-04],
        [1.2060e-04],
        [1.3140e-04],
        [2.1020e-04],
        [9.0899e-05],
        [5.8138e-05],
        [1.4786e-04],
        [1.9407e-04]], device='cuda:0')/tensor([[6.3995e-04, 4.1063e-04, 4.9390e-05, 4.6538e-04, 2.8397e-04, 2.4633e-04,
         3.9818e-05, 3.4813e-05, 4.9773e-04, 1.2060e-04, 1.3140e-04, 2.1020e-04,
         9.0899e-05, 5.8138e-05, 1.4786e-04, 1.9407e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2998e-03, 1.5291e-03, 6.3995e-04],
        [1.6557e-03, 5.5771e-03, 4.1063e-04],
        [2.7403e-04, 1.0708e-04, 4.9390e-05],
        [3.5607e-04, 1.9707e-04, 4.6538e-04],
        [1.7075e-03, 4.2226e-03, 2.8397e-04],
        [1.1784e-03, 1.6654e-03, 2.4633e-04],
        [2.4210e-04, 2.4510e-03, 3.9818e-05],
        [3.1188e-04, 2.8072e-03, 3.4813e-05],
        [1.0968e-03, 2.6929e-03, 4.9773e-04],
        [4.6719e-04, 3.3597e-03, 1.2060e-04],
        [3.8928e-04, 9.1720e-04, 1.3140e-04],
        [3.8066e-04, 2.2302e-03, 2.1020e-04],
        [5.4302e-04, 1.1374e-03, 9.0899e-05],
        [4.5791e-04, 7.3593e-04, 5.8138e-05],
        [2.5344e-04, 2.9919e-03, 1.4786e-04],
        [1.4973e-03, 2.1209e-03, 1.9407e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0011],
        [0.0010],
        [0.0007],
        [0.0021],
        [0.0012],
        [0.0005],
        [0.0010],
        [0.0027],
        [0.0004],
        [0.0020],
        [0.0016],
        [0.0008],
        [0.0005],
        [0.0002],
        [0.0014]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0010, 0.0007, 0.0021, 0.0012, 0.0005, 0.0010, 0.0027,
         0.0004, 0.0020, 0.0016, 0.0008, 0.0005, 0.0002, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0005],
        [0.0036],
        [0.0067],
        [0.0019],
        [0.0031],
        [0.0043],
        [0.0009],
        [0.0128],
        [0.0058],
        [0.0034],
        [0.0028],
        [0.0024],
        [0.0044],
        [0.0001],
        [0.0005],
        [0.0012]], device='cuda:0')/tensor([[0.0005, 0.0036, 0.0067, 0.0019, 0.0031, 0.0043, 0.0009, 0.0128, 0.0058,
         0.0034, 0.0028, 0.0024, 0.0044, 0.0001, 0.0005, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.8034e-04],
        [1.5712e-04],
        [1.5491e-04],
        [9.0164e-05],
        [5.3148e-04],
        [6.8222e-05],
        [1.1932e-04],
        [3.1981e-04],
        [8.9388e-04],
        [1.8050e-04],
        [2.0728e-04],
        [4.7764e-05],
        [7.6124e-04],
        [1.1805e-04],
        [2.1345e-04],
        [2.3564e-04]], device='cuda:0')/tensor([[5.8034e-04, 1.5712e-04, 1.5491e-04, 9.0164e-05, 5.3148e-04, 6.8222e-05,
         1.1932e-04, 3.1981e-04, 8.9388e-04, 1.8050e-04, 2.0728e-04, 4.7764e-05,
         7.6124e-04, 1.1805e-04, 2.1345e-04, 2.3564e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[4.4304e-04, 5.2786e-04, 5.8034e-04],
        [1.0924e-03, 3.5517e-03, 1.5712e-04],
        [1.0288e-03, 6.6718e-03, 1.5491e-04],
        [6.9259e-04, 1.9497e-03, 9.0164e-05],
        [2.0581e-03, 3.0937e-03, 5.3148e-04],
        [1.2000e-03, 4.3353e-03, 6.8222e-05],
        [4.7183e-04, 9.2186e-04, 1.1932e-04],
        [1.0414e-03, 1.2847e-02, 3.1981e-04],
        [2.7373e-03, 5.7951e-03, 8.9388e-04],
        [3.8811e-04, 3.4275e-03, 1.8050e-04],
        [1.9663e-03, 2.7915e-03, 2.0728e-04],
        [1.6468e-03, 2.4112e-03, 4.7764e-05],
        [8.1255e-04, 4.4233e-03, 7.6124e-04],
        [4.7832e-04, 1.4033e-04, 1.1805e-04],
        [2.4145e-04, 5.0028e-04, 2.1345e-04],
        [1.4018e-03, 1.2294e-03, 2.3564e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0011],
        [0.0003],
        [0.0031],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0008],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0009],
        [0.0014],
        [0.0007],
        [0.0004],
        [0.0004]], device='cuda:0')/tensor([[0.0008, 0.0011, 0.0003, 0.0031, 0.0004, 0.0004, 0.0006, 0.0008, 0.0003,
         0.0004, 0.0004, 0.0009, 0.0014, 0.0007, 0.0004, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0026],
        [0.0056],
        [0.0007],
        [0.0029],
        [0.0011],
        [0.0038],
        [0.0018],
        [0.0020],
        [0.0027],
        [0.0028],
        [0.0026],
        [0.0099],
        [0.0023],
        [0.0019],
        [0.0038],
        [0.0020]], device='cuda:0')/tensor([[0.0026, 0.0056, 0.0007, 0.0029, 0.0011, 0.0038, 0.0018, 0.0020, 0.0027,
         0.0028, 0.0026, 0.0099, 0.0023, 0.0019, 0.0038, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.4253e-04],
        [1.7959e-04],
        [1.3426e-04],
        [2.5037e-04],
        [1.3441e-04],
        [2.2545e-04],
        [3.6910e-04],
        [1.2971e-04],
        [3.5184e-04],
        [6.9234e-05],
        [3.3211e-04],
        [1.0054e-03],
        [7.2148e-05],
        [4.4358e-05],
        [2.5687e-04],
        [3.4424e-04]], device='cuda:0')/tensor([[2.4253e-04, 1.7959e-04, 1.3426e-04, 2.5037e-04, 1.3441e-04, 2.2545e-04,
         3.6910e-04, 1.2971e-04, 3.5184e-04, 6.9234e-05, 3.3211e-04, 1.0054e-03,
         7.2148e-05, 4.4358e-05, 2.5687e-04, 3.4424e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.5763e-04, 2.5883e-03, 2.4253e-04],
        [1.0670e-03, 5.5709e-03, 1.7959e-04],
        [2.8321e-04, 7.0445e-04, 1.3426e-04],
        [3.1099e-03, 2.8615e-03, 2.5037e-04],
        [3.8051e-04, 1.0845e-03, 1.3441e-04],
        [3.5414e-04, 3.8384e-03, 2.2545e-04],
        [5.5710e-04, 1.8280e-03, 3.6910e-04],
        [7.8859e-04, 1.9594e-03, 1.2971e-04],
        [2.7334e-04, 2.7365e-03, 3.5184e-04],
        [4.2304e-04, 2.8438e-03, 6.9234e-05],
        [3.9886e-04, 2.6293e-03, 3.3211e-04],
        [8.8655e-04, 9.8862e-03, 1.0054e-03],
        [1.3694e-03, 2.3084e-03, 7.2148e-05],
        [7.4395e-04, 1.8881e-03, 4.4358e-05],
        [3.5738e-04, 3.7733e-03, 2.5687e-04],
        [4.0310e-04, 2.0259e-03, 3.4424e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0017],
        [0.0006],
        [0.0007],
        [0.0017],
        [0.0007],
        [0.0011],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0002],
        [0.0007],
        [0.0006],
        [0.0008],
        [0.0005],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0017, 0.0006, 0.0007, 0.0017, 0.0007, 0.0011, 0.0005, 0.0005,
         0.0012, 0.0002, 0.0007, 0.0006, 0.0008, 0.0005, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0027],
        [0.0028],
        [0.0017],
        [0.0012],
        [0.0056],
        [0.0033],
        [0.0015],
        [0.0060],
        [0.0009],
        [0.0006],
        [0.0011],
        [0.0011],
        [0.0017],
        [0.0015],
        [0.0048],
        [0.0066]], device='cuda:0')/tensor([[0.0027, 0.0028, 0.0017, 0.0012, 0.0056, 0.0033, 0.0015, 0.0060, 0.0009,
         0.0006, 0.0011, 0.0011, 0.0017, 0.0015, 0.0048, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.4948e-05],
        [3.9775e-04],
        [6.1625e-04],
        [1.2251e-04],
        [3.7100e-04],
        [2.4602e-04],
        [1.9288e-04],
        [4.3589e-04],
        [1.8360e-04],
        [1.5714e-03],
        [1.4062e-04],
        [8.5866e-04],
        [3.7619e-04],
        [7.3600e-05],
        [2.8331e-04],
        [2.4789e-04]], device='cuda:0')/tensor([[6.4948e-05, 3.9775e-04, 6.1625e-04, 1.2251e-04, 3.7100e-04, 2.4602e-04,
         1.9288e-04, 4.3589e-04, 1.8360e-04, 1.5714e-03, 1.4062e-04, 8.5866e-04,
         3.7619e-04, 7.3600e-05, 2.8331e-04, 2.4789e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.0507e-04, 2.6685e-03, 6.4948e-05],
        [1.7289e-03, 2.7753e-03, 3.9775e-04],
        [6.3185e-04, 1.6777e-03, 6.1625e-04],
        [7.4652e-04, 1.1631e-03, 1.2251e-04],
        [1.6777e-03, 5.6176e-03, 3.7100e-04],
        [6.8778e-04, 3.3239e-03, 2.4602e-04],
        [1.1324e-03, 1.4719e-03, 1.9288e-04],
        [4.8055e-04, 5.9650e-03, 4.3589e-04],
        [5.1170e-04, 8.9081e-04, 1.8360e-04],
        [1.2225e-03, 6.4065e-04, 1.5714e-03],
        [2.4053e-04, 1.0961e-03, 1.4062e-04],
        [6.9624e-04, 1.0806e-03, 8.5866e-04],
        [6.2895e-04, 1.7154e-03, 3.7619e-04],
        [7.9025e-04, 1.5334e-03, 7.3600e-05],
        [5.4184e-04, 4.8273e-03, 2.8331e-04],
        [5.5549e-04, 6.5678e-03, 2.4789e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0014],
        [0.0006],
        [0.0003],
        [0.0038]], device='cuda:0')/tensor([[0.0014, 0.0006, 0.0003, 0.0038]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0068],
        [0.0010],
        [0.0012],
        [0.0105]], device='cuda:0')/tensor([[0.0068, 0.0010, 0.0012, 0.0105]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.6852e-04],
        [7.8132e-05],
        [1.8215e-04],
        [1.9043e-04]], device='cuda:0')/tensor([[1.6852e-04, 7.8132e-05, 1.8215e-04, 1.9043e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.4472e-03, 6.7677e-03, 1.6852e-04],
        [5.6372e-04, 1.0162e-03, 7.8132e-05],
        [3.0876e-04, 1.2125e-03, 1.8215e-04],
        [3.7618e-03, 1.0502e-02, 1.9043e-04]], device='cuda:0')
acc:  0.5
Time taken to execute the de NLI task with prompt type active, variation 0 and batchsize 16: 0:01:03.154927
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI active 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 359.47it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0007],
        [0.0009],
        [0.0002],
        [0.0002],
        [0.0020],
        [0.0007],
        [0.0011],
        [0.0006],
        [0.0011],
        [0.0024],
        [0.0001],
        [0.0003],
        [0.0004],
        [0.0006],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0007, 0.0009, 0.0002, 0.0002, 0.0020, 0.0007, 0.0011, 0.0006,
         0.0011, 0.0024, 0.0001, 0.0003, 0.0004, 0.0006, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0890e-04],
        [1.1876e-03],
        [2.0193e-03],
        [2.5909e-05],
        [6.5724e-05],
        [7.6596e-03],
        [8.2432e-04],
        [7.5632e-04],
        [2.8348e-04],
        [1.7984e-03],
        [5.7470e-04],
        [1.7868e-05],
        [1.1509e-03],
        [4.4957e-04],
        [1.1109e-03],
        [5.9984e-05]], device='cuda:0')/tensor([[1.0890e-04, 1.1876e-03, 2.0193e-03, 2.5909e-05, 6.5724e-05, 7.6596e-03,
         8.2432e-04, 7.5632e-04, 2.8348e-04, 1.7984e-03, 5.7470e-04, 1.7868e-05,
         1.1509e-03, 4.4957e-04, 1.1109e-03, 5.9984e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4572e-04],
        [3.4839e-04],
        [5.7149e-04],
        [2.5436e-04],
        [1.6478e-04],
        [3.7163e-04],
        [5.6252e-05],
        [2.4475e-04],
        [5.3824e-04],
        [2.7717e-04],
        [1.7439e-04],
        [9.2932e-05],
        [6.6935e-05],
        [5.7053e-04],
        [4.2915e-04],
        [5.1085e-05]], device='cuda:0')/tensor([[1.4572e-04, 3.4839e-04, 5.7149e-04, 2.5436e-04, 1.6478e-04, 3.7163e-04,
         5.6252e-05, 2.4475e-04, 5.3824e-04, 2.7717e-04, 1.7439e-04, 9.2932e-05,
         6.6935e-05, 5.7053e-04, 4.2915e-04, 5.1085e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5649e-04, 1.0890e-04, 1.4572e-04],
        [6.9786e-04, 1.1876e-03, 3.4839e-04],
        [9.2429e-04, 2.0193e-03, 5.7149e-04],
        [1.8266e-04, 2.5909e-05, 2.5436e-04],
        [2.2255e-04, 6.5724e-05, 1.6478e-04],
        [2.0294e-03, 7.6596e-03, 3.7163e-04],
        [6.5563e-04, 8.2432e-04, 5.6252e-05],
        [1.1375e-03, 7.5632e-04, 2.4475e-04],
        [5.9232e-04, 2.8348e-04, 5.3824e-04],
        [1.1025e-03, 1.7984e-03, 2.7717e-04],
        [2.4238e-03, 5.7470e-04, 1.7439e-04],
        [1.2726e-04, 1.7868e-05, 9.2932e-05],
        [3.0701e-04, 1.1509e-03, 6.6935e-05],
        [3.6334e-04, 4.4957e-04, 5.7053e-04],
        [6.0742e-04, 1.1109e-03, 4.2915e-04],
        [1.1992e-04, 5.9984e-05, 5.1085e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6530e-04],
        [1.5475e-03],
        [1.6626e-04],
        [2.4666e-04],
        [2.6800e-05],
        [6.5131e-06],
        [1.6181e-04],
        [4.3286e-04],
        [1.6571e-04],
        [3.1321e-04],
        [3.3186e-04],
        [7.7127e-05],
        [1.8109e-04],
        [4.4301e-04],
        [1.0313e-03],
        [2.7182e-05]], device='cuda:0')/tensor([[2.6530e-04, 1.5475e-03, 1.6626e-04, 2.4666e-04, 2.6800e-05, 6.5131e-06,
         1.6181e-04, 4.3286e-04, 1.6571e-04, 3.1321e-04, 3.3186e-04, 7.7127e-05,
         1.8109e-04, 4.4301e-04, 1.0313e-03, 2.7182e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.6261e-05],
        [1.7337e-03],
        [6.4283e-06],
        [1.1013e-04],
        [2.2591e-06],
        [2.8057e-07],
        [6.4582e-05],
        [6.0609e-05],
        [2.9622e-05],
        [5.7779e-05],
        [6.1800e-05],
        [3.9184e-06],
        [5.3967e-05],
        [2.2202e-04],
        [1.4052e-03],
        [2.2535e-06]], device='cuda:0')/tensor([[3.6261e-05, 1.7337e-03, 6.4283e-06, 1.1013e-04, 2.2591e-06, 2.8057e-07,
         6.4582e-05, 6.0609e-05, 2.9622e-05, 5.7779e-05, 6.1800e-05, 3.9184e-06,
         5.3967e-05, 2.2202e-04, 1.4052e-03, 2.2535e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3066e-04],
        [3.7316e-04],
        [5.0900e-05],
        [5.8088e-05],
        [1.2824e-05],
        [9.1142e-06],
        [4.6730e-05],
        [5.5293e-05],
        [5.2513e-05],
        [2.2107e-04],
        [4.2826e-05],
        [1.4634e-04],
        [7.2227e-05],
        [2.2895e-04],
        [5.2193e-04],
        [2.4668e-05]], device='cuda:0')/tensor([[1.3066e-04, 3.7316e-04, 5.0900e-05, 5.8088e-05, 1.2824e-05, 9.1142e-06,
         4.6730e-05, 5.5293e-05, 5.2513e-05, 2.2107e-04, 4.2826e-05, 1.4634e-04,
         7.2227e-05, 2.2895e-04, 5.2193e-04, 2.4668e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6530e-04, 3.6261e-05, 1.3066e-04],
        [1.5475e-03, 1.7337e-03, 3.7316e-04],
        [1.6626e-04, 6.4283e-06, 5.0900e-05],
        [2.4666e-04, 1.1013e-04, 5.8088e-05],
        [2.6800e-05, 2.2591e-06, 1.2824e-05],
        [6.5131e-06, 2.8057e-07, 9.1142e-06],
        [1.6181e-04, 6.4582e-05, 4.6730e-05],
        [4.3286e-04, 6.0609e-05, 5.5293e-05],
        [1.6571e-04, 2.9622e-05, 5.2513e-05],
        [3.1321e-04, 5.7779e-05, 2.2107e-04],
        [3.3186e-04, 6.1800e-05, 4.2826e-05],
        [7.7127e-05, 3.9184e-06, 1.4634e-04],
        [1.8109e-04, 5.3967e-05, 7.2227e-05],
        [4.4301e-04, 2.2202e-04, 2.2895e-04],
        [1.0313e-03, 1.4052e-03, 5.2193e-04],
        [2.7182e-05, 2.2535e-06, 2.4668e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0005],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0001],
        [0.0009],
        [0.0005],
        [0.0011],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0002],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0005, 0.0005, 0.0003, 0.0002, 0.0004, 0.0001, 0.0009, 0.0005,
         0.0011, 0.0010, 0.0005, 0.0005, 0.0002, 0.0002, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.2346e-06],
        [1.2844e-04],
        [4.1881e-04],
        [3.2958e-04],
        [1.4671e-05],
        [6.1489e-06],
        [2.3669e-05],
        [6.8332e-04],
        [2.4441e-04],
        [5.7959e-04],
        [2.8394e-04],
        [1.0129e-04],
        [8.7165e-04],
        [1.2444e-04],
        [1.6339e-05],
        [5.4342e-04]], device='cuda:0')/tensor([[7.2346e-06, 1.2844e-04, 4.1881e-04, 3.2958e-04, 1.4671e-05, 6.1489e-06,
         2.3669e-05, 6.8332e-04, 2.4441e-04, 5.7959e-04, 2.8394e-04, 1.0129e-04,
         8.7165e-04, 1.2444e-04, 1.6339e-05, 5.4342e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.8365e-05],
        [2.2358e-04],
        [6.5460e-05],
        [1.6046e-04],
        [5.8244e-05],
        [1.1027e-04],
        [7.2226e-05],
        [2.1624e-04],
        [1.7988e-04],
        [1.6205e-04],
        [2.2495e-04],
        [9.6614e-05],
        [1.5977e-04],
        [8.2152e-05],
        [1.5138e-04],
        [5.9443e-04]], device='cuda:0')/tensor([[7.8365e-05, 2.2358e-04, 6.5460e-05, 1.6046e-04, 5.8244e-05, 1.1027e-04,
         7.2226e-05, 2.1624e-04, 1.7988e-04, 1.6205e-04, 2.2495e-04, 9.6614e-05,
         1.5977e-04, 8.2152e-05, 1.5138e-04, 5.9443e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9312e-04, 7.2346e-06, 7.8365e-05],
        [4.9408e-04, 1.2844e-04, 2.2358e-04],
        [5.4394e-04, 4.1881e-04, 6.5460e-05],
        [3.3139e-04, 3.2958e-04, 1.6046e-04],
        [1.6757e-04, 1.4671e-05, 5.8244e-05],
        [3.5210e-04, 6.1489e-06, 1.1027e-04],
        [1.0172e-04, 2.3669e-05, 7.2226e-05],
        [9.2567e-04, 6.8332e-04, 2.1624e-04],
        [5.0254e-04, 2.4441e-04, 1.7988e-04],
        [1.1294e-03, 5.7959e-04, 1.6205e-04],
        [9.6170e-04, 2.8394e-04, 2.2495e-04],
        [4.9999e-04, 1.0129e-04, 9.6614e-05],
        [4.8850e-04, 8.7165e-04, 1.5977e-04],
        [2.0927e-04, 1.2444e-04, 8.2152e-05],
        [1.5432e-04, 1.6339e-05, 1.5138e-04],
        [5.0989e-04, 5.4342e-04, 5.9443e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0001],
        [0.0014],
        [0.0005],
        [0.0008],
        [0.0010],
        [0.0004],
        [0.0008],
        [0.0008],
        [0.0007],
        [0.0005],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0019],
        [0.0001]], device='cuda:0')/tensor([[0.0003, 0.0001, 0.0014, 0.0005, 0.0008, 0.0010, 0.0004, 0.0008, 0.0008,
         0.0007, 0.0005, 0.0011, 0.0005, 0.0003, 0.0019, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.1906e-05],
        [9.0942e-05],
        [1.1457e-03],
        [1.0614e-03],
        [3.3818e-04],
        [1.0798e-03],
        [2.4759e-04],
        [9.1334e-04],
        [6.7187e-04],
        [1.1224e-03],
        [2.3415e-03],
        [4.2453e-03],
        [1.1531e-04],
        [1.1381e-03],
        [3.2742e-03],
        [6.1457e-05]], device='cuda:0')/tensor([[7.1906e-05, 9.0942e-05, 1.1457e-03, 1.0614e-03, 3.3818e-04, 1.0798e-03,
         2.4759e-04, 9.1334e-04, 6.7187e-04, 1.1224e-03, 2.3415e-03, 4.2453e-03,
         1.1531e-04, 1.1381e-03, 3.2742e-03, 6.1457e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.9139e-05],
        [5.3121e-05],
        [2.6852e-04],
        [1.7402e-04],
        [4.4640e-05],
        [1.7508e-04],
        [1.2607e-04],
        [1.6391e-04],
        [1.6159e-04],
        [5.0164e-05],
        [2.2683e-04],
        [1.5415e-04],
        [1.3515e-04],
        [1.9063e-04],
        [2.6740e-04],
        [1.2025e-04]], device='cuda:0')/tensor([[4.9139e-05, 5.3121e-05, 2.6852e-04, 1.7402e-04, 4.4640e-05, 1.7508e-04,
         1.2607e-04, 1.6391e-04, 1.6159e-04, 5.0164e-05, 2.2683e-04, 1.5415e-04,
         1.3515e-04, 1.9063e-04, 2.6740e-04, 1.2025e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2721e-04, 7.1906e-05, 4.9139e-05],
        [1.0955e-04, 9.0942e-05, 5.3121e-05],
        [1.3768e-03, 1.1457e-03, 2.6852e-04],
        [5.4198e-04, 1.0614e-03, 1.7402e-04],
        [7.8341e-04, 3.3818e-04, 4.4640e-05],
        [9.8607e-04, 1.0798e-03, 1.7508e-04],
        [3.6017e-04, 2.4759e-04, 1.2607e-04],
        [7.6439e-04, 9.1334e-04, 1.6391e-04],
        [7.5101e-04, 6.7187e-04, 1.6159e-04],
        [6.6214e-04, 1.1224e-03, 5.0164e-05],
        [4.5302e-04, 2.3415e-03, 2.2683e-04],
        [1.1174e-03, 4.2453e-03, 1.5415e-04],
        [4.5593e-04, 1.1531e-04, 1.3515e-04],
        [3.4281e-04, 1.1381e-03, 1.9063e-04],
        [1.9147e-03, 3.2742e-03, 2.6740e-04],
        [1.2299e-04, 6.1457e-05, 1.2025e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0004],
        [0.0011],
        [0.0008],
        [0.0004],
        [0.0009],
        [0.0007],
        [0.0023],
        [0.0020],
        [0.0001],
        [0.0009],
        [0.0004]], device='cuda:0')/tensor([[0.0024, 0.0002, 0.0002, 0.0007, 0.0003, 0.0004, 0.0011, 0.0008, 0.0004,
         0.0009, 0.0007, 0.0023, 0.0020, 0.0001, 0.0009, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3987e-03],
        [1.4550e-05],
        [1.5040e-04],
        [6.0699e-04],
        [2.7706e-04],
        [8.9259e-04],
        [8.6684e-04],
        [2.0184e-03],
        [9.9062e-04],
        [1.7952e-04],
        [6.6438e-04],
        [2.6277e-03],
        [1.1404e-03],
        [9.5961e-05],
        [6.1284e-04],
        [1.5912e-04]], device='cuda:0')/tensor([[1.3987e-03, 1.4550e-05, 1.5040e-04, 6.0699e-04, 2.7706e-04, 8.9259e-04,
         8.6684e-04, 2.0184e-03, 9.9062e-04, 1.7952e-04, 6.6438e-04, 2.6277e-03,
         1.1404e-03, 9.5961e-05, 6.1284e-04, 1.5912e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.1737e-04],
        [1.8808e-04],
        [5.4139e-05],
        [1.9771e-04],
        [1.4502e-04],
        [1.5709e-04],
        [2.1143e-04],
        [3.6105e-04],
        [1.5431e-04],
        [9.0459e-05],
        [2.7078e-04],
        [2.1276e-04],
        [3.5579e-04],
        [1.1516e-04],
        [1.2371e-04],
        [5.8555e-05]], device='cuda:0')/tensor([[5.1737e-04, 1.8808e-04, 5.4139e-05, 1.9771e-04, 1.4502e-04, 1.5709e-04,
         2.1143e-04, 3.6105e-04, 1.5431e-04, 9.0459e-05, 2.7078e-04, 2.1276e-04,
         3.5579e-04, 1.1516e-04, 1.2371e-04, 5.8555e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3800e-03, 1.3987e-03, 5.1737e-04],
        [1.9163e-04, 1.4550e-05, 1.8808e-04],
        [1.8294e-04, 1.5040e-04, 5.4139e-05],
        [6.8543e-04, 6.0699e-04, 1.9771e-04],
        [3.2817e-04, 2.7706e-04, 1.4502e-04],
        [3.8014e-04, 8.9259e-04, 1.5709e-04],
        [1.0924e-03, 8.6684e-04, 2.1143e-04],
        [7.7130e-04, 2.0184e-03, 3.6105e-04],
        [4.2836e-04, 9.9062e-04, 1.5431e-04],
        [8.5759e-04, 1.7952e-04, 9.0459e-05],
        [7.1257e-04, 6.6438e-04, 2.7078e-04],
        [2.2672e-03, 2.6277e-03, 2.1276e-04],
        [2.0350e-03, 1.1404e-03, 3.5579e-04],
        [1.1458e-04, 9.5961e-05, 1.1516e-04],
        [9.1352e-04, 6.1284e-04, 1.2371e-04],
        [4.4857e-04, 1.5912e-04, 5.8555e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0001],
        [0.0005],
        [0.0002],
        [0.0010],
        [0.0008],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0009]], device='cuda:0')/tensor([[0.0015, 0.0002, 0.0004, 0.0004, 0.0003, 0.0005, 0.0004, 0.0001, 0.0005,
         0.0002, 0.0010, 0.0008, 0.0005, 0.0004, 0.0007, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4087e-03],
        [2.5785e-04],
        [2.2096e-04],
        [6.8429e-04],
        [3.5269e-04],
        [4.9984e-03],
        [2.7097e-04],
        [1.0972e-04],
        [1.1476e-03],
        [1.5104e-05],
        [4.3831e-04],
        [6.6316e-04],
        [6.7957e-04],
        [7.9281e-05],
        [2.5206e-04],
        [1.4457e-03]], device='cuda:0')/tensor([[1.4087e-03, 2.5785e-04, 2.2096e-04, 6.8429e-04, 3.5269e-04, 4.9984e-03,
         2.7097e-04, 1.0972e-04, 1.1476e-03, 1.5104e-05, 4.3831e-04, 6.6316e-04,
         6.7957e-04, 7.9281e-05, 2.5206e-04, 1.4457e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.9587e-04],
        [1.5200e-04],
        [9.1293e-05],
        [1.5070e-04],
        [1.7121e-04],
        [1.1423e-04],
        [7.4223e-05],
        [1.9755e-04],
        [2.1555e-04],
        [6.0730e-05],
        [3.1778e-04],
        [3.7629e-05],
        [3.2382e-04],
        [1.9080e-04],
        [1.0808e-04],
        [6.2926e-04]], device='cuda:0')/tensor([[9.9587e-04, 1.5200e-04, 9.1293e-05, 1.5070e-04, 1.7121e-04, 1.1423e-04,
         7.4223e-05, 1.9755e-04, 2.1555e-04, 6.0730e-05, 3.1778e-04, 3.7629e-05,
         3.2382e-04, 1.9080e-04, 1.0808e-04, 6.2926e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4823e-03, 1.4087e-03, 9.9587e-04],
        [2.3483e-04, 2.5785e-04, 1.5200e-04],
        [3.9073e-04, 2.2096e-04, 9.1293e-05],
        [4.1961e-04, 6.8429e-04, 1.5070e-04],
        [2.5656e-04, 3.5269e-04, 1.7121e-04],
        [5.3260e-04, 4.9984e-03, 1.1423e-04],
        [4.2150e-04, 2.7097e-04, 7.4223e-05],
        [1.4669e-04, 1.0972e-04, 1.9755e-04],
        [4.5204e-04, 1.1476e-03, 2.1555e-04],
        [1.5649e-04, 1.5104e-05, 6.0730e-05],
        [9.6799e-04, 4.3831e-04, 3.1778e-04],
        [7.8524e-04, 6.6316e-04, 3.7629e-05],
        [5.3957e-04, 6.7957e-04, 3.2382e-04],
        [4.1037e-04, 7.9281e-05, 1.9080e-04],
        [6.7453e-04, 2.5206e-04, 1.0808e-04],
        [8.6534e-04, 1.4457e-03, 6.2926e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1626e-04],
        [2.3872e-04],
        [2.4244e-04],
        [5.6418e-04],
        [5.9245e-04],
        [7.0191e-05],
        [9.6671e-04],
        [3.7829e-04],
        [3.4644e-04],
        [1.1475e-04],
        [1.3779e-04],
        [5.6044e-04],
        [4.2501e-04],
        [2.6290e-04],
        [3.0793e-04],
        [1.3232e-03]], device='cuda:0')/tensor([[2.1626e-04, 2.3872e-04, 2.4244e-04, 5.6418e-04, 5.9245e-04, 7.0191e-05,
         9.6671e-04, 3.7829e-04, 3.4644e-04, 1.1475e-04, 1.3779e-04, 5.6044e-04,
         4.2501e-04, 2.6290e-04, 3.0793e-04, 1.3232e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.4858e-04],
        [3.1180e-04],
        [5.6583e-05],
        [5.4987e-04],
        [3.7084e-04],
        [6.9436e-05],
        [1.3711e-03],
        [7.9803e-04],
        [2.6801e-04],
        [5.1260e-05],
        [6.7262e-04],
        [5.3882e-04],
        [1.4242e-04],
        [1.5856e-04],
        [6.6873e-04],
        [1.2117e-03]], device='cuda:0')/tensor([[5.4858e-04, 3.1180e-04, 5.6583e-05, 5.4987e-04, 3.7084e-04, 6.9436e-05,
         1.3711e-03, 7.9803e-04, 2.6801e-04, 5.1260e-05, 6.7262e-04, 5.3882e-04,
         1.4242e-04, 1.5856e-04, 6.6873e-04, 1.2117e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.1176e-04],
        [1.8257e-04],
        [3.9391e-04],
        [4.5862e-04],
        [8.6356e-05],
        [1.7503e-04],
        [3.5716e-04],
        [2.1846e-04],
        [1.9273e-04],
        [1.3891e-04],
        [2.0155e-04],
        [1.1101e-04],
        [1.3548e-04],
        [2.1783e-04],
        [1.7155e-04],
        [9.1308e-05]], device='cuda:0')/tensor([[3.1176e-04, 1.8257e-04, 3.9391e-04, 4.5862e-04, 8.6356e-05, 1.7503e-04,
         3.5716e-04, 2.1846e-04, 1.9273e-04, 1.3891e-04, 2.0155e-04, 1.1101e-04,
         1.3548e-04, 2.1783e-04, 1.7155e-04, 9.1308e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1626e-04, 5.4858e-04, 3.1176e-04],
        [2.3872e-04, 3.1180e-04, 1.8257e-04],
        [2.4244e-04, 5.6583e-05, 3.9391e-04],
        [5.6418e-04, 5.4987e-04, 4.5862e-04],
        [5.9245e-04, 3.7084e-04, 8.6356e-05],
        [7.0191e-05, 6.9436e-05, 1.7503e-04],
        [9.6671e-04, 1.3711e-03, 3.5716e-04],
        [3.7829e-04, 7.9803e-04, 2.1846e-04],
        [3.4644e-04, 2.6801e-04, 1.9273e-04],
        [1.1475e-04, 5.1260e-05, 1.3891e-04],
        [1.3779e-04, 6.7262e-04, 2.0155e-04],
        [5.6044e-04, 5.3882e-04, 1.1101e-04],
        [4.2501e-04, 1.4242e-04, 1.3548e-04],
        [2.6290e-04, 1.5856e-04, 2.1783e-04],
        [3.0793e-04, 6.6873e-04, 1.7155e-04],
        [1.3232e-03, 1.2117e-03, 9.1308e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.2656e-05],
        [3.4850e-04],
        [4.1366e-04],
        [1.1234e-04],
        [8.6498e-04],
        [1.0860e-04],
        [4.5630e-04],
        [2.3967e-05],
        [6.3676e-04],
        [4.3217e-04],
        [1.3759e-03],
        [2.4098e-04],
        [4.4953e-04],
        [2.6573e-04],
        [4.2305e-04],
        [8.3667e-05]], device='cuda:0')/tensor([[4.2656e-05, 3.4850e-04, 4.1366e-04, 1.1234e-04, 8.6498e-04, 1.0860e-04,
         4.5630e-04, 2.3967e-05, 6.3676e-04, 4.3217e-04, 1.3759e-03, 2.4098e-04,
         4.4953e-04, 2.6573e-04, 4.2305e-04, 8.3667e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.9009e-06],
        [7.1961e-05],
        [2.6782e-03],
        [6.6210e-05],
        [1.7287e-03],
        [4.1193e-05],
        [1.8066e-04],
        [1.2724e-06],
        [1.0636e-03],
        [3.2487e-04],
        [4.1657e-04],
        [1.2402e-04],
        [2.4286e-04],
        [2.5562e-04],
        [4.0890e-04],
        [1.7621e-05]], device='cuda:0')/tensor([[6.9009e-06, 7.1961e-05, 2.6782e-03, 6.6210e-05, 1.7287e-03, 4.1193e-05,
         1.8066e-04, 1.2724e-06, 1.0636e-03, 3.2487e-04, 4.1657e-04, 1.2402e-04,
         2.4286e-04, 2.5562e-04, 4.0890e-04, 1.7621e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.6251e-05],
        [1.0796e-04],
        [3.3594e-04],
        [6.1734e-05],
        [3.4074e-04],
        [7.1261e-05],
        [1.4181e-04],
        [2.3353e-05],
        [6.0429e-04],
        [2.0318e-04],
        [4.6134e-04],
        [1.3688e-04],
        [1.3830e-04],
        [1.0114e-04],
        [3.2722e-04],
        [5.0662e-05]], device='cuda:0')/tensor([[2.6251e-05, 1.0796e-04, 3.3594e-04, 6.1734e-05, 3.4074e-04, 7.1261e-05,
         1.4181e-04, 2.3353e-05, 6.0429e-04, 2.0318e-04, 4.6134e-04, 1.3688e-04,
         1.3830e-04, 1.0114e-04, 3.2722e-04, 5.0662e-05]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[4.2656e-05, 6.9009e-06, 2.6251e-05],
        [3.4850e-04, 7.1961e-05, 1.0796e-04],
        [4.1366e-04, 2.6782e-03, 3.3594e-04],
        [1.1234e-04, 6.6210e-05, 6.1734e-05],
        [8.6498e-04, 1.7287e-03, 3.4074e-04],
        [1.0860e-04, 4.1193e-05, 7.1261e-05],
        [4.5630e-04, 1.8066e-04, 1.4181e-04],
        [2.3967e-05, 1.2724e-06, 2.3353e-05],
        [6.3676e-04, 1.0636e-03, 6.0429e-04],
        [4.3217e-04, 3.2487e-04, 2.0318e-04],
        [1.3759e-03, 4.1657e-04, 4.6134e-04],
        [2.4098e-04, 1.2402e-04, 1.3688e-04],
        [4.4953e-04, 2.4286e-04, 1.3830e-04],
        [2.6573e-04, 2.5562e-04, 1.0114e-04],
        [4.2305e-04, 4.0890e-04, 3.2722e-04],
        [8.3667e-05, 1.7621e-05, 5.0662e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0010],
        [0.0001],
        [0.0014],
        [0.0005]], device='cuda:0')/tensor([[0.0010, 0.0001, 0.0014, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[8.0454e-04],
        [2.6436e-05],
        [4.2750e-04],
        [5.7790e-04]], device='cuda:0')/tensor([[8.0454e-04, 2.6436e-05, 4.2750e-04, 5.7790e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.9819e-04],
        [5.2533e-05],
        [1.0357e-03],
        [6.0547e-04]], device='cuda:0')/tensor([[1.9819e-04, 5.2533e-05, 1.0357e-03, 6.0547e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.0444e-03, 8.0454e-04, 1.9819e-04],
        [1.2710e-04, 2.6436e-05, 5.2533e-05],
        [1.4170e-03, 4.2750e-04, 1.0357e-03],
        [4.5764e-04, 5.7790e-04, 6.0547e-04]], device='cuda:0')
acc:  0.18181818181818182
Time taken to execute the de NLI task with prompt type active, variation 1 and batchsize 16: 0:01:01.870975
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI active 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 374.01it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0007],
        [0.0018],
        [0.0019],
        [0.0018],
        [0.0014],
        [0.0004],
        [0.0008],
        [0.0007],
        [0.0002],
        [0.0007],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0002, 0.0006, 0.0007, 0.0018, 0.0019, 0.0018, 0.0014,
         0.0004, 0.0008, 0.0007, 0.0002, 0.0007, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3561e-03],
        [2.2809e-03],
        [4.8625e-05],
        [7.7338e-04],
        [1.6818e-05],
        [3.7890e-03],
        [1.9733e-03],
        [3.1059e-03],
        [9.4106e-04],
        [2.4130e-04],
        [7.2859e-04],
        [2.3315e-03],
        [2.9886e-05],
        [1.5703e-03],
        [1.0701e-03],
        [2.8744e-03]], device='cuda:0')/tensor([[1.3561e-03, 2.2809e-03, 4.8625e-05, 7.7338e-04, 1.6818e-05, 3.7890e-03,
         1.9733e-03, 3.1059e-03, 9.4106e-04, 2.4130e-04, 7.2859e-04, 2.3315e-03,
         2.9886e-05, 1.5703e-03, 1.0701e-03, 2.8744e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0576e-04],
        [1.9493e-04],
        [3.0638e-04],
        [3.8423e-05],
        [1.5864e-04],
        [4.3126e-04],
        [4.4558e-04],
        [3.6578e-04],
        [1.4934e-04],
        [2.6275e-04],
        [7.5747e-05],
        [8.9222e-04],
        [1.8309e-04],
        [2.2784e-04],
        [2.2737e-04],
        [3.6539e-04]], device='cuda:0')/tensor([[2.0576e-04, 1.9493e-04, 3.0638e-04, 3.8423e-05, 1.5864e-04, 4.3126e-04,
         4.4558e-04, 3.6578e-04, 1.4934e-04, 2.6275e-04, 7.5747e-05, 8.9222e-04,
         1.8309e-04, 2.2784e-04, 2.2737e-04, 3.6539e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8354e-04, 1.3561e-03, 2.0576e-04],
        [4.1357e-04, 2.2809e-03, 1.9493e-04],
        [2.3865e-04, 4.8625e-05, 3.0638e-04],
        [5.8625e-04, 7.7338e-04, 3.8423e-05],
        [6.5442e-04, 1.6818e-05, 1.5864e-04],
        [1.7532e-03, 3.7890e-03, 4.3126e-04],
        [1.9026e-03, 1.9733e-03, 4.4558e-04],
        [1.7920e-03, 3.1059e-03, 3.6578e-04],
        [1.3621e-03, 9.4106e-04, 1.4934e-04],
        [3.5410e-04, 2.4130e-04, 2.6275e-04],
        [7.7809e-04, 7.2859e-04, 7.5747e-05],
        [6.5704e-04, 2.3315e-03, 8.9222e-04],
        [2.0739e-04, 2.9886e-05, 1.8309e-04],
        [6.6785e-04, 1.5703e-03, 2.2784e-04],
        [7.0686e-04, 1.0701e-03, 2.2737e-04],
        [5.3232e-04, 2.8744e-03, 3.6539e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.6467e-04],
        [6.3498e-04],
        [8.8867e-04],
        [2.5020e-04],
        [4.1925e-04],
        [2.1236e-04],
        [2.1873e-04],
        [6.8706e-04],
        [4.5625e-04],
        [3.7194e-04],
        [3.6267e-04],
        [1.3202e-04],
        [1.4446e-04],
        [4.3571e-04],
        [3.4499e-04],
        [7.6795e-05]], device='cuda:0')/tensor([[5.6467e-04, 6.3498e-04, 8.8867e-04, 2.5020e-04, 4.1925e-04, 2.1236e-04,
         2.1873e-04, 6.8706e-04, 4.5625e-04, 3.7194e-04, 3.6267e-04, 1.3202e-04,
         1.4446e-04, 4.3571e-04, 3.4499e-04, 7.6795e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.9594e-04],
        [8.8825e-04],
        [2.7944e-03],
        [3.0004e-04],
        [4.7718e-03],
        [4.2334e-05],
        [5.0504e-05],
        [8.6166e-04],
        [4.5177e-04],
        [2.5368e-04],
        [4.6927e-04],
        [1.7939e-05],
        [7.8890e-06],
        [8.0064e-04],
        [4.7528e-04],
        [5.4203e-05]], device='cuda:0')/tensor([[8.9594e-04, 8.8825e-04, 2.7944e-03, 3.0004e-04, 4.7718e-03, 4.2334e-05,
         5.0504e-05, 8.6166e-04, 4.5177e-04, 2.5368e-04, 4.6927e-04, 1.7939e-05,
         7.8890e-06, 8.0064e-04, 4.7528e-04, 5.4203e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0010],
        [0.0008],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0011],
        [0.0017],
        [0.0011],
        [0.0004],
        [0.0001],
        [0.0002],
        [0.0007],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0010, 0.0008, 0.0004, 0.0003, 0.0002, 0.0010, 0.0002, 0.0011, 0.0017,
         0.0011, 0.0004, 0.0001, 0.0002, 0.0007, 0.0002, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.6467e-04, 8.9594e-04, 9.9054e-04],
        [6.3498e-04, 8.8825e-04, 8.2245e-04],
        [8.8867e-04, 2.7944e-03, 3.9511e-04],
        [2.5020e-04, 3.0004e-04, 2.6815e-04],
        [4.1925e-04, 4.7718e-03, 2.2625e-04],
        [2.1236e-04, 4.2334e-05, 1.0145e-03],
        [2.1873e-04, 5.0504e-05, 2.2999e-04],
        [6.8706e-04, 8.6166e-04, 1.0514e-03],
        [4.5625e-04, 4.5177e-04, 1.6701e-03],
        [3.7194e-04, 2.5368e-04, 1.1114e-03],
        [3.6267e-04, 4.6927e-04, 4.4429e-04],
        [1.3202e-04, 1.7939e-05, 1.2235e-04],
        [1.4446e-04, 7.8890e-06, 1.5024e-04],
        [4.3571e-04, 8.0064e-04, 7.2350e-04],
        [3.4499e-04, 4.7528e-04, 1.7978e-04],
        [7.6795e-05, 5.4203e-05, 1.5058e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.9435e-04],
        [1.5693e-03],
        [1.2558e-03],
        [4.6341e-05],
        [6.7537e-04],
        [6.2217e-04],
        [4.2061e-03],
        [8.5090e-04],
        [1.0351e-03],
        [8.1945e-04],
        [7.1198e-04],
        [4.3206e-04],
        [4.1415e-05],
        [3.6687e-03],
        [1.8629e-03],
        [1.6952e-03]], device='cuda:0')/tensor([[6.9435e-04, 1.5693e-03, 1.2558e-03, 4.6341e-05, 6.7537e-04, 6.2217e-04,
         4.2061e-03, 8.5090e-04, 1.0351e-03, 8.1945e-04, 7.1198e-04, 4.3206e-04,
         4.1415e-05, 3.6687e-03, 1.8629e-03, 1.6952e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3932e-03],
        [1.4522e-03],
        [2.8895e-03],
        [4.1337e-05],
        [2.3548e-03],
        [3.7325e-04],
        [1.8623e-03],
        [3.1156e-03],
        [1.6765e-03],
        [7.2113e-04],
        [1.0484e-03],
        [2.0737e-04],
        [3.9052e-06],
        [3.5883e-03],
        [2.1519e-03],
        [1.8595e-03]], device='cuda:0')/tensor([[1.3932e-03, 1.4522e-03, 2.8895e-03, 4.1337e-05, 2.3548e-03, 3.7325e-04,
         1.8623e-03, 3.1156e-03, 1.6765e-03, 7.2113e-04, 1.0484e-03, 2.0737e-04,
         3.9052e-06, 3.5883e-03, 2.1519e-03, 1.8595e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.4360e-05],
        [8.0269e-04],
        [2.5702e-04],
        [1.3402e-04],
        [2.5292e-04],
        [2.1168e-03],
        [7.6460e-04],
        [1.0878e-04],
        [1.6204e-04],
        [1.8722e-04],
        [4.3071e-04],
        [1.3752e-04],
        [3.7106e-05],
        [3.6340e-04],
        [4.0867e-04],
        [4.1102e-04]], device='cuda:0')/tensor([[6.4360e-05, 8.0269e-04, 2.5702e-04, 1.3402e-04, 2.5292e-04, 2.1168e-03,
         7.6460e-04, 1.0878e-04, 1.6204e-04, 1.8722e-04, 4.3071e-04, 1.3752e-04,
         3.7106e-05, 3.6340e-04, 4.0867e-04, 4.1102e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.9435e-04, 1.3932e-03, 6.4360e-05],
        [1.5693e-03, 1.4522e-03, 8.0269e-04],
        [1.2558e-03, 2.8895e-03, 2.5702e-04],
        [4.6341e-05, 4.1337e-05, 1.3402e-04],
        [6.7537e-04, 2.3548e-03, 2.5292e-04],
        [6.2217e-04, 3.7325e-04, 2.1168e-03],
        [4.2061e-03, 1.8623e-03, 7.6460e-04],
        [8.5090e-04, 3.1156e-03, 1.0878e-04],
        [1.0351e-03, 1.6765e-03, 1.6204e-04],
        [8.1945e-04, 7.2113e-04, 1.8722e-04],
        [7.1198e-04, 1.0484e-03, 4.3071e-04],
        [4.3206e-04, 2.0737e-04, 1.3752e-04],
        [4.1415e-05, 3.9052e-06, 3.7106e-05],
        [3.6687e-03, 3.5883e-03, 3.6340e-04],
        [1.8629e-03, 2.1519e-03, 4.0867e-04],
        [1.6952e-03, 1.8595e-03, 4.1102e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0022],
        [0.0015],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0014],
        [0.0011],
        [0.0006],
        [0.0007]], device='cuda:0')/tensor([[0.0022, 0.0015, 0.0006, 0.0002, 0.0005, 0.0007, 0.0002, 0.0002, 0.0003,
         0.0002, 0.0006, 0.0005, 0.0014, 0.0011, 0.0006, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.7765e-03],
        [2.9808e-03],
        [2.3562e-03],
        [2.8706e-04],
        [1.8093e-03],
        [2.4093e-03],
        [1.8497e-04],
        [4.3954e-05],
        [9.4970e-04],
        [3.8100e-05],
        [6.7877e-04],
        [5.6604e-04],
        [1.1011e-03],
        [2.6604e-03],
        [2.3798e-03],
        [8.1373e-04]], device='cuda:0')/tensor([[8.7765e-03, 2.9808e-03, 2.3562e-03, 2.8706e-04, 1.8093e-03, 2.4093e-03,
         1.8497e-04, 4.3954e-05, 9.4970e-04, 3.8100e-05, 6.7877e-04, 5.6604e-04,
         1.1011e-03, 2.6604e-03, 2.3798e-03, 8.1373e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.3503e-04],
        [2.2205e-04],
        [1.2779e-04],
        [6.7454e-05],
        [1.4899e-04],
        [4.5731e-04],
        [1.6572e-04],
        [1.1978e-04],
        [1.9529e-04],
        [7.5627e-05],
        [7.5099e-04],
        [3.4775e-04],
        [3.3733e-04],
        [5.0938e-04],
        [2.2348e-04],
        [6.5299e-05]], device='cuda:0')/tensor([[2.3503e-04, 2.2205e-04, 1.2779e-04, 6.7454e-05, 1.4899e-04, 4.5731e-04,
         1.6572e-04, 1.1978e-04, 1.9529e-04, 7.5627e-05, 7.5099e-04, 3.4775e-04,
         3.3733e-04, 5.0938e-04, 2.2348e-04, 6.5299e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1609e-03, 8.7765e-03, 2.3503e-04],
        [1.5386e-03, 2.9808e-03, 2.2205e-04],
        [6.0642e-04, 2.3562e-03, 1.2779e-04],
        [2.0520e-04, 2.8706e-04, 6.7454e-05],
        [4.5163e-04, 1.8093e-03, 1.4899e-04],
        [6.6195e-04, 2.4093e-03, 4.5731e-04],
        [1.8614e-04, 1.8497e-04, 1.6572e-04],
        [1.6882e-04, 4.3954e-05, 1.1978e-04],
        [2.5093e-04, 9.4970e-04, 1.9529e-04],
        [2.3152e-04, 3.8100e-05, 7.5627e-05],
        [5.9938e-04, 6.7877e-04, 7.5099e-04],
        [5.4257e-04, 5.6604e-04, 3.4775e-04],
        [1.3942e-03, 1.1011e-03, 3.3733e-04],
        [1.1357e-03, 2.6604e-03, 5.0938e-04],
        [6.1410e-04, 2.3798e-03, 2.2348e-04],
        [6.6480e-04, 8.1373e-04, 6.5299e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.5964e-04],
        [2.1554e-04],
        [4.2433e-04],
        [2.2275e-04],
        [8.1036e-04],
        [1.2205e-03],
        [6.2775e-04],
        [7.5749e-04],
        [7.4668e-04],
        [9.4738e-05],
        [4.1927e-04],
        [8.7032e-04],
        [3.5187e-04],
        [4.3820e-04],
        [2.8255e-04],
        [2.0179e-03]], device='cuda:0')/tensor([[6.5964e-04, 2.1554e-04, 4.2433e-04, 2.2275e-04, 8.1036e-04, 1.2205e-03,
         6.2775e-04, 7.5749e-04, 7.4668e-04, 9.4738e-05, 4.1927e-04, 8.7032e-04,
         3.5187e-04, 4.3820e-04, 2.8255e-04, 2.0179e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3303e-03],
        [6.3298e-05],
        [4.0608e-04],
        [2.0479e-04],
        [1.3143e-03],
        [2.6441e-04],
        [9.6406e-04],
        [4.4539e-04],
        [2.0136e-03],
        [7.7506e-06],
        [9.4011e-04],
        [1.0743e-03],
        [2.2120e-03],
        [4.5492e-04],
        [9.9282e-05],
        [1.0548e-03]], device='cuda:0')/tensor([[1.3303e-03, 6.3298e-05, 4.0608e-04, 2.0479e-04, 1.3143e-03, 2.6441e-04,
         9.6406e-04, 4.4539e-04, 2.0136e-03, 7.7506e-06, 9.4011e-04, 1.0743e-03,
         2.2120e-03, 4.5492e-04, 9.9282e-05, 1.0548e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3887e-04],
        [9.8887e-05],
        [1.7825e-04],
        [6.8333e-05],
        [4.8047e-04],
        [8.2848e-05],
        [4.1807e-05],
        [9.4408e-05],
        [1.7237e-04],
        [5.9280e-05],
        [2.1386e-04],
        [1.1981e-04],
        [8.7524e-05],
        [1.6979e-04],
        [6.8794e-04],
        [1.7998e-04]], device='cuda:0')/tensor([[3.3887e-04, 9.8887e-05, 1.7825e-04, 6.8333e-05, 4.8047e-04, 8.2848e-05,
         4.1807e-05, 9.4408e-05, 1.7237e-04, 5.9280e-05, 2.1386e-04, 1.1981e-04,
         8.7524e-05, 1.6979e-04, 6.8794e-04, 1.7998e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.5964e-04, 1.3303e-03, 3.3887e-04],
        [2.1554e-04, 6.3298e-05, 9.8887e-05],
        [4.2433e-04, 4.0608e-04, 1.7825e-04],
        [2.2275e-04, 2.0479e-04, 6.8333e-05],
        [8.1036e-04, 1.3143e-03, 4.8047e-04],
        [1.2205e-03, 2.6441e-04, 8.2848e-05],
        [6.2775e-04, 9.6406e-04, 4.1807e-05],
        [7.5749e-04, 4.4539e-04, 9.4408e-05],
        [7.4668e-04, 2.0136e-03, 1.7237e-04],
        [9.4738e-05, 7.7506e-06, 5.9280e-05],
        [4.1927e-04, 9.4011e-04, 2.1386e-04],
        [8.7032e-04, 1.0743e-03, 1.1981e-04],
        [3.5187e-04, 2.2120e-03, 8.7524e-05],
        [4.3820e-04, 4.5492e-04, 1.6979e-04],
        [2.8255e-04, 9.9282e-05, 6.8794e-04],
        [2.0179e-03, 1.0548e-03, 1.7998e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0009],
        [0.0011],
        [0.0014],
        [0.0017],
        [0.0002],
        [0.0011],
        [0.0005],
        [0.0013],
        [0.0008],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0009, 0.0011, 0.0014, 0.0017, 0.0002, 0.0011, 0.0005, 0.0013,
         0.0008, 0.0003, 0.0002, 0.0006, 0.0006, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0025],
        [0.0009],
        [0.0006],
        [0.0017],
        [0.0009],
        [0.0014],
        [0.0019],
        [0.0013],
        [0.0036],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0010],
        [0.0014],
        [0.0014]], device='cuda:0')/tensor([[0.0011, 0.0025, 0.0009, 0.0006, 0.0017, 0.0009, 0.0014, 0.0019, 0.0013,
         0.0036, 0.0005, 0.0002, 0.0008, 0.0010, 0.0014, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.1466e-04],
        [3.5493e-04],
        [8.1007e-05],
        [1.5010e-04],
        [2.0059e-04],
        [1.0377e-04],
        [2.6934e-04],
        [1.5006e-04],
        [1.3029e-04],
        [3.8214e-04],
        [3.0535e-04],
        [1.0643e-04],
        [3.0952e-04],
        [1.5240e-04],
        [1.1340e-04],
        [5.5727e-04]], device='cuda:0')/tensor([[4.1466e-04, 3.5493e-04, 8.1007e-05, 1.5010e-04, 2.0059e-04, 1.0377e-04,
         2.6934e-04, 1.5006e-04, 1.3029e-04, 3.8214e-04, 3.0535e-04, 1.0643e-04,
         3.0952e-04, 1.5240e-04, 1.1340e-04, 5.5727e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.1457e-04, 1.0577e-03, 4.1466e-04],
        [8.7691e-04, 2.4915e-03, 3.5493e-04],
        [1.1412e-03, 9.3942e-04, 8.1007e-05],
        [1.3921e-03, 6.4670e-04, 1.5010e-04],
        [1.7166e-03, 1.7380e-03, 2.0059e-04],
        [2.4743e-04, 9.2255e-04, 1.0377e-04],
        [1.0537e-03, 1.4109e-03, 2.6934e-04],
        [5.3699e-04, 1.8563e-03, 1.5006e-04],
        [1.3219e-03, 1.2822e-03, 1.3029e-04],
        [7.5744e-04, 3.6189e-03, 3.8214e-04],
        [2.7227e-04, 5.1336e-04, 3.0535e-04],
        [2.3547e-04, 1.7155e-04, 1.0643e-04],
        [5.9574e-04, 8.4996e-04, 3.0952e-04],
        [6.0458e-04, 9.7925e-04, 1.5240e-04],
        [3.2360e-04, 1.3837e-03, 1.1340e-04],
        [6.0050e-04, 1.4263e-03, 5.5727e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0006],
        [0.0009],
        [0.0088],
        [0.0007],
        [0.0007],
        [0.0012],
        [0.0007],
        [0.0012],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0011],
        [0.0007],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0007, 0.0006, 0.0009, 0.0088, 0.0007, 0.0007, 0.0012, 0.0007, 0.0012,
         0.0003, 0.0003, 0.0006, 0.0011, 0.0007, 0.0002, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5698e-04],
        [5.9551e-04],
        [2.6857e-03],
        [5.0817e-03],
        [2.3106e-04],
        [1.1185e-03],
        [2.2513e-03],
        [1.1469e-03],
        [1.7177e-03],
        [1.2482e-04],
        [6.1287e-04],
        [5.6235e-03],
        [4.3702e-03],
        [8.2705e-04],
        [3.2158e-04],
        [5.1228e-05]], device='cuda:0')/tensor([[8.5698e-04, 5.9551e-04, 2.6857e-03, 5.0817e-03, 2.3106e-04, 1.1185e-03,
         2.2513e-03, 1.1469e-03, 1.7177e-03, 1.2482e-04, 6.1287e-04, 5.6235e-03,
         4.3702e-03, 8.2705e-04, 3.2158e-04, 5.1228e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8318e-04],
        [9.1357e-05],
        [1.9298e-04],
        [1.1467e-03],
        [1.9768e-04],
        [2.4109e-04],
        [2.7890e-04],
        [2.4024e-04],
        [1.5634e-04],
        [1.3234e-04],
        [5.2297e-05],
        [4.2940e-04],
        [3.2134e-04],
        [1.2173e-04],
        [1.5391e-04],
        [1.2460e-04]], device='cuda:0')/tensor([[1.8318e-04, 9.1357e-05, 1.9298e-04, 1.1467e-03, 1.9768e-04, 2.4109e-04,
         2.7890e-04, 2.4024e-04, 1.5634e-04, 1.3234e-04, 5.2297e-05, 4.2940e-04,
         3.2134e-04, 1.2173e-04, 1.5391e-04, 1.2460e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.8908e-04, 8.5698e-04, 1.8318e-04],
        [6.2567e-04, 5.9551e-04, 9.1357e-05],
        [9.4754e-04, 2.6857e-03, 1.9298e-04],
        [8.7738e-03, 5.0817e-03, 1.1467e-03],
        [6.5736e-04, 2.3106e-04, 1.9768e-04],
        [6.7317e-04, 1.1185e-03, 2.4109e-04],
        [1.1636e-03, 2.2513e-03, 2.7890e-04],
        [7.0223e-04, 1.1469e-03, 2.4024e-04],
        [1.1672e-03, 1.7177e-03, 1.5634e-04],
        [3.4657e-04, 1.2482e-04, 1.3234e-04],
        [2.7773e-04, 6.1287e-04, 5.2297e-05],
        [5.7972e-04, 5.6235e-03, 4.2940e-04],
        [1.1438e-03, 4.3702e-03, 3.2134e-04],
        [7.1585e-04, 8.2705e-04, 1.2173e-04],
        [2.3035e-04, 3.2158e-04, 1.5391e-04],
        [1.7702e-04, 5.1228e-05, 1.2460e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0009],
        [0.0005],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0002],
        [0.0015],
        [0.0009],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0011],
        [0.0009],
        [0.0002]], device='cuda:0')/tensor([[0.0008, 0.0009, 0.0005, 0.0003, 0.0003, 0.0005, 0.0008, 0.0002, 0.0015,
         0.0009, 0.0005, 0.0005, 0.0002, 0.0011, 0.0009, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3509e-03],
        [3.0730e-03],
        [5.2252e-05],
        [6.8958e-04],
        [3.0491e-04],
        [1.3865e-03],
        [1.5247e-03],
        [2.9849e-04],
        [7.5911e-04],
        [5.8850e-04],
        [1.0802e-03],
        [1.2326e-04],
        [3.1089e-05],
        [2.1492e-03],
        [5.2189e-04],
        [3.3593e-05]], device='cuda:0')/tensor([[1.3509e-03, 3.0730e-03, 5.2252e-05, 6.8958e-04, 3.0491e-04, 1.3865e-03,
         1.5247e-03, 2.9849e-04, 7.5911e-04, 5.8850e-04, 1.0802e-03, 1.2326e-04,
         3.1089e-05, 2.1492e-03, 5.2189e-04, 3.3593e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.3762e-04],
        [3.4626e-04],
        [1.6543e-04],
        [9.0528e-05],
        [1.7495e-04],
        [1.4523e-04],
        [1.8192e-04],
        [6.5928e-05],
        [2.2387e-04],
        [1.4259e-04],
        [1.1839e-04],
        [5.0587e-04],
        [6.8712e-05],
        [2.3083e-04],
        [2.7873e-04],
        [8.5210e-05]], device='cuda:0')/tensor([[8.3762e-04, 3.4626e-04, 1.6543e-04, 9.0528e-05, 1.7495e-04, 1.4523e-04,
         1.8192e-04, 6.5928e-05, 2.2387e-04, 1.4259e-04, 1.1839e-04, 5.0587e-04,
         6.8712e-05, 2.3083e-04, 2.7873e-04, 8.5210e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.5621e-04, 1.3509e-03, 8.3762e-04],
        [9.1423e-04, 3.0730e-03, 3.4626e-04],
        [5.3674e-04, 5.2252e-05, 1.6543e-04],
        [3.4258e-04, 6.8958e-04, 9.0528e-05],
        [2.6574e-04, 3.0491e-04, 1.7495e-04],
        [4.6776e-04, 1.3865e-03, 1.4523e-04],
        [8.2510e-04, 1.5247e-03, 1.8192e-04],
        [2.0475e-04, 2.9849e-04, 6.5928e-05],
        [1.4558e-03, 7.5911e-04, 2.2387e-04],
        [8.7455e-04, 5.8850e-04, 1.4259e-04],
        [4.7175e-04, 1.0802e-03, 1.1839e-04],
        [5.1639e-04, 1.2326e-04, 5.0587e-04],
        [2.1934e-04, 3.1089e-05, 6.8712e-05],
        [1.0978e-03, 2.1492e-03, 2.3083e-04],
        [8.6847e-04, 5.2189e-04, 2.7873e-04],
        [2.1073e-04, 3.3593e-05, 8.5210e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0005],
        [0.0012],
        [0.0012],
        [0.0008]], device='cuda:0')/tensor([[0.0005, 0.0012, 0.0012, 0.0008]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0010],
        [0.0013],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0010, 0.0013, 0.0004, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[6.3297e-05],
        [1.6280e-04],
        [1.5341e-03],
        [5.0230e-05]], device='cuda:0')/tensor([[6.3297e-05, 1.6280e-04, 1.5341e-03, 5.0230e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[5.1643e-04, 1.0202e-03, 6.3297e-05],
        [1.1551e-03, 1.2862e-03, 1.6280e-04],
        [1.2139e-03, 4.0189e-04, 1.5341e-03],
        [7.5246e-04, 4.5975e-04, 5.0230e-05]], device='cuda:0')
acc:  0.3712121212121212
Time taken to execute the de NLI task with prompt type active, variation 2 and batchsize 16: 0:01:01.922939
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI active 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 374.27it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.3679e-04],
        [8.5819e-05],
        [2.2348e-03],
        [1.0188e-04],
        [1.4965e-04],
        [8.5778e-04],
        [3.6459e-04],
        [1.0344e-04],
        [5.4653e-04],
        [1.2191e-03],
        [9.9325e-04],
        [1.6014e-04],
        [4.0789e-04],
        [4.3316e-04],
        [3.2930e-04],
        [2.4686e-04]], device='cuda:0')/tensor([[2.3679e-04, 8.5819e-05, 2.2348e-03, 1.0188e-04, 1.4965e-04, 8.5778e-04,
         3.6459e-04, 1.0344e-04, 5.4653e-04, 1.2191e-03, 9.9325e-04, 1.6014e-04,
         4.0789e-04, 4.3316e-04, 3.2930e-04, 2.4686e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0047],
        [0.0011],
        [0.0001],
        [0.0003],
        [0.0009],
        [0.0008],
        [0.0011],
        [0.0008],
        [0.0040],
        [0.0023],
        [0.0013],
        [0.0025],
        [0.0015],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0047, 0.0011, 0.0001, 0.0003, 0.0009, 0.0008, 0.0011, 0.0008,
         0.0040, 0.0023, 0.0013, 0.0025, 0.0015, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.5765e-05],
        [1.5496e-04],
        [5.3676e-03],
        [3.8540e-05],
        [2.2128e-05],
        [5.7501e-05],
        [7.2339e-05],
        [3.6810e-05],
        [3.9931e-04],
        [4.5672e-04],
        [4.7954e-04],
        [1.6478e-04],
        [1.7068e-04],
        [2.9899e-04],
        [1.7443e-04],
        [2.7240e-05]], device='cuda:0')/tensor([[6.5765e-05, 1.5496e-04, 5.3676e-03, 3.8540e-05, 2.2128e-05, 5.7501e-05,
         7.2339e-05, 3.6810e-05, 3.9931e-04, 4.5672e-04, 4.7954e-04, 1.6478e-04,
         1.7068e-04, 2.9899e-04, 1.7443e-04, 2.7240e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3679e-04, 2.7675e-04, 6.5765e-05],
        [8.5819e-05, 4.7050e-03, 1.5496e-04],
        [2.2348e-03, 1.0763e-03, 5.3676e-03],
        [1.0188e-04, 1.1679e-04, 3.8540e-05],
        [1.4965e-04, 3.0136e-04, 2.2128e-05],
        [8.5778e-04, 8.8310e-04, 5.7501e-05],
        [3.6459e-04, 7.7347e-04, 7.2339e-05],
        [1.0344e-04, 1.0799e-03, 3.6810e-05],
        [5.4653e-04, 7.5450e-04, 3.9931e-04],
        [1.2191e-03, 3.9938e-03, 4.5672e-04],
        [9.9325e-04, 2.3268e-03, 4.7954e-04],
        [1.6014e-04, 1.3094e-03, 1.6478e-04],
        [4.0789e-04, 2.4920e-03, 1.7068e-04],
        [4.3316e-04, 1.4958e-03, 2.9899e-04],
        [3.2930e-04, 1.8769e-04, 1.7443e-04],
        [2.4686e-04, 2.5830e-04, 2.7240e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.2247e-04],
        [8.8757e-04],
        [2.1168e-04],
        [5.3235e-04],
        [1.6915e-04],
        [1.1263e-04],
        [5.6599e-04],
        [6.2836e-04],
        [9.9111e-05],
        [2.0720e-03],
        [2.0209e-04],
        [8.3463e-04],
        [6.7032e-04],
        [3.9750e-04],
        [5.8606e-04],
        [2.2443e-03]], device='cuda:0')/tensor([[7.2247e-04, 8.8757e-04, 2.1168e-04, 5.3235e-04, 1.6915e-04, 1.1263e-04,
         5.6599e-04, 6.2836e-04, 9.9111e-05, 2.0720e-03, 2.0209e-04, 8.3463e-04,
         6.7032e-04, 3.9750e-04, 5.8606e-04, 2.2443e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0010],
        [0.0005],
        [0.0019],
        [0.0013],
        [0.0002],
        [0.0016],
        [0.0113],
        [0.0002],
        [0.0016],
        [0.0032],
        [0.0006],
        [0.0004],
        [0.0007],
        [0.0006],
        [0.0031]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0005, 0.0019, 0.0013, 0.0002, 0.0016, 0.0113, 0.0002,
         0.0016, 0.0032, 0.0006, 0.0004, 0.0007, 0.0006, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9001e-04],
        [1.8435e-04],
        [4.5624e-05],
        [1.8086e-04],
        [4.9155e-05],
        [3.4329e-05],
        [1.2696e-03],
        [2.0657e-03],
        [1.0428e-04],
        [1.3785e-04],
        [1.7419e-05],
        [2.2888e-03],
        [3.5041e-04],
        [2.4184e-04],
        [2.8700e-04],
        [7.3432e-05]], device='cuda:0')/tensor([[1.9001e-04, 1.8435e-04, 4.5624e-05, 1.8086e-04, 4.9155e-05, 3.4329e-05,
         1.2696e-03, 2.0657e-03, 1.0428e-04, 1.3785e-04, 1.7419e-05, 2.2888e-03,
         3.5041e-04, 2.4184e-04, 2.8700e-04, 7.3432e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.2247e-04, 3.1389e-04, 1.9001e-04],
        [8.8757e-04, 9.8279e-04, 1.8435e-04],
        [2.1168e-04, 4.7601e-04, 4.5624e-05],
        [5.3235e-04, 1.8661e-03, 1.8086e-04],
        [1.6915e-04, 1.2966e-03, 4.9155e-05],
        [1.1263e-04, 1.9923e-04, 3.4329e-05],
        [5.6599e-04, 1.6293e-03, 1.2696e-03],
        [6.2836e-04, 1.1327e-02, 2.0657e-03],
        [9.9111e-05, 2.1623e-04, 1.0428e-04],
        [2.0720e-03, 1.5765e-03, 1.3785e-04],
        [2.0209e-04, 3.1803e-03, 1.7419e-05],
        [8.3463e-04, 6.1412e-04, 2.2888e-03],
        [6.7032e-04, 4.2511e-04, 3.5041e-04],
        [3.9750e-04, 7.1517e-04, 2.4184e-04],
        [5.8606e-04, 5.7446e-04, 2.8700e-04],
        [2.2443e-03, 3.1251e-03, 7.3432e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5390e-04],
        [2.3683e-03],
        [4.7499e-04],
        [1.0262e-03],
        [5.7874e-04],
        [3.4447e-04],
        [1.3611e-03],
        [4.1175e-04],
        [3.0507e-04],
        [5.3282e-05],
        [6.0801e-04],
        [2.2349e-04],
        [9.9609e-04],
        [5.0463e-04],
        [3.8482e-04],
        [9.0176e-05]], device='cuda:0')/tensor([[2.5390e-04, 2.3683e-03, 4.7499e-04, 1.0262e-03, 5.7874e-04, 3.4447e-04,
         1.3611e-03, 4.1175e-04, 3.0507e-04, 5.3282e-05, 6.0801e-04, 2.2349e-04,
         9.9609e-04, 5.0463e-04, 3.8482e-04, 9.0176e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8865e-03],
        [4.2229e-03],
        [2.5676e-03],
        [1.1870e-03],
        [2.6149e-03],
        [5.6750e-04],
        [1.2875e-02],
        [2.2194e-03],
        [1.6253e-04],
        [2.9959e-05],
        [1.8956e-03],
        [9.5684e-04],
        [1.9766e-03],
        [6.7639e-04],
        [7.4943e-05],
        [1.0797e-03]], device='cuda:0')/tensor([[3.8865e-03, 4.2229e-03, 2.5676e-03, 1.1870e-03, 2.6149e-03, 5.6750e-04,
         1.2875e-02, 2.2194e-03, 1.6253e-04, 2.9959e-05, 1.8956e-03, 9.5684e-04,
         1.9766e-03, 6.7639e-04, 7.4943e-05, 1.0797e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7502e-04],
        [2.1677e-04],
        [1.3419e-03],
        [1.1746e-03],
        [2.6746e-04],
        [2.3249e-04],
        [3.5793e-04],
        [4.2648e-04],
        [5.8080e-04],
        [9.9308e-06],
        [1.6687e-04],
        [1.7838e-04],
        [3.0071e-04],
        [2.2357e-04],
        [1.7374e-05],
        [1.8750e-05]], device='cuda:0')/tensor([[1.7502e-04, 2.1677e-04, 1.3419e-03, 1.1746e-03, 2.6746e-04, 2.3249e-04,
         3.5793e-04, 4.2648e-04, 5.8080e-04, 9.9308e-06, 1.6687e-04, 1.7838e-04,
         3.0071e-04, 2.2357e-04, 1.7374e-05, 1.8750e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5390e-04, 3.8865e-03, 1.7502e-04],
        [2.3683e-03, 4.2229e-03, 2.1677e-04],
        [4.7499e-04, 2.5676e-03, 1.3419e-03],
        [1.0262e-03, 1.1870e-03, 1.1746e-03],
        [5.7874e-04, 2.6149e-03, 2.6746e-04],
        [3.4447e-04, 5.6750e-04, 2.3249e-04],
        [1.3611e-03, 1.2875e-02, 3.5793e-04],
        [4.1175e-04, 2.2194e-03, 4.2648e-04],
        [3.0507e-04, 1.6253e-04, 5.8080e-04],
        [5.3282e-05, 2.9959e-05, 9.9308e-06],
        [6.0801e-04, 1.8956e-03, 1.6687e-04],
        [2.2349e-04, 9.5684e-04, 1.7838e-04],
        [9.9609e-04, 1.9766e-03, 3.0071e-04],
        [5.0463e-04, 6.7639e-04, 2.2357e-04],
        [3.8482e-04, 7.4943e-05, 1.7374e-05],
        [9.0176e-05, 1.0797e-03, 1.8750e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0012],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0015],
        [0.0001],
        [0.0007],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0065],
        [0.0002],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0012, 0.0006, 0.0002, 0.0005, 0.0015, 0.0001, 0.0007, 0.0004,
         0.0003, 0.0007, 0.0004, 0.0065, 0.0002, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0002],
        [0.0011],
        [0.0007],
        [0.0005],
        [0.0025],
        [0.0008],
        [0.0005],
        [0.0003],
        [0.0095],
        [0.0004],
        [0.0006],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0016, 0.0002, 0.0011, 0.0007, 0.0005, 0.0025, 0.0008, 0.0005, 0.0003,
         0.0095, 0.0004, 0.0006, 0.0004, 0.0003, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7668e-04],
        [9.3575e-05],
        [1.4609e-04],
        [3.9883e-04],
        [8.3413e-05],
        [3.3404e-04],
        [3.4580e-04],
        [2.3825e-04],
        [2.2064e-05],
        [1.6746e-04],
        [2.7282e-04],
        [5.4896e-05],
        [1.7373e-04],
        [3.8092e-05],
        [8.1457e-05],
        [1.2994e-04]], device='cuda:0')/tensor([[1.7668e-04, 9.3575e-05, 1.4609e-04, 3.9883e-04, 8.3413e-05, 3.3404e-04,
         3.4580e-04, 2.3825e-04, 2.2064e-05, 1.6746e-04, 2.7282e-04, 5.4896e-05,
         1.7373e-04, 3.8092e-05, 8.1457e-05, 1.2994e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.3188e-04, 1.5778e-03, 1.7668e-04],
        [1.1966e-03, 2.4358e-04, 9.3575e-05],
        [6.0359e-04, 1.0685e-03, 1.4609e-04],
        [2.1752e-04, 7.1172e-04, 3.9883e-04],
        [4.6112e-04, 4.5542e-04, 8.3413e-05],
        [1.4527e-03, 2.4913e-03, 3.3404e-04],
        [1.4277e-04, 8.0983e-04, 3.4580e-04],
        [6.9994e-04, 4.6999e-04, 2.3825e-04],
        [3.5577e-04, 2.7786e-04, 2.2064e-05],
        [2.9246e-04, 9.4544e-03, 1.6746e-04],
        [7.1573e-04, 4.4237e-04, 2.7282e-04],
        [3.7616e-04, 6.2301e-04, 5.4896e-05],
        [6.5346e-03, 3.8714e-04, 1.7373e-04],
        [1.5673e-04, 3.3277e-04, 3.8092e-05],
        [4.0478e-04, 4.6225e-04, 8.1457e-05],
        [3.3539e-04, 2.1622e-04, 1.2994e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0003],
        [0.0010],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0012],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0011, 0.0003, 0.0010, 0.0006, 0.0006, 0.0002, 0.0005, 0.0004, 0.0006,
         0.0010, 0.0012, 0.0003, 0.0003, 0.0003, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.3367e-03],
        [8.9048e-04],
        [1.3601e-04],
        [1.6367e-03],
        [7.2065e-04],
        [8.1230e-04],
        [7.6728e-04],
        [7.2342e-04],
        [2.7597e-03],
        [7.7887e-03],
        [1.3499e-03],
        [5.7785e-03],
        [1.2470e-03],
        [2.4045e-03],
        [2.1866e-03],
        [9.4425e-05]], device='cuda:0')/tensor([[6.3367e-03, 8.9048e-04, 1.3601e-04, 1.6367e-03, 7.2065e-04, 8.1230e-04,
         7.6728e-04, 7.2342e-04, 2.7597e-03, 7.7887e-03, 1.3499e-03, 5.7785e-03,
         1.2470e-03, 2.4045e-03, 2.1866e-03, 9.4425e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.2469e-04],
        [2.8424e-04],
        [1.1993e-03],
        [1.1877e-04],
        [1.3416e-04],
        [2.3363e-04],
        [1.4253e-04],
        [1.5605e-04],
        [3.5611e-04],
        [1.7648e-04],
        [1.1198e-03],
        [2.1095e-04],
        [5.3520e-04],
        [1.3830e-04],
        [2.7876e-04],
        [6.8790e-05]], device='cuda:0')/tensor([[8.2469e-04, 2.8424e-04, 1.1993e-03, 1.1877e-04, 1.3416e-04, 2.3363e-04,
         1.4253e-04, 1.5605e-04, 3.5611e-04, 1.7648e-04, 1.1198e-03, 2.1095e-04,
         5.3520e-04, 1.3830e-04, 2.7876e-04, 6.8790e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0647e-03, 6.3367e-03, 8.2469e-04],
        [2.7349e-04, 8.9048e-04, 2.8424e-04],
        [1.0010e-03, 1.3601e-04, 1.1993e-03],
        [6.1138e-04, 1.6367e-03, 1.1877e-04],
        [6.1799e-04, 7.2065e-04, 1.3416e-04],
        [2.1290e-04, 8.1230e-04, 2.3363e-04],
        [5.0386e-04, 7.6728e-04, 1.4253e-04],
        [4.4005e-04, 7.2342e-04, 1.5605e-04],
        [5.5036e-04, 2.7597e-03, 3.5611e-04],
        [1.0341e-03, 7.7887e-03, 1.7648e-04],
        [1.2035e-03, 1.3499e-03, 1.1198e-03],
        [3.3530e-04, 5.7785e-03, 2.1095e-04],
        [3.1310e-04, 1.2470e-03, 5.3520e-04],
        [3.0759e-04, 2.4045e-03, 1.3830e-04],
        [3.1274e-04, 2.1866e-03, 2.7876e-04],
        [4.2764e-04, 9.4425e-05, 6.8790e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0007],
        [0.0003],
        [0.0016],
        [0.0002],
        [0.0006],
        [0.0008],
        [0.0001],
        [0.0005],
        [0.0008],
        [0.0018],
        [0.0035],
        [0.0005]], device='cuda:0')/tensor([[0.0007, 0.0003, 0.0007, 0.0006, 0.0007, 0.0003, 0.0016, 0.0002, 0.0006,
         0.0008, 0.0001, 0.0005, 0.0008, 0.0018, 0.0035, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9448e-04],
        [1.5846e-03],
        [1.2886e-03],
        [9.8922e-04],
        [2.1683e-03],
        [3.1514e-04],
        [2.0190e-03],
        [8.7814e-04],
        [8.9661e-03],
        [4.2166e-04],
        [7.9086e-05],
        [5.8196e-04],
        [3.4218e-04],
        [1.2482e-03],
        [2.2082e-03],
        [1.3477e-03]], device='cuda:0')/tensor([[1.9448e-04, 1.5846e-03, 1.2886e-03, 9.8922e-04, 2.1683e-03, 3.1514e-04,
         2.0190e-03, 8.7814e-04, 8.9661e-03, 4.2166e-04, 7.9086e-05, 5.8196e-04,
         3.4218e-04, 1.2482e-03, 2.2082e-03, 1.3477e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.5316e-04],
        [1.1922e-04],
        [2.2971e-04],
        [4.0169e-05],
        [1.3132e-04],
        [2.3046e-03],
        [3.5788e-04],
        [1.2778e-04],
        [1.3660e-04],
        [1.4883e-04],
        [1.3869e-04],
        [3.5974e-04],
        [1.6854e-04],
        [5.8152e-04],
        [5.7631e-04],
        [5.1109e-04]], device='cuda:0')/tensor([[3.5316e-04, 1.1922e-04, 2.2971e-04, 4.0169e-05, 1.3132e-04, 2.3046e-03,
         3.5788e-04, 1.2778e-04, 1.3660e-04, 1.4883e-04, 1.3869e-04, 3.5974e-04,
         1.6854e-04, 5.8152e-04, 5.7631e-04, 5.1109e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.6651e-04, 1.9448e-04, 3.5316e-04],
        [3.3135e-04, 1.5846e-03, 1.1922e-04],
        [7.3455e-04, 1.2886e-03, 2.2971e-04],
        [6.4440e-04, 9.8922e-04, 4.0169e-05],
        [7.1073e-04, 2.1683e-03, 1.3132e-04],
        [3.2761e-04, 3.1514e-04, 2.3046e-03],
        [1.5598e-03, 2.0190e-03, 3.5788e-04],
        [2.2406e-04, 8.7814e-04, 1.2778e-04],
        [5.6660e-04, 8.9661e-03, 1.3660e-04],
        [7.8196e-04, 4.2166e-04, 1.4883e-04],
        [1.0648e-04, 7.9086e-05, 1.3869e-04],
        [5.2083e-04, 5.8196e-04, 3.5974e-04],
        [8.4306e-04, 3.4218e-04, 1.6854e-04],
        [1.8161e-03, 1.2482e-03, 5.8152e-04],
        [3.4974e-03, 2.2082e-03, 5.7631e-04],
        [5.1897e-04, 1.3477e-03, 5.1109e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.9308e-04],
        [3.3262e-05],
        [1.2398e-03],
        [7.3442e-05],
        [9.1450e-04],
        [1.4506e-03],
        [8.9194e-04],
        [2.6521e-04],
        [3.2098e-04],
        [9.1699e-04],
        [7.9975e-04],
        [3.6180e-04],
        [5.5117e-04],
        [1.4613e-03],
        [8.3607e-04],
        [1.0653e-02]], device='cuda:0')/tensor([[5.9308e-04, 3.3262e-05, 1.2398e-03, 7.3442e-05, 9.1450e-04, 1.4506e-03,
         8.9194e-04, 2.6521e-04, 3.2098e-04, 9.1699e-04, 7.9975e-04, 3.6180e-04,
         5.5117e-04, 1.4613e-03, 8.3607e-04, 1.0653e-02]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.7835e-04],
        [8.8098e-05],
        [2.4785e-03],
        [4.2985e-04],
        [1.1925e-03],
        [2.9256e-03],
        [2.2070e-03],
        [3.1360e-04],
        [1.0701e-03],
        [1.2450e-03],
        [2.0790e-04],
        [7.6579e-04],
        [8.5847e-04],
        [1.0464e-03],
        [1.5137e-03],
        [1.2909e-02]], device='cuda:0')/tensor([[4.7835e-04, 8.8098e-05, 2.4785e-03, 4.2985e-04, 1.1925e-03, 2.9256e-03,
         2.2070e-03, 3.1360e-04, 1.0701e-03, 1.2450e-03, 2.0790e-04, 7.6579e-04,
         8.5847e-04, 1.0464e-03, 1.5137e-03, 1.2909e-02]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0026e-03],
        [4.5177e-05],
        [3.4546e-04],
        [5.8346e-05],
        [2.3474e-04],
        [3.6931e-04],
        [7.4151e-04],
        [6.1593e-05],
        [3.9537e-04],
        [1.5702e-03],
        [2.6182e-04],
        [7.0498e-05],
        [3.9089e-05],
        [3.3768e-05],
        [1.3231e-04],
        [7.8559e-04]], device='cuda:0')/tensor([[2.0026e-03, 4.5177e-05, 3.4546e-04, 5.8346e-05, 2.3474e-04, 3.6931e-04,
         7.4151e-04, 6.1593e-05, 3.9537e-04, 1.5702e-03, 2.6182e-04, 7.0498e-05,
         3.9089e-05, 3.3768e-05, 1.3231e-04, 7.8559e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.9308e-04, 4.7835e-04, 2.0026e-03],
        [3.3262e-05, 8.8098e-05, 4.5177e-05],
        [1.2398e-03, 2.4785e-03, 3.4546e-04],
        [7.3442e-05, 4.2985e-04, 5.8346e-05],
        [9.1450e-04, 1.1925e-03, 2.3474e-04],
        [1.4506e-03, 2.9256e-03, 3.6931e-04],
        [8.9194e-04, 2.2070e-03, 7.4151e-04],
        [2.6521e-04, 3.1360e-04, 6.1593e-05],
        [3.2098e-04, 1.0701e-03, 3.9537e-04],
        [9.1699e-04, 1.2450e-03, 1.5702e-03],
        [7.9975e-04, 2.0790e-04, 2.6182e-04],
        [3.6180e-04, 7.6579e-04, 7.0498e-05],
        [5.5117e-04, 8.5847e-04, 3.9089e-05],
        [1.4613e-03, 1.0464e-03, 3.3768e-05],
        [8.3607e-04, 1.5137e-03, 1.3231e-04],
        [1.0653e-02, 1.2909e-02, 7.8559e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0014],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0018],
        [0.0005],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0008],
        [0.0003],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0014, 0.0005, 0.0004, 0.0002, 0.0004, 0.0018, 0.0005,
         0.0002, 0.0002, 0.0007, 0.0008, 0.0003, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0055],
        [0.0103],
        [0.0025],
        [0.0003],
        [0.0018],
        [0.0022],
        [0.0012],
        [0.0031],
        [0.0011],
        [0.0004],
        [0.0005],
        [0.0029],
        [0.0016],
        [0.0008],
        [0.0017],
        [0.0003]], device='cuda:0')/tensor([[0.0055, 0.0103, 0.0025, 0.0003, 0.0018, 0.0022, 0.0012, 0.0031, 0.0011,
         0.0004, 0.0005, 0.0029, 0.0016, 0.0008, 0.0017, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0691e-04],
        [7.3130e-05],
        [8.5101e-05],
        [4.5666e-05],
        [7.9235e-05],
        [1.8821e-04],
        [3.9514e-04],
        [6.3044e-04],
        [7.1466e-05],
        [1.6666e-04],
        [5.5499e-05],
        [3.8064e-04],
        [4.7695e-04],
        [4.1596e-04],
        [2.9415e-04],
        [9.9141e-04]], device='cuda:0')/tensor([[2.0691e-04, 7.3130e-05, 8.5101e-05, 4.5666e-05, 7.9235e-05, 1.8821e-04,
         3.9514e-04, 6.3044e-04, 7.1466e-05, 1.6666e-04, 5.5499e-05, 3.8064e-04,
         4.7695e-04, 4.1596e-04, 2.9415e-04, 9.9141e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3369e-04, 5.4732e-03, 2.0691e-04],
        [2.1868e-04, 1.0273e-02, 7.3130e-05],
        [1.3818e-03, 2.5294e-03, 8.5101e-05],
        [4.7758e-04, 3.4742e-04, 4.5666e-05],
        [3.5884e-04, 1.7583e-03, 7.9235e-05],
        [2.3067e-04, 2.1847e-03, 1.8821e-04],
        [4.0259e-04, 1.2200e-03, 3.9514e-04],
        [1.7586e-03, 3.0613e-03, 6.3044e-04],
        [4.6206e-04, 1.1076e-03, 7.1466e-05],
        [2.4458e-04, 4.3609e-04, 1.6666e-04],
        [1.6037e-04, 5.2319e-04, 5.5499e-05],
        [7.1084e-04, 2.8722e-03, 3.8064e-04],
        [7.7365e-04, 1.6208e-03, 4.7695e-04],
        [3.2091e-04, 7.8109e-04, 4.1596e-04],
        [8.9873e-04, 1.6941e-03, 2.9415e-04],
        [6.9781e-04, 2.5214e-04, 9.9141e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0002],
        [0.0004],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0002, 0.0004, 0.0002, 0.0006]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0003],
        [0.0002],
        [0.0011],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0011, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.4851e-04],
        [4.1155e-06],
        [1.5489e-06],
        [1.4430e-04]], device='cuda:0')/tensor([[2.4851e-04, 4.1155e-06, 1.5489e-06, 1.4430e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.9060e-04, 2.6106e-04, 2.4851e-04],
        [3.5991e-04, 1.8752e-04, 4.1155e-06],
        [1.5470e-04, 1.1162e-03, 1.5489e-06],
        [6.2543e-04, 5.4213e-04, 1.4430e-04]], device='cuda:0')
acc:  0.49242424242424243
Time taken to execute the de NLI task with prompt type active, variation 3 and batchsize 16: 0:01:06.111840
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI active 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 333.27it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1439e-03],
        [2.0546e-04],
        [3.2039e-04],
        [3.4155e-04],
        [6.1847e-04],
        [9.0810e-05],
        [1.3111e-03],
        [1.1893e-03],
        [2.7152e-04],
        [6.8994e-04],
        [4.3334e-04],
        [2.5387e-04],
        [1.2463e-04],
        [6.0418e-04],
        [3.6955e-04],
        [1.9934e-04]], device='cuda:0')/tensor([[1.1439e-03, 2.0546e-04, 3.2039e-04, 3.4155e-04, 6.1847e-04, 9.0810e-05,
         1.3111e-03, 1.1893e-03, 2.7152e-04, 6.8994e-04, 4.3334e-04, 2.5387e-04,
         1.2463e-04, 6.0418e-04, 3.6955e-04, 1.9934e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0029],
        [0.0008],
        [0.0022],
        [0.0005],
        [0.0027],
        [0.0035],
        [0.0017],
        [0.0085],
        [0.0008],
        [0.0058],
        [0.0030],
        [0.0031],
        [0.0005],
        [0.0022],
        [0.0014],
        [0.0021]], device='cuda:0')/tensor([[0.0029, 0.0008, 0.0022, 0.0005, 0.0027, 0.0035, 0.0017, 0.0085, 0.0008,
         0.0058, 0.0030, 0.0031, 0.0005, 0.0022, 0.0014, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.8723e-05],
        [4.9664e-05],
        [7.2901e-05],
        [1.6785e-04],
        [1.3120e-04],
        [4.3469e-05],
        [5.7231e-05],
        [2.7957e-04],
        [4.0356e-05],
        [1.2742e-04],
        [1.0130e-04],
        [2.8323e-04],
        [8.9487e-05],
        [7.3345e-05],
        [8.7138e-05],
        [1.1241e-04]], device='cuda:0')/tensor([[7.8723e-05, 4.9664e-05, 7.2901e-05, 1.6785e-04, 1.3120e-04, 4.3469e-05,
         5.7231e-05, 2.7957e-04, 4.0356e-05, 1.2742e-04, 1.0130e-04, 2.8323e-04,
         8.9487e-05, 7.3345e-05, 8.7138e-05, 1.1241e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1439e-03, 2.8918e-03, 7.8723e-05],
        [2.0546e-04, 7.7707e-04, 4.9664e-05],
        [3.2039e-04, 2.2410e-03, 7.2901e-05],
        [3.4155e-04, 4.8143e-04, 1.6785e-04],
        [6.1847e-04, 2.7467e-03, 1.3120e-04],
        [9.0810e-05, 3.4899e-03, 4.3469e-05],
        [1.3111e-03, 1.6625e-03, 5.7231e-05],
        [1.1893e-03, 8.5253e-03, 2.7957e-04],
        [2.7152e-04, 8.3105e-04, 4.0356e-05],
        [6.8994e-04, 5.8091e-03, 1.2742e-04],
        [4.3334e-04, 3.0385e-03, 1.0130e-04],
        [2.5387e-04, 3.0574e-03, 2.8323e-04],
        [1.2463e-04, 5.4875e-04, 8.9487e-05],
        [6.0418e-04, 2.1642e-03, 7.3345e-05],
        [3.6955e-04, 1.4300e-03, 8.7138e-05],
        [1.9934e-04, 2.1293e-03, 1.1241e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0007],
        [0.0013],
        [0.0003],
        [0.0008],
        [0.0012],
        [0.0008],
        [0.0003],
        [0.0002],
        [0.0008],
        [0.0010],
        [0.0006],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0016, 0.0007, 0.0013, 0.0003, 0.0008, 0.0012, 0.0008, 0.0003, 0.0002,
         0.0008, 0.0010, 0.0006, 0.0003, 0.0006, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0103],
        [0.0016],
        [0.0039],
        [0.0026],
        [0.0044],
        [0.0037],
        [0.0030],
        [0.0012],
        [0.0007],
        [0.0030],
        [0.0100],
        [0.0019],
        [0.0006],
        [0.0016],
        [0.0074],
        [0.0007]], device='cuda:0')/tensor([[0.0103, 0.0016, 0.0039, 0.0026, 0.0044, 0.0037, 0.0030, 0.0012, 0.0007,
         0.0030, 0.0100, 0.0019, 0.0006, 0.0016, 0.0074, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.3523e-04],
        [1.0775e-04],
        [9.8581e-05],
        [1.2335e-04],
        [1.6401e-04],
        [2.6168e-04],
        [9.1284e-05],
        [4.1112e-05],
        [5.8291e-05],
        [1.1696e-04],
        [7.4108e-04],
        [3.9038e-05],
        [2.3565e-04],
        [3.4827e-04],
        [1.2755e-04],
        [2.5645e-05]], device='cuda:0')/tensor([[5.3523e-04, 1.0775e-04, 9.8581e-05, 1.2335e-04, 1.6401e-04, 2.6168e-04,
         9.1284e-05, 4.1112e-05, 5.8291e-05, 1.1696e-04, 7.4108e-04, 3.9038e-05,
         2.3565e-04, 3.4827e-04, 1.2755e-04, 2.5645e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5780e-03, 1.0302e-02, 5.3523e-04],
        [6.6515e-04, 1.6020e-03, 1.0775e-04],
        [1.3153e-03, 3.9338e-03, 9.8581e-05],
        [3.2033e-04, 2.6290e-03, 1.2335e-04],
        [8.3501e-04, 4.4413e-03, 1.6401e-04],
        [1.2182e-03, 3.7280e-03, 2.6168e-04],
        [8.4218e-04, 2.9848e-03, 9.1284e-05],
        [2.5481e-04, 1.1945e-03, 4.1112e-05],
        [1.8157e-04, 7.2527e-04, 5.8291e-05],
        [7.9533e-04, 3.0247e-03, 1.1696e-04],
        [9.5759e-04, 1.0018e-02, 7.4108e-04],
        [6.1579e-04, 1.9267e-03, 3.9038e-05],
        [2.9789e-04, 6.4530e-04, 2.3565e-04],
        [5.9659e-04, 1.5948e-03, 3.4827e-04],
        [7.0093e-04, 7.4422e-03, 1.2755e-04],
        [5.5979e-04, 7.2125e-04, 2.5645e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.9949e-04],
        [9.9518e-05],
        [1.2855e-03],
        [6.4425e-04],
        [5.3338e-04],
        [2.1691e-04],
        [1.5039e-03],
        [1.4839e-03],
        [2.9123e-04],
        [1.0145e-03],
        [3.4827e-04],
        [6.3528e-04],
        [1.0380e-03],
        [5.5329e-04],
        [1.0177e-03],
        [8.4042e-04]], device='cuda:0')/tensor([[6.9949e-04, 9.9518e-05, 1.2855e-03, 6.4425e-04, 5.3338e-04, 2.1691e-04,
         1.5039e-03, 1.4839e-03, 2.9123e-04, 1.0145e-03, 3.4827e-04, 6.3528e-04,
         1.0380e-03, 5.5329e-04, 1.0177e-03, 8.4042e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0030],
        [0.0040],
        [0.0022],
        [0.0007],
        [0.0008],
        [0.0050],
        [0.0027],
        [0.0004],
        [0.0113],
        [0.0034],
        [0.0031],
        [0.0017],
        [0.0032],
        [0.0042],
        [0.0031]], device='cuda:0')/tensor([[0.0018, 0.0030, 0.0040, 0.0022, 0.0007, 0.0008, 0.0050, 0.0027, 0.0004,
         0.0113, 0.0034, 0.0031, 0.0017, 0.0032, 0.0042, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.4095e-05],
        [1.4557e-04],
        [6.3830e-05],
        [8.4666e-05],
        [8.8059e-05],
        [2.6435e-04],
        [2.1843e-04],
        [9.0533e-05],
        [1.2850e-04],
        [2.2250e-04],
        [3.1282e-04],
        [3.3008e-04],
        [5.2163e-05],
        [1.8906e-04],
        [9.7821e-05],
        [1.4057e-04]], device='cuda:0')/tensor([[7.4095e-05, 1.4557e-04, 6.3830e-05, 8.4666e-05, 8.8059e-05, 2.6435e-04,
         2.1843e-04, 9.0533e-05, 1.2850e-04, 2.2250e-04, 3.1282e-04, 3.3008e-04,
         5.2163e-05, 1.8906e-04, 9.7821e-05, 1.4057e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.9949e-04, 1.8148e-03, 7.4095e-05],
        [9.9518e-05, 3.0462e-03, 1.4557e-04],
        [1.2855e-03, 4.0162e-03, 6.3830e-05],
        [6.4425e-04, 2.2234e-03, 8.4666e-05],
        [5.3338e-04, 7.4989e-04, 8.8059e-05],
        [2.1691e-04, 7.6691e-04, 2.6435e-04],
        [1.5039e-03, 5.0371e-03, 2.1843e-04],
        [1.4839e-03, 2.7129e-03, 9.0533e-05],
        [2.9123e-04, 4.1826e-04, 1.2850e-04],
        [1.0145e-03, 1.1311e-02, 2.2250e-04],
        [3.4827e-04, 3.4307e-03, 3.1282e-04],
        [6.3528e-04, 3.0885e-03, 3.3008e-04],
        [1.0380e-03, 1.7135e-03, 5.2163e-05],
        [5.5329e-04, 3.1967e-03, 1.8906e-04],
        [1.0177e-03, 4.2277e-03, 9.7821e-05],
        [8.4042e-04, 3.1127e-03, 1.4057e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0005]], device='cuda:0')/tensor([[0.0019, 0.0004, 0.0005, 0.0003, 0.0005, 0.0003, 0.0001, 0.0005, 0.0005,
         0.0004, 0.0002, 0.0002, 0.0004, 0.0007, 0.0002, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0041],
        [0.0020],
        [0.0024],
        [0.0013],
        [0.0029],
        [0.0009],
        [0.0001],
        [0.0030],
        [0.0027],
        [0.0027],
        [0.0012],
        [0.0009],
        [0.0010],
        [0.0034],
        [0.0005],
        [0.0023]], device='cuda:0')/tensor([[0.0041, 0.0020, 0.0024, 0.0013, 0.0029, 0.0009, 0.0001, 0.0030, 0.0027,
         0.0027, 0.0012, 0.0009, 0.0010, 0.0034, 0.0005, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5566e-04],
        [6.9865e-05],
        [5.3474e-05],
        [5.7829e-05],
        [8.2356e-05],
        [1.0340e-04],
        [1.3698e-04],
        [1.4343e-04],
        [1.0149e-04],
        [6.6098e-05],
        [6.3811e-05],
        [6.8521e-05],
        [2.4975e-04],
        [1.4126e-04],
        [4.2684e-05],
        [9.0302e-05]], device='cuda:0')/tensor([[1.5566e-04, 6.9865e-05, 5.3474e-05, 5.7829e-05, 8.2356e-05, 1.0340e-04,
         1.3698e-04, 1.4343e-04, 1.0149e-04, 6.6098e-05, 6.3811e-05, 6.8521e-05,
         2.4975e-04, 1.4126e-04, 4.2684e-05, 9.0302e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9395e-03, 4.1005e-03, 1.5566e-04],
        [4.2898e-04, 2.0136e-03, 6.9865e-05],
        [4.5922e-04, 2.4438e-03, 5.3474e-05],
        [3.2911e-04, 1.2876e-03, 5.7829e-05],
        [5.3376e-04, 2.8890e-03, 8.2356e-05],
        [3.0285e-04, 9.0408e-04, 1.0340e-04],
        [1.0974e-04, 1.4242e-04, 1.3698e-04],
        [5.3218e-04, 2.9606e-03, 1.4343e-04],
        [4.8388e-04, 2.7437e-03, 1.0149e-04],
        [3.7901e-04, 2.6670e-03, 6.6098e-05],
        [1.5942e-04, 1.2220e-03, 6.3811e-05],
        [2.2320e-04, 8.8096e-04, 6.8521e-05],
        [4.1139e-04, 1.0189e-03, 2.4975e-04],
        [6.9346e-04, 3.4384e-03, 1.4126e-04],
        [1.8142e-04, 5.2571e-04, 4.2684e-05],
        [4.6899e-04, 2.2537e-03, 9.0302e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.4996e-04],
        [7.3184e-04],
        [1.0925e-03],
        [8.2111e-04],
        [6.2731e-04],
        [4.7681e-04],
        [6.2901e-04],
        [5.1151e-04],
        [6.2370e-04],
        [3.5567e-04],
        [8.3100e-04],
        [4.9620e-04],
        [7.6578e-05],
        [3.8581e-04],
        [7.3590e-04],
        [9.7485e-04]], device='cuda:0')/tensor([[7.4996e-04, 7.3184e-04, 1.0925e-03, 8.2111e-04, 6.2731e-04, 4.7681e-04,
         6.2901e-04, 5.1151e-04, 6.2370e-04, 3.5567e-04, 8.3100e-04, 4.9620e-04,
         7.6578e-05, 3.8581e-04, 7.3590e-04, 9.7485e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0022],
        [0.0108],
        [0.0093],
        [0.0038],
        [0.0010],
        [0.0016],
        [0.0025],
        [0.0026],
        [0.0027],
        [0.0012],
        [0.0019],
        [0.0010],
        [0.0003],
        [0.0021],
        [0.0002],
        [0.0031]], device='cuda:0')/tensor([[0.0022, 0.0108, 0.0093, 0.0038, 0.0010, 0.0016, 0.0025, 0.0026, 0.0027,
         0.0012, 0.0019, 0.0010, 0.0003, 0.0021, 0.0002, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5362e-04],
        [4.4958e-05],
        [8.7952e-05],
        [2.3233e-04],
        [1.9594e-04],
        [5.3503e-05],
        [1.5505e-04],
        [1.2240e-04],
        [5.1014e-04],
        [1.5828e-04],
        [2.5511e-04],
        [1.0992e-04],
        [9.2546e-05],
        [7.6128e-05],
        [1.6577e-04],
        [1.3348e-04]], device='cuda:0')/tensor([[1.5362e-04, 4.4958e-05, 8.7952e-05, 2.3233e-04, 1.9594e-04, 5.3503e-05,
         1.5505e-04, 1.2240e-04, 5.1014e-04, 1.5828e-04, 2.5511e-04, 1.0992e-04,
         9.2546e-05, 7.6128e-05, 1.6577e-04, 1.3348e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.4996e-04, 2.2452e-03, 1.5362e-04],
        [7.3184e-04, 1.0847e-02, 4.4958e-05],
        [1.0925e-03, 9.3076e-03, 8.7952e-05],
        [8.2111e-04, 3.8375e-03, 2.3233e-04],
        [6.2731e-04, 1.0094e-03, 1.9594e-04],
        [4.7681e-04, 1.5691e-03, 5.3503e-05],
        [6.2901e-04, 2.4967e-03, 1.5505e-04],
        [5.1151e-04, 2.6057e-03, 1.2240e-04],
        [6.2370e-04, 2.6931e-03, 5.1014e-04],
        [3.5567e-04, 1.2467e-03, 1.5828e-04],
        [8.3100e-04, 1.8673e-03, 2.5511e-04],
        [4.9620e-04, 1.0376e-03, 1.0992e-04],
        [7.6578e-05, 2.9433e-04, 9.2546e-05],
        [3.8581e-04, 2.0814e-03, 7.6128e-05],
        [7.3590e-04, 2.3197e-04, 1.6577e-04],
        [9.7485e-04, 3.1414e-03, 1.3348e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0001],
        [0.0007],
        [0.0002],
        [0.0011],
        [0.0003],
        [0.0016],
        [0.0002],
        [0.0015],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0010],
        [0.0004],
        [0.0013],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0001, 0.0007, 0.0002, 0.0011, 0.0003, 0.0016, 0.0002, 0.0015,
         0.0006, 0.0006, 0.0002, 0.0010, 0.0004, 0.0013, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0002],
        [0.0057],
        [0.0015],
        [0.0061],
        [0.0010],
        [0.0115],
        [0.0005],
        [0.0040],
        [0.0047],
        [0.0019],
        [0.0029],
        [0.0023],
        [0.0066],
        [0.0044],
        [0.0019]], device='cuda:0')/tensor([[0.0011, 0.0002, 0.0057, 0.0015, 0.0061, 0.0010, 0.0115, 0.0005, 0.0040,
         0.0047, 0.0019, 0.0029, 0.0023, 0.0066, 0.0044, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.7757e-05],
        [1.1217e-04],
        [8.2474e-05],
        [2.3604e-04],
        [9.1445e-05],
        [6.3502e-05],
        [2.0967e-04],
        [3.3912e-05],
        [1.5243e-04],
        [5.9871e-05],
        [9.8581e-05],
        [2.1002e-04],
        [1.2071e-04],
        [7.6295e-05],
        [1.2653e-04],
        [2.3562e-05]], device='cuda:0')/tensor([[2.7757e-05, 1.1217e-04, 8.2474e-05, 2.3604e-04, 9.1445e-05, 6.3502e-05,
         2.0967e-04, 3.3912e-05, 1.5243e-04, 5.9871e-05, 9.8581e-05, 2.1002e-04,
         1.2071e-04, 7.6295e-05, 1.2653e-04, 2.3562e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6561e-04, 1.0781e-03, 2.7757e-05],
        [1.3931e-04, 1.8440e-04, 1.1217e-04],
        [6.7872e-04, 5.6744e-03, 8.2474e-05],
        [2.2976e-04, 1.5125e-03, 2.3604e-04],
        [1.1095e-03, 6.1409e-03, 9.1445e-05],
        [3.2459e-04, 9.8357e-04, 6.3502e-05],
        [1.6150e-03, 1.1543e-02, 2.0967e-04],
        [1.6124e-04, 5.3738e-04, 3.3912e-05],
        [1.4820e-03, 4.0363e-03, 1.5243e-04],
        [5.7040e-04, 4.7143e-03, 5.9871e-05],
        [6.1895e-04, 1.8950e-03, 9.8581e-05],
        [1.9867e-04, 2.8531e-03, 2.1002e-04],
        [1.0326e-03, 2.2927e-03, 1.2071e-04],
        [4.2454e-04, 6.5734e-03, 7.6295e-05],
        [1.3194e-03, 4.3664e-03, 1.2653e-04],
        [6.4756e-04, 1.8638e-03, 2.3562e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0005],
        [0.0008],
        [0.0007],
        [0.0010],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0015],
        [0.0008],
        [0.0009],
        [0.0003],
        [0.0009],
        [0.0009],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0005, 0.0008, 0.0007, 0.0010, 0.0003, 0.0004, 0.0003,
         0.0015, 0.0008, 0.0009, 0.0003, 0.0009, 0.0009, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0018],
        [0.0018],
        [0.0019],
        [0.0072],
        [0.0024],
        [0.0113],
        [0.0012],
        [0.0011],
        [0.0019],
        [0.0016],
        [0.0015],
        [0.0009],
        [0.0040],
        [0.0028],
        [0.0051]], device='cuda:0')/tensor([[0.0011, 0.0018, 0.0018, 0.0019, 0.0072, 0.0024, 0.0113, 0.0012, 0.0011,
         0.0019, 0.0016, 0.0015, 0.0009, 0.0040, 0.0028, 0.0051]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.4510e-05],
        [7.0618e-05],
        [5.1352e-05],
        [1.0783e-04],
        [7.7674e-05],
        [9.1712e-05],
        [1.6126e-04],
        [1.2758e-04],
        [1.6028e-04],
        [6.3322e-05],
        [1.9923e-04],
        [1.0220e-04],
        [3.2022e-05],
        [1.9795e-04],
        [7.2944e-05],
        [1.5186e-04]], device='cuda:0')/tensor([[7.4510e-05, 7.0618e-05, 5.1352e-05, 1.0783e-04, 7.7674e-05, 9.1712e-05,
         1.6126e-04, 1.2758e-04, 1.6028e-04, 6.3322e-05, 1.9923e-04, 1.0220e-04,
         3.2022e-05, 1.9795e-04, 7.2944e-05, 1.5186e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.1812e-04, 1.1157e-03, 7.4510e-05],
        [6.3417e-04, 1.8315e-03, 7.0618e-05],
        [4.7425e-04, 1.8334e-03, 5.1352e-05],
        [7.5470e-04, 1.9495e-03, 1.0783e-04],
        [6.5175e-04, 7.2434e-03, 7.7674e-05],
        [9.5796e-04, 2.4051e-03, 9.1712e-05],
        [3.0149e-04, 1.1317e-02, 1.6126e-04],
        [4.2514e-04, 1.2058e-03, 1.2758e-04],
        [3.3202e-04, 1.0596e-03, 1.6028e-04],
        [1.5354e-03, 1.8609e-03, 6.3322e-05],
        [8.2107e-04, 1.5912e-03, 1.9923e-04],
        [8.6021e-04, 1.4509e-03, 1.0220e-04],
        [3.0499e-04, 8.9320e-04, 3.2022e-05],
        [8.8368e-04, 4.0309e-03, 1.9795e-04],
        [9.2647e-04, 2.7544e-03, 7.2944e-05],
        [6.3919e-04, 5.0782e-03, 1.5186e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.1722e-05],
        [7.1320e-04],
        [4.7130e-04],
        [6.4735e-04],
        [8.4281e-03],
        [4.6332e-04],
        [2.2391e-04],
        [7.0113e-04],
        [4.2747e-04],
        [3.3300e-04],
        [3.0494e-03],
        [7.7451e-04],
        [3.9099e-04],
        [5.6130e-04],
        [2.9115e-03],
        [4.5098e-04]], device='cuda:0')/tensor([[3.1722e-05, 7.1320e-04, 4.7130e-04, 6.4735e-04, 8.4281e-03, 4.6332e-04,
         2.2391e-04, 7.0113e-04, 4.2747e-04, 3.3300e-04, 3.0494e-03, 7.7451e-04,
         3.9099e-04, 5.6130e-04, 2.9115e-03, 4.5098e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0020],
        [0.0014],
        [0.0023],
        [0.0129],
        [0.0040],
        [0.0013],
        [0.0018],
        [0.0029],
        [0.0028],
        [0.0096],
        [0.0035],
        [0.0057],
        [0.0046],
        [0.0025],
        [0.0059]], device='cuda:0')/tensor([[0.0010, 0.0020, 0.0014, 0.0023, 0.0129, 0.0040, 0.0013, 0.0018, 0.0029,
         0.0028, 0.0096, 0.0035, 0.0057, 0.0046, 0.0025, 0.0059]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.9902e-05],
        [1.2187e-04],
        [6.4145e-04],
        [1.0441e-04],
        [4.8843e-04],
        [1.0666e-04],
        [7.2940e-05],
        [7.5069e-05],
        [1.2839e-04],
        [1.9364e-04],
        [1.3937e-04],
        [3.5418e-04],
        [1.6389e-04],
        [1.7530e-04],
        [9.9158e-05],
        [1.5690e-04]], device='cuda:0')/tensor([[3.9902e-05, 1.2187e-04, 6.4145e-04, 1.0441e-04, 4.8843e-04, 1.0666e-04,
         7.2940e-05, 7.5069e-05, 1.2839e-04, 1.9364e-04, 1.3937e-04, 3.5418e-04,
         1.6389e-04, 1.7530e-04, 9.9158e-05, 1.5690e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.1722e-05, 1.0373e-03, 3.9902e-05],
        [7.1320e-04, 2.0228e-03, 1.2187e-04],
        [4.7130e-04, 1.3505e-03, 6.4145e-04],
        [6.4735e-04, 2.2764e-03, 1.0441e-04],
        [8.4281e-03, 1.2876e-02, 4.8843e-04],
        [4.6332e-04, 4.0384e-03, 1.0666e-04],
        [2.2391e-04, 1.3138e-03, 7.2940e-05],
        [7.0113e-04, 1.8345e-03, 7.5069e-05],
        [4.2747e-04, 2.8996e-03, 1.2839e-04],
        [3.3300e-04, 2.8202e-03, 1.9364e-04],
        [3.0494e-03, 9.6496e-03, 1.3937e-04],
        [7.7451e-04, 3.5262e-03, 3.5418e-04],
        [3.9099e-04, 5.6843e-03, 1.6389e-04],
        [5.6130e-04, 4.6164e-03, 1.7530e-04],
        [2.9115e-03, 2.4675e-03, 9.9158e-05],
        [4.5098e-04, 5.8720e-03, 1.5690e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0011],
        [0.0014],
        [0.0029],
        [0.0005]], device='cuda:0')/tensor([[0.0011, 0.0014, 0.0029, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0006],
        [0.0028],
        [0.0068],
        [0.0052]], device='cuda:0')/tensor([[0.0006, 0.0028, 0.0068, 0.0052]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[2.8377e-05],
        [1.2690e-04],
        [1.9416e-04],
        [3.4515e-04]], device='cuda:0')/tensor([[2.8377e-05, 1.2690e-04, 1.9416e-04, 3.4515e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.0637e-03, 6.2381e-04, 2.8377e-05],
        [1.3838e-03, 2.8115e-03, 1.2690e-04],
        [2.8540e-03, 6.7581e-03, 1.9416e-04],
        [5.0998e-04, 5.2433e-03, 3.4515e-04]], device='cuda:0')
acc:  0.5
Time taken to execute the de NLI task with prompt type active, variation 4 and batchsize 16: 0:01:02.049677
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI active 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 370.94it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.1509e-06],
        [1.9740e-04],
        [7.7957e-04],
        [1.0659e-03],
        [3.4535e-04],
        [9.8788e-04],
        [7.7817e-06],
        [4.7741e-04],
        [3.8360e-04],
        [5.5476e-04],
        [7.8693e-04],
        [3.7056e-04],
        [3.1655e-04],
        [4.7157e-04],
        [3.5305e-04],
        [1.3407e-04]], device='cuda:0')/tensor([[5.1509e-06, 1.9740e-04, 7.7957e-04, 1.0659e-03, 3.4535e-04, 9.8788e-04,
         7.7817e-06, 4.7741e-04, 3.8360e-04, 5.5476e-04, 7.8693e-04, 3.7056e-04,
         3.1655e-04, 4.7157e-04, 3.5305e-04, 1.3407e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5336e-06],
        [2.5287e-03],
        [1.5411e-03],
        [3.2093e-03],
        [2.0828e-03],
        [3.3070e-03],
        [3.5481e-06],
        [1.6083e-02],
        [2.4169e-03],
        [5.1535e-03],
        [1.6724e-03],
        [4.0507e-03],
        [3.7849e-03],
        [5.4631e-03],
        [2.6494e-03],
        [3.6736e-04]], device='cuda:0')/tensor([[1.5336e-06, 2.5287e-03, 1.5411e-03, 3.2093e-03, 2.0828e-03, 3.3070e-03,
         3.5481e-06, 1.6083e-02, 2.4169e-03, 5.1535e-03, 1.6724e-03, 4.0507e-03,
         3.7849e-03, 5.4631e-03, 2.6494e-03, 3.6736e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4084e-06],
        [6.3750e-04],
        [4.1108e-04],
        [5.5041e-04],
        [4.8646e-04],
        [2.0303e-03],
        [6.6862e-06],
        [2.4312e-04],
        [8.7952e-04],
        [2.8325e-04],
        [1.2917e-03],
        [2.6480e-04],
        [7.0263e-04],
        [5.0545e-04],
        [2.0318e-04],
        [4.4339e-04]], device='cuda:0')/tensor([[1.4084e-06, 6.3750e-04, 4.1108e-04, 5.5041e-04, 4.8646e-04, 2.0303e-03,
         6.6862e-06, 2.4312e-04, 8.7952e-04, 2.8325e-04, 1.2917e-03, 2.6480e-04,
         7.0263e-04, 5.0545e-04, 2.0318e-04, 4.4339e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.1509e-06, 1.5336e-06, 1.4084e-06],
        [1.9740e-04, 2.5287e-03, 6.3750e-04],
        [7.7957e-04, 1.5411e-03, 4.1108e-04],
        [1.0659e-03, 3.2093e-03, 5.5041e-04],
        [3.4535e-04, 2.0828e-03, 4.8646e-04],
        [9.8788e-04, 3.3070e-03, 2.0303e-03],
        [7.7817e-06, 3.5481e-06, 6.6862e-06],
        [4.7741e-04, 1.6083e-02, 2.4312e-04],
        [3.8360e-04, 2.4169e-03, 8.7952e-04],
        [5.5476e-04, 5.1535e-03, 2.8325e-04],
        [7.8693e-04, 1.6724e-03, 1.2917e-03],
        [3.7056e-04, 4.0507e-03, 2.6480e-04],
        [3.1655e-04, 3.7849e-03, 7.0263e-04],
        [4.7157e-04, 5.4631e-03, 5.0545e-04],
        [3.5305e-04, 2.6494e-03, 2.0318e-04],
        [1.3407e-04, 3.6736e-04, 4.4339e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0130e-03],
        [3.6152e-05],
        [5.7868e-04],
        [4.4482e-04],
        [2.7057e-04],
        [9.1548e-04],
        [1.2540e-04],
        [1.3061e-04],
        [2.8040e-05],
        [1.9358e-03],
        [4.0999e-04],
        [1.8792e-04],
        [1.1427e-04],
        [8.7241e-04],
        [5.4011e-04],
        [2.2717e-04]], device='cuda:0')/tensor([[1.0130e-03, 3.6152e-05, 5.7868e-04, 4.4482e-04, 2.7057e-04, 9.1548e-04,
         1.2540e-04, 1.3061e-04, 2.8040e-05, 1.9358e-03, 4.0999e-04, 1.8792e-04,
         1.1427e-04, 8.7241e-04, 5.4011e-04, 2.2717e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.7457e-03],
        [3.1796e-05],
        [1.8050e-03],
        [3.0657e-03],
        [6.7594e-04],
        [4.0660e-03],
        [5.2612e-04],
        [1.8137e-03],
        [1.7437e-05],
        [2.0900e-03],
        [7.3877e-04],
        [1.7866e-03],
        [3.0276e-04],
        [1.3643e-03],
        [2.6551e-03],
        [4.8322e-03]], device='cuda:0')/tensor([[3.7457e-03, 3.1796e-05, 1.8050e-03, 3.0657e-03, 6.7594e-04, 4.0660e-03,
         5.2612e-04, 1.8137e-03, 1.7437e-05, 2.0900e-03, 7.3877e-04, 1.7866e-03,
         3.0276e-04, 1.3643e-03, 2.6551e-03, 4.8322e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.6833e-04],
        [2.8952e-05],
        [9.5660e-04],
        [1.2108e-03],
        [2.8744e-04],
        [7.9160e-04],
        [1.8977e-04],
        [3.4566e-04],
        [7.0432e-06],
        [5.6857e-04],
        [1.4554e-04],
        [6.3735e-04],
        [9.2570e-05],
        [6.5108e-04],
        [4.3123e-04],
        [6.6534e-04]], device='cuda:0')/tensor([[8.6833e-04, 2.8952e-05, 9.5660e-04, 1.2108e-03, 2.8744e-04, 7.9160e-04,
         1.8977e-04, 3.4566e-04, 7.0432e-06, 5.6857e-04, 1.4554e-04, 6.3735e-04,
         9.2570e-05, 6.5108e-04, 4.3123e-04, 6.6534e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0130e-03, 3.7457e-03, 8.6833e-04],
        [3.6152e-05, 3.1796e-05, 2.8952e-05],
        [5.7868e-04, 1.8050e-03, 9.5660e-04],
        [4.4482e-04, 3.0657e-03, 1.2108e-03],
        [2.7057e-04, 6.7594e-04, 2.8744e-04],
        [9.1548e-04, 4.0660e-03, 7.9160e-04],
        [1.2540e-04, 5.2612e-04, 1.8977e-04],
        [1.3061e-04, 1.8137e-03, 3.4566e-04],
        [2.8040e-05, 1.7437e-05, 7.0432e-06],
        [1.9358e-03, 2.0900e-03, 5.6857e-04],
        [4.0999e-04, 7.3877e-04, 1.4554e-04],
        [1.8792e-04, 1.7866e-03, 6.3735e-04],
        [1.1427e-04, 3.0276e-04, 9.2570e-05],
        [8.7241e-04, 1.3643e-03, 6.5108e-04],
        [5.4011e-04, 2.6551e-03, 4.3123e-04],
        [2.2717e-04, 4.8322e-03, 6.6534e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0010],
        [0.0006],
        [0.0003],
        [0.0001],
        [0.0004],
        [0.0012],
        [0.0017],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0008],
        [0.0006]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0005, 0.0003, 0.0010, 0.0006, 0.0003, 0.0001, 0.0004,
         0.0012, 0.0017, 0.0004, 0.0007, 0.0003, 0.0008, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0090],
        [0.0080],
        [0.0002],
        [0.0048],
        [0.0031],
        [0.0008],
        [0.0005],
        [0.0021],
        [0.0076],
        [0.0037],
        [0.0004],
        [0.0124],
        [0.0012],
        [0.0057],
        [0.0028]], device='cuda:0')/tensor([[0.0012, 0.0090, 0.0080, 0.0002, 0.0048, 0.0031, 0.0008, 0.0005, 0.0021,
         0.0076, 0.0037, 0.0004, 0.0124, 0.0012, 0.0057, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2777e-04],
        [8.3448e-05],
        [6.8052e-04],
        [4.2681e-05],
        [6.2571e-04],
        [5.6219e-04],
        [5.4392e-04],
        [3.0480e-04],
        [1.3863e-03],
        [1.5031e-03],
        [1.0697e-03],
        [3.1057e-04],
        [2.8384e-03],
        [5.3242e-04],
        [6.8791e-04],
        [7.0326e-04]], device='cuda:0')/tensor([[2.2777e-04, 8.3448e-05, 6.8052e-04, 4.2681e-05, 6.2571e-04, 5.6219e-04,
         5.4392e-04, 3.0480e-04, 1.3863e-03, 1.5031e-03, 1.0697e-03, 3.1057e-04,
         2.8384e-03, 5.3242e-04, 6.8791e-04, 7.0326e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8997e-04, 1.2198e-03, 2.2777e-04],
        [2.2349e-04, 9.0208e-03, 8.3448e-05],
        [5.4421e-04, 7.9930e-03, 6.8052e-04],
        [3.4929e-04, 1.7185e-04, 4.2681e-05],
        [1.0169e-03, 4.8387e-03, 6.2571e-04],
        [5.5025e-04, 3.0789e-03, 5.6219e-04],
        [2.8258e-04, 7.9860e-04, 5.4392e-04],
        [1.4538e-04, 5.1077e-04, 3.0480e-04],
        [3.8700e-04, 2.0729e-03, 1.3863e-03],
        [1.1551e-03, 7.6124e-03, 1.5031e-03],
        [1.6741e-03, 3.6590e-03, 1.0697e-03],
        [4.0813e-04, 4.4214e-04, 3.1057e-04],
        [6.8070e-04, 1.2436e-02, 2.8384e-03],
        [2.6447e-04, 1.1824e-03, 5.3242e-04],
        [8.1780e-04, 5.6601e-03, 6.8791e-04],
        [5.9339e-04, 2.8328e-03, 7.0326e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2817e-03],
        [1.6682e-03],
        [6.9499e-04],
        [6.4006e-04],
        [5.4422e-04],
        [1.9458e-05],
        [1.6451e-04],
        [1.1974e-05],
        [3.3433e-04],
        [3.0381e-04],
        [7.5037e-05],
        [1.6086e-03],
        [3.7197e-04],
        [4.3518e-04],
        [4.0562e-04],
        [1.5111e-03]], device='cuda:0')/tensor([[1.2817e-03, 1.6682e-03, 6.9499e-04, 6.4006e-04, 5.4422e-04, 1.9458e-05,
         1.6451e-04, 1.1974e-05, 3.3433e-04, 3.0381e-04, 7.5037e-05, 1.6086e-03,
         3.7197e-04, 4.3518e-04, 4.0562e-04, 1.5111e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.6865e-03],
        [3.6255e-03],
        [2.4420e-03],
        [3.6571e-04],
        [7.6742e-04],
        [1.7325e-06],
        [3.4530e-05],
        [5.2939e-06],
        [7.1362e-03],
        [1.0073e-03],
        [3.8265e-05],
        [1.2641e-03],
        [4.2002e-03],
        [3.0144e-03],
        [9.4679e-04],
        [4.4473e-03]], device='cuda:0')/tensor([[6.6865e-03, 3.6255e-03, 2.4420e-03, 3.6571e-04, 7.6742e-04, 1.7325e-06,
         3.4530e-05, 5.2939e-06, 7.1362e-03, 1.0073e-03, 3.8265e-05, 1.2641e-03,
         4.2002e-03, 3.0144e-03, 9.4679e-04, 4.4473e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.0197e-04],
        [5.9879e-04],
        [5.8164e-04],
        [9.6365e-04],
        [1.1084e-04],
        [2.9704e-06],
        [1.4664e-04],
        [3.3983e-06],
        [2.5552e-04],
        [1.2978e-04],
        [2.4909e-04],
        [3.7328e-04],
        [5.2408e-04],
        [7.2016e-04],
        [8.0944e-05],
        [3.6389e-04]], device='cuda:0')/tensor([[5.0197e-04, 5.9879e-04, 5.8164e-04, 9.6365e-04, 1.1084e-04, 2.9704e-06,
         1.4664e-04, 3.3983e-06, 2.5552e-04, 1.2978e-04, 2.4909e-04, 3.7328e-04,
         5.2408e-04, 7.2016e-04, 8.0944e-05, 3.6389e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2817e-03, 6.6865e-03, 5.0197e-04],
        [1.6682e-03, 3.6255e-03, 5.9879e-04],
        [6.9499e-04, 2.4420e-03, 5.8164e-04],
        [6.4006e-04, 3.6571e-04, 9.6365e-04],
        [5.4422e-04, 7.6742e-04, 1.1084e-04],
        [1.9458e-05, 1.7325e-06, 2.9704e-06],
        [1.6451e-04, 3.4530e-05, 1.4664e-04],
        [1.1974e-05, 5.2939e-06, 3.3983e-06],
        [3.3433e-04, 7.1362e-03, 2.5552e-04],
        [3.0381e-04, 1.0073e-03, 1.2978e-04],
        [7.5037e-05, 3.8265e-05, 2.4909e-04],
        [1.6086e-03, 1.2641e-03, 3.7328e-04],
        [3.7197e-04, 4.2002e-03, 5.2408e-04],
        [4.3518e-04, 3.0144e-03, 7.2016e-04],
        [4.0562e-04, 9.4679e-04, 8.0944e-05],
        [1.5111e-03, 4.4473e-03, 3.6389e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.1534e-05],
        [7.8356e-04],
        [3.7886e-04],
        [2.0013e-04],
        [4.0710e-04],
        [5.3606e-04],
        [2.8730e-04],
        [3.3799e-04],
        [4.0127e-04],
        [2.7715e-04],
        [5.3154e-05],
        [6.9269e-04],
        [5.3717e-04],
        [4.2356e-04],
        [3.5953e-04],
        [4.1173e-04]], device='cuda:0')/tensor([[7.1534e-05, 7.8356e-04, 3.7886e-04, 2.0013e-04, 4.0710e-04, 5.3606e-04,
         2.8730e-04, 3.3799e-04, 4.0127e-04, 2.7715e-04, 5.3154e-05, 6.9269e-04,
         5.3717e-04, 4.2356e-04, 3.5953e-04, 4.1173e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.6228e-04],
        [5.0922e-03],
        [1.9885e-03],
        [5.1228e-03],
        [4.8190e-03],
        [1.1076e-03],
        [4.2921e-03],
        [1.1814e-03],
        [1.1632e-03],
        [1.0309e-03],
        [6.6506e-05],
        [2.8123e-03],
        [1.2443e-03],
        [1.0808e-03],
        [6.1346e-04],
        [2.6023e-03]], device='cuda:0')/tensor([[2.6228e-04, 5.0922e-03, 1.9885e-03, 5.1228e-03, 4.8190e-03, 1.1076e-03,
         4.2921e-03, 1.1814e-03, 1.1632e-03, 1.0309e-03, 6.6506e-05, 2.8123e-03,
         1.2443e-03, 1.0808e-03, 6.1346e-04, 2.6023e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.5183e-05],
        [2.6369e-04],
        [2.3430e-04],
        [7.8684e-05],
        [7.4971e-04],
        [8.4719e-04],
        [1.9526e-04],
        [5.2698e-04],
        [3.7827e-04],
        [1.6304e-04],
        [6.0072e-05],
        [4.2129e-04],
        [1.3360e-04],
        [3.0701e-04],
        [6.1798e-05],
        [2.8209e-04]], device='cuda:0')/tensor([[5.5183e-05, 2.6369e-04, 2.3430e-04, 7.8684e-05, 7.4971e-04, 8.4719e-04,
         1.9526e-04, 5.2698e-04, 3.7827e-04, 1.6304e-04, 6.0072e-05, 4.2129e-04,
         1.3360e-04, 3.0701e-04, 6.1798e-05, 2.8209e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.1534e-05, 2.6228e-04, 5.5183e-05],
        [7.8356e-04, 5.0922e-03, 2.6369e-04],
        [3.7886e-04, 1.9885e-03, 2.3430e-04],
        [2.0013e-04, 5.1228e-03, 7.8684e-05],
        [4.0710e-04, 4.8190e-03, 7.4971e-04],
        [5.3606e-04, 1.1076e-03, 8.4719e-04],
        [2.8730e-04, 4.2921e-03, 1.9526e-04],
        [3.3799e-04, 1.1814e-03, 5.2698e-04],
        [4.0127e-04, 1.1632e-03, 3.7827e-04],
        [2.7715e-04, 1.0309e-03, 1.6304e-04],
        [5.3154e-05, 6.6506e-05, 6.0072e-05],
        [6.9269e-04, 2.8123e-03, 4.2129e-04],
        [5.3717e-04, 1.2443e-03, 1.3360e-04],
        [4.2356e-04, 1.0808e-03, 3.0701e-04],
        [3.5953e-04, 6.1346e-04, 6.1798e-05],
        [4.1173e-04, 2.6023e-03, 2.8209e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0011],
        [0.0006],
        [0.0012],
        [0.0004],
        [0.0009],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0006],
        [0.0002],
        [0.0007]], device='cuda:0')/tensor([[0.0006, 0.0011, 0.0006, 0.0012, 0.0004, 0.0009, 0.0004, 0.0007, 0.0003,
         0.0002, 0.0004, 0.0002, 0.0007, 0.0006, 0.0002, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0053],
        [0.0058],
        [0.0084],
        [0.0039],
        [0.0009],
        [0.0026],
        [0.0023],
        [0.0010],
        [0.0019],
        [0.0002],
        [0.0002],
        [0.0053],
        [0.0008],
        [0.0036],
        [0.0012]], device='cuda:0')/tensor([[0.0035, 0.0053, 0.0058, 0.0084, 0.0039, 0.0009, 0.0026, 0.0023, 0.0010,
         0.0019, 0.0002, 0.0002, 0.0053, 0.0008, 0.0036, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.7553e-04],
        [4.2742e-04],
        [9.0485e-04],
        [7.1561e-04],
        [1.9747e-04],
        [2.0020e-04],
        [1.8784e-04],
        [5.7687e-04],
        [2.1028e-04],
        [3.9020e-04],
        [5.0967e-04],
        [5.7299e-05],
        [1.2216e-03],
        [1.1961e-03],
        [7.3416e-04],
        [1.3890e-04]], device='cuda:0')/tensor([[7.7553e-04, 4.2742e-04, 9.0485e-04, 7.1561e-04, 1.9747e-04, 2.0020e-04,
         1.8784e-04, 5.7687e-04, 2.1028e-04, 3.9020e-04, 5.0967e-04, 5.7299e-05,
         1.2216e-03, 1.1961e-03, 7.3416e-04, 1.3890e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.9044e-04, 3.4534e-03, 7.7553e-04],
        [1.0734e-03, 5.2576e-03, 4.2742e-04],
        [5.6262e-04, 5.7871e-03, 9.0485e-04],
        [1.1837e-03, 8.4376e-03, 7.1561e-04],
        [4.2756e-04, 3.8583e-03, 1.9747e-04],
        [8.7690e-04, 9.2616e-04, 2.0020e-04],
        [4.4223e-04, 2.5593e-03, 1.8784e-04],
        [6.5733e-04, 2.2824e-03, 5.7687e-04],
        [3.0591e-04, 1.0153e-03, 2.1028e-04],
        [2.2422e-04, 1.8524e-03, 3.9020e-04],
        [3.7891e-04, 1.7509e-04, 5.0967e-04],
        [1.8677e-04, 2.0468e-04, 5.7299e-05],
        [6.7942e-04, 5.3442e-03, 1.2216e-03],
        [5.8234e-04, 7.8237e-04, 1.1961e-03],
        [2.3177e-04, 3.5667e-03, 7.3416e-04],
        [6.7583e-04, 1.1739e-03, 1.3890e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.7769e-04],
        [4.2802e-04],
        [8.6696e-05],
        [4.3715e-04],
        [2.2681e-04],
        [3.6604e-04],
        [7.7926e-06],
        [5.3005e-04],
        [2.2506e-04],
        [5.2341e-04],
        [6.1839e-04],
        [2.9201e-04],
        [5.9107e-04],
        [8.1081e-04],
        [2.7198e-04],
        [4.8617e-04]], device='cuda:0')/tensor([[5.7769e-04, 4.2802e-04, 8.6696e-05, 4.3715e-04, 2.2681e-04, 3.6604e-04,
         7.7926e-06, 5.3005e-04, 2.2506e-04, 5.2341e-04, 6.1839e-04, 2.9201e-04,
         5.9107e-04, 8.1081e-04, 2.7198e-04, 4.8617e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.1291e-03],
        [1.4369e-03],
        [3.5095e-04],
        [3.7365e-03],
        [1.2639e-03],
        [9.2769e-04],
        [5.9777e-06],
        [2.2249e-03],
        [2.2300e-03],
        [4.0786e-03],
        [3.2049e-03],
        [1.1617e-03],
        [2.4790e-03],
        [1.3270e-03],
        [4.2918e-05],
        [3.5808e-04]], device='cuda:0')/tensor([[2.1291e-03, 1.4369e-03, 3.5095e-04, 3.7365e-03, 1.2639e-03, 9.2769e-04,
         5.9777e-06, 2.2249e-03, 2.2300e-03, 4.0786e-03, 3.2049e-03, 1.1617e-03,
         2.4790e-03, 1.3270e-03, 4.2918e-05, 3.5808e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2604e-04],
        [1.4022e-04],
        [2.0423e-04],
        [4.6463e-04],
        [2.9019e-04],
        [3.8409e-03],
        [7.6855e-06],
        [4.0238e-04],
        [3.9488e-04],
        [5.5454e-04],
        [2.5525e-04],
        [1.0512e-04],
        [4.8659e-04],
        [4.0870e-04],
        [2.8818e-05],
        [3.5268e-04]], device='cuda:0')/tensor([[1.2604e-04, 1.4022e-04, 2.0423e-04, 4.6463e-04, 2.9019e-04, 3.8409e-03,
         7.6855e-06, 4.0238e-04, 3.9488e-04, 5.5454e-04, 2.5525e-04, 1.0512e-04,
         4.8659e-04, 4.0870e-04, 2.8818e-05, 3.5268e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.7769e-04, 2.1291e-03, 1.2604e-04],
        [4.2802e-04, 1.4369e-03, 1.4022e-04],
        [8.6696e-05, 3.5095e-04, 2.0423e-04],
        [4.3715e-04, 3.7365e-03, 4.6463e-04],
        [2.2681e-04, 1.2639e-03, 2.9019e-04],
        [3.6604e-04, 9.2769e-04, 3.8409e-03],
        [7.7926e-06, 5.9777e-06, 7.6855e-06],
        [5.3005e-04, 2.2249e-03, 4.0238e-04],
        [2.2506e-04, 2.2300e-03, 3.9488e-04],
        [5.2341e-04, 4.0786e-03, 5.5454e-04],
        [6.1839e-04, 3.2049e-03, 2.5525e-04],
        [2.9201e-04, 1.1617e-03, 1.0512e-04],
        [5.9107e-04, 2.4790e-03, 4.8659e-04],
        [8.1081e-04, 1.3270e-03, 4.0870e-04],
        [2.7198e-04, 4.2918e-05, 2.8818e-05],
        [4.8617e-04, 3.5808e-04, 3.5268e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1892e-03],
        [8.8423e-04],
        [1.2758e-05],
        [3.7170e-04],
        [9.2180e-04],
        [3.8135e-04],
        [1.4055e-04],
        [1.7069e-04],
        [6.7321e-04],
        [4.2411e-04],
        [3.9433e-04],
        [4.5097e-04],
        [3.7925e-04],
        [1.3210e-04],
        [3.3746e-04],
        [5.8752e-04]], device='cuda:0')/tensor([[1.1892e-03, 8.8423e-04, 1.2758e-05, 3.7170e-04, 9.2180e-04, 3.8135e-04,
         1.4055e-04, 1.7069e-04, 6.7321e-04, 4.2411e-04, 3.9433e-04, 4.5097e-04,
         3.7925e-04, 1.3210e-04, 3.3746e-04, 5.8752e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.1944e-03],
        [1.6860e-03],
        [5.7229e-06],
        [3.7166e-03],
        [3.3541e-03],
        [3.4375e-03],
        [9.0684e-04],
        [1.0575e-03],
        [1.5172e-02],
        [3.8792e-03],
        [2.0455e-03],
        [1.2938e-03],
        [3.8299e-03],
        [2.4926e-04],
        [4.3791e-03],
        [8.0582e-03]], device='cuda:0')/tensor([[4.1944e-03, 1.6860e-03, 5.7229e-06, 3.7166e-03, 3.3541e-03, 3.4375e-03,
         9.0684e-04, 1.0575e-03, 1.5172e-02, 3.8792e-03, 2.0455e-03, 1.2938e-03,
         3.8299e-03, 2.4926e-04, 4.3791e-03, 8.0582e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0772e-04],
        [8.0368e-04],
        [5.7452e-06],
        [3.4966e-04],
        [3.8769e-04],
        [9.4457e-04],
        [3.4394e-04],
        [3.0352e-04],
        [9.2349e-04],
        [7.6086e-04],
        [8.0351e-04],
        [6.4479e-04],
        [4.5014e-04],
        [1.9112e-04],
        [3.9234e-04],
        [7.4659e-04]], device='cuda:0')/tensor([[2.0772e-04, 8.0368e-04, 5.7452e-06, 3.4966e-04, 3.8769e-04, 9.4457e-04,
         3.4394e-04, 3.0352e-04, 9.2349e-04, 7.6086e-04, 8.0351e-04, 6.4479e-04,
         4.5014e-04, 1.9112e-04, 3.9234e-04, 7.4659e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[1.1892e-03, 4.1944e-03, 2.0772e-04],
        [8.8423e-04, 1.6860e-03, 8.0368e-04],
        [1.2758e-05, 5.7229e-06, 5.7452e-06],
        [3.7170e-04, 3.7166e-03, 3.4966e-04],
        [9.2180e-04, 3.3541e-03, 3.8769e-04],
        [3.8135e-04, 3.4375e-03, 9.4457e-04],
        [1.4055e-04, 9.0684e-04, 3.4394e-04],
        [1.7069e-04, 1.0575e-03, 3.0352e-04],
        [6.7321e-04, 1.5172e-02, 9.2349e-04],
        [4.2411e-04, 3.8792e-03, 7.6086e-04],
        [3.9433e-04, 2.0455e-03, 8.0351e-04],
        [4.5097e-04, 1.2938e-03, 6.4479e-04],
        [3.7925e-04, 3.8299e-03, 4.5014e-04],
        [1.3210e-04, 2.4926e-04, 1.9112e-04],
        [3.3746e-04, 4.3791e-03, 3.9234e-04],
        [5.8752e-04, 8.0582e-03, 7.4659e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0006],
        [0.0002],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0006, 0.0002, 0.0006, 0.0002]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0004],
        [0.0002],
        [0.0061],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0002, 0.0061, 0.0002]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0016],
        [0.0001],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0016, 0.0001, 0.0004, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0006, 0.0004, 0.0016],
        [0.0002, 0.0002, 0.0001],
        [0.0006, 0.0061, 0.0004],
        [0.0002, 0.0002, 0.0007]], device='cuda:0')
acc:  0.4772727272727273
Time taken to execute the de NLI task with prompt type active, variation 5 and batchsize 16: 0:01:02.138571
path ['42', 'de', 'flan', 'NLI', 'active', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI passive 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 358.17it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0040],
        [0.0013],
        [0.0013],
        [0.0008],
        [0.0010],
        [0.0004],
        [0.0006],
        [0.0007],
        [0.0008],
        [0.0011],
        [0.0034],
        [0.0007],
        [0.0008],
        [0.0012],
        [0.0023],
        [0.0009]], device='cuda:0')/tensor([[0.0040, 0.0013, 0.0013, 0.0008, 0.0010, 0.0004, 0.0006, 0.0007, 0.0008,
         0.0011, 0.0034, 0.0007, 0.0008, 0.0012, 0.0023, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0067],
        [0.0022],
        [0.0025],
        [0.0024],
        [0.0020],
        [0.0067],
        [0.0035],
        [0.0022],
        [0.0030],
        [0.0020],
        [0.0019],
        [0.0007],
        [0.0047],
        [0.0017],
        [0.0031],
        [0.0007]], device='cuda:0')/tensor([[0.0067, 0.0022, 0.0025, 0.0024, 0.0020, 0.0067, 0.0035, 0.0022, 0.0030,
         0.0020, 0.0019, 0.0007, 0.0047, 0.0017, 0.0031, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0003],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0009],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0013],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0001],
        [0.0009],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0003, 0.0005, 0.0009, 0.0002, 0.0004, 0.0004, 0.0013,
         0.0002, 0.0005, 0.0007, 0.0003, 0.0001, 0.0009, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0040, 0.0067, 0.0003],
        [0.0013, 0.0022, 0.0002],
        [0.0013, 0.0025, 0.0003],
        [0.0008, 0.0024, 0.0005],
        [0.0010, 0.0020, 0.0009],
        [0.0004, 0.0067, 0.0002],
        [0.0006, 0.0035, 0.0004],
        [0.0007, 0.0022, 0.0004],
        [0.0008, 0.0030, 0.0013],
        [0.0011, 0.0020, 0.0002],
        [0.0034, 0.0019, 0.0005],
        [0.0007, 0.0007, 0.0007],
        [0.0008, 0.0047, 0.0003],
        [0.0012, 0.0017, 0.0001],
        [0.0023, 0.0031, 0.0009],
        [0.0009, 0.0007, 0.0005]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0014],
        [0.0015],
        [0.0014],
        [0.0013],
        [0.0006],
        [0.0035],
        [0.0025],
        [0.0022],
        [0.0027],
        [0.0018],
        [0.0008],
        [0.0009],
        [0.0017],
        [0.0006],
        [0.0015]], device='cuda:0')/tensor([[0.0011, 0.0014, 0.0015, 0.0014, 0.0013, 0.0006, 0.0035, 0.0025, 0.0022,
         0.0027, 0.0018, 0.0008, 0.0009, 0.0017, 0.0006, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0031],
        [0.0030],
        [0.0027],
        [0.0052],
        [0.0044],
        [0.0020],
        [0.0009],
        [0.0038],
        [0.0024],
        [0.0048],
        [0.0106],
        [0.0030],
        [0.0020],
        [0.0019],
        [0.0047]], device='cuda:0')/tensor([[0.0025, 0.0031, 0.0030, 0.0027, 0.0052, 0.0044, 0.0020, 0.0009, 0.0038,
         0.0024, 0.0048, 0.0106, 0.0030, 0.0020, 0.0019, 0.0047]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0004],
        [0.0005],
        [0.0003],
        [0.0011],
        [0.0004],
        [0.0004],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0003, 0.0011, 0.0004, 0.0004, 0.0006, 0.0001, 0.0004,
         0.0004, 0.0003, 0.0002, 0.0006, 0.0006, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0025, 0.0004],
        [0.0014, 0.0031, 0.0005],
        [0.0015, 0.0030, 0.0003],
        [0.0014, 0.0027, 0.0011],
        [0.0013, 0.0052, 0.0004],
        [0.0006, 0.0044, 0.0004],
        [0.0035, 0.0020, 0.0006],
        [0.0025, 0.0009, 0.0001],
        [0.0022, 0.0038, 0.0004],
        [0.0027, 0.0024, 0.0004],
        [0.0018, 0.0048, 0.0003],
        [0.0008, 0.0106, 0.0002],
        [0.0009, 0.0030, 0.0006],
        [0.0017, 0.0020, 0.0006],
        [0.0006, 0.0019, 0.0002],
        [0.0015, 0.0047, 0.0003]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0018],
        [0.0021],
        [0.0002],
        [0.0009],
        [0.0008],
        [0.0005],
        [0.0006],
        [0.0010],
        [0.0042],
        [0.0012],
        [0.0031],
        [0.0011],
        [0.0012],
        [0.0009],
        [0.0017]], device='cuda:0')/tensor([[0.0017, 0.0018, 0.0021, 0.0002, 0.0009, 0.0008, 0.0005, 0.0006, 0.0010,
         0.0042, 0.0012, 0.0031, 0.0011, 0.0012, 0.0009, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0091],
        [0.0031],
        [0.0139],
        [0.0030],
        [0.0022],
        [0.0015],
        [0.0044],
        [0.0015],
        [0.0040],
        [0.0037],
        [0.0010],
        [0.0023],
        [0.0017],
        [0.0052],
        [0.0048],
        [0.0015]], device='cuda:0')/tensor([[0.0091, 0.0031, 0.0139, 0.0030, 0.0022, 0.0015, 0.0044, 0.0015, 0.0040,
         0.0037, 0.0010, 0.0023, 0.0017, 0.0052, 0.0048, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.1706e-04],
        [5.4418e-04],
        [1.9012e-04],
        [1.6673e-04],
        [1.3411e-04],
        [4.3722e-04],
        [1.1155e-04],
        [6.2001e-04],
        [5.5265e-04],
        [4.9188e-04],
        [2.7518e-03],
        [9.8695e-05],
        [2.7882e-04],
        [3.1500e-04],
        [2.0821e-04],
        [3.9921e-04]], device='cuda:0')/tensor([[6.1706e-04, 5.4418e-04, 1.9012e-04, 1.6673e-04, 1.3411e-04, 4.3722e-04,
         1.1155e-04, 6.2001e-04, 5.5265e-04, 4.9188e-04, 2.7518e-03, 9.8695e-05,
         2.7882e-04, 3.1500e-04, 2.0821e-04, 3.9921e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6832e-03, 9.0739e-03, 6.1706e-04],
        [1.7958e-03, 3.1251e-03, 5.4418e-04],
        [2.1387e-03, 1.3891e-02, 1.9012e-04],
        [2.1776e-04, 2.9761e-03, 1.6673e-04],
        [9.0943e-04, 2.1903e-03, 1.3411e-04],
        [7.8162e-04, 1.4960e-03, 4.3722e-04],
        [5.1255e-04, 4.4221e-03, 1.1155e-04],
        [5.9838e-04, 1.4742e-03, 6.2001e-04],
        [1.0054e-03, 3.9827e-03, 5.5265e-04],
        [4.1767e-03, 3.7303e-03, 4.9188e-04],
        [1.1632e-03, 9.9416e-04, 2.7518e-03],
        [3.1462e-03, 2.2554e-03, 9.8695e-05],
        [1.1364e-03, 1.7218e-03, 2.7882e-04],
        [1.1728e-03, 5.2237e-03, 3.1500e-04],
        [8.8093e-04, 4.7620e-03, 2.0821e-04],
        [1.6691e-03, 1.5073e-03, 3.9921e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2571e-03],
        [1.3966e-03],
        [6.9587e-04],
        [8.9060e-04],
        [2.7165e-03],
        [7.4417e-04],
        [8.8031e-04],
        [1.6589e-03],
        [2.1058e-03],
        [1.2489e-02],
        [6.3284e-05],
        [8.3660e-04],
        [1.3399e-03],
        [2.5921e-03],
        [9.1795e-04],
        [8.2601e-04]], device='cuda:0')/tensor([[2.2571e-03, 1.3966e-03, 6.9587e-04, 8.9060e-04, 2.7165e-03, 7.4417e-04,
         8.8031e-04, 1.6589e-03, 2.1058e-03, 1.2489e-02, 6.3284e-05, 8.3660e-04,
         1.3399e-03, 2.5921e-03, 9.1795e-04, 8.2601e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0020],
        [0.0013],
        [0.0013],
        [0.0012],
        [0.0009],
        [0.0007],
        [0.0052],
        [0.0078],
        [0.0116],
        [0.0016],
        [0.0022],
        [0.0036],
        [0.0052],
        [0.0032],
        [0.0048]], device='cuda:0')/tensor([[0.0028, 0.0020, 0.0013, 0.0013, 0.0012, 0.0009, 0.0007, 0.0052, 0.0078,
         0.0116, 0.0016, 0.0022, 0.0036, 0.0052, 0.0032, 0.0048]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0008],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0011],
        [0.0002],
        [0.0013],
        [0.0014],
        [0.0005],
        [0.0018],
        [0.0001],
        [0.0005],
        [0.0011],
        [0.0005],
        [0.0005],
        [0.0004]], device='cuda:0')/tensor([[0.0008, 0.0003, 0.0002, 0.0002, 0.0011, 0.0002, 0.0013, 0.0014, 0.0005,
         0.0018, 0.0001, 0.0005, 0.0011, 0.0005, 0.0005, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2571e-03, 2.8333e-03, 8.0301e-04],
        [1.3966e-03, 2.0449e-03, 2.9792e-04],
        [6.9587e-04, 1.3281e-03, 1.6487e-04],
        [8.9060e-04, 1.2767e-03, 1.9749e-04],
        [2.7165e-03, 1.1544e-03, 1.0511e-03],
        [7.4417e-04, 9.1027e-04, 2.4733e-04],
        [8.8031e-04, 7.3496e-04, 1.2619e-03],
        [1.6589e-03, 5.1773e-03, 1.4481e-03],
        [2.1058e-03, 7.7550e-03, 4.5990e-04],
        [1.2489e-02, 1.1592e-02, 1.7720e-03],
        [6.3284e-05, 1.5769e-03, 1.4044e-04],
        [8.3660e-04, 2.2389e-03, 4.6758e-04],
        [1.3399e-03, 3.6457e-03, 1.0950e-03],
        [2.5921e-03, 5.1859e-03, 5.3654e-04],
        [9.1795e-04, 3.2469e-03, 4.8337e-04],
        [8.2601e-04, 4.7894e-03, 4.0469e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0017],
        [0.0012],
        [0.0005],
        [0.0003],
        [0.0012],
        [0.0017],
        [0.0011],
        [0.0007],
        [0.0011],
        [0.0021],
        [0.0021],
        [0.0026],
        [0.0021],
        [0.0014],
        [0.0031]], device='cuda:0')/tensor([[0.0014, 0.0017, 0.0012, 0.0005, 0.0003, 0.0012, 0.0017, 0.0011, 0.0007,
         0.0011, 0.0021, 0.0021, 0.0026, 0.0021, 0.0014, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4234e-03],
        [5.3426e-03],
        [1.7734e-03],
        [1.9180e-04],
        [4.5436e-05],
        [1.6184e-03],
        [3.7412e-04],
        [3.1562e-03],
        [9.1718e-04],
        [6.0593e-03],
        [1.3724e-03],
        [6.6040e-04],
        [4.9892e-03],
        [5.8273e-03],
        [8.5438e-04],
        [2.4991e-04]], device='cuda:0')/tensor([[2.4234e-03, 5.3426e-03, 1.7734e-03, 1.9180e-04, 4.5436e-05, 1.6184e-03,
         3.7412e-04, 3.1562e-03, 9.1718e-04, 6.0593e-03, 1.3724e-03, 6.6040e-04,
         4.9892e-03, 5.8273e-03, 8.5438e-04, 2.4991e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0004],
        [0.0010],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0014],
        [0.0007],
        [0.0005],
        [0.0016],
        [0.0002],
        [0.0012],
        [0.0002],
        [0.0006],
        [0.0014],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0004, 0.0002, 0.0002, 0.0004, 0.0014, 0.0007, 0.0005,
         0.0016, 0.0002, 0.0012, 0.0002, 0.0006, 0.0014, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3562e-03, 2.4234e-03, 3.9274e-04],
        [1.6730e-03, 5.3426e-03, 1.0208e-03],
        [1.1809e-03, 1.7734e-03, 3.6740e-04],
        [4.8798e-04, 1.9180e-04, 1.9984e-04],
        [2.8802e-04, 4.5436e-05, 1.6769e-04],
        [1.1603e-03, 1.6184e-03, 4.3050e-04],
        [1.7294e-03, 3.7412e-04, 1.3573e-03],
        [1.1456e-03, 3.1562e-03, 7.1155e-04],
        [6.5722e-04, 9.1718e-04, 5.2748e-04],
        [1.0532e-03, 6.0593e-03, 1.5954e-03],
        [2.0920e-03, 1.3724e-03, 2.0695e-04],
        [2.0794e-03, 6.6040e-04, 1.2153e-03],
        [2.6152e-03, 4.9892e-03, 2.1018e-04],
        [2.1411e-03, 5.8273e-03, 5.5913e-04],
        [1.4405e-03, 8.5438e-04, 1.3587e-03],
        [3.1315e-03, 2.4991e-04, 5.0228e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0017],
        [0.0009],
        [0.0011],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0010],
        [0.0005],
        [0.0007],
        [0.0009],
        [0.0011],
        [0.0010],
        [0.0010],
        [0.0019],
        [0.0010]], device='cuda:0')/tensor([[0.0008, 0.0017, 0.0009, 0.0011, 0.0004, 0.0001, 0.0003, 0.0010, 0.0005,
         0.0007, 0.0009, 0.0011, 0.0010, 0.0010, 0.0019, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3323e-03],
        [2.1089e-02],
        [5.9373e-03],
        [4.0712e-03],
        [9.0413e-05],
        [4.5234e-04],
        [8.2284e-05],
        [1.3130e-03],
        [1.6783e-03],
        [4.4790e-04],
        [4.0347e-04],
        [3.4131e-03],
        [6.1357e-03],
        [4.3929e-03],
        [4.2568e-03],
        [6.1710e-03]], device='cuda:0')/tensor([[1.3323e-03, 2.1089e-02, 5.9373e-03, 4.0712e-03, 9.0413e-05, 4.5234e-04,
         8.2284e-05, 1.3130e-03, 1.6783e-03, 4.4790e-04, 4.0347e-04, 3.4131e-03,
         6.1357e-03, 4.3929e-03, 4.2568e-03, 6.1710e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2781e-04],
        [1.7404e-03],
        [8.8211e-04],
        [4.9650e-04],
        [2.0851e-04],
        [7.0490e-05],
        [2.7659e-04],
        [4.0044e-04],
        [3.2899e-04],
        [7.7002e-04],
        [3.8621e-04],
        [5.6109e-04],
        [4.4509e-04],
        [5.5431e-04],
        [4.0567e-04],
        [6.3945e-04]], device='cuda:0')/tensor([[3.2781e-04, 1.7404e-03, 8.8211e-04, 4.9650e-04, 2.0851e-04, 7.0490e-05,
         2.7659e-04, 4.0044e-04, 3.2899e-04, 7.7002e-04, 3.8621e-04, 5.6109e-04,
         4.4509e-04, 5.5431e-04, 4.0567e-04, 6.3945e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[8.2618e-04, 1.3323e-03, 3.2781e-04],
        [1.7104e-03, 2.1089e-02, 1.7404e-03],
        [9.3584e-04, 5.9373e-03, 8.8211e-04],
        [1.0977e-03, 4.0712e-03, 4.9650e-04],
        [3.7766e-04, 9.0413e-05, 2.0851e-04],
        [1.1199e-04, 4.5234e-04, 7.0490e-05],
        [3.0402e-04, 8.2284e-05, 2.7659e-04],
        [9.6277e-04, 1.3130e-03, 4.0044e-04],
        [4.8185e-04, 1.6783e-03, 3.2899e-04],
        [6.9553e-04, 4.4790e-04, 7.7002e-04],
        [8.7516e-04, 4.0347e-04, 3.8621e-04],
        [1.0693e-03, 3.4131e-03, 5.6109e-04],
        [1.0044e-03, 6.1357e-03, 4.4509e-04],
        [1.0306e-03, 4.3929e-03, 5.5431e-04],
        [1.8651e-03, 4.2568e-03, 4.0567e-04],
        [1.0278e-03, 6.1710e-03, 6.3945e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.3536e-03],
        [1.5982e-03],
        [2.2282e-03],
        [1.6367e-03],
        [9.8410e-04],
        [1.2365e-03],
        [1.4333e-03],
        [1.8592e-03],
        [5.9549e-04],
        [1.9541e-03],
        [8.4969e-05],
        [1.2764e-03],
        [7.7822e-04],
        [1.5571e-03],
        [1.8051e-03],
        [2.5168e-03]], device='cuda:0')/tensor([[3.3536e-03, 1.5982e-03, 2.2282e-03, 1.6367e-03, 9.8410e-04, 1.2365e-03,
         1.4333e-03, 1.8592e-03, 5.9549e-04, 1.9541e-03, 8.4969e-05, 1.2764e-03,
         7.7822e-04, 1.5571e-03, 1.8051e-03, 2.5168e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0045],
        [0.0037],
        [0.0040],
        [0.0021],
        [0.0018],
        [0.0020],
        [0.0112],
        [0.0036],
        [0.0115],
        [0.0037],
        [0.0005],
        [0.0050],
        [0.0002],
        [0.0096],
        [0.0067],
        [0.0032]], device='cuda:0')/tensor([[0.0045, 0.0037, 0.0040, 0.0021, 0.0018, 0.0020, 0.0112, 0.0036, 0.0115,
         0.0037, 0.0005, 0.0050, 0.0002, 0.0096, 0.0067, 0.0032]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.4281e-04],
        [2.2487e-04],
        [9.3261e-04],
        [3.2828e-04],
        [2.9071e-04],
        [1.4786e-03],
        [7.2142e-04],
        [1.0005e-03],
        [1.5102e-04],
        [1.7035e-04],
        [6.6830e-05],
        [6.8032e-04],
        [2.6254e-04],
        [3.1912e-04],
        [5.7716e-04],
        [5.8376e-04]], device='cuda:0')/tensor([[5.4281e-04, 2.2487e-04, 9.3261e-04, 3.2828e-04, 2.9071e-04, 1.4786e-03,
         7.2142e-04, 1.0005e-03, 1.5102e-04, 1.7035e-04, 6.6830e-05, 6.8032e-04,
         2.6254e-04, 3.1912e-04, 5.7716e-04, 5.8376e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3536e-03, 4.4876e-03, 5.4281e-04],
        [1.5982e-03, 3.7363e-03, 2.2487e-04],
        [2.2282e-03, 4.0472e-03, 9.3261e-04],
        [1.6367e-03, 2.0898e-03, 3.2828e-04],
        [9.8410e-04, 1.8386e-03, 2.9071e-04],
        [1.2365e-03, 2.0494e-03, 1.4786e-03],
        [1.4333e-03, 1.1177e-02, 7.2142e-04],
        [1.8592e-03, 3.5833e-03, 1.0005e-03],
        [5.9549e-04, 1.1478e-02, 1.5102e-04],
        [1.9541e-03, 3.6619e-03, 1.7035e-04],
        [8.4969e-05, 5.4385e-04, 6.6830e-05],
        [1.2764e-03, 4.9959e-03, 6.8032e-04],
        [7.7822e-04, 1.6223e-04, 2.6254e-04],
        [1.5571e-03, 9.5780e-03, 3.1912e-04],
        [1.8051e-03, 6.6758e-03, 5.7716e-04],
        [2.5168e-03, 3.2109e-03, 5.8376e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0013],
        [0.0010],
        [0.0020],
        [0.0008],
        [0.0030],
        [0.0006],
        [0.0018],
        [0.0022],
        [0.0046],
        [0.0011],
        [0.0012],
        [0.0008],
        [0.0026],
        [0.0022],
        [0.0009]], device='cuda:0')/tensor([[0.0004, 0.0013, 0.0010, 0.0020, 0.0008, 0.0030, 0.0006, 0.0018, 0.0022,
         0.0046, 0.0011, 0.0012, 0.0008, 0.0026, 0.0022, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.0601e-05],
        [6.5930e-04],
        [1.0757e-03],
        [1.8507e-03],
        [1.8824e-03],
        [1.8613e-03],
        [2.3441e-04],
        [1.1113e-02],
        [5.6043e-03],
        [4.4900e-03],
        [1.2149e-04],
        [2.2241e-03],
        [2.0761e-04],
        [3.2375e-03],
        [2.9964e-03],
        [1.0889e-03]], device='cuda:0')/tensor([[7.0601e-05, 6.5930e-04, 1.0757e-03, 1.8507e-03, 1.8824e-03, 1.8613e-03,
         2.3441e-04, 1.1113e-02, 5.6043e-03, 4.4900e-03, 1.2149e-04, 2.2241e-03,
         2.0761e-04, 3.2375e-03, 2.9964e-03, 1.0889e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0001],
        [0.0002],
        [0.0003],
        [0.0014],
        [0.0002],
        [0.0001],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0009],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0001, 0.0002, 0.0003, 0.0014, 0.0002, 0.0001, 0.0004, 0.0006,
         0.0005, 0.0005, 0.0005, 0.0002, 0.0003, 0.0009, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7332e-04, 7.0601e-05, 1.8012e-04],
        [1.3079e-03, 6.5930e-04, 1.1668e-04],
        [9.6444e-04, 1.0757e-03, 2.2473e-04],
        [1.9574e-03, 1.8507e-03, 2.8132e-04],
        [7.9263e-04, 1.8824e-03, 1.4410e-03],
        [2.9860e-03, 1.8613e-03, 2.2648e-04],
        [5.8336e-04, 2.3441e-04, 1.2521e-04],
        [1.7734e-03, 1.1113e-02, 3.5410e-04],
        [2.2134e-03, 5.6043e-03, 5.9141e-04],
        [4.6318e-03, 4.4900e-03, 4.8370e-04],
        [1.1103e-03, 1.2149e-04, 4.9188e-04],
        [1.1886e-03, 2.2241e-03, 5.0197e-04],
        [8.1473e-04, 2.0761e-04, 1.8634e-04],
        [2.6354e-03, 3.2375e-03, 2.6117e-04],
        [2.2049e-03, 2.9964e-03, 8.5049e-04],
        [8.8622e-04, 1.0889e-03, 1.9728e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0019],
        [0.0033],
        [0.0052],
        [0.0019]], device='cuda:0')/tensor([[0.0019, 0.0033, 0.0052, 0.0019]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0094],
        [0.0005],
        [0.0018],
        [0.0043]], device='cuda:0')/tensor([[0.0094, 0.0005, 0.0018, 0.0043]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0002],
        [0.0003],
        [0.0009],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0009, 0.0003]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0019, 0.0094, 0.0002],
        [0.0033, 0.0005, 0.0003],
        [0.0052, 0.0018, 0.0009],
        [0.0019, 0.0043, 0.0003]], device='cuda:0')
acc:  0.4166666666666667
Time taken to execute the de NLI task with prompt type passive, variation 0 and batchsize 16: 0:01:01.991995
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI passive 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 367.50it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0010],
        [0.0002],
        [0.0005],
        [0.0011],
        [0.0009],
        [0.0007],
        [0.0032],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0018],
        [0.0009],
        [0.0067]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0002, 0.0005, 0.0011, 0.0009, 0.0007, 0.0032, 0.0004,
         0.0003, 0.0005, 0.0004, 0.0007, 0.0018, 0.0009, 0.0067]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0016],
        [0.0016],
        [0.0011],
        [0.0045],
        [0.0013],
        [0.0003],
        [0.0036],
        [0.0011],
        [0.0002],
        [0.0015],
        [0.0006],
        [0.0049],
        [0.0041],
        [0.0009],
        [0.0039]], device='cuda:0')/tensor([[0.0006, 0.0016, 0.0016, 0.0011, 0.0045, 0.0013, 0.0003, 0.0036, 0.0011,
         0.0002, 0.0015, 0.0006, 0.0049, 0.0041, 0.0009, 0.0039]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.1075e-04],
        [4.7555e-04],
        [6.7634e-05],
        [2.3068e-04],
        [4.8974e-04],
        [7.0688e-04],
        [3.9732e-04],
        [7.2110e-04],
        [1.5006e-04],
        [3.4626e-04],
        [4.7060e-04],
        [3.3915e-04],
        [4.6263e-04],
        [4.0811e-04],
        [1.5972e-04],
        [2.1422e-03]], device='cuda:0')/tensor([[3.1075e-04, 4.7555e-04, 6.7634e-05, 2.3068e-04, 4.8974e-04, 7.0688e-04,
         3.9732e-04, 7.2110e-04, 1.5006e-04, 3.4626e-04, 4.7060e-04, 3.3915e-04,
         4.6263e-04, 4.0811e-04, 1.5972e-04, 2.1422e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6280e-04, 5.7207e-04, 3.1075e-04],
        [1.0222e-03, 1.6232e-03, 4.7555e-04],
        [2.3930e-04, 1.6299e-03, 6.7634e-05],
        [5.2894e-04, 1.0949e-03, 2.3068e-04],
        [1.1169e-03, 4.4684e-03, 4.8974e-04],
        [8.8446e-04, 1.3293e-03, 7.0688e-04],
        [6.7656e-04, 3.0475e-04, 3.9732e-04],
        [3.2107e-03, 3.6177e-03, 7.2110e-04],
        [4.4400e-04, 1.1409e-03, 1.5006e-04],
        [2.7286e-04, 2.2408e-04, 3.4626e-04],
        [5.1207e-04, 1.5411e-03, 4.7060e-04],
        [4.2303e-04, 6.0347e-04, 3.3915e-04],
        [6.6799e-04, 4.8991e-03, 4.6263e-04],
        [1.8198e-03, 4.1167e-03, 4.0811e-04],
        [9.1315e-04, 9.0853e-04, 1.5972e-04],
        [6.6617e-03, 3.8634e-03, 2.1422e-03]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0005],
        [0.0001],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0011],
        [0.0009],
        [0.0001],
        [0.0003],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0005, 0.0001, 0.0005, 0.0005, 0.0006, 0.0004, 0.0003,
         0.0004, 0.0011, 0.0009, 0.0001, 0.0003, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0721e-03],
        [9.1231e-04],
        [2.5188e-03],
        [2.5181e-04],
        [3.6609e-04],
        [3.0875e-04],
        [9.8000e-04],
        [6.0541e-04],
        [2.5179e-05],
        [4.3564e-04],
        [2.1560e-03],
        [3.0246e-03],
        [1.8307e-05],
        [5.7508e-04],
        [1.9217e-03],
        [1.5137e-03]], device='cuda:0')/tensor([[1.0721e-03, 9.1231e-04, 2.5188e-03, 2.5181e-04, 3.6609e-04, 3.0875e-04,
         9.8000e-04, 6.0541e-04, 2.5179e-05, 4.3564e-04, 2.1560e-03, 3.0246e-03,
         1.8307e-05, 5.7508e-04, 1.9217e-03, 1.5137e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.7693e-04],
        [1.5876e-04],
        [3.4636e-04],
        [4.0270e-04],
        [2.3671e-04],
        [2.6500e-04],
        [1.4020e-04],
        [2.9744e-04],
        [2.2310e-04],
        [1.7502e-04],
        [3.7066e-04],
        [3.6485e-04],
        [6.6663e-05],
        [1.2872e-04],
        [2.8664e-04],
        [1.7891e-04]], device='cuda:0')/tensor([[4.7693e-04, 1.5876e-04, 3.4636e-04, 4.0270e-04, 2.3671e-04, 2.6500e-04,
         1.4020e-04, 2.9744e-04, 2.2310e-04, 1.7502e-04, 3.7066e-04, 3.6485e-04,
         6.6663e-05, 1.2872e-04, 2.8664e-04, 1.7891e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.6077e-04, 1.0721e-03, 4.7693e-04],
        [3.2919e-04, 9.1231e-04, 1.5876e-04],
        [4.5697e-04, 2.5188e-03, 3.4636e-04],
        [1.0318e-04, 2.5181e-04, 4.0270e-04],
        [5.4216e-04, 3.6609e-04, 2.3671e-04],
        [5.2149e-04, 3.0875e-04, 2.6500e-04],
        [6.1130e-04, 9.8000e-04, 1.4020e-04],
        [3.7704e-04, 6.0541e-04, 2.9744e-04],
        [2.5044e-04, 2.5179e-05, 2.2310e-04],
        [3.6901e-04, 4.3564e-04, 1.7502e-04],
        [1.0801e-03, 2.1560e-03, 3.7066e-04],
        [8.6844e-04, 3.0246e-03, 3.6485e-04],
        [1.1564e-04, 1.8307e-05, 6.6663e-05],
        [2.7964e-04, 5.7508e-04, 1.2872e-04],
        [4.1745e-04, 1.9217e-03, 2.8664e-04],
        [3.1687e-04, 1.5137e-03, 1.7891e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2390e-04],
        [1.9074e-04],
        [1.8620e-04],
        [1.4606e-03],
        [7.9049e-04],
        [5.9750e-04],
        [8.7080e-04],
        [1.2828e-03],
        [1.0036e-03],
        [1.3826e-04],
        [1.3109e-04],
        [4.1386e-04],
        [8.7853e-05],
        [3.9236e-04],
        [9.2810e-04],
        [7.7732e-04]], device='cuda:0')/tensor([[2.2390e-04, 1.9074e-04, 1.8620e-04, 1.4606e-03, 7.9049e-04, 5.9750e-04,
         8.7080e-04, 1.2828e-03, 1.0036e-03, 1.3826e-04, 1.3109e-04, 4.1386e-04,
         8.7853e-05, 3.9236e-04, 9.2810e-04, 7.7732e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.0208e-04],
        [3.4749e-04],
        [3.7141e-04],
        [1.4087e-03],
        [1.1534e-03],
        [1.4564e-03],
        [6.6343e-04],
        [1.4841e-03],
        [6.7777e-04],
        [1.5543e-03],
        [3.1143e-05],
        [2.4500e-04],
        [5.0784e-05],
        [5.6056e-04],
        [1.7121e-03],
        [3.7767e-04]], device='cuda:0')/tensor([[3.0208e-04, 3.4749e-04, 3.7141e-04, 1.4087e-03, 1.1534e-03, 1.4564e-03,
         6.6343e-04, 1.4841e-03, 6.7777e-04, 1.5543e-03, 3.1143e-05, 2.4500e-04,
         5.0784e-05, 5.6056e-04, 1.7121e-03, 3.7767e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8045e-04],
        [1.3682e-04],
        [2.6927e-04],
        [1.3055e-04],
        [4.3087e-04],
        [7.8184e-04],
        [2.2582e-04],
        [3.8265e-04],
        [1.8516e-04],
        [1.2748e-04],
        [7.5561e-05],
        [4.1759e-04],
        [1.5434e-04],
        [2.4592e-04],
        [1.2705e-04],
        [2.2628e-04]], device='cuda:0')/tensor([[3.8045e-04, 1.3682e-04, 2.6927e-04, 1.3055e-04, 4.3087e-04, 7.8184e-04,
         2.2582e-04, 3.8265e-04, 1.8516e-04, 1.2748e-04, 7.5561e-05, 4.1759e-04,
         1.5434e-04, 2.4592e-04, 1.2705e-04, 2.2628e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2390e-04, 3.0208e-04, 3.8045e-04],
        [1.9074e-04, 3.4749e-04, 1.3682e-04],
        [1.8620e-04, 3.7141e-04, 2.6927e-04],
        [1.4606e-03, 1.4087e-03, 1.3055e-04],
        [7.9049e-04, 1.1534e-03, 4.3087e-04],
        [5.9750e-04, 1.4564e-03, 7.8184e-04],
        [8.7080e-04, 6.6343e-04, 2.2582e-04],
        [1.2828e-03, 1.4841e-03, 3.8265e-04],
        [1.0036e-03, 6.7777e-04, 1.8516e-04],
        [1.3826e-04, 1.5543e-03, 1.2748e-04],
        [1.3109e-04, 3.1143e-05, 7.5561e-05],
        [4.1386e-04, 2.4500e-04, 4.1759e-04],
        [8.7853e-05, 5.0784e-05, 1.5434e-04],
        [3.9236e-04, 5.6056e-04, 2.4592e-04],
        [9.2810e-04, 1.7121e-03, 1.2705e-04],
        [7.7732e-04, 3.7767e-04, 2.2628e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0020],
        [0.0004],
        [0.0003],
        [0.0024],
        [0.0005],
        [0.0015],
        [0.0011],
        [0.0010],
        [0.0001],
        [0.0008],
        [0.0005],
        [0.0009]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0009, 0.0002, 0.0020, 0.0004, 0.0003, 0.0024, 0.0005,
         0.0015, 0.0011, 0.0010, 0.0001, 0.0008, 0.0005, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8125e-03],
        [9.4238e-05],
        [2.0936e-03],
        [6.4319e-04],
        [3.6151e-03],
        [1.2059e-03],
        [4.1501e-04],
        [1.1994e-03],
        [5.6718e-04],
        [1.3508e-03],
        [4.4759e-04],
        [6.9985e-04],
        [5.0587e-05],
        [2.1198e-03],
        [3.1542e-04],
        [8.1027e-04]], device='cuda:0')/tensor([[1.8125e-03, 9.4238e-05, 2.0936e-03, 6.4319e-04, 3.6151e-03, 1.2059e-03,
         4.1501e-04, 1.1994e-03, 5.6718e-04, 1.3508e-03, 4.4759e-04, 6.9985e-04,
         5.0587e-05, 2.1198e-03, 3.1542e-04, 8.1027e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8004e-04],
        [1.8861e-04],
        [8.2466e-04],
        [2.5352e-04],
        [2.3021e-04],
        [2.3274e-04],
        [2.2919e-04],
        [4.8251e-04],
        [2.5906e-04],
        [4.3376e-04],
        [1.6992e-04],
        [1.9329e-04],
        [1.6116e-04],
        [3.7873e-04],
        [5.2735e-04],
        [6.7522e-05]], device='cuda:0')/tensor([[3.8004e-04, 1.8861e-04, 8.2466e-04, 2.5352e-04, 2.3021e-04, 2.3274e-04,
         2.2919e-04, 4.8251e-04, 2.5906e-04, 4.3376e-04, 1.6992e-04, 1.9329e-04,
         1.6116e-04, 3.7873e-04, 5.2735e-04, 6.7522e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.6079e-04, 1.8125e-03, 3.8004e-04],
        [1.8888e-04, 9.4238e-05, 1.8861e-04],
        [8.7953e-04, 2.0936e-03, 8.2466e-04],
        [1.6420e-04, 6.4319e-04, 2.5352e-04],
        [1.9614e-03, 3.6151e-03, 2.3021e-04],
        [3.5781e-04, 1.2059e-03, 2.3274e-04],
        [2.8418e-04, 4.1501e-04, 2.2919e-04],
        [2.4191e-03, 1.1994e-03, 4.8251e-04],
        [5.0523e-04, 5.6718e-04, 2.5906e-04],
        [1.4935e-03, 1.3508e-03, 4.3376e-04],
        [1.1190e-03, 4.4759e-04, 1.6992e-04],
        [9.5447e-04, 6.9985e-04, 1.9329e-04],
        [1.1499e-04, 5.0587e-05, 1.6116e-04],
        [7.5689e-04, 2.1198e-03, 3.7873e-04],
        [4.5313e-04, 3.1542e-04, 5.2735e-04],
        [8.9287e-04, 8.1027e-04, 6.7522e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0001],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0006],
        [0.0003],
        [0.0011],
        [0.0017],
        [0.0008],
        [0.0001],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0010],
        [0.0005]], device='cuda:0')/tensor([[0.0008, 0.0001, 0.0004, 0.0004, 0.0007, 0.0006, 0.0003, 0.0011, 0.0017,
         0.0008, 0.0001, 0.0003, 0.0004, 0.0003, 0.0010, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.8128e-04],
        [1.8054e-04],
        [3.5902e-03],
        [5.4077e-04],
        [7.6064e-04],
        [1.9730e-03],
        [2.3432e-05],
        [7.8895e-04],
        [4.4122e-03],
        [5.7639e-04],
        [1.0167e-04],
        [1.4016e-04],
        [6.7697e-04],
        [4.7165e-04],
        [4.8531e-03],
        [1.4689e-04]], device='cuda:0')/tensor([[9.8128e-04, 1.8054e-04, 3.5902e-03, 5.4077e-04, 7.6064e-04, 1.9730e-03,
         2.3432e-05, 7.8895e-04, 4.4122e-03, 5.7639e-04, 1.0167e-04, 1.4016e-04,
         6.7697e-04, 4.7165e-04, 4.8531e-03, 1.4689e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5666e-04],
        [3.0337e-04],
        [1.7068e-04],
        [4.1536e-04],
        [3.9234e-04],
        [3.6112e-04],
        [2.1285e-04],
        [1.8441e-04],
        [4.6883e-04],
        [3.5507e-04],
        [6.1022e-05],
        [3.2488e-04],
        [2.9041e-04],
        [2.1707e-04],
        [1.6296e-04],
        [1.6365e-04]], device='cuda:0')/tensor([[1.5666e-04, 3.0337e-04, 1.7068e-04, 4.1536e-04, 3.9234e-04, 3.6112e-04,
         2.1285e-04, 1.8441e-04, 4.6883e-04, 3.5507e-04, 6.1022e-05, 3.2488e-04,
         2.9041e-04, 2.1707e-04, 1.6296e-04, 1.6365e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.5346e-04, 9.8128e-04, 1.5666e-04],
        [1.3766e-04, 1.8054e-04, 3.0337e-04],
        [3.9741e-04, 3.5902e-03, 1.7068e-04],
        [3.5044e-04, 5.4077e-04, 4.1536e-04],
        [6.8416e-04, 7.6064e-04, 3.9234e-04],
        [5.7037e-04, 1.9730e-03, 3.6112e-04],
        [3.1564e-04, 2.3432e-05, 2.1285e-04],
        [1.1317e-03, 7.8895e-04, 1.8441e-04],
        [1.7153e-03, 4.4122e-03, 4.6883e-04],
        [8.3489e-04, 5.7639e-04, 3.5507e-04],
        [1.0322e-04, 1.0167e-04, 6.1022e-05],
        [3.4442e-04, 1.4016e-04, 3.2488e-04],
        [3.9567e-04, 6.7697e-04, 2.9041e-04],
        [2.9762e-04, 4.7165e-04, 2.1707e-04],
        [9.8845e-04, 4.8531e-03, 1.6296e-04],
        [5.4020e-04, 1.4689e-04, 1.6365e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.8877e-04],
        [5.0070e-04],
        [4.7185e-05],
        [5.9406e-04],
        [3.0613e-04],
        [5.5252e-04],
        [8.6712e-04],
        [3.6178e-05],
        [1.0232e-03],
        [3.2202e-04],
        [5.1088e-04],
        [1.8939e-04],
        [3.4670e-04],
        [9.4893e-04],
        [1.2527e-03],
        [4.4694e-04]], device='cuda:0')/tensor([[1.8877e-04, 5.0070e-04, 4.7185e-05, 5.9406e-04, 3.0613e-04, 5.5252e-04,
         8.6712e-04, 3.6178e-05, 1.0232e-03, 3.2202e-04, 5.1088e-04, 1.8939e-04,
         3.4670e-04, 9.4893e-04, 1.2527e-03, 4.4694e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3064e-04],
        [3.0551e-04],
        [9.8374e-06],
        [2.1114e-04],
        [3.0872e-05],
        [6.0317e-04],
        [1.9532e-03],
        [3.9053e-05],
        [5.3853e-04],
        [8.4865e-05],
        [1.2472e-04],
        [3.0244e-05],
        [1.3214e-04],
        [5.7309e-04],
        [7.0417e-03],
        [1.0379e-04]], device='cuda:0')/tensor([[1.3064e-04, 3.0551e-04, 9.8374e-06, 2.1114e-04, 3.0872e-05, 6.0317e-04,
         1.9532e-03, 3.9053e-05, 5.3853e-04, 8.4865e-05, 1.2472e-04, 3.0244e-05,
         1.3214e-04, 5.7309e-04, 7.0417e-03, 1.0379e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7742e-04],
        [2.9096e-04],
        [1.1742e-04],
        [1.1676e-03],
        [2.8713e-04],
        [2.6110e-04],
        [8.9185e-04],
        [5.2940e-05],
        [1.7279e-04],
        [7.4077e-04],
        [2.0267e-04],
        [2.5779e-04],
        [2.8519e-04],
        [3.0934e-04],
        [2.2543e-04],
        [1.1424e-03]], device='cuda:0')/tensor([[1.7742e-04, 2.9096e-04, 1.1742e-04, 1.1676e-03, 2.8713e-04, 2.6110e-04,
         8.9185e-04, 5.2940e-05, 1.7279e-04, 7.4077e-04, 2.0267e-04, 2.5779e-04,
         2.8519e-04, 3.0934e-04, 2.2543e-04, 1.1424e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8877e-04, 1.3064e-04, 1.7742e-04],
        [5.0070e-04, 3.0551e-04, 2.9096e-04],
        [4.7185e-05, 9.8374e-06, 1.1742e-04],
        [5.9406e-04, 2.1114e-04, 1.1676e-03],
        [3.0613e-04, 3.0872e-05, 2.8713e-04],
        [5.5252e-04, 6.0317e-04, 2.6110e-04],
        [8.6712e-04, 1.9532e-03, 8.9185e-04],
        [3.6178e-05, 3.9053e-05, 5.2940e-05],
        [1.0232e-03, 5.3853e-04, 1.7279e-04],
        [3.2202e-04, 8.4865e-05, 7.4077e-04],
        [5.1088e-04, 1.2472e-04, 2.0267e-04],
        [1.8939e-04, 3.0244e-05, 2.5779e-04],
        [3.4670e-04, 1.3214e-04, 2.8519e-04],
        [9.4893e-04, 5.7309e-04, 3.0934e-04],
        [1.2527e-03, 7.0417e-03, 2.2543e-04],
        [4.4694e-04, 1.0379e-04, 1.1424e-03]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0006],
        [0.0008],
        [0.0005],
        [0.0002],
        [0.0006],
        [0.0014],
        [0.0011],
        [0.0004],
        [0.0018],
        [0.0007],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0006, 0.0005, 0.0006, 0.0005, 0.0006, 0.0008, 0.0005, 0.0002,
         0.0006, 0.0014, 0.0011, 0.0004, 0.0018, 0.0007, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1082e-03],
        [8.6303e-04],
        [5.4053e-03],
        [9.0438e-04],
        [3.0193e-03],
        [3.2412e-04],
        [1.7452e-03],
        [9.6789e-04],
        [5.1358e-05],
        [2.3410e-05],
        [1.9259e-03],
        [1.6327e-03],
        [2.7317e-04],
        [9.5771e-04],
        [2.5353e-03],
        [7.6456e-03]], device='cuda:0')/tensor([[1.1082e-03, 8.6303e-04, 5.4053e-03, 9.0438e-04, 3.0193e-03, 3.2412e-04,
         1.7452e-03, 9.6789e-04, 5.1358e-05, 2.3410e-05, 1.9259e-03, 1.6327e-03,
         2.7317e-04, 9.5771e-04, 2.5353e-03, 7.6456e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.0663e-04],
        [3.4591e-04],
        [9.5579e-05],
        [5.6021e-04],
        [2.1668e-04],
        [8.9645e-05],
        [2.3228e-04],
        [4.1292e-04],
        [1.4339e-04],
        [3.5968e-04],
        [9.7503e-04],
        [2.4188e-04],
        [9.6565e-05],
        [2.1708e-04],
        [4.7137e-04],
        [2.6351e-04]], device='cuda:0')/tensor([[9.0663e-04, 3.4591e-04, 9.5579e-05, 5.6021e-04, 2.1668e-04, 8.9645e-05,
         2.3228e-04, 4.1292e-04, 1.4339e-04, 3.5968e-04, 9.7503e-04, 2.4188e-04,
         9.6565e-05, 2.1708e-04, 4.7137e-04, 2.6351e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4977e-04, 1.1082e-03, 9.0663e-04],
        [5.8410e-04, 8.6303e-04, 3.4591e-04],
        [4.6958e-04, 5.4053e-03, 9.5579e-05],
        [6.0862e-04, 9.0438e-04, 5.6021e-04],
        [4.9609e-04, 3.0193e-03, 2.1668e-04],
        [5.6069e-04, 3.2412e-04, 8.9645e-05],
        [8.0160e-04, 1.7452e-03, 2.3228e-04],
        [5.1290e-04, 9.6789e-04, 4.1292e-04],
        [2.4464e-04, 5.1358e-05, 1.4339e-04],
        [5.9717e-04, 2.3410e-05, 3.5968e-04],
        [1.3972e-03, 1.9259e-03, 9.7503e-04],
        [1.1292e-03, 1.6327e-03, 2.4188e-04],
        [3.9380e-04, 2.7317e-04, 9.6565e-05],
        [1.8084e-03, 9.5771e-04, 2.1708e-04],
        [7.2535e-04, 2.5353e-03, 4.7137e-04],
        [4.4893e-04, 7.6456e-03, 2.6351e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.1695e-04],
        [2.0460e-04],
        [1.4068e-03],
        [9.6667e-05],
        [9.7867e-04],
        [6.1256e-04],
        [8.4018e-04],
        [1.0710e-03],
        [2.1027e-04],
        [9.6053e-04],
        [2.2059e-04],
        [1.6545e-03],
        [4.8459e-04],
        [8.3127e-04],
        [1.9730e-04],
        [5.7877e-04]], device='cuda:0')/tensor([[8.1695e-04, 2.0460e-04, 1.4068e-03, 9.6667e-05, 9.7867e-04, 6.1256e-04,
         8.4018e-04, 1.0710e-03, 2.1027e-04, 9.6053e-04, 2.2059e-04, 1.6545e-03,
         4.8459e-04, 8.3127e-04, 1.9730e-04, 5.7877e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.6132e-04],
        [2.8205e-04],
        [1.8994e-03],
        [4.3015e-05],
        [3.1271e-04],
        [1.5979e-03],
        [7.4328e-04],
        [9.6830e-04],
        [8.7943e-04],
        [9.1563e-04],
        [2.5242e-04],
        [3.0177e-03],
        [9.7149e-04],
        [5.2269e-04],
        [5.5722e-05],
        [8.6295e-04]], device='cuda:0')/tensor([[7.6132e-04, 2.8205e-04, 1.8994e-03, 4.3015e-05, 3.1271e-04, 1.5979e-03,
         7.4328e-04, 9.6830e-04, 8.7943e-04, 9.1563e-04, 2.5242e-04, 3.0177e-03,
         9.7149e-04, 5.2269e-04, 5.5722e-05, 8.6295e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.9466e-04],
        [2.6771e-04],
        [3.9542e-04],
        [1.9596e-04],
        [1.5772e-04],
        [4.1573e-04],
        [3.9123e-05],
        [2.1071e-04],
        [2.7152e-04],
        [2.4579e-04],
        [2.6452e-04],
        [5.4111e-04],
        [9.4914e-05],
        [3.7634e-04],
        [7.6572e-04],
        [3.1912e-04]], device='cuda:0')/tensor([[2.9466e-04, 2.6771e-04, 3.9542e-04, 1.9596e-04, 1.5772e-04, 4.1573e-04,
         3.9123e-05, 2.1071e-04, 2.7152e-04, 2.4579e-04, 2.6452e-04, 5.4111e-04,
         9.4914e-05, 3.7634e-04, 7.6572e-04, 3.1912e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[8.1695e-04, 7.6132e-04, 2.9466e-04],
        [2.0460e-04, 2.8205e-04, 2.6771e-04],
        [1.4068e-03, 1.8994e-03, 3.9542e-04],
        [9.6667e-05, 4.3015e-05, 1.9596e-04],
        [9.7867e-04, 3.1271e-04, 1.5772e-04],
        [6.1256e-04, 1.5979e-03, 4.1573e-04],
        [8.4018e-04, 7.4328e-04, 3.9123e-05],
        [1.0710e-03, 9.6830e-04, 2.1071e-04],
        [2.1027e-04, 8.7943e-04, 2.7152e-04],
        [9.6053e-04, 9.1563e-04, 2.4579e-04],
        [2.2059e-04, 2.5242e-04, 2.6452e-04],
        [1.6545e-03, 3.0177e-03, 5.4111e-04],
        [4.8459e-04, 9.7149e-04, 9.4914e-05],
        [8.3127e-04, 5.2269e-04, 3.7634e-04],
        [1.9730e-04, 5.5722e-05, 7.6572e-04],
        [5.7877e-04, 8.6295e-04, 3.1912e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0003],
        [0.0010],
        [0.0006],
        [0.0018]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0006, 0.0018]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0002],
        [0.0016],
        [0.0007],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0016, 0.0007, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.4558e-04],
        [6.7022e-05],
        [5.3930e-04],
        [6.2095e-05]], device='cuda:0')/tensor([[1.4558e-04, 6.7022e-05, 5.3930e-04, 6.2095e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.6976e-04, 1.7303e-04, 1.4558e-04],
        [9.7659e-04, 1.6108e-03, 6.7022e-05],
        [6.0263e-04, 6.5609e-04, 5.3930e-04],
        [1.7533e-03, 7.3784e-04, 6.2095e-05]], device='cuda:0')
acc:  0.38636363636363635
Time taken to execute the de NLI task with prompt type passive, variation 1 and batchsize 16: 0:01:01.983864
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI passive 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 369.05it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0003],
        [0.0010],
        [0.0002],
        [0.0011],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0004],
        [0.0004],
        [0.0012],
        [0.0006],
        [0.0006],
        [0.0003],
        [0.0001],
        [0.0010]], device='cuda:0')/tensor([[0.0016, 0.0003, 0.0010, 0.0002, 0.0011, 0.0005, 0.0006, 0.0004, 0.0004,
         0.0004, 0.0012, 0.0006, 0.0006, 0.0003, 0.0001, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0877e-03],
        [2.4839e-05],
        [7.7042e-04],
        [8.7285e-04],
        [2.9597e-03],
        [7.6592e-04],
        [9.7853e-04],
        [1.0762e-03],
        [1.2321e-04],
        [9.9845e-04],
        [3.8599e-04],
        [1.1727e-04],
        [1.4061e-03],
        [1.0976e-04],
        [1.3201e-05],
        [8.2493e-04]], device='cuda:0')/tensor([[1.0877e-03, 2.4839e-05, 7.7042e-04, 8.7285e-04, 2.9597e-03, 7.6592e-04,
         9.7853e-04, 1.0762e-03, 1.2321e-04, 9.9845e-04, 3.8599e-04, 1.1727e-04,
         1.4061e-03, 1.0976e-04, 1.3201e-05, 8.2493e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2496e-04],
        [2.5558e-04],
        [1.2023e-04],
        [2.1655e-04],
        [1.9365e-04],
        [1.3938e-04],
        [2.5228e-04],
        [1.3420e-04],
        [4.8315e-04],
        [1.0949e-04],
        [7.2358e-05],
        [1.5130e-04],
        [4.5078e-04],
        [4.3457e-04],
        [1.1099e-04],
        [3.3910e-05]], device='cuda:0')/tensor([[2.2496e-04, 2.5558e-04, 1.2023e-04, 2.1655e-04, 1.9365e-04, 1.3938e-04,
         2.5228e-04, 1.3420e-04, 4.8315e-04, 1.0949e-04, 7.2358e-05, 1.5130e-04,
         4.5078e-04, 4.3457e-04, 1.1099e-04, 3.3910e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6254e-03, 1.0877e-03, 2.2496e-04],
        [2.8073e-04, 2.4839e-05, 2.5558e-04],
        [9.9201e-04, 7.7042e-04, 1.2023e-04],
        [1.9536e-04, 8.7285e-04, 2.1655e-04],
        [1.1064e-03, 2.9597e-03, 1.9365e-04],
        [4.5687e-04, 7.6592e-04, 1.3938e-04],
        [6.2480e-04, 9.7853e-04, 2.5228e-04],
        [4.4401e-04, 1.0762e-03, 1.3420e-04],
        [3.5707e-04, 1.2321e-04, 4.8315e-04],
        [4.3220e-04, 9.9845e-04, 1.0949e-04],
        [1.1877e-03, 3.8599e-04, 7.2358e-05],
        [6.1077e-04, 1.1727e-04, 1.5130e-04],
        [6.3401e-04, 1.4061e-03, 4.5078e-04],
        [2.7926e-04, 1.0976e-04, 4.3457e-04],
        [1.4155e-04, 1.3201e-05, 1.1099e-04],
        [9.6902e-04, 8.2493e-04, 3.3910e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.7682e-04],
        [6.2721e-04],
        [4.0279e-04],
        [5.2274e-04],
        [4.6427e-04],
        [2.5433e-04],
        [3.8434e-05],
        [5.9211e-04],
        [6.1325e-04],
        [8.1442e-04],
        [3.9814e-04],
        [4.9248e-04],
        [5.3599e-04],
        [7.6048e-04],
        [8.3316e-04],
        [1.0475e-03]], device='cuda:0')/tensor([[5.7682e-04, 6.2721e-04, 4.0279e-04, 5.2274e-04, 4.6427e-04, 2.5433e-04,
         3.8434e-05, 5.9211e-04, 6.1325e-04, 8.1442e-04, 3.9814e-04, 4.9248e-04,
         5.3599e-04, 7.6048e-04, 8.3316e-04, 1.0475e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.5691e-04],
        [6.4188e-04],
        [1.3348e-03],
        [5.4667e-05],
        [7.2369e-04],
        [3.8684e-04],
        [3.5374e-06],
        [7.8747e-04],
        [2.6352e-04],
        [1.1598e-03],
        [5.5458e-04],
        [5.7136e-04],
        [8.7525e-04],
        [8.6720e-04],
        [1.9174e-03],
        [2.5649e-03]], device='cuda:0')/tensor([[5.5691e-04, 6.4188e-04, 1.3348e-03, 5.4667e-05, 7.2369e-04, 3.8684e-04,
         3.5374e-06, 7.8747e-04, 2.6352e-04, 1.1598e-03, 5.5458e-04, 5.7136e-04,
         8.7525e-04, 8.6720e-04, 1.9174e-03, 2.5649e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.5888e-05],
        [1.3293e-04],
        [3.7291e-04],
        [5.5891e-04],
        [2.2609e-04],
        [3.0258e-05],
        [5.0303e-05],
        [1.9240e-04],
        [8.1426e-04],
        [8.8540e-05],
        [2.2695e-04],
        [2.2807e-04],
        [2.1575e-04],
        [7.9564e-04],
        [2.5182e-04],
        [1.9797e-04]], device='cuda:0')/tensor([[6.5888e-05, 1.3293e-04, 3.7291e-04, 5.5891e-04, 2.2609e-04, 3.0258e-05,
         5.0303e-05, 1.9240e-04, 8.1426e-04, 8.8540e-05, 2.2695e-04, 2.2807e-04,
         2.1575e-04, 7.9564e-04, 2.5182e-04, 1.9797e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.7682e-04, 5.5691e-04, 6.5888e-05],
        [6.2721e-04, 6.4188e-04, 1.3293e-04],
        [4.0279e-04, 1.3348e-03, 3.7291e-04],
        [5.2274e-04, 5.4667e-05, 5.5891e-04],
        [4.6427e-04, 7.2369e-04, 2.2609e-04],
        [2.5433e-04, 3.8684e-04, 3.0258e-05],
        [3.8434e-05, 3.5374e-06, 5.0303e-05],
        [5.9211e-04, 7.8747e-04, 1.9240e-04],
        [6.1325e-04, 2.6352e-04, 8.1426e-04],
        [8.1442e-04, 1.1598e-03, 8.8540e-05],
        [3.9814e-04, 5.5458e-04, 2.2695e-04],
        [4.9248e-04, 5.7136e-04, 2.2807e-04],
        [5.3599e-04, 8.7525e-04, 2.1575e-04],
        [7.6048e-04, 8.6720e-04, 7.9564e-04],
        [8.3316e-04, 1.9174e-03, 2.5182e-04],
        [1.0475e-03, 2.5649e-03, 1.9797e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0005],
        [0.0003],
        [0.0002],
        [0.0012],
        [0.0006],
        [0.0006],
        [0.0028],
        [0.0014],
        [0.0003],
        [0.0014]], device='cuda:0')/tensor([[0.0005, 0.0007, 0.0005, 0.0005, 0.0005, 0.0012, 0.0005, 0.0003, 0.0002,
         0.0012, 0.0006, 0.0006, 0.0028, 0.0014, 0.0003, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5189e-04],
        [3.4202e-03],
        [1.4342e-03],
        [2.1602e-03],
        [8.1347e-04],
        [1.4292e-03],
        [2.2940e-03],
        [7.9757e-05],
        [3.1289e-03],
        [1.3442e-03],
        [3.4183e-03],
        [1.0869e-03],
        [2.5046e-03],
        [1.5182e-03],
        [2.6027e-03],
        [1.4877e-03]], device='cuda:0')/tensor([[8.5189e-04, 3.4202e-03, 1.4342e-03, 2.1602e-03, 8.1347e-04, 1.4292e-03,
         2.2940e-03, 7.9757e-05, 3.1289e-03, 1.3442e-03, 3.4183e-03, 1.0869e-03,
         2.5046e-03, 1.5182e-03, 2.6027e-03, 1.4877e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.0016e-05],
        [2.9713e-04],
        [2.8095e-04],
        [1.5065e-04],
        [6.6034e-05],
        [1.9859e-04],
        [2.3071e-04],
        [5.3636e-04],
        [3.7421e-04],
        [2.6493e-04],
        [2.7064e-04],
        [1.9721e-04],
        [2.9602e-04],
        [3.2585e-04],
        [6.7961e-05],
        [4.5699e-04]], device='cuda:0')/tensor([[4.0016e-05, 2.9713e-04, 2.8095e-04, 1.5065e-04, 6.6034e-05, 1.9859e-04,
         2.3071e-04, 5.3636e-04, 3.7421e-04, 2.6493e-04, 2.7064e-04, 1.9721e-04,
         2.9602e-04, 3.2585e-04, 6.7961e-05, 4.5699e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7386e-04, 8.5189e-04, 4.0016e-05],
        [6.9160e-04, 3.4202e-03, 2.9713e-04],
        [5.4738e-04, 1.4342e-03, 2.8095e-04],
        [4.7552e-04, 2.1602e-03, 1.5065e-04],
        [5.0239e-04, 8.1347e-04, 6.6034e-05],
        [1.2498e-03, 1.4292e-03, 1.9859e-04],
        [5.1236e-04, 2.2940e-03, 2.3071e-04],
        [3.2610e-04, 7.9757e-05, 5.3636e-04],
        [1.5980e-04, 3.1289e-03, 3.7421e-04],
        [1.2163e-03, 1.3442e-03, 2.6493e-04],
        [5.7596e-04, 3.4183e-03, 2.7064e-04],
        [6.0484e-04, 1.0869e-03, 1.9721e-04],
        [2.8107e-03, 2.5046e-03, 2.9602e-04],
        [1.4175e-03, 1.5182e-03, 3.2585e-04],
        [3.3797e-04, 2.6027e-03, 6.7961e-05],
        [1.3741e-03, 1.4877e-03, 4.5699e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0006],
        [0.0006],
        [0.0008],
        [0.0007],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0015],
        [0.0008],
        [0.0015],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0006, 0.0006, 0.0008, 0.0007, 0.0002, 0.0002, 0.0005,
         0.0007, 0.0008, 0.0015, 0.0008, 0.0015, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.0641e-04],
        [1.1055e-04],
        [2.2738e-04],
        [9.2708e-04],
        [7.9737e-04],
        [3.5527e-03],
        [3.2134e-05],
        [1.0571e-04],
        [7.2899e-04],
        [5.8237e-04],
        [2.0981e-03],
        [2.0603e-03],
        [1.0486e-03],
        [1.0666e-03],
        [7.7387e-04],
        [2.6072e-04]], device='cuda:0')/tensor([[9.0641e-04, 1.1055e-04, 2.2738e-04, 9.2708e-04, 7.9737e-04, 3.5527e-03,
         3.2134e-05, 1.0571e-04, 7.2899e-04, 5.8237e-04, 2.0981e-03, 2.0603e-03,
         1.0486e-03, 1.0666e-03, 7.7387e-04, 2.6072e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4559e-04],
        [1.9444e-04],
        [2.1884e-04],
        [3.9011e-04],
        [2.3152e-04],
        [1.3238e-04],
        [9.2932e-05],
        [1.7049e-04],
        [3.9619e-04],
        [2.9450e-04],
        [2.5017e-04],
        [2.9093e-04],
        [5.9165e-04],
        [1.0754e-04],
        [1.7536e-04],
        [8.2718e-05]], device='cuda:0')/tensor([[1.4559e-04, 1.9444e-04, 2.1884e-04, 3.9011e-04, 2.3152e-04, 1.3238e-04,
         9.2932e-05, 1.7049e-04, 3.9619e-04, 2.9450e-04, 2.5017e-04, 2.9093e-04,
         5.9165e-04, 1.0754e-04, 1.7536e-04, 8.2718e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7470e-04, 9.0641e-04, 1.4559e-04],
        [4.1461e-04, 1.1055e-04, 1.9444e-04],
        [5.8219e-04, 2.2738e-04, 2.1884e-04],
        [5.7612e-04, 9.2708e-04, 3.9011e-04],
        [8.4489e-04, 7.9737e-04, 2.3152e-04],
        [7.4765e-04, 3.5527e-03, 1.3238e-04],
        [2.2625e-04, 3.2134e-05, 9.2932e-05],
        [2.4091e-04, 1.0571e-04, 1.7049e-04],
        [4.6040e-04, 7.2899e-04, 3.9619e-04],
        [6.9215e-04, 5.8237e-04, 2.9450e-04],
        [7.9782e-04, 2.0981e-03, 2.5017e-04],
        [1.5288e-03, 2.0603e-03, 2.9093e-04],
        [8.3479e-04, 1.0486e-03, 5.9165e-04],
        [1.4905e-03, 1.0666e-03, 1.0754e-04],
        [4.9527e-04, 7.7387e-04, 1.7536e-04],
        [2.1874e-04, 2.6072e-04, 8.2718e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0008],
        [0.0015],
        [0.0007],
        [0.0009],
        [0.0017],
        [0.0002],
        [0.0020],
        [0.0003],
        [0.0004],
        [0.0010],
        [0.0003],
        [0.0003],
        [0.0010],
        [0.0004],
        [0.0011]], device='cuda:0')/tensor([[0.0012, 0.0008, 0.0015, 0.0007, 0.0009, 0.0017, 0.0002, 0.0020, 0.0003,
         0.0004, 0.0010, 0.0003, 0.0003, 0.0010, 0.0004, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0016],
        [0.0008],
        [0.0010],
        [0.0012],
        [0.0021],
        [0.0001],
        [0.0016],
        [0.0014],
        [0.0009],
        [0.0012],
        [0.0005],
        [0.0023],
        [0.0022],
        [0.0005],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0016, 0.0008, 0.0010, 0.0012, 0.0021, 0.0001, 0.0016, 0.0014,
         0.0009, 0.0012, 0.0005, 0.0023, 0.0022, 0.0005, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.9742e-04],
        [3.8770e-04],
        [2.7573e-04],
        [3.7343e-04],
        [2.8587e-04],
        [3.7772e-04],
        [2.1615e-04],
        [2.7253e-04],
        [1.1631e-04],
        [4.9337e-04],
        [7.9349e-05],
        [1.7823e-04],
        [1.3596e-04],
        [6.2313e-04],
        [1.9303e-04],
        [3.3542e-04]], device='cuda:0')/tensor([[4.9742e-04, 3.8770e-04, 2.7573e-04, 3.7343e-04, 2.8587e-04, 3.7772e-04,
         2.1615e-04, 2.7253e-04, 1.1631e-04, 4.9337e-04, 7.9349e-05, 1.7823e-04,
         1.3596e-04, 6.2313e-04, 1.9303e-04, 3.3542e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2303e-03, 5.7663e-04, 4.9742e-04],
        [8.4277e-04, 1.6073e-03, 3.8770e-04],
        [1.4698e-03, 8.1585e-04, 2.7573e-04],
        [6.5400e-04, 1.0151e-03, 3.7343e-04],
        [9.4629e-04, 1.2061e-03, 2.8587e-04],
        [1.7179e-03, 2.0632e-03, 3.7772e-04],
        [2.2081e-04, 1.2117e-04, 2.1615e-04],
        [1.9992e-03, 1.5718e-03, 2.7253e-04],
        [3.3052e-04, 1.4046e-03, 1.1631e-04],
        [4.0538e-04, 9.0008e-04, 4.9337e-04],
        [1.0098e-03, 1.1833e-03, 7.9349e-05],
        [2.7927e-04, 4.7215e-04, 1.7823e-04],
        [2.5151e-04, 2.2873e-03, 1.3596e-04],
        [1.0147e-03, 2.2264e-03, 6.2313e-04],
        [3.7710e-04, 4.5774e-04, 1.9303e-04],
        [1.1151e-03, 4.2372e-04, 3.3542e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0006],
        [0.0012],
        [0.0008],
        [0.0006],
        [0.0008],
        [0.0010],
        [0.0011],
        [0.0008],
        [0.0006],
        [0.0011],
        [0.0004],
        [0.0010],
        [0.0023],
        [0.0008],
        [0.0006]], device='cuda:0')/tensor([[0.0018, 0.0006, 0.0012, 0.0008, 0.0006, 0.0008, 0.0010, 0.0011, 0.0008,
         0.0006, 0.0011, 0.0004, 0.0010, 0.0023, 0.0008, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0095],
        [0.0010],
        [0.0026],
        [0.0007],
        [0.0009],
        [0.0023],
        [0.0036],
        [0.0017],
        [0.0007],
        [0.0017],
        [0.0050],
        [0.0019],
        [0.0067],
        [0.0036],
        [0.0012],
        [0.0043]], device='cuda:0')/tensor([[0.0095, 0.0010, 0.0026, 0.0007, 0.0009, 0.0023, 0.0036, 0.0017, 0.0007,
         0.0017, 0.0050, 0.0019, 0.0067, 0.0036, 0.0012, 0.0043]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2434e-04],
        [5.8543e-04],
        [5.1570e-04],
        [2.7320e-04],
        [6.9956e-05],
        [3.4115e-04],
        [2.5663e-04],
        [4.2310e-04],
        [1.4435e-04],
        [1.5525e-04],
        [2.8202e-04],
        [1.1750e-04],
        [5.4821e-04],
        [1.0862e-04],
        [3.5954e-04],
        [2.7941e-04]], device='cuda:0')/tensor([[2.2434e-04, 5.8543e-04, 5.1570e-04, 2.7320e-04, 6.9956e-05, 3.4115e-04,
         2.5663e-04, 4.2310e-04, 1.4435e-04, 1.5525e-04, 2.8202e-04, 1.1750e-04,
         5.4821e-04, 1.0862e-04, 3.5954e-04, 2.7941e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7814e-03, 9.5233e-03, 2.2434e-04],
        [5.9250e-04, 1.0073e-03, 5.8543e-04],
        [1.1685e-03, 2.5879e-03, 5.1570e-04],
        [8.2144e-04, 7.1550e-04, 2.7320e-04],
        [5.8086e-04, 9.2012e-04, 6.9956e-05],
        [7.7270e-04, 2.2664e-03, 3.4115e-04],
        [9.8997e-04, 3.6159e-03, 2.5663e-04],
        [1.0533e-03, 1.6565e-03, 4.2310e-04],
        [8.3835e-04, 6.9170e-04, 1.4435e-04],
        [5.5072e-04, 1.7340e-03, 1.5525e-04],
        [1.0707e-03, 5.0341e-03, 2.8202e-04],
        [4.3474e-04, 1.8667e-03, 1.1750e-04],
        [1.0266e-03, 6.6843e-03, 5.4821e-04],
        [2.3495e-03, 3.5593e-03, 1.0862e-04],
        [8.2674e-04, 1.1825e-03, 3.5954e-04],
        [6.0224e-04, 4.3141e-03, 2.7941e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.4163e-03],
        [3.2697e-04],
        [2.0994e-04],
        [1.1397e-03],
        [1.0509e-03],
        [9.2155e-04],
        [8.2314e-05],
        [4.2593e-04],
        [1.7878e-04],
        [6.1528e-04],
        [3.5003e-04],
        [1.4629e-03],
        [5.7546e-04],
        [3.2547e-04],
        [1.6214e-03],
        [1.0937e-03]], device='cuda:0')/tensor([[1.4163e-03, 3.2697e-04, 2.0994e-04, 1.1397e-03, 1.0509e-03, 9.2155e-04,
         8.2314e-05, 4.2593e-04, 1.7878e-04, 6.1528e-04, 3.5003e-04, 1.4629e-03,
         5.7546e-04, 3.2547e-04, 1.6214e-03, 1.0937e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.4870e-03],
        [2.5934e-04],
        [1.3646e-04],
        [3.0035e-03],
        [2.4557e-03],
        [1.2807e-03],
        [6.8360e-06],
        [1.4690e-03],
        [7.0243e-05],
        [2.1690e-03],
        [8.5138e-04],
        [2.1588e-03],
        [3.2567e-03],
        [3.3534e-04],
        [1.5385e-03],
        [1.2316e-03]], device='cuda:0')/tensor([[3.4870e-03, 2.5934e-04, 1.3646e-04, 3.0035e-03, 2.4557e-03, 1.2807e-03,
         6.8360e-06, 1.4690e-03, 7.0243e-05, 2.1690e-03, 8.5138e-04, 2.1588e-03,
         3.2567e-03, 3.3534e-04, 1.5385e-03, 1.2316e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.3677e-04],
        [1.4929e-04],
        [1.0355e-04],
        [6.5725e-04],
        [1.6213e-04],
        [1.6462e-04],
        [3.8079e-05],
        [4.4343e-04],
        [1.2624e-04],
        [3.4917e-04],
        [1.0725e-04],
        [3.1702e-04],
        [5.6599e-04],
        [9.0810e-05],
        [2.5676e-04],
        [9.7356e-05]], device='cuda:0')/tensor([[5.3677e-04, 1.4929e-04, 1.0355e-04, 6.5725e-04, 1.6213e-04, 1.6462e-04,
         3.8079e-05, 4.4343e-04, 1.2624e-04, 3.4917e-04, 1.0725e-04, 3.1702e-04,
         5.6599e-04, 9.0810e-05, 2.5676e-04, 9.7356e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4163e-03, 3.4870e-03, 5.3677e-04],
        [3.2697e-04, 2.5934e-04, 1.4929e-04],
        [2.0994e-04, 1.3646e-04, 1.0355e-04],
        [1.1397e-03, 3.0035e-03, 6.5725e-04],
        [1.0509e-03, 2.4557e-03, 1.6213e-04],
        [9.2155e-04, 1.2807e-03, 1.6462e-04],
        [8.2314e-05, 6.8360e-06, 3.8079e-05],
        [4.2593e-04, 1.4690e-03, 4.4343e-04],
        [1.7878e-04, 7.0243e-05, 1.2624e-04],
        [6.1528e-04, 2.1690e-03, 3.4917e-04],
        [3.5003e-04, 8.5138e-04, 1.0725e-04],
        [1.4629e-03, 2.1588e-03, 3.1702e-04],
        [5.7546e-04, 3.2567e-03, 5.6599e-04],
        [3.2547e-04, 3.3534e-04, 9.0810e-05],
        [1.6214e-03, 1.5385e-03, 2.5676e-04],
        [1.0937e-03, 1.2316e-03, 9.7356e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0008],
        [0.0005],
        [0.0003],
        [0.0028],
        [0.0009],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0010],
        [0.0006],
        [0.0007],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0009, 0.0008, 0.0005, 0.0003, 0.0028, 0.0009, 0.0006, 0.0005, 0.0005,
         0.0005, 0.0012, 0.0010, 0.0006, 0.0007, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6062e-03],
        [1.2449e-04],
        [8.9513e-03],
        [1.4507e-04],
        [1.8597e-03],
        [1.7942e-03],
        [1.4243e-03],
        [1.5801e-03],
        [1.5538e-03],
        [1.2016e-03],
        [3.9584e-03],
        [2.0197e-05],
        [2.8380e-04],
        [1.5618e-03],
        [2.2824e-03],
        [9.9876e-04]], device='cuda:0')/tensor([[1.6062e-03, 1.2449e-04, 8.9513e-03, 1.4507e-04, 1.8597e-03, 1.7942e-03,
         1.4243e-03, 1.5801e-03, 1.5538e-03, 1.2016e-03, 3.9584e-03, 2.0197e-05,
         2.8380e-04, 1.5618e-03, 2.2824e-03, 9.9876e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4085e-04],
        [2.9592e-04],
        [2.2887e-04],
        [3.0340e-04],
        [3.2010e-04],
        [1.2019e-04],
        [5.5344e-04],
        [3.6960e-05],
        [1.3270e-04],
        [2.9565e-04],
        [3.7325e-04],
        [3.0701e-04],
        [3.3314e-04],
        [8.9675e-05],
        [2.6907e-04],
        [1.2828e-04]], device='cuda:0')/tensor([[1.4085e-04, 2.9592e-04, 2.2887e-04, 3.0340e-04, 3.2010e-04, 1.2019e-04,
         5.5344e-04, 3.6960e-05, 1.3270e-04, 2.9565e-04, 3.7325e-04, 3.0701e-04,
         3.3314e-04, 8.9675e-05, 2.6907e-04, 1.2828e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.2282e-04, 1.6062e-03, 1.4085e-04],
        [8.0299e-04, 1.2449e-04, 2.9592e-04],
        [4.5487e-04, 8.9513e-03, 2.2887e-04],
        [2.9143e-04, 1.4507e-04, 3.0340e-04],
        [2.7629e-03, 1.8597e-03, 3.2010e-04],
        [8.5671e-04, 1.7942e-03, 1.2019e-04],
        [6.2141e-04, 1.4243e-03, 5.5344e-04],
        [5.2522e-04, 1.5801e-03, 3.6960e-05],
        [4.8707e-04, 1.5538e-03, 1.3270e-04],
        [5.1753e-04, 1.2016e-03, 2.9565e-04],
        [1.1855e-03, 3.9584e-03, 3.7325e-04],
        [9.7630e-04, 2.0197e-05, 3.0701e-04],
        [5.9215e-04, 2.8380e-04, 3.3314e-04],
        [7.4321e-04, 1.5618e-03, 8.9675e-05],
        [7.1236e-04, 2.2824e-03, 2.6907e-04],
        [5.5230e-04, 9.9876e-04, 1.2828e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0008],
        [0.0004],
        [0.0009],
        [0.0009]], device='cuda:0')/tensor([[0.0008, 0.0004, 0.0009, 0.0009]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0023],
        [0.0042],
        [0.0048],
        [0.0021]], device='cuda:0')/tensor([[0.0023, 0.0042, 0.0048, 0.0021]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.9890e-04],
        [5.4733e-05],
        [5.4414e-04],
        [6.2040e-04]], device='cuda:0')/tensor([[2.9890e-04, 5.4733e-05, 5.4414e-04, 6.2040e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[7.6380e-04, 2.3427e-03, 2.9890e-04],
        [4.0715e-04, 4.1816e-03, 5.4733e-05],
        [9.0153e-04, 4.8493e-03, 5.4414e-04],
        [8.5793e-04, 2.1185e-03, 6.2040e-04]], device='cuda:0')
acc:  0.4090909090909091
Time taken to execute the de NLI task with prompt type passive, variation 2 and batchsize 16: 0:01:03.292830
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI passive 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 359.53it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0009],
        [0.0002],
        [0.0009],
        [0.0001],
        [0.0004],
        [0.0007],
        [0.0007],
        [0.0026],
        [0.0001],
        [0.0015],
        [0.0001],
        [0.0008],
        [0.0007],
        [0.0010],
        [0.0004]], device='cuda:0')/tensor([[0.0015, 0.0009, 0.0002, 0.0009, 0.0001, 0.0004, 0.0007, 0.0007, 0.0026,
         0.0001, 0.0015, 0.0001, 0.0008, 0.0007, 0.0010, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6951e-03],
        [5.6347e-04],
        [4.8520e-04],
        [1.7877e-03],
        [1.1415e-03],
        [7.5265e-05],
        [2.0365e-03],
        [9.8562e-04],
        [9.4562e-04],
        [2.2830e-04],
        [1.3272e-03],
        [1.1871e-04],
        [2.6860e-03],
        [1.4828e-03],
        [3.5998e-03],
        [1.7267e-03]], device='cuda:0')/tensor([[1.6951e-03, 5.6347e-04, 4.8520e-04, 1.7877e-03, 1.1415e-03, 7.5265e-05,
         2.0365e-03, 9.8562e-04, 9.4562e-04, 2.2830e-04, 1.3272e-03, 1.1871e-04,
         2.6860e-03, 1.4828e-03, 3.5998e-03, 1.7267e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9222e-03],
        [1.2313e-04],
        [1.2616e-04],
        [7.6303e-04],
        [5.2595e-05],
        [9.1506e-05],
        [1.3969e-04],
        [1.0575e-04],
        [2.3675e-03],
        [4.3203e-05],
        [3.8080e-05],
        [6.9922e-05],
        [1.7125e-04],
        [1.3755e-04],
        [1.8415e-04],
        [3.2908e-04]], device='cuda:0')/tensor([[1.9222e-03, 1.2313e-04, 1.2616e-04, 7.6303e-04, 5.2595e-05, 9.1506e-05,
         1.3969e-04, 1.0575e-04, 2.3675e-03, 4.3203e-05, 3.8080e-05, 6.9922e-05,
         1.7125e-04, 1.3755e-04, 1.8415e-04, 3.2908e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5077e-03, 1.6951e-03, 1.9222e-03],
        [8.9020e-04, 5.6347e-04, 1.2313e-04],
        [1.6964e-04, 4.8520e-04, 1.2616e-04],
        [9.2803e-04, 1.7877e-03, 7.6303e-04],
        [1.0542e-04, 1.1415e-03, 5.2595e-05],
        [4.1895e-04, 7.5265e-05, 9.1506e-05],
        [7.0835e-04, 2.0365e-03, 1.3969e-04],
        [6.7016e-04, 9.8562e-04, 1.0575e-04],
        [2.6271e-03, 9.4562e-04, 2.3675e-03],
        [1.3580e-04, 2.2830e-04, 4.3203e-05],
        [1.4954e-03, 1.3272e-03, 3.8080e-05],
        [1.4424e-04, 1.1871e-04, 6.9922e-05],
        [8.1237e-04, 2.6860e-03, 1.7125e-04],
        [7.1020e-04, 1.4828e-03, 1.3755e-04],
        [1.0032e-03, 3.5998e-03, 1.8415e-04],
        [4.3932e-04, 1.7267e-03, 3.2908e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.8688e-04],
        [8.5399e-04],
        [2.1353e-03],
        [2.4704e-04],
        [8.0365e-05],
        [4.7198e-04],
        [2.3666e-03],
        [1.2672e-03],
        [2.1429e-04],
        [7.7796e-04],
        [3.7602e-04],
        [7.3083e-04],
        [1.3700e-04],
        [1.5610e-04],
        [6.7990e-04],
        [7.4030e-05]], device='cuda:0')/tensor([[8.8688e-04, 8.5399e-04, 2.1353e-03, 2.4704e-04, 8.0365e-05, 4.7198e-04,
         2.3666e-03, 1.2672e-03, 2.1429e-04, 7.7796e-04, 3.7602e-04, 7.3083e-04,
         1.3700e-04, 1.5610e-04, 6.7990e-04, 7.4030e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6495e-03],
        [8.7867e-04],
        [2.7942e-02],
        [1.0064e-03],
        [9.2641e-05],
        [1.1254e-03],
        [1.6056e-03],
        [2.0999e-02],
        [2.6507e-03],
        [1.6564e-03],
        [1.1293e-04],
        [1.6971e-03],
        [9.9002e-05],
        [1.6786e-03],
        [4.3976e-03],
        [7.3988e-05]], device='cuda:0')/tensor([[1.6495e-03, 8.7867e-04, 2.7942e-02, 1.0064e-03, 9.2641e-05, 1.1254e-03,
         1.6056e-03, 2.0999e-02, 2.6507e-03, 1.6564e-03, 1.1293e-04, 1.6971e-03,
         9.9002e-05, 1.6786e-03, 4.3976e-03, 7.3988e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.7460e-04],
        [6.3850e-04],
        [1.0342e-04],
        [2.9081e-04],
        [7.0575e-05],
        [4.9584e-04],
        [9.9656e-04],
        [4.4722e-03],
        [3.4622e-05],
        [6.5990e-04],
        [2.2224e-05],
        [2.7224e-04],
        [6.7982e-05],
        [4.3331e-05],
        [3.6264e-04],
        [4.5695e-05]], device='cuda:0')/tensor([[7.7460e-04, 6.3850e-04, 1.0342e-04, 2.9081e-04, 7.0575e-05, 4.9584e-04,
         9.9656e-04, 4.4722e-03, 3.4622e-05, 6.5990e-04, 2.2224e-05, 2.7224e-04,
         6.7982e-05, 4.3331e-05, 3.6264e-04, 4.5695e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.8688e-04, 1.6495e-03, 7.7460e-04],
        [8.5399e-04, 8.7867e-04, 6.3850e-04],
        [2.1353e-03, 2.7942e-02, 1.0342e-04],
        [2.4704e-04, 1.0064e-03, 2.9081e-04],
        [8.0365e-05, 9.2641e-05, 7.0575e-05],
        [4.7198e-04, 1.1254e-03, 4.9584e-04],
        [2.3666e-03, 1.6056e-03, 9.9656e-04],
        [1.2672e-03, 2.0999e-02, 4.4722e-03],
        [2.1429e-04, 2.6507e-03, 3.4622e-05],
        [7.7796e-04, 1.6564e-03, 6.5990e-04],
        [3.7602e-04, 1.1293e-04, 2.2224e-05],
        [7.3083e-04, 1.6971e-03, 2.7224e-04],
        [1.3700e-04, 9.9002e-05, 6.7982e-05],
        [1.5610e-04, 1.6786e-03, 4.3331e-05],
        [6.7990e-04, 4.3976e-03, 3.6264e-04],
        [7.4030e-05, 7.3988e-05, 4.5695e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.2131e-04],
        [1.0198e-03],
        [9.5174e-04],
        [9.0572e-04],
        [5.7096e-04],
        [1.8600e-03],
        [5.2626e-04],
        [1.0715e-03],
        [1.1127e-03],
        [1.6137e-03],
        [2.5608e-03],
        [9.9991e-05],
        [3.5291e-04],
        [4.7934e-04],
        [2.8873e-04],
        [4.3009e-04]], device='cuda:0')/tensor([[3.2131e-04, 1.0198e-03, 9.5174e-04, 9.0572e-04, 5.7096e-04, 1.8600e-03,
         5.2626e-04, 1.0715e-03, 1.1127e-03, 1.6137e-03, 2.5608e-03, 9.9991e-05,
         3.5291e-04, 4.7934e-04, 2.8873e-04, 4.3009e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.5700e-04],
        [1.1770e-02],
        [4.7309e-04],
        [9.8867e-05],
        [9.0770e-04],
        [2.6533e-03],
        [1.1774e-03],
        [1.5748e-03],
        [1.3255e-03],
        [4.1683e-03],
        [4.0636e-03],
        [1.2888e-04],
        [1.2783e-03],
        [8.1113e-03],
        [1.1135e-04],
        [8.5489e-04]], device='cuda:0')/tensor([[9.5700e-04, 1.1770e-02, 4.7309e-04, 9.8867e-05, 9.0770e-04, 2.6533e-03,
         1.1774e-03, 1.5748e-03, 1.3255e-03, 4.1683e-03, 4.0636e-03, 1.2888e-04,
         1.2783e-03, 8.1113e-03, 1.1135e-04, 8.5489e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8516e-04],
        [3.0109e-05],
        [2.4664e-04],
        [7.0260e-04],
        [6.6834e-05],
        [4.0358e-04],
        [1.5420e-04],
        [3.6409e-04],
        [9.8583e-05],
        [9.9450e-04],
        [9.4300e-04],
        [5.9319e-05],
        [1.0921e-04],
        [4.5716e-04],
        [1.2535e-03],
        [4.1695e-04]], device='cuda:0')/tensor([[1.8516e-04, 3.0109e-05, 2.4664e-04, 7.0260e-04, 6.6834e-05, 4.0358e-04,
         1.5420e-04, 3.6409e-04, 9.8583e-05, 9.9450e-04, 9.4300e-04, 5.9319e-05,
         1.0921e-04, 4.5716e-04, 1.2535e-03, 4.1695e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2131e-04, 9.5700e-04, 1.8516e-04],
        [1.0198e-03, 1.1770e-02, 3.0109e-05],
        [9.5174e-04, 4.7309e-04, 2.4664e-04],
        [9.0572e-04, 9.8867e-05, 7.0260e-04],
        [5.7096e-04, 9.0770e-04, 6.6834e-05],
        [1.8600e-03, 2.6533e-03, 4.0358e-04],
        [5.2626e-04, 1.1774e-03, 1.5420e-04],
        [1.0715e-03, 1.5748e-03, 3.6409e-04],
        [1.1127e-03, 1.3255e-03, 9.8583e-05],
        [1.6137e-03, 4.1683e-03, 9.9450e-04],
        [2.5608e-03, 4.0636e-03, 9.4300e-04],
        [9.9991e-05, 1.2888e-04, 5.9319e-05],
        [3.5291e-04, 1.2783e-03, 1.0921e-04],
        [4.7934e-04, 8.1113e-03, 4.5716e-04],
        [2.8873e-04, 1.1135e-04, 1.2535e-03],
        [4.3009e-04, 8.5489e-04, 4.1695e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.5460e-03],
        [3.5019e-04],
        [1.1948e-03],
        [3.1368e-04],
        [7.2641e-05],
        [1.5364e-03],
        [5.0820e-04],
        [3.2718e-04],
        [2.5887e-04],
        [1.0383e-03],
        [5.5390e-04],
        [7.7092e-04],
        [1.6471e-04],
        [4.7008e-04],
        [5.2569e-04],
        [4.8772e-04]], device='cuda:0')/tensor([[1.5460e-03, 3.5019e-04, 1.1948e-03, 3.1368e-04, 7.2641e-05, 1.5364e-03,
         5.0820e-04, 3.2718e-04, 2.5887e-04, 1.0383e-03, 5.5390e-04, 7.7092e-04,
         1.6471e-04, 4.7008e-04, 5.2569e-04, 4.8772e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0016],
        [0.0003],
        [0.0042],
        [0.0003],
        [0.0001],
        [0.0009],
        [0.0003],
        [0.0015],
        [0.0010],
        [0.0006],
        [0.0006],
        [0.0056],
        [0.0062],
        [0.0002],
        [0.0012],
        [0.0009]], device='cuda:0')/tensor([[0.0016, 0.0003, 0.0042, 0.0003, 0.0001, 0.0009, 0.0003, 0.0015, 0.0010,
         0.0006, 0.0006, 0.0056, 0.0062, 0.0002, 0.0012, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3855e-05],
        [3.4144e-05],
        [5.9368e-04],
        [2.4851e-04],
        [5.0399e-05],
        [1.0307e-03],
        [6.6277e-05],
        [7.8596e-05],
        [7.4518e-05],
        [3.2836e-04],
        [1.5517e-04],
        [1.0041e-03],
        [2.8158e-04],
        [1.2192e-04],
        [1.4232e-04],
        [1.4695e-04]], device='cuda:0')/tensor([[3.3855e-05, 3.4144e-05, 5.9368e-04, 2.4851e-04, 5.0399e-05, 1.0307e-03,
         6.6277e-05, 7.8596e-05, 7.4518e-05, 3.2836e-04, 1.5517e-04, 1.0041e-03,
         2.8158e-04, 1.2192e-04, 1.4232e-04, 1.4695e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5460e-03, 1.6388e-03, 3.3855e-05],
        [3.5019e-04, 2.8598e-04, 3.4144e-05],
        [1.1948e-03, 4.2448e-03, 5.9368e-04],
        [3.1368e-04, 2.5321e-04, 2.4851e-04],
        [7.2641e-05, 1.3277e-04, 5.0399e-05],
        [1.5364e-03, 8.5831e-04, 1.0307e-03],
        [5.0820e-04, 3.4874e-04, 6.6277e-05],
        [3.2718e-04, 1.5279e-03, 7.8596e-05],
        [2.5887e-04, 9.5901e-04, 7.4518e-05],
        [1.0383e-03, 6.2997e-04, 3.2836e-04],
        [5.5390e-04, 6.1728e-04, 1.5517e-04],
        [7.7092e-04, 5.5907e-03, 1.0041e-03],
        [1.6471e-04, 6.2296e-03, 2.8158e-04],
        [4.7008e-04, 2.2803e-04, 1.2192e-04],
        [5.2569e-04, 1.1966e-03, 1.4232e-04],
        [4.8772e-04, 9.1261e-04, 1.4695e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5782e-04],
        [6.9799e-04],
        [1.1270e-02],
        [1.5487e-04],
        [8.0387e-05],
        [9.6072e-04],
        [1.4639e-03],
        [7.7386e-04],
        [3.9274e-04],
        [5.8452e-04],
        [1.1403e-04],
        [2.2184e-04],
        [9.7300e-04],
        [6.2711e-04],
        [1.1874e-03],
        [2.4406e-03]], device='cuda:0')/tensor([[2.5782e-04, 6.9799e-04, 1.1270e-02, 1.5487e-04, 8.0387e-05, 9.6072e-04,
         1.4639e-03, 7.7386e-04, 3.9274e-04, 5.8452e-04, 1.1403e-04, 2.2184e-04,
         9.7300e-04, 6.2711e-04, 1.1874e-03, 2.4406e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.1623e-04],
        [1.9425e-03],
        [1.3098e-02],
        [8.4295e-05],
        [6.1296e-05],
        [1.3070e-03],
        [3.0120e-03],
        [5.0902e-04],
        [1.2596e-03],
        [1.2142e-03],
        [6.2307e-04],
        [3.1754e-04],
        [2.0780e-03],
        [9.2317e-04],
        [1.6281e-03],
        [1.3230e-03]], device='cuda:0')/tensor([[8.1623e-04, 1.9425e-03, 1.3098e-02, 8.4295e-05, 6.1296e-05, 1.3070e-03,
         3.0120e-03, 5.0902e-04, 1.2596e-03, 1.2142e-03, 6.2307e-04, 3.1754e-04,
         2.0780e-03, 9.2317e-04, 1.6281e-03, 1.3230e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.5189e-05],
        [1.9624e-04],
        [9.0153e-04],
        [3.4240e-05],
        [6.6895e-05],
        [5.0179e-04],
        [4.1894e-04],
        [1.8877e-03],
        [7.8842e-05],
        [2.2137e-04],
        [2.2864e-04],
        [4.8557e-05],
        [2.7463e-04],
        [5.2326e-05],
        [4.1334e-04],
        [1.1624e-04]], device='cuda:0')/tensor([[8.5189e-05, 1.9624e-04, 9.0153e-04, 3.4240e-05, 6.6895e-05, 5.0179e-04,
         4.1894e-04, 1.8877e-03, 7.8842e-05, 2.2137e-04, 2.2864e-04, 4.8557e-05,
         2.7463e-04, 5.2326e-05, 4.1334e-04, 1.1624e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5782e-04, 8.1623e-04, 8.5189e-05],
        [6.9799e-04, 1.9425e-03, 1.9624e-04],
        [1.1270e-02, 1.3098e-02, 9.0153e-04],
        [1.5487e-04, 8.4295e-05, 3.4240e-05],
        [8.0387e-05, 6.1296e-05, 6.6895e-05],
        [9.6072e-04, 1.3070e-03, 5.0179e-04],
        [1.4639e-03, 3.0120e-03, 4.1894e-04],
        [7.7386e-04, 5.0902e-04, 1.8877e-03],
        [3.9274e-04, 1.2596e-03, 7.8842e-05],
        [5.8452e-04, 1.2142e-03, 2.2137e-04],
        [1.1403e-04, 6.2307e-04, 2.2864e-04],
        [2.2184e-04, 3.1754e-04, 4.8557e-05],
        [9.7300e-04, 2.0780e-03, 2.7463e-04],
        [6.2711e-04, 9.2317e-04, 5.2326e-05],
        [1.1874e-03, 1.6281e-03, 4.1334e-04],
        [2.4406e-03, 1.3230e-03, 1.1624e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0004],
        [0.0015],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0088],
        [0.0004],
        [0.0010],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0001],
        [0.0017]], device='cuda:0')/tensor([[0.0001, 0.0004, 0.0015, 0.0005, 0.0007, 0.0004, 0.0002, 0.0005, 0.0088,
         0.0004, 0.0010, 0.0005, 0.0007, 0.0003, 0.0001, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0028],
        [0.0018],
        [0.0027],
        [0.0006],
        [0.0008],
        [0.0005],
        [0.0007],
        [0.0005],
        [0.0002],
        [0.0016],
        [0.0005],
        [0.0005],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0015]], device='cuda:0')/tensor([[0.0028, 0.0018, 0.0027, 0.0006, 0.0008, 0.0005, 0.0007, 0.0005, 0.0002,
         0.0016, 0.0005, 0.0005, 0.0001, 0.0002, 0.0002, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.9115e-05],
        [1.1255e-04],
        [3.5697e-04],
        [1.4757e-04],
        [1.2323e-04],
        [9.0057e-05],
        [2.0409e-04],
        [8.0517e-05],
        [1.7172e-04],
        [1.0939e-03],
        [2.6841e-05],
        [2.4848e-04],
        [1.0807e-04],
        [7.5091e-04],
        [8.1364e-05],
        [1.9825e-04]], device='cuda:0')/tensor([[6.9115e-05, 1.1255e-04, 3.5697e-04, 1.4757e-04, 1.2323e-04, 9.0057e-05,
         2.0409e-04, 8.0517e-05, 1.7172e-04, 1.0939e-03, 2.6841e-05, 2.4848e-04,
         1.0807e-04, 7.5091e-04, 8.1364e-05, 1.9825e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4434e-04, 2.7968e-03, 6.9115e-05],
        [3.8780e-04, 1.7823e-03, 1.1255e-04],
        [1.5394e-03, 2.7251e-03, 3.5697e-04],
        [5.0852e-04, 6.3211e-04, 1.4757e-04],
        [6.5206e-04, 7.9006e-04, 1.2323e-04],
        [3.8871e-04, 5.3560e-04, 9.0057e-05],
        [2.2666e-04, 7.4496e-04, 2.0409e-04],
        [5.4214e-04, 4.8708e-04, 8.0517e-05],
        [8.7767e-03, 1.9102e-04, 1.7172e-04],
        [4.4978e-04, 1.5862e-03, 1.0939e-03],
        [9.6116e-04, 5.2360e-04, 2.6841e-05],
        [4.7910e-04, 5.1664e-04, 2.4848e-04],
        [6.9655e-04, 1.3509e-04, 1.0807e-04],
        [2.8035e-04, 1.5115e-04, 7.5091e-04],
        [1.2866e-04, 2.0581e-04, 8.1364e-05],
        [1.7066e-03, 1.5478e-03, 1.9825e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0003],
        [0.0005],
        [0.0003],
        [0.0006],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0006],
        [0.0007],
        [0.0004],
        [0.0011],
        [0.0023],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0012, 0.0003, 0.0005, 0.0003, 0.0006, 0.0002, 0.0004, 0.0004, 0.0005,
         0.0006, 0.0007, 0.0004, 0.0011, 0.0023, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0119],
        [0.0004],
        [0.0003],
        [0.0013],
        [0.0013],
        [0.0019],
        [0.0024],
        [0.0130],
        [0.0003],
        [0.0006],
        [0.0003],
        [0.0012],
        [0.0020],
        [0.0032],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0119, 0.0004, 0.0003, 0.0013, 0.0013, 0.0019, 0.0024, 0.0130, 0.0003,
         0.0006, 0.0003, 0.0012, 0.0020, 0.0032, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9051e-04],
        [1.3520e-05],
        [1.6772e-04],
        [5.7747e-04],
        [2.3991e-04],
        [1.5772e-04],
        [2.0167e-03],
        [6.6992e-05],
        [1.6192e-04],
        [1.8095e-05],
        [1.5707e-04],
        [5.4019e-04],
        [2.5793e-04],
        [1.1445e-04],
        [3.2335e-04],
        [3.2614e-04]], device='cuda:0')/tensor([[1.9051e-04, 1.3520e-05, 1.6772e-04, 5.7747e-04, 2.3991e-04, 1.5772e-04,
         2.0167e-03, 6.6992e-05, 1.6192e-04, 1.8095e-05, 1.5707e-04, 5.4019e-04,
         2.5793e-04, 1.1445e-04, 3.2335e-04, 3.2614e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2071e-03, 1.1893e-02, 1.9051e-04],
        [3.4318e-04, 4.1256e-04, 1.3520e-05],
        [5.3356e-04, 3.4458e-04, 1.6772e-04],
        [3.0247e-04, 1.2758e-03, 5.7747e-04],
        [5.7368e-04, 1.3146e-03, 2.3991e-04],
        [2.1943e-04, 1.9064e-03, 1.5772e-04],
        [4.2162e-04, 2.3695e-03, 2.0167e-03],
        [3.5863e-04, 1.3030e-02, 6.6992e-05],
        [4.6686e-04, 2.9276e-04, 1.6192e-04],
        [5.8254e-04, 5.7401e-04, 1.8095e-05],
        [6.8015e-04, 3.2224e-04, 1.5707e-04],
        [3.9295e-04, 1.2323e-03, 5.4019e-04],
        [1.1406e-03, 2.0058e-03, 2.5793e-04],
        [2.3313e-03, 3.2498e-03, 1.1445e-04],
        [3.2738e-04, 5.7287e-04, 3.2335e-04],
        [5.4942e-04, 4.6517e-04, 3.2614e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0006],
        [0.0005],
        [0.0001],
        [0.0003],
        [0.0006],
        [0.0004],
        [0.0009],
        [0.0004],
        [0.0006],
        [0.0004],
        [0.0008],
        [0.0012],
        [0.0002],
        [0.0020],
        [0.0012]], device='cuda:0')/tensor([[0.0003, 0.0006, 0.0005, 0.0001, 0.0003, 0.0006, 0.0004, 0.0009, 0.0004,
         0.0006, 0.0004, 0.0008, 0.0012, 0.0002, 0.0020, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0005],
        [0.0004],
        [0.0012],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0044],
        [0.0006],
        [0.0085],
        [0.0027],
        [0.0031],
        [0.0004],
        [0.0002],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0020, 0.0005, 0.0004, 0.0012, 0.0007, 0.0005, 0.0005, 0.0044, 0.0006,
         0.0085, 0.0027, 0.0031, 0.0004, 0.0002, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3637e-04],
        [1.9688e-03],
        [3.8710e-04],
        [1.7520e-04],
        [2.8393e-04],
        [3.7632e-05],
        [3.6667e-04],
        [3.6258e-04],
        [1.3245e-04],
        [1.3805e-04],
        [1.0638e-04],
        [3.9056e-04],
        [1.1229e-04],
        [5.6983e-05],
        [1.3253e-04],
        [3.4100e-04]], device='cuda:0')/tensor([[3.3637e-04, 1.9688e-03, 3.8710e-04, 1.7520e-04, 2.8393e-04, 3.7632e-05,
         3.6667e-04, 3.6258e-04, 1.3245e-04, 1.3805e-04, 1.0638e-04, 3.9056e-04,
         1.1229e-04, 5.6983e-05, 1.3253e-04, 3.4100e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.4101e-04, 1.9951e-03, 3.3637e-04],
        [5.8696e-04, 4.6231e-04, 1.9688e-03],
        [5.3938e-04, 3.7818e-04, 3.8710e-04],
        [1.3098e-04, 1.2358e-03, 1.7520e-04],
        [3.3792e-04, 6.7709e-04, 2.8393e-04],
        [5.7730e-04, 4.7865e-04, 3.7632e-05],
        [3.9132e-04, 4.7548e-04, 3.6667e-04],
        [8.7852e-04, 4.4282e-03, 3.6258e-04],
        [3.7212e-04, 5.5281e-04, 1.3245e-04],
        [6.3262e-04, 8.4723e-03, 1.3805e-04],
        [3.6821e-04, 2.6945e-03, 1.0638e-04],
        [7.6114e-04, 3.0523e-03, 3.9056e-04],
        [1.2249e-03, 3.7500e-04, 1.1229e-04],
        [2.4586e-04, 2.3198e-04, 5.6983e-05],
        [2.0058e-03, 6.5424e-04, 1.3253e-04],
        [1.2192e-03, 4.7362e-04, 3.4100e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0004, 0.0005]], device='cuda:0'), torch.Size([1, 4])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0005],
        [0.0003],
        [0.0008],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0008, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[8.5937e-05],
        [3.1348e-05],
        [3.9187e-04],
        [4.7653e-04]], device='cuda:0')/tensor([[8.5937e-05, 3.1348e-05, 3.9187e-04, 4.7653e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.6527e-04, 4.5739e-04, 8.5937e-05],
        [1.6921e-04, 2.6938e-04, 3.1348e-05],
        [3.9418e-04, 8.4620e-04, 3.9187e-04],
        [5.2735e-04, 7.3682e-04, 4.7653e-04]], device='cuda:0')
acc:  0.4166666666666667
Time taken to execute the de NLI task with prompt type passive, variation 3 and batchsize 16: 0:01:02.312323
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI passive 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 365.06it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0023],
        [0.0004],
        [0.0008],
        [0.0008],
        [0.0004],
        [0.0001],
        [0.0005],
        [0.0012],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0020],
        [0.0004],
        [0.0009],
        [0.0012],
        [0.0010]], device='cuda:0')/tensor([[0.0023, 0.0004, 0.0008, 0.0008, 0.0004, 0.0001, 0.0005, 0.0012, 0.0004,
         0.0006, 0.0003, 0.0020, 0.0004, 0.0009, 0.0012, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.8986e-03],
        [2.5973e-04],
        [2.3134e-04],
        [1.5197e-03],
        [6.6242e-04],
        [8.7920e-06],
        [1.4694e-04],
        [3.0489e-03],
        [1.3026e-03],
        [9.0781e-04],
        [2.0053e-04],
        [2.6532e-03],
        [1.5352e-04],
        [7.2529e-04],
        [1.1710e-03],
        [5.6953e-04]], device='cuda:0')/tensor([[2.8986e-03, 2.5973e-04, 2.3134e-04, 1.5197e-03, 6.6242e-04, 8.7920e-06,
         1.4694e-04, 3.0489e-03, 1.3026e-03, 9.0781e-04, 2.0053e-04, 2.6532e-03,
         1.5352e-04, 7.2529e-04, 1.1710e-03, 5.6953e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.6986e-04],
        [1.2538e-04],
        [1.8556e-04],
        [9.3426e-05],
        [1.4515e-04],
        [3.0378e-05],
        [3.3641e-04],
        [1.1802e-04],
        [2.1446e-05],
        [1.5737e-04],
        [3.9564e-05],
        [1.4953e-04],
        [8.0600e-05],
        [1.9868e-04],
        [2.4950e-04],
        [8.9140e-05]], device='cuda:0')/tensor([[1.6986e-04, 1.2538e-04, 1.8556e-04, 9.3426e-05, 1.4515e-04, 3.0378e-05,
         3.3641e-04, 1.1802e-04, 2.1446e-05, 1.5737e-04, 3.9564e-05, 1.4953e-04,
         8.0600e-05, 1.9868e-04, 2.4950e-04, 8.9140e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3343e-03, 2.8986e-03, 1.6986e-04],
        [3.8351e-04, 2.5973e-04, 1.2538e-04],
        [8.0159e-04, 2.3134e-04, 1.8556e-04],
        [7.7592e-04, 1.5197e-03, 9.3426e-05],
        [4.4898e-04, 6.6242e-04, 1.4515e-04],
        [1.0992e-04, 8.7920e-06, 3.0378e-05],
        [5.0710e-04, 1.4694e-04, 3.3641e-04],
        [1.1928e-03, 3.0489e-03, 1.1802e-04],
        [4.0274e-04, 1.3026e-03, 2.1446e-05],
        [6.4536e-04, 9.0781e-04, 1.5737e-04],
        [2.5066e-04, 2.0053e-04, 3.9564e-05],
        [1.9710e-03, 2.6532e-03, 1.4953e-04],
        [3.6320e-04, 1.5352e-04, 8.0600e-05],
        [9.0253e-04, 7.2529e-04, 1.9868e-04],
        [1.1925e-03, 1.1710e-03, 2.4950e-04],
        [9.8898e-04, 5.6953e-04, 8.9140e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0038],
        [0.0003],
        [0.0009],
        [0.0009],
        [0.0012],
        [0.0008],
        [0.0018],
        [0.0010],
        [0.0003],
        [0.0016],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0012, 0.0006, 0.0005, 0.0005, 0.0038, 0.0003, 0.0009, 0.0009, 0.0012,
         0.0008, 0.0018, 0.0010, 0.0003, 0.0016, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8357e-03],
        [7.4771e-04],
        [1.4764e-03],
        [4.2409e-04],
        [5.1915e-03],
        [3.5667e-04],
        [7.0484e-04],
        [8.0731e-04],
        [1.4395e-03],
        [4.0369e-03],
        [7.8823e-04],
        [2.0004e-03],
        [3.7936e-05],
        [3.0482e-03],
        [8.9329e-04],
        [7.0191e-04]], device='cuda:0')/tensor([[3.8357e-03, 7.4771e-04, 1.4764e-03, 4.2409e-04, 5.1915e-03, 3.5667e-04,
         7.0484e-04, 8.0731e-04, 1.4395e-03, 4.0369e-03, 7.8823e-04, 2.0004e-03,
         3.7936e-05, 3.0482e-03, 8.9329e-04, 7.0191e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9624e-04],
        [3.5723e-04],
        [1.0771e-04],
        [1.3723e-04],
        [1.9301e-04],
        [9.1840e-05],
        [7.7232e-05],
        [2.1214e-04],
        [1.7229e-04],
        [7.6088e-05],
        [6.6183e-04],
        [3.0848e-04],
        [1.9413e-04],
        [5.8636e-04],
        [2.7720e-04],
        [1.3807e-04]], device='cuda:0')/tensor([[1.9624e-04, 3.5723e-04, 1.0771e-04, 1.3723e-04, 1.9301e-04, 9.1840e-05,
         7.7232e-05, 2.1214e-04, 1.7229e-04, 7.6088e-05, 6.6183e-04, 3.0848e-04,
         1.9413e-04, 5.8636e-04, 2.7720e-04, 1.3807e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1645e-03, 3.8357e-03, 1.9624e-04],
        [6.4838e-04, 7.4771e-04, 3.5723e-04],
        [4.5366e-04, 1.4764e-03, 1.0771e-04],
        [4.5688e-04, 4.2409e-04, 1.3723e-04],
        [3.7860e-03, 5.1915e-03, 1.9301e-04],
        [3.0795e-04, 3.5667e-04, 9.1840e-05],
        [9.0765e-04, 7.0484e-04, 7.7232e-05],
        [9.0211e-04, 8.0731e-04, 2.1214e-04],
        [1.1999e-03, 1.4395e-03, 1.7229e-04],
        [7.6252e-04, 4.0369e-03, 7.6088e-05],
        [1.8017e-03, 7.8823e-04, 6.6183e-04],
        [1.0290e-03, 2.0004e-03, 3.0848e-04],
        [2.8149e-04, 3.7936e-05, 1.9413e-04],
        [1.5728e-03, 3.0482e-03, 5.8636e-04],
        [7.3800e-04, 8.9329e-04, 2.7720e-04],
        [5.8700e-04, 7.0191e-04, 1.3807e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0006],
        [0.0005],
        [0.0008],
        [0.0010],
        [0.0009],
        [0.0002],
        [0.0005],
        [0.0016],
        [0.0014],
        [0.0008],
        [0.0006],
        [0.0019],
        [0.0012],
        [0.0009],
        [0.0017]], device='cuda:0')/tensor([[0.0002, 0.0006, 0.0005, 0.0008, 0.0010, 0.0009, 0.0002, 0.0005, 0.0016,
         0.0014, 0.0008, 0.0006, 0.0019, 0.0012, 0.0009, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2196e-03],
        [1.6876e-03],
        [3.5415e-04],
        [7.3248e-04],
        [1.4896e-03],
        [3.1139e-04],
        [7.2195e-05],
        [9.2342e-04],
        [1.3765e-03],
        [7.7305e-04],
        [8.6192e-04],
        [5.4468e-04],
        [1.9511e-03],
        [1.6476e-03],
        [7.7005e-04],
        [1.3555e-03]], device='cuda:0')/tensor([[1.2196e-03, 1.6876e-03, 3.5415e-04, 7.3248e-04, 1.4896e-03, 3.1139e-04,
         7.2195e-05, 9.2342e-04, 1.3765e-03, 7.7305e-04, 8.6192e-04, 5.4468e-04,
         1.9511e-03, 1.6476e-03, 7.7005e-04, 1.3555e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1414e-04],
        [2.2971e-04],
        [8.4937e-05],
        [1.1174e-04],
        [2.3541e-04],
        [7.4972e-05],
        [3.6052e-05],
        [5.9711e-05],
        [4.1557e-04],
        [1.9287e-04],
        [1.2620e-04],
        [6.4815e-05],
        [2.9083e-04],
        [2.7663e-04],
        [1.5908e-04],
        [2.8684e-04]], device='cuda:0')/tensor([[1.1414e-04, 2.2971e-04, 8.4937e-05, 1.1174e-04, 2.3541e-04, 7.4972e-05,
         3.6052e-05, 5.9711e-05, 4.1557e-04, 1.9287e-04, 1.2620e-04, 6.4815e-05,
         2.9083e-04, 2.7663e-04, 1.5908e-04, 2.8684e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2926e-04, 1.2196e-03, 1.1414e-04],
        [5.9240e-04, 1.6876e-03, 2.2971e-04],
        [4.5006e-04, 3.5415e-04, 8.4937e-05],
        [8.4488e-04, 7.3248e-04, 1.1174e-04],
        [1.0376e-03, 1.4896e-03, 2.3541e-04],
        [8.5197e-04, 3.1139e-04, 7.4972e-05],
        [2.3262e-04, 7.2195e-05, 3.6052e-05],
        [5.1774e-04, 9.2342e-04, 5.9711e-05],
        [1.5898e-03, 1.3765e-03, 4.1557e-04],
        [1.3624e-03, 7.7305e-04, 1.9287e-04],
        [8.1131e-04, 8.6192e-04, 1.2620e-04],
        [6.1265e-04, 5.4468e-04, 6.4815e-05],
        [1.9085e-03, 1.9511e-03, 2.9083e-04],
        [1.1728e-03, 1.6476e-03, 2.7663e-04],
        [9.1574e-04, 7.7005e-04, 1.5908e-04],
        [1.6698e-03, 1.3555e-03, 2.8684e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1432e-04],
        [4.9592e-05],
        [5.7964e-04],
        [5.6467e-04],
        [2.0043e-04],
        [3.2189e-04],
        [1.3740e-03],
        [1.3784e-03],
        [1.1052e-03],
        [6.7295e-04],
        [1.1138e-03],
        [6.3195e-04],
        [5.8188e-04],
        [1.1023e-03],
        [5.6267e-04],
        [5.9887e-04]], device='cuda:0')/tensor([[2.1432e-04, 4.9592e-05, 5.7964e-04, 5.6467e-04, 2.0043e-04, 3.2189e-04,
         1.3740e-03, 1.3784e-03, 1.1052e-03, 6.7295e-04, 1.1138e-03, 6.3195e-04,
         5.8188e-04, 1.1023e-03, 5.6267e-04, 5.9887e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4969e-05],
        [2.7178e-04],
        [6.0410e-04],
        [2.2476e-03],
        [1.7207e-04],
        [1.7476e-03],
        [4.2035e-04],
        [1.3560e-03],
        [6.5283e-04],
        [2.9004e-04],
        [1.8602e-03],
        [8.1269e-05],
        [9.3736e-04],
        [7.6681e-04],
        [1.0311e-03],
        [4.0484e-04]], device='cuda:0')/tensor([[6.4969e-05, 2.7178e-04, 6.0410e-04, 2.2476e-03, 1.7207e-04, 1.7476e-03,
         4.2035e-04, 1.3560e-03, 6.5283e-04, 2.9004e-04, 1.8602e-03, 8.1269e-05,
         9.3736e-04, 7.6681e-04, 1.0311e-03, 4.0484e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2173e-05],
        [4.8133e-05],
        [2.4415e-04],
        [1.2113e-04],
        [3.2196e-05],
        [1.0195e-04],
        [9.4650e-05],
        [2.0902e-04],
        [2.9172e-04],
        [2.3675e-04],
        [1.3442e-04],
        [8.0233e-05],
        [1.5951e-04],
        [5.0675e-04],
        [3.9008e-04],
        [7.0004e-05]], device='cuda:0')/tensor([[5.2173e-05, 4.8133e-05, 2.4415e-04, 1.2113e-04, 3.2196e-05, 1.0195e-04,
         9.4650e-05, 2.0902e-04, 2.9172e-04, 2.3675e-04, 1.3442e-04, 8.0233e-05,
         1.5951e-04, 5.0675e-04, 3.9008e-04, 7.0004e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1432e-04, 6.4969e-05, 5.2173e-05],
        [4.9592e-05, 2.7178e-04, 4.8133e-05],
        [5.7964e-04, 6.0410e-04, 2.4415e-04],
        [5.6467e-04, 2.2476e-03, 1.2113e-04],
        [2.0043e-04, 1.7207e-04, 3.2196e-05],
        [3.2189e-04, 1.7476e-03, 1.0195e-04],
        [1.3740e-03, 4.2035e-04, 9.4650e-05],
        [1.3784e-03, 1.3560e-03, 2.0902e-04],
        [1.1052e-03, 6.5283e-04, 2.9172e-04],
        [6.7295e-04, 2.9004e-04, 2.3675e-04],
        [1.1138e-03, 1.8602e-03, 1.3442e-04],
        [6.3195e-04, 8.1269e-05, 8.0233e-05],
        [5.8188e-04, 9.3736e-04, 1.5951e-04],
        [1.1023e-03, 7.6681e-04, 5.0675e-04],
        [5.6267e-04, 1.0311e-03, 3.9008e-04],
        [5.9887e-04, 4.0484e-04, 7.0004e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0013],
        [0.0006],
        [0.0005],
        [0.0017],
        [0.0014],
        [0.0006],
        [0.0003],
        [0.0033],
        [0.0010],
        [0.0005],
        [0.0007],
        [0.0017],
        [0.0017],
        [0.0005],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0013, 0.0006, 0.0005, 0.0017, 0.0014, 0.0006, 0.0003, 0.0033,
         0.0010, 0.0005, 0.0007, 0.0017, 0.0017, 0.0005, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0014],
        [0.0005],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0023],
        [0.0008],
        [0.0039],
        [0.0012],
        [0.0006],
        [0.0014],
        [0.0082],
        [0.0028],
        [0.0005],
        [0.0001]], device='cuda:0')/tensor([[0.0003, 0.0014, 0.0005, 0.0004, 0.0006, 0.0010, 0.0023, 0.0008, 0.0039,
         0.0012, 0.0006, 0.0014, 0.0082, 0.0028, 0.0005, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5745e-04],
        [4.0306e-04],
        [3.5041e-04],
        [9.6779e-05],
        [8.5481e-05],
        [9.9957e-05],
        [2.3857e-04],
        [4.9732e-05],
        [4.3532e-04],
        [1.5218e-04],
        [1.5099e-04],
        [5.1730e-04],
        [2.4436e-04],
        [3.7334e-04],
        [1.1720e-04],
        [1.2455e-04]], device='cuda:0')/tensor([[4.5745e-04, 4.0306e-04, 3.5041e-04, 9.6779e-05, 8.5481e-05, 9.9957e-05,
         2.3857e-04, 4.9732e-05, 4.3532e-04, 1.5218e-04, 1.5099e-04, 5.1730e-04,
         2.4436e-04, 3.7334e-04, 1.1720e-04, 1.2455e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1431e-04, 3.4623e-04, 4.5745e-04],
        [1.3257e-03, 1.4080e-03, 4.0306e-04],
        [5.6143e-04, 5.2676e-04, 3.5041e-04],
        [5.3345e-04, 3.5171e-04, 9.6779e-05],
        [1.6838e-03, 5.7365e-04, 8.5481e-05],
        [1.3769e-03, 1.0450e-03, 9.9957e-05],
        [6.4492e-04, 2.3373e-03, 2.3857e-04],
        [3.4612e-04, 7.8677e-04, 4.9732e-05],
        [3.2939e-03, 3.9406e-03, 4.3532e-04],
        [1.0291e-03, 1.2472e-03, 1.5218e-04],
        [5.4868e-04, 5.5356e-04, 1.5099e-04],
        [7.1893e-04, 1.4440e-03, 5.1730e-04],
        [1.7430e-03, 8.2013e-03, 2.4436e-04],
        [1.6929e-03, 2.8168e-03, 3.7334e-04],
        [4.5872e-04, 5.3478e-04, 1.1720e-04],
        [4.6918e-04, 1.0616e-04, 1.2455e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0005],
        [0.0027],
        [0.0007],
        [0.0009],
        [0.0007],
        [0.0025],
        [0.0010],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0011],
        [0.0001]], device='cuda:0')/tensor([[0.0007, 0.0005, 0.0027, 0.0007, 0.0009, 0.0007, 0.0025, 0.0010, 0.0005,
         0.0002, 0.0004, 0.0007, 0.0005, 0.0003, 0.0011, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.3552e-04],
        [3.7834e-04],
        [6.8569e-04],
        [8.1879e-04],
        [6.0238e-05],
        [1.7537e-03],
        [1.3508e-03],
        [2.9714e-04],
        [8.7617e-05],
        [4.4755e-04],
        [2.6472e-04],
        [7.5488e-04],
        [1.5168e-03],
        [1.4488e-04],
        [7.2280e-04],
        [4.9618e-04]], device='cuda:0')/tensor([[3.3552e-04, 3.7834e-04, 6.8569e-04, 8.1879e-04, 6.0238e-05, 1.7537e-03,
         1.3508e-03, 2.9714e-04, 8.7617e-05, 4.4755e-04, 2.6472e-04, 7.5488e-04,
         1.5168e-03, 1.4488e-04, 7.2280e-04, 4.9618e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5598e-04],
        [1.8933e-04],
        [2.6405e-04],
        [6.6810e-05],
        [1.5179e-04],
        [3.9831e-04],
        [3.8997e-04],
        [1.4941e-04],
        [9.8796e-04],
        [1.0439e-04],
        [1.3100e-04],
        [2.9481e-04],
        [1.2707e-03],
        [1.2537e-04],
        [1.2447e-04],
        [3.2237e-05]], device='cuda:0')/tensor([[1.5598e-04, 1.8933e-04, 2.6405e-04, 6.6810e-05, 1.5179e-04, 3.9831e-04,
         3.8997e-04, 1.4941e-04, 9.8796e-04, 1.0439e-04, 1.3100e-04, 2.9481e-04,
         1.2707e-03, 1.2537e-04, 1.2447e-04, 3.2237e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.9005e-04, 3.3552e-04, 1.5598e-04],
        [4.9027e-04, 3.7834e-04, 1.8933e-04],
        [2.7081e-03, 6.8569e-04, 2.6405e-04],
        [6.7268e-04, 8.1879e-04, 6.6810e-05],
        [8.5115e-04, 6.0238e-05, 1.5179e-04],
        [7.0912e-04, 1.7537e-03, 3.9831e-04],
        [2.4817e-03, 1.3508e-03, 3.8997e-04],
        [9.9588e-04, 2.9714e-04, 1.4941e-04],
        [4.5152e-04, 8.7617e-05, 9.8796e-04],
        [2.1730e-04, 4.4755e-04, 1.0439e-04],
        [4.1889e-04, 2.6472e-04, 1.3100e-04],
        [6.7965e-04, 7.5488e-04, 2.9481e-04],
        [5.4876e-04, 1.5168e-03, 1.2707e-03],
        [2.9660e-04, 1.4488e-04, 1.2537e-04],
        [1.0545e-03, 7.2280e-04, 1.2447e-04],
        [1.2506e-04, 4.9618e-04, 3.2237e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0012],
        [0.0009],
        [0.0002],
        [0.0007],
        [0.0010],
        [0.0005],
        [0.0007],
        [0.0009],
        [0.0004],
        [0.0013],
        [0.0016],
        [0.0010],
        [0.0018],
        [0.0003],
        [0.0008]], device='cuda:0')/tensor([[0.0009, 0.0012, 0.0009, 0.0002, 0.0007, 0.0010, 0.0005, 0.0007, 0.0009,
         0.0004, 0.0013, 0.0016, 0.0010, 0.0018, 0.0003, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4397e-04],
        [1.3385e-03],
        [7.5173e-04],
        [1.2725e-04],
        [4.6118e-04],
        [1.7432e-03],
        [3.8852e-04],
        [1.3802e-03],
        [7.0583e-04],
        [4.3720e-05],
        [2.6152e-03],
        [8.4383e-04],
        [9.8123e-04],
        [1.2860e-03],
        [1.0307e-03],
        [1.2000e-04]], device='cuda:0')/tensor([[7.4397e-04, 1.3385e-03, 7.5173e-04, 1.2725e-04, 4.6118e-04, 1.7432e-03,
         3.8852e-04, 1.3802e-03, 7.0583e-04, 4.3720e-05, 2.6152e-03, 8.4383e-04,
         9.8123e-04, 1.2860e-03, 1.0307e-03, 1.2000e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8027e-04],
        [1.8378e-04],
        [8.6649e-05],
        [6.3078e-05],
        [1.0100e-04],
        [2.1382e-04],
        [1.6658e-04],
        [1.8308e-04],
        [1.5591e-04],
        [7.2223e-05],
        [2.2569e-04],
        [2.2538e-04],
        [9.9536e-05],
        [2.0664e-04],
        [2.0866e-04],
        [2.5991e-04]], device='cuda:0')/tensor([[3.8027e-04, 1.8378e-04, 8.6649e-05, 6.3078e-05, 1.0100e-04, 2.1382e-04,
         1.6658e-04, 1.8308e-04, 1.5591e-04, 7.2223e-05, 2.2569e-04, 2.2538e-04,
         9.9536e-05, 2.0664e-04, 2.0866e-04, 2.5991e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.8632e-04, 7.4397e-04, 3.8027e-04],
        [1.2335e-03, 1.3385e-03, 1.8378e-04],
        [8.6450e-04, 7.5173e-04, 8.6649e-05],
        [1.8457e-04, 1.2725e-04, 6.3078e-05],
        [6.5127e-04, 4.6118e-04, 1.0100e-04],
        [1.0059e-03, 1.7432e-03, 2.1382e-04],
        [5.4473e-04, 3.8852e-04, 1.6658e-04],
        [6.8544e-04, 1.3802e-03, 1.8308e-04],
        [9.4694e-04, 7.0583e-04, 1.5591e-04],
        [3.6004e-04, 4.3720e-05, 7.2223e-05],
        [1.3292e-03, 2.6152e-03, 2.2569e-04],
        [1.5876e-03, 8.4383e-04, 2.2538e-04],
        [1.0034e-03, 9.8123e-04, 9.9536e-05],
        [1.7694e-03, 1.2860e-03, 2.0664e-04],
        [3.4118e-04, 1.0307e-03, 2.0866e-04],
        [8.2821e-04, 1.2000e-04, 2.5991e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0013],
        [0.0015],
        [0.0005],
        [0.0001],
        [0.0004],
        [0.0012],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0013],
        [0.0009],
        [0.0007],
        [0.0009],
        [0.0009]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0013, 0.0015, 0.0005, 0.0001, 0.0004, 0.0012, 0.0003,
         0.0007, 0.0004, 0.0013, 0.0009, 0.0007, 0.0009, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9842e-05],
        [1.0967e-04],
        [7.4730e-04],
        [1.6175e-03],
        [2.9550e-05],
        [5.6997e-06],
        [2.1285e-05],
        [2.7917e-03],
        [1.2559e-04],
        [5.3861e-05],
        [1.7366e-03],
        [1.4408e-05],
        [1.6541e-03],
        [2.3766e-04],
        [2.8245e-03],
        [6.4989e-04]], device='cuda:0')/tensor([[1.9842e-05, 1.0967e-04, 7.4730e-04, 1.6175e-03, 2.9550e-05, 5.6997e-06,
         2.1285e-05, 2.7917e-03, 1.2559e-04, 5.3861e-05, 1.7366e-03, 1.4408e-05,
         1.6541e-03, 2.3766e-04, 2.8245e-03, 6.4989e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.1174e-05],
        [4.5765e-05],
        [1.6839e-04],
        [3.3031e-04],
        [1.6398e-04],
        [5.1646e-05],
        [5.0194e-05],
        [8.6564e-04],
        [6.9974e-05],
        [1.2610e-04],
        [5.8077e-05],
        [5.3524e-05],
        [2.6712e-04],
        [3.6564e-05],
        [1.0355e-04],
        [7.7479e-05]], device='cuda:0')/tensor([[3.1174e-05, 4.5765e-05, 1.6839e-04, 3.3031e-04, 1.6398e-04, 5.1646e-05,
         5.0194e-05, 8.6564e-04, 6.9974e-05, 1.2610e-04, 5.8077e-05, 5.3524e-05,
         2.6712e-04, 3.6564e-05, 1.0355e-04, 7.7479e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2229e-04, 1.9842e-05, 3.1174e-05],
        [3.1000e-04, 1.0967e-04, 4.5765e-05],
        [1.2987e-03, 7.4730e-04, 1.6839e-04],
        [1.5321e-03, 1.6175e-03, 3.3031e-04],
        [5.3837e-04, 2.9550e-05, 1.6398e-04],
        [1.4461e-04, 5.6997e-06, 5.1646e-05],
        [3.9017e-04, 2.1285e-05, 5.0194e-05],
        [1.1730e-03, 2.7917e-03, 8.6564e-04],
        [2.6843e-04, 1.2559e-04, 6.9974e-05],
        [6.6169e-04, 5.3861e-05, 1.2610e-04],
        [4.1407e-04, 1.7366e-03, 5.8077e-05],
        [1.2898e-03, 1.4408e-05, 5.3524e-05],
        [9.2308e-04, 1.6541e-03, 2.6712e-04],
        [6.9582e-04, 2.3766e-04, 3.6564e-05],
        [8.5637e-04, 2.8245e-03, 1.0355e-04],
        [8.9445e-04, 6.4989e-04, 7.7479e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0035],
        [0.0012],
        [0.0006],
        [0.0017]], device='cuda:0')/tensor([[0.0035, 0.0012, 0.0006, 0.0017]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0045],
        [0.0095],
        [0.0003],
        [0.0013]], device='cuda:0')/tensor([[0.0045, 0.0095, 0.0003, 0.0013]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[9.1241e-04],
        [1.6451e-04],
        [1.2832e-04],
        [7.8378e-05]], device='cuda:0')/tensor([[9.1241e-04, 1.6451e-04, 1.2832e-04, 7.8378e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[3.4833e-03, 4.4655e-03, 9.1241e-04],
        [1.1716e-03, 9.4561e-03, 1.6451e-04],
        [6.4944e-04, 2.7330e-04, 1.2832e-04],
        [1.7495e-03, 1.3460e-03, 7.8378e-05]], device='cuda:0')
acc:  0.25
Time taken to execute the de NLI task with prompt type passive, variation 4 and batchsize 16: 0:01:02.517406
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI passive 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 209.24it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.4161e-04],
        [2.7507e-04],
        [7.5779e-05],
        [2.9372e-04],
        [7.6069e-04],
        [3.9966e-04],
        [4.4260e-04],
        [3.7096e-04],
        [1.4183e-04],
        [2.0289e-04],
        [2.3582e-04],
        [4.8620e-04],
        [2.8706e-04],
        [4.5976e-04],
        [3.4849e-04],
        [2.4054e-04]], device='cuda:0')/tensor([[5.4161e-04, 2.7507e-04, 7.5779e-05, 2.9372e-04, 7.6069e-04, 3.9966e-04,
         4.4260e-04, 3.7096e-04, 1.4183e-04, 2.0289e-04, 2.3582e-04, 4.8620e-04,
         2.8706e-04, 4.5976e-04, 3.4849e-04, 2.4054e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8056e-03],
        [1.1797e-03],
        [8.0847e-04],
        [2.1004e-03],
        [2.2973e-03],
        [3.1359e-03],
        [1.8314e-03],
        [1.1242e-03],
        [4.4880e-05],
        [5.7902e-04],
        [1.7497e-03],
        [2.9139e-03],
        [1.9756e-03],
        [3.1382e-03],
        [1.3818e-03],
        [1.3461e-03]], device='cuda:0')/tensor([[1.8056e-03, 1.1797e-03, 8.0847e-04, 2.1004e-03, 2.2973e-03, 3.1359e-03,
         1.8314e-03, 1.1242e-03, 4.4880e-05, 5.7902e-04, 1.7497e-03, 2.9139e-03,
         1.9756e-03, 3.1382e-03, 1.3818e-03, 1.3461e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8409e-04],
        [1.0785e-04],
        [1.4445e-04],
        [1.9378e-04],
        [4.5067e-04],
        [3.8482e-04],
        [9.0377e-05],
        [5.0870e-05],
        [3.6375e-05],
        [3.7455e-04],
        [2.8203e-04],
        [6.7942e-05],
        [1.4402e-04],
        [1.3436e-04],
        [3.6639e-04],
        [3.0454e-04]], device='cuda:0')/tensor([[3.8409e-04, 1.0785e-04, 1.4445e-04, 1.9378e-04, 4.5067e-04, 3.8482e-04,
         9.0377e-05, 5.0870e-05, 3.6375e-05, 3.7455e-04, 2.8203e-04, 6.7942e-05,
         1.4402e-04, 1.3436e-04, 3.6639e-04, 3.0454e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.4161e-04, 1.8056e-03, 3.8409e-04],
        [2.7507e-04, 1.1797e-03, 1.0785e-04],
        [7.5779e-05, 8.0847e-04, 1.4445e-04],
        [2.9372e-04, 2.1004e-03, 1.9378e-04],
        [7.6069e-04, 2.2973e-03, 4.5067e-04],
        [3.9966e-04, 3.1359e-03, 3.8482e-04],
        [4.4260e-04, 1.8314e-03, 9.0377e-05],
        [3.7096e-04, 1.1242e-03, 5.0870e-05],
        [1.4183e-04, 4.4880e-05, 3.6375e-05],
        [2.0289e-04, 5.7902e-04, 3.7455e-04],
        [2.3582e-04, 1.7497e-03, 2.8203e-04],
        [4.8620e-04, 2.9139e-03, 6.7942e-05],
        [2.8706e-04, 1.9756e-03, 1.4402e-04],
        [4.5976e-04, 3.1382e-03, 1.3436e-04],
        [3.4849e-04, 1.3818e-03, 3.6639e-04],
        [2.4054e-04, 1.3461e-03, 3.0454e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0008],
        [0.0006],
        [0.0003],
        [0.0013],
        [0.0004],
        [0.0007],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0011],
        [0.0009],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0008, 0.0006, 0.0003, 0.0013, 0.0004, 0.0007, 0.0004,
         0.0002, 0.0002, 0.0006, 0.0011, 0.0009, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0014],
        [0.0031],
        [0.0001],
        [0.0007],
        [0.0059],
        [0.0003],
        [0.0022],
        [0.0038],
        [0.0020],
        [0.0020],
        [0.0020],
        [0.0033],
        [0.0011],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0014, 0.0031, 0.0001, 0.0007, 0.0059, 0.0003, 0.0022, 0.0038,
         0.0020, 0.0020, 0.0020, 0.0033, 0.0011, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3087e-05],
        [2.8388e-04],
        [3.2968e-04],
        [1.3699e-04],
        [1.0115e-03],
        [4.8888e-04],
        [5.8448e-05],
        [3.5367e-04],
        [2.2741e-04],
        [4.4266e-04],
        [3.1594e-04],
        [7.3737e-05],
        [2.8438e-04],
        [4.9479e-04],
        [2.7811e-04],
        [2.1482e-04]], device='cuda:0')/tensor([[3.3087e-05, 2.8388e-04, 3.2968e-04, 1.3699e-04, 1.0115e-03, 4.8888e-04,
         5.8448e-05, 3.5367e-04, 2.2741e-04, 4.4266e-04, 3.1594e-04, 7.3737e-05,
         2.8438e-04, 4.9479e-04, 2.7811e-04, 2.1482e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.0179e-04, 5.5732e-04, 3.3087e-05],
        [2.8280e-04, 1.4216e-03, 2.8388e-04],
        [7.8034e-04, 3.0896e-03, 3.2968e-04],
        [5.5266e-04, 1.4593e-04, 1.3699e-04],
        [3.1461e-04, 7.4715e-04, 1.0115e-03],
        [1.2574e-03, 5.9452e-03, 4.8888e-04],
        [4.1848e-04, 2.7845e-04, 5.8448e-05],
        [7.3320e-04, 2.2140e-03, 3.5367e-04],
        [4.3204e-04, 3.8083e-03, 2.2741e-04],
        [2.3571e-04, 2.0368e-03, 4.4266e-04],
        [2.4593e-04, 1.9860e-03, 3.1594e-04],
        [6.4584e-04, 1.9594e-03, 7.3737e-05],
        [1.0793e-03, 3.2732e-03, 2.8438e-04],
        [8.6660e-04, 1.0602e-03, 4.9479e-04],
        [2.9132e-04, 4.4131e-04, 2.7811e-04],
        [2.1459e-04, 4.8557e-04, 2.1482e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.8119e-04],
        [5.0821e-04],
        [4.2671e-04],
        [3.5758e-04],
        [7.3715e-04],
        [2.2309e-04],
        [2.0024e-03],
        [4.0607e-04],
        [2.8775e-04],
        [2.1508e-04],
        [7.3984e-04],
        [1.4095e-04],
        [9.1362e-05],
        [5.0898e-04],
        [4.3741e-04],
        [2.1157e-04]], device='cuda:0')/tensor([[5.8119e-04, 5.0821e-04, 4.2671e-04, 3.5758e-04, 7.3715e-04, 2.2309e-04,
         2.0024e-03, 4.0607e-04, 2.8775e-04, 2.1508e-04, 7.3984e-04, 1.4095e-04,
         9.1362e-05, 5.0898e-04, 4.3741e-04, 2.1157e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0128],
        [0.0028],
        [0.0008],
        [0.0138],
        [0.0006],
        [0.0013],
        [0.0025],
        [0.0011],
        [0.0010],
        [0.0041],
        [0.0001],
        [0.0003],
        [0.0004],
        [0.0024],
        [0.0013]], device='cuda:0')/tensor([[0.0007, 0.0128, 0.0028, 0.0008, 0.0138, 0.0006, 0.0013, 0.0025, 0.0011,
         0.0010, 0.0041, 0.0001, 0.0003, 0.0004, 0.0024, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0001],
        [0.0001],
        [0.0002],
        [0.0018],
        [0.0010],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0001],
        [0.0002],
        [0.0008],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0001, 0.0001, 0.0002, 0.0018, 0.0010, 0.0002, 0.0003, 0.0002, 0.0002,
         0.0001, 0.0002, 0.0008, 0.0002, 0.0010, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8119e-04, 7.3637e-04, 1.3022e-04],
        [5.0821e-04, 1.2760e-02, 1.0965e-04],
        [4.2671e-04, 2.8080e-03, 1.9031e-04],
        [3.5758e-04, 8.1452e-04, 1.7563e-03],
        [7.3715e-04, 1.3761e-02, 1.0155e-03],
        [2.2309e-04, 6.2571e-04, 2.1941e-04],
        [2.0024e-03, 1.2550e-03, 3.2596e-04],
        [4.0607e-04, 2.4903e-03, 2.0758e-04],
        [2.8775e-04, 1.0836e-03, 1.7537e-04],
        [2.1508e-04, 9.6655e-04, 1.3776e-04],
        [7.3984e-04, 4.0666e-03, 2.1128e-04],
        [1.4095e-04, 1.3170e-04, 7.5792e-04],
        [9.1362e-05, 2.9762e-04, 1.7047e-04],
        [5.0898e-04, 3.5295e-04, 9.8627e-04],
        [4.3741e-04, 2.4057e-03, 1.7895e-04],
        [2.1157e-04, 1.2790e-03, 2.7540e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.2906e-04],
        [1.5774e-04],
        [5.1400e-06],
        [1.8530e-04],
        [4.4932e-04],
        [1.7154e-05],
        [8.2604e-04],
        [3.6612e-04],
        [3.9511e-04],
        [7.4508e-04],
        [1.6035e-04],
        [1.8449e-04],
        [4.2401e-04],
        [6.4944e-04],
        [1.3445e-04],
        [5.4042e-04]], device='cuda:0')/tensor([[3.2906e-04, 1.5774e-04, 5.1400e-06, 1.8530e-04, 4.4932e-04, 1.7154e-05,
         8.2604e-04, 3.6612e-04, 3.9511e-04, 7.4508e-04, 1.6035e-04, 1.8449e-04,
         4.2401e-04, 6.4944e-04, 1.3445e-04, 5.4042e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.1981e-03],
        [6.0652e-04],
        [3.8731e-06],
        [2.8629e-03],
        [5.9065e-03],
        [1.9594e-05],
        [1.3416e-02],
        [2.7827e-03],
        [7.3841e-04],
        [6.8909e-04],
        [2.1053e-03],
        [5.7008e-03],
        [7.3525e-04],
        [1.9602e-03],
        [1.5290e-03],
        [3.0109e-03]], device='cuda:0')/tensor([[2.1981e-03, 6.0652e-04, 3.8731e-06, 2.8629e-03, 5.9065e-03, 1.9594e-05,
         1.3416e-02, 2.7827e-03, 7.3841e-04, 6.8909e-04, 2.1053e-03, 5.7008e-03,
         7.3525e-04, 1.9602e-03, 1.5290e-03, 3.0109e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.7390e-04],
        [1.8799e-04],
        [3.2483e-06],
        [3.5867e-04],
        [3.0383e-04],
        [2.9343e-05],
        [5.0502e-04],
        [4.5511e-04],
        [9.3389e-05],
        [1.3564e-04],
        [1.7183e-04],
        [1.8227e-04],
        [4.7727e-05],
        [1.3711e-04],
        [3.1577e-04],
        [2.8172e-04]], device='cuda:0')/tensor([[4.7390e-04, 1.8799e-04, 3.2483e-06, 3.5867e-04, 3.0383e-04, 2.9343e-05,
         5.0502e-04, 4.5511e-04, 9.3389e-05, 1.3564e-04, 1.7183e-04, 1.8227e-04,
         4.7727e-05, 1.3711e-04, 3.1577e-04, 2.8172e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2906e-04, 2.1981e-03, 4.7390e-04],
        [1.5774e-04, 6.0652e-04, 1.8799e-04],
        [5.1400e-06, 3.8731e-06, 3.2483e-06],
        [1.8530e-04, 2.8629e-03, 3.5867e-04],
        [4.4932e-04, 5.9065e-03, 3.0383e-04],
        [1.7154e-05, 1.9594e-05, 2.9343e-05],
        [8.2604e-04, 1.3416e-02, 5.0502e-04],
        [3.6612e-04, 2.7827e-03, 4.5511e-04],
        [3.9511e-04, 7.3841e-04, 9.3389e-05],
        [7.4508e-04, 6.8909e-04, 1.3564e-04],
        [1.6035e-04, 2.1053e-03, 1.7183e-04],
        [1.8449e-04, 5.7008e-03, 1.8227e-04],
        [4.2401e-04, 7.3525e-04, 4.7727e-05],
        [6.4944e-04, 1.9602e-03, 1.3711e-04],
        [1.3445e-04, 1.5290e-03, 3.1577e-04],
        [5.4042e-04, 3.0109e-03, 2.8172e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7093e-04],
        [1.0935e-03],
        [8.8611e-04],
        [2.4089e-04],
        [9.2459e-05],
        [3.1377e-04],
        [7.7514e-04],
        [8.6091e-04],
        [1.4750e-04],
        [4.4108e-04],
        [2.4860e-04],
        [6.2266e-04],
        [6.6281e-04],
        [2.2005e-04],
        [9.5492e-04],
        [4.9393e-04]], device='cuda:0')/tensor([[1.7093e-04, 1.0935e-03, 8.8611e-04, 2.4089e-04, 9.2459e-05, 3.1377e-04,
         7.7514e-04, 8.6091e-04, 1.4750e-04, 4.4108e-04, 2.4860e-04, 6.2266e-04,
         6.6281e-04, 2.2005e-04, 9.5492e-04, 4.9393e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0026],
        [0.0105],
        [0.0017],
        [0.0002],
        [0.0009],
        [0.0080],
        [0.0046],
        [0.0027],
        [0.0028],
        [0.0030],
        [0.0041],
        [0.0022],
        [0.0011],
        [0.0023],
        [0.0165]], device='cuda:0')/tensor([[0.0007, 0.0026, 0.0105, 0.0017, 0.0002, 0.0009, 0.0080, 0.0046, 0.0027,
         0.0028, 0.0030, 0.0041, 0.0022, 0.0011, 0.0023, 0.0165]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.1168e-05],
        [2.3456e-04],
        [4.3010e-04],
        [4.8716e-05],
        [6.5105e-05],
        [1.0762e-03],
        [1.2557e-03],
        [2.9335e-04],
        [3.1170e-05],
        [3.1530e-04],
        [4.2841e-04],
        [2.5184e-04],
        [8.5748e-04],
        [5.7127e-05],
        [8.6532e-04],
        [1.9966e-04]], device='cuda:0')/tensor([[6.1168e-05, 2.3456e-04, 4.3010e-04, 4.8716e-05, 6.5105e-05, 1.0762e-03,
         1.2557e-03, 2.9335e-04, 3.1170e-05, 3.1530e-04, 4.2841e-04, 2.5184e-04,
         8.5748e-04, 5.7127e-05, 8.6532e-04, 1.9966e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7093e-04, 6.8965e-04, 6.1168e-05],
        [1.0935e-03, 2.5651e-03, 2.3456e-04],
        [8.8611e-04, 1.0510e-02, 4.3010e-04],
        [2.4089e-04, 1.7086e-03, 4.8716e-05],
        [9.2459e-05, 2.3919e-04, 6.5105e-05],
        [3.1377e-04, 8.7850e-04, 1.0762e-03],
        [7.7514e-04, 7.9703e-03, 1.2557e-03],
        [8.6091e-04, 4.5603e-03, 2.9335e-04],
        [1.4750e-04, 2.7029e-03, 3.1170e-05],
        [4.4108e-04, 2.7893e-03, 3.1530e-04],
        [2.4860e-04, 2.9857e-03, 4.2841e-04],
        [6.2266e-04, 4.0665e-03, 2.5184e-04],
        [6.6281e-04, 2.2389e-03, 8.5748e-04],
        [2.2005e-04, 1.0625e-03, 5.7127e-05],
        [9.5492e-04, 2.2502e-03, 8.6532e-04],
        [4.9393e-04, 1.6548e-02, 1.9966e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0807e-04],
        [3.1578e-04],
        [4.7736e-04],
        [8.5158e-05],
        [3.2204e-04],
        [4.4406e-04],
        [1.4795e-04],
        [1.6582e-04],
        [4.0185e-04],
        [2.4183e-04],
        [2.5815e-04],
        [4.1302e-04],
        [6.1492e-04],
        [5.2013e-04],
        [4.8413e-04],
        [2.2220e-04]], device='cuda:0')/tensor([[1.0807e-04, 3.1578e-04, 4.7736e-04, 8.5158e-05, 3.2204e-04, 4.4406e-04,
         1.4795e-04, 1.6582e-04, 4.0185e-04, 2.4183e-04, 2.5815e-04, 4.1302e-04,
         6.1492e-04, 5.2013e-04, 4.8413e-04, 2.2220e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.7047e-04],
        [2.3317e-03],
        [1.4653e-03],
        [4.5990e-05],
        [2.6109e-03],
        [2.1045e-03],
        [6.0850e-04],
        [3.5109e-04],
        [1.0030e-03],
        [3.0991e-03],
        [1.9311e-03],
        [3.9093e-03],
        [3.3058e-03],
        [1.8613e-03],
        [8.5706e-04],
        [5.4782e-03]], device='cuda:0')/tensor([[5.7047e-04, 2.3317e-03, 1.4653e-03, 4.5990e-05, 2.6109e-03, 2.1045e-03,
         6.0850e-04, 3.5109e-04, 1.0030e-03, 3.0991e-03, 1.9311e-03, 3.9093e-03,
         3.3058e-03, 1.8613e-03, 8.5706e-04, 5.4782e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2200e-04],
        [9.3102e-05],
        [1.6202e-04],
        [6.4815e-05],
        [6.1977e-04],
        [1.0022e-04],
        [6.5278e-05],
        [2.5000e-04],
        [6.2474e-04],
        [4.9490e-04],
        [1.0380e-04],
        [4.1432e-04],
        [1.2572e-03],
        [2.5298e-03],
        [2.6874e-05],
        [1.3861e-04]], device='cuda:0')/tensor([[1.2200e-04, 9.3102e-05, 1.6202e-04, 6.4815e-05, 6.1977e-04, 1.0022e-04,
         6.5278e-05, 2.5000e-04, 6.2474e-04, 4.9490e-04, 1.0380e-04, 4.1432e-04,
         1.2572e-03, 2.5298e-03, 2.6874e-05, 1.3861e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0807e-04, 5.7047e-04, 1.2200e-04],
        [3.1578e-04, 2.3317e-03, 9.3102e-05],
        [4.7736e-04, 1.4653e-03, 1.6202e-04],
        [8.5158e-05, 4.5990e-05, 6.4815e-05],
        [3.2204e-04, 2.6109e-03, 6.1977e-04],
        [4.4406e-04, 2.1045e-03, 1.0022e-04],
        [1.4795e-04, 6.0850e-04, 6.5278e-05],
        [1.6582e-04, 3.5109e-04, 2.5000e-04],
        [4.0185e-04, 1.0030e-03, 6.2474e-04],
        [2.4183e-04, 3.0991e-03, 4.9490e-04],
        [2.5815e-04, 1.9311e-03, 1.0380e-04],
        [4.1302e-04, 3.9093e-03, 4.1432e-04],
        [6.1492e-04, 3.3058e-03, 1.2572e-03],
        [5.2013e-04, 1.8613e-03, 2.5298e-03],
        [4.8413e-04, 8.5706e-04, 2.6874e-05],
        [2.2220e-04, 5.4782e-03, 1.3861e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.4477e-04],
        [4.8573e-04],
        [2.4017e-04],
        [1.9797e-04],
        [4.9906e-04],
        [4.4325e-04],
        [4.4998e-04],
        [5.0467e-04],
        [2.8974e-04],
        [4.4023e-04],
        [1.6659e-04],
        [3.8815e-04],
        [4.0791e-04],
        [3.0790e-04],
        [8.3392e-05],
        [5.0545e-04]], device='cuda:0')/tensor([[9.4477e-04, 4.8573e-04, 2.4017e-04, 1.9797e-04, 4.9906e-04, 4.4325e-04,
         4.4998e-04, 5.0467e-04, 2.8974e-04, 4.4023e-04, 1.6659e-04, 3.8815e-04,
         4.0791e-04, 3.0790e-04, 8.3392e-05, 5.0545e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0043],
        [0.0027],
        [0.0010],
        [0.0007],
        [0.0023],
        [0.0031],
        [0.0058],
        [0.0019],
        [0.0016],
        [0.0040],
        [0.0004],
        [0.0027],
        [0.0050],
        [0.0014],
        [0.0018],
        [0.0056]], device='cuda:0')/tensor([[0.0043, 0.0027, 0.0010, 0.0007, 0.0023, 0.0031, 0.0058, 0.0019, 0.0016,
         0.0040, 0.0004, 0.0027, 0.0050, 0.0014, 0.0018, 0.0056]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.2452e-05],
        [1.4296e-04],
        [9.9088e-05],
        [1.1168e-04],
        [2.3917e-04],
        [3.1803e-04],
        [4.7566e-04],
        [4.9846e-05],
        [2.6811e-04],
        [1.9931e-04],
        [1.8210e-04],
        [1.5565e-04],
        [1.1853e-03],
        [2.2165e-04],
        [8.1649e-05],
        [2.7171e-04]], device='cuda:0')/tensor([[6.2452e-05, 1.4296e-04, 9.9088e-05, 1.1168e-04, 2.3917e-04, 3.1803e-04,
         4.7566e-04, 4.9846e-05, 2.6811e-04, 1.9931e-04, 1.8210e-04, 1.5565e-04,
         1.1853e-03, 2.2165e-04, 8.1649e-05, 2.7171e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.4477e-04, 4.2741e-03, 6.2452e-05],
        [4.8573e-04, 2.7000e-03, 1.4296e-04],
        [2.4017e-04, 9.6693e-04, 9.9088e-05],
        [1.9797e-04, 7.3967e-04, 1.1168e-04],
        [4.9906e-04, 2.2811e-03, 2.3917e-04],
        [4.4325e-04, 3.0999e-03, 3.1803e-04],
        [4.4998e-04, 5.8366e-03, 4.7566e-04],
        [5.0467e-04, 1.8866e-03, 4.9846e-05],
        [2.8974e-04, 1.6292e-03, 2.6811e-04],
        [4.4023e-04, 4.0155e-03, 1.9931e-04],
        [1.6659e-04, 3.5917e-04, 1.8210e-04],
        [3.8815e-04, 2.6798e-03, 1.5565e-04],
        [4.0791e-04, 5.0337e-03, 1.1853e-03],
        [3.0790e-04, 1.3561e-03, 2.2165e-04],
        [8.3392e-05, 1.8003e-03, 8.1649e-05],
        [5.0545e-04, 5.6478e-03, 2.7171e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0007],
        [0.0005],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0004],
        [0.0033],
        [0.0006],
        [0.0010],
        [0.0005],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0004, 0.0007, 0.0005, 0.0004, 0.0005, 0.0003, 0.0007, 0.0004, 0.0033,
         0.0006, 0.0010, 0.0005, 0.0002, 0.0010, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0033],
        [0.0083],
        [0.0055],
        [0.0066],
        [0.0054],
        [0.0064],
        [0.0021],
        [0.0150],
        [0.0012],
        [0.0026],
        [0.0011],
        [0.0041],
        [0.0025],
        [0.0040],
        [0.0014]], device='cuda:0')/tensor([[0.0012, 0.0033, 0.0083, 0.0055, 0.0066, 0.0054, 0.0064, 0.0021, 0.0150,
         0.0012, 0.0026, 0.0011, 0.0041, 0.0025, 0.0040, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1256e-04],
        [2.6082e-04],
        [6.2080e-05],
        [2.5836e-04],
        [4.2891e-04],
        [2.5274e-04],
        [2.9688e-04],
        [5.8869e-04],
        [6.8806e-04],
        [1.2761e-04],
        [3.1883e-04],
        [1.4901e-04],
        [3.4137e-05],
        [8.5129e-05],
        [2.1987e-04],
        [8.6504e-04]], device='cuda:0')/tensor([[1.1256e-04, 2.6082e-04, 6.2080e-05, 2.5836e-04, 4.2891e-04, 2.5274e-04,
         2.9688e-04, 5.8869e-04, 6.8806e-04, 1.2761e-04, 3.1883e-04, 1.4901e-04,
         3.4137e-05, 8.5129e-05, 2.1987e-04, 8.6504e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6843e-04, 1.1740e-03, 1.1256e-04],
        [6.5897e-04, 3.2580e-03, 2.6082e-04],
        [4.6839e-04, 8.2532e-03, 6.2080e-05],
        [4.1724e-04, 5.5136e-03, 2.5836e-04],
        [5.1016e-04, 6.5544e-03, 4.2891e-04],
        [2.5324e-04, 5.3541e-03, 2.5274e-04],
        [7.2824e-04, 6.3570e-03, 2.9688e-04],
        [3.6969e-04, 2.1093e-03, 5.8869e-04],
        [3.3149e-03, 1.4989e-02, 6.8806e-04],
        [5.9735e-04, 1.2334e-03, 1.2761e-04],
        [9.9373e-04, 2.6455e-03, 3.1883e-04],
        [5.3088e-04, 1.1155e-03, 1.4901e-04],
        [2.0705e-04, 4.1251e-03, 3.4137e-05],
        [1.0396e-03, 2.5412e-03, 8.5129e-05],
        [2.3280e-04, 3.9678e-03, 2.1987e-04],
        [7.8892e-04, 1.3883e-03, 8.6504e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[6.0568e-04],
        [3.2157e-04],
        [1.2627e-05],
        [3.5039e-03]], device='cuda:0')/tensor([[6.0568e-04, 3.2157e-04, 1.2627e-05, 3.5039e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.5630e-03],
        [1.9764e-03],
        [2.3973e-06],
        [4.9580e-03]], device='cuda:0')/tensor([[1.5630e-03, 1.9764e-03, 2.3973e-06, 4.9580e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.5082e-04],
        [9.3536e-05],
        [3.2159e-06],
        [2.9587e-04]], device='cuda:0')/tensor([[3.5082e-04, 9.3536e-05, 3.2159e-06, 2.9587e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[6.0568e-04, 1.5630e-03, 3.5082e-04],
        [3.2157e-04, 1.9764e-03, 9.3536e-05],
        [1.2627e-05, 2.3973e-06, 3.2159e-06],
        [3.5039e-03, 4.9580e-03, 2.9587e-04]], device='cuda:0')
acc:  0.5
Time taken to execute the de NLI task with prompt type passive, variation 5 and batchsize 16: 0:01:02.574661
path ['42', 'de', 'flan', 'NLI', 'passive', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI auxiliary 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 372.39it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0012],
        [0.0003],
        [0.0008],
        [0.0003],
        [0.0008],
        [0.0017],
        [0.0011],
        [0.0012],
        [0.0015],
        [0.0003],
        [0.0008],
        [0.0004],
        [0.0004],
        [0.0008],
        [0.0003]], device='cuda:0')/tensor([[0.0011, 0.0012, 0.0003, 0.0008, 0.0003, 0.0008, 0.0017, 0.0011, 0.0012,
         0.0015, 0.0003, 0.0008, 0.0004, 0.0004, 0.0008, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0013],
        [0.0012],
        [0.0005],
        [0.0006],
        [0.0080],
        [0.0038],
        [0.0030],
        [0.0013],
        [0.0003],
        [0.0002],
        [0.0016],
        [0.0006],
        [0.0031],
        [0.0008],
        [0.0008]], device='cuda:0')/tensor([[0.0018, 0.0013, 0.0012, 0.0005, 0.0006, 0.0080, 0.0038, 0.0030, 0.0013,
         0.0003, 0.0002, 0.0016, 0.0006, 0.0031, 0.0008, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.5145e-04],
        [1.9154e-04],
        [1.9193e-04],
        [2.0014e-04],
        [8.1764e-05],
        [6.4534e-04],
        [4.0482e-04],
        [4.8045e-04],
        [3.1052e-04],
        [6.2809e-04],
        [1.7488e-04],
        [4.7503e-04],
        [1.9630e-04],
        [7.8269e-05],
        [4.5877e-05],
        [5.2570e-04]], device='cuda:0')/tensor([[5.5145e-04, 1.9154e-04, 1.9193e-04, 2.0014e-04, 8.1764e-05, 6.4534e-04,
         4.0482e-04, 4.8045e-04, 3.1052e-04, 6.2809e-04, 1.7488e-04, 4.7503e-04,
         1.9630e-04, 7.8269e-05, 4.5877e-05, 5.2570e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0505e-03, 1.7955e-03, 5.5145e-04],
        [1.2264e-03, 1.3226e-03, 1.9154e-04],
        [3.1838e-04, 1.1529e-03, 1.9193e-04],
        [7.6218e-04, 4.8074e-04, 2.0014e-04],
        [3.1532e-04, 6.1025e-04, 8.1764e-05],
        [8.4607e-04, 7.9612e-03, 6.4534e-04],
        [1.7462e-03, 3.8416e-03, 4.0482e-04],
        [1.0878e-03, 2.9755e-03, 4.8045e-04],
        [1.2185e-03, 1.2973e-03, 3.1052e-04],
        [1.5443e-03, 3.3326e-04, 6.2809e-04],
        [3.1855e-04, 1.9040e-04, 1.7488e-04],
        [7.7304e-04, 1.6389e-03, 4.7503e-04],
        [4.1566e-04, 6.3643e-04, 1.9630e-04],
        [3.5216e-04, 3.0914e-03, 7.8269e-05],
        [8.4494e-04, 7.7264e-04, 4.5877e-05],
        [2.6487e-04, 7.9800e-04, 5.2570e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0007],
        [0.0005],
        [0.0059],
        [0.0001],
        [0.0008],
        [0.0015],
        [0.0004],
        [0.0005],
        [0.0002],
        [0.0008],
        [0.0005]], device='cuda:0')/tensor([[0.0015, 0.0003, 0.0005, 0.0002, 0.0004, 0.0007, 0.0005, 0.0059, 0.0001,
         0.0008, 0.0015, 0.0004, 0.0005, 0.0002, 0.0008, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0008],
        [0.0013],
        [0.0006],
        [0.0011],
        [0.0018],
        [0.0008],
        [0.0100],
        [0.0029],
        [0.0009],
        [0.0012],
        [0.0014],
        [0.0007],
        [0.0004],
        [0.0006],
        [0.0009]], device='cuda:0')/tensor([[0.0020, 0.0008, 0.0013, 0.0006, 0.0011, 0.0018, 0.0008, 0.0100, 0.0029,
         0.0009, 0.0012, 0.0014, 0.0007, 0.0004, 0.0006, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5552e-04],
        [9.3896e-05],
        [5.6570e-05],
        [5.5419e-05],
        [4.4546e-05],
        [9.7112e-05],
        [8.9614e-05],
        [1.8930e-03],
        [2.2195e-04],
        [1.7598e-04],
        [1.6763e-04],
        [2.0599e-04],
        [9.5874e-05],
        [1.1529e-04],
        [9.3682e-05],
        [1.2366e-04]], device='cuda:0')/tensor([[1.5552e-04, 9.3896e-05, 5.6570e-05, 5.5419e-05, 4.4546e-05, 9.7112e-05,
         8.9614e-05, 1.8930e-03, 2.2195e-04, 1.7598e-04, 1.6763e-04, 2.0599e-04,
         9.5874e-05, 1.1529e-04, 9.3682e-05, 1.2366e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5198e-03, 2.0491e-03, 1.5552e-04],
        [2.6031e-04, 8.2272e-04, 9.3896e-05],
        [4.9423e-04, 1.2931e-03, 5.6570e-05],
        [1.8872e-04, 5.6421e-04, 5.5419e-05],
        [3.7598e-04, 1.0689e-03, 4.4546e-05],
        [6.5564e-04, 1.7625e-03, 9.7112e-05],
        [5.3472e-04, 8.1393e-04, 8.9614e-05],
        [5.9274e-03, 1.0037e-02, 1.8930e-03],
        [1.3005e-04, 2.9073e-03, 2.2195e-04],
        [7.6097e-04, 9.0502e-04, 1.7598e-04],
        [1.4852e-03, 1.2314e-03, 1.6763e-04],
        [3.5137e-04, 1.3710e-03, 2.0599e-04],
        [4.7252e-04, 7.4675e-04, 9.5874e-05],
        [2.0563e-04, 4.3702e-04, 1.1529e-04],
        [7.9745e-04, 6.1913e-04, 9.3682e-05],
        [5.2547e-04, 9.1085e-04, 1.2366e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0012],
        [0.0006],
        [0.0008],
        [0.0008],
        [0.0014],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0005],
        [0.0004],
        [0.0008],
        [0.0011]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0012, 0.0006, 0.0008, 0.0008, 0.0014, 0.0003, 0.0009,
         0.0004, 0.0007, 0.0002, 0.0005, 0.0004, 0.0008, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0039],
        [0.0014],
        [0.0016],
        [0.0034],
        [0.0013],
        [0.0024],
        [0.0044],
        [0.0007],
        [0.0009],
        [0.0023],
        [0.0062],
        [0.0030],
        [0.0012],
        [0.0007],
        [0.0066],
        [0.0018]], device='cuda:0')/tensor([[0.0039, 0.0014, 0.0016, 0.0034, 0.0013, 0.0024, 0.0044, 0.0007, 0.0009,
         0.0023, 0.0062, 0.0030, 0.0012, 0.0007, 0.0066, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0004],
        [0.0003],
        [0.0007],
        [0.0006],
        [0.0005],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0002],
        [0.0006],
        [0.0001],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0010]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0007, 0.0006, 0.0005, 0.0007, 0.0005, 0.0003, 0.0001,
         0.0002, 0.0006, 0.0001, 0.0003, 0.0002, 0.0003, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0039, 0.0004],
        [0.0004, 0.0014, 0.0003],
        [0.0012, 0.0016, 0.0007],
        [0.0006, 0.0034, 0.0006],
        [0.0008, 0.0013, 0.0005],
        [0.0008, 0.0024, 0.0007],
        [0.0014, 0.0044, 0.0005],
        [0.0003, 0.0007, 0.0003],
        [0.0009, 0.0009, 0.0001],
        [0.0004, 0.0023, 0.0002],
        [0.0007, 0.0062, 0.0006],
        [0.0002, 0.0030, 0.0001],
        [0.0005, 0.0012, 0.0003],
        [0.0004, 0.0007, 0.0002],
        [0.0008, 0.0066, 0.0003],
        [0.0011, 0.0018, 0.0010]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0010],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0005],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0015],
        [0.0008],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0005, 0.0003, 0.0004, 0.0002, 0.0004, 0.0006, 0.0003,
         0.0005, 0.0006, 0.0005, 0.0004, 0.0015, 0.0008, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0002],
        [0.0010],
        [0.0011],
        [0.0020],
        [0.0022],
        [0.0002],
        [0.0018],
        [0.0030],
        [0.0006],
        [0.0019],
        [0.0016],
        [0.0037],
        [0.0006],
        [0.0022],
        [0.0046],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0011, 0.0020, 0.0022, 0.0002, 0.0018, 0.0030, 0.0006,
         0.0019, 0.0016, 0.0037, 0.0006, 0.0022, 0.0046, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0003],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0001],
        [0.0009],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0014],
        [0.0002],
        [0.0006],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0002, 0.0002, 0.0002, 0.0001, 0.0009, 0.0003, 0.0002,
         0.0002, 0.0002, 0.0002, 0.0014, 0.0002, 0.0006, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0002, 0.0002, 0.0003],
        [0.0010, 0.0010, 0.0002],
        [0.0005, 0.0011, 0.0002],
        [0.0003, 0.0020, 0.0002],
        [0.0004, 0.0022, 0.0002],
        [0.0002, 0.0002, 0.0001],
        [0.0004, 0.0018, 0.0009],
        [0.0006, 0.0030, 0.0003],
        [0.0003, 0.0006, 0.0002],
        [0.0005, 0.0019, 0.0002],
        [0.0006, 0.0016, 0.0002],
        [0.0005, 0.0037, 0.0002],
        [0.0004, 0.0006, 0.0014],
        [0.0015, 0.0022, 0.0002],
        [0.0008, 0.0046, 0.0006],
        [0.0004, 0.0005, 0.0002]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0004],
        [0.0003],
        [0.0021],
        [0.0010],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0024],
        [0.0006],
        [0.0002],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0005, 0.0004, 0.0003, 0.0021, 0.0010, 0.0005, 0.0005, 0.0004, 0.0007,
         0.0002, 0.0004, 0.0024, 0.0006, 0.0002, 0.0006, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0106],
        [0.0018],
        [0.0003],
        [0.0032],
        [0.0040],
        [0.0012],
        [0.0015],
        [0.0011],
        [0.0030],
        [0.0003],
        [0.0012],
        [0.0073],
        [0.0012],
        [0.0001],
        [0.0020],
        [0.0047]], device='cuda:0')/tensor([[0.0106, 0.0018, 0.0003, 0.0032, 0.0040, 0.0012, 0.0015, 0.0011, 0.0030,
         0.0003, 0.0012, 0.0073, 0.0012, 0.0001, 0.0020, 0.0047]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.4254e-04],
        [2.4655e-04],
        [5.7166e-05],
        [4.1053e-04],
        [2.1664e-04],
        [4.8046e-04],
        [2.1104e-04],
        [1.9692e-04],
        [1.9761e-04],
        [3.9096e-05],
        [2.7450e-04],
        [2.3030e-04],
        [2.0790e-04],
        [4.3797e-05],
        [5.1365e-04],
        [4.8315e-04]], device='cuda:0')/tensor([[2.4254e-04, 2.4655e-04, 5.7166e-05, 4.1053e-04, 2.1664e-04, 4.8046e-04,
         2.1104e-04, 1.9692e-04, 1.9761e-04, 3.9096e-05, 2.7450e-04, 2.3030e-04,
         2.0790e-04, 4.3797e-05, 5.1365e-04, 4.8315e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7270e-04, 1.0584e-02, 2.4254e-04],
        [4.3770e-04, 1.8156e-03, 2.4655e-04],
        [2.7094e-04, 3.4565e-04, 5.7166e-05],
        [2.1295e-03, 3.1951e-03, 4.1053e-04],
        [1.0483e-03, 3.9618e-03, 2.1664e-04],
        [5.0608e-04, 1.2398e-03, 4.8046e-04],
        [4.7515e-04, 1.4892e-03, 2.1104e-04],
        [4.0275e-04, 1.1474e-03, 1.9692e-04],
        [6.5150e-04, 2.9899e-03, 1.9761e-04],
        [1.5124e-04, 2.6611e-04, 3.9096e-05],
        [4.1587e-04, 1.2413e-03, 2.7450e-04],
        [2.3717e-03, 7.3313e-03, 2.3030e-04],
        [6.0140e-04, 1.2499e-03, 2.0790e-04],
        [1.8586e-04, 1.4181e-04, 4.3797e-05],
        [5.9987e-04, 1.9527e-03, 5.1365e-04],
        [1.2917e-03, 4.6754e-03, 4.8315e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0005],
        [0.0011],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0011],
        [0.0007],
        [0.0003],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0006],
        [0.0004],
        [0.0015]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0005, 0.0011, 0.0004, 0.0005, 0.0003, 0.0011, 0.0007,
         0.0003, 0.0006, 0.0006, 0.0009, 0.0006, 0.0004, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0001],
        [0.0013],
        [0.0026],
        [0.0035],
        [0.0016],
        [0.0023],
        [0.0003],
        [0.0017],
        [0.0009],
        [0.0023],
        [0.0018],
        [0.0012],
        [0.0008],
        [0.0012],
        [0.0010],
        [0.0020]], device='cuda:0')/tensor([[0.0001, 0.0013, 0.0026, 0.0035, 0.0016, 0.0023, 0.0003, 0.0017, 0.0009,
         0.0023, 0.0018, 0.0012, 0.0008, 0.0012, 0.0010, 0.0020]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0382e-04],
        [1.4643e-04],
        [1.2288e-04],
        [1.9858e-04],
        [3.8012e-04],
        [2.9854e-04],
        [1.8358e-04],
        [1.7938e-04],
        [2.4818e-04],
        [7.4469e-05],
        [1.7651e-04],
        [4.9799e-05],
        [3.5981e-05],
        [5.0705e-04],
        [1.6311e-04],
        [3.3290e-04]], device='cuda:0')/tensor([[1.0382e-04, 1.4643e-04, 1.2288e-04, 1.9858e-04, 3.8012e-04, 2.9854e-04,
         1.8358e-04, 1.7938e-04, 2.4818e-04, 7.4469e-05, 1.7651e-04, 4.9799e-05,
         3.5981e-05, 5.0705e-04, 1.6311e-04, 3.3290e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[2.6766e-04, 1.4360e-04, 1.0382e-04],
        [3.4435e-04, 1.2806e-03, 1.4643e-04],
        [4.5992e-04, 2.6128e-03, 1.2288e-04],
        [1.1206e-03, 3.5067e-03, 1.9858e-04],
        [3.9244e-04, 1.6155e-03, 3.8012e-04],
        [4.9548e-04, 2.2555e-03, 2.9854e-04],
        [2.8191e-04, 3.3163e-04, 1.8358e-04],
        [1.0772e-03, 1.7010e-03, 1.7938e-04],
        [6.5613e-04, 8.7694e-04, 2.4818e-04],
        [2.7660e-04, 2.2554e-03, 7.4469e-05],
        [6.0343e-04, 1.8456e-03, 1.7651e-04],
        [6.3480e-04, 1.2304e-03, 4.9799e-05],
        [8.7320e-04, 7.5036e-04, 3.5981e-05],
        [5.5488e-04, 1.1877e-03, 5.0705e-04],
        [4.0503e-04, 1.0234e-03, 1.6311e-04],
        [1.5186e-03, 2.0455e-03, 3.3290e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0008],
        [0.0011],
        [0.0005],
        [0.0008],
        [0.0021],
        [0.0009],
        [0.0008],
        [0.0005],
        [0.0013],
        [0.0024],
        [0.0011],
        [0.0005],
        [0.0011],
        [0.0008],
        [0.0005]], device='cuda:0')/tensor([[0.0011, 0.0008, 0.0011, 0.0005, 0.0008, 0.0021, 0.0009, 0.0008, 0.0005,
         0.0013, 0.0024, 0.0011, 0.0005, 0.0011, 0.0008, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0011],
        [0.0019],
        [0.0014],
        [0.0004],
        [0.0023],
        [0.0005],
        [0.0038],
        [0.0007],
        [0.0013],
        [0.0020],
        [0.0004],
        [0.0032],
        [0.0021],
        [0.0001],
        [0.0008]], device='cuda:0')/tensor([[0.0007, 0.0011, 0.0019, 0.0014, 0.0004, 0.0023, 0.0005, 0.0038, 0.0007,
         0.0013, 0.0020, 0.0004, 0.0032, 0.0021, 0.0001, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0002],
        [0.0003],
        [0.0001],
        [0.0001],
        [0.0005],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0008],
        [0.0002],
        [0.0001],
        [0.0003],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0003, 0.0001, 0.0001, 0.0005, 0.0003, 0.0004, 0.0003,
         0.0007, 0.0008, 0.0002, 0.0001, 0.0003, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0011, 0.0007, 0.0002],
        [0.0008, 0.0011, 0.0002],
        [0.0011, 0.0019, 0.0003],
        [0.0005, 0.0014, 0.0001],
        [0.0008, 0.0004, 0.0001],
        [0.0021, 0.0023, 0.0005],
        [0.0009, 0.0005, 0.0003],
        [0.0008, 0.0038, 0.0004],
        [0.0005, 0.0007, 0.0003],
        [0.0013, 0.0013, 0.0007],
        [0.0024, 0.0020, 0.0008],
        [0.0011, 0.0004, 0.0002],
        [0.0005, 0.0032, 0.0001],
        [0.0011, 0.0021, 0.0003],
        [0.0008, 0.0001, 0.0005],
        [0.0005, 0.0008, 0.0002]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0006],
        [0.0006],
        [0.0007],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0004],
        [0.0005],
        [0.0011],
        [0.0006],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0006, 0.0006, 0.0006, 0.0007, 0.0002, 0.0003, 0.0004, 0.0003, 0.0005,
         0.0008, 0.0004, 0.0005, 0.0011, 0.0006, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0007],
        [0.0009],
        [0.0016],
        [0.0001],
        [0.0014],
        [0.0030],
        [0.0014],
        [0.0008],
        [0.0009],
        [0.0013],
        [0.0010],
        [0.0122],
        [0.0015],
        [0.0030],
        [0.0066]], device='cuda:0')/tensor([[0.0007, 0.0007, 0.0009, 0.0016, 0.0001, 0.0014, 0.0030, 0.0014, 0.0008,
         0.0009, 0.0013, 0.0010, 0.0122, 0.0015, 0.0030, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0001],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0001],
        [0.0003],
        [0.0001],
        [0.0013],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0019]], device='cuda:0')/tensor([[0.0001, 0.0006, 0.0005, 0.0002, 0.0004, 0.0001, 0.0003, 0.0001, 0.0013,
         0.0002, 0.0002, 0.0002, 0.0003, 0.0003, 0.0006, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0007, 0.0001],
        [0.0006, 0.0007, 0.0006],
        [0.0006, 0.0009, 0.0005],
        [0.0007, 0.0016, 0.0002],
        [0.0002, 0.0001, 0.0004],
        [0.0003, 0.0014, 0.0001],
        [0.0004, 0.0030, 0.0003],
        [0.0003, 0.0014, 0.0001],
        [0.0005, 0.0008, 0.0013],
        [0.0008, 0.0009, 0.0002],
        [0.0004, 0.0013, 0.0002],
        [0.0005, 0.0010, 0.0002],
        [0.0011, 0.0122, 0.0003],
        [0.0006, 0.0015, 0.0003],
        [0.0005, 0.0030, 0.0006],
        [0.0008, 0.0066, 0.0019]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0006],
        [0.0005],
        [0.0012],
        [0.0005]], device='cuda:0')/tensor([[0.0006, 0.0005, 0.0012, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0015],
        [0.0014],
        [0.0018],
        [0.0002]], device='cuda:0')/tensor([[0.0015, 0.0014, 0.0018, 0.0002]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[6.8815e-05],
        [1.2193e-04],
        [5.5207e-04],
        [3.5400e-04]], device='cuda:0')/tensor([[6.8815e-05, 1.2193e-04, 5.5207e-04, 3.5400e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[6.0880e-04, 1.4917e-03, 6.8815e-05],
        [5.4857e-04, 1.3803e-03, 1.2193e-04],
        [1.2127e-03, 1.8416e-03, 5.5207e-04],
        [5.2559e-04, 1.7461e-04, 3.5400e-04]], device='cuda:0')
acc:  0.4696969696969697
Time taken to execute the de NLI task with prompt type auxiliary, variation 0 and batchsize 16: 0:01:01.817067
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI auxiliary 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 370.83it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0556e-03],
        [2.2841e-05],
        [1.6012e-05],
        [1.1597e-03],
        [3.4987e-04],
        [1.6015e-05],
        [1.4429e-04],
        [1.6800e-05],
        [4.5708e-04],
        [1.9884e-03],
        [7.1141e-04],
        [3.1571e-05],
        [3.7613e-04],
        [2.3598e-04],
        [1.2569e-04],
        [4.3714e-04]], device='cuda:0')/tensor([[1.0556e-03, 2.2841e-05, 1.6012e-05, 1.1597e-03, 3.4987e-04, 1.6015e-05,
         1.4429e-04, 1.6800e-05, 4.5708e-04, 1.9884e-03, 7.1141e-04, 3.1571e-05,
         3.7613e-04, 2.3598e-04, 1.2569e-04, 4.3714e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0387e-03],
        [7.5554e-06],
        [6.1388e-06],
        [4.1646e-03],
        [3.1684e-04],
        [1.6537e-05],
        [6.9712e-04],
        [2.0709e-06],
        [6.6233e-04],
        [2.9664e-03],
        [9.1937e-04],
        [9.2132e-06],
        [8.8467e-05],
        [3.4634e-04],
        [4.7861e-05],
        [9.6520e-04]], device='cuda:0')/tensor([[1.0387e-03, 7.5554e-06, 6.1388e-06, 4.1646e-03, 3.1684e-04, 1.6537e-05,
         6.9712e-04, 2.0709e-06, 6.6233e-04, 2.9664e-03, 9.1937e-04, 9.2132e-06,
         8.8467e-05, 3.4634e-04, 4.7861e-05, 9.6520e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.6824e-04],
        [5.4854e-05],
        [1.7692e-05],
        [1.4789e-04],
        [9.4817e-05],
        [8.2137e-06],
        [1.1624e-04],
        [1.0122e-05],
        [1.0746e-04],
        [2.8101e-04],
        [5.7570e-04],
        [1.8930e-05],
        [1.2599e-04],
        [1.9529e-04],
        [6.2541e-05],
        [3.4808e-04]], device='cuda:0')/tensor([[3.6824e-04, 5.4854e-05, 1.7692e-05, 1.4789e-04, 9.4817e-05, 8.2137e-06,
         1.1624e-04, 1.0122e-05, 1.0746e-04, 2.8101e-04, 5.7570e-04, 1.8930e-05,
         1.2599e-04, 1.9529e-04, 6.2541e-05, 3.4808e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0556e-03, 1.0387e-03, 3.6824e-04],
        [2.2841e-05, 7.5554e-06, 5.4854e-05],
        [1.6012e-05, 6.1388e-06, 1.7692e-05],
        [1.1597e-03, 4.1646e-03, 1.4789e-04],
        [3.4987e-04, 3.1684e-04, 9.4817e-05],
        [1.6015e-05, 1.6537e-05, 8.2137e-06],
        [1.4429e-04, 6.9712e-04, 1.1624e-04],
        [1.6800e-05, 2.0709e-06, 1.0122e-05],
        [4.5708e-04, 6.6233e-04, 1.0746e-04],
        [1.9884e-03, 2.9664e-03, 2.8101e-04],
        [7.1141e-04, 9.1937e-04, 5.7570e-04],
        [3.1571e-05, 9.2132e-06, 1.8930e-05],
        [3.7613e-04, 8.8467e-05, 1.2599e-04],
        [2.3598e-04, 3.4634e-04, 1.9529e-04],
        [1.2569e-04, 4.7861e-05, 6.2541e-05],
        [4.3714e-04, 9.6520e-04, 3.4808e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.5481e-04],
        [2.1690e-04],
        [7.9243e-05],
        [1.7575e-05],
        [1.8757e-03],
        [1.6796e-04],
        [2.6056e-05],
        [1.1416e-03],
        [8.7681e-05],
        [2.1422e-04],
        [2.4479e-04],
        [4.2098e-04],
        [2.8688e-04],
        [1.1487e-04],
        [3.7903e-05],
        [3.4819e-04]], device='cuda:0')/tensor([[1.5481e-04, 2.1690e-04, 7.9243e-05, 1.7575e-05, 1.8757e-03, 1.6796e-04,
         2.6056e-05, 1.1416e-03, 8.7681e-05, 2.1422e-04, 2.4479e-04, 4.2098e-04,
         2.8688e-04, 1.1487e-04, 3.7903e-05, 3.4819e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.6613e-04],
        [4.5943e-05],
        [2.9603e-04],
        [3.5438e-05],
        [1.0892e-03],
        [2.5999e-04],
        [1.2720e-05],
        [8.8945e-04],
        [1.6120e-04],
        [1.7132e-04],
        [1.7695e-03],
        [2.1073e-04],
        [1.6884e-04],
        [1.6335e-04],
        [1.6087e-05],
        [6.7739e-04]], device='cuda:0')/tensor([[2.6613e-04, 4.5943e-05, 2.9603e-04, 3.5438e-05, 1.0892e-03, 2.5999e-04,
         1.2720e-05, 8.8945e-04, 1.6120e-04, 1.7132e-04, 1.7695e-03, 2.1073e-04,
         1.6884e-04, 1.6335e-04, 1.6087e-05, 6.7739e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.4444e-05],
        [1.5848e-04],
        [7.2386e-05],
        [4.2675e-05],
        [3.6725e-04],
        [6.3553e-05],
        [2.9490e-05],
        [3.4473e-04],
        [1.1704e-04],
        [1.5667e-04],
        [1.8405e-04],
        [7.6872e-05],
        [3.3407e-05],
        [1.7048e-04],
        [3.0052e-05],
        [2.3197e-04]], device='cuda:0')/tensor([[6.4444e-05, 1.5848e-04, 7.2386e-05, 4.2675e-05, 3.6725e-04, 6.3553e-05,
         2.9490e-05, 3.4473e-04, 1.1704e-04, 1.5667e-04, 1.8405e-04, 7.6872e-05,
         3.3407e-05, 1.7048e-04, 3.0052e-05, 2.3197e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5481e-04, 2.6613e-04, 6.4444e-05],
        [2.1690e-04, 4.5943e-05, 1.5848e-04],
        [7.9243e-05, 2.9603e-04, 7.2386e-05],
        [1.7575e-05, 3.5438e-05, 4.2675e-05],
        [1.8757e-03, 1.0892e-03, 3.6725e-04],
        [1.6796e-04, 2.5999e-04, 6.3553e-05],
        [2.6056e-05, 1.2720e-05, 2.9490e-05],
        [1.1416e-03, 8.8945e-04, 3.4473e-04],
        [8.7681e-05, 1.6120e-04, 1.1704e-04],
        [2.1422e-04, 1.7132e-04, 1.5667e-04],
        [2.4479e-04, 1.7695e-03, 1.8405e-04],
        [4.2098e-04, 2.1073e-04, 7.6872e-05],
        [2.8688e-04, 1.6884e-04, 3.3407e-05],
        [1.1487e-04, 1.6335e-04, 1.7048e-04],
        [3.7903e-05, 1.6087e-05, 3.0052e-05],
        [3.4819e-04, 6.7739e-04, 2.3197e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.9313e-04],
        [8.9917e-04],
        [3.4698e-05],
        [5.8436e-04],
        [9.8799e-05],
        [3.4881e-05],
        [1.1540e-04],
        [1.4359e-05],
        [1.1092e-03],
        [3.3766e-04],
        [3.1276e-04],
        [4.7190e-04],
        [1.6132e-04],
        [1.0461e-03],
        [2.1979e-04],
        [1.3911e-04]], device='cuda:0')/tensor([[6.9313e-04, 8.9917e-04, 3.4698e-05, 5.8436e-04, 9.8799e-05, 3.4881e-05,
         1.1540e-04, 1.4359e-05, 1.1092e-03, 3.3766e-04, 3.1276e-04, 4.7190e-04,
         1.6132e-04, 1.0461e-03, 2.1979e-04, 1.3911e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.7262e-04],
        [7.2995e-04],
        [7.3635e-05],
        [1.4921e-03],
        [4.2366e-05],
        [1.0468e-05],
        [6.5388e-04],
        [4.4367e-05],
        [2.9073e-03],
        [6.8039e-04],
        [2.1211e-04],
        [1.2906e-03],
        [1.4015e-04],
        [1.0438e-03],
        [2.6013e-04],
        [3.4090e-04]], device='cuda:0')/tensor([[2.7262e-04, 7.2995e-04, 7.3635e-05, 1.4921e-03, 4.2366e-05, 1.0468e-05,
         6.5388e-04, 4.4367e-05, 2.9073e-03, 6.8039e-04, 2.1211e-04, 1.2906e-03,
         1.4015e-04, 1.0438e-03, 2.6013e-04, 3.4090e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.6024e-04],
        [2.1816e-04],
        [1.1956e-04],
        [4.6361e-04],
        [7.1968e-05],
        [2.5109e-05],
        [1.6508e-04],
        [1.5153e-04],
        [3.3760e-04],
        [3.2022e-04],
        [1.0707e-04],
        [2.6037e-04],
        [2.7047e-04],
        [4.5794e-04],
        [1.9130e-04],
        [4.3870e-04]], device='cuda:0')/tensor([[2.6024e-04, 2.1816e-04, 1.1956e-04, 4.6361e-04, 7.1968e-05, 2.5109e-05,
         1.6508e-04, 1.5153e-04, 3.3760e-04, 3.2022e-04, 1.0707e-04, 2.6037e-04,
         2.7047e-04, 4.5794e-04, 1.9130e-04, 4.3870e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.9313e-04, 2.7262e-04, 2.6024e-04],
        [8.9917e-04, 7.2995e-04, 2.1816e-04],
        [3.4698e-05, 7.3635e-05, 1.1956e-04],
        [5.8436e-04, 1.4921e-03, 4.6361e-04],
        [9.8799e-05, 4.2366e-05, 7.1968e-05],
        [3.4881e-05, 1.0468e-05, 2.5109e-05],
        [1.1540e-04, 6.5388e-04, 1.6508e-04],
        [1.4359e-05, 4.4367e-05, 1.5153e-04],
        [1.1092e-03, 2.9073e-03, 3.3760e-04],
        [3.3766e-04, 6.8039e-04, 3.2022e-04],
        [3.1276e-04, 2.1211e-04, 1.0707e-04],
        [4.7190e-04, 1.2906e-03, 2.6037e-04],
        [1.6132e-04, 1.4015e-04, 2.7047e-04],
        [1.0461e-03, 1.0438e-03, 4.5794e-04],
        [2.1979e-04, 2.6013e-04, 1.9130e-04],
        [1.3911e-04, 3.4090e-04, 4.3870e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.0048e-03],
        [1.3409e-04],
        [9.0350e-04],
        [1.2149e-04],
        [1.1353e-04],
        [3.1191e-04],
        [1.9833e-04],
        [6.2204e-05],
        [9.0978e-05],
        [2.3636e-04],
        [2.3677e-04],
        [4.0144e-04],
        [7.5130e-04],
        [3.7872e-04],
        [4.5724e-04],
        [4.9611e-04]], device='cuda:0')/tensor([[2.0048e-03, 1.3409e-04, 9.0350e-04, 1.2149e-04, 1.1353e-04, 3.1191e-04,
         1.9833e-04, 6.2204e-05, 9.0978e-05, 2.3636e-04, 2.3677e-04, 4.0144e-04,
         7.5130e-04, 3.7872e-04, 4.5724e-04, 4.9611e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.0876e-04],
        [1.7146e-04],
        [1.1455e-03],
        [2.5999e-04],
        [4.0881e-05],
        [1.5390e-03],
        [8.8321e-05],
        [5.1684e-05],
        [2.3416e-04],
        [2.4596e-04],
        [3.1123e-04],
        [5.8419e-03],
        [9.6344e-04],
        [4.6788e-04],
        [1.3799e-03],
        [8.6902e-04]], device='cuda:0')/tensor([[7.0876e-04, 1.7146e-04, 1.1455e-03, 2.5999e-04, 4.0881e-05, 1.5390e-03,
         8.8321e-05, 5.1684e-05, 2.3416e-04, 2.4596e-04, 3.1123e-04, 5.8419e-03,
         9.6344e-04, 4.6788e-04, 1.3799e-03, 8.6902e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.1357e-04],
        [1.7571e-04],
        [3.0543e-04],
        [2.4289e-04],
        [2.0218e-04],
        [1.9534e-04],
        [2.9617e-05],
        [8.8590e-05],
        [1.1897e-04],
        [8.6661e-04],
        [1.4721e-04],
        [2.8466e-04],
        [4.2874e-04],
        [2.6060e-04],
        [6.7248e-05],
        [3.1182e-04]], device='cuda:0')/tensor([[2.1357e-04, 1.7571e-04, 3.0543e-04, 2.4289e-04, 2.0218e-04, 1.9534e-04,
         2.9617e-05, 8.8590e-05, 1.1897e-04, 8.6661e-04, 1.4721e-04, 2.8466e-04,
         4.2874e-04, 2.6060e-04, 6.7248e-05, 3.1182e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.0048e-03, 7.0876e-04, 2.1357e-04],
        [1.3409e-04, 1.7146e-04, 1.7571e-04],
        [9.0350e-04, 1.1455e-03, 3.0543e-04],
        [1.2149e-04, 2.5999e-04, 2.4289e-04],
        [1.1353e-04, 4.0881e-05, 2.0218e-04],
        [3.1191e-04, 1.5390e-03, 1.9534e-04],
        [1.9833e-04, 8.8321e-05, 2.9617e-05],
        [6.2204e-05, 5.1684e-05, 8.8590e-05],
        [9.0978e-05, 2.3416e-04, 1.1897e-04],
        [2.3636e-04, 2.4596e-04, 8.6661e-04],
        [2.3677e-04, 3.1123e-04, 1.4721e-04],
        [4.0144e-04, 5.8419e-03, 2.8466e-04],
        [7.5130e-04, 9.6344e-04, 4.2874e-04],
        [3.7872e-04, 4.6788e-04, 2.6060e-04],
        [4.5724e-04, 1.3799e-03, 6.7248e-05],
        [4.9611e-04, 8.6902e-04, 3.1182e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.6591e-05],
        [6.8857e-04],
        [9.4606e-04],
        [1.4153e-04],
        [1.4085e-04],
        [4.3747e-04],
        [1.0659e-04],
        [7.3227e-04],
        [2.4809e-04],
        [7.2825e-04],
        [2.5293e-04],
        [5.4015e-05],
        [3.0361e-04],
        [8.3978e-05],
        [2.9896e-04],
        [5.6990e-05]], device='cuda:0')/tensor([[6.6591e-05, 6.8857e-04, 9.4606e-04, 1.4153e-04, 1.4085e-04, 4.3747e-04,
         1.0659e-04, 7.3227e-04, 2.4809e-04, 7.2825e-04, 2.5293e-04, 5.4015e-05,
         3.0361e-04, 8.3978e-05, 2.9896e-04, 5.6990e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2224e-04],
        [4.1427e-03],
        [8.4820e-04],
        [3.9896e-04],
        [4.4183e-04],
        [7.8691e-04],
        [3.5058e-04],
        [2.2637e-03],
        [3.0360e-05],
        [7.6435e-04],
        [2.4174e-04],
        [8.6509e-06],
        [2.0791e-03],
        [2.5928e-04],
        [1.3915e-03],
        [5.4820e-05]], device='cuda:0')/tensor([[1.2224e-04, 4.1427e-03, 8.4820e-04, 3.9896e-04, 4.4183e-04, 7.8691e-04,
         3.5058e-04, 2.2637e-03, 3.0360e-05, 7.6435e-04, 2.4174e-04, 8.6509e-06,
         2.0791e-03, 2.5928e-04, 1.3915e-03, 5.4820e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6854e-05],
        [7.2992e-04],
        [1.7342e-03],
        [1.6304e-04],
        [4.1282e-04],
        [2.6045e-04],
        [3.0979e-04],
        [3.1664e-04],
        [2.1768e-04],
        [2.4884e-04],
        [1.7211e-04],
        [1.6289e-04],
        [8.9181e-05],
        [1.4449e-04],
        [1.7520e-04],
        [1.1073e-04]], device='cuda:0')/tensor([[5.6854e-05, 7.2992e-04, 1.7342e-03, 1.6304e-04, 4.1282e-04, 2.6045e-04,
         3.0979e-04, 3.1664e-04, 2.1768e-04, 2.4884e-04, 1.7211e-04, 1.6289e-04,
         8.9181e-05, 1.4449e-04, 1.7520e-04, 1.1073e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.6591e-05, 1.2224e-04, 5.6854e-05],
        [6.8857e-04, 4.1427e-03, 7.2992e-04],
        [9.4606e-04, 8.4820e-04, 1.7342e-03],
        [1.4153e-04, 3.9896e-04, 1.6304e-04],
        [1.4085e-04, 4.4183e-04, 4.1282e-04],
        [4.3747e-04, 7.8691e-04, 2.6045e-04],
        [1.0659e-04, 3.5058e-04, 3.0979e-04],
        [7.3227e-04, 2.2637e-03, 3.1664e-04],
        [2.4809e-04, 3.0360e-05, 2.1768e-04],
        [7.2825e-04, 7.6435e-04, 2.4884e-04],
        [2.5293e-04, 2.4174e-04, 1.7211e-04],
        [5.4015e-05, 8.6509e-06, 1.6289e-04],
        [3.0361e-04, 2.0791e-03, 8.9181e-05],
        [8.3978e-05, 2.5928e-04, 1.4449e-04],
        [2.9896e-04, 1.3915e-03, 1.7520e-04],
        [5.6990e-05, 5.4820e-05, 1.1073e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2458e-03],
        [3.7878e-04],
        [1.6706e-04],
        [8.2976e-04],
        [6.5327e-04],
        [1.4138e-03],
        [1.0788e-04],
        [1.3810e-03],
        [8.2399e-04],
        [1.0192e-03],
        [2.1591e-04],
        [2.3881e-04],
        [5.2482e-04],
        [3.9080e-05],
        [5.5167e-04],
        [1.1150e-04]], device='cuda:0')/tensor([[1.2458e-03, 3.7878e-04, 1.6706e-04, 8.2976e-04, 6.5327e-04, 1.4138e-03,
         1.0788e-04, 1.3810e-03, 8.2399e-04, 1.0192e-03, 2.1591e-04, 2.3881e-04,
         5.2482e-04, 3.9080e-05, 5.5167e-04, 1.1150e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5031e-03],
        [8.1601e-04],
        [2.8838e-05],
        [5.8295e-04],
        [5.0092e-04],
        [9.1763e-04],
        [7.8622e-05],
        [1.0612e-03],
        [4.1601e-04],
        [5.5830e-04],
        [1.2120e-04],
        [1.9079e-04],
        [6.6821e-04],
        [9.9525e-06],
        [3.1254e-04],
        [2.7201e-05]], device='cuda:0')/tensor([[1.5031e-03, 8.1601e-04, 2.8838e-05, 5.8295e-04, 5.0092e-04, 9.1763e-04,
         7.8622e-05, 1.0612e-03, 4.1601e-04, 5.5830e-04, 1.2120e-04, 1.9079e-04,
         6.6821e-04, 9.9525e-06, 3.1254e-04, 2.7201e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1013e-03],
        [3.4197e-04],
        [7.4249e-04],
        [2.3564e-04],
        [6.9990e-04],
        [4.1995e-04],
        [1.4487e-04],
        [5.4232e-04],
        [8.4986e-04],
        [2.8342e-04],
        [4.9679e-05],
        [1.3698e-04],
        [2.7999e-04],
        [1.2514e-04],
        [2.5489e-04],
        [4.1820e-05]], device='cuda:0')/tensor([[1.1013e-03, 3.4197e-04, 7.4249e-04, 2.3564e-04, 6.9990e-04, 4.1995e-04,
         1.4487e-04, 5.4232e-04, 8.4986e-04, 2.8342e-04, 4.9679e-05, 1.3698e-04,
         2.7999e-04, 1.2514e-04, 2.5489e-04, 4.1820e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2458e-03, 1.5031e-03, 1.1013e-03],
        [3.7878e-04, 8.1601e-04, 3.4197e-04],
        [1.6706e-04, 2.8838e-05, 7.4249e-04],
        [8.2976e-04, 5.8295e-04, 2.3564e-04],
        [6.5327e-04, 5.0092e-04, 6.9990e-04],
        [1.4138e-03, 9.1763e-04, 4.1995e-04],
        [1.0788e-04, 7.8622e-05, 1.4487e-04],
        [1.3810e-03, 1.0612e-03, 5.4232e-04],
        [8.2399e-04, 4.1601e-04, 8.4986e-04],
        [1.0192e-03, 5.5830e-04, 2.8342e-04],
        [2.1591e-04, 1.2120e-04, 4.9679e-05],
        [2.3881e-04, 1.9079e-04, 1.3698e-04],
        [5.2482e-04, 6.6821e-04, 2.7999e-04],
        [3.9080e-05, 9.9525e-06, 1.2514e-04],
        [5.5167e-04, 3.1254e-04, 2.5489e-04],
        [1.1150e-04, 2.7201e-05, 4.1820e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6009e-04],
        [1.0579e-04],
        [1.6210e-04],
        [6.0502e-04],
        [4.1304e-05],
        [7.1746e-05],
        [2.1112e-04],
        [6.9482e-04],
        [4.3998e-04],
        [1.8875e-03],
        [1.7470e-04],
        [5.8442e-05],
        [3.5323e-04],
        [4.2029e-04],
        [3.0876e-04],
        [2.4651e-04]], device='cuda:0')/tensor([[1.6009e-04, 1.0579e-04, 1.6210e-04, 6.0502e-04, 4.1304e-05, 7.1746e-05,
         2.1112e-04, 6.9482e-04, 4.3998e-04, 1.8875e-03, 1.7470e-04, 5.8442e-05,
         3.5323e-04, 4.2029e-04, 3.0876e-04, 2.4651e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.2322e-05],
        [1.0284e-04],
        [2.0831e-04],
        [1.1411e-03],
        [3.6696e-05],
        [3.3654e-05],
        [2.8602e-04],
        [2.3387e-04],
        [4.5339e-04],
        [7.8094e-03],
        [3.2671e-05],
        [6.0307e-06],
        [4.4063e-04],
        [2.6649e-03],
        [6.7616e-05],
        [2.9655e-04]], device='cuda:0')/tensor([[8.2322e-05, 1.0284e-04, 2.0831e-04, 1.1411e-03, 3.6696e-05, 3.3654e-05,
         2.8602e-04, 2.3387e-04, 4.5339e-04, 7.8094e-03, 3.2671e-05, 6.0307e-06,
         4.4063e-04, 2.6649e-03, 6.7616e-05, 2.9655e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.9442e-05],
        [3.3680e-05],
        [3.8335e-04],
        [4.1866e-04],
        [2.0707e-05],
        [8.6045e-05],
        [2.0215e-04],
        [4.0743e-05],
        [7.3913e-05],
        [2.2998e-04],
        [7.3215e-04],
        [4.6447e-05],
        [2.2637e-04],
        [1.2959e-04],
        [1.1146e-04],
        [2.4494e-04]], device='cuda:0')/tensor([[4.9442e-05, 3.3680e-05, 3.8335e-04, 4.1866e-04, 2.0707e-05, 8.6045e-05,
         2.0215e-04, 4.0743e-05, 7.3913e-05, 2.2998e-04, 7.3215e-04, 4.6447e-05,
         2.2637e-04, 1.2959e-04, 1.1146e-04, 2.4494e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6009e-04, 8.2322e-05, 4.9442e-05],
        [1.0579e-04, 1.0284e-04, 3.3680e-05],
        [1.6210e-04, 2.0831e-04, 3.8335e-04],
        [6.0502e-04, 1.1411e-03, 4.1866e-04],
        [4.1304e-05, 3.6696e-05, 2.0707e-05],
        [7.1746e-05, 3.3654e-05, 8.6045e-05],
        [2.1112e-04, 2.8602e-04, 2.0215e-04],
        [6.9482e-04, 2.3387e-04, 4.0743e-05],
        [4.3998e-04, 4.5339e-04, 7.3913e-05],
        [1.8875e-03, 7.8094e-03, 2.2998e-04],
        [1.7470e-04, 3.2671e-05, 7.3215e-04],
        [5.8442e-05, 6.0307e-06, 4.6447e-05],
        [3.5323e-04, 4.4063e-04, 2.2637e-04],
        [4.2029e-04, 2.6649e-03, 1.2959e-04],
        [3.0876e-04, 6.7616e-05, 1.1146e-04],
        [2.4651e-04, 2.9655e-04, 2.4494e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.3390e-05],
        [2.8103e-04],
        [1.4025e-04],
        [1.1600e-04],
        [7.5161e-04],
        [7.6378e-04],
        [4.1541e-05],
        [1.6618e-03],
        [3.8272e-04],
        [1.0267e-04],
        [3.4721e-04],
        [2.7402e-04],
        [5.2408e-04],
        [1.9425e-04],
        [3.1443e-04],
        [3.0296e-05]], device='cuda:0')/tensor([[9.3390e-05, 2.8103e-04, 1.4025e-04, 1.1600e-04, 7.5161e-04, 7.6378e-04,
         4.1541e-05, 1.6618e-03, 3.8272e-04, 1.0267e-04, 3.4721e-04, 2.7402e-04,
         5.2408e-04, 1.9425e-04, 3.1443e-04, 3.0296e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.9522e-04],
        [6.4653e-04],
        [2.5104e-04],
        [1.0080e-04],
        [1.1120e-03],
        [3.0606e-03],
        [2.7086e-05],
        [6.8275e-04],
        [6.2644e-04],
        [2.9207e-04],
        [3.3959e-03],
        [3.8481e-04],
        [1.9231e-04],
        [3.7968e-04],
        [9.9170e-05],
        [1.2197e-05]], device='cuda:0')/tensor([[3.9522e-04, 6.4653e-04, 2.5104e-04, 1.0080e-04, 1.1120e-03, 3.0606e-03,
         2.7086e-05, 6.8275e-04, 6.2644e-04, 2.9207e-04, 3.3959e-03, 3.8481e-04,
         1.9231e-04, 3.7968e-04, 9.9170e-05, 1.2197e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[1.6863e-04],
        [7.1294e-04],
        [2.1883e-04],
        [1.0689e-04],
        [6.0491e-04],
        [4.3193e-04],
        [3.2435e-05],
        [5.7440e-04],
        [2.2887e-04],
        [1.0129e-04],
        [1.5553e-04],
        [2.8405e-04],
        [1.3072e-04],
        [1.6581e-04],
        [1.3428e-04],
        [4.2233e-05]], device='cuda:0')/tensor([[1.6863e-04, 7.1294e-04, 2.1883e-04, 1.0689e-04, 6.0491e-04, 4.3193e-04,
         3.2435e-05, 5.7440e-04, 2.2887e-04, 1.0129e-04, 1.5553e-04, 2.8405e-04,
         1.3072e-04, 1.6581e-04, 1.3428e-04, 4.2233e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.3390e-05, 3.9522e-04, 1.6863e-04],
        [2.8103e-04, 6.4653e-04, 7.1294e-04],
        [1.4025e-04, 2.5104e-04, 2.1883e-04],
        [1.1600e-04, 1.0080e-04, 1.0689e-04],
        [7.5161e-04, 1.1120e-03, 6.0491e-04],
        [7.6378e-04, 3.0606e-03, 4.3193e-04],
        [4.1541e-05, 2.7086e-05, 3.2435e-05],
        [1.6618e-03, 6.8275e-04, 5.7440e-04],
        [3.8272e-04, 6.2644e-04, 2.2887e-04],
        [1.0267e-04, 2.9207e-04, 1.0129e-04],
        [3.4721e-04, 3.3959e-03, 1.5553e-04],
        [2.7402e-04, 3.8481e-04, 2.8405e-04],
        [5.2408e-04, 1.9231e-04, 1.3072e-04],
        [1.9425e-04, 3.7968e-04, 1.6581e-04],
        [3.1443e-04, 9.9170e-05, 1.3428e-04],
        [3.0296e-05, 1.2197e-05, 4.2233e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[7.5180e-05],
        [1.2406e-04],
        [1.3218e-03],
        [1.0279e-03]], device='cuda:0')/tensor([[7.5180e-05, 1.2406e-04, 1.3218e-03, 1.0279e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.2072e-04],
        [4.6061e-05],
        [2.0396e-03],
        [1.5972e-03]], device='cuda:0')/tensor([[1.2072e-04, 4.6061e-05, 2.0396e-03, 1.5972e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.8759e-05],
        [1.7862e-04],
        [3.5505e-04],
        [4.4425e-04]], device='cuda:0')/tensor([[2.8759e-05, 1.7862e-04, 3.5505e-04, 4.4425e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[7.5180e-05, 1.2072e-04, 2.8759e-05],
        [1.2406e-04, 4.6061e-05, 1.7862e-04],
        [1.3218e-03, 2.0396e-03, 3.5505e-04],
        [1.0279e-03, 1.5972e-03, 4.4425e-04]], device='cuda:0')
acc:  0.4015151515151515
Time taken to execute the de NLI task with prompt type auxiliary, variation 1 and batchsize 16: 0:01:02.031507
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI auxiliary 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 363.41it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.2797e-04],
        [5.4160e-04],
        [3.1495e-04],
        [9.7302e-04],
        [1.8146e-03],
        [8.5219e-05],
        [1.2995e-03],
        [4.4680e-04],
        [1.4593e-04],
        [3.8838e-04],
        [3.1746e-04],
        [2.8251e-04],
        [3.6674e-04],
        [6.5022e-04],
        [5.0275e-04],
        [1.4345e-03]], device='cuda:0')/tensor([[7.2797e-04, 5.4160e-04, 3.1495e-04, 9.7302e-04, 1.8146e-03, 8.5219e-05,
         1.2995e-03, 4.4680e-04, 1.4593e-04, 3.8838e-04, 3.1746e-04, 2.8251e-04,
         3.6674e-04, 6.5022e-04, 5.0275e-04, 1.4345e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0032],
        [0.0086],
        [0.0024],
        [0.0034],
        [0.0113],
        [0.0036],
        [0.0156],
        [0.0016],
        [0.0015],
        [0.0018],
        [0.0043],
        [0.0043],
        [0.0042],
        [0.0024],
        [0.0030],
        [0.0057]], device='cuda:0')/tensor([[0.0032, 0.0086, 0.0024, 0.0034, 0.0113, 0.0036, 0.0156, 0.0016, 0.0015,
         0.0018, 0.0043, 0.0043, 0.0042, 0.0024, 0.0030, 0.0057]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0889e-04],
        [1.7955e-04],
        [1.0241e-04],
        [2.9628e-04],
        [2.7441e-04],
        [7.2754e-05],
        [1.5424e-04],
        [3.8970e-04],
        [7.4807e-05],
        [2.1081e-04],
        [1.7168e-04],
        [7.1023e-05],
        [2.0224e-04],
        [3.3873e-04],
        [1.9092e-04],
        [2.6458e-04]], device='cuda:0')/tensor([[1.0889e-04, 1.7955e-04, 1.0241e-04, 2.9628e-04, 2.7441e-04, 7.2754e-05,
         1.5424e-04, 3.8970e-04, 7.4807e-05, 2.1081e-04, 1.7168e-04, 7.1023e-05,
         2.0224e-04, 3.3873e-04, 1.9092e-04, 2.6458e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.2797e-04, 3.1693e-03, 1.0889e-04],
        [5.4160e-04, 8.6229e-03, 1.7955e-04],
        [3.1495e-04, 2.3672e-03, 1.0241e-04],
        [9.7302e-04, 3.4312e-03, 2.9628e-04],
        [1.8146e-03, 1.1299e-02, 2.7441e-04],
        [8.5219e-05, 3.6346e-03, 7.2754e-05],
        [1.2995e-03, 1.5634e-02, 1.5424e-04],
        [4.4680e-04, 1.6065e-03, 3.8970e-04],
        [1.4593e-04, 1.5004e-03, 7.4807e-05],
        [3.8838e-04, 1.7603e-03, 2.1081e-04],
        [3.1746e-04, 4.2711e-03, 1.7168e-04],
        [2.8251e-04, 4.3352e-03, 7.1023e-05],
        [3.6674e-04, 4.2223e-03, 2.0224e-04],
        [6.5022e-04, 2.3937e-03, 3.3873e-04],
        [5.0275e-04, 2.9814e-03, 1.9092e-04],
        [1.4345e-03, 5.6848e-03, 2.6458e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1144e-03],
        [3.4455e-04],
        [4.4796e-04],
        [3.9799e-04],
        [4.1210e-04],
        [9.3143e-04],
        [1.8193e-04],
        [8.6711e-04],
        [5.9129e-04],
        [2.5596e-04],
        [5.0631e-04],
        [2.4465e-04],
        [9.3044e-05],
        [6.8552e-04],
        [2.6353e-04],
        [2.5382e-05]], device='cuda:0')/tensor([[1.1144e-03, 3.4455e-04, 4.4796e-04, 3.9799e-04, 4.1210e-04, 9.3143e-04,
         1.8193e-04, 8.6711e-04, 5.9129e-04, 2.5596e-04, 5.0631e-04, 2.4465e-04,
         9.3044e-05, 6.8552e-04, 2.6353e-04, 2.5382e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0122],
        [0.0029],
        [0.0044],
        [0.0023],
        [0.0019],
        [0.0132],
        [0.0035],
        [0.0062],
        [0.0029],
        [0.0037],
        [0.0020],
        [0.0068],
        [0.0004],
        [0.0101],
        [0.0023],
        [0.0007]], device='cuda:0')/tensor([[0.0122, 0.0029, 0.0044, 0.0023, 0.0019, 0.0132, 0.0035, 0.0062, 0.0029,
         0.0037, 0.0020, 0.0068, 0.0004, 0.0101, 0.0023, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.4425e-04],
        [8.9933e-04],
        [2.3308e-04],
        [1.8398e-04],
        [1.6632e-04],
        [3.4088e-04],
        [1.5574e-04],
        [1.7177e-04],
        [7.5930e-05],
        [2.4201e-04],
        [2.0927e-04],
        [1.3459e-04],
        [1.1221e-04],
        [1.8633e-04],
        [1.1306e-04],
        [1.1243e-04]], device='cuda:0')/tensor([[2.4425e-04, 8.9933e-04, 2.3308e-04, 1.8398e-04, 1.6632e-04, 3.4088e-04,
         1.5574e-04, 1.7177e-04, 7.5930e-05, 2.4201e-04, 2.0927e-04, 1.3459e-04,
         1.1221e-04, 1.8633e-04, 1.1306e-04, 1.1243e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1144e-03, 1.2159e-02, 2.4425e-04],
        [3.4455e-04, 2.8940e-03, 8.9933e-04],
        [4.4796e-04, 4.4213e-03, 2.3308e-04],
        [3.9799e-04, 2.2527e-03, 1.8398e-04],
        [4.1210e-04, 1.8801e-03, 1.6632e-04],
        [9.3143e-04, 1.3181e-02, 3.4088e-04],
        [1.8193e-04, 3.5243e-03, 1.5574e-04],
        [8.6711e-04, 6.2374e-03, 1.7177e-04],
        [5.9129e-04, 2.9115e-03, 7.5930e-05],
        [2.5596e-04, 3.7391e-03, 2.4201e-04],
        [5.0631e-04, 1.9932e-03, 2.0927e-04],
        [2.4465e-04, 6.7576e-03, 1.3459e-04],
        [9.3044e-05, 3.7777e-04, 1.1221e-04],
        [6.8552e-04, 1.0146e-02, 1.8633e-04],
        [2.6353e-04, 2.3039e-03, 1.1306e-04],
        [2.5382e-05, 7.2295e-04, 1.1243e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2835e-03],
        [6.8718e-04],
        [1.0831e-03],
        [4.1476e-04],
        [7.4462e-04],
        [1.1814e-03],
        [7.0003e-04],
        [8.3200e-04],
        [3.2925e-03],
        [7.9915e-05],
        [1.1300e-03],
        [6.8861e-04],
        [2.8180e-04],
        [2.3687e-04],
        [1.1982e-03],
        [1.4288e-03]], device='cuda:0')/tensor([[1.2835e-03, 6.8718e-04, 1.0831e-03, 4.1476e-04, 7.4462e-04, 1.1814e-03,
         7.0003e-04, 8.3200e-04, 3.2925e-03, 7.9915e-05, 1.1300e-03, 6.8861e-04,
         2.8180e-04, 2.3687e-04, 1.1982e-03, 1.4288e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0053],
        [0.0058],
        [0.0067],
        [0.0020],
        [0.0078],
        [0.0036],
        [0.0039],
        [0.0092],
        [0.0257],
        [0.0017],
        [0.0052],
        [0.0111],
        [0.0067],
        [0.0023],
        [0.0070],
        [0.0160]], device='cuda:0')/tensor([[0.0053, 0.0058, 0.0067, 0.0020, 0.0078, 0.0036, 0.0039, 0.0092, 0.0257,
         0.0017, 0.0052, 0.0111, 0.0067, 0.0023, 0.0070, 0.0160]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.9738e-04],
        [1.4622e-04],
        [2.2570e-04],
        [2.8504e-04],
        [2.1824e-04],
        [1.6997e-04],
        [4.0328e-04],
        [1.6246e-04],
        [9.5882e-04],
        [3.4072e-04],
        [7.2725e-05],
        [9.4879e-05],
        [6.9169e-05],
        [1.3387e-04],
        [1.8793e-04],
        [3.0900e-04]], device='cuda:0')/tensor([[2.9738e-04, 1.4622e-04, 2.2570e-04, 2.8504e-04, 2.1824e-04, 1.6997e-04,
         4.0328e-04, 1.6246e-04, 9.5882e-04, 3.4072e-04, 7.2725e-05, 9.4879e-05,
         6.9169e-05, 1.3387e-04, 1.8793e-04, 3.0900e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2835e-03, 5.2822e-03, 2.9738e-04],
        [6.8718e-04, 5.8175e-03, 1.4622e-04],
        [1.0831e-03, 6.7076e-03, 2.2570e-04],
        [4.1476e-04, 1.9758e-03, 2.8504e-04],
        [7.4462e-04, 7.7617e-03, 2.1824e-04],
        [1.1814e-03, 3.6301e-03, 1.6997e-04],
        [7.0003e-04, 3.9308e-03, 4.0328e-04],
        [8.3200e-04, 9.2309e-03, 1.6246e-04],
        [3.2925e-03, 2.5700e-02, 9.5882e-04],
        [7.9915e-05, 1.7379e-03, 3.4072e-04],
        [1.1300e-03, 5.1899e-03, 7.2725e-05],
        [6.8861e-04, 1.1067e-02, 9.4879e-05],
        [2.8180e-04, 6.7409e-03, 6.9169e-05],
        [2.3687e-04, 2.2628e-03, 1.3387e-04],
        [1.1982e-03, 6.9794e-03, 1.8793e-04],
        [1.4288e-03, 1.5975e-02, 3.0900e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0006],
        [0.0004],
        [0.0008],
        [0.0010],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0007],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0006, 0.0004, 0.0008, 0.0010, 0.0002, 0.0005, 0.0003, 0.0007,
         0.0002, 0.0005, 0.0002, 0.0002, 0.0005, 0.0007, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0076],
        [0.0124],
        [0.0018],
        [0.0074],
        [0.0029],
        [0.0060],
        [0.0157],
        [0.0045],
        [0.0004],
        [0.0057],
        [0.0020],
        [0.0046],
        [0.0041],
        [0.0075],
        [0.0043]], device='cuda:0')/tensor([[0.0010, 0.0076, 0.0124, 0.0018, 0.0074, 0.0029, 0.0060, 0.0157, 0.0045,
         0.0004, 0.0057, 0.0020, 0.0046, 0.0041, 0.0075, 0.0043]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5740e-04],
        [1.9241e-04],
        [1.3370e-04],
        [7.1943e-04],
        [6.1563e-04],
        [7.2395e-05],
        [3.1740e-04],
        [1.8600e-04],
        [3.7906e-04],
        [3.3290e-04],
        [2.4331e-04],
        [1.3039e-04],
        [2.6660e-04],
        [8.8784e-05],
        [2.3058e-04],
        [1.2437e-04]], device='cuda:0')/tensor([[1.5740e-04, 1.9241e-04, 1.3370e-04, 7.1943e-04, 6.1563e-04, 7.2395e-05,
         3.1740e-04, 1.8600e-04, 3.7906e-04, 3.3290e-04, 2.4331e-04, 1.3039e-04,
         2.6660e-04, 8.8784e-05, 2.3058e-04, 1.2437e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.3664e-04, 1.0377e-03, 1.5740e-04],
        [5.8896e-04, 7.6495e-03, 1.9241e-04],
        [4.0472e-04, 1.2401e-02, 1.3370e-04],
        [7.5379e-04, 1.7589e-03, 7.1943e-04],
        [1.0452e-03, 7.3567e-03, 6.1563e-04],
        [2.4129e-04, 2.9253e-03, 7.2395e-05],
        [4.5687e-04, 6.0362e-03, 3.1740e-04],
        [3.0753e-04, 1.5662e-02, 1.8600e-04],
        [6.9619e-04, 4.5292e-03, 3.7906e-04],
        [1.8844e-04, 4.0222e-04, 3.3290e-04],
        [4.6672e-04, 5.7370e-03, 2.4331e-04],
        [2.4736e-04, 1.9570e-03, 1.3039e-04],
        [2.3732e-04, 4.6445e-03, 2.6660e-04],
        [4.8634e-04, 4.1068e-03, 8.8784e-05],
        [7.0823e-04, 7.5379e-03, 2.3058e-04],
        [4.3587e-04, 4.3287e-03, 1.2437e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0008],
        [0.0015],
        [0.0004],
        [0.0004],
        [0.0008],
        [0.0005],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0002, 0.0002, 0.0008, 0.0015, 0.0004, 0.0004, 0.0008,
         0.0005, 0.0007, 0.0003, 0.0002, 0.0009, 0.0002, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0032],
        [0.0069],
        [0.0015],
        [0.0025],
        [0.0018],
        [0.0024],
        [0.0099],
        [0.0055],
        [0.0020],
        [0.0036],
        [0.0025],
        [0.0014],
        [0.0035],
        [0.0055],
        [0.0053],
        [0.0065]], device='cuda:0')/tensor([[0.0032, 0.0069, 0.0015, 0.0025, 0.0018, 0.0024, 0.0099, 0.0055, 0.0020,
         0.0036, 0.0025, 0.0014, 0.0035, 0.0055, 0.0053, 0.0065]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3830e-04],
        [1.9538e-04],
        [8.1160e-04],
        [9.9784e-05],
        [4.1210e-05],
        [6.3019e-05],
        [1.6616e-04],
        [1.5797e-04],
        [8.4785e-05],
        [1.1411e-04],
        [4.3421e-04],
        [2.0253e-04],
        [1.8544e-04],
        [2.8548e-04],
        [2.3644e-04],
        [1.7245e-04]], device='cuda:0')/tensor([[3.3830e-04, 1.9538e-04, 8.1160e-04, 9.9784e-05, 4.1210e-05, 6.3019e-05,
         1.6616e-04, 1.5797e-04, 8.4785e-05, 1.1411e-04, 4.3421e-04, 2.0253e-04,
         1.8544e-04, 2.8548e-04, 2.3644e-04, 1.7245e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2940e-04, 3.1734e-03, 3.3830e-04],
        [7.9957e-04, 6.9146e-03, 1.9538e-04],
        [2.1210e-04, 1.5319e-03, 8.1160e-04],
        [1.7595e-04, 2.5344e-03, 9.9784e-05],
        [8.3717e-04, 1.8223e-03, 4.1210e-05],
        [1.4925e-03, 2.4230e-03, 6.3019e-05],
        [4.1434e-04, 9.8600e-03, 1.6616e-04],
        [4.4766e-04, 5.5032e-03, 1.5797e-04],
        [7.6117e-04, 2.0212e-03, 8.4785e-05],
        [4.7880e-04, 3.5749e-03, 1.1411e-04],
        [6.5268e-04, 2.4831e-03, 4.3421e-04],
        [2.7473e-04, 1.3736e-03, 2.0253e-04],
        [2.2135e-04, 3.4523e-03, 1.8544e-04],
        [8.7649e-04, 5.5369e-03, 2.8548e-04],
        [1.6755e-04, 5.3377e-03, 2.3644e-04],
        [3.2547e-04, 6.4708e-03, 1.7245e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0001],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0013],
        [0.0002],
        [0.0009],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0001, 0.0005, 0.0004, 0.0003, 0.0004, 0.0005, 0.0004,
         0.0013, 0.0002, 0.0009, 0.0004, 0.0004, 0.0007, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0023],
        [0.0034],
        [0.0014],
        [0.0022],
        [0.0021],
        [0.0024],
        [0.0036],
        [0.0026],
        [0.0075],
        [0.0085],
        [0.0099],
        [0.0037],
        [0.0036],
        [0.0021],
        [0.0109],
        [0.0032]], device='cuda:0')/tensor([[0.0023, 0.0034, 0.0014, 0.0022, 0.0021, 0.0024, 0.0036, 0.0026, 0.0075,
         0.0085, 0.0099, 0.0037, 0.0036, 0.0021, 0.0109, 0.0032]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5766e-04],
        [3.0997e-04],
        [1.1909e-04],
        [7.5350e-05],
        [5.9645e-05],
        [7.7652e-04],
        [1.4381e-04],
        [1.7388e-04],
        [2.4564e-04],
        [1.4392e-04],
        [5.7984e-05],
        [1.0715e-04],
        [6.0644e-05],
        [1.0235e-04],
        [2.5269e-04],
        [1.2321e-04]], device='cuda:0')/tensor([[4.5766e-04, 3.0997e-04, 1.1909e-04, 7.5350e-05, 5.9645e-05, 7.7652e-04,
         1.4381e-04, 1.7388e-04, 2.4564e-04, 1.4392e-04, 5.7984e-05, 1.0715e-04,
         6.0644e-05, 1.0235e-04, 2.5269e-04, 1.2321e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0371e-04, 2.2694e-03, 4.5766e-04],
        [2.4718e-04, 3.3982e-03, 3.0997e-04],
        [1.3711e-04, 1.3746e-03, 1.1909e-04],
        [4.9944e-04, 2.1975e-03, 7.5350e-05],
        [4.2499e-04, 2.0569e-03, 5.9645e-05],
        [2.7683e-04, 2.4288e-03, 7.7652e-04],
        [4.4928e-04, 3.6044e-03, 1.4381e-04],
        [4.5196e-04, 2.6100e-03, 1.7388e-04],
        [4.1295e-04, 7.4505e-03, 2.4564e-04],
        [1.3308e-03, 8.4570e-03, 1.4392e-04],
        [1.7721e-04, 9.8630e-03, 5.7984e-05],
        [8.9661e-04, 3.7496e-03, 1.0715e-04],
        [4.4983e-04, 3.6178e-03, 6.0644e-05],
        [4.2826e-04, 2.0831e-03, 1.0235e-04],
        [7.0731e-04, 1.0925e-02, 2.5269e-04],
        [1.9076e-04, 3.1835e-03, 1.2321e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0007],
        [0.0020],
        [0.0003],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0013],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0007, 0.0020, 0.0003, 0.0004, 0.0006, 0.0002, 0.0003,
         0.0005, 0.0005, 0.0013, 0.0003, 0.0004, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0048],
        [0.0028],
        [0.0059],
        [0.0033],
        [0.0021],
        [0.0052],
        [0.0034],
        [0.0017],
        [0.0017],
        [0.0034],
        [0.0058],
        [0.0137],
        [0.0037],
        [0.0023],
        [0.0009],
        [0.0064]], device='cuda:0')/tensor([[0.0048, 0.0028, 0.0059, 0.0033, 0.0021, 0.0052, 0.0034, 0.0017, 0.0017,
         0.0034, 0.0058, 0.0137, 0.0037, 0.0023, 0.0009, 0.0064]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9183e-04],
        [1.2017e-04],
        [1.9313e-04],
        [1.2392e-04],
        [1.7357e-04],
        [7.5231e-05],
        [1.2631e-04],
        [2.4869e-04],
        [7.0868e-05],
        [1.3546e-04],
        [1.2604e-04],
        [2.7137e-04],
        [1.2701e-04],
        [8.2715e-05],
        [1.4695e-04],
        [3.9445e-04]], device='cuda:0')/tensor([[1.9183e-04, 1.2017e-04, 1.9313e-04, 1.2392e-04, 1.7357e-04, 7.5231e-05,
         1.2631e-04, 2.4869e-04, 7.0868e-05, 1.3546e-04, 1.2604e-04, 2.7137e-04,
         1.2701e-04, 8.2715e-05, 1.4695e-04, 3.9445e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3121e-04, 4.7854e-03, 1.9183e-04],
        [2.5273e-04, 2.7990e-03, 1.2017e-04],
        [6.6389e-04, 5.9008e-03, 1.9313e-04],
        [1.9555e-03, 3.2933e-03, 1.2392e-04],
        [2.9567e-04, 2.1185e-03, 1.7357e-04],
        [3.8973e-04, 5.1635e-03, 7.5231e-05],
        [5.9040e-04, 3.4236e-03, 1.2631e-04],
        [2.3739e-04, 1.7293e-03, 2.4869e-04],
        [3.1203e-04, 1.7381e-03, 7.0868e-05],
        [4.7978e-04, 3.4365e-03, 1.3546e-04],
        [4.8014e-04, 5.8016e-03, 1.2604e-04],
        [1.3171e-03, 1.3699e-02, 2.7137e-04],
        [2.5869e-04, 3.6766e-03, 1.2701e-04],
        [3.9345e-04, 2.3004e-03, 8.2715e-05],
        [2.5134e-04, 8.9269e-04, 1.4695e-04],
        [3.6953e-04, 6.4116e-03, 3.9445e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.3882e-04],
        [2.9038e-04],
        [8.0709e-04],
        [5.4350e-04],
        [3.1423e-04],
        [5.5294e-05],
        [4.3207e-04],
        [3.8711e-04],
        [6.3318e-04],
        [9.4817e-04],
        [2.0773e-03],
        [6.8601e-04],
        [2.2989e-04],
        [2.0475e-04],
        [1.6673e-04],
        [3.5969e-04]], device='cuda:0')/tensor([[2.3882e-04, 2.9038e-04, 8.0709e-04, 5.4350e-04, 3.1423e-04, 5.5294e-05,
         4.3207e-04, 3.8711e-04, 6.3318e-04, 9.4817e-04, 2.0773e-03, 6.8601e-04,
         2.2989e-04, 2.0475e-04, 1.6673e-04, 3.5969e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0025],
        [0.0027],
        [0.0231],
        [0.0171],
        [0.0043],
        [0.0012],
        [0.0030],
        [0.0054],
        [0.0077],
        [0.0094],
        [0.0115],
        [0.0059],
        [0.0044],
        [0.0021],
        [0.0017],
        [0.0037]], device='cuda:0')/tensor([[0.0025, 0.0027, 0.0231, 0.0171, 0.0043, 0.0012, 0.0030, 0.0054, 0.0077,
         0.0094, 0.0115, 0.0059, 0.0044, 0.0021, 0.0017, 0.0037]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7091e-04],
        [2.1408e-04],
        [5.4973e-04],
        [8.7693e-05],
        [6.1442e-05],
        [1.4658e-04],
        [1.1191e-04],
        [3.3187e-04],
        [1.3181e-04],
        [1.6671e-04],
        [1.1004e-04],
        [1.2608e-04],
        [1.3225e-04],
        [6.4166e-05],
        [5.6220e-05],
        [1.8941e-04]], device='cuda:0')/tensor([[1.7091e-04, 2.1408e-04, 5.4973e-04, 8.7693e-05, 6.1442e-05, 1.4658e-04,
         1.1191e-04, 3.3187e-04, 1.3181e-04, 1.6671e-04, 1.1004e-04, 1.2608e-04,
         1.3225e-04, 6.4166e-05, 5.6220e-05, 1.8941e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3882e-04, 2.5295e-03, 1.7091e-04],
        [2.9038e-04, 2.6519e-03, 2.1408e-04],
        [8.0709e-04, 2.3149e-02, 5.4973e-04],
        [5.4350e-04, 1.7128e-02, 8.7693e-05],
        [3.1423e-04, 4.3292e-03, 6.1442e-05],
        [5.5294e-05, 1.1829e-03, 1.4658e-04],
        [4.3207e-04, 2.9982e-03, 1.1191e-04],
        [3.8711e-04, 5.4139e-03, 3.3187e-04],
        [6.3318e-04, 7.7468e-03, 1.3181e-04],
        [9.4817e-04, 9.4233e-03, 1.6671e-04],
        [2.0773e-03, 1.1522e-02, 1.1004e-04],
        [6.8601e-04, 5.8813e-03, 1.2608e-04],
        [2.2989e-04, 4.3850e-03, 1.3225e-04],
        [2.0475e-04, 2.0955e-03, 6.4166e-05],
        [1.6673e-04, 1.7483e-03, 5.6220e-05],
        [3.5969e-04, 3.6660e-03, 1.8941e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[0.0004],
        [0.0006],
        [0.0002],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0006, 0.0002, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0054],
        [0.0033],
        [0.0056],
        [0.0025]], device='cuda:0')/tensor([[0.0054, 0.0033, 0.0056, 0.0025]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[9.1200e-05],
        [1.9967e-04],
        [1.0135e-04],
        [1.0181e-04]], device='cuda:0')/tensor([[9.1200e-05, 1.9967e-04, 1.0135e-04, 1.0181e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[4.3668e-04, 5.3590e-03, 9.1200e-05],
        [6.0532e-04, 3.3340e-03, 1.9967e-04],
        [2.4331e-04, 5.5875e-03, 1.0135e-04],
        [7.0474e-04, 2.4554e-03, 1.0181e-04]], device='cuda:0')
acc:  0.5
Time taken to execute the de NLI task with prompt type auxiliary, variation 2 and batchsize 16: 0:01:02.149263
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI auxiliary 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 366.53it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.0816e-04],
        [4.5624e-05],
        [2.5283e-04],
        [7.5255e-04],
        [1.0032e-02],
        [2.5565e-04],
        [1.2308e-03],
        [1.7297e-04],
        [1.0884e-03],
        [1.5291e-04],
        [4.1618e-04],
        [1.3485e-04],
        [4.6495e-05],
        [6.5986e-04],
        [2.5046e-04],
        [1.5799e-04]], device='cuda:0')/tensor([[4.0816e-04, 4.5624e-05, 2.5283e-04, 7.5255e-04, 1.0032e-02, 2.5565e-04,
         1.2308e-03, 1.7297e-04, 1.0884e-03, 1.5291e-04, 4.1618e-04, 1.3485e-04,
         4.6495e-05, 6.5986e-04, 2.5046e-04, 1.5799e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5269e-04],
        [1.3013e-04],
        [6.3152e-04],
        [2.1724e-03],
        [1.1122e-02],
        [2.7808e-04],
        [2.5904e-03],
        [7.5429e-04],
        [3.7102e-03],
        [4.2427e-04],
        [7.8852e-05],
        [4.4931e-04],
        [7.3326e-05],
        [1.2195e-03],
        [1.2579e-03],
        [9.7103e-04]], device='cuda:0')/tensor([[8.5269e-04, 1.3013e-04, 6.3152e-04, 2.1724e-03, 1.1122e-02, 2.7808e-04,
         2.5904e-03, 7.5429e-04, 3.7102e-03, 4.2427e-04, 7.8852e-05, 4.4931e-04,
         7.3326e-05, 1.2195e-03, 1.2579e-03, 9.7103e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2657e-04],
        [6.2254e-05],
        [2.6621e-04],
        [4.6571e-04],
        [3.1459e-03],
        [1.6923e-04],
        [8.2323e-04],
        [1.5586e-04],
        [1.0058e-03],
        [4.5618e-04],
        [3.7103e-04],
        [2.1612e-04],
        [1.3359e-04],
        [1.7717e-04],
        [3.8867e-04],
        [2.8902e-04]], device='cuda:0')/tensor([[2.2657e-04, 6.2254e-05, 2.6621e-04, 4.6571e-04, 3.1459e-03, 1.6923e-04,
         8.2323e-04, 1.5586e-04, 1.0058e-03, 4.5618e-04, 3.7103e-04, 2.1612e-04,
         1.3359e-04, 1.7717e-04, 3.8867e-04, 2.8902e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.0816e-04, 8.5269e-04, 2.2657e-04],
        [4.5624e-05, 1.3013e-04, 6.2254e-05],
        [2.5283e-04, 6.3152e-04, 2.6621e-04],
        [7.5255e-04, 2.1724e-03, 4.6571e-04],
        [1.0032e-02, 1.1122e-02, 3.1459e-03],
        [2.5565e-04, 2.7808e-04, 1.6923e-04],
        [1.2308e-03, 2.5904e-03, 8.2323e-04],
        [1.7297e-04, 7.5429e-04, 1.5586e-04],
        [1.0884e-03, 3.7102e-03, 1.0058e-03],
        [1.5291e-04, 4.2427e-04, 4.5618e-04],
        [4.1618e-04, 7.8852e-05, 3.7103e-04],
        [1.3485e-04, 4.4931e-04, 2.1612e-04],
        [4.6495e-05, 7.3326e-05, 1.3359e-04],
        [6.5986e-04, 1.2195e-03, 1.7717e-04],
        [2.5046e-04, 1.2579e-03, 3.8867e-04],
        [1.5799e-04, 9.7103e-04, 2.8902e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6085e-04],
        [4.1804e-04],
        [3.8772e-04],
        [8.9725e-05],
        [7.0772e-04],
        [3.3653e-04],
        [1.4068e-04],
        [2.8984e-04],
        [2.3408e-04],
        [2.9085e-04],
        [7.9381e-06],
        [1.4142e-04],
        [6.4627e-04],
        [5.2128e-04],
        [9.9785e-05],
        [1.1406e-04]], device='cuda:0')/tensor([[1.6085e-04, 4.1804e-04, 3.8772e-04, 8.9725e-05, 7.0772e-04, 3.3653e-04,
         1.4068e-04, 2.8984e-04, 2.3408e-04, 2.9085e-04, 7.9381e-06, 1.4142e-04,
         6.4627e-04, 5.2128e-04, 9.9785e-05, 1.1406e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.8497e-04],
        [6.2790e-04],
        [1.0074e-03],
        [3.8984e-04],
        [1.6768e-03],
        [7.7817e-04],
        [1.1326e-03],
        [2.8917e-03],
        [2.1593e-04],
        [3.5815e-04],
        [2.0209e-06],
        [1.1061e-03],
        [5.6524e-04],
        [1.3509e-03],
        [4.7141e-05],
        [3.7944e-04]], device='cuda:0')/tensor([[9.8497e-04, 6.2790e-04, 1.0074e-03, 3.8984e-04, 1.6768e-03, 7.7817e-04,
         1.1326e-03, 2.8917e-03, 2.1593e-04, 3.5815e-04, 2.0209e-06, 1.1061e-03,
         5.6524e-04, 1.3509e-03, 4.7141e-05, 3.7944e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5954e-04],
        [1.6425e-04],
        [2.1884e-04],
        [2.7865e-04],
        [2.7715e-03],
        [1.2390e-03],
        [4.4079e-04],
        [2.9025e-04],
        [3.2699e-05],
        [7.1165e-04],
        [2.6405e-06],
        [2.1171e-04],
        [3.2722e-04],
        [6.6030e-04],
        [1.7227e-04],
        [1.1086e-04]], device='cuda:0')/tensor([[4.5954e-04, 1.6425e-04, 2.1884e-04, 2.7865e-04, 2.7715e-03, 1.2390e-03,
         4.4079e-04, 2.9025e-04, 3.2699e-05, 7.1165e-04, 2.6405e-06, 2.1171e-04,
         3.2722e-04, 6.6030e-04, 1.7227e-04, 1.1086e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6085e-04, 9.8497e-04, 4.5954e-04],
        [4.1804e-04, 6.2790e-04, 1.6425e-04],
        [3.8772e-04, 1.0074e-03, 2.1884e-04],
        [8.9725e-05, 3.8984e-04, 2.7865e-04],
        [7.0772e-04, 1.6768e-03, 2.7715e-03],
        [3.3653e-04, 7.7817e-04, 1.2390e-03],
        [1.4068e-04, 1.1326e-03, 4.4079e-04],
        [2.8984e-04, 2.8917e-03, 2.9025e-04],
        [2.3408e-04, 2.1593e-04, 3.2699e-05],
        [2.9085e-04, 3.5815e-04, 7.1165e-04],
        [7.9381e-06, 2.0209e-06, 2.6405e-06],
        [1.4142e-04, 1.1061e-03, 2.1171e-04],
        [6.4627e-04, 5.6524e-04, 3.2722e-04],
        [5.2128e-04, 1.3509e-03, 6.6030e-04],
        [9.9785e-05, 4.7141e-05, 1.7227e-04],
        [1.1406e-04, 3.7944e-04, 1.1086e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6617e-04],
        [1.9058e-04],
        [9.1872e-04],
        [4.3247e-04],
        [4.5502e-04],
        [9.6502e-05],
        [5.8029e-04],
        [5.1865e-04],
        [1.5246e-04],
        [1.4715e-03],
        [4.3747e-05],
        [2.0291e-04],
        [3.1462e-04],
        [1.3499e-03],
        [5.2299e-04],
        [2.4255e-04]], device='cuda:0')/tensor([[1.6617e-04, 1.9058e-04, 9.1872e-04, 4.3247e-04, 4.5502e-04, 9.6502e-05,
         5.8029e-04, 5.1865e-04, 1.5246e-04, 1.4715e-03, 4.3747e-05, 2.0291e-04,
         3.1462e-04, 1.3499e-03, 5.2299e-04, 2.4255e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.1471e-04],
        [7.1504e-04],
        [3.2581e-03],
        [8.0855e-04],
        [1.2462e-03],
        [8.3057e-04],
        [1.9606e-03],
        [1.6008e-03],
        [2.7610e-04],
        [5.7915e-03],
        [4.9248e-05],
        [5.5142e-04],
        [2.9494e-04],
        [1.2569e-03],
        [4.9374e-04],
        [3.3849e-03]], device='cuda:0')/tensor([[3.1471e-04, 7.1504e-04, 3.2581e-03, 8.0855e-04, 1.2462e-03, 8.3057e-04,
         1.9606e-03, 1.6008e-03, 2.7610e-04, 5.7915e-03, 4.9248e-05, 5.5142e-04,
         2.9494e-04, 1.2569e-03, 4.9374e-04, 3.3849e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.2435e-04],
        [9.8109e-05],
        [6.2092e-04],
        [4.0733e-03],
        [2.3252e-04],
        [4.8113e-04],
        [9.5291e-04],
        [2.6270e-04],
        [2.6262e-04],
        [4.0081e-04],
        [2.3056e-05],
        [1.0333e-04],
        [3.4629e-05],
        [6.5213e-04],
        [1.3680e-04],
        [5.3471e-04]], device='cuda:0')/tensor([[4.2435e-04, 9.8109e-05, 6.2092e-04, 4.0733e-03, 2.3252e-04, 4.8113e-04,
         9.5291e-04, 2.6270e-04, 2.6262e-04, 4.0081e-04, 2.3056e-05, 1.0333e-04,
         3.4629e-05, 6.5213e-04, 1.3680e-04, 5.3471e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6617e-04, 3.1471e-04, 4.2435e-04],
        [1.9058e-04, 7.1504e-04, 9.8109e-05],
        [9.1872e-04, 3.2581e-03, 6.2092e-04],
        [4.3247e-04, 8.0855e-04, 4.0733e-03],
        [4.5502e-04, 1.2462e-03, 2.3252e-04],
        [9.6502e-05, 8.3057e-04, 4.8113e-04],
        [5.8029e-04, 1.9606e-03, 9.5291e-04],
        [5.1865e-04, 1.6008e-03, 2.6270e-04],
        [1.5246e-04, 2.7610e-04, 2.6262e-04],
        [1.4715e-03, 5.7915e-03, 4.0081e-04],
        [4.3747e-05, 4.9248e-05, 2.3056e-05],
        [2.0291e-04, 5.5142e-04, 1.0333e-04],
        [3.1462e-04, 2.9494e-04, 3.4629e-05],
        [1.3499e-03, 1.2569e-03, 6.5213e-04],
        [5.2299e-04, 4.9374e-04, 1.3680e-04],
        [2.4255e-04, 3.3849e-03, 5.3471e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.0039e-04],
        [1.5787e-04],
        [1.7688e-03],
        [1.1608e-04],
        [1.8878e-04],
        [5.9838e-04],
        [1.0099e-03],
        [7.6899e-04],
        [2.5151e-03],
        [7.5385e-04],
        [8.6231e-05],
        [5.8271e-05],
        [3.8899e-04],
        [4.0265e-04],
        [2.8809e-04],
        [2.2924e-04]], device='cuda:0')/tensor([[3.0039e-04, 1.5787e-04, 1.7688e-03, 1.1608e-04, 1.8878e-04, 5.9838e-04,
         1.0099e-03, 7.6899e-04, 2.5151e-03, 7.5385e-04, 8.6231e-05, 5.8271e-05,
         3.8899e-04, 4.0265e-04, 2.8809e-04, 2.2924e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.2291e-04],
        [5.1386e-04],
        [5.4459e-03],
        [1.7982e-04],
        [5.9014e-04],
        [3.3579e-03],
        [2.0543e-03],
        [3.0383e-03],
        [1.5915e-04],
        [4.0319e-03],
        [3.2629e-04],
        [2.1281e-05],
        [1.1728e-03],
        [1.2429e-03],
        [6.7707e-03],
        [7.6910e-05]], device='cuda:0')/tensor([[4.2291e-04, 5.1386e-04, 5.4459e-03, 1.7982e-04, 5.9014e-04, 3.3579e-03,
         2.0543e-03, 3.0383e-03, 1.5915e-04, 4.0319e-03, 3.2629e-04, 2.1281e-05,
         1.1728e-03, 1.2429e-03, 6.7707e-03, 7.6910e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.5891e-05],
        [2.0741e-04],
        [2.2567e-03],
        [9.8545e-05],
        [2.6835e-04],
        [5.1257e-04],
        [3.0001e-03],
        [2.1076e-02],
        [4.0192e-04],
        [1.3363e-03],
        [1.9950e-05],
        [1.2023e-05],
        [4.3363e-04],
        [2.5786e-04],
        [2.2353e-04],
        [6.6880e-04]], device='cuda:0')/tensor([[9.5891e-05, 2.0741e-04, 2.2567e-03, 9.8545e-05, 2.6835e-04, 5.1257e-04,
         3.0001e-03, 2.1076e-02, 4.0192e-04, 1.3363e-03, 1.9950e-05, 1.2023e-05,
         4.3363e-04, 2.5786e-04, 2.2353e-04, 6.6880e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0039e-04, 4.2291e-04, 9.5891e-05],
        [1.5787e-04, 5.1386e-04, 2.0741e-04],
        [1.7688e-03, 5.4459e-03, 2.2567e-03],
        [1.1608e-04, 1.7982e-04, 9.8545e-05],
        [1.8878e-04, 5.9014e-04, 2.6835e-04],
        [5.9838e-04, 3.3579e-03, 5.1257e-04],
        [1.0099e-03, 2.0543e-03, 3.0001e-03],
        [7.6899e-04, 3.0383e-03, 2.1076e-02],
        [2.5151e-03, 1.5915e-04, 4.0192e-04],
        [7.5385e-04, 4.0319e-03, 1.3363e-03],
        [8.6231e-05, 3.2629e-04, 1.9950e-05],
        [5.8271e-05, 2.1281e-05, 1.2023e-05],
        [3.8899e-04, 1.1728e-03, 4.3363e-04],
        [4.0265e-04, 1.2429e-03, 2.5786e-04],
        [2.8809e-04, 6.7707e-03, 2.2353e-04],
        [2.2924e-04, 7.6910e-05, 6.6880e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0545e-03],
        [5.5008e-04],
        [5.0723e-04],
        [3.6044e-04],
        [2.7518e-04],
        [9.3527e-05],
        [6.2464e-04],
        [6.4471e-04],
        [8.9509e-04],
        [2.4670e-04],
        [5.0776e-04],
        [4.9726e-04],
        [5.8421e-04],
        [5.7346e-04],
        [3.9838e-04],
        [9.7362e-04]], device='cuda:0')/tensor([[1.0545e-03, 5.5008e-04, 5.0723e-04, 3.6044e-04, 2.7518e-04, 9.3527e-05,
         6.2464e-04, 6.4471e-04, 8.9509e-04, 2.4670e-04, 5.0776e-04, 4.9726e-04,
         5.8421e-04, 5.7346e-04, 3.9838e-04, 9.7362e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4327e-03],
        [1.9906e-03],
        [3.8910e-03],
        [5.2732e-04],
        [1.1421e-03],
        [2.4630e-05],
        [9.1105e-04],
        [9.5109e-04],
        [1.4471e-03],
        [1.5123e-03],
        [6.3457e-03],
        [1.2775e-03],
        [5.3978e-03],
        [1.9890e-03],
        [2.4497e-03],
        [6.7141e-04]], device='cuda:0')/tensor([[2.4327e-03, 1.9906e-03, 3.8910e-03, 5.2732e-04, 1.1421e-03, 2.4630e-05,
         9.1105e-04, 9.5109e-04, 1.4471e-03, 1.5123e-03, 6.3457e-03, 1.2775e-03,
         5.3978e-03, 1.9890e-03, 2.4497e-03, 6.7141e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1643e-03],
        [6.0633e-04],
        [1.2671e-03],
        [1.1633e-04],
        [2.4848e-04],
        [1.3152e-05],
        [1.7508e-03],
        [3.4391e-04],
        [1.4552e-03],
        [2.9665e-04],
        [1.7428e-03],
        [3.3858e-04],
        [3.6967e-03],
        [1.9512e-03],
        [2.5728e-04],
        [2.7365e-04]], device='cuda:0')/tensor([[1.1643e-03, 6.0633e-04, 1.2671e-03, 1.1633e-04, 2.4848e-04, 1.3152e-05,
         1.7508e-03, 3.4391e-04, 1.4552e-03, 2.9665e-04, 1.7428e-03, 3.3858e-04,
         3.6967e-03, 1.9512e-03, 2.5728e-04, 2.7365e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0545e-03, 2.4327e-03, 1.1643e-03],
        [5.5008e-04, 1.9906e-03, 6.0633e-04],
        [5.0723e-04, 3.8910e-03, 1.2671e-03],
        [3.6044e-04, 5.2732e-04, 1.1633e-04],
        [2.7518e-04, 1.1421e-03, 2.4848e-04],
        [9.3527e-05, 2.4630e-05, 1.3152e-05],
        [6.2464e-04, 9.1105e-04, 1.7508e-03],
        [6.4471e-04, 9.5109e-04, 3.4391e-04],
        [8.9509e-04, 1.4471e-03, 1.4552e-03],
        [2.4670e-04, 1.5123e-03, 2.9665e-04],
        [5.0776e-04, 6.3457e-03, 1.7428e-03],
        [4.9726e-04, 1.2775e-03, 3.3858e-04],
        [5.8421e-04, 5.3978e-03, 3.6967e-03],
        [5.7346e-04, 1.9890e-03, 1.9512e-03],
        [3.9838e-04, 2.4497e-03, 2.5728e-04],
        [9.7362e-04, 6.7141e-04, 2.7365e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.9737e-04],
        [3.9682e-05],
        [6.7135e-04],
        [9.1355e-04],
        [1.1677e-04],
        [4.9164e-04],
        [3.8706e-04],
        [3.8941e-04],
        [1.2192e-03],
        [6.8169e-05],
        [4.1564e-04],
        [1.8885e-04],
        [3.7485e-04],
        [1.1210e-04],
        [1.0748e-04],
        [1.9623e-04]], device='cuda:0')/tensor([[1.9737e-04, 3.9682e-05, 6.7135e-04, 9.1355e-04, 1.1677e-04, 4.9164e-04,
         3.8706e-04, 3.8941e-04, 1.2192e-03, 6.8169e-05, 4.1564e-04, 1.8885e-04,
         3.7485e-04, 1.1210e-04, 1.0748e-04, 1.9623e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8966e-04],
        [3.1413e-05],
        [1.6179e-03],
        [3.8642e-03],
        [6.9324e-05],
        [2.2577e-03],
        [1.5672e-03],
        [1.4462e-03],
        [1.4548e-02],
        [8.3986e-05],
        [3.9340e-03],
        [1.2813e-03],
        [1.0318e-03],
        [3.9602e-04],
        [8.5439e-05],
        [9.8088e-05]], device='cuda:0')/tensor([[1.8966e-04, 3.1413e-05, 1.6179e-03, 3.8642e-03, 6.9324e-05, 2.2577e-03,
         1.5672e-03, 1.4462e-03, 1.4548e-02, 8.3986e-05, 3.9340e-03, 1.2813e-03,
         1.0318e-03, 3.9602e-04, 8.5439e-05, 9.8088e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.6208e-03],
        [1.0372e-05],
        [3.6357e-04],
        [4.3781e-04],
        [5.5015e-05],
        [1.0718e-03],
        [1.5481e-03],
        [7.3751e-04],
        [2.4181e-04],
        [3.7040e-05],
        [8.4844e-04],
        [2.1058e-04],
        [4.4357e-04],
        [1.8730e-04],
        [3.9351e-05],
        [5.5354e-04]], device='cuda:0')/tensor([[1.6208e-03, 1.0372e-05, 3.6357e-04, 4.3781e-04, 5.5015e-05, 1.0718e-03,
         1.5481e-03, 7.3751e-04, 2.4181e-04, 3.7040e-05, 8.4844e-04, 2.1058e-04,
         4.4357e-04, 1.8730e-04, 3.9351e-05, 5.5354e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9737e-04, 1.8966e-04, 1.6208e-03],
        [3.9682e-05, 3.1413e-05, 1.0372e-05],
        [6.7135e-04, 1.6179e-03, 3.6357e-04],
        [9.1355e-04, 3.8642e-03, 4.3781e-04],
        [1.1677e-04, 6.9324e-05, 5.5015e-05],
        [4.9164e-04, 2.2577e-03, 1.0718e-03],
        [3.8706e-04, 1.5672e-03, 1.5481e-03],
        [3.8941e-04, 1.4462e-03, 7.3751e-04],
        [1.2192e-03, 1.4548e-02, 2.4181e-04],
        [6.8169e-05, 8.3986e-05, 3.7040e-05],
        [4.1564e-04, 3.9340e-03, 8.4844e-04],
        [1.8885e-04, 1.2813e-03, 2.1058e-04],
        [3.7485e-04, 1.0318e-03, 4.4357e-04],
        [1.1210e-04, 3.9602e-04, 1.8730e-04],
        [1.0748e-04, 8.5439e-05, 3.9351e-05],
        [1.9623e-04, 9.8088e-05, 5.5354e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.4556e-05],
        [1.2978e-04],
        [1.3129e-04],
        [1.2180e-03],
        [2.2470e-04],
        [5.2806e-04],
        [3.2364e-04],
        [1.3494e-03],
        [9.6383e-04],
        [3.6477e-04],
        [3.7276e-03],
        [3.3009e-04],
        [2.9119e-04],
        [3.4814e-04],
        [6.8359e-04],
        [1.8816e-03]], device='cuda:0')/tensor([[3.4556e-05, 1.2978e-04, 1.3129e-04, 1.2180e-03, 2.2470e-04, 5.2806e-04,
         3.2364e-04, 1.3494e-03, 9.6383e-04, 3.6477e-04, 3.7276e-03, 3.3009e-04,
         2.9119e-04, 3.4814e-04, 6.8359e-04, 1.8816e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.8367e-05],
        [1.1423e-03],
        [6.9141e-05],
        [1.2368e-03],
        [1.9734e-04],
        [1.6056e-03],
        [1.8881e-04],
        [3.5440e-03],
        [2.4848e-03],
        [2.0050e-03],
        [2.2627e-03],
        [1.4211e-04],
        [1.0382e-03],
        [2.8904e-04],
        [2.6440e-03],
        [7.1116e-03]], device='cuda:0')/tensor([[4.8367e-05, 1.1423e-03, 6.9141e-05, 1.2368e-03, 1.9734e-04, 1.6056e-03,
         1.8881e-04, 3.5440e-03, 2.4848e-03, 2.0050e-03, 2.2627e-03, 1.4211e-04,
         1.0382e-03, 2.8904e-04, 2.6440e-03, 7.1116e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.4694e-05],
        [6.5583e-04],
        [1.4019e-03],
        [9.9238e-04],
        [6.6330e-05],
        [9.9672e-04],
        [5.8971e-04],
        [4.1872e-04],
        [5.6800e-04],
        [2.1160e-03],
        [6.3540e-05],
        [7.2317e-04],
        [4.3178e-04],
        [4.5491e-04],
        [1.0056e-03],
        [2.9649e-04]], device='cuda:0')/tensor([[3.4694e-05, 6.5583e-04, 1.4019e-03, 9.9238e-04, 6.6330e-05, 9.9672e-04,
         5.8971e-04, 4.1872e-04, 5.6800e-04, 2.1160e-03, 6.3540e-05, 7.2317e-04,
         4.3178e-04, 4.5491e-04, 1.0056e-03, 2.9649e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.4556e-05, 4.8367e-05, 3.4694e-05],
        [1.2978e-04, 1.1423e-03, 6.5583e-04],
        [1.3129e-04, 6.9141e-05, 1.4019e-03],
        [1.2180e-03, 1.2368e-03, 9.9238e-04],
        [2.2470e-04, 1.9734e-04, 6.6330e-05],
        [5.2806e-04, 1.6056e-03, 9.9672e-04],
        [3.2364e-04, 1.8881e-04, 5.8971e-04],
        [1.3494e-03, 3.5440e-03, 4.1872e-04],
        [9.6383e-04, 2.4848e-03, 5.6800e-04],
        [3.6477e-04, 2.0050e-03, 2.1160e-03],
        [3.7276e-03, 2.2627e-03, 6.3540e-05],
        [3.3009e-04, 1.4211e-04, 7.2317e-04],
        [2.9119e-04, 1.0382e-03, 4.3178e-04],
        [3.4814e-04, 2.8904e-04, 4.5491e-04],
        [6.8359e-04, 2.6440e-03, 1.0056e-03],
        [1.8816e-03, 7.1116e-03, 2.9649e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.3511e-04],
        [2.3742e-04],
        [1.5658e-04],
        [1.1781e-03],
        [5.1833e-03],
        [2.6611e-03],
        [6.8035e-05],
        [1.2419e-03],
        [7.3067e-04],
        [3.8730e-04],
        [3.1867e-04],
        [2.3973e-04],
        [1.0184e-03],
        [2.2547e-04],
        [2.3179e-04],
        [2.6046e-04]], device='cuda:0')/tensor([[9.3511e-04, 2.3742e-04, 1.5658e-04, 1.1781e-03, 5.1833e-03, 2.6611e-03,
         6.8035e-05, 1.2419e-03, 7.3067e-04, 3.8730e-04, 3.1867e-04, 2.3973e-04,
         1.0184e-03, 2.2547e-04, 2.3179e-04, 2.6046e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9351e-03],
        [8.5565e-04],
        [2.3607e-05],
        [7.8341e-04],
        [2.9065e-03],
        [3.9821e-04],
        [8.9713e-05],
        [3.1970e-03],
        [6.3191e-04],
        [4.4374e-04],
        [1.3866e-03],
        [3.5401e-04],
        [1.0932e-03],
        [1.0173e-03],
        [4.2573e-04],
        [8.4124e-04]], device='cuda:0')/tensor([[1.9351e-03, 8.5565e-04, 2.3607e-05, 7.8341e-04, 2.9065e-03, 3.9821e-04,
         8.9713e-05, 3.1970e-03, 6.3191e-04, 4.4374e-04, 1.3866e-03, 3.5401e-04,
         1.0932e-03, 1.0173e-03, 4.2573e-04, 8.4124e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[1.6224e-03],
        [3.0244e-04],
        [3.9900e-05],
        [2.6815e-04],
        [1.1656e-04],
        [1.7597e-04],
        [6.5384e-04],
        [7.2728e-04],
        [4.1264e-04],
        [7.2293e-04],
        [3.7943e-04],
        [2.3152e-04],
        [2.5068e-05],
        [7.5231e-05],
        [7.5096e-04],
        [1.2507e-03]], device='cuda:0')/tensor([[1.6224e-03, 3.0244e-04, 3.9900e-05, 2.6815e-04, 1.1656e-04, 1.7597e-04,
         6.5384e-04, 7.2728e-04, 4.1264e-04, 7.2293e-04, 3.7943e-04, 2.3152e-04,
         2.5068e-05, 7.5231e-05, 7.5096e-04, 1.2507e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.3511e-04, 1.9351e-03, 1.6224e-03],
        [2.3742e-04, 8.5565e-04, 3.0244e-04],
        [1.5658e-04, 2.3607e-05, 3.9900e-05],
        [1.1781e-03, 7.8341e-04, 2.6815e-04],
        [5.1833e-03, 2.9065e-03, 1.1656e-04],
        [2.6611e-03, 3.9821e-04, 1.7597e-04],
        [6.8035e-05, 8.9713e-05, 6.5384e-04],
        [1.2419e-03, 3.1970e-03, 7.2728e-04],
        [7.3067e-04, 6.3191e-04, 4.1264e-04],
        [3.8730e-04, 4.4374e-04, 7.2293e-04],
        [3.1867e-04, 1.3866e-03, 3.7943e-04],
        [2.3973e-04, 3.5401e-04, 2.3152e-04],
        [1.0184e-03, 1.0932e-03, 2.5068e-05],
        [2.2547e-04, 1.0173e-03, 7.5231e-05],
        [2.3179e-04, 4.2573e-04, 7.5096e-04],
        [2.6046e-04, 8.4124e-04, 1.2507e-03]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[3.3674e-04],
        [2.4004e-05],
        [8.0390e-04],
        [1.0650e-03]], device='cuda:0')/tensor([[3.3674e-04, 2.4004e-05, 8.0390e-04, 1.0650e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.4576e-03],
        [4.5797e-05],
        [3.3121e-03],
        [1.4542e-03]], device='cuda:0')/tensor([[1.4576e-03, 4.5797e-05, 3.3121e-03, 1.4542e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.2789e-03],
        [3.0189e-05],
        [2.2832e-03],
        [3.3995e-04]], device='cuda:0')/tensor([[1.2789e-03, 3.0189e-05, 2.2832e-03, 3.3995e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[3.3674e-04, 1.4576e-03, 1.2789e-03],
        [2.4004e-05, 4.5797e-05, 3.0189e-05],
        [8.0390e-04, 3.3121e-03, 2.2832e-03],
        [1.0650e-03, 1.4542e-03, 3.3995e-04]], device='cuda:0')
acc:  0.5454545454545454
Time taken to execute the de NLI task with prompt type auxiliary, variation 3 and batchsize 16: 0:01:02.023337
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI auxiliary 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 358.27it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0003],
        [0.0004],
        [0.0016],
        [0.0012],
        [0.0003],
        [0.0014],
        [0.0009],
        [0.0018],
        [0.0004],
        [0.0003],
        [0.0017],
        [0.0006],
        [0.0005],
        [0.0010],
        [0.0006]], device='cuda:0')/tensor([[0.0019, 0.0003, 0.0004, 0.0016, 0.0012, 0.0003, 0.0014, 0.0009, 0.0018,
         0.0004, 0.0003, 0.0017, 0.0006, 0.0005, 0.0010, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0212e-03],
        [6.6673e-03],
        [1.9815e-03],
        [1.4520e-03],
        [6.4481e-03],
        [4.1826e-04],
        [4.6579e-06],
        [2.0861e-05],
        [5.1522e-03],
        [2.4082e-04],
        [5.4356e-04],
        [1.1596e-03],
        [1.2105e-04],
        [4.1342e-03],
        [1.9885e-03],
        [4.4168e-04]], device='cuda:0')/tensor([[1.0212e-03, 6.6673e-03, 1.9815e-03, 1.4520e-03, 6.4481e-03, 4.1826e-04,
         4.6579e-06, 2.0861e-05, 5.1522e-03, 2.4082e-04, 5.4356e-04, 1.1596e-03,
         1.2105e-04, 4.1342e-03, 1.9885e-03, 4.4168e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5342e-04],
        [1.2880e-04],
        [2.4346e-04],
        [6.0572e-04],
        [2.6279e-04],
        [5.3709e-04],
        [4.1055e-06],
        [3.2179e-05],
        [2.4334e-03],
        [1.5308e-04],
        [2.2764e-05],
        [3.3631e-04],
        [5.7637e-04],
        [5.4706e-04],
        [1.2626e-03],
        [6.1921e-05]], device='cuda:0')/tensor([[1.5342e-04, 1.2880e-04, 2.4346e-04, 6.0572e-04, 2.6279e-04, 5.3709e-04,
         4.1055e-06, 3.2179e-05, 2.4334e-03, 1.5308e-04, 2.2764e-05, 3.3631e-04,
         5.7637e-04, 5.4706e-04, 1.2626e-03, 6.1921e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8738e-03, 1.0212e-03, 1.5342e-04],
        [3.3586e-04, 6.6673e-03, 1.2880e-04],
        [3.7970e-04, 1.9815e-03, 2.4346e-04],
        [1.5841e-03, 1.4520e-03, 6.0572e-04],
        [1.2046e-03, 6.4481e-03, 2.6279e-04],
        [3.3857e-04, 4.1826e-04, 5.3709e-04],
        [1.3894e-03, 4.6579e-06, 4.1055e-06],
        [8.7329e-04, 2.0861e-05, 3.2179e-05],
        [1.8060e-03, 5.1522e-03, 2.4334e-03],
        [3.5477e-04, 2.4082e-04, 1.5308e-04],
        [3.2216e-04, 5.4356e-04, 2.2764e-05],
        [1.7029e-03, 1.1596e-03, 3.3631e-04],
        [6.1286e-04, 1.2105e-04, 5.7637e-04],
        [5.2243e-04, 4.1342e-03, 5.4706e-04],
        [9.5325e-04, 1.9885e-03, 1.2626e-03],
        [5.6475e-04, 4.4168e-04, 6.1921e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0008],
        [0.0018],
        [0.0020],
        [0.0034],
        [0.0008],
        [0.0005],
        [0.0008],
        [0.0003],
        [0.0009],
        [0.0002],
        [0.0011],
        [0.0007],
        [0.0030],
        [0.0017],
        [0.0019]], device='cuda:0')/tensor([[0.0010, 0.0008, 0.0018, 0.0020, 0.0034, 0.0008, 0.0005, 0.0008, 0.0003,
         0.0009, 0.0002, 0.0011, 0.0007, 0.0030, 0.0017, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4823e-03],
        [2.3383e-04],
        [4.6946e-04],
        [9.4790e-04],
        [4.6749e-03],
        [2.3892e-05],
        [6.5398e-05],
        [6.7657e-03],
        [2.8972e-05],
        [9.8379e-05],
        [5.7406e-06],
        [4.3345e-03],
        [6.4990e-04],
        [4.8375e-03],
        [2.2128e-04],
        [1.4016e-03]], device='cuda:0')/tensor([[1.4823e-03, 2.3383e-04, 4.6946e-04, 9.4790e-04, 4.6749e-03, 2.3892e-05,
         6.5398e-05, 6.7657e-03, 2.8972e-05, 9.8379e-05, 5.7406e-06, 4.3345e-03,
         6.4990e-04, 4.8375e-03, 2.2128e-04, 1.4016e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.9097e-04],
        [4.0796e-04],
        [5.7391e-04],
        [1.0698e-03],
        [9.8366e-04],
        [1.7397e-04],
        [6.6443e-04],
        [9.9880e-05],
        [4.9499e-05],
        [3.9299e-05],
        [5.5701e-06],
        [2.3292e-04],
        [2.0273e-04],
        [6.8375e-04],
        [5.7558e-05],
        [5.4455e-04]], device='cuda:0')/tensor([[7.9097e-04, 4.0796e-04, 5.7391e-04, 1.0698e-03, 9.8366e-04, 1.7397e-04,
         6.6443e-04, 9.9880e-05, 4.9499e-05, 3.9299e-05, 5.5701e-06, 2.3292e-04,
         2.0273e-04, 6.8375e-04, 5.7558e-05, 5.4455e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0310e-03, 1.4823e-03, 7.9097e-04],
        [8.3778e-04, 2.3383e-04, 4.0796e-04],
        [1.8474e-03, 4.6946e-04, 5.7391e-04],
        [1.9984e-03, 9.4790e-04, 1.0698e-03],
        [3.4008e-03, 4.6749e-03, 9.8366e-04],
        [8.0732e-04, 2.3892e-05, 1.7397e-04],
        [4.8955e-04, 6.5398e-05, 6.6443e-04],
        [8.3019e-04, 6.7657e-03, 9.9880e-05],
        [2.6600e-04, 2.8972e-05, 4.9499e-05],
        [8.7296e-04, 9.8379e-05, 3.9299e-05],
        [1.9426e-04, 5.7406e-06, 5.5701e-06],
        [1.1138e-03, 4.3345e-03, 2.3292e-04],
        [7.0251e-04, 6.4990e-04, 2.0273e-04],
        [3.0303e-03, 4.8375e-03, 6.8375e-04],
        [1.7074e-03, 2.2128e-04, 5.7558e-05],
        [1.9299e-03, 1.4016e-03, 5.4455e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0014],
        [0.0014],
        [0.0008],
        [0.0009],
        [0.0010],
        [0.0014],
        [0.0014],
        [0.0009],
        [0.0019],
        [0.0010],
        [0.0009],
        [0.0012],
        [0.0049],
        [0.0011],
        [0.0003]], device='cuda:0')/tensor([[0.0001, 0.0014, 0.0014, 0.0008, 0.0009, 0.0010, 0.0014, 0.0014, 0.0009,
         0.0019, 0.0010, 0.0009, 0.0012, 0.0049, 0.0011, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4218e-04],
        [1.2287e-03],
        [2.4150e-04],
        [3.0306e-03],
        [9.0924e-04],
        [6.5891e-05],
        [3.1146e-03],
        [9.7455e-03],
        [1.2210e-03],
        [4.1702e-03],
        [3.9519e-04],
        [1.3109e-03],
        [1.0747e-03],
        [1.6356e-03],
        [8.2069e-04],
        [3.2009e-04]], device='cuda:0')/tensor([[7.4218e-04, 1.2287e-03, 2.4150e-04, 3.0306e-03, 9.0924e-04, 6.5891e-05,
         3.1146e-03, 9.7455e-03, 1.2210e-03, 4.1702e-03, 3.9519e-04, 1.3109e-03,
         1.0747e-03, 1.6356e-03, 8.2069e-04, 3.2009e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2899e-05],
        [2.9000e-04],
        [1.6455e-04],
        [9.1443e-04],
        [5.2975e-04],
        [5.8061e-04],
        [1.0198e-03],
        [2.5394e-04],
        [4.3520e-04],
        [1.5556e-04],
        [1.3879e-04],
        [1.4013e-04],
        [3.0859e-04],
        [4.6622e-04],
        [1.6742e-04],
        [1.1175e-04]], device='cuda:0')/tensor([[5.2899e-05, 2.9000e-04, 1.6455e-04, 9.1443e-04, 5.2975e-04, 5.8061e-04,
         1.0198e-03, 2.5394e-04, 4.3520e-04, 1.5556e-04, 1.3879e-04, 1.4013e-04,
         3.0859e-04, 4.6622e-04, 1.6742e-04, 1.1175e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4322e-04, 7.4218e-04, 5.2899e-05],
        [1.4158e-03, 1.2287e-03, 2.9000e-04],
        [1.3803e-03, 2.4150e-04, 1.6455e-04],
        [7.5084e-04, 3.0306e-03, 9.1443e-04],
        [8.9626e-04, 9.0924e-04, 5.2975e-04],
        [9.5488e-04, 6.5891e-05, 5.8061e-04],
        [1.4090e-03, 3.1146e-03, 1.0198e-03],
        [1.4316e-03, 9.7455e-03, 2.5394e-04],
        [8.6304e-04, 1.2210e-03, 4.3520e-04],
        [1.9003e-03, 4.1702e-03, 1.5556e-04],
        [9.9353e-04, 3.9519e-04, 1.3879e-04],
        [8.9002e-04, 1.3109e-03, 1.4013e-04],
        [1.1562e-03, 1.0747e-03, 3.0859e-04],
        [4.8650e-03, 1.6356e-03, 4.6622e-04],
        [1.0661e-03, 8.2069e-04, 1.6742e-04],
        [2.7812e-04, 3.2009e-04, 1.1175e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0010],
        [0.0010],
        [0.0008],
        [0.0036],
        [0.0019],
        [0.0003],
        [0.0016],
        [0.0011],
        [0.0031],
        [0.0025],
        [0.0010],
        [0.0019],
        [0.0013],
        [0.0004],
        [0.0017]], device='cuda:0')/tensor([[0.0006, 0.0010, 0.0010, 0.0008, 0.0036, 0.0019, 0.0003, 0.0016, 0.0011,
         0.0031, 0.0025, 0.0010, 0.0019, 0.0013, 0.0004, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.7328e-03],
        [1.3187e-03],
        [5.2527e-04],
        [2.2429e-03],
        [2.8501e-03],
        [1.6257e-03],
        [1.8708e-04],
        [2.3249e-03],
        [1.7869e-03],
        [5.4171e-03],
        [1.3127e-03],
        [5.0019e-04],
        [2.0970e-03],
        [1.8074e-03],
        [8.6836e-05],
        [2.4819e-03]], device='cuda:0')/tensor([[3.7328e-03, 1.3187e-03, 5.2527e-04, 2.2429e-03, 2.8501e-03, 1.6257e-03,
         1.8708e-04, 2.3249e-03, 1.7869e-03, 5.4171e-03, 1.3127e-03, 5.0019e-04,
         2.0970e-03, 1.8074e-03, 8.6836e-05, 2.4819e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.5052e-05],
        [4.9551e-04],
        [6.8605e-05],
        [1.7713e-04],
        [1.8431e-04],
        [3.2598e-04],
        [2.2925e-04],
        [4.1128e-04],
        [1.6308e-04],
        [3.7043e-04],
        [1.1955e-03],
        [6.0724e-05],
        [2.9620e-04],
        [2.8229e-04],
        [9.3149e-05],
        [1.2016e-03]], device='cuda:0')/tensor([[7.5052e-05, 4.9551e-04, 6.8605e-05, 1.7713e-04, 1.8431e-04, 3.2598e-04,
         2.2925e-04, 4.1128e-04, 1.6308e-04, 3.7043e-04, 1.1955e-03, 6.0724e-05,
         2.9620e-04, 2.8229e-04, 9.3149e-05, 1.2016e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8637e-04, 3.7328e-03, 7.5052e-05],
        [1.0283e-03, 1.3187e-03, 4.9551e-04],
        [9.6810e-04, 5.2527e-04, 6.8605e-05],
        [7.7276e-04, 2.2429e-03, 1.7713e-04],
        [3.6324e-03, 2.8501e-03, 1.8431e-04],
        [1.8586e-03, 1.6257e-03, 3.2598e-04],
        [3.3941e-04, 1.8708e-04, 2.2925e-04],
        [1.6378e-03, 2.3249e-03, 4.1128e-04],
        [1.1082e-03, 1.7869e-03, 1.6308e-04],
        [3.0991e-03, 5.4171e-03, 3.7043e-04],
        [2.5053e-03, 1.3127e-03, 1.1955e-03],
        [9.7585e-04, 5.0019e-04, 6.0724e-05],
        [1.8745e-03, 2.0970e-03, 2.9620e-04],
        [1.2786e-03, 1.8074e-03, 2.8229e-04],
        [3.9625e-04, 8.6836e-05, 9.3149e-05],
        [1.6772e-03, 2.4819e-03, 1.2016e-03]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0015],
        [0.0012],
        [0.0009],
        [0.0005],
        [0.0015],
        [0.0014],
        [0.0005],
        [0.0008],
        [0.0003],
        [0.0026],
        [0.0009],
        [0.0017],
        [0.0008],
        [0.0024],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0015, 0.0012, 0.0009, 0.0005, 0.0015, 0.0014, 0.0005, 0.0008,
         0.0003, 0.0026, 0.0009, 0.0017, 0.0008, 0.0024, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.9115e-04],
        [7.4628e-04],
        [6.4908e-04],
        [3.2506e-03],
        [9.8627e-04],
        [1.2907e-03],
        [6.2154e-04],
        [3.4520e-05],
        [1.1785e-03],
        [5.0876e-03],
        [7.0181e-03],
        [1.4400e-03],
        [2.3834e-03],
        [2.9253e-04],
        [6.9914e-04],
        [1.0819e-03]], device='cuda:0')/tensor([[3.9115e-04, 7.4628e-04, 6.4908e-04, 3.2506e-03, 9.8627e-04, 1.2907e-03,
         6.2154e-04, 3.4520e-05, 1.1785e-03, 5.0876e-03, 7.0181e-03, 1.4400e-03,
         2.3834e-03, 2.9253e-04, 6.9914e-04, 1.0819e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.3632e-05],
        [2.4371e-04],
        [3.9930e-04],
        [8.9173e-04],
        [1.6455e-04],
        [7.0869e-05],
        [3.7653e-05],
        [4.3754e-05],
        [9.3692e-05],
        [6.2770e-05],
        [1.4698e-03],
        [3.0732e-04],
        [1.8181e-04],
        [6.1646e-04],
        [6.3921e-05],
        [4.5638e-04]], device='cuda:0')/tensor([[9.3632e-05, 2.4371e-04, 3.9930e-04, 8.9173e-04, 1.6455e-04, 7.0869e-05,
         3.7653e-05, 4.3754e-05, 9.3692e-05, 6.2770e-05, 1.4698e-03, 3.0732e-04,
         1.8181e-04, 6.1646e-04, 6.3921e-05, 4.5638e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.4059e-04, 3.9115e-04, 9.3632e-05],
        [1.5481e-03, 7.4628e-04, 2.4371e-04],
        [1.1627e-03, 6.4908e-04, 3.9930e-04],
        [9.4076e-04, 3.2506e-03, 8.9173e-04],
        [5.3177e-04, 9.8627e-04, 1.6455e-04],
        [1.4645e-03, 1.2907e-03, 7.0869e-05],
        [1.3629e-03, 6.2154e-04, 3.7653e-05],
        [4.5639e-04, 3.4520e-05, 4.3754e-05],
        [7.5245e-04, 1.1785e-03, 9.3692e-05],
        [2.8448e-04, 5.0876e-03, 6.2770e-05],
        [2.6381e-03, 7.0181e-03, 1.4698e-03],
        [9.3715e-04, 1.4400e-03, 3.0732e-04],
        [1.7167e-03, 2.3834e-03, 1.8181e-04],
        [7.9366e-04, 2.9253e-04, 6.1646e-04],
        [2.4432e-03, 6.9914e-04, 6.3921e-05],
        [7.2276e-04, 1.0819e-03, 4.5638e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0006],
        [0.0019],
        [0.0014],
        [0.0004],
        [0.0022],
        [0.0011],
        [0.0003],
        [0.0027],
        [0.0003],
        [0.0005],
        [0.0002],
        [0.0016],
        [0.0006],
        [0.0020],
        [0.0021]], device='cuda:0')/tensor([[0.0011, 0.0006, 0.0019, 0.0014, 0.0004, 0.0022, 0.0011, 0.0003, 0.0027,
         0.0003, 0.0005, 0.0002, 0.0016, 0.0006, 0.0020, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6486e-03],
        [8.2328e-04],
        [1.2452e-03],
        [1.9951e-03],
        [1.4530e-04],
        [1.1690e-03],
        [1.6491e-03],
        [4.5473e-05],
        [1.7035e-04],
        [5.3416e-04],
        [3.3454e-03],
        [3.3189e-05],
        [5.8408e-04],
        [5.8597e-04],
        [5.3360e-04],
        [1.7925e-03]], device='cuda:0')/tensor([[1.6486e-03, 8.2328e-04, 1.2452e-03, 1.9951e-03, 1.4530e-04, 1.1690e-03,
         1.6491e-03, 4.5473e-05, 1.7035e-04, 5.3416e-04, 3.3454e-03, 3.3189e-05,
         5.8408e-04, 5.8597e-04, 5.3360e-04, 1.7925e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.1597e-04],
        [7.3467e-05],
        [3.3045e-04],
        [1.9360e-04],
        [3.6353e-05],
        [1.0473e-04],
        [1.8534e-04],
        [2.2103e-05],
        [1.0015e-04],
        [1.1840e-04],
        [1.5121e-04],
        [2.7265e-05],
        [5.8807e-05],
        [2.2259e-04],
        [6.3479e-04],
        [3.8835e-04]], device='cuda:0')/tensor([[8.1597e-04, 7.3467e-05, 3.3045e-04, 1.9360e-04, 3.6353e-05, 1.0473e-04,
         1.8534e-04, 2.2103e-05, 1.0015e-04, 1.1840e-04, 1.5121e-04, 2.7265e-05,
         5.8807e-05, 2.2259e-04, 6.3479e-04, 3.8835e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0881e-03, 1.6486e-03, 8.1597e-04],
        [6.2162e-04, 8.2328e-04, 7.3467e-05],
        [1.9373e-03, 1.2452e-03, 3.3045e-04],
        [1.4372e-03, 1.9951e-03, 1.9360e-04],
        [3.9941e-04, 1.4530e-04, 3.6353e-05],
        [2.2229e-03, 1.1690e-03, 1.0473e-04],
        [1.1417e-03, 1.6491e-03, 1.8534e-04],
        [2.5589e-04, 4.5473e-05, 2.2103e-05],
        [2.7181e-03, 1.7035e-04, 1.0015e-04],
        [2.5405e-04, 5.3416e-04, 1.1840e-04],
        [5.4680e-04, 3.3454e-03, 1.5121e-04],
        [1.6638e-04, 3.3189e-05, 2.7265e-05],
        [1.5611e-03, 5.8408e-04, 5.8807e-05],
        [5.8800e-04, 5.8597e-04, 2.2259e-04],
        [1.9954e-03, 5.3360e-04, 6.3479e-04],
        [2.0693e-03, 1.7925e-03, 3.8835e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0006],
        [0.0224],
        [0.0003],
        [0.0017],
        [0.0005],
        [0.0022],
        [0.0025],
        [0.0010],
        [0.0006],
        [0.0038],
        [0.0004],
        [0.0029],
        [0.0013],
        [0.0028],
        [0.0006]], device='cuda:0')/tensor([[0.0006, 0.0006, 0.0224, 0.0003, 0.0017, 0.0005, 0.0022, 0.0025, 0.0010,
         0.0006, 0.0038, 0.0004, 0.0029, 0.0013, 0.0028, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0005],
        [0.0079],
        [0.0003],
        [0.0003],
        [0.0001],
        [0.0004],
        [0.0029],
        [0.0009],
        [0.0001],
        [0.0013],
        [0.0005],
        [0.0020],
        [0.0002],
        [0.0009],
        [0.0006]], device='cuda:0')/tensor([[0.0010, 0.0005, 0.0079, 0.0003, 0.0003, 0.0001, 0.0004, 0.0029, 0.0009,
         0.0001, 0.0013, 0.0005, 0.0020, 0.0002, 0.0009, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9576e-04],
        [6.6950e-04],
        [8.9928e-04],
        [1.3204e-04],
        [8.0693e-05],
        [4.4974e-03],
        [1.2137e-03],
        [3.7550e-04],
        [1.0745e-03],
        [1.0323e-03],
        [6.8833e-04],
        [3.1343e-04],
        [4.1150e-04],
        [4.5143e-04],
        [1.3343e-04],
        [6.4779e-05]], device='cuda:0')/tensor([[1.9576e-04, 6.6950e-04, 8.9928e-04, 1.3204e-04, 8.0693e-05, 4.4974e-03,
         1.2137e-03, 3.7550e-04, 1.0745e-03, 1.0323e-03, 6.8833e-04, 3.1343e-04,
         4.1150e-04, 4.5143e-04, 1.3343e-04, 6.4779e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.2027e-04, 1.0282e-03, 1.9576e-04],
        [6.2074e-04, 4.7376e-04, 6.6950e-04],
        [2.2364e-02, 7.8933e-03, 8.9928e-04],
        [3.3503e-04, 3.2644e-04, 1.3204e-04],
        [1.7257e-03, 2.5652e-04, 8.0693e-05],
        [5.0380e-04, 1.4584e-04, 4.4974e-03],
        [2.1688e-03, 4.2117e-04, 1.2137e-03],
        [2.4948e-03, 2.8511e-03, 3.7550e-04],
        [9.5622e-04, 8.7060e-04, 1.0745e-03],
        [5.9677e-04, 1.3863e-04, 1.0323e-03],
        [3.7594e-03, 1.2656e-03, 6.8833e-04],
        [4.1503e-04, 5.1812e-04, 3.1343e-04],
        [2.9456e-03, 2.0423e-03, 4.1150e-04],
        [1.3350e-03, 1.6549e-04, 4.5143e-04],
        [2.8481e-03, 9.3357e-04, 1.3343e-04],
        [6.2700e-04, 6.4899e-04, 6.4779e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0049],
        [0.0014],
        [0.0040],
        [0.0034],
        [0.0067],
        [0.0015],
        [0.0060],
        [0.0023],
        [0.0003],
        [0.0028],
        [0.0018],
        [0.0004],
        [0.0006],
        [0.0022],
        [0.0015]], device='cuda:0')/tensor([[0.0007, 0.0049, 0.0014, 0.0040, 0.0034, 0.0067, 0.0015, 0.0060, 0.0023,
         0.0003, 0.0028, 0.0018, 0.0004, 0.0006, 0.0022, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2135e-05],
        [1.0749e-02],
        [2.5878e-03],
        [5.0197e-03],
        [1.9612e-03],
        [4.8038e-03],
        [5.1096e-04],
        [1.2647e-03],
        [2.5669e-03],
        [1.1683e-03],
        [4.7610e-03],
        [1.4710e-03],
        [8.5084e-04],
        [3.7019e-04],
        [2.1194e-03],
        [1.1930e-03]], device='cuda:0')/tensor([[3.2135e-05, 1.0749e-02, 2.5878e-03, 5.0197e-03, 1.9612e-03, 4.8038e-03,
         5.1096e-04, 1.2647e-03, 2.5669e-03, 1.1683e-03, 4.7610e-03, 1.4710e-03,
         8.5084e-04, 3.7019e-04, 2.1194e-03, 1.1930e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8851e-05],
        [5.0360e-04],
        [5.3115e-04],
        [3.3741e-04],
        [1.9235e-03],
        [1.5099e-03],
        [2.2995e-04],
        [1.5539e-03],
        [3.4309e-04],
        [1.4744e-04],
        [1.0544e-03],
        [3.4298e-04],
        [3.1820e-04],
        [1.4313e-04],
        [3.6443e-04],
        [1.5629e-03]], device='cuda:0')/tensor([[4.8851e-05, 5.0360e-04, 5.3115e-04, 3.3741e-04, 1.9235e-03, 1.5099e-03,
         2.2995e-04, 1.5539e-03, 3.4309e-04, 1.4744e-04, 1.0544e-03, 3.4298e-04,
         3.1820e-04, 1.4313e-04, 3.6443e-04, 1.5629e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.3491e-04, 3.2135e-05, 4.8851e-05],
        [4.8669e-03, 1.0749e-02, 5.0360e-04],
        [1.4178e-03, 2.5878e-03, 5.3115e-04],
        [4.0077e-03, 5.0197e-03, 3.3741e-04],
        [3.3770e-03, 1.9612e-03, 1.9235e-03],
        [6.7068e-03, 4.8038e-03, 1.5099e-03],
        [1.4616e-03, 5.1096e-04, 2.2995e-04],
        [5.9822e-03, 1.2647e-03, 1.5539e-03],
        [2.3488e-03, 2.5669e-03, 3.4309e-04],
        [3.0395e-04, 1.1683e-03, 1.4744e-04],
        [2.8087e-03, 4.7610e-03, 1.0544e-03],
        [1.7895e-03, 1.4710e-03, 3.4298e-04],
        [4.2223e-04, 8.5084e-04, 3.1820e-04],
        [5.6852e-04, 3.7019e-04, 1.4313e-04],
        [2.1595e-03, 2.1194e-03, 3.6443e-04],
        [1.4770e-03, 1.1930e-03, 1.5629e-03]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[0.0003],
        [0.0007],
        [0.0029],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0007, 0.0029, 0.0008]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0025],
        [0.0008],
        [0.0032],
        [0.0005]], device='cuda:0')/tensor([[0.0025, 0.0008, 0.0032, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.4460e-05],
        [5.8554e-05],
        [3.7579e-04],
        [2.6158e-04]], device='cuda:0')/tensor([[1.4460e-05, 5.8554e-05, 3.7579e-04, 2.6158e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.9765e-04, 2.5457e-03, 1.4460e-05],
        [6.7986e-04, 7.8786e-04, 5.8554e-05],
        [2.9133e-03, 3.2334e-03, 3.7579e-04],
        [8.4128e-04, 4.6669e-04, 2.6158e-04]], device='cuda:0')
acc:  0.2727272727272727
Time taken to execute the de NLI task with prompt type auxiliary, variation 4 and batchsize 16: 0:01:01.737526
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI auxiliary 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 369.05it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0039],
        [0.0005],
        [0.0003],
        [0.0010],
        [0.0019],
        [0.0011],
        [0.0015],
        [0.0002],
        [0.0022],
        [0.0006],
        [0.0004],
        [0.0014],
        [0.0042],
        [0.0037],
        [0.0012],
        [0.0012]], device='cuda:0')/tensor([[0.0039, 0.0005, 0.0003, 0.0010, 0.0019, 0.0011, 0.0015, 0.0002, 0.0022,
         0.0006, 0.0004, 0.0014, 0.0042, 0.0037, 0.0012, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.1050e-03],
        [2.5518e-03],
        [4.5537e-05],
        [2.0367e-03],
        [4.4296e-03],
        [2.3678e-03],
        [2.0411e-03],
        [1.0683e-03],
        [6.9923e-03],
        [1.5006e-03],
        [2.9207e-04],
        [1.6477e-03],
        [2.0798e-03],
        [2.1174e-05],
        [1.8408e-03],
        [6.0071e-04]], device='cuda:0')/tensor([[4.1050e-03, 2.5518e-03, 4.5537e-05, 2.0367e-03, 4.4296e-03, 2.3678e-03,
         2.0411e-03, 1.0683e-03, 6.9923e-03, 1.5006e-03, 2.9207e-04, 1.6477e-03,
         2.0798e-03, 2.1174e-05, 1.8408e-03, 6.0071e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.8489e-04],
        [3.7808e-04],
        [3.2497e-04],
        [2.9092e-04],
        [2.0521e-04],
        [2.6169e-04],
        [2.5239e-04],
        [7.2965e-05],
        [8.2640e-03],
        [1.5583e-04],
        [7.2517e-05],
        [4.0069e-04],
        [1.4480e-03],
        [2.4290e-04],
        [2.0163e-03],
        [8.8355e-04]], device='cuda:0')/tensor([[2.8489e-04, 3.7808e-04, 3.2497e-04, 2.9092e-04, 2.0521e-04, 2.6169e-04,
         2.5239e-04, 7.2965e-05, 8.2640e-03, 1.5583e-04, 7.2517e-05, 4.0069e-04,
         1.4480e-03, 2.4290e-04, 2.0163e-03, 8.8355e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.9360e-03, 4.1050e-03, 2.8489e-04],
        [4.7336e-04, 2.5518e-03, 3.7808e-04],
        [3.4821e-04, 4.5537e-05, 3.2497e-04],
        [1.0163e-03, 2.0367e-03, 2.9092e-04],
        [1.9425e-03, 4.4296e-03, 2.0521e-04],
        [1.0668e-03, 2.3678e-03, 2.6169e-04],
        [1.4697e-03, 2.0411e-03, 2.5239e-04],
        [2.4847e-04, 1.0683e-03, 7.2965e-05],
        [2.1705e-03, 6.9923e-03, 8.2640e-03],
        [5.5134e-04, 1.5006e-03, 1.5583e-04],
        [3.5302e-04, 2.9207e-04, 7.2517e-05],
        [1.3952e-03, 1.6477e-03, 4.0069e-04],
        [4.1738e-03, 2.0798e-03, 1.4480e-03],
        [3.6549e-03, 2.1174e-05, 2.4290e-04],
        [1.1853e-03, 1.8408e-03, 2.0163e-03],
        [1.2381e-03, 6.0071e-04, 8.8355e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0011],
        [0.0014],
        [0.0006],
        [0.0023],
        [0.0020],
        [0.0019],
        [0.0008],
        [0.0005],
        [0.0015],
        [0.0012],
        [0.0011],
        [0.0014],
        [0.0008],
        [0.0002]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0011, 0.0014, 0.0006, 0.0023, 0.0020, 0.0019, 0.0008,
         0.0005, 0.0015, 0.0012, 0.0011, 0.0014, 0.0008, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0020],
        [0.0002],
        [0.0002],
        [0.0036],
        [0.0006],
        [0.0075],
        [0.0045],
        [0.0053],
        [0.0014],
        [0.0002],
        [0.0030],
        [0.0009],
        [0.0036],
        [0.0063],
        [0.0031],
        [0.0001]], device='cuda:0')/tensor([[0.0020, 0.0002, 0.0002, 0.0036, 0.0006, 0.0075, 0.0045, 0.0053, 0.0014,
         0.0002, 0.0030, 0.0009, 0.0036, 0.0063, 0.0031, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.9186e-04],
        [9.2109e-04],
        [5.7268e-04],
        [6.9522e-04],
        [1.7943e-04],
        [4.7788e-04],
        [4.6645e-04],
        [3.7272e-04],
        [1.9262e-04],
        [1.8316e-04],
        [3.7581e-04],
        [1.7955e-04],
        [3.7014e-04],
        [8.2033e-04],
        [1.2348e-04],
        [8.4855e-05]], device='cuda:0')/tensor([[7.9186e-04, 9.2109e-04, 5.7268e-04, 6.9522e-04, 1.7943e-04, 4.7788e-04,
         4.6645e-04, 3.7272e-04, 1.9262e-04, 1.8316e-04, 3.7581e-04, 1.7955e-04,
         3.7014e-04, 8.2033e-04, 1.2348e-04, 8.4855e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7577e-04, 1.9846e-03, 7.9186e-04],
        [5.0499e-04, 1.7293e-04, 9.2109e-04],
        [1.1287e-03, 2.2516e-04, 5.7268e-04],
        [1.4429e-03, 3.5562e-03, 6.9522e-04],
        [5.5291e-04, 6.2874e-04, 1.7943e-04],
        [2.2525e-03, 7.5244e-03, 4.7788e-04],
        [2.0048e-03, 4.5118e-03, 4.6645e-04],
        [1.8592e-03, 5.2782e-03, 3.7272e-04],
        [8.2819e-04, 1.4312e-03, 1.9262e-04],
        [4.9122e-04, 1.7134e-04, 1.8316e-04],
        [1.4916e-03, 2.9949e-03, 3.7581e-04],
        [1.2468e-03, 8.6559e-04, 1.7955e-04],
        [1.0979e-03, 3.5612e-03, 3.7014e-04],
        [1.4274e-03, 6.2649e-03, 8.2033e-04],
        [8.3518e-04, 3.1235e-03, 1.2348e-04],
        [1.5067e-04, 1.1128e-04, 8.4855e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0006],
        [0.0008],
        [0.0011],
        [0.0009],
        [0.0017],
        [0.0003],
        [0.0027],
        [0.0008],
        [0.0026],
        [0.0010],
        [0.0011],
        [0.0008],
        [0.0005],
        [0.0008],
        [0.0032]], device='cuda:0')/tensor([[0.0010, 0.0006, 0.0008, 0.0011, 0.0009, 0.0017, 0.0003, 0.0027, 0.0008,
         0.0026, 0.0010, 0.0011, 0.0008, 0.0005, 0.0008, 0.0032]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0021],
        [0.0001],
        [0.0030],
        [0.0008],
        [0.0023],
        [0.0013],
        [0.0014],
        [0.0025],
        [0.0006],
        [0.0015],
        [0.0039],
        [0.0018],
        [0.0022],
        [0.0006],
        [0.0017],
        [0.0008]], device='cuda:0')/tensor([[0.0021, 0.0001, 0.0030, 0.0008, 0.0023, 0.0013, 0.0014, 0.0025, 0.0006,
         0.0015, 0.0039, 0.0018, 0.0022, 0.0006, 0.0017, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0001],
        [0.0002],
        [0.0007],
        [0.0001],
        [0.0002],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0001],
        [0.0004],
        [0.0002]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0007, 0.0001, 0.0002, 0.0006, 0.0003, 0.0003, 0.0003,
         0.0002, 0.0006, 0.0006, 0.0002, 0.0001, 0.0004, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0010, 0.0021, 0.0001],
        [0.0006, 0.0001, 0.0002],
        [0.0008, 0.0030, 0.0007],
        [0.0011, 0.0008, 0.0001],
        [0.0009, 0.0023, 0.0002],
        [0.0017, 0.0013, 0.0006],
        [0.0003, 0.0014, 0.0003],
        [0.0027, 0.0025, 0.0003],
        [0.0008, 0.0006, 0.0003],
        [0.0026, 0.0015, 0.0002],
        [0.0010, 0.0039, 0.0006],
        [0.0011, 0.0018, 0.0006],
        [0.0008, 0.0022, 0.0002],
        [0.0005, 0.0006, 0.0001],
        [0.0008, 0.0017, 0.0004],
        [0.0032, 0.0008, 0.0002]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.0443e-04],
        [1.2104e-03],
        [5.3417e-04],
        [2.9917e-04],
        [7.7446e-04],
        [9.1519e-04],
        [1.7052e-03],
        [8.4716e-04],
        [4.2061e-04],
        [2.0051e-03],
        [9.3651e-04],
        [1.7432e-03],
        [1.2600e-03],
        [8.6352e-04],
        [9.8060e-05],
        [6.0725e-04]], device='cuda:0')/tensor([[8.0443e-04, 1.2104e-03, 5.3417e-04, 2.9917e-04, 7.7446e-04, 9.1519e-04,
         1.7052e-03, 8.4716e-04, 4.2061e-04, 2.0051e-03, 9.3651e-04, 1.7432e-03,
         1.2600e-03, 8.6352e-04, 9.8060e-05, 6.0725e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0015],
        [0.0005],
        [0.0005],
        [0.0011],
        [0.0051],
        [0.0028],
        [0.0011],
        [0.0053],
        [0.0022],
        [0.0027],
        [0.0061],
        [0.0066],
        [0.0038],
        [0.0013],
        [0.0027]], device='cuda:0')/tensor([[0.0003, 0.0015, 0.0005, 0.0005, 0.0011, 0.0051, 0.0028, 0.0011, 0.0053,
         0.0022, 0.0027, 0.0061, 0.0066, 0.0038, 0.0013, 0.0027]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.1997e-04],
        [5.5553e-05],
        [2.8724e-04],
        [2.3461e-04],
        [2.7887e-04],
        [2.7659e-04],
        [1.0141e-04],
        [1.6052e-04],
        [1.1690e-04],
        [8.7533e-05],
        [6.1170e-04],
        [6.2494e-04],
        [3.8138e-04],
        [1.5776e-03],
        [3.3565e-04],
        [4.3135e-04]], device='cuda:0')/tensor([[7.1997e-04, 5.5553e-05, 2.8724e-04, 2.3461e-04, 2.7887e-04, 2.7659e-04,
         1.0141e-04, 1.6052e-04, 1.1690e-04, 8.7533e-05, 6.1170e-04, 6.2494e-04,
         3.8138e-04, 1.5776e-03, 3.3565e-04, 4.3135e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.0443e-04, 2.5737e-04, 7.1997e-04],
        [1.2104e-03, 1.5147e-03, 5.5553e-05],
        [5.3417e-04, 4.8345e-04, 2.8724e-04],
        [2.9917e-04, 5.0506e-04, 2.3461e-04],
        [7.7446e-04, 1.0720e-03, 2.7887e-04],
        [9.1519e-04, 5.1441e-03, 2.7659e-04],
        [1.7052e-03, 2.7629e-03, 1.0141e-04],
        [8.4716e-04, 1.1269e-03, 1.6052e-04],
        [4.2061e-04, 5.3271e-03, 1.1690e-04],
        [2.0051e-03, 2.2271e-03, 8.7533e-05],
        [9.3651e-04, 2.6621e-03, 6.1170e-04],
        [1.7432e-03, 6.0639e-03, 6.2494e-04],
        [1.2600e-03, 6.5553e-03, 3.8138e-04],
        [8.6352e-04, 3.8426e-03, 1.5776e-03],
        [9.8060e-05, 1.2701e-03, 3.3565e-04],
        [6.0725e-04, 2.7308e-03, 4.3135e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0008],
        [0.0013],
        [0.0015],
        [0.0007],
        [0.0006],
        [0.0007],
        [0.0008],
        [0.0019],
        [0.0014],
        [0.0006],
        [0.0021],
        [0.0005],
        [0.0009],
        [0.0005],
        [0.0015]], device='cuda:0')/tensor([[0.0009, 0.0008, 0.0013, 0.0015, 0.0007, 0.0006, 0.0007, 0.0008, 0.0019,
         0.0014, 0.0006, 0.0021, 0.0005, 0.0009, 0.0005, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0008],
        [0.0026],
        [0.0005],
        [0.0024],
        [0.0041],
        [0.0015],
        [0.0010],
        [0.0015],
        [0.0023],
        [0.0010],
        [0.0027],
        [0.0012],
        [0.0037],
        [0.0031],
        [0.0026]], device='cuda:0')/tensor([[0.0006, 0.0008, 0.0026, 0.0005, 0.0024, 0.0041, 0.0015, 0.0010, 0.0015,
         0.0023, 0.0010, 0.0027, 0.0012, 0.0037, 0.0031, 0.0026]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0177e-04],
        [8.7802e-05],
        [2.6652e-04],
        [1.9675e-03],
        [2.1074e-04],
        [1.4689e-04],
        [3.9201e-04],
        [1.0614e-04],
        [1.4397e-04],
        [5.8491e-04],
        [5.9554e-05],
        [4.5273e-04],
        [2.9007e-04],
        [9.3833e-04],
        [3.4555e-04],
        [2.3004e-04]], device='cuda:0')/tensor([[1.0177e-04, 8.7802e-05, 2.6652e-04, 1.9675e-03, 2.1074e-04, 1.4689e-04,
         3.9201e-04, 1.0614e-04, 1.4397e-04, 5.8491e-04, 5.9554e-05, 4.5273e-04,
         2.9007e-04, 9.3833e-04, 3.4555e-04, 2.3004e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.9991e-04, 6.3285e-04, 1.0177e-04],
        [7.5414e-04, 8.4391e-04, 8.7802e-05],
        [1.2720e-03, 2.6410e-03, 2.6652e-04],
        [1.5272e-03, 5.3702e-04, 1.9675e-03],
        [7.0178e-04, 2.3546e-03, 2.1074e-04],
        [6.4379e-04, 4.0878e-03, 1.4689e-04],
        [6.7399e-04, 1.4531e-03, 3.9201e-04],
        [7.9390e-04, 1.0180e-03, 1.0614e-04],
        [1.9133e-03, 1.4612e-03, 1.4397e-04],
        [1.3682e-03, 2.3141e-03, 5.8491e-04],
        [6.0553e-04, 1.0090e-03, 5.9554e-05],
        [2.1177e-03, 2.7316e-03, 4.5273e-04],
        [5.4668e-04, 1.2003e-03, 2.9007e-04],
        [9.3725e-04, 3.6810e-03, 9.3833e-04],
        [4.7521e-04, 3.1159e-03, 3.4555e-04],
        [1.5324e-03, 2.6100e-03, 2.3004e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0004],
        [0.0007],
        [0.0005],
        [0.0117],
        [0.0008],
        [0.0003],
        [0.0007],
        [0.0011],
        [0.0031],
        [0.0019],
        [0.0022],
        [0.0007],
        [0.0004],
        [0.0010]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0004, 0.0007, 0.0005, 0.0117, 0.0008, 0.0003, 0.0007,
         0.0011, 0.0031, 0.0019, 0.0022, 0.0007, 0.0004, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0007],
        [0.0006],
        [0.0023],
        [0.0039],
        [0.0097],
        [0.0015],
        [0.0014],
        [0.0005],
        [0.0101],
        [0.0034],
        [0.0026],
        [0.0029],
        [0.0024],
        [0.0015],
        [0.0050]], device='cuda:0')/tensor([[0.0024, 0.0007, 0.0006, 0.0023, 0.0039, 0.0097, 0.0015, 0.0014, 0.0005,
         0.0101, 0.0034, 0.0026, 0.0029, 0.0024, 0.0015, 0.0050]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[0.0004],
        [0.0005],
        [0.0004],
        [0.0010],
        [0.0004],
        [0.0010],
        [0.0005],
        [0.0001],
        [0.0023],
        [0.0002],
        [0.0008],
        [0.0003],
        [0.0001],
        [0.0006],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0004, 0.0010, 0.0004, 0.0010, 0.0005, 0.0001, 0.0023,
         0.0002, 0.0008, 0.0003, 0.0001, 0.0006, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0006, 0.0024, 0.0004],
        [0.0004, 0.0007, 0.0005],
        [0.0004, 0.0006, 0.0004],
        [0.0007, 0.0023, 0.0010],
        [0.0005, 0.0039, 0.0004],
        [0.0117, 0.0097, 0.0010],
        [0.0008, 0.0015, 0.0005],
        [0.0003, 0.0014, 0.0001],
        [0.0007, 0.0005, 0.0023],
        [0.0011, 0.0101, 0.0002],
        [0.0031, 0.0034, 0.0008],
        [0.0019, 0.0026, 0.0003],
        [0.0022, 0.0029, 0.0001],
        [0.0007, 0.0024, 0.0006],
        [0.0004, 0.0015, 0.0002],
        [0.0010, 0.0050, 0.0006]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0014],
        [0.0003],
        [0.0011],
        [0.0005],
        [0.0004],
        [0.0003],
        [0.0020],
        [0.0004],
        [0.0036],
        [0.0005],
        [0.0007],
        [0.0011],
        [0.0009],
        [0.0032]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0014, 0.0003, 0.0011, 0.0005, 0.0004, 0.0003, 0.0020,
         0.0004, 0.0036, 0.0005, 0.0007, 0.0011, 0.0009, 0.0032]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.4622e-05],
        [9.5565e-04],
        [2.0526e-03],
        [1.0380e-03],
        [4.3286e-03],
        [7.1577e-04],
        [6.6352e-03],
        [1.4641e-03],
        [2.9967e-03],
        [5.3718e-03],
        [4.4168e-03],
        [1.3481e-03],
        [3.4343e-03],
        [1.3190e-03],
        [2.3627e-03],
        [4.7753e-03]], device='cuda:0')/tensor([[9.4622e-05, 9.5565e-04, 2.0526e-03, 1.0380e-03, 4.3286e-03, 7.1577e-04,
         6.6352e-03, 1.4641e-03, 2.9967e-03, 5.3718e-03, 4.4168e-03, 1.3481e-03,
         3.4343e-03, 1.3190e-03, 2.3627e-03, 4.7753e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0008],
        [0.0002],
        [0.0008],
        [0.0008],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0006],
        [0.0010]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0008, 0.0008, 0.0002, 0.0003, 0.0004, 0.0003, 0.0004,
         0.0006, 0.0002, 0.0005, 0.0003, 0.0001, 0.0006, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5450e-04, 9.4622e-05, 8.4922e-04],
        [3.3580e-04, 9.5565e-04, 2.4891e-04],
        [1.3879e-03, 2.0526e-03, 8.2720e-04],
        [2.6031e-04, 1.0380e-03, 7.8241e-04],
        [1.1385e-03, 4.3286e-03, 2.4055e-04],
        [4.7614e-04, 7.1577e-04, 2.5694e-04],
        [3.9961e-04, 6.6352e-03, 3.7623e-04],
        [2.5206e-04, 1.4641e-03, 3.2223e-04],
        [2.0318e-03, 2.9967e-03, 3.5697e-04],
        [4.1924e-04, 5.3718e-03, 5.9945e-04],
        [3.6453e-03, 4.4168e-03, 1.6414e-04],
        [4.5536e-04, 1.3481e-03, 5.4916e-04],
        [6.7096e-04, 3.4343e-03, 3.3818e-04],
        [1.0707e-03, 1.3190e-03, 1.1974e-04],
        [8.5606e-04, 2.3627e-03, 5.9102e-04],
        [3.1748e-03, 4.7753e-03, 1.0073e-03]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0005],
        [0.0007],
        [0.0004],
        [0.0015],
        [0.0007],
        [0.0011],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0028],
        [0.0029],
        [0.0014],
        [0.0015],
        [0.0004],
        [0.0011]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0007, 0.0004, 0.0015, 0.0007, 0.0011, 0.0002, 0.0005,
         0.0007, 0.0028, 0.0029, 0.0014, 0.0015, 0.0004, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0047],
        [0.0099],
        [0.0065],
        [0.0002],
        [0.0020],
        [0.0028],
        [0.0016],
        [0.0003],
        [0.0018],
        [0.0024],
        [0.0032],
        [0.0029],
        [0.0031],
        [0.0035],
        [0.0017],
        [0.0018]], device='cuda:0')/tensor([[0.0047, 0.0099, 0.0065, 0.0002, 0.0020, 0.0028, 0.0016, 0.0003, 0.0018,
         0.0024, 0.0032, 0.0029, 0.0031, 0.0035, 0.0017, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0002],
        [0.0007],
        [0.0003],
        [0.0002],
        [0.0011],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0003],
        [0.0006],
        [0.0002],
        [0.0009],
        [0.0010],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0007, 0.0003, 0.0002, 0.0011, 0.0002, 0.0002, 0.0006,
         0.0003, 0.0006, 0.0002, 0.0009, 0.0010, 0.0002, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0003, 0.0047, 0.0002],
        [0.0005, 0.0099, 0.0002],
        [0.0007, 0.0065, 0.0007],
        [0.0004, 0.0002, 0.0003],
        [0.0015, 0.0020, 0.0002],
        [0.0007, 0.0028, 0.0011],
        [0.0011, 0.0016, 0.0002],
        [0.0002, 0.0003, 0.0002],
        [0.0005, 0.0018, 0.0006],
        [0.0007, 0.0024, 0.0003],
        [0.0028, 0.0032, 0.0006],
        [0.0029, 0.0029, 0.0002],
        [0.0014, 0.0031, 0.0009],
        [0.0015, 0.0035, 0.0010],
        [0.0004, 0.0017, 0.0002],
        [0.0011, 0.0018, 0.0002]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0007],
        [0.0014],
        [0.0005],
        [0.0012]], device='cuda:0')/tensor([[0.0007, 0.0014, 0.0005, 0.0012]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0013],
        [0.0017],
        [0.0011],
        [0.0025]], device='cuda:0')/tensor([[0.0013, 0.0017, 0.0011, 0.0025]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0004],
        [0.0005],
        [0.0002],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0002, 0.0003]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0007, 0.0013, 0.0004],
        [0.0014, 0.0017, 0.0005],
        [0.0005, 0.0011, 0.0002],
        [0.0012, 0.0025, 0.0003]], device='cuda:0')
acc:  0.44696969696969696
Time taken to execute the de NLI task with prompt type auxiliary, variation 5 and batchsize 16: 0:01:01.718762
path ['42', 'de', 'flan', 'NLI', 'auxiliary', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI modal 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 370.28it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0017],
        [0.0013],
        [0.0004],
        [0.0007],
        [0.0013],
        [0.0004],
        [0.0005],
        [0.0006],
        [0.0003],
        [0.0001],
        [0.0005],
        [0.0006],
        [0.0008],
        [0.0014],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0017, 0.0013, 0.0004, 0.0007, 0.0013, 0.0004, 0.0005, 0.0006,
         0.0003, 0.0001, 0.0005, 0.0006, 0.0008, 0.0014, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0016],
        [0.0023],
        [0.0026],
        [0.0041],
        [0.0015],
        [0.0008],
        [0.0003],
        [0.0006],
        [0.0002],
        [0.0013],
        [0.0036],
        [0.0015],
        [0.0010],
        [0.0045],
        [0.0012]], device='cuda:0')/tensor([[0.0008, 0.0016, 0.0023, 0.0026, 0.0041, 0.0015, 0.0008, 0.0003, 0.0006,
         0.0002, 0.0013, 0.0036, 0.0015, 0.0010, 0.0045, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.6876e-05],
        [2.7117e-04],
        [1.4160e-04],
        [1.8735e-04],
        [2.0823e-04],
        [5.2697e-04],
        [2.2003e-04],
        [1.7052e-04],
        [1.2269e-04],
        [3.3401e-05],
        [4.0917e-05],
        [2.6173e-04],
        [2.0011e-04],
        [2.1117e-04],
        [3.5580e-04],
        [1.0674e-04]], device='cuda:0')/tensor([[7.6876e-05, 2.7117e-04, 1.4160e-04, 1.8735e-04, 2.0823e-04, 5.2697e-04,
         2.2003e-04, 1.7052e-04, 1.2269e-04, 3.3401e-05, 4.0917e-05, 2.6173e-04,
         2.0011e-04, 2.1117e-04, 3.5580e-04, 1.0674e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.5333e-04, 8.1695e-04, 7.6876e-05],
        [1.7164e-03, 1.5605e-03, 2.7117e-04],
        [1.2687e-03, 2.2677e-03, 1.4160e-04],
        [3.5480e-04, 2.5671e-03, 1.8735e-04],
        [6.7374e-04, 4.0638e-03, 2.0823e-04],
        [1.2976e-03, 1.4553e-03, 5.2697e-04],
        [4.0833e-04, 8.3835e-04, 2.2003e-04],
        [4.7211e-04, 2.9482e-04, 1.7052e-04],
        [5.9870e-04, 6.1748e-04, 1.2269e-04],
        [2.8589e-04, 2.3032e-04, 3.3401e-05],
        [1.2402e-04, 1.3445e-03, 4.0917e-05],
        [5.3977e-04, 3.5631e-03, 2.6173e-04],
        [5.8197e-04, 1.5380e-03, 2.0011e-04],
        [7.7665e-04, 1.0478e-03, 2.1117e-04],
        [1.3701e-03, 4.4731e-03, 3.5580e-04],
        [5.9459e-04, 1.1654e-03, 1.0674e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0005],
        [0.0015],
        [0.0008],
        [0.0011],
        [0.0006],
        [0.0014],
        [0.0025],
        [0.0004],
        [0.0002],
        [0.0008],
        [0.0005],
        [0.0004],
        [0.0017],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0001, 0.0005, 0.0015, 0.0008, 0.0011, 0.0006, 0.0014, 0.0025, 0.0004,
         0.0002, 0.0008, 0.0005, 0.0004, 0.0017, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0007],
        [0.0020],
        [0.0006],
        [0.0013],
        [0.0012],
        [0.0012],
        [0.0019],
        [0.0010],
        [0.0002],
        [0.0008],
        [0.0013],
        [0.0006],
        [0.0126],
        [0.0006],
        [0.0004]], device='cuda:0')/tensor([[0.0018, 0.0007, 0.0020, 0.0006, 0.0013, 0.0012, 0.0012, 0.0019, 0.0010,
         0.0002, 0.0008, 0.0013, 0.0006, 0.0126, 0.0006, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.6466e-05],
        [3.6086e-04],
        [4.1980e-04],
        [1.1989e-04],
        [3.8810e-05],
        [4.5584e-05],
        [1.4020e-04],
        [2.1207e-04],
        [5.0905e-05],
        [4.9603e-05],
        [6.3228e-05],
        [1.1236e-04],
        [7.3540e-04],
        [2.9800e-04],
        [3.5715e-05],
        [1.0061e-04]], device='cuda:0')/tensor([[8.6466e-05, 3.6086e-04, 4.1980e-04, 1.1989e-04, 3.8810e-05, 4.5584e-05,
         1.4020e-04, 2.1207e-04, 5.0905e-05, 4.9603e-05, 6.3228e-05, 1.1236e-04,
         7.3540e-04, 2.9800e-04, 3.5715e-05, 1.0061e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0819e-04, 1.7659e-03, 8.6466e-05],
        [5.3763e-04, 7.3262e-04, 3.6086e-04],
        [1.4824e-03, 2.0024e-03, 4.1980e-04],
        [8.0742e-04, 6.3765e-04, 1.1989e-04],
        [1.1005e-03, 1.3290e-03, 3.8810e-05],
        [6.1100e-04, 1.1970e-03, 4.5584e-05],
        [1.3525e-03, 1.2239e-03, 1.4020e-04],
        [2.4669e-03, 1.8967e-03, 2.1207e-04],
        [4.2976e-04, 9.5213e-04, 5.0905e-05],
        [1.7978e-04, 1.8310e-04, 4.9603e-05],
        [8.1126e-04, 8.3678e-04, 6.3228e-05],
        [4.7281e-04, 1.3257e-03, 1.1236e-04],
        [3.8477e-04, 5.9941e-04, 7.3540e-04],
        [1.6880e-03, 1.2603e-02, 2.9800e-04],
        [4.6842e-04, 6.0375e-04, 3.5715e-05],
        [7.6079e-04, 3.8242e-04, 1.0061e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0010],
        [0.0016],
        [0.0011],
        [0.0007],
        [0.0014],
        [0.0009],
        [0.0011],
        [0.0002],
        [0.0009],
        [0.0016],
        [0.0015],
        [0.0019],
        [0.0010],
        [0.0018],
        [0.0013]], device='cuda:0')/tensor([[0.0014, 0.0010, 0.0016, 0.0011, 0.0007, 0.0014, 0.0009, 0.0011, 0.0002,
         0.0009, 0.0016, 0.0015, 0.0019, 0.0010, 0.0018, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0027],
        [0.0021],
        [0.0004],
        [0.0020],
        [0.0011],
        [0.0031],
        [0.0026],
        [0.0017],
        [0.0002],
        [0.0012],
        [0.0075],
        [0.0012],
        [0.0051],
        [0.0031],
        [0.0018],
        [0.0045]], device='cuda:0')/tensor([[0.0027, 0.0021, 0.0004, 0.0020, 0.0011, 0.0031, 0.0026, 0.0017, 0.0002,
         0.0012, 0.0075, 0.0012, 0.0051, 0.0031, 0.0018, 0.0045]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.6593e-04],
        [1.9111e-04],
        [2.1285e-04],
        [6.9176e-05],
        [1.9828e-04],
        [5.5341e-05],
        [4.0193e-04],
        [3.3902e-04],
        [5.1030e-05],
        [1.0198e-04],
        [1.9614e-04],
        [7.2889e-05],
        [3.3888e-04],
        [2.7249e-04],
        [1.9464e-04],
        [3.6761e-04]], device='cuda:0')/tensor([[2.6593e-04, 1.9111e-04, 2.1285e-04, 6.9176e-05, 1.9828e-04, 5.5341e-05,
         4.0193e-04, 3.3902e-04, 5.1030e-05, 1.0198e-04, 1.9614e-04, 7.2889e-05,
         3.3888e-04, 2.7249e-04, 1.9464e-04, 3.6761e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3596e-03, 2.7296e-03, 2.6593e-04],
        [1.0367e-03, 2.0653e-03, 1.9111e-04],
        [1.6095e-03, 4.2922e-04, 2.1285e-04],
        [1.0528e-03, 2.0097e-03, 6.9176e-05],
        [7.3509e-04, 1.1137e-03, 1.9828e-04],
        [1.4075e-03, 3.1379e-03, 5.5341e-05],
        [9.0846e-04, 2.6263e-03, 4.0193e-04],
        [1.0546e-03, 1.6732e-03, 3.3902e-04],
        [1.5122e-04, 2.4605e-04, 5.1030e-05],
        [9.3203e-04, 1.1633e-03, 1.0198e-04],
        [1.6384e-03, 7.4969e-03, 1.9614e-04],
        [1.5019e-03, 1.2335e-03, 7.2889e-05],
        [1.8752e-03, 5.0759e-03, 3.3888e-04],
        [1.0100e-03, 3.0800e-03, 2.7249e-04],
        [1.7815e-03, 1.7609e-03, 1.9464e-04],
        [1.2564e-03, 4.5384e-03, 3.6761e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0014],
        [0.0005],
        [0.0006],
        [0.0007],
        [0.0009],
        [0.0010],
        [0.0002],
        [0.0008],
        [0.0003],
        [0.0006],
        [0.0019],
        [0.0003],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0014, 0.0005, 0.0006, 0.0007, 0.0009, 0.0010, 0.0002,
         0.0008, 0.0003, 0.0006, 0.0019, 0.0003, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0011],
        [0.0013],
        [0.0008],
        [0.0006],
        [0.0011],
        [0.0023],
        [0.0034],
        [0.0002],
        [0.0024],
        [0.0008],
        [0.0019],
        [0.0017],
        [0.0007],
        [0.0013],
        [0.0009]], device='cuda:0')/tensor([[0.0015, 0.0011, 0.0013, 0.0008, 0.0006, 0.0011, 0.0023, 0.0034, 0.0002,
         0.0024, 0.0008, 0.0019, 0.0017, 0.0007, 0.0013, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.7741e-04],
        [1.0730e-04],
        [1.4670e-04],
        [1.5219e-04],
        [4.8887e-05],
        [5.4044e-05],
        [1.3041e-04],
        [3.5605e-04],
        [2.6255e-04],
        [2.2170e-04],
        [1.1308e-04],
        [1.3209e-04],
        [1.5441e-04],
        [1.5395e-04],
        [1.0412e-04],
        [4.9933e-04]], device='cuda:0')/tensor([[3.7741e-04, 1.0730e-04, 1.4670e-04, 1.5219e-04, 4.8887e-05, 5.4044e-05,
         1.3041e-04, 3.5605e-04, 2.6255e-04, 2.2170e-04, 1.1308e-04, 1.3209e-04,
         1.5441e-04, 1.5395e-04, 1.0412e-04, 4.9933e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.4714e-04, 1.5099e-03, 3.7741e-04],
        [4.6184e-04, 1.1276e-03, 1.0730e-04],
        [1.4357e-03, 1.2804e-03, 1.4670e-04],
        [4.5694e-04, 8.0978e-04, 1.5219e-04],
        [5.8008e-04, 6.3944e-04, 4.8887e-05],
        [6.8813e-04, 1.0850e-03, 5.4044e-05],
        [8.5812e-04, 2.2986e-03, 1.3041e-04],
        [9.8939e-04, 3.4486e-03, 3.5605e-04],
        [2.2598e-04, 1.6694e-04, 2.6255e-04],
        [8.4566e-04, 2.4160e-03, 2.2170e-04],
        [3.3887e-04, 7.5765e-04, 1.1308e-04],
        [5.9119e-04, 1.9235e-03, 1.3209e-04],
        [1.9016e-03, 1.7099e-03, 1.5441e-04],
        [2.8901e-04, 6.5598e-04, 1.5395e-04],
        [9.1397e-04, 1.3383e-03, 1.0412e-04],
        [6.8620e-04, 8.9566e-04, 4.9933e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0005],
        [0.0006],
        [0.0021],
        [0.0011],
        [0.0019],
        [0.0012],
        [0.0007],
        [0.0009],
        [0.0006],
        [0.0007],
        [0.0006],
        [0.0010],
        [0.0012],
        [0.0008],
        [0.0004]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0006, 0.0021, 0.0011, 0.0019, 0.0012, 0.0007, 0.0009,
         0.0006, 0.0007, 0.0006, 0.0010, 0.0012, 0.0008, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0005],
        [0.0032],
        [0.0023],
        [0.0043],
        [0.0042],
        [0.0041],
        [0.0046],
        [0.0014],
        [0.0023],
        [0.0021],
        [0.0012],
        [0.0017],
        [0.0011],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0032, 0.0023, 0.0043, 0.0042, 0.0041, 0.0046, 0.0014,
         0.0023, 0.0021, 0.0012, 0.0017, 0.0011, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7663e-05],
        [1.5473e-04],
        [9.2445e-05],
        [1.3847e-04],
        [3.9723e-04],
        [1.4032e-04],
        [2.6464e-04],
        [5.7345e-05],
        [3.5435e-04],
        [1.1354e-04],
        [2.0187e-04],
        [1.3842e-04],
        [4.3171e-05],
        [8.3717e-05],
        [3.4058e-05],
        [7.5676e-05]], device='cuda:0')/tensor([[1.7663e-05, 1.5473e-04, 9.2445e-05, 1.3847e-04, 3.9723e-04, 1.4032e-04,
         2.6464e-04, 5.7345e-05, 3.5435e-04, 1.1354e-04, 2.0187e-04, 1.3842e-04,
         4.3171e-05, 8.3717e-05, 3.4058e-05, 7.5676e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.8454e-04, 3.6684e-04, 1.7663e-05],
        [4.6490e-04, 5.1662e-04, 1.5473e-04],
        [6.3200e-04, 3.2148e-03, 9.2445e-05],
        [2.0625e-03, 2.2767e-03, 1.3847e-04],
        [1.1453e-03, 4.3395e-03, 3.9723e-04],
        [1.9105e-03, 4.2030e-03, 1.4032e-04],
        [1.1842e-03, 4.0556e-03, 2.6464e-04],
        [6.5280e-04, 4.5679e-03, 5.7345e-05],
        [9.4102e-04, 1.3931e-03, 3.5435e-04],
        [6.3556e-04, 2.2614e-03, 1.1354e-04],
        [6.7265e-04, 2.1099e-03, 2.0187e-04],
        [6.3790e-04, 1.1570e-03, 1.3842e-04],
        [9.7613e-04, 1.6724e-03, 4.3171e-05],
        [1.2334e-03, 1.0885e-03, 8.3717e-05],
        [7.7094e-04, 3.6679e-04, 3.4058e-05],
        [4.0487e-04, 7.0505e-04, 7.5676e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0012],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0007],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0023],
        [0.0005],
        [0.0010],
        [0.0014],
        [0.0005],
        [0.0006],
        [0.0008]], device='cuda:0')/tensor([[0.0006, 0.0012, 0.0007, 0.0005, 0.0005, 0.0007, 0.0007, 0.0002, 0.0004,
         0.0023, 0.0005, 0.0010, 0.0014, 0.0005, 0.0006, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0020],
        [0.0020],
        [0.0006],
        [0.0010],
        [0.0015],
        [0.0014],
        [0.0007],
        [0.0013],
        [0.0052],
        [0.0015],
        [0.0026],
        [0.0020],
        [0.0004],
        [0.0023],
        [0.0013]], device='cuda:0')/tensor([[0.0003, 0.0020, 0.0020, 0.0006, 0.0010, 0.0015, 0.0014, 0.0007, 0.0013,
         0.0052, 0.0015, 0.0026, 0.0020, 0.0004, 0.0023, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.4817e-04],
        [1.3045e-04],
        [1.4253e-04],
        [3.6310e-04],
        [4.0241e-04],
        [1.8047e-04],
        [1.4660e-04],
        [7.1593e-05],
        [5.9082e-05],
        [2.0919e-04],
        [1.0238e-04],
        [1.9144e-04],
        [2.2825e-04],
        [1.2529e-04],
        [1.6980e-04],
        [2.4272e-04]], device='cuda:0')/tensor([[3.4817e-04, 1.3045e-04, 1.4253e-04, 3.6310e-04, 4.0241e-04, 1.8047e-04,
         1.4660e-04, 7.1593e-05, 5.9082e-05, 2.0919e-04, 1.0238e-04, 1.9144e-04,
         2.2825e-04, 1.2529e-04, 1.6980e-04, 2.4272e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8273e-04, 2.5056e-04, 3.4817e-04],
        [1.2471e-03, 1.9528e-03, 1.3045e-04],
        [7.2691e-04, 2.0443e-03, 1.4253e-04],
        [5.4825e-04, 6.4613e-04, 3.6310e-04],
        [4.8698e-04, 9.7346e-04, 4.0241e-04],
        [6.9228e-04, 1.5065e-03, 1.8047e-04],
        [6.9292e-04, 1.4489e-03, 1.4660e-04],
        [1.8352e-04, 6.9905e-04, 7.1593e-05],
        [4.4109e-04, 1.2843e-03, 5.9082e-05],
        [2.3263e-03, 5.1895e-03, 2.0919e-04],
        [5.3581e-04, 1.5278e-03, 1.0238e-04],
        [9.6025e-04, 2.5654e-03, 1.9144e-04],
        [1.4390e-03, 1.9812e-03, 2.2825e-04],
        [4.5688e-04, 3.8901e-04, 1.2529e-04],
        [5.8266e-04, 2.2541e-03, 1.6980e-04],
        [8.2460e-04, 1.2743e-03, 2.4272e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.2100e-04],
        [1.1735e-03],
        [8.3224e-04],
        [2.4032e-03],
        [2.5460e-03],
        [1.9580e-03],
        [1.0797e-03],
        [4.8342e-05],
        [7.7229e-04],
        [9.6727e-04],
        [2.2272e-03],
        [1.5144e-03],
        [1.4145e-03],
        [1.4561e-04],
        [1.7421e-03],
        [5.6714e-04]], device='cuda:0')/tensor([[9.2100e-04, 1.1735e-03, 8.3224e-04, 2.4032e-03, 2.5460e-03, 1.9580e-03,
         1.0797e-03, 4.8342e-05, 7.7229e-04, 9.6727e-04, 2.2272e-03, 1.5144e-03,
         1.4145e-03, 1.4561e-04, 1.7421e-03, 5.6714e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0007],
        [0.0007],
        [0.0021],
        [0.0026],
        [0.0002],
        [0.0021],
        [0.0001],
        [0.0009],
        [0.0016],
        [0.0010],
        [0.0029],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0008]], device='cuda:0')/tensor([[0.0014, 0.0007, 0.0007, 0.0021, 0.0026, 0.0002, 0.0021, 0.0001, 0.0009,
         0.0016, 0.0010, 0.0029, 0.0005, 0.0003, 0.0005, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0373e-04],
        [1.3826e-04],
        [9.9030e-05],
        [3.6117e-04],
        [2.1265e-04],
        [2.4888e-04],
        [2.5403e-04],
        [1.5789e-04],
        [3.4520e-04],
        [9.1089e-05],
        [1.4049e-04],
        [1.3901e-04],
        [5.3660e-05],
        [4.0275e-05],
        [8.3221e-05],
        [5.1980e-05]], device='cuda:0')/tensor([[2.0373e-04, 1.3826e-04, 9.9030e-05, 3.6117e-04, 2.1265e-04, 2.4888e-04,
         2.5403e-04, 1.5789e-04, 3.4520e-04, 9.1089e-05, 1.4049e-04, 1.3901e-04,
         5.3660e-05, 4.0275e-05, 8.3221e-05, 5.1980e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.2100e-04, 1.4214e-03, 2.0373e-04],
        [1.1735e-03, 6.8687e-04, 1.3826e-04],
        [8.3224e-04, 6.9391e-04, 9.9030e-05],
        [2.4032e-03, 2.1446e-03, 3.6117e-04],
        [2.5460e-03, 2.5969e-03, 2.1265e-04],
        [1.9580e-03, 1.9852e-04, 2.4888e-04],
        [1.0797e-03, 2.0979e-03, 2.5403e-04],
        [4.8342e-05, 1.1510e-04, 1.5789e-04],
        [7.7229e-04, 8.7721e-04, 3.4520e-04],
        [9.6727e-04, 1.6271e-03, 9.1089e-05],
        [2.2272e-03, 9.8718e-04, 1.4049e-04],
        [1.5144e-03, 2.9346e-03, 1.3901e-04],
        [1.4145e-03, 5.1206e-04, 5.3660e-05],
        [1.4561e-04, 2.9418e-04, 4.0275e-05],
        [1.7421e-03, 5.0712e-04, 8.3221e-05],
        [5.6714e-04, 8.2579e-04, 5.1980e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0009],
        [0.0005],
        [0.0011],
        [0.0011],
        [0.0014],
        [0.0014],
        [0.0006],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0003],
        [0.0014],
        [0.0004],
        [0.0006]], device='cuda:0')/tensor([[0.0009, 0.0009, 0.0005, 0.0011, 0.0011, 0.0014, 0.0014, 0.0006, 0.0002,
         0.0004, 0.0004, 0.0005, 0.0003, 0.0014, 0.0004, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0024],
        [0.0016],
        [0.0029],
        [0.0034],
        [0.0011],
        [0.0035],
        [0.0011],
        [0.0013],
        [0.0002],
        [0.0016],
        [0.0080],
        [0.0021],
        [0.0006],
        [0.0032],
        [0.0008],
        [0.0019]], device='cuda:0')/tensor([[0.0024, 0.0016, 0.0029, 0.0034, 0.0011, 0.0035, 0.0011, 0.0013, 0.0002,
         0.0016, 0.0080, 0.0021, 0.0006, 0.0032, 0.0008, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.7652e-05],
        [3.1039e-04],
        [8.7401e-05],
        [2.8180e-04],
        [2.9760e-04],
        [1.2446e-04],
        [4.7226e-05],
        [1.6420e-04],
        [2.1213e-04],
        [6.5364e-04],
        [1.3827e-04],
        [2.4167e-04],
        [5.5076e-05],
        [2.7837e-04],
        [9.4372e-05],
        [3.0986e-04]], device='cuda:0')/tensor([[8.7652e-05, 3.1039e-04, 8.7401e-05, 2.8180e-04, 2.9760e-04, 1.2446e-04,
         4.7226e-05, 1.6420e-04, 2.1213e-04, 6.5364e-04, 1.3827e-04, 2.4167e-04,
         5.5076e-05, 2.7837e-04, 9.4372e-05, 3.0986e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.1465e-04, 2.3594e-03, 8.7652e-05],
        [8.5242e-04, 1.5716e-03, 3.1039e-04],
        [5.1440e-04, 2.8800e-03, 8.7401e-05],
        [1.1034e-03, 3.3681e-03, 2.8180e-04],
        [1.1274e-03, 1.1237e-03, 2.9760e-04],
        [1.4453e-03, 3.5049e-03, 1.2446e-04],
        [1.3644e-03, 1.0813e-03, 4.7226e-05],
        [5.8971e-04, 1.2655e-03, 1.6420e-04],
        [2.3197e-04, 1.6146e-04, 2.1213e-04],
        [3.7503e-04, 1.6220e-03, 6.5364e-04],
        [4.4693e-04, 7.9570e-03, 1.3827e-04],
        [5.0805e-04, 2.0502e-03, 2.4167e-04],
        [2.8049e-04, 6.4921e-04, 5.5076e-05],
        [1.3663e-03, 3.1934e-03, 2.7837e-04],
        [3.9853e-04, 8.3321e-04, 9.4372e-05],
        [5.9154e-04, 1.8959e-03, 3.0986e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0022],
        [0.0012],
        [0.0003],
        [0.0007]], device='cuda:0')/tensor([[0.0022, 0.0012, 0.0003, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0092],
        [0.0002],
        [0.0058],
        [0.0016]], device='cuda:0')/tensor([[0.0092, 0.0002, 0.0058, 0.0016]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0007],
        [0.0001],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0007, 0.0001, 0.0002, 0.0002]], device='cuda:0'), torch.Size([1, 4])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0022, 0.0092, 0.0007],
        [0.0012, 0.0002, 0.0001],
        [0.0003, 0.0058, 0.0002],
        [0.0007, 0.0016, 0.0002]], device='cuda:0')
acc:  0.3939393939393939
Time taken to execute the de NLI task with prompt type modal, variation 0 and batchsize 16: 0:01:01.730479
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI modal 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 368.97it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2451e-05],
        [5.1630e-04],
        [6.1353e-04],
        [7.7446e-04],
        [3.0420e-05],
        [1.1780e-03],
        [2.4531e-04],
        [2.6289e-04],
        [2.2161e-04],
        [2.5123e-04],
        [3.0484e-04],
        [2.9332e-04],
        [8.3893e-05],
        [5.6063e-04],
        [1.5283e-04],
        [7.0906e-04]], device='cuda:0')/tensor([[2.2451e-05, 5.1630e-04, 6.1353e-04, 7.7446e-04, 3.0420e-05, 1.1780e-03,
         2.4531e-04, 2.6289e-04, 2.2161e-04, 2.5123e-04, 3.0484e-04, 2.9332e-04,
         8.3893e-05, 5.6063e-04, 1.5283e-04, 7.0906e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1099e-05],
        [8.6443e-04],
        [1.1897e-03],
        [8.8108e-04],
        [7.9920e-05],
        [2.0035e-03],
        [7.9259e-04],
        [1.1479e-03],
        [3.7902e-04],
        [9.2026e-04],
        [4.5345e-04],
        [2.7694e-03],
        [6.9270e-05],
        [2.4078e-03],
        [3.2205e-04],
        [1.1152e-03]], device='cuda:0')/tensor([[1.1099e-05, 8.6443e-04, 1.1897e-03, 8.8108e-04, 7.9920e-05, 2.0035e-03,
         7.9259e-04, 1.1479e-03, 3.7902e-04, 9.2026e-04, 4.5345e-04, 2.7694e-03,
         6.9270e-05, 2.4078e-03, 3.2205e-04, 1.1152e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2625e-05],
        [1.0460e-03],
        [3.3818e-04],
        [4.4834e-04],
        [9.1818e-05],
        [2.1064e-04],
        [7.1009e-04],
        [3.7781e-04],
        [1.8509e-04],
        [1.2766e-04],
        [7.1425e-04],
        [3.7652e-04],
        [1.1134e-04],
        [7.2883e-04],
        [6.3230e-04],
        [2.0016e-04]], device='cuda:0')/tensor([[5.2625e-05, 1.0460e-03, 3.3818e-04, 4.4834e-04, 9.1818e-05, 2.1064e-04,
         7.1009e-04, 3.7781e-04, 1.8509e-04, 1.2766e-04, 7.1425e-04, 3.7652e-04,
         1.1134e-04, 7.2883e-04, 6.3230e-04, 2.0016e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2451e-05, 1.1099e-05, 5.2625e-05],
        [5.1630e-04, 8.6443e-04, 1.0460e-03],
        [6.1353e-04, 1.1897e-03, 3.3818e-04],
        [7.7446e-04, 8.8108e-04, 4.4834e-04],
        [3.0420e-05, 7.9920e-05, 9.1818e-05],
        [1.1780e-03, 2.0035e-03, 2.1064e-04],
        [2.4531e-04, 7.9259e-04, 7.1009e-04],
        [2.6289e-04, 1.1479e-03, 3.7781e-04],
        [2.2161e-04, 3.7902e-04, 1.8509e-04],
        [2.5123e-04, 9.2026e-04, 1.2766e-04],
        [3.0484e-04, 4.5345e-04, 7.1425e-04],
        [2.9332e-04, 2.7694e-03, 3.7652e-04],
        [8.3893e-05, 6.9270e-05, 1.1134e-04],
        [5.6063e-04, 2.4078e-03, 7.2883e-04],
        [1.5283e-04, 3.2205e-04, 6.3230e-04],
        [7.0906e-04, 1.1152e-03, 2.0016e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0003],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0003],
        [0.0014],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0011],
        [0.0006],
        [0.0009],
        [0.0007],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0003, 0.0004, 0.0004, 0.0003, 0.0003, 0.0014, 0.0001, 0.0002,
         0.0002, 0.0003, 0.0011, 0.0006, 0.0009, 0.0007, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0027],
        [0.0066],
        [0.0004],
        [0.0021],
        [0.0072],
        [0.0010],
        [0.0018],
        [0.0002],
        [0.0002],
        [0.0033],
        [0.0011],
        [0.0027],
        [0.0022],
        [0.0011],
        [0.0004],
        [0.0024]], device='cuda:0')/tensor([[0.0027, 0.0066, 0.0004, 0.0021, 0.0072, 0.0010, 0.0018, 0.0002, 0.0002,
         0.0033, 0.0011, 0.0027, 0.0022, 0.0011, 0.0004, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0004],
        [0.0003],
        [0.0033],
        [0.0021],
        [0.0007],
        [0.0009],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0001],
        [0.0006],
        [0.0006],
        [0.0010],
        [0.0002],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0033, 0.0021, 0.0007, 0.0009, 0.0004, 0.0004, 0.0003,
         0.0001, 0.0006, 0.0006, 0.0010, 0.0002, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[0.0008, 0.0027, 0.0004],
        [0.0003, 0.0066, 0.0003],
        [0.0004, 0.0004, 0.0033],
        [0.0004, 0.0021, 0.0021],
        [0.0003, 0.0072, 0.0007],
        [0.0003, 0.0010, 0.0009],
        [0.0014, 0.0018, 0.0004],
        [0.0001, 0.0002, 0.0004],
        [0.0002, 0.0002, 0.0003],
        [0.0002, 0.0033, 0.0001],
        [0.0003, 0.0011, 0.0006],
        [0.0011, 0.0027, 0.0006],
        [0.0006, 0.0022, 0.0010],
        [0.0009, 0.0011, 0.0002],
        [0.0007, 0.0004, 0.0003],
        [0.0006, 0.0024, 0.0003]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.4629e-04],
        [3.9774e-03],
        [4.0158e-04],
        [2.5359e-05],
        [8.8764e-04],
        [6.5605e-05],
        [3.9862e-04],
        [6.9497e-04],
        [5.2288e-05],
        [4.3225e-04],
        [3.8301e-04],
        [8.1765e-05],
        [1.0128e-03],
        [4.2515e-04],
        [8.1064e-04],
        [9.9502e-05]], device='cuda:0')/tensor([[5.4629e-04, 3.9774e-03, 4.0158e-04, 2.5359e-05, 8.8764e-04, 6.5605e-05,
         3.9862e-04, 6.9497e-04, 5.2288e-05, 4.3225e-04, 3.8301e-04, 8.1765e-05,
         1.0128e-03, 4.2515e-04, 8.1064e-04, 9.9502e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7996e-03],
        [9.6961e-03],
        [1.3146e-03],
        [2.4956e-05],
        [1.4022e-03],
        [5.3774e-05],
        [7.9449e-04],
        [1.2709e-03],
        [2.6429e-05],
        [1.1732e-03],
        [1.3532e-03],
        [1.2180e-04],
        [4.3504e-03],
        [8.4719e-04],
        [1.0619e-03],
        [3.0961e-04]], device='cuda:0')/tensor([[1.7996e-03, 9.6961e-03, 1.3146e-03, 2.4956e-05, 1.4022e-03, 5.3774e-05,
         7.9449e-04, 1.2709e-03, 2.6429e-05, 1.1732e-03, 1.3532e-03, 1.2180e-04,
         4.3504e-03, 8.4719e-04, 1.0619e-03, 3.0961e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0003],
        [0.0003],
        [0.0007],
        [0.0001],
        [0.0014],
        [0.0002],
        [0.0006],
        [0.0006],
        [0.0002],
        [0.0010],
        [0.0005],
        [0.0001],
        [0.0006],
        [0.0004],
        [0.0003],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0007, 0.0001, 0.0014, 0.0002, 0.0006, 0.0006, 0.0002,
         0.0010, 0.0005, 0.0001, 0.0006, 0.0004, 0.0003, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.4629e-04, 1.7996e-03, 2.8693e-04],
        [3.9774e-03, 9.6961e-03, 3.4119e-04],
        [4.0158e-04, 1.3146e-03, 6.8753e-04],
        [2.5359e-05, 2.4956e-05, 1.4630e-04],
        [8.8764e-04, 1.4022e-03, 1.4062e-03],
        [6.5605e-05, 5.3774e-05, 1.5158e-04],
        [3.9862e-04, 7.9449e-04, 5.7838e-04],
        [6.9497e-04, 1.2709e-03, 5.7133e-04],
        [5.2288e-05, 2.6429e-05, 2.4189e-04],
        [4.3225e-04, 1.1732e-03, 9.9725e-04],
        [3.8301e-04, 1.3532e-03, 4.8214e-04],
        [8.1765e-05, 1.2180e-04, 1.1305e-04],
        [1.0128e-03, 4.3504e-03, 6.2775e-04],
        [4.2515e-04, 8.4719e-04, 3.9364e-04],
        [8.1064e-04, 1.0619e-03, 3.4098e-04],
        [9.9502e-05, 3.0961e-04, 2.8564e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2296e-04],
        [4.9184e-04],
        [1.0016e-04],
        [3.6526e-04],
        [2.9514e-04],
        [5.9872e-04],
        [5.3722e-04],
        [9.8714e-04],
        [1.0351e-03],
        [2.1944e-04],
        [9.1184e-05],
        [1.9295e-04],
        [1.6066e-04],
        [1.4687e-03],
        [1.3290e-03],
        [3.8363e-04]], device='cuda:0')/tensor([[1.2296e-04, 4.9184e-04, 1.0016e-04, 3.6526e-04, 2.9514e-04, 5.9872e-04,
         5.3722e-04, 9.8714e-04, 1.0351e-03, 2.1944e-04, 9.1184e-05, 1.9295e-04,
         1.6066e-04, 1.4687e-03, 1.3290e-03, 3.8363e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.2771e-04],
        [8.1441e-04],
        [6.6981e-05],
        [9.5949e-05],
        [5.5837e-03],
        [1.1670e-03],
        [1.4600e-03],
        [5.9686e-03],
        [2.7990e-03],
        [1.0459e-03],
        [2.1723e-05],
        [6.2293e-04],
        [3.0797e-04],
        [1.5830e-03],
        [1.1215e-02],
        [5.5395e-04]], device='cuda:0')/tensor([[2.2771e-04, 8.1441e-04, 6.6981e-05, 9.5949e-05, 5.5837e-03, 1.1670e-03,
         1.4600e-03, 5.9686e-03, 2.7990e-03, 1.0459e-03, 2.1723e-05, 6.2293e-04,
         3.0797e-04, 1.5830e-03, 1.1215e-02, 5.5395e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0003],
        [0.0003],
        [0.0002],
        [0.0010],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0001],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0002, 0.0010, 0.0002, 0.0003, 0.0006, 0.0001, 0.0003,
         0.0002, 0.0003, 0.0004, 0.0002, 0.0004, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2296e-04, 2.2771e-04, 2.5449e-04],
        [4.9184e-04, 8.1441e-04, 2.8696e-04],
        [1.0016e-04, 6.6981e-05, 2.1923e-04],
        [3.6526e-04, 9.5949e-05, 9.7770e-04],
        [2.9514e-04, 5.5837e-03, 2.2309e-04],
        [5.9872e-04, 1.1670e-03, 2.5356e-04],
        [5.3722e-04, 1.4600e-03, 5.6599e-04],
        [9.8714e-04, 5.9686e-03, 1.1428e-04],
        [1.0351e-03, 2.7990e-03, 3.3564e-04],
        [2.1944e-04, 1.0459e-03, 2.1238e-04],
        [9.1184e-05, 2.1723e-05, 3.3272e-04],
        [1.9295e-04, 6.2293e-04, 3.6614e-04],
        [1.6066e-04, 3.0797e-04, 2.4263e-04],
        [1.4687e-03, 1.5830e-03, 4.1115e-04],
        [1.3290e-03, 1.1215e-02, 2.1622e-04],
        [3.8363e-04, 5.5395e-04, 6.2463e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.4200e-04],
        [1.2910e-04],
        [3.1108e-04],
        [6.4112e-04],
        [5.4157e-04],
        [2.5705e-04],
        [2.7207e-04],
        [8.4351e-04],
        [5.9832e-04],
        [1.5319e-04],
        [9.5074e-04],
        [8.2089e-05],
        [1.5280e-04],
        [8.9402e-04],
        [1.7708e-04],
        [2.3451e-04]], device='cuda:0')/tensor([[4.4200e-04, 1.2910e-04, 3.1108e-04, 6.4112e-04, 5.4157e-04, 2.5705e-04,
         2.7207e-04, 8.4351e-04, 5.9832e-04, 1.5319e-04, 9.5074e-04, 8.2089e-05,
         1.5280e-04, 8.9402e-04, 1.7708e-04, 2.3451e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4748e-03],
        [3.3152e-04],
        [1.9681e-03],
        [1.1738e-03],
        [9.1958e-04],
        [3.2029e-04],
        [2.2292e-03],
        [8.6458e-04],
        [5.8836e-04],
        [3.6702e-05],
        [3.9834e-04],
        [1.1569e-05],
        [5.7265e-04],
        [2.1838e-03],
        [6.6643e-04],
        [6.3807e-04]], device='cuda:0')/tensor([[1.4748e-03, 3.3152e-04, 1.9681e-03, 1.1738e-03, 9.1958e-04, 3.2029e-04,
         2.2292e-03, 8.6458e-04, 5.8836e-04, 3.6702e-05, 3.9834e-04, 1.1569e-05,
         5.7265e-04, 2.1838e-03, 6.6643e-04, 6.3807e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.1361e-04],
        [2.9570e-04],
        [4.8862e-04],
        [4.3206e-04],
        [1.9503e-04],
        [1.3042e-03],
        [4.8762e-05],
        [2.1954e-04],
        [4.3971e-04],
        [6.1290e-04],
        [2.0694e-04],
        [1.6251e-04],
        [3.4860e-04],
        [9.9417e-04],
        [3.9669e-04],
        [2.0646e-04]], device='cuda:0')/tensor([[2.1361e-04, 2.9570e-04, 4.8862e-04, 4.3206e-04, 1.9503e-04, 1.3042e-03,
         4.8762e-05, 2.1954e-04, 4.3971e-04, 6.1290e-04, 2.0694e-04, 1.6251e-04,
         3.4860e-04, 9.9417e-04, 3.9669e-04, 2.0646e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4200e-04, 1.4748e-03, 2.1361e-04],
        [1.2910e-04, 3.3152e-04, 2.9570e-04],
        [3.1108e-04, 1.9681e-03, 4.8862e-04],
        [6.4112e-04, 1.1738e-03, 4.3206e-04],
        [5.4157e-04, 9.1958e-04, 1.9503e-04],
        [2.5705e-04, 3.2029e-04, 1.3042e-03],
        [2.7207e-04, 2.2292e-03, 4.8762e-05],
        [8.4351e-04, 8.6458e-04, 2.1954e-04],
        [5.9832e-04, 5.8836e-04, 4.3971e-04],
        [1.5319e-04, 3.6702e-05, 6.1290e-04],
        [9.5074e-04, 3.9834e-04, 2.0694e-04],
        [8.2089e-05, 1.1569e-05, 1.6251e-04],
        [1.5280e-04, 5.7265e-04, 3.4860e-04],
        [8.9402e-04, 2.1838e-03, 9.9417e-04],
        [1.7708e-04, 6.6643e-04, 3.9669e-04],
        [2.3451e-04, 6.3807e-04, 2.0646e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0010],
        [0.0001],
        [0.0009],
        [0.0017],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0005],
        [0.0001],
        [0.0009]], device='cuda:0')/tensor([[0.0005, 0.0004, 0.0002, 0.0002, 0.0002, 0.0010, 0.0001, 0.0009, 0.0017,
         0.0005, 0.0005, 0.0005, 0.0008, 0.0005, 0.0001, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2056e-03],
        [6.2154e-04],
        [1.5950e-03],
        [4.3082e-04],
        [1.7024e-04],
        [1.9859e-03],
        [8.8555e-05],
        [1.8781e-03],
        [6.8779e-03],
        [1.4135e-03],
        [1.1787e-03],
        [5.6462e-04],
        [4.6752e-03],
        [1.2569e-03],
        [2.1040e-04],
        [1.1800e-03]], device='cuda:0')/tensor([[3.2056e-03, 6.2154e-04, 1.5950e-03, 4.3082e-04, 1.7024e-04, 1.9859e-03,
         8.8555e-05, 1.8781e-03, 6.8779e-03, 1.4135e-03, 1.1787e-03, 5.6462e-04,
         4.6752e-03, 1.2569e-03, 2.1040e-04, 1.1800e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.4356e-04],
        [2.5900e-04],
        [4.1109e-04],
        [6.8543e-04],
        [6.0824e-04],
        [8.0695e-04],
        [1.5123e-04],
        [7.2746e-04],
        [1.4401e-03],
        [2.1195e-04],
        [1.3684e-04],
        [4.4674e-04],
        [6.4488e-04],
        [8.6972e-05],
        [1.1807e-04],
        [7.6459e-04]], device='cuda:0')/tensor([[7.4356e-04, 2.5900e-04, 4.1109e-04, 6.8543e-04, 6.0824e-04, 8.0695e-04,
         1.5123e-04, 7.2746e-04, 1.4401e-03, 2.1195e-04, 1.3684e-04, 4.4674e-04,
         6.4488e-04, 8.6972e-05, 1.1807e-04, 7.6459e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.8311e-04, 3.2056e-03, 7.4356e-04],
        [3.5782e-04, 6.2154e-04, 2.5900e-04],
        [2.4966e-04, 1.5950e-03, 4.1109e-04],
        [1.9324e-04, 4.3082e-04, 6.8543e-04],
        [2.2093e-04, 1.7024e-04, 6.0824e-04],
        [1.0250e-03, 1.9859e-03, 8.0695e-04],
        [1.1405e-04, 8.8555e-05, 1.5123e-04],
        [9.0801e-04, 1.8781e-03, 7.2746e-04],
        [1.6819e-03, 6.8779e-03, 1.4401e-03],
        [4.5336e-04, 1.4135e-03, 2.1195e-04],
        [4.7206e-04, 1.1787e-03, 1.3684e-04],
        [5.3265e-04, 5.6462e-04, 4.4674e-04],
        [8.2499e-04, 4.6752e-03, 6.4488e-04],
        [4.7962e-04, 1.2569e-03, 8.6972e-05],
        [1.2682e-04, 2.1040e-04, 1.1807e-04],
        [8.9287e-04, 1.1800e-03, 7.6459e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.1746e-04],
        [1.0450e-04],
        [3.8424e-03],
        [2.6653e-04],
        [1.9598e-03],
        [9.3206e-05],
        [7.1765e-04],
        [9.3420e-04],
        [5.4705e-04],
        [1.1663e-04],
        [2.1653e-04],
        [5.2172e-04],
        [1.1460e-03],
        [1.5936e-04],
        [2.8662e-05],
        [2.0891e-03]], device='cuda:0')/tensor([[4.1746e-04, 1.0450e-04, 3.8424e-03, 2.6653e-04, 1.9598e-03, 9.3206e-05,
         7.1765e-04, 9.3420e-04, 5.4705e-04, 1.1663e-04, 2.1653e-04, 5.2172e-04,
         1.1460e-03, 1.5936e-04, 2.8662e-05, 2.0891e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6739e-03],
        [2.1533e-04],
        [5.5127e-03],
        [2.2927e-04],
        [2.2567e-03],
        [2.6666e-04],
        [1.8615e-03],
        [1.6965e-03],
        [5.0561e-04],
        [6.1345e-05],
        [1.0192e-03],
        [4.3386e-04],
        [2.3570e-03],
        [8.1036e-04],
        [1.1149e-04],
        [2.0691e-03]], device='cuda:0')/tensor([[1.6739e-03, 2.1533e-04, 5.5127e-03, 2.2927e-04, 2.2567e-03, 2.6666e-04,
         1.8615e-03, 1.6965e-03, 5.0561e-04, 6.1345e-05, 1.0192e-03, 4.3386e-04,
         2.3570e-03, 8.1036e-04, 1.1149e-04, 2.0691e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.1492e-04],
        [1.2387e-04],
        [1.5954e-03],
        [2.6649e-04],
        [7.4049e-04],
        [4.8417e-04],
        [8.1641e-04],
        [3.6621e-04],
        [3.9905e-04],
        [7.0486e-05],
        [2.4957e-04],
        [3.1535e-04],
        [6.9219e-04],
        [3.5497e-04],
        [3.2358e-04],
        [9.8898e-04]], device='cuda:0')/tensor([[8.1492e-04, 1.2387e-04, 1.5954e-03, 2.6649e-04, 7.4049e-04, 4.8417e-04,
         8.1641e-04, 3.6621e-04, 3.9905e-04, 7.0486e-05, 2.4957e-04, 3.1535e-04,
         6.9219e-04, 3.5497e-04, 3.2358e-04, 9.8898e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.1746e-04, 1.6739e-03, 8.1492e-04],
        [1.0450e-04, 2.1533e-04, 1.2387e-04],
        [3.8424e-03, 5.5127e-03, 1.5954e-03],
        [2.6653e-04, 2.2927e-04, 2.6649e-04],
        [1.9598e-03, 2.2567e-03, 7.4049e-04],
        [9.3206e-05, 2.6666e-04, 4.8417e-04],
        [7.1765e-04, 1.8615e-03, 8.1641e-04],
        [9.3420e-04, 1.6965e-03, 3.6621e-04],
        [5.4705e-04, 5.0561e-04, 3.9905e-04],
        [1.1663e-04, 6.1345e-05, 7.0486e-05],
        [2.1653e-04, 1.0192e-03, 2.4957e-04],
        [5.2172e-04, 4.3386e-04, 3.1535e-04],
        [1.1460e-03, 2.3570e-03, 6.9219e-04],
        [1.5936e-04, 8.1036e-04, 3.5497e-04],
        [2.8662e-05, 1.1149e-04, 3.2358e-04],
        [2.0891e-03, 2.0691e-03, 9.8898e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0002],
        [0.0006],
        [0.0012],
        [0.0003],
        [0.0003],
        [0.0013],
        [0.0003],
        [0.0007],
        [0.0013],
        [0.0002],
        [0.0023],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0003]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0006, 0.0012, 0.0003, 0.0003, 0.0013, 0.0003, 0.0007,
         0.0013, 0.0002, 0.0023, 0.0003, 0.0003, 0.0006, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.5224e-05],
        [4.2740e-05],
        [6.7239e-04],
        [3.7893e-03],
        [1.2277e-03],
        [1.3455e-03],
        [2.9028e-03],
        [5.0564e-04],
        [4.3039e-03],
        [4.0714e-03],
        [9.0872e-04],
        [8.6645e-03],
        [1.0088e-03],
        [2.7523e-04],
        [1.4418e-03],
        [6.4363e-04]], device='cuda:0')/tensor([[5.5224e-05, 4.2740e-05, 6.7239e-04, 3.7893e-03, 1.2277e-03, 1.3455e-03,
         2.9028e-03, 5.0564e-04, 4.3039e-03, 4.0714e-03, 9.0872e-04, 8.6645e-03,
         1.0088e-03, 2.7523e-04, 1.4418e-03, 6.4363e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0001],
        [0.0002],
        [0.0010],
        [0.0009],
        [0.0003],
        [0.0013],
        [0.0003],
        [0.0006],
        [0.0008],
        [0.0019],
        [0.0007],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0021],
        [0.0006]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0010, 0.0009, 0.0003, 0.0013, 0.0003, 0.0006, 0.0008,
         0.0019, 0.0007, 0.0003, 0.0009, 0.0004, 0.0021, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2166e-04, 5.5224e-05, 1.1070e-04],
        [2.0902e-04, 4.2740e-05, 2.1238e-04],
        [5.8345e-04, 6.7239e-04, 1.0199e-03],
        [1.1651e-03, 3.7893e-03, 8.7319e-04],
        [2.9809e-04, 1.2277e-03, 3.2021e-04],
        [2.8466e-04, 1.3455e-03, 1.3002e-03],
        [1.2906e-03, 2.9028e-03, 3.0428e-04],
        [2.7129e-04, 5.0564e-04, 5.5076e-04],
        [7.2837e-04, 4.3039e-03, 8.0211e-04],
        [1.3252e-03, 4.0714e-03, 1.8863e-03],
        [1.9010e-04, 9.0872e-04, 7.1975e-04],
        [2.2946e-03, 8.6645e-03, 3.4730e-04],
        [2.9457e-04, 1.0088e-03, 8.9362e-04],
        [2.9002e-04, 2.7523e-04, 3.7697e-04],
        [5.8033e-04, 1.4418e-03, 2.0517e-03],
        [2.5613e-04, 6.4363e-04, 5.5991e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[1.9121e-04],
        [5.1861e-05],
        [4.6411e-04],
        [3.8902e-04]], device='cuda:0')/tensor([[1.9121e-04, 5.1861e-05, 4.6411e-04, 3.8902e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[5.9792e-05],
        [8.5182e-05],
        [3.5905e-03],
        [9.7542e-04]], device='cuda:0')/tensor([[5.9792e-05, 8.5182e-05, 3.5905e-03, 9.7542e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.9395e-04],
        [3.1578e-04],
        [8.6952e-04],
        [6.2484e-05]], device='cuda:0')/tensor([[2.9395e-04, 3.1578e-04, 8.6952e-04, 6.2484e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.9121e-04, 5.9792e-05, 2.9395e-04],
        [5.1861e-05, 8.5182e-05, 3.1578e-04],
        [4.6411e-04, 3.5905e-03, 8.6952e-04],
        [3.8902e-04, 9.7542e-04, 6.2484e-05]], device='cuda:0')
acc:  0.49242424242424243
Time taken to execute the de NLI task with prompt type modal, variation 1 and batchsize 16: 0:01:02.128153
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI modal 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 378.44it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.3420e-04],
        [3.9556e-04],
        [2.4600e-04],
        [1.7065e-04],
        [4.1010e-04],
        [5.6452e-04],
        [1.1865e-04],
        [7.4612e-04],
        [1.0202e-04],
        [1.5570e-04],
        [1.4739e-03],
        [1.1977e-04],
        [2.8207e-04],
        [2.4192e-05],
        [1.7589e-04],
        [7.5749e-04]], device='cuda:0')/tensor([[5.3420e-04, 3.9556e-04, 2.4600e-04, 1.7065e-04, 4.1010e-04, 5.6452e-04,
         1.1865e-04, 7.4612e-04, 1.0202e-04, 1.5570e-04, 1.4739e-03, 1.1977e-04,
         2.8207e-04, 2.4192e-05, 1.7589e-04, 7.5749e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.1664e-04],
        [3.5691e-04],
        [3.8389e-04],
        [7.4411e-05],
        [9.5424e-04],
        [2.5156e-04],
        [9.0400e-05],
        [1.0412e-03],
        [3.1165e-05],
        [4.3517e-04],
        [7.4429e-03],
        [3.0415e-05],
        [5.8186e-04],
        [2.0301e-04],
        [2.2790e-04],
        [1.0527e-03]], device='cuda:0')/tensor([[6.1664e-04, 3.5691e-04, 3.8389e-04, 7.4411e-05, 9.5424e-04, 2.5156e-04,
         9.0400e-05, 1.0412e-03, 3.1165e-05, 4.3517e-04, 7.4429e-03, 3.0415e-05,
         5.8186e-04, 2.0301e-04, 2.2790e-04, 1.0527e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.6480e-04],
        [1.8338e-04],
        [1.2297e-04],
        [4.2074e-04],
        [2.0170e-04],
        [1.5281e-04],
        [4.3744e-05],
        [1.8628e-04],
        [2.6640e-04],
        [1.4644e-04],
        [2.0909e-04],
        [7.6245e-05],
        [1.9922e-04],
        [3.5588e-05],
        [8.6243e-05],
        [1.8935e-04]], device='cuda:0')/tensor([[2.6480e-04, 1.8338e-04, 1.2297e-04, 4.2074e-04, 2.0170e-04, 1.5281e-04,
         4.3744e-05, 1.8628e-04, 2.6640e-04, 1.4644e-04, 2.0909e-04, 7.6245e-05,
         1.9922e-04, 3.5588e-05, 8.6243e-05, 1.8935e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.3420e-04, 6.1664e-04, 2.6480e-04],
        [3.9556e-04, 3.5691e-04, 1.8338e-04],
        [2.4600e-04, 3.8389e-04, 1.2297e-04],
        [1.7065e-04, 7.4411e-05, 4.2074e-04],
        [4.1010e-04, 9.5424e-04, 2.0170e-04],
        [5.6452e-04, 2.5156e-04, 1.5281e-04],
        [1.1865e-04, 9.0400e-05, 4.3744e-05],
        [7.4612e-04, 1.0412e-03, 1.8628e-04],
        [1.0202e-04, 3.1165e-05, 2.6640e-04],
        [1.5570e-04, 4.3517e-04, 1.4644e-04],
        [1.4739e-03, 7.4429e-03, 2.0909e-04],
        [1.1977e-04, 3.0415e-05, 7.6245e-05],
        [2.8207e-04, 5.8186e-04, 1.9922e-04],
        [2.4192e-05, 2.0301e-04, 3.5588e-05],
        [1.7589e-04, 2.2790e-04, 8.6243e-05],
        [7.5749e-04, 1.0527e-03, 1.8935e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0010],
        [0.0014],
        [0.0010],
        [0.0008],
        [0.0006],
        [0.0003],
        [0.0008],
        [0.0001],
        [0.0007],
        [0.0010],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0014, 0.0010, 0.0008, 0.0006, 0.0003, 0.0008, 0.0001,
         0.0007, 0.0010, 0.0003, 0.0005, 0.0005, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.3676e-04],
        [3.1162e-04],
        [1.4013e-03],
        [2.1052e-03],
        [8.8559e-04],
        [1.3161e-03],
        [8.8775e-04],
        [5.0265e-04],
        [1.2206e-04],
        [9.6053e-04],
        [1.2278e-03],
        [2.7624e-04],
        [4.8719e-04],
        [4.9828e-04],
        [6.4992e-04],
        [3.0141e-05]], device='cuda:0')/tensor([[7.3676e-04, 3.1162e-04, 1.4013e-03, 2.1052e-03, 8.8559e-04, 1.3161e-03,
         8.8775e-04, 5.0265e-04, 1.2206e-04, 9.6053e-04, 1.2278e-03, 2.7624e-04,
         4.8719e-04, 4.9828e-04, 6.4992e-04, 3.0141e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.9519e-05],
        [8.5503e-05],
        [1.2079e-03],
        [3.9840e-04],
        [3.2377e-04],
        [2.2391e-04],
        [1.1427e-04],
        [3.6193e-04],
        [9.3846e-05],
        [4.2732e-04],
        [2.4301e-04],
        [2.2793e-04],
        [2.4565e-04],
        [2.1269e-04],
        [1.2280e-04],
        [4.0219e-04]], device='cuda:0')/tensor([[7.9519e-05, 8.5503e-05, 1.2079e-03, 3.9840e-04, 3.2377e-04, 2.2391e-04,
         1.1427e-04, 3.6193e-04, 9.3846e-05, 4.2732e-04, 2.4301e-04, 2.2793e-04,
         2.4565e-04, 2.1269e-04, 1.2280e-04, 4.0219e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.5280e-04, 7.3676e-04, 7.9519e-05],
        [9.7844e-04, 3.1162e-04, 8.5503e-05],
        [1.3696e-03, 1.4013e-03, 1.2079e-03],
        [1.0192e-03, 2.1052e-03, 3.9840e-04],
        [8.2211e-04, 8.8559e-04, 3.2377e-04],
        [5.8906e-04, 1.3161e-03, 2.2391e-04],
        [3.4026e-04, 8.8775e-04, 1.1427e-04],
        [8.3435e-04, 5.0265e-04, 3.6193e-04],
        [1.4444e-04, 1.2206e-04, 9.3846e-05],
        [6.9319e-04, 9.6053e-04, 4.2732e-04],
        [9.6768e-04, 1.2278e-03, 2.4301e-04],
        [3.3844e-04, 2.7624e-04, 2.2793e-04],
        [5.0879e-04, 4.8719e-04, 2.4565e-04],
        [5.1034e-04, 4.9828e-04, 2.1269e-04],
        [4.7580e-04, 6.4992e-04, 1.2280e-04],
        [2.1002e-04, 3.0141e-05, 4.0219e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0013],
        [0.0004],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0008],
        [0.0014],
        [0.0010],
        [0.0008],
        [0.0006],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0003, 0.0013, 0.0004, 0.0005, 0.0004, 0.0007, 0.0007, 0.0005, 0.0003,
         0.0008, 0.0014, 0.0010, 0.0008, 0.0006, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9559e-03],
        [1.8776e-03],
        [2.2077e-04],
        [7.1055e-04],
        [1.1157e-03],
        [5.6594e-04],
        [1.0002e-03],
        [5.1485e-03],
        [3.5479e-03],
        [2.2108e-05],
        [4.8862e-03],
        [4.6985e-04],
        [1.4317e-03],
        [1.1061e-03],
        [6.5483e-04],
        [6.7535e-04]], device='cuda:0')/tensor([[1.9559e-03, 1.8776e-03, 2.2077e-04, 7.1055e-04, 1.1157e-03, 5.6594e-04,
         1.0002e-03, 5.1485e-03, 3.5479e-03, 2.2108e-05, 4.8862e-03, 4.6985e-04,
         1.4317e-03, 1.1061e-03, 6.5483e-04, 6.7535e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4195e-04],
        [1.3103e-03],
        [1.0883e-04],
        [8.0382e-04],
        [5.1005e-04],
        [1.1311e-04],
        [6.6171e-04],
        [2.4557e-04],
        [1.5234e-04],
        [8.3170e-05],
        [5.3492e-04],
        [1.5457e-04],
        [4.3561e-04],
        [2.6526e-04],
        [1.1035e-04],
        [1.6916e-04]], device='cuda:0')/tensor([[1.4195e-04, 1.3103e-03, 1.0883e-04, 8.0382e-04, 5.1005e-04, 1.1311e-04,
         6.6171e-04, 2.4557e-04, 1.5234e-04, 8.3170e-05, 5.3492e-04, 1.5457e-04,
         4.3561e-04, 2.6526e-04, 1.1035e-04, 1.6916e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0704e-04, 1.9559e-03, 1.4195e-04],
        [1.3028e-03, 1.8776e-03, 1.3103e-03],
        [3.5590e-04, 2.2077e-04, 1.0883e-04],
        [4.6155e-04, 7.1055e-04, 8.0382e-04],
        [4.0215e-04, 1.1157e-03, 5.1005e-04],
        [6.6331e-04, 5.6594e-04, 1.1311e-04],
        [7.1823e-04, 1.0002e-03, 6.6171e-04],
        [5.2776e-04, 5.1485e-03, 2.4557e-04],
        [3.4342e-04, 3.5479e-03, 1.5234e-04],
        [8.1977e-04, 2.2108e-05, 8.3170e-05],
        [1.3592e-03, 4.8862e-03, 5.3492e-04],
        [9.6165e-04, 4.6985e-04, 1.5457e-04],
        [7.6846e-04, 1.4317e-03, 4.3561e-04],
        [6.2430e-04, 1.1061e-03, 2.6526e-04],
        [4.2575e-04, 6.5483e-04, 1.1035e-04],
        [6.7770e-04, 6.7535e-04, 1.6916e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.7277e-04],
        [3.4280e-04],
        [5.4132e-04],
        [3.3459e-04],
        [2.3903e-04],
        [5.5808e-04],
        [1.3944e-04],
        [7.9772e-04],
        [5.0862e-04],
        [4.6391e-04],
        [2.1261e-04],
        [3.5636e-04],
        [1.0275e-03],
        [8.9733e-05],
        [8.3096e-04],
        [5.2562e-04]], device='cuda:0')/tensor([[6.7277e-04, 3.4280e-04, 5.4132e-04, 3.3459e-04, 2.3903e-04, 5.5808e-04,
         1.3944e-04, 7.9772e-04, 5.0862e-04, 4.6391e-04, 2.1261e-04, 3.5636e-04,
         1.0275e-03, 8.9733e-05, 8.3096e-04, 5.2562e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.9421e-04],
        [4.3287e-04],
        [3.7788e-04],
        [4.9472e-04],
        [2.5243e-04],
        [2.8328e-03],
        [1.0109e-04],
        [1.4563e-03],
        [1.4667e-03],
        [1.0196e-03],
        [1.9408e-04],
        [6.2604e-04],
        [8.8480e-04],
        [5.7810e-05],
        [1.5466e-03],
        [6.8713e-04]], device='cuda:0')/tensor([[6.9421e-04, 4.3287e-04, 3.7788e-04, 4.9472e-04, 2.5243e-04, 2.8328e-03,
         1.0109e-04, 1.4563e-03, 1.4667e-03, 1.0196e-03, 1.9408e-04, 6.2604e-04,
         8.8480e-04, 5.7810e-05, 1.5466e-03, 6.8713e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.4054e-05],
        [1.7508e-04],
        [1.2728e-04],
        [1.0873e-04],
        [1.8889e-04],
        [1.0500e-04],
        [7.4940e-05],
        [7.7170e-05],
        [7.4002e-04],
        [1.6668e-04],
        [1.8752e-04],
        [3.0271e-04],
        [1.6444e-04],
        [3.3081e-05],
        [4.5134e-04],
        [2.0438e-04]], device='cuda:0')/tensor([[6.4054e-05, 1.7508e-04, 1.2728e-04, 1.0873e-04, 1.8889e-04, 1.0500e-04,
         7.4940e-05, 7.7170e-05, 7.4002e-04, 1.6668e-04, 1.8752e-04, 3.0271e-04,
         1.6444e-04, 3.3081e-05, 4.5134e-04, 2.0438e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.7277e-04, 6.9421e-04, 6.4054e-05],
        [3.4280e-04, 4.3287e-04, 1.7508e-04],
        [5.4132e-04, 3.7788e-04, 1.2728e-04],
        [3.3459e-04, 4.9472e-04, 1.0873e-04],
        [2.3903e-04, 2.5243e-04, 1.8889e-04],
        [5.5808e-04, 2.8328e-03, 1.0500e-04],
        [1.3944e-04, 1.0109e-04, 7.4940e-05],
        [7.9772e-04, 1.4563e-03, 7.7170e-05],
        [5.0862e-04, 1.4667e-03, 7.4002e-04],
        [4.6391e-04, 1.0196e-03, 1.6668e-04],
        [2.1261e-04, 1.9408e-04, 1.8752e-04],
        [3.5636e-04, 6.2604e-04, 3.0271e-04],
        [1.0275e-03, 8.8480e-04, 1.6444e-04],
        [8.9733e-05, 5.7810e-05, 3.3081e-05],
        [8.3096e-04, 1.5466e-03, 4.5134e-04],
        [5.2562e-04, 6.8713e-04, 2.0438e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0007],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0011],
        [0.0005],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0004],
        [0.0013],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0006, 0.0005, 0.0004, 0.0007, 0.0003, 0.0003, 0.0005, 0.0011,
         0.0005, 0.0006, 0.0001, 0.0004, 0.0004, 0.0013, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.9704e-04],
        [6.0006e-04],
        [2.1243e-03],
        [9.6080e-04],
        [1.0211e-03],
        [1.0454e-03],
        [6.7544e-04],
        [2.5601e-04],
        [1.2470e-03],
        [1.0892e-03],
        [1.2289e-03],
        [2.0599e-05],
        [7.9752e-03],
        [1.9668e-04],
        [2.7551e-03],
        [1.1249e-03]], device='cuda:0')/tensor([[3.9704e-04, 6.0006e-04, 2.1243e-03, 9.6080e-04, 1.0211e-03, 1.0454e-03,
         6.7544e-04, 2.5601e-04, 1.2470e-03, 1.0892e-03, 1.2289e-03, 2.0599e-05,
         7.9752e-03, 1.9668e-04, 2.7551e-03, 1.1249e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0001],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0006],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0003, 0.0002, 0.0006, 0.0002, 0.0004, 0.0002, 0.0002,
         0.0001, 0.0002, 0.0002, 0.0002, 0.0002, 0.0002, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.0680e-04, 3.9704e-04, 1.0751e-04],
        [5.6359e-04, 6.0006e-04, 1.8026e-04],
        [4.6465e-04, 2.1243e-03, 3.1528e-04],
        [4.4877e-04, 9.6080e-04, 1.5780e-04],
        [7.2605e-04, 1.0211e-03, 5.6444e-04],
        [3.1167e-04, 1.0454e-03, 2.0712e-04],
        [2.8385e-04, 6.7544e-04, 3.6382e-04],
        [4.7757e-04, 2.5601e-04, 2.1360e-04],
        [1.1044e-03, 1.2470e-03, 1.7103e-04],
        [4.6997e-04, 1.0892e-03, 1.0566e-04],
        [5.9478e-04, 1.2289e-03, 1.6961e-04],
        [1.1013e-04, 2.0599e-05, 1.5387e-04],
        [4.2983e-04, 7.9752e-03, 2.1470e-04],
        [3.8349e-04, 1.9668e-04, 2.1965e-04],
        [1.2799e-03, 2.7551e-03, 1.9258e-04],
        [1.0673e-03, 1.1249e-03, 3.5446e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0193e-03],
        [3.0217e-04],
        [9.2929e-04],
        [4.3323e-04],
        [3.0812e-04],
        [1.6507e-04],
        [1.0787e-03],
        [7.8270e-04],
        [8.7770e-05],
        [5.9623e-04],
        [4.7388e-04],
        [8.6613e-04],
        [1.4841e-03],
        [4.6271e-04],
        [2.8228e-04],
        [4.2084e-05]], device='cuda:0')/tensor([[1.0193e-03, 3.0217e-04, 9.2929e-04, 4.3323e-04, 3.0812e-04, 1.6507e-04,
         1.0787e-03, 7.8270e-04, 8.7770e-05, 5.9623e-04, 4.7388e-04, 8.6613e-04,
         1.4841e-03, 4.6271e-04, 2.8228e-04, 4.2084e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.7048e-04],
        [6.4611e-05],
        [7.6605e-04],
        [1.3177e-03],
        [1.7753e-04],
        [1.0257e-04],
        [2.5677e-03],
        [2.0168e-03],
        [8.6573e-05],
        [4.5938e-04],
        [6.1525e-04],
        [1.9892e-04],
        [1.1242e-03],
        [3.4906e-04],
        [1.5133e-04],
        [9.3347e-06]], device='cuda:0')/tensor([[8.7048e-04, 6.4611e-05, 7.6605e-04, 1.3177e-03, 1.7753e-04, 1.0257e-04,
         2.5677e-03, 2.0168e-03, 8.6573e-05, 4.5938e-04, 6.1525e-04, 1.9892e-04,
         1.1242e-03, 3.4906e-04, 1.5133e-04, 9.3347e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.3689e-04],
        [3.7751e-04],
        [9.0673e-05],
        [1.7858e-04],
        [4.8624e-04],
        [1.2793e-04],
        [3.1299e-04],
        [2.6279e-04],
        [1.1926e-04],
        [1.2294e-04],
        [1.5753e-04],
        [6.7179e-05],
        [4.1765e-04],
        [1.9604e-04],
        [5.3948e-05],
        [5.0524e-05]], device='cuda:0')/tensor([[2.3689e-04, 3.7751e-04, 9.0673e-05, 1.7858e-04, 4.8624e-04, 1.2793e-04,
         3.1299e-04, 2.6279e-04, 1.1926e-04, 1.2294e-04, 1.5753e-04, 6.7179e-05,
         4.1765e-04, 1.9604e-04, 5.3948e-05, 5.0524e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0193e-03, 8.7048e-04, 2.3689e-04],
        [3.0217e-04, 6.4611e-05, 3.7751e-04],
        [9.2929e-04, 7.6605e-04, 9.0673e-05],
        [4.3323e-04, 1.3177e-03, 1.7858e-04],
        [3.0812e-04, 1.7753e-04, 4.8624e-04],
        [1.6507e-04, 1.0257e-04, 1.2793e-04],
        [1.0787e-03, 2.5677e-03, 3.1299e-04],
        [7.8270e-04, 2.0168e-03, 2.6279e-04],
        [8.7770e-05, 8.6573e-05, 1.1926e-04],
        [5.9623e-04, 4.5938e-04, 1.2294e-04],
        [4.7388e-04, 6.1525e-04, 1.5753e-04],
        [8.6613e-04, 1.9892e-04, 6.7179e-05],
        [1.4841e-03, 1.1242e-03, 4.1765e-04],
        [4.6271e-04, 3.4906e-04, 1.9604e-04],
        [2.8228e-04, 1.5133e-04, 5.3948e-05],
        [4.2084e-05, 9.3347e-06, 5.0524e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0004],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0007],
        [0.0008],
        [0.0002],
        [0.0007],
        [0.0011],
        [0.0005],
        [0.0003],
        [0.0001],
        [0.0023],
        [0.0003],
        [0.0009]], device='cuda:0')/tensor([[0.0004, 0.0004, 0.0004, 0.0003, 0.0004, 0.0007, 0.0008, 0.0002, 0.0007,
         0.0011, 0.0005, 0.0003, 0.0001, 0.0023, 0.0003, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.2428e-04],
        [7.8247e-04],
        [3.7064e-04],
        [1.8723e-04],
        [4.7621e-04],
        [4.2685e-04],
        [2.8675e-03],
        [1.6038e-04],
        [2.2303e-03],
        [3.0480e-03],
        [4.6001e-04],
        [1.5879e-04],
        [2.4809e-05],
        [4.3404e-03],
        [2.3887e-04],
        [6.7629e-04]], device='cuda:0')/tensor([[5.2428e-04, 7.8247e-04, 3.7064e-04, 1.8723e-04, 4.7621e-04, 4.2685e-04,
         2.8675e-03, 1.6038e-04, 2.2303e-03, 3.0480e-03, 4.6001e-04, 1.5879e-04,
         2.4809e-05, 4.3404e-03, 2.3887e-04, 6.7629e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0715e-04],
        [7.2991e-05],
        [3.0553e-04],
        [1.6701e-04],
        [5.4638e-05],
        [1.2236e-04],
        [7.3660e-04],
        [6.0969e-05],
        [4.1973e-04],
        [3.0945e-04],
        [5.1736e-05],
        [2.0032e-04],
        [7.7174e-05],
        [2.5112e-04],
        [6.3112e-04],
        [6.6568e-04]], device='cuda:0')/tensor([[2.0715e-04, 7.2991e-05, 3.0553e-04, 1.6701e-04, 5.4638e-05, 1.2236e-04,
         7.3660e-04, 6.0969e-05, 4.1973e-04, 3.0945e-04, 5.1736e-05, 2.0032e-04,
         7.7174e-05, 2.5112e-04, 6.3112e-04, 6.6568e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6859e-04, 5.2428e-04, 2.0715e-04],
        [4.1991e-04, 7.8247e-04, 7.2991e-05],
        [3.5354e-04, 3.7064e-04, 3.0553e-04],
        [3.0749e-04, 1.8723e-04, 1.6701e-04],
        [4.3645e-04, 4.7621e-04, 5.4638e-05],
        [6.6011e-04, 4.2685e-04, 1.2236e-04],
        [8.4513e-04, 2.8675e-03, 7.3660e-04],
        [1.5679e-04, 1.6038e-04, 6.0969e-05],
        [6.9699e-04, 2.2303e-03, 4.1973e-04],
        [1.1052e-03, 3.0480e-03, 3.0945e-04],
        [4.8022e-04, 4.6001e-04, 5.1736e-05],
        [2.6607e-04, 1.5879e-04, 2.0032e-04],
        [1.3193e-04, 2.4809e-05, 7.7174e-05],
        [2.3482e-03, 4.3404e-03, 2.5112e-04],
        [2.7876e-04, 2.3887e-04, 6.3112e-04],
        [9.1908e-04, 6.7629e-04, 6.6568e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0006],
        [0.0011],
        [0.0015],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0001],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0016],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0006, 0.0011, 0.0015, 0.0006, 0.0001, 0.0004, 0.0003, 0.0005,
         0.0008, 0.0001, 0.0004, 0.0003, 0.0007, 0.0016, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.3476e-04],
        [1.0569e-03],
        [3.2483e-03],
        [1.2208e-03],
        [1.5305e-03],
        [3.9611e-05],
        [8.5278e-04],
        [3.8104e-04],
        [7.0358e-04],
        [1.1289e-03],
        [3.3203e-05],
        [4.0518e-04],
        [5.2670e-04],
        [1.4291e-03],
        [2.1844e-03],
        [1.8503e-04]], device='cuda:0')/tensor([[1.3476e-04, 1.0569e-03, 3.2483e-03, 1.2208e-03, 1.5305e-03, 3.9611e-05,
         8.5278e-04, 3.8104e-04, 7.0358e-04, 1.1289e-03, 3.3203e-05, 4.0518e-04,
         5.2670e-04, 1.4291e-03, 2.1844e-03, 1.8503e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3860e-04],
        [2.3262e-04],
        [8.0181e-04],
        [4.9061e-04],
        [1.9594e-04],
        [2.2990e-04],
        [4.9139e-04],
        [1.6079e-04],
        [2.2930e-04],
        [2.8306e-04],
        [6.3417e-05],
        [1.3252e-04],
        [1.5800e-04],
        [2.6324e-04],
        [1.8246e-04],
        [1.7447e-04]], device='cuda:0')/tensor([[1.3860e-04, 2.3262e-04, 8.0181e-04, 4.9061e-04, 1.9594e-04, 2.2990e-04,
         4.9139e-04, 1.6079e-04, 2.2930e-04, 2.8306e-04, 6.3417e-05, 1.3252e-04,
         1.5800e-04, 2.6324e-04, 1.8246e-04, 1.7447e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[2.6280e-04, 1.3476e-04, 1.3860e-04],
        [6.0108e-04, 1.0569e-03, 2.3262e-04],
        [1.0805e-03, 3.2483e-03, 8.0181e-04],
        [1.5431e-03, 1.2208e-03, 4.9061e-04],
        [6.1344e-04, 1.5305e-03, 1.9594e-04],
        [1.0912e-04, 3.9611e-05, 2.2990e-04],
        [4.1695e-04, 8.5278e-04, 4.9139e-04],
        [2.7662e-04, 3.8104e-04, 1.6079e-04],
        [5.1233e-04, 7.0358e-04, 2.2930e-04],
        [8.3223e-04, 1.1289e-03, 2.8306e-04],
        [1.2831e-04, 3.3203e-05, 6.3417e-05],
        [4.1108e-04, 4.0518e-04, 1.3252e-04],
        [3.1412e-04, 5.2670e-04, 1.5800e-04],
        [7.0839e-04, 1.4291e-03, 2.6324e-04],
        [1.6293e-03, 2.1844e-03, 1.8246e-04],
        [2.7383e-04, 1.8503e-04, 1.7447e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0005],
        [0.0012],
        [0.0004],
        [0.0026]], device='cuda:0')/tensor([[0.0005, 0.0012, 0.0004, 0.0026]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[4.1393e-05],
        [1.8720e-03],
        [3.6351e-04],
        [1.8250e-03]], device='cuda:0')/tensor([[4.1393e-05, 1.8720e-03, 3.6351e-04, 1.8250e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0002],
        [0.0003],
        [0.0002],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0002, 0.0004]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[5.1679e-04, 4.1393e-05, 1.5557e-04],
        [1.2290e-03, 1.8720e-03, 3.2678e-04],
        [4.0496e-04, 3.6351e-04, 1.6838e-04],
        [2.5948e-03, 1.8250e-03, 4.3402e-04]], device='cuda:0')
acc:  0.3712121212121212
Time taken to execute the de NLI task with prompt type modal, variation 2 and batchsize 16: 0:01:01.642841
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI modal 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 365.64it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6305e-04],
        [1.7618e-04],
        [2.3194e-03],
        [1.2192e-04],
        [6.4267e-04],
        [5.8182e-04],
        [6.1764e-04],
        [2.0999e-04],
        [6.0884e-05],
        [2.2269e-04],
        [6.3444e-04],
        [1.1712e-04],
        [3.7854e-04],
        [1.3602e-04],
        [1.3367e-03],
        [3.4500e-04]], device='cuda:0')/tensor([[1.6305e-04, 1.7618e-04, 2.3194e-03, 1.2192e-04, 6.4267e-04, 5.8182e-04,
         6.1764e-04, 2.0999e-04, 6.0884e-05, 2.2269e-04, 6.3444e-04, 1.1712e-04,
         3.7854e-04, 1.3602e-04, 1.3367e-03, 3.4500e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.1690e-04],
        [3.5750e-04],
        [1.9885e-03],
        [3.4617e-04],
        [2.5394e-03],
        [1.1465e-03],
        [7.5887e-04],
        [2.3925e-04],
        [7.9340e-05],
        [7.6182e-04],
        [2.6962e-03],
        [6.2021e-05],
        [3.1445e-03],
        [4.2595e-05],
        [6.4252e-03],
        [4.9050e-04]], device='cuda:0')/tensor([[3.1690e-04, 3.5750e-04, 1.9885e-03, 3.4617e-04, 2.5394e-03, 1.1465e-03,
         7.5887e-04, 2.3925e-04, 7.9340e-05, 7.6182e-04, 2.6962e-03, 6.2021e-05,
         3.1445e-03, 4.2595e-05, 6.4252e-03, 4.9050e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2233e-04],
        [5.7455e-05],
        [2.9283e-04],
        [1.5264e-04],
        [3.1301e-04],
        [3.0239e-04],
        [6.0058e-03],
        [2.5076e-04],
        [1.3083e-04],
        [2.2966e-04],
        [3.8437e-04],
        [4.0912e-05],
        [6.6530e-04],
        [7.4854e-04],
        [8.7302e-04],
        [2.3845e-04]], device='cuda:0')/tensor([[3.2233e-04, 5.7455e-05, 2.9283e-04, 1.5264e-04, 3.1301e-04, 3.0239e-04,
         6.0058e-03, 2.5076e-04, 1.3083e-04, 2.2966e-04, 3.8437e-04, 4.0912e-05,
         6.6530e-04, 7.4854e-04, 8.7302e-04, 2.3845e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6305e-04, 3.1690e-04, 3.2233e-04],
        [1.7618e-04, 3.5750e-04, 5.7455e-05],
        [2.3194e-03, 1.9885e-03, 2.9283e-04],
        [1.2192e-04, 3.4617e-04, 1.5264e-04],
        [6.4267e-04, 2.5394e-03, 3.1301e-04],
        [5.8182e-04, 1.1465e-03, 3.0239e-04],
        [6.1764e-04, 7.5887e-04, 6.0058e-03],
        [2.0999e-04, 2.3925e-04, 2.5076e-04],
        [6.0884e-05, 7.9340e-05, 1.3083e-04],
        [2.2269e-04, 7.6182e-04, 2.2966e-04],
        [6.3444e-04, 2.6962e-03, 3.8437e-04],
        [1.1712e-04, 6.2021e-05, 4.0912e-05],
        [3.7854e-04, 3.1445e-03, 6.6530e-04],
        [1.3602e-04, 4.2595e-05, 7.4854e-04],
        [1.3367e-03, 6.4252e-03, 8.7302e-04],
        [3.4500e-04, 4.9050e-04, 2.3845e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0015],
        [0.0007],
        [0.0002],
        [0.0014],
        [0.0005],
        [0.0005],
        [0.0009],
        [0.0005],
        [0.0005],
        [0.0007],
        [0.0008],
        [0.0003],
        [0.0004],
        [0.0009],
        [0.0007],
        [0.0011]], device='cuda:0')/tensor([[0.0015, 0.0007, 0.0002, 0.0014, 0.0005, 0.0005, 0.0009, 0.0005, 0.0005,
         0.0007, 0.0008, 0.0003, 0.0004, 0.0009, 0.0007, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8200e-03],
        [3.3997e-03],
        [1.0546e-04],
        [1.0645e-03],
        [7.6261e-04],
        [3.1971e-05],
        [3.6588e-03],
        [6.4645e-05],
        [2.6209e-04],
        [1.0641e-03],
        [1.1215e-03],
        [4.8735e-04],
        [9.3606e-04],
        [1.7600e-03],
        [7.8125e-04],
        [8.2572e-04]], device='cuda:0')/tensor([[3.8200e-03, 3.3997e-03, 1.0546e-04, 1.0645e-03, 7.6261e-04, 3.1971e-05,
         3.6588e-03, 6.4645e-05, 2.6209e-04, 1.0641e-03, 1.1215e-03, 4.8735e-04,
         9.3606e-04, 1.7600e-03, 7.8125e-04, 8.2572e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0010],
        [0.0002],
        [0.0021],
        [0.0003],
        [0.0005],
        [0.0006],
        [0.0001],
        [0.0004],
        [0.0002],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0012]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0002, 0.0021, 0.0003, 0.0005, 0.0006, 0.0001, 0.0004,
         0.0002, 0.0001, 0.0002, 0.0002, 0.0003, 0.0002, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4563e-03, 3.8200e-03, 1.5923e-04],
        [7.0182e-04, 3.3997e-03, 9.5111e-04],
        [1.8717e-04, 1.0546e-04, 1.5963e-04],
        [1.3685e-03, 1.0645e-03, 2.0729e-03],
        [5.4627e-04, 7.6261e-04, 2.7772e-04],
        [4.6435e-04, 3.1971e-05, 4.5556e-04],
        [8.9283e-04, 3.6588e-03, 6.0500e-04],
        [5.2325e-04, 6.4645e-05, 1.1365e-04],
        [5.4405e-04, 2.6209e-04, 3.6361e-04],
        [6.9850e-04, 1.0641e-03, 1.9944e-04],
        [7.9658e-04, 1.1215e-03, 1.4762e-04],
        [3.0720e-04, 4.8735e-04, 2.4822e-04],
        [4.0566e-04, 9.3606e-04, 2.4007e-04],
        [9.2827e-04, 1.7600e-03, 2.5862e-04],
        [6.7560e-04, 7.8125e-04, 2.2882e-04],
        [1.0654e-03, 8.2572e-04, 1.1835e-03]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.0082e-04],
        [5.5010e-05],
        [3.1396e-03],
        [1.0477e-03],
        [5.8169e-04],
        [1.1315e-03],
        [7.7835e-05],
        [8.8709e-05],
        [1.0548e-03],
        [7.2076e-04],
        [2.9241e-03],
        [2.1242e-04],
        [8.8569e-04],
        [9.1407e-04],
        [1.3091e-03],
        [2.8470e-04]], device='cuda:0')/tensor([[3.0082e-04, 5.5010e-05, 3.1396e-03, 1.0477e-03, 5.8169e-04, 1.1315e-03,
         7.7835e-05, 8.8709e-05, 1.0548e-03, 7.2076e-04, 2.9241e-03, 2.1242e-04,
         8.8569e-04, 9.1407e-04, 1.3091e-03, 2.8470e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.9107e-04],
        [6.1695e-06],
        [2.7750e-03],
        [2.2427e-03],
        [1.8912e-03],
        [3.2925e-03],
        [4.9023e-04],
        [4.2185e-05],
        [2.3121e-03],
        [1.0834e-03],
        [7.1918e-03],
        [1.8331e-04],
        [1.5502e-03],
        [1.8405e-03],
        [7.0369e-04],
        [7.6591e-05]], device='cuda:0')/tensor([[4.9107e-04, 6.1695e-06, 2.7750e-03, 2.2427e-03, 1.8912e-03, 3.2925e-03,
         4.9023e-04, 4.2185e-05, 2.3121e-03, 1.0834e-03, 7.1918e-03, 1.8331e-04,
         1.5502e-03, 1.8405e-03, 7.0369e-04, 7.6591e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.5789e-05],
        [1.0837e-05],
        [7.6129e-04],
        [8.8004e-04],
        [1.0235e-03],
        [1.2135e-03],
        [2.7504e-04],
        [2.9394e-05],
        [8.5045e-04],
        [3.9651e-04],
        [4.6288e-04],
        [7.8068e-05],
        [7.4302e-04],
        [8.6168e-04],
        [6.1184e-05],
        [1.9651e-04]], device='cuda:0')/tensor([[6.5789e-05, 1.0837e-05, 7.6129e-04, 8.8004e-04, 1.0235e-03, 1.2135e-03,
         2.7504e-04, 2.9394e-05, 8.5045e-04, 3.9651e-04, 4.6288e-04, 7.8068e-05,
         7.4302e-04, 8.6168e-04, 6.1184e-05, 1.9651e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0082e-04, 4.9107e-04, 6.5789e-05],
        [5.5010e-05, 6.1695e-06, 1.0837e-05],
        [3.1396e-03, 2.7750e-03, 7.6129e-04],
        [1.0477e-03, 2.2427e-03, 8.8004e-04],
        [5.8169e-04, 1.8912e-03, 1.0235e-03],
        [1.1315e-03, 3.2925e-03, 1.2135e-03],
        [7.7835e-05, 4.9023e-04, 2.7504e-04],
        [8.8709e-05, 4.2185e-05, 2.9394e-05],
        [1.0548e-03, 2.3121e-03, 8.5045e-04],
        [7.2076e-04, 1.0834e-03, 3.9651e-04],
        [2.9241e-03, 7.1918e-03, 4.6288e-04],
        [2.1242e-04, 1.8331e-04, 7.8068e-05],
        [8.8569e-04, 1.5502e-03, 7.4302e-04],
        [9.1407e-04, 1.8405e-03, 8.6168e-04],
        [1.3091e-03, 7.0369e-04, 6.1184e-05],
        [2.8470e-04, 7.6591e-05, 1.9651e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.9564e-04],
        [6.2910e-04],
        [1.2360e-03],
        [3.0204e-04],
        [1.9744e-04],
        [5.0189e-03],
        [8.5215e-04],
        [3.2831e-04],
        [1.8910e-04],
        [8.4192e-04],
        [4.1427e-04],
        [3.0876e-04],
        [2.6491e-03],
        [4.6251e-04],
        [6.9999e-05],
        [2.8393e-04]], device='cuda:0')/tensor([[1.9564e-04, 6.2910e-04, 1.2360e-03, 3.0204e-04, 1.9744e-04, 5.0189e-03,
         8.5215e-04, 3.2831e-04, 1.8910e-04, 8.4192e-04, 4.1427e-04, 3.0876e-04,
         2.6491e-03, 4.6251e-04, 6.9999e-05, 2.8393e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.7677e-04],
        [4.3110e-03],
        [2.9583e-03],
        [1.4453e-04],
        [4.3476e-04],
        [2.4418e-03],
        [1.1815e-03],
        [5.6939e-04],
        [1.0511e-03],
        [1.8451e-05],
        [2.4390e-03],
        [2.0405e-04],
        [4.0723e-04],
        [1.5044e-03],
        [1.0784e-04],
        [9.7434e-04]], device='cuda:0')/tensor([[4.7677e-04, 4.3110e-03, 2.9583e-03, 1.4453e-04, 4.3476e-04, 2.4418e-03,
         1.1815e-03, 5.6939e-04, 1.0511e-03, 1.8451e-05, 2.4390e-03, 2.0405e-04,
         4.0723e-04, 1.5044e-03, 1.0784e-04, 9.7434e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4500e-04],
        [1.3977e-03],
        [2.1615e-04],
        [9.4277e-04],
        [2.6361e-04],
        [7.0244e-05],
        [4.2333e-04],
        [6.3319e-05],
        [2.9419e-04],
        [4.6568e-05],
        [9.4533e-04],
        [4.8546e-05],
        [3.9052e-04],
        [2.7939e-04],
        [2.9702e-04],
        [1.9418e-04]], device='cuda:0')/tensor([[1.4500e-04, 1.3977e-03, 2.1615e-04, 9.4277e-04, 2.6361e-04, 7.0244e-05,
         4.2333e-04, 6.3319e-05, 2.9419e-04, 4.6568e-05, 9.4533e-04, 4.8546e-05,
         3.9052e-04, 2.7939e-04, 2.9702e-04, 1.9418e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9564e-04, 4.7677e-04, 1.4500e-04],
        [6.2910e-04, 4.3110e-03, 1.3977e-03],
        [1.2360e-03, 2.9583e-03, 2.1615e-04],
        [3.0204e-04, 1.4453e-04, 9.4277e-04],
        [1.9744e-04, 4.3476e-04, 2.6361e-04],
        [5.0189e-03, 2.4418e-03, 7.0244e-05],
        [8.5215e-04, 1.1815e-03, 4.2333e-04],
        [3.2831e-04, 5.6939e-04, 6.3319e-05],
        [1.8910e-04, 1.0511e-03, 2.9419e-04],
        [8.4192e-04, 1.8451e-05, 4.6568e-05],
        [4.1427e-04, 2.4390e-03, 9.4533e-04],
        [3.0876e-04, 2.0405e-04, 4.8546e-05],
        [2.6491e-03, 4.0723e-04, 3.9052e-04],
        [4.6251e-04, 1.5044e-03, 2.7939e-04],
        [6.9999e-05, 1.0784e-04, 2.9702e-04],
        [2.8393e-04, 9.7434e-04, 1.9418e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7581e-04],
        [3.1499e-04],
        [3.2029e-04],
        [4.4458e-04],
        [5.5107e-04],
        [1.7174e-03],
        [2.0318e-04],
        [4.4276e-04],
        [4.0131e-04],
        [7.5024e-03],
        [3.1130e-04],
        [8.0899e-04],
        [5.5645e-04],
        [1.6580e-05],
        [9.2044e-04],
        [6.1643e-04]], device='cuda:0')/tensor([[1.7581e-04, 3.1499e-04, 3.2029e-04, 4.4458e-04, 5.5107e-04, 1.7174e-03,
         2.0318e-04, 4.4276e-04, 4.0131e-04, 7.5024e-03, 3.1130e-04, 8.0899e-04,
         5.5645e-04, 1.6580e-05, 9.2044e-04, 6.1643e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6003e-03],
        [1.0581e-03],
        [2.4771e-04],
        [1.1284e-03],
        [2.4115e-03],
        [3.3703e-03],
        [2.0846e-04],
        [1.3553e-03],
        [2.3071e-04],
        [5.9869e-03],
        [1.9691e-03],
        [1.3520e-03],
        [6.0760e-04],
        [3.7369e-06],
        [5.0842e-03],
        [3.5930e-03]], device='cuda:0')/tensor([[1.6003e-03, 1.0581e-03, 2.4771e-04, 1.1284e-03, 2.4115e-03, 3.3703e-03,
         2.0846e-04, 1.3553e-03, 2.3071e-04, 5.9869e-03, 1.9691e-03, 1.3520e-03,
         6.0760e-04, 3.7369e-06, 5.0842e-03, 3.5930e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4286e-04],
        [7.4908e-04],
        [7.1216e-05],
        [1.8944e-03],
        [5.6245e-04],
        [1.5441e-03],
        [7.3801e-04],
        [1.9814e-03],
        [4.1188e-05],
        [3.0032e-03],
        [4.6813e-04],
        [7.8547e-04],
        [5.6585e-05],
        [3.9663e-06],
        [1.0321e-02],
        [1.0253e-03]], device='cuda:0')/tensor([[1.4286e-04, 7.4908e-04, 7.1216e-05, 1.8944e-03, 5.6245e-04, 1.5441e-03,
         7.3801e-04, 1.9814e-03, 4.1188e-05, 3.0032e-03, 4.6813e-04, 7.8547e-04,
         5.6585e-05, 3.9663e-06, 1.0321e-02, 1.0253e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7581e-04, 1.6003e-03, 1.4286e-04],
        [3.1499e-04, 1.0581e-03, 7.4908e-04],
        [3.2029e-04, 2.4771e-04, 7.1216e-05],
        [4.4458e-04, 1.1284e-03, 1.8944e-03],
        [5.5107e-04, 2.4115e-03, 5.6245e-04],
        [1.7174e-03, 3.3703e-03, 1.5441e-03],
        [2.0318e-04, 2.0846e-04, 7.3801e-04],
        [4.4276e-04, 1.3553e-03, 1.9814e-03],
        [4.0131e-04, 2.3071e-04, 4.1188e-05],
        [7.5024e-03, 5.9869e-03, 3.0032e-03],
        [3.1130e-04, 1.9691e-03, 4.6813e-04],
        [8.0899e-04, 1.3520e-03, 7.8547e-04],
        [5.5645e-04, 6.0760e-04, 5.6585e-05],
        [1.6580e-05, 3.7369e-06, 3.9663e-06],
        [9.2044e-04, 5.0842e-03, 1.0321e-02],
        [6.1643e-04, 3.5930e-03, 1.0253e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6005e-03],
        [1.1273e-03],
        [7.4942e-04],
        [2.0213e-04],
        [5.4854e-04],
        [1.8334e-04],
        [1.2065e-03],
        [1.8542e-03],
        [1.6149e-04],
        [3.3722e-04],
        [1.0400e-03],
        [1.7375e-04],
        [4.0640e-04],
        [3.6814e-04],
        [7.1453e-05],
        [2.4552e-04]], device='cuda:0')/tensor([[1.6005e-03, 1.1273e-03, 7.4942e-04, 2.0213e-04, 5.4854e-04, 1.8334e-04,
         1.2065e-03, 1.8542e-03, 1.6149e-04, 3.3722e-04, 1.0400e-03, 1.7375e-04,
         4.0640e-04, 3.6814e-04, 7.1453e-05, 2.4552e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.8750e-03],
        [4.8003e-03],
        [5.4873e-04],
        [1.3442e-03],
        [8.6516e-04],
        [1.1262e-03],
        [2.3036e-03],
        [1.2238e-03],
        [1.0807e-05],
        [1.6611e-03],
        [1.2401e-02],
        [1.4398e-04],
        [3.8019e-04],
        [4.1922e-04],
        [3.2538e-05],
        [3.9433e-04]], device='cuda:0')/tensor([[2.8750e-03, 4.8003e-03, 5.4873e-04, 1.3442e-03, 8.6516e-04, 1.1262e-03,
         2.3036e-03, 1.2238e-03, 1.0807e-05, 1.6611e-03, 1.2401e-02, 1.4398e-04,
         3.8019e-04, 4.1922e-04, 3.2538e-05, 3.9433e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.8523e-04],
        [5.5126e-04],
        [2.2129e-04],
        [2.2560e-04],
        [1.2063e-04],
        [4.2659e-04],
        [4.6146e-04],
        [4.1984e-04],
        [1.2735e-05],
        [2.2872e-04],
        [2.0274e-04],
        [1.5243e-04],
        [1.8709e-04],
        [6.4485e-04],
        [2.5687e-05],
        [9.3002e-05]], device='cuda:0')/tensor([[8.8523e-04, 5.5126e-04, 2.2129e-04, 2.2560e-04, 1.2063e-04, 4.2659e-04,
         4.6146e-04, 4.1984e-04, 1.2735e-05, 2.2872e-04, 2.0274e-04, 1.5243e-04,
         1.8709e-04, 6.4485e-04, 2.5687e-05, 9.3002e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6005e-03, 2.8750e-03, 8.8523e-04],
        [1.1273e-03, 4.8003e-03, 5.5126e-04],
        [7.4942e-04, 5.4873e-04, 2.2129e-04],
        [2.0213e-04, 1.3442e-03, 2.2560e-04],
        [5.4854e-04, 8.6516e-04, 1.2063e-04],
        [1.8334e-04, 1.1262e-03, 4.2659e-04],
        [1.2065e-03, 2.3036e-03, 4.6146e-04],
        [1.8542e-03, 1.2238e-03, 4.1984e-04],
        [1.6149e-04, 1.0807e-05, 1.2735e-05],
        [3.3722e-04, 1.6611e-03, 2.2872e-04],
        [1.0400e-03, 1.2401e-02, 2.0274e-04],
        [1.7375e-04, 1.4398e-04, 1.5243e-04],
        [4.0640e-04, 3.8019e-04, 1.8709e-04],
        [3.6814e-04, 4.1922e-04, 6.4485e-04],
        [7.1453e-05, 3.2538e-05, 2.5687e-05],
        [2.4552e-04, 3.9433e-04, 9.3002e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.8760e-04],
        [1.0352e-03],
        [2.3501e-04],
        [6.9214e-04],
        [3.3988e-04],
        [6.0621e-04],
        [9.9580e-05],
        [1.5573e-03],
        [4.7729e-04],
        [2.7596e-04],
        [3.2156e-04],
        [3.0360e-04],
        [2.2133e-04],
        [1.1562e-03],
        [3.3217e-04],
        [4.0537e-04]], device='cuda:0')/tensor([[6.8760e-04, 1.0352e-03, 2.3501e-04, 6.9214e-04, 3.3988e-04, 6.0621e-04,
         9.9580e-05, 1.5573e-03, 4.7729e-04, 2.7596e-04, 3.2156e-04, 3.0360e-04,
         2.2133e-04, 1.1562e-03, 3.3217e-04, 4.0537e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4477e-04],
        [1.5164e-03],
        [7.0685e-04],
        [5.7415e-04],
        [3.4265e-03],
        [9.4324e-04],
        [2.8403e-04],
        [1.9959e-03],
        [7.7282e-04],
        [3.6578e-04],
        [6.3476e-04],
        [3.4741e-03],
        [1.8485e-05],
        [1.8174e-03],
        [6.5410e-04],
        [1.8234e-03]], device='cuda:0')/tensor([[6.4477e-04, 1.5164e-03, 7.0685e-04, 5.7415e-04, 3.4265e-03, 9.4324e-04,
         2.8403e-04, 1.9959e-03, 7.7282e-04, 3.6578e-04, 6.3476e-04, 3.4741e-03,
         1.8485e-05, 1.8174e-03, 6.5410e-04, 1.8234e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.1682e-04],
        [1.0015e-04],
        [9.7110e-05],
        [2.8059e-04],
        [2.7288e-04],
        [1.1568e-04],
        [1.7981e-05],
        [3.8033e-04],
        [1.4541e-04],
        [4.0963e-04],
        [1.3988e-04],
        [8.1217e-05],
        [1.5407e-04],
        [1.9034e-04],
        [2.0910e-04],
        [1.2104e-04]], device='cuda:0')/tensor([[7.1682e-04, 1.0015e-04, 9.7110e-05, 2.8059e-04, 2.7288e-04, 1.1568e-04,
         1.7981e-05, 3.8033e-04, 1.4541e-04, 4.0963e-04, 1.3988e-04, 8.1217e-05,
         1.5407e-04, 1.9034e-04, 2.0910e-04, 1.2104e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.8760e-04, 6.4477e-04, 7.1682e-04],
        [1.0352e-03, 1.5164e-03, 1.0015e-04],
        [2.3501e-04, 7.0685e-04, 9.7110e-05],
        [6.9214e-04, 5.7415e-04, 2.8059e-04],
        [3.3988e-04, 3.4265e-03, 2.7288e-04],
        [6.0621e-04, 9.4324e-04, 1.1568e-04],
        [9.9580e-05, 2.8403e-04, 1.7981e-05],
        [1.5573e-03, 1.9959e-03, 3.8033e-04],
        [4.7729e-04, 7.7282e-04, 1.4541e-04],
        [2.7596e-04, 3.6578e-04, 4.0963e-04],
        [3.2156e-04, 6.3476e-04, 1.3988e-04],
        [3.0360e-04, 3.4741e-03, 8.1217e-05],
        [2.2133e-04, 1.8485e-05, 1.5407e-04],
        [1.1562e-03, 1.8174e-03, 1.9034e-04],
        [3.3217e-04, 6.5410e-04, 2.0910e-04],
        [4.0537e-04, 1.8234e-03, 1.2104e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.5876e-04],
        [8.7425e-04],
        [1.5172e-04],
        [5.7814e-05],
        [4.1707e-04],
        [2.2553e-04],
        [5.5457e-04],
        [4.2061e-04],
        [3.9881e-04],
        [4.7533e-04],
        [3.2030e-04],
        [1.9795e-04],
        [8.7195e-04],
        [4.6176e-04],
        [4.8025e-04],
        [4.6118e-04]], device='cuda:0')/tensor([[5.5876e-04, 8.7425e-04, 1.5172e-04, 5.7814e-05, 4.1707e-04, 2.2553e-04,
         5.5457e-04, 4.2061e-04, 3.9881e-04, 4.7533e-04, 3.2030e-04, 1.9795e-04,
         8.7195e-04, 4.6176e-04, 4.8025e-04, 4.6118e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0015],
        [0.0038],
        [0.0003],
        [0.0007],
        [0.0016],
        [0.0021],
        [0.0010],
        [0.0019],
        [0.0025],
        [0.0012],
        [0.0003],
        [0.0009],
        [0.0017],
        [0.0002],
        [0.0013],
        [0.0007]], device='cuda:0')/tensor([[0.0015, 0.0038, 0.0003, 0.0007, 0.0016, 0.0021, 0.0010, 0.0019, 0.0025,
         0.0012, 0.0003, 0.0009, 0.0017, 0.0002, 0.0013, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0004],
        [0.0008],
        [0.0002],
        [0.0002],
        [0.0013],
        [0.0001],
        [0.0009],
        [0.0002],
        [0.0009],
        [0.0004],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0008],
        [0.0009],
        [0.0001]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0002, 0.0002, 0.0013, 0.0001, 0.0009, 0.0002, 0.0009,
         0.0004, 0.0002, 0.0003, 0.0004, 0.0008, 0.0009, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[5.5876e-04, 1.4640e-03, 3.9777e-04],
        [8.7425e-04, 3.7762e-03, 7.7422e-04],
        [1.5172e-04, 3.1324e-04, 1.7711e-04],
        [5.7814e-05, 6.9303e-04, 2.4354e-04],
        [4.1707e-04, 1.6427e-03, 1.2786e-03],
        [2.2553e-04, 2.0989e-03, 1.4796e-04],
        [5.5457e-04, 9.8895e-04, 8.8817e-04],
        [4.2061e-04, 1.8717e-03, 2.2397e-04],
        [3.9881e-04, 2.4830e-03, 8.6661e-04],
        [4.7533e-04, 1.1611e-03, 4.3317e-04],
        [3.2030e-04, 2.8508e-04, 1.5248e-04],
        [1.9795e-04, 8.5569e-04, 2.7383e-04],
        [8.7195e-04, 1.6598e-03, 3.6864e-04],
        [4.6176e-04, 1.6019e-04, 8.0224e-04],
        [4.8025e-04, 1.2694e-03, 9.3549e-04],
        [4.6118e-04, 7.0997e-04, 1.3270e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0002],
        [0.0013],
        [0.0002],
        [0.0011]], device='cuda:0')/tensor([[0.0002, 0.0013, 0.0002, 0.0011]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0022],
        [0.0018],
        [0.0003],
        [0.0018]], device='cuda:0')/tensor([[0.0022, 0.0018, 0.0003, 0.0018]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0002],
        [0.0009],
        [0.0001],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0009, 0.0001, 0.0003]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0002, 0.0022, 0.0002],
        [0.0013, 0.0018, 0.0009],
        [0.0002, 0.0003, 0.0001],
        [0.0011, 0.0018, 0.0003]], device='cuda:0')
acc:  0.4318181818181818
Time taken to execute the de NLI task with prompt type modal, variation 3 and batchsize 16: 0:01:01.831572
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI modal 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 362.19it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0020],
        [0.0009],
        [0.0010],
        [0.0013],
        [0.0012],
        [0.0018],
        [0.0015],
        [0.0009],
        [0.0026],
        [0.0004],
        [0.0012],
        [0.0007],
        [0.0019],
        [0.0007],
        [0.0002]], device='cuda:0')/tensor([[0.0017, 0.0020, 0.0009, 0.0010, 0.0013, 0.0012, 0.0018, 0.0015, 0.0009,
         0.0026, 0.0004, 0.0012, 0.0007, 0.0019, 0.0007, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.6110e-03],
        [1.5202e-03],
        [1.2691e-03],
        [4.2855e-04],
        [9.3520e-04],
        [9.3880e-05],
        [1.3583e-03],
        [1.5214e-03],
        [2.3105e-03],
        [2.0194e-05],
        [7.9667e-04],
        [2.8427e-03],
        [5.3582e-04],
        [9.3743e-04],
        [1.4436e-03],
        [9.6524e-04]], device='cuda:0')/tensor([[4.6110e-03, 1.5202e-03, 1.2691e-03, 4.2855e-04, 9.3520e-04, 9.3880e-05,
         1.3583e-03, 1.5214e-03, 2.3105e-03, 2.0194e-05, 7.9667e-04, 2.8427e-03,
         5.3582e-04, 9.3743e-04, 1.4436e-03, 9.6524e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6524e-03],
        [2.8499e-04],
        [1.3232e-03],
        [1.7740e-04],
        [1.0631e-04],
        [2.0088e-04],
        [1.0120e-04],
        [1.4613e-04],
        [9.2450e-04],
        [2.5012e-05],
        [1.2842e-03],
        [2.7905e-04],
        [5.8965e-04],
        [1.7244e-03],
        [4.3825e-04],
        [1.2963e-04]], device='cuda:0')/tensor([[5.6524e-03, 2.8499e-04, 1.3232e-03, 1.7740e-04, 1.0631e-04, 2.0088e-04,
         1.0120e-04, 1.4613e-04, 9.2450e-04, 2.5012e-05, 1.2842e-03, 2.7905e-04,
         5.8965e-04, 1.7244e-03, 4.3825e-04, 1.2963e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6798e-03, 4.6110e-03, 5.6524e-03],
        [1.9965e-03, 1.5202e-03, 2.8499e-04],
        [9.0337e-04, 1.2691e-03, 1.3232e-03],
        [9.9151e-04, 4.2855e-04, 1.7740e-04],
        [1.3213e-03, 9.3520e-04, 1.0631e-04],
        [1.1979e-03, 9.3880e-05, 2.0088e-04],
        [1.7618e-03, 1.3583e-03, 1.0120e-04],
        [1.4593e-03, 1.5214e-03, 1.4613e-04],
        [8.8960e-04, 2.3105e-03, 9.2450e-04],
        [2.5565e-03, 2.0194e-05, 2.5012e-05],
        [4.1099e-04, 7.9667e-04, 1.2842e-03],
        [1.1615e-03, 2.8427e-03, 2.7905e-04],
        [6.5520e-04, 5.3582e-04, 5.8965e-04],
        [1.9294e-03, 9.3743e-04, 1.7244e-03],
        [6.6283e-04, 1.4436e-03, 4.3825e-04],
        [1.7459e-04, 9.6524e-04, 1.2963e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0028],
        [0.0013],
        [0.0034],
        [0.0011],
        [0.0007],
        [0.0033],
        [0.0035],
        [0.0009],
        [0.0035],
        [0.0228],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0020],
        [0.0014],
        [0.0005]], device='cuda:0')/tensor([[0.0028, 0.0013, 0.0034, 0.0011, 0.0007, 0.0033, 0.0035, 0.0009, 0.0035,
         0.0228, 0.0002, 0.0006, 0.0005, 0.0020, 0.0014, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.5348e-03],
        [1.5325e-03],
        [8.3968e-03],
        [4.0006e-04],
        [7.3340e-05],
        [1.7128e-03],
        [1.8630e-03],
        [2.1703e-03],
        [4.2694e-03],
        [1.0844e-02],
        [1.7488e-05],
        [4.6547e-04],
        [2.1691e-03],
        [7.9693e-04],
        [7.5171e-04],
        [3.5076e-03]], device='cuda:0')/tensor([[2.5348e-03, 1.5325e-03, 8.3968e-03, 4.0006e-04, 7.3340e-05, 1.7128e-03,
         1.8630e-03, 2.1703e-03, 4.2694e-03, 1.0844e-02, 1.7488e-05, 4.6547e-04,
         2.1691e-03, 7.9693e-04, 7.5171e-04, 3.5076e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2822e-04],
        [3.1456e-04],
        [3.8008e-04],
        [1.0774e-03],
        [3.2734e-04],
        [4.4890e-04],
        [9.9026e-04],
        [2.3968e-04],
        [1.3494e-03],
        [1.0478e-03],
        [4.1676e-05],
        [2.5641e-04],
        [6.2873e-04],
        [7.9313e-04],
        [1.4793e-04],
        [1.2843e-04]], device='cuda:0')/tensor([[5.2822e-04, 3.1456e-04, 3.8008e-04, 1.0774e-03, 3.2734e-04, 4.4890e-04,
         9.9026e-04, 2.3968e-04, 1.3494e-03, 1.0478e-03, 4.1676e-05, 2.5641e-04,
         6.2873e-04, 7.9313e-04, 1.4793e-04, 1.2843e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.8002e-03, 2.5348e-03, 5.2822e-04],
        [1.3316e-03, 1.5325e-03, 3.1456e-04],
        [3.4045e-03, 8.3968e-03, 3.8008e-04],
        [1.0659e-03, 4.0006e-04, 1.0774e-03],
        [6.9444e-04, 7.3340e-05, 3.2734e-04],
        [3.3015e-03, 1.7128e-03, 4.4890e-04],
        [3.5292e-03, 1.8630e-03, 9.9026e-04],
        [8.7430e-04, 2.1703e-03, 2.3968e-04],
        [3.5301e-03, 4.2694e-03, 1.3494e-03],
        [2.2828e-02, 1.0844e-02, 1.0478e-03],
        [1.9724e-04, 1.7488e-05, 4.1676e-05],
        [5.7496e-04, 4.6547e-04, 2.5641e-04],
        [5.3042e-04, 2.1691e-03, 6.2873e-04],
        [1.9518e-03, 7.9693e-04, 7.9313e-04],
        [1.3540e-03, 7.5171e-04, 1.4793e-04],
        [5.4756e-04, 3.5076e-03, 1.2843e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0008],
        [0.0004],
        [0.0006],
        [0.0009],
        [0.0021],
        [0.0025],
        [0.0043],
        [0.0006],
        [0.0027],
        [0.0021],
        [0.0008],
        [0.0004],
        [0.0027],
        [0.0004],
        [0.0038]], device='cuda:0')/tensor([[0.0006, 0.0008, 0.0004, 0.0006, 0.0009, 0.0021, 0.0025, 0.0043, 0.0006,
         0.0027, 0.0021, 0.0008, 0.0004, 0.0027, 0.0004, 0.0038]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4365e-04],
        [4.6664e-03],
        [1.6047e-05],
        [9.0825e-04],
        [2.3349e-04],
        [2.4137e-03],
        [3.5988e-04],
        [6.5347e-04],
        [1.6854e-04],
        [2.1134e-03],
        [2.5926e-03],
        [2.0322e-03],
        [1.6097e-04],
        [3.9356e-03],
        [1.8760e-03],
        [1.4137e-03]], device='cuda:0')/tensor([[2.4365e-04, 4.6664e-03, 1.6047e-05, 9.0825e-04, 2.3349e-04, 2.4137e-03,
         3.5988e-04, 6.5347e-04, 1.6854e-04, 2.1134e-03, 2.5926e-03, 2.0322e-03,
         1.6097e-04, 3.9356e-03, 1.8760e-03, 1.4137e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0002],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0030],
        [0.0004],
        [0.0002],
        [0.0009],
        [0.0012],
        [0.0001],
        [0.0021],
        [0.0003],
        [0.0001],
        [0.0007],
        [0.0002],
        [0.0009]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0004, 0.0005, 0.0030, 0.0004, 0.0002, 0.0009, 0.0012,
         0.0001, 0.0021, 0.0003, 0.0001, 0.0007, 0.0002, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.7065e-04, 2.4365e-04, 1.9480e-04],
        [8.3394e-04, 4.6664e-03, 2.0950e-04],
        [4.1094e-04, 1.6047e-05, 3.5211e-04],
        [5.9297e-04, 9.0825e-04, 4.8736e-04],
        [8.6309e-04, 2.3349e-04, 3.0101e-03],
        [2.0580e-03, 2.4137e-03, 3.9130e-04],
        [2.5036e-03, 3.5988e-04, 1.8964e-04],
        [4.2726e-03, 6.5347e-04, 8.5142e-04],
        [6.0706e-04, 1.6854e-04, 1.2131e-03],
        [2.7158e-03, 2.1134e-03, 1.3926e-04],
        [2.0659e-03, 2.5926e-03, 2.0506e-03],
        [7.8526e-04, 2.0322e-03, 3.1016e-04],
        [3.5845e-04, 1.6097e-04, 1.3866e-04],
        [2.7165e-03, 3.9356e-03, 6.7163e-04],
        [4.2248e-04, 1.8760e-03, 2.3516e-04],
        [3.7962e-03, 1.4137e-03, 8.6387e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0006],
        [0.0004],
        [0.0007],
        [0.0006],
        [0.0014],
        [0.0026],
        [0.0014],
        [0.0011],
        [0.0002],
        [0.0006],
        [0.0011],
        [0.0011],
        [0.0015],
        [0.0021],
        [0.0021]], device='cuda:0')/tensor([[0.0014, 0.0006, 0.0004, 0.0007, 0.0006, 0.0014, 0.0026, 0.0014, 0.0011,
         0.0002, 0.0006, 0.0011, 0.0011, 0.0015, 0.0021, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2900e-03],
        [1.5178e-03],
        [6.4733e-04],
        [2.0853e-04],
        [8.7607e-04],
        [9.3583e-04],
        [4.8339e-03],
        [1.6651e-03],
        [1.4722e-03],
        [5.4183e-05],
        [3.3396e-04],
        [1.7697e-03],
        [9.5181e-04],
        [2.5224e-03],
        [1.4373e-03],
        [2.1358e-03]], device='cuda:0')/tensor([[1.2900e-03, 1.5178e-03, 6.4733e-04, 2.0853e-04, 8.7607e-04, 9.3583e-04,
         4.8339e-03, 1.6651e-03, 1.4722e-03, 5.4183e-05, 3.3396e-04, 1.7697e-03,
         9.5181e-04, 2.5224e-03, 1.4373e-03, 2.1358e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0184e-04],
        [1.4344e-04],
        [2.8392e-04],
        [6.3439e-04],
        [9.5248e-05],
        [2.5824e-04],
        [2.0653e-03],
        [6.5377e-04],
        [4.9066e-04],
        [4.6241e-05],
        [1.5677e-04],
        [2.3860e-04],
        [6.5118e-04],
        [1.3338e-03],
        [9.7097e-04],
        [4.2786e-04]], device='cuda:0')/tensor([[2.0184e-04, 1.4344e-04, 2.8392e-04, 6.3439e-04, 9.5248e-05, 2.5824e-04,
         2.0653e-03, 6.5377e-04, 4.9066e-04, 4.6241e-05, 1.5677e-04, 2.3860e-04,
         6.5118e-04, 1.3338e-03, 9.7097e-04, 4.2786e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4290e-03, 1.2900e-03, 2.0184e-04],
        [5.6705e-04, 1.5178e-03, 1.4344e-04],
        [4.1934e-04, 6.4733e-04, 2.8392e-04],
        [7.2376e-04, 2.0853e-04, 6.3439e-04],
        [6.0939e-04, 8.7607e-04, 9.5248e-05],
        [1.4290e-03, 9.3583e-04, 2.5824e-04],
        [2.5809e-03, 4.8339e-03, 2.0653e-03],
        [1.3703e-03, 1.6651e-03, 6.5377e-04],
        [1.0665e-03, 1.4722e-03, 4.9066e-04],
        [1.9798e-04, 5.4183e-05, 4.6241e-05],
        [6.3237e-04, 3.3396e-04, 1.5677e-04],
        [1.1283e-03, 1.7697e-03, 2.3860e-04],
        [1.0670e-03, 9.5181e-04, 6.5118e-04],
        [1.5366e-03, 2.5224e-03, 1.3338e-03],
        [2.0937e-03, 1.4373e-03, 9.7097e-04],
        [2.1214e-03, 2.1358e-03, 4.2786e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0012],
        [0.0010],
        [0.0012],
        [0.0004],
        [0.0002],
        [0.0024],
        [0.0014],
        [0.0022],
        [0.0014],
        [0.0006],
        [0.0018],
        [0.0015],
        [0.0007],
        [0.0006],
        [0.0021]], device='cuda:0')/tensor([[0.0008, 0.0012, 0.0010, 0.0012, 0.0004, 0.0002, 0.0024, 0.0014, 0.0022,
         0.0014, 0.0006, 0.0018, 0.0015, 0.0007, 0.0006, 0.0021]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0073],
        [0.0028],
        [0.0022],
        [0.0025],
        [0.0006],
        [0.0030],
        [0.0082],
        [0.0007],
        [0.0004],
        [0.0012],
        [0.0001],
        [0.0033],
        [0.0010],
        [0.0003],
        [0.0039],
        [0.0031]], device='cuda:0')/tensor([[0.0073, 0.0028, 0.0022, 0.0025, 0.0006, 0.0030, 0.0082, 0.0007, 0.0004,
         0.0012, 0.0001, 0.0033, 0.0010, 0.0003, 0.0039, 0.0031]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9251e-04],
        [1.8020e-03],
        [2.9067e-04],
        [1.0492e-03],
        [4.4861e-04],
        [1.4426e-04],
        [1.1840e-03],
        [5.9748e-05],
        [4.5093e-04],
        [6.4917e-04],
        [2.0586e-04],
        [9.9244e-04],
        [3.9022e-04],
        [2.9934e-04],
        [6.9362e-04],
        [4.7119e-04]], device='cuda:0')/tensor([[1.9251e-04, 1.8020e-03, 2.9067e-04, 1.0492e-03, 4.4861e-04, 1.4426e-04,
         1.1840e-03, 5.9748e-05, 4.5093e-04, 6.4917e-04, 2.0586e-04, 9.9244e-04,
         3.9022e-04, 2.9934e-04, 6.9362e-04, 4.7119e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.4091e-04, 7.3254e-03, 1.9251e-04],
        [1.2276e-03, 2.7902e-03, 1.8020e-03],
        [1.0185e-03, 2.2095e-03, 2.9067e-04],
        [1.2233e-03, 2.4628e-03, 1.0492e-03],
        [4.4336e-04, 6.4874e-04, 4.4861e-04],
        [2.2376e-04, 2.9658e-03, 1.4426e-04],
        [2.4005e-03, 8.2455e-03, 1.1840e-03],
        [1.4348e-03, 6.6566e-04, 5.9748e-05],
        [2.2358e-03, 4.3370e-04, 4.5093e-04],
        [1.3640e-03, 1.2360e-03, 6.4917e-04],
        [6.0610e-04, 1.0157e-04, 2.0586e-04],
        [1.8293e-03, 3.2880e-03, 9.9244e-04],
        [1.5058e-03, 9.8186e-04, 3.9022e-04],
        [6.5104e-04, 2.5777e-04, 2.9934e-04],
        [5.8628e-04, 3.9205e-03, 6.9362e-04],
        [2.0821e-03, 3.0925e-03, 4.7119e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0005],
        [0.0014],
        [0.0012],
        [0.0002],
        [0.0016],
        [0.0016],
        [0.0009],
        [0.0008],
        [0.0039],
        [0.0009],
        [0.0003],
        [0.0002],
        [0.0008],
        [0.0003],
        [0.0028]], device='cuda:0')/tensor([[0.0006, 0.0005, 0.0014, 0.0012, 0.0002, 0.0016, 0.0016, 0.0009, 0.0008,
         0.0039, 0.0009, 0.0003, 0.0002, 0.0008, 0.0003, 0.0028]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7068e-03],
        [6.4569e-04],
        [9.1574e-05],
        [8.5867e-04],
        [1.0921e-04],
        [7.5120e-04],
        [1.9928e-03],
        [1.1003e-03],
        [4.8412e-04],
        [4.8213e-03],
        [2.8918e-04],
        [5.2139e-04],
        [6.4780e-04],
        [4.3476e-04],
        [1.3094e-03],
        [6.2802e-03]], device='cuda:0')/tensor([[1.7068e-03, 6.4569e-04, 9.1574e-05, 8.5867e-04, 1.0921e-04, 7.5120e-04,
         1.9928e-03, 1.1003e-03, 4.8412e-04, 4.8213e-03, 2.8918e-04, 5.2139e-04,
         6.4780e-04, 4.3476e-04, 1.3094e-03, 6.2802e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1068e-04],
        [1.6066e-04],
        [7.0243e-04],
        [3.2991e-04],
        [1.4199e-04],
        [4.5391e-05],
        [7.9771e-04],
        [6.3799e-04],
        [3.7554e-04],
        [3.9137e-04],
        [7.8158e-04],
        [5.9907e-05],
        [1.4723e-04],
        [8.7234e-05],
        [3.2285e-04],
        [6.9968e-04]], device='cuda:0')/tensor([[1.1068e-04, 1.6066e-04, 7.0243e-04, 3.2991e-04, 1.4199e-04, 4.5391e-05,
         7.9771e-04, 6.3799e-04, 3.7554e-04, 3.9137e-04, 7.8158e-04, 5.9907e-05,
         1.4723e-04, 8.7234e-05, 3.2285e-04, 6.9968e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.4028e-04, 1.7068e-03, 1.1068e-04],
        [4.5220e-04, 6.4569e-04, 1.6066e-04],
        [1.4057e-03, 9.1574e-05, 7.0243e-04],
        [1.1798e-03, 8.5867e-04, 3.2991e-04],
        [2.3632e-04, 1.0921e-04, 1.4199e-04],
        [1.6187e-03, 7.5120e-04, 4.5391e-05],
        [1.6361e-03, 1.9928e-03, 7.9771e-04],
        [8.8443e-04, 1.1003e-03, 6.3799e-04],
        [7.6109e-04, 4.8412e-04, 3.7554e-04],
        [3.9087e-03, 4.8213e-03, 3.9137e-04],
        [9.4771e-04, 2.8918e-04, 7.8158e-04],
        [2.6762e-04, 5.2139e-04, 5.9907e-05],
        [2.0156e-04, 6.4780e-04, 1.4723e-04],
        [8.1456e-04, 4.3476e-04, 8.7234e-05],
        [3.4915e-04, 1.3094e-03, 3.2285e-04],
        [2.8483e-03, 6.2802e-03, 6.9968e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0019],
        [0.0029],
        [0.0016],
        [0.0011],
        [0.0005],
        [0.0009],
        [0.0031],
        [0.0005],
        [0.0007],
        [0.0002],
        [0.0014],
        [0.0009],
        [0.0011],
        [0.0011],
        [0.0008],
        [0.0014]], device='cuda:0')/tensor([[0.0019, 0.0029, 0.0016, 0.0011, 0.0005, 0.0009, 0.0031, 0.0005, 0.0007,
         0.0002, 0.0014, 0.0009, 0.0011, 0.0011, 0.0008, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4487e-03],
        [3.3301e-03],
        [1.6296e-03],
        [2.8526e-04],
        [3.1904e-04],
        [1.2600e-03],
        [2.6159e-03],
        [9.6567e-05],
        [5.4992e-04],
        [5.9030e-04],
        [2.0900e-03],
        [1.2707e-03],
        [1.8711e-03],
        [3.1493e-04],
        [8.9875e-04],
        [1.8853e-03]], device='cuda:0')/tensor([[2.4487e-03, 3.3301e-03, 1.6296e-03, 2.8526e-04, 3.1904e-04, 1.2600e-03,
         2.6159e-03, 9.6567e-05, 5.4992e-04, 5.9030e-04, 2.0900e-03, 1.2707e-03,
         1.8711e-03, 3.1493e-04, 8.9875e-04, 1.8853e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2566e-04],
        [7.2903e-04],
        [1.8688e-04],
        [1.2215e-03],
        [2.2261e-04],
        [3.6178e-04],
        [1.4525e-04],
        [8.2884e-04],
        [1.2578e-04],
        [4.3084e-04],
        [3.4043e-04],
        [7.5303e-05],
        [1.5055e-03],
        [1.0805e-04],
        [2.0130e-04],
        [4.0853e-04]], device='cuda:0')/tensor([[5.2566e-04, 7.2903e-04, 1.8688e-04, 1.2215e-03, 2.2261e-04, 3.6178e-04,
         1.4525e-04, 8.2884e-04, 1.2578e-04, 4.3084e-04, 3.4043e-04, 7.5303e-05,
         1.5055e-03, 1.0805e-04, 2.0130e-04, 4.0853e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8911e-03, 2.4487e-03, 5.2566e-04],
        [2.8865e-03, 3.3301e-03, 7.2903e-04],
        [1.6285e-03, 1.6296e-03, 1.8688e-04],
        [1.0880e-03, 2.8526e-04, 1.2215e-03],
        [4.6613e-04, 3.1904e-04, 2.2261e-04],
        [9.0290e-04, 1.2600e-03, 3.6178e-04],
        [3.1389e-03, 2.6159e-03, 1.4525e-04],
        [4.5905e-04, 9.6567e-05, 8.2884e-04],
        [7.0466e-04, 5.4992e-04, 1.2578e-04],
        [2.4009e-04, 5.9030e-04, 4.3084e-04],
        [1.3669e-03, 2.0900e-03, 3.4043e-04],
        [9.0344e-04, 1.2707e-03, 7.5303e-05],
        [1.0757e-03, 1.8711e-03, 1.5055e-03],
        [1.0699e-03, 3.1493e-04, 1.0805e-04],
        [7.8966e-04, 8.9875e-04, 2.0130e-04],
        [1.3781e-03, 1.8853e-03, 4.0853e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0017],
        [0.0005],
        [0.0003],
        [0.0037],
        [0.0009],
        [0.0014],
        [0.0009],
        [0.0031],
        [0.0012],
        [0.0022],
        [0.0005],
        [0.0010],
        [0.0009],
        [0.0050],
        [0.0010],
        [0.0014]], device='cuda:0')/tensor([[0.0017, 0.0005, 0.0003, 0.0037, 0.0009, 0.0014, 0.0009, 0.0031, 0.0012,
         0.0022, 0.0005, 0.0010, 0.0009, 0.0050, 0.0010, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0032],
        [0.0004],
        [0.0060],
        [0.0036],
        [0.0006],
        [0.0096],
        [0.0018],
        [0.0016],
        [0.0060],
        [0.0008],
        [0.0008],
        [0.0009],
        [0.0010],
        [0.0019],
        [0.0036],
        [0.0007]], device='cuda:0')/tensor([[0.0032, 0.0004, 0.0060, 0.0036, 0.0006, 0.0096, 0.0018, 0.0016, 0.0060,
         0.0008, 0.0008, 0.0009, 0.0010, 0.0019, 0.0036, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.0861e-04],
        [4.4786e-04],
        [1.5258e-04],
        [2.0948e-04],
        [6.3662e-05],
        [2.1349e-04],
        [1.4411e-03],
        [1.3766e-04],
        [2.9825e-04],
        [8.1701e-05],
        [7.7633e-04],
        [5.5243e-04],
        [1.6488e-04],
        [1.1111e-03],
        [3.7861e-04],
        [2.6107e-04]], device='cuda:0')/tensor([[4.0861e-04, 4.4786e-04, 1.5258e-04, 2.0948e-04, 6.3662e-05, 2.1349e-04,
         1.4411e-03, 1.3766e-04, 2.9825e-04, 8.1701e-05, 7.7633e-04, 5.5243e-04,
         1.6488e-04, 1.1111e-03, 3.7861e-04, 2.6107e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6893e-03, 3.2405e-03, 4.0861e-04],
        [5.0852e-04, 4.3573e-04, 4.4786e-04],
        [3.0335e-04, 6.0315e-03, 1.5258e-04],
        [3.7027e-03, 3.5797e-03, 2.0948e-04],
        [9.2759e-04, 5.8677e-04, 6.3662e-05],
        [1.4440e-03, 9.5713e-03, 2.1349e-04],
        [9.0975e-04, 1.7545e-03, 1.4411e-03],
        [3.0819e-03, 1.5736e-03, 1.3766e-04],
        [1.1828e-03, 5.9897e-03, 2.9825e-04],
        [2.2274e-03, 8.3319e-04, 8.1701e-05],
        [4.8908e-04, 8.0685e-04, 7.7633e-04],
        [1.0216e-03, 9.0014e-04, 5.5243e-04],
        [9.1738e-04, 1.0349e-03, 1.6488e-04],
        [4.9688e-03, 1.8831e-03, 1.1111e-03],
        [1.0047e-03, 3.6026e-03, 3.7861e-04],
        [1.3879e-03, 6.6806e-04, 2.6107e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0004],
        [0.0043],
        [0.0024],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0043, 0.0024, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0008],
        [0.0035],
        [0.0017],
        [0.0001]], device='cuda:0')/tensor([[0.0008, 0.0035, 0.0017, 0.0001]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0003],
        [0.0008],
        [0.0008],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0008, 0.0008, 0.0003]], device='cuda:0'), torch.Size([1, 4])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[0.0004, 0.0008, 0.0003],
        [0.0043, 0.0035, 0.0008],
        [0.0024, 0.0017, 0.0008],
        [0.0005, 0.0001, 0.0003]], device='cuda:0')
acc:  0.30303030303030304
Time taken to execute the de NLI task with prompt type modal, variation 4 and batchsize 16: 0:01:01.770534
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI modal 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 372.19it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0013],
        [0.0012],
        [0.0031],
        [0.0009],
        [0.0019],
        [0.0002],
        [0.0016],
        [0.0010],
        [0.0003],
        [0.0007],
        [0.0018],
        [0.0015],
        [0.0004],
        [0.0007],
        [0.0001]], device='cuda:0')/tensor([[0.0018, 0.0013, 0.0012, 0.0031, 0.0009, 0.0019, 0.0002, 0.0016, 0.0010,
         0.0003, 0.0007, 0.0018, 0.0015, 0.0004, 0.0007, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5002e-03],
        [6.9956e-04],
        [5.6633e-04],
        [6.1874e-03],
        [2.3617e-04],
        [1.4161e-03],
        [2.0223e-05],
        [1.0466e-03],
        [1.7507e-03],
        [2.0798e-04],
        [4.3298e-03],
        [1.0742e-03],
        [1.2425e-03],
        [4.7436e-04],
        [2.0128e-04],
        [1.9390e-05]], device='cuda:0')/tensor([[1.5002e-03, 6.9956e-04, 5.6633e-04, 6.1874e-03, 2.3617e-04, 1.4161e-03,
         2.0223e-05, 1.0466e-03, 1.7507e-03, 2.0798e-04, 4.3298e-03, 1.0742e-03,
         1.2425e-03, 4.7436e-04, 2.0128e-04, 1.9390e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4772e-04],
        [4.1261e-04],
        [3.9639e-05],
        [3.6538e-04],
        [1.4232e-03],
        [8.5996e-05],
        [1.4921e-04],
        [2.6263e-04],
        [1.3384e-04],
        [3.6612e-04],
        [6.0304e-05],
        [1.1313e-03],
        [3.3515e-04],
        [1.6902e-04],
        [2.6407e-04],
        [5.6427e-05]], device='cuda:0')/tensor([[1.4772e-04, 4.1261e-04, 3.9639e-05, 3.6538e-04, 1.4232e-03, 8.5996e-05,
         1.4921e-04, 2.6263e-04, 1.3384e-04, 3.6612e-04, 6.0304e-05, 1.1313e-03,
         3.3515e-04, 1.6902e-04, 2.6407e-04, 5.6427e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8429e-03, 1.5002e-03, 1.4772e-04],
        [1.3254e-03, 6.9956e-04, 4.1261e-04],
        [1.1867e-03, 5.6633e-04, 3.9639e-05],
        [3.1052e-03, 6.1874e-03, 3.6538e-04],
        [9.0169e-04, 2.3617e-04, 1.4232e-03],
        [1.8835e-03, 1.4161e-03, 8.5996e-05],
        [1.5540e-04, 2.0223e-05, 1.4921e-04],
        [1.5622e-03, 1.0466e-03, 2.6263e-04],
        [1.0101e-03, 1.7507e-03, 1.3384e-04],
        [2.7625e-04, 2.0798e-04, 3.6612e-04],
        [6.9949e-04, 4.3298e-03, 6.0304e-05],
        [1.8428e-03, 1.0742e-03, 1.1313e-03],
        [1.4698e-03, 1.2425e-03, 3.3515e-04],
        [3.8000e-04, 4.7436e-04, 1.6902e-04],
        [6.5935e-04, 2.0128e-04, 2.6407e-04],
        [1.0146e-04, 1.9390e-05, 5.6427e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0019],
        [0.0025],
        [0.0003],
        [0.0025],
        [0.0014],
        [0.0008],
        [0.0011],
        [0.0018],
        [0.0004],
        [0.0004],
        [0.0019],
        [0.0010],
        [0.0005],
        [0.0010],
        [0.0010]], device='cuda:0')/tensor([[0.0011, 0.0019, 0.0025, 0.0003, 0.0025, 0.0014, 0.0008, 0.0011, 0.0018,
         0.0004, 0.0004, 0.0019, 0.0010, 0.0005, 0.0010, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0019],
        [0.0009],
        [0.0010],
        [0.0020],
        [0.0015],
        [0.0016],
        [0.0006],
        [0.0044],
        [0.0010],
        [0.0060],
        [0.0004],
        [0.0005],
        [0.0005],
        [0.0017],
        [0.0027],
        [0.0011]], device='cuda:0')/tensor([[0.0019, 0.0009, 0.0010, 0.0020, 0.0015, 0.0016, 0.0006, 0.0044, 0.0010,
         0.0060, 0.0004, 0.0005, 0.0005, 0.0017, 0.0027, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2349e-04],
        [2.9568e-03],
        [2.3092e-04],
        [3.1552e-04],
        [1.2359e-04],
        [2.0774e-04],
        [2.3442e-04],
        [3.2475e-04],
        [1.2022e-04],
        [3.0483e-04],
        [1.6842e-04],
        [3.7791e-04],
        [9.3798e-05],
        [7.6229e-04],
        [7.7528e-04],
        [9.8072e-04]], device='cuda:0')/tensor([[3.2349e-04, 2.9568e-03, 2.3092e-04, 3.1552e-04, 1.2359e-04, 2.0774e-04,
         2.3442e-04, 3.2475e-04, 1.2022e-04, 3.0483e-04, 1.6842e-04, 3.7791e-04,
         9.3798e-05, 7.6229e-04, 7.7528e-04, 9.8072e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1048e-03, 1.8636e-03, 3.2349e-04],
        [1.8723e-03, 8.8389e-04, 2.9568e-03],
        [2.5007e-03, 9.9199e-04, 2.3092e-04],
        [3.2792e-04, 2.0460e-03, 3.1552e-04],
        [2.5492e-03, 1.4511e-03, 1.2359e-04],
        [1.4053e-03, 1.5731e-03, 2.0774e-04],
        [7.9972e-04, 6.3575e-04, 2.3442e-04],
        [1.1088e-03, 4.4417e-03, 3.2475e-04],
        [1.8348e-03, 9.5770e-04, 1.2022e-04],
        [3.5432e-04, 5.9921e-03, 3.0483e-04],
        [3.8115e-04, 3.7713e-04, 1.6842e-04],
        [1.9472e-03, 4.9512e-04, 3.7791e-04],
        [9.8681e-04, 5.0581e-04, 9.3798e-05],
        [4.8639e-04, 1.7184e-03, 7.6229e-04],
        [1.0477e-03, 2.6809e-03, 7.7528e-04],
        [1.0117e-03, 1.1032e-03, 9.8072e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0020],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0028],
        [0.0012],
        [0.0006],
        [0.0041],
        [0.0025],
        [0.0007],
        [0.0009],
        [0.0024]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0020, 0.0007, 0.0007, 0.0003, 0.0003, 0.0006, 0.0028,
         0.0012, 0.0006, 0.0041, 0.0025, 0.0007, 0.0009, 0.0024]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0005],
        [0.0026],
        [0.0008],
        [0.0009],
        [0.0002],
        [0.0003],
        [0.0014],
        [0.0017],
        [0.0017],
        [0.0007],
        [0.0016],
        [0.0017],
        [0.0009],
        [0.0003],
        [0.0010]], device='cuda:0')/tensor([[0.0018, 0.0005, 0.0026, 0.0008, 0.0009, 0.0002, 0.0003, 0.0014, 0.0017,
         0.0017, 0.0007, 0.0016, 0.0017, 0.0009, 0.0003, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3322e-04],
        [6.1270e-04],
        [7.2105e-04],
        [2.6165e-04],
        [3.9761e-04],
        [1.1775e-04],
        [1.0124e-04],
        [1.0727e-04],
        [3.2032e-04],
        [4.2288e-04],
        [3.8992e-04],
        [4.5608e-04],
        [7.8817e-04],
        [4.2560e-04],
        [6.8074e-05],
        [3.2980e-04]], device='cuda:0')/tensor([[3.3322e-04, 6.1270e-04, 7.2105e-04, 2.6165e-04, 3.9761e-04, 1.1775e-04,
         1.0124e-04, 1.0727e-04, 3.2032e-04, 4.2288e-04, 3.8992e-04, 4.5608e-04,
         7.8817e-04, 4.2560e-04, 6.8074e-05, 3.2980e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.5919e-04, 1.7624e-03, 3.3322e-04],
        [2.4076e-04, 4.7944e-04, 6.1270e-04],
        [2.0290e-03, 2.5724e-03, 7.2105e-04],
        [7.0099e-04, 8.1634e-04, 2.6165e-04],
        [6.6450e-04, 9.4483e-04, 3.9761e-04],
        [2.5860e-04, 1.7711e-04, 1.1775e-04],
        [3.0798e-04, 2.5515e-04, 1.0124e-04],
        [6.0305e-04, 1.3881e-03, 1.0727e-04],
        [2.7869e-03, 1.7384e-03, 3.2032e-04],
        [1.1983e-03, 1.7306e-03, 4.2288e-04],
        [6.0366e-04, 6.6193e-04, 3.8992e-04],
        [4.0825e-03, 1.5669e-03, 4.5608e-04],
        [2.4735e-03, 1.6759e-03, 7.8817e-04],
        [7.1432e-04, 9.3869e-04, 4.2560e-04],
        [8.8460e-04, 2.6490e-04, 6.8074e-05],
        [2.4434e-03, 1.0444e-03, 3.2980e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.3665e-04],
        [8.6975e-04],
        [1.3686e-04],
        [7.8721e-04],
        [8.2355e-04],
        [7.0223e-04],
        [4.5844e-04],
        [8.0480e-04],
        [1.1443e-03],
        [1.1935e-03],
        [8.6567e-04],
        [2.9844e-05],
        [1.6934e-03],
        [1.4424e-03],
        [7.1724e-04],
        [4.9906e-04]], device='cuda:0')/tensor([[3.3665e-04, 8.6975e-04, 1.3686e-04, 7.8721e-04, 8.2355e-04, 7.0223e-04,
         4.5844e-04, 8.0480e-04, 1.1443e-03, 1.1935e-03, 8.6567e-04, 2.9844e-05,
         1.6934e-03, 1.4424e-03, 7.1724e-04, 4.9906e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.7018e-04],
        [2.1265e-03],
        [4.2988e-05],
        [6.0343e-04],
        [1.4980e-04],
        [2.4581e-03],
        [7.7867e-04],
        [6.5259e-04],
        [5.0505e-04],
        [2.3100e-03],
        [1.7739e-03],
        [3.6167e-04],
        [2.0554e-03],
        [1.9110e-04],
        [1.0058e-03],
        [1.0005e-03]], device='cuda:0')/tensor([[3.7018e-04, 2.1265e-03, 4.2988e-05, 6.0343e-04, 1.4980e-04, 2.4581e-03,
         7.7867e-04, 6.5259e-04, 5.0505e-04, 2.3100e-03, 1.7739e-03, 3.6167e-04,
         2.0554e-03, 1.9110e-04, 1.0058e-03, 1.0005e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.6756e-04],
        [1.9639e-03],
        [7.2692e-05],
        [2.2128e-04],
        [1.9807e-03],
        [3.8139e-04],
        [4.8656e-04],
        [7.9615e-05],
        [7.0954e-05],
        [5.5231e-04],
        [5.0223e-04],
        [2.1042e-04],
        [6.4886e-04],
        [1.5874e-03],
        [1.5954e-03],
        [7.1400e-04]], device='cuda:0')/tensor([[1.6756e-04, 1.9639e-03, 7.2692e-05, 2.2128e-04, 1.9807e-03, 3.8139e-04,
         4.8656e-04, 7.9615e-05, 7.0954e-05, 5.5231e-04, 5.0223e-04, 2.1042e-04,
         6.4886e-04, 1.5874e-03, 1.5954e-03, 7.1400e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3665e-04, 3.7018e-04, 1.6756e-04],
        [8.6975e-04, 2.1265e-03, 1.9639e-03],
        [1.3686e-04, 4.2988e-05, 7.2692e-05],
        [7.8721e-04, 6.0343e-04, 2.2128e-04],
        [8.2355e-04, 1.4980e-04, 1.9807e-03],
        [7.0223e-04, 2.4581e-03, 3.8139e-04],
        [4.5844e-04, 7.7867e-04, 4.8656e-04],
        [8.0480e-04, 6.5259e-04, 7.9615e-05],
        [1.1443e-03, 5.0505e-04, 7.0954e-05],
        [1.1935e-03, 2.3100e-03, 5.5231e-04],
        [8.6567e-04, 1.7739e-03, 5.0223e-04],
        [2.9844e-05, 3.6167e-04, 2.1042e-04],
        [1.6934e-03, 2.0554e-03, 6.4886e-04],
        [1.4424e-03, 1.9110e-04, 1.5874e-03],
        [7.1724e-04, 1.0058e-03, 1.5954e-03],
        [4.9906e-04, 1.0005e-03, 7.1400e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0024],
        [0.0013],
        [0.0009],
        [0.0028],
        [0.0011],
        [0.0035],
        [0.0005],
        [0.0005],
        [0.0012],
        [0.0013],
        [0.0009],
        [0.0013],
        [0.0004],
        [0.0014],
        [0.0002],
        [0.0009]], device='cuda:0')/tensor([[0.0024, 0.0013, 0.0009, 0.0028, 0.0011, 0.0035, 0.0005, 0.0005, 0.0012,
         0.0013, 0.0009, 0.0013, 0.0004, 0.0014, 0.0002, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0047],
        [0.0007],
        [0.0009],
        [0.0037],
        [0.0004],
        [0.0024],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0002],
        [0.0011],
        [0.0010],
        [0.0002],
        [0.0088],
        [0.0012],
        [0.0009]], device='cuda:0')/tensor([[0.0047, 0.0007, 0.0009, 0.0037, 0.0004, 0.0024, 0.0005, 0.0005, 0.0006,
         0.0002, 0.0011, 0.0010, 0.0002, 0.0088, 0.0012, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.8857e-04],
        [5.4404e-05],
        [3.1517e-04],
        [7.3073e-04],
        [1.2097e-03],
        [3.6910e-04],
        [1.7095e-04],
        [1.4094e-04],
        [6.5837e-04],
        [1.5331e-03],
        [5.6782e-04],
        [1.4233e-03],
        [3.8521e-04],
        [3.3152e-04],
        [2.4579e-04],
        [1.0592e-03]], device='cuda:0')/tensor([[7.8857e-04, 5.4404e-05, 3.1517e-04, 7.3073e-04, 1.2097e-03, 3.6910e-04,
         1.7095e-04, 1.4094e-04, 6.5837e-04, 1.5331e-03, 5.6782e-04, 1.4233e-03,
         3.8521e-04, 3.3152e-04, 2.4579e-04, 1.0592e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4033e-03, 4.6604e-03, 7.8857e-04],
        [1.3024e-03, 7.4382e-04, 5.4404e-05],
        [9.1169e-04, 9.1812e-04, 3.1517e-04],
        [2.8090e-03, 3.7151e-03, 7.3073e-04],
        [1.0612e-03, 3.7807e-04, 1.2097e-03],
        [3.5265e-03, 2.3641e-03, 3.6910e-04],
        [4.9788e-04, 4.9705e-04, 1.7095e-04],
        [5.4052e-04, 4.7846e-04, 1.4094e-04],
        [1.2496e-03, 6.1071e-04, 6.5837e-04],
        [1.2705e-03, 2.4364e-04, 1.5331e-03],
        [8.8122e-04, 1.0605e-03, 5.6782e-04],
        [1.3431e-03, 1.0469e-03, 1.4233e-03],
        [4.0774e-04, 2.3311e-04, 3.8521e-04],
        [1.4118e-03, 8.7503e-03, 3.3152e-04],
        [2.2660e-04, 1.1915e-03, 2.4579e-04],
        [9.3752e-04, 8.8586e-04, 1.0592e-03]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.7742e-04],
        [1.8736e-04],
        [8.0527e-04],
        [1.3387e-03],
        [5.3765e-04],
        [4.9533e-04],
        [1.1917e-03],
        [3.8661e-04],
        [8.5842e-04],
        [6.6235e-04],
        [8.9930e-04],
        [6.4038e-05],
        [1.5067e-03],
        [4.4210e-04],
        [4.2475e-04],
        [1.0139e-03]], device='cuda:0')/tensor([[3.7742e-04, 1.8736e-04, 8.0527e-04, 1.3387e-03, 5.3765e-04, 4.9533e-04,
         1.1917e-03, 3.8661e-04, 8.5842e-04, 6.6235e-04, 8.9930e-04, 6.4038e-05,
         1.5067e-03, 4.4210e-04, 4.2475e-04, 1.0139e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1714e-03],
        [1.1209e-04],
        [3.4976e-04],
        [2.2461e-03],
        [4.4918e-04],
        [2.3470e-04],
        [5.1548e-04],
        [1.8093e-03],
        [1.2442e-04],
        [1.3323e-03],
        [2.0057e-03],
        [7.0836e-04],
        [1.4509e-03],
        [1.5812e-04],
        [5.1116e-05],
        [1.1424e-03]], device='cuda:0')/tensor([[1.1714e-03, 1.1209e-04, 3.4976e-04, 2.2461e-03, 4.4918e-04, 2.3470e-04,
         5.1548e-04, 1.8093e-03, 1.2442e-04, 1.3323e-03, 2.0057e-03, 7.0836e-04,
         1.4509e-03, 1.5812e-04, 5.1116e-05, 1.1424e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.6404e-04],
        [1.6548e-04],
        [6.2052e-04],
        [4.3798e-04],
        [5.1027e-05],
        [1.7965e-04],
        [1.4317e-04],
        [7.6805e-05],
        [6.6915e-04],
        [1.3014e-04],
        [6.3331e-04],
        [1.7436e-04],
        [4.9949e-04],
        [3.9890e-04],
        [1.2414e-03],
        [8.0933e-04]], device='cuda:0')/tensor([[1.6404e-04, 1.6548e-04, 6.2052e-04, 4.3798e-04, 5.1027e-05, 1.7965e-04,
         1.4317e-04, 7.6805e-05, 6.6915e-04, 1.3014e-04, 6.3331e-04, 1.7436e-04,
         4.9949e-04, 3.9890e-04, 1.2414e-03, 8.0933e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7742e-04, 1.1714e-03, 1.6404e-04],
        [1.8736e-04, 1.1209e-04, 1.6548e-04],
        [8.0527e-04, 3.4976e-04, 6.2052e-04],
        [1.3387e-03, 2.2461e-03, 4.3798e-04],
        [5.3765e-04, 4.4918e-04, 5.1027e-05],
        [4.9533e-04, 2.3470e-04, 1.7965e-04],
        [1.1917e-03, 5.1548e-04, 1.4317e-04],
        [3.8661e-04, 1.8093e-03, 7.6805e-05],
        [8.5842e-04, 1.2442e-04, 6.6915e-04],
        [6.6235e-04, 1.3323e-03, 1.3014e-04],
        [8.9930e-04, 2.0057e-03, 6.3331e-04],
        [6.4038e-05, 7.0836e-04, 1.7436e-04],
        [1.5067e-03, 1.4509e-03, 4.9949e-04],
        [4.4210e-04, 1.5812e-04, 3.9890e-04],
        [4.2475e-04, 5.1116e-05, 1.2414e-03],
        [1.0139e-03, 1.1424e-03, 8.0933e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0015],
        [0.0001],
        [0.0015],
        [0.0006],
        [0.0097],
        [0.0026],
        [0.0009],
        [0.0011],
        [0.0018],
        [0.0006],
        [0.0008],
        [0.0019],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0015, 0.0001, 0.0015, 0.0006, 0.0097, 0.0026, 0.0009,
         0.0011, 0.0018, 0.0006, 0.0008, 0.0019, 0.0007, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2094e-04],
        [4.0581e-04],
        [7.0779e-03],
        [9.9017e-04],
        [1.4107e-03],
        [1.4910e-03],
        [4.2478e-03],
        [1.3748e-03],
        [4.3307e-04],
        [1.7848e-03],
        [1.2228e-03],
        [2.2927e-04],
        [6.7381e-04],
        [6.3829e-03],
        [7.0249e-04],
        [7.6128e-05]], device='cuda:0')/tensor([[3.2094e-04, 4.0581e-04, 7.0779e-03, 9.9017e-04, 1.4107e-03, 1.4910e-03,
         4.2478e-03, 1.3748e-03, 4.3307e-04, 1.7848e-03, 1.2228e-03, 2.2927e-04,
         6.7381e-04, 6.3829e-03, 7.0249e-04, 7.6128e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[0.0003],
        [0.0009],
        [0.0176],
        [0.0001],
        [0.0003],
        [0.0013],
        [0.0010],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0001],
        [0.0004],
        [0.0009],
        [0.0040],
        [0.0005]], device='cuda:0')/tensor([[0.0003, 0.0009, 0.0176, 0.0001, 0.0003, 0.0013, 0.0010, 0.0005, 0.0002,
         0.0003, 0.0002, 0.0001, 0.0004, 0.0009, 0.0040, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0027e-04, 3.2094e-04, 2.5844e-04],
        [4.4163e-04, 4.0581e-04, 9.1509e-04],
        [1.5455e-03, 7.0779e-03, 1.7594e-02],
        [1.3005e-04, 9.9017e-04, 1.4288e-04],
        [1.5407e-03, 1.4107e-03, 3.2552e-04],
        [6.3447e-04, 1.4910e-03, 1.2636e-03],
        [9.6567e-03, 4.2478e-03, 1.0293e-03],
        [2.5730e-03, 1.3748e-03, 5.4387e-04],
        [8.5617e-04, 4.3307e-04, 1.6043e-04],
        [1.0785e-03, 1.7848e-03, 3.2055e-04],
        [1.7965e-03, 1.2228e-03, 2.2400e-04],
        [6.4424e-04, 2.2927e-04, 1.4829e-04],
        [7.5912e-04, 6.7381e-04, 3.7248e-04],
        [1.9224e-03, 6.3829e-03, 9.2241e-04],
        [6.7642e-04, 7.0249e-04, 4.0046e-03],
        [4.9240e-04, 7.6128e-05, 5.4409e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0010],
        [0.0009],
        [0.0007],
        [0.0015],
        [0.0010],
        [0.0018],
        [0.0002],
        [0.0004],
        [0.0012],
        [0.0017],
        [0.0002],
        [0.0015],
        [0.0010],
        [0.0011],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0009, 0.0007, 0.0015, 0.0010, 0.0018, 0.0002, 0.0004,
         0.0012, 0.0017, 0.0002, 0.0015, 0.0010, 0.0011, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.7592e-04],
        [2.6074e-03],
        [3.1064e-04],
        [1.6403e-03],
        [1.0088e-03],
        [1.6121e-03],
        [3.1883e-03],
        [6.3258e-05],
        [2.6651e-04],
        [6.0966e-04],
        [2.4960e-03],
        [7.0629e-04],
        [1.1969e-03],
        [2.1118e-04],
        [1.2986e-03],
        [4.5691e-04]], device='cuda:0')/tensor([[8.7592e-04, 2.6074e-03, 3.1064e-04, 1.6403e-03, 1.0088e-03, 1.6121e-03,
         3.1883e-03, 6.3258e-05, 2.6651e-04, 6.0966e-04, 2.4960e-03, 7.0629e-04,
         1.1969e-03, 2.1118e-04, 1.2986e-03, 4.5691e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.0666e-04],
        [1.1699e-04],
        [1.2150e-04],
        [2.5749e-04],
        [8.4753e-04],
        [1.9664e-04],
        [2.4317e-03],
        [8.7862e-04],
        [5.0194e-04],
        [5.3189e-04],
        [4.3768e-04],
        [1.8405e-04],
        [7.6744e-05],
        [4.5289e-04],
        [5.4452e-04],
        [3.4168e-04]], device='cuda:0')/tensor([[6.0666e-04, 1.1699e-04, 1.2150e-04, 2.5749e-04, 8.4753e-04, 1.9664e-04,
         2.4317e-03, 8.7862e-04, 5.0194e-04, 5.3189e-04, 4.3768e-04, 1.8405e-04,
         7.6744e-05, 4.5289e-04, 5.4452e-04, 3.4168e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5218e-04, 8.7592e-04, 6.0666e-04],
        [9.7745e-04, 2.6074e-03, 1.1699e-04],
        [8.6781e-04, 3.1064e-04, 1.2150e-04],
        [7.3878e-04, 1.6403e-03, 2.5749e-04],
        [1.5094e-03, 1.0088e-03, 8.4753e-04],
        [1.0309e-03, 1.6121e-03, 1.9664e-04],
        [1.8005e-03, 3.1883e-03, 2.4317e-03],
        [2.4867e-04, 6.3258e-05, 8.7862e-04],
        [3.8841e-04, 2.6651e-04, 5.0194e-04],
        [1.1945e-03, 6.0966e-04, 5.3189e-04],
        [1.6909e-03, 2.4960e-03, 4.3768e-04],
        [2.0051e-04, 7.0629e-04, 1.8405e-04],
        [1.4978e-03, 1.1969e-03, 7.6744e-05],
        [1.0114e-03, 2.1118e-04, 4.5289e-04],
        [1.1350e-03, 1.2986e-03, 5.4452e-04],
        [3.4111e-04, 4.5691e-04, 3.4168e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[0.0013],
        [0.0006],
        [0.0051],
        [0.0004]], device='cuda:0')/tensor([[0.0013, 0.0006, 0.0051, 0.0004]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0001],
        [0.0003],
        [0.0001],
        [0.0007]], device='cuda:0')/tensor([[0.0001, 0.0003, 0.0001, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0006],
        [0.0003],
        [0.0007],
        [0.0001]], device='cuda:0')/tensor([[0.0006, 0.0003, 0.0007, 0.0001]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0013, 0.0001, 0.0006],
        [0.0006, 0.0003, 0.0003],
        [0.0051, 0.0001, 0.0007],
        [0.0004, 0.0007, 0.0001]], device='cuda:0')
acc:  0.3333333333333333
Time taken to execute the de NLI task with prompt type modal, variation 5 and batchsize 16: 0:01:01.929488
path ['42', 'de', 'flan', 'NLI', 'modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI common 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 374.94it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0011],
        [0.0007],
        [0.0003],
        [0.0015],
        [0.0004],
        [0.0006],
        [0.0010],
        [0.0006],
        [0.0016],
        [0.0011],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0002, 0.0004, 0.0011, 0.0007, 0.0003, 0.0015, 0.0004,
         0.0006, 0.0010, 0.0006, 0.0016, 0.0011, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0035],
        [0.0008],
        [0.0009],
        [0.0009],
        [0.0031],
        [0.0082],
        [0.0014],
        [0.0120],
        [0.0016],
        [0.0065],
        [0.0020],
        [0.0044],
        [0.0027],
        [0.0019],
        [0.0016],
        [0.0011]], device='cuda:0')/tensor([[0.0035, 0.0008, 0.0009, 0.0009, 0.0031, 0.0082, 0.0014, 0.0120, 0.0016,
         0.0065, 0.0020, 0.0044, 0.0027, 0.0019, 0.0016, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8002e-04],
        [1.0940e-04],
        [4.2197e-04],
        [2.8886e-04],
        [1.0937e-04],
        [4.4990e-05],
        [1.5502e-04],
        [1.4909e-04],
        [1.3349e-04],
        [1.4747e-04],
        [1.3302e-04],
        [2.4081e-04],
        [1.9700e-04],
        [1.4073e-04],
        [7.1142e-05],
        [1.9557e-04]], device='cuda:0')/tensor([[4.8002e-04, 1.0940e-04, 4.2197e-04, 2.8886e-04, 1.0937e-04, 4.4990e-05,
         1.5502e-04, 1.4909e-04, 1.3349e-04, 1.4747e-04, 1.3302e-04, 2.4081e-04,
         1.9700e-04, 1.4073e-04, 7.1142e-05, 1.9557e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.9523e-04, 3.5110e-03, 4.8002e-04],
        [1.7352e-04, 8.4412e-04, 1.0940e-04],
        [2.3050e-04, 9.1909e-04, 4.2197e-04],
        [3.6085e-04, 8.5925e-04, 2.8886e-04],
        [1.1308e-03, 3.0832e-03, 1.0937e-04],
        [6.6803e-04, 8.1705e-03, 4.4990e-05],
        [2.8132e-04, 1.4454e-03, 1.5502e-04],
        [1.4729e-03, 1.1953e-02, 1.4909e-04],
        [3.8885e-04, 1.6124e-03, 1.3349e-04],
        [6.4731e-04, 6.5485e-03, 1.4747e-04],
        [9.6204e-04, 2.0070e-03, 1.3302e-04],
        [6.4349e-04, 4.4453e-03, 2.4081e-04],
        [1.6335e-03, 2.7291e-03, 1.9700e-04],
        [1.1228e-03, 1.8687e-03, 1.4073e-04],
        [1.8348e-04, 1.5689e-03, 7.1142e-05],
        [5.6443e-04, 1.1078e-03, 1.9557e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.0352e-05],
        [3.1962e-04],
        [6.9762e-04],
        [3.3594e-04],
        [3.9391e-04],
        [4.1946e-04],
        [3.0491e-04],
        [1.9623e-04],
        [5.0203e-04],
        [1.5804e-04],
        [3.6134e-04],
        [2.5126e-04],
        [1.1672e-04],
        [7.1860e-04],
        [7.7123e-05],
        [5.4858e-04]], device='cuda:0')/tensor([[8.0352e-05, 3.1962e-04, 6.9762e-04, 3.3594e-04, 3.9391e-04, 4.1946e-04,
         3.0491e-04, 1.9623e-04, 5.0203e-04, 1.5804e-04, 3.6134e-04, 2.5126e-04,
         1.1672e-04, 7.1860e-04, 7.7123e-05, 5.4858e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2570e-04],
        [1.2494e-04],
        [1.3173e-03],
        [7.9099e-04],
        [1.0163e-03],
        [4.4475e-04],
        [1.1025e-03],
        [7.8746e-04],
        [1.6879e-03],
        [3.1589e-04],
        [6.8545e-04],
        [7.5251e-04],
        [6.6875e-05],
        [3.4959e-03],
        [1.9121e-04],
        [1.4039e-03]], device='cuda:0')/tensor([[3.2570e-04, 1.2494e-04, 1.3173e-03, 7.9099e-04, 1.0163e-03, 4.4475e-04,
         1.1025e-03, 7.8746e-04, 1.6879e-03, 3.1589e-04, 6.8545e-04, 7.5251e-04,
         6.6875e-05, 3.4959e-03, 1.9121e-04, 1.4039e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5607e-04],
        [2.2825e-04],
        [2.0032e-04],
        [1.3251e-04],
        [6.2754e-04],
        [1.3488e-04],
        [4.7876e-05],
        [7.0641e-05],
        [1.6989e-04],
        [2.5843e-04],
        [1.6924e-04],
        [1.2601e-04],
        [1.9500e-04],
        [1.9375e-04],
        [5.4538e-05],
        [6.1759e-05]], device='cuda:0')/tensor([[1.5607e-04, 2.2825e-04, 2.0032e-04, 1.3251e-04, 6.2754e-04, 1.3488e-04,
         4.7876e-05, 7.0641e-05, 1.6989e-04, 2.5843e-04, 1.6924e-04, 1.2601e-04,
         1.9500e-04, 1.9375e-04, 5.4538e-05, 6.1759e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.0352e-05, 3.2570e-04, 1.5607e-04],
        [3.1962e-04, 1.2494e-04, 2.2825e-04],
        [6.9762e-04, 1.3173e-03, 2.0032e-04],
        [3.3594e-04, 7.9099e-04, 1.3251e-04],
        [3.9391e-04, 1.0163e-03, 6.2754e-04],
        [4.1946e-04, 4.4475e-04, 1.3488e-04],
        [3.0491e-04, 1.1025e-03, 4.7876e-05],
        [1.9623e-04, 7.8746e-04, 7.0641e-05],
        [5.0203e-04, 1.6879e-03, 1.6989e-04],
        [1.5804e-04, 3.1589e-04, 2.5843e-04],
        [3.6134e-04, 6.8545e-04, 1.6924e-04],
        [2.5126e-04, 7.5251e-04, 1.2601e-04],
        [1.1672e-04, 6.6875e-05, 1.9500e-04],
        [7.1860e-04, 3.4959e-03, 1.9375e-04],
        [7.7123e-05, 1.9121e-04, 5.4538e-05],
        [5.4858e-04, 1.4039e-03, 6.1759e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0003],
        [0.0001],
        [0.0002],
        [0.0008],
        [0.0008],
        [0.0017],
        [0.0009],
        [0.0001],
        [0.0012],
        [0.0006],
        [0.0007],
        [0.0004],
        [0.0009],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0005, 0.0003, 0.0001, 0.0002, 0.0008, 0.0008, 0.0017, 0.0009, 0.0001,
         0.0012, 0.0006, 0.0007, 0.0004, 0.0009, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0041],
        [0.0023],
        [0.0009],
        [0.0004],
        [0.0041],
        [0.0050],
        [0.0096],
        [0.0029],
        [0.0010],
        [0.0047],
        [0.0046],
        [0.0031],
        [0.0028],
        [0.0138],
        [0.0011],
        [0.0071]], device='cuda:0')/tensor([[0.0041, 0.0023, 0.0009, 0.0004, 0.0041, 0.0050, 0.0096, 0.0029, 0.0010,
         0.0047, 0.0046, 0.0031, 0.0028, 0.0138, 0.0011, 0.0071]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.4261e-05],
        [7.7045e-05],
        [4.1981e-04],
        [4.9549e-05],
        [1.1740e-04],
        [2.6186e-04],
        [2.2099e-04],
        [2.0431e-04],
        [2.6373e-05],
        [4.6255e-05],
        [5.7839e-05],
        [5.3094e-05],
        [9.6659e-05],
        [6.9561e-05],
        [1.7287e-04],
        [1.5526e-04]], device='cuda:0')/tensor([[4.4261e-05, 7.7045e-05, 4.1981e-04, 4.9549e-05, 1.1740e-04, 2.6186e-04,
         2.2099e-04, 2.0431e-04, 2.6373e-05, 4.6255e-05, 5.7839e-05, 5.3094e-05,
         9.6659e-05, 6.9561e-05, 1.7287e-04, 1.5526e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.6458e-04, 4.1495e-03, 4.4261e-05],
        [2.7529e-04, 2.3469e-03, 7.7045e-05],
        [1.2059e-04, 9.1886e-04, 4.1981e-04],
        [1.6570e-04, 4.3398e-04, 4.9549e-05],
        [7.6150e-04, 4.1489e-03, 1.1740e-04],
        [7.8247e-04, 5.0240e-03, 2.6186e-04],
        [1.7458e-03, 9.5576e-03, 2.2099e-04],
        [8.7592e-04, 2.9251e-03, 2.0431e-04],
        [1.4712e-04, 9.8249e-04, 2.6373e-05],
        [1.1723e-03, 4.6594e-03, 4.6255e-05],
        [5.7464e-04, 4.6310e-03, 5.7839e-05],
        [6.6185e-04, 3.1450e-03, 5.3094e-05],
        [4.1315e-04, 2.8200e-03, 9.6659e-05],
        [9.4096e-04, 1.3786e-02, 6.9561e-05],
        [2.1635e-04, 1.0937e-03, 1.7287e-04],
        [7.8798e-04, 7.1069e-03, 1.5526e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.4574e-04],
        [1.1599e-04],
        [6.4967e-04],
        [6.0583e-04],
        [4.7514e-04],
        [3.0875e-04],
        [7.8639e-04],
        [3.9228e-04],
        [6.5012e-04],
        [4.8954e-04],
        [1.6648e-04],
        [2.9463e-04],
        [6.5166e-05],
        [7.3936e-04],
        [3.4736e-04],
        [1.7560e-04]], device='cuda:0')/tensor([[4.4574e-04, 1.1599e-04, 6.4967e-04, 6.0583e-04, 4.7514e-04, 3.0875e-04,
         7.8639e-04, 3.9228e-04, 6.5012e-04, 4.8954e-04, 1.6648e-04, 2.9463e-04,
         6.5166e-05, 7.3936e-04, 3.4736e-04, 1.7560e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0001],
        [0.0063],
        [0.0012],
        [0.0018],
        [0.0034],
        [0.0032],
        [0.0012],
        [0.0057],
        [0.0037],
        [0.0003],
        [0.0009],
        [0.0004],
        [0.0026],
        [0.0016],
        [0.0012]], device='cuda:0')/tensor([[0.0018, 0.0001, 0.0063, 0.0012, 0.0018, 0.0034, 0.0032, 0.0012, 0.0057,
         0.0037, 0.0003, 0.0009, 0.0004, 0.0026, 0.0016, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0811e-04],
        [1.0618e-04],
        [1.1198e-04],
        [1.3301e-04],
        [6.2092e-05],
        [1.1325e-04],
        [1.4672e-04],
        [4.2495e-04],
        [1.2037e-04],
        [1.1572e-04],
        [5.0409e-05],
        [1.1937e-04],
        [3.4641e-05],
        [9.5753e-05],
        [1.2836e-04],
        [7.3047e-05]], device='cuda:0')/tensor([[1.0811e-04, 1.0618e-04, 1.1198e-04, 1.3301e-04, 6.2092e-05, 1.1325e-04,
         1.4672e-04, 4.2495e-04, 1.2037e-04, 1.1572e-04, 5.0409e-05, 1.1937e-04,
         3.4641e-05, 9.5753e-05, 1.2836e-04, 7.3047e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4574e-04, 1.7507e-03, 1.0811e-04],
        [1.1599e-04, 1.3048e-04, 1.0618e-04],
        [6.4967e-04, 6.3175e-03, 1.1198e-04],
        [6.0583e-04, 1.1783e-03, 1.3301e-04],
        [4.7514e-04, 1.7726e-03, 6.2092e-05],
        [3.0875e-04, 3.4158e-03, 1.1325e-04],
        [7.8639e-04, 3.2336e-03, 1.4672e-04],
        [3.9228e-04, 1.2076e-03, 4.2495e-04],
        [6.5012e-04, 5.7177e-03, 1.2037e-04],
        [4.8954e-04, 3.7330e-03, 1.1572e-04],
        [1.6648e-04, 3.3276e-04, 5.0409e-05],
        [2.9463e-04, 8.5048e-04, 1.1937e-04],
        [6.5166e-05, 3.6805e-04, 3.4641e-05],
        [7.3936e-04, 2.5958e-03, 9.5753e-05],
        [3.4736e-04, 1.6036e-03, 1.2836e-04],
        [1.7560e-04, 1.2366e-03, 7.3047e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.5068e-04],
        [2.3285e-04],
        [2.6917e-04],
        [5.5636e-04],
        [3.6956e-04],
        [3.5264e-04],
        [8.6953e-05],
        [4.5767e-04],
        [2.9786e-04],
        [7.1051e-04],
        [5.9797e-05],
        [4.0841e-04],
        [3.5168e-03],
        [2.3062e-04],
        [3.8411e-04],
        [8.5734e-04]], device='cuda:0')/tensor([[1.5068e-04, 2.3285e-04, 2.6917e-04, 5.5636e-04, 3.6956e-04, 3.5264e-04,
         8.6953e-05, 4.5767e-04, 2.9786e-04, 7.1051e-04, 5.9797e-05, 4.0841e-04,
         3.5168e-03, 2.3062e-04, 3.8411e-04, 8.5734e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.4632e-04],
        [8.5222e-04],
        [6.2933e-04],
        [2.7607e-03],
        [7.6337e-04],
        [4.5533e-04],
        [1.6241e-03],
        [1.7731e-03],
        [1.0564e-03],
        [2.8352e-03],
        [9.8345e-05],
        [6.2917e-04],
        [9.7829e-03],
        [1.0123e-03],
        [1.2417e-03],
        [3.0297e-03]], device='cuda:0')/tensor([[9.4632e-04, 8.5222e-04, 6.2933e-04, 2.7607e-03, 7.6337e-04, 4.5533e-04,
         1.6241e-03, 1.7731e-03, 1.0564e-03, 2.8352e-03, 9.8345e-05, 6.2917e-04,
         9.7829e-03, 1.0123e-03, 1.2417e-03, 3.0297e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2318e-04],
        [8.2599e-05],
        [7.6371e-05],
        [1.1820e-04],
        [6.7082e-05],
        [2.7647e-04],
        [7.2000e-05],
        [1.6521e-04],
        [2.9671e-05],
        [2.2371e-04],
        [2.6222e-05],
        [6.8844e-05],
        [7.6732e-04],
        [7.0036e-05],
        [7.6338e-05],
        [2.0528e-04]], device='cuda:0')/tensor([[1.2318e-04, 8.2599e-05, 7.6371e-05, 1.1820e-04, 6.7082e-05, 2.7647e-04,
         7.2000e-05, 1.6521e-04, 2.9671e-05, 2.2371e-04, 2.6222e-05, 6.8844e-05,
         7.6732e-04, 7.0036e-05, 7.6338e-05, 2.0528e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5068e-04, 9.4632e-04, 1.2318e-04],
        [2.3285e-04, 8.5222e-04, 8.2599e-05],
        [2.6917e-04, 6.2933e-04, 7.6371e-05],
        [5.5636e-04, 2.7607e-03, 1.1820e-04],
        [3.6956e-04, 7.6337e-04, 6.7082e-05],
        [3.5264e-04, 4.5533e-04, 2.7647e-04],
        [8.6953e-05, 1.6241e-03, 7.2000e-05],
        [4.5767e-04, 1.7731e-03, 1.6521e-04],
        [2.9786e-04, 1.0564e-03, 2.9671e-05],
        [7.1051e-04, 2.8352e-03, 2.2371e-04],
        [5.9797e-05, 9.8345e-05, 2.6222e-05],
        [4.0841e-04, 6.2917e-04, 6.8844e-05],
        [3.5168e-03, 9.7829e-03, 7.6732e-04],
        [2.3062e-04, 1.0123e-03, 7.0036e-05],
        [3.8411e-04, 1.2417e-03, 7.6338e-05],
        [8.5734e-04, 3.0297e-03, 2.0528e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0005],
        [0.0004],
        [0.0004],
        [0.0001],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0006],
        [0.0001],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0004],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0005, 0.0004, 0.0004, 0.0001, 0.0006, 0.0003, 0.0003, 0.0006,
         0.0006, 0.0001, 0.0003, 0.0003, 0.0003, 0.0004, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0008],
        [0.0023],
        [0.0032],
        [0.0005],
        [0.0007],
        [0.0108],
        [0.0018],
        [0.0013],
        [0.0021],
        [0.0027],
        [0.0016],
        [0.0021],
        [0.0019],
        [0.0050],
        [0.0008],
        [0.0006]], device='cuda:0')/tensor([[0.0008, 0.0023, 0.0032, 0.0005, 0.0007, 0.0108, 0.0018, 0.0013, 0.0021,
         0.0027, 0.0016, 0.0021, 0.0019, 0.0050, 0.0008, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.9278e-05],
        [1.8076e-04],
        [2.2381e-04],
        [5.6278e-05],
        [9.3893e-05],
        [9.2258e-04],
        [3.0712e-04],
        [3.3139e-04],
        [1.0010e-04],
        [2.0889e-04],
        [7.9673e-05],
        [3.3001e-04],
        [1.3423e-04],
        [5.8056e-05],
        [1.6198e-04],
        [7.9905e-05]], device='cuda:0')/tensor([[5.9278e-05, 1.8076e-04, 2.2381e-04, 5.6278e-05, 9.3893e-05, 9.2258e-04,
         3.0712e-04, 3.3139e-04, 1.0010e-04, 2.0889e-04, 7.9673e-05, 3.3001e-04,
         1.3423e-04, 5.8056e-05, 1.6198e-04, 7.9905e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2178e-04, 8.3379e-04, 5.9278e-05],
        [5.0167e-04, 2.3193e-03, 1.8076e-04],
        [4.2601e-04, 3.1895e-03, 2.2381e-04],
        [3.8792e-04, 5.2595e-04, 5.6278e-05],
        [1.0174e-04, 7.4088e-04, 9.3893e-05],
        [6.1215e-04, 1.0823e-02, 9.2258e-04],
        [3.4815e-04, 1.8135e-03, 3.0712e-04],
        [3.2234e-04, 1.2555e-03, 3.3139e-04],
        [5.9287e-04, 2.0659e-03, 1.0010e-04],
        [5.9341e-04, 2.7193e-03, 2.0889e-04],
        [1.4712e-04, 1.5634e-03, 7.9673e-05],
        [3.0383e-04, 2.0578e-03, 3.3001e-04],
        [3.1083e-04, 1.9156e-03, 1.3423e-04],
        [3.0168e-04, 5.0043e-03, 5.8056e-05],
        [3.7945e-04, 7.7702e-04, 1.6198e-04],
        [1.2123e-04, 5.5081e-04, 7.9905e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.4605e-04],
        [1.6970e-04],
        [7.0064e-04],
        [8.7536e-04],
        [6.6551e-04],
        [3.7666e-04],
        [8.2138e-04],
        [9.0112e-04],
        [7.0162e-04],
        [4.9637e-04],
        [2.8552e-04],
        [2.8748e-04],
        [2.6573e-04],
        [5.9264e-05],
        [1.4287e-03],
        [3.7959e-04]], device='cuda:0')/tensor([[1.4605e-04, 1.6970e-04, 7.0064e-04, 8.7536e-04, 6.6551e-04, 3.7666e-04,
         8.2138e-04, 9.0112e-04, 7.0162e-04, 4.9637e-04, 2.8552e-04, 2.8748e-04,
         2.6573e-04, 5.9264e-05, 1.4287e-03, 3.7959e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0007],
        [0.0005],
        [0.0022],
        [0.0059],
        [0.0026],
        [0.0010],
        [0.0018],
        [0.0016],
        [0.0022],
        [0.0014],
        [0.0033],
        [0.0021],
        [0.0026],
        [0.0004],
        [0.0023],
        [0.0011]], device='cuda:0')/tensor([[0.0007, 0.0005, 0.0022, 0.0059, 0.0026, 0.0010, 0.0018, 0.0016, 0.0022,
         0.0014, 0.0033, 0.0021, 0.0026, 0.0004, 0.0023, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8079e-05],
        [7.9775e-05],
        [9.5892e-05],
        [9.2415e-05],
        [1.7002e-04],
        [3.2127e-05],
        [4.8838e-05],
        [8.0298e-05],
        [3.6533e-04],
        [9.5577e-05],
        [1.6199e-04],
        [1.0487e-04],
        [1.0263e-04],
        [6.4863e-05],
        [2.3380e-04],
        [2.1204e-04]], device='cuda:0')/tensor([[4.8079e-05, 7.9775e-05, 9.5892e-05, 9.2415e-05, 1.7002e-04, 3.2127e-05,
         4.8838e-05, 8.0298e-05, 3.6533e-04, 9.5577e-05, 1.6199e-04, 1.0487e-04,
         1.0263e-04, 6.4863e-05, 2.3380e-04, 2.1204e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4605e-04, 7.2832e-04, 4.8079e-05],
        [1.6970e-04, 4.5137e-04, 7.9775e-05],
        [7.0064e-04, 2.2085e-03, 9.5892e-05],
        [8.7536e-04, 5.8767e-03, 9.2415e-05],
        [6.6551e-04, 2.6369e-03, 1.7002e-04],
        [3.7666e-04, 1.0178e-03, 3.2127e-05],
        [8.2138e-04, 1.7932e-03, 4.8838e-05],
        [9.0112e-04, 1.6362e-03, 8.0298e-05],
        [7.0162e-04, 2.1590e-03, 3.6533e-04],
        [4.9637e-04, 1.4034e-03, 9.5577e-05],
        [2.8552e-04, 3.2707e-03, 1.6199e-04],
        [2.8748e-04, 2.1135e-03, 1.0487e-04],
        [2.6573e-04, 2.5966e-03, 1.0263e-04],
        [5.9264e-05, 4.2684e-04, 6.4863e-05],
        [1.4287e-03, 2.2576e-03, 2.3380e-04],
        [3.7959e-04, 1.1452e-03, 2.1204e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.2160e-04],
        [7.9273e-04],
        [5.5461e-04],
        [3.4095e-04],
        [9.3871e-05],
        [3.6415e-04],
        [1.6656e-04],
        [5.2051e-04],
        [8.3860e-04],
        [2.3550e-05],
        [2.8658e-04],
        [3.8068e-04],
        [5.0786e-04],
        [3.5888e-04],
        [6.7733e-04],
        [9.6360e-04]], device='cuda:0')/tensor([[5.2160e-04, 7.9273e-04, 5.5461e-04, 3.4095e-04, 9.3871e-05, 3.6415e-04,
         1.6656e-04, 5.2051e-04, 8.3860e-04, 2.3550e-05, 2.8658e-04, 3.8068e-04,
         5.0786e-04, 3.5888e-04, 6.7733e-04, 9.6360e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0018],
        [0.0032],
        [0.0013],
        [0.0011],
        [0.0002],
        [0.0037],
        [0.0018],
        [0.0030],
        [0.0045],
        [0.0004],
        [0.0018],
        [0.0083],
        [0.0006],
        [0.0019],
        [0.0016],
        [0.0069]], device='cuda:0')/tensor([[0.0018, 0.0032, 0.0013, 0.0011, 0.0002, 0.0037, 0.0018, 0.0030, 0.0045,
         0.0004, 0.0018, 0.0083, 0.0006, 0.0019, 0.0016, 0.0069]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3734e-04],
        [2.4607e-04],
        [8.1279e-05],
        [5.9470e-05],
        [6.2453e-05],
        [1.0910e-04],
        [2.8736e-04],
        [1.5593e-04],
        [2.8883e-04],
        [8.9513e-05],
        [4.2483e-04],
        [1.5984e-04],
        [5.1905e-05],
        [1.8636e-04],
        [1.7546e-04],
        [2.1949e-04]], device='cuda:0')/tensor([[1.3734e-04, 2.4607e-04, 8.1279e-05, 5.9470e-05, 6.2453e-05, 1.0910e-04,
         2.8736e-04, 1.5593e-04, 2.8883e-04, 8.9513e-05, 4.2483e-04, 1.5984e-04,
         5.1905e-05, 1.8636e-04, 1.7546e-04, 2.1949e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.2160e-04, 1.7677e-03, 1.3734e-04],
        [7.9273e-04, 3.2432e-03, 2.4607e-04],
        [5.5461e-04, 1.3101e-03, 8.1279e-05],
        [3.4095e-04, 1.0797e-03, 5.9470e-05],
        [9.3871e-05, 2.2506e-04, 6.2453e-05],
        [3.6415e-04, 3.7084e-03, 1.0910e-04],
        [1.6656e-04, 1.8311e-03, 2.8736e-04],
        [5.2051e-04, 3.0238e-03, 1.5593e-04],
        [8.3860e-04, 4.5046e-03, 2.8883e-04],
        [2.3550e-05, 3.6449e-04, 8.9513e-05],
        [2.8658e-04, 1.8435e-03, 4.2483e-04],
        [3.8068e-04, 8.3467e-03, 1.5984e-04],
        [5.0786e-04, 6.0952e-04, 5.1905e-05],
        [3.5888e-04, 1.9256e-03, 1.8636e-04],
        [6.7733e-04, 1.6368e-03, 1.7546e-04],
        [9.6360e-04, 6.8688e-03, 2.1949e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0001],
        [0.0007]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0001, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0024],
        [0.0028],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0024, 0.0028, 0.0006, 0.0013]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[9.9298e-05],
        [6.5215e-05],
        [5.6139e-05],
        [7.1945e-05]], device='cuda:0')/tensor([[9.9298e-05, 6.5215e-05, 5.6139e-05, 7.1945e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[5.2333e-04, 2.3571e-03, 9.9298e-05],
        [5.6298e-04, 2.8457e-03, 6.5215e-05],
        [1.1458e-04, 5.7588e-04, 5.6139e-05],
        [6.5569e-04, 1.3191e-03, 7.1945e-05]], device='cuda:0')
acc:  0.5075757575757576
Time taken to execute the de NLI task with prompt type common, variation 0 and batchsize 16: 0:01:01.669004
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI common 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 370.91it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.7456e-03],
        [8.5220e-04],
        [2.4447e-03],
        [6.4818e-04],
        [1.1071e-03],
        [1.9773e-04],
        [7.0921e-05],
        [1.6079e-03],
        [1.4453e-03],
        [4.9688e-03],
        [9.6458e-04],
        [2.8588e-04],
        [1.2543e-03],
        [1.9483e-03],
        [5.2941e-04],
        [7.9273e-04]], device='cuda:0')/tensor([[2.7456e-03, 8.5220e-04, 2.4447e-03, 6.4818e-04, 1.1071e-03, 1.9773e-04,
         7.0921e-05, 1.6079e-03, 1.4453e-03, 4.9688e-03, 9.6458e-04, 2.8588e-04,
         1.2543e-03, 1.9483e-03, 5.2941e-04, 7.9273e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0632e-03],
        [3.4305e-03],
        [2.1236e-03],
        [9.4761e-04],
        [1.4914e-03],
        [5.1450e-05],
        [1.6727e-04],
        [6.2527e-04],
        [6.5052e-04],
        [6.4275e-05],
        [1.0678e-02],
        [4.1143e-04],
        [1.9745e-03],
        [1.8880e-03],
        [7.2310e-04],
        [1.0334e-03]], device='cuda:0')/tensor([[1.0632e-03, 3.4305e-03, 2.1236e-03, 9.4761e-04, 1.4914e-03, 5.1450e-05,
         1.6727e-04, 6.2527e-04, 6.5052e-04, 6.4275e-05, 1.0678e-02, 4.1143e-04,
         1.9745e-03, 1.8880e-03, 7.2310e-04, 1.0334e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.4922e-04],
        [2.2292e-04],
        [4.7240e-04],
        [4.5776e-05],
        [4.1712e-04],
        [4.4147e-05],
        [4.4239e-05],
        [3.5739e-04],
        [4.8703e-05],
        [1.6979e-04],
        [1.8109e-04],
        [5.1254e-05],
        [7.1009e-04],
        [3.1317e-04],
        [4.7608e-05],
        [1.5978e-04]], device='cuda:0')/tensor([[4.4922e-04, 2.2292e-04, 4.7240e-04, 4.5776e-05, 4.1712e-04, 4.4147e-05,
         4.4239e-05, 3.5739e-04, 4.8703e-05, 1.6979e-04, 1.8109e-04, 5.1254e-05,
         7.1009e-04, 3.1317e-04, 4.7608e-05, 1.5978e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7456e-03, 1.0632e-03, 4.4922e-04],
        [8.5220e-04, 3.4305e-03, 2.2292e-04],
        [2.4447e-03, 2.1236e-03, 4.7240e-04],
        [6.4818e-04, 9.4761e-04, 4.5776e-05],
        [1.1071e-03, 1.4914e-03, 4.1712e-04],
        [1.9773e-04, 5.1450e-05, 4.4147e-05],
        [7.0921e-05, 1.6727e-04, 4.4239e-05],
        [1.6079e-03, 6.2527e-04, 3.5739e-04],
        [1.4453e-03, 6.5052e-04, 4.8703e-05],
        [4.9688e-03, 6.4275e-05, 1.6979e-04],
        [9.6458e-04, 1.0678e-02, 1.8109e-04],
        [2.8588e-04, 4.1143e-04, 5.1254e-05],
        [1.2543e-03, 1.9745e-03, 7.1009e-04],
        [1.9483e-03, 1.8880e-03, 3.1317e-04],
        [5.2941e-04, 7.2310e-04, 4.7608e-05],
        [7.9273e-04, 1.0334e-03, 1.5978e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.4063e-04],
        [1.3986e-03],
        [5.9545e-04],
        [1.2991e-03],
        [1.8769e-03],
        [5.8009e-04],
        [9.7762e-05],
        [1.2401e-03],
        [2.1921e-03],
        [9.4440e-04],
        [9.3306e-04],
        [2.4942e-03],
        [6.6117e-04],
        [1.1181e-03],
        [3.7275e-03],
        [1.6939e-03]], device='cuda:0')/tensor([[2.4063e-04, 1.3986e-03, 5.9545e-04, 1.2991e-03, 1.8769e-03, 5.8009e-04,
         9.7762e-05, 1.2401e-03, 2.1921e-03, 9.4440e-04, 9.3306e-04, 2.4942e-03,
         6.6117e-04, 1.1181e-03, 3.7275e-03, 1.6939e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0045],
        [0.0010],
        [0.0027],
        [0.0017],
        [0.0020],
        [0.0009],
        [0.0002],
        [0.0033],
        [0.0011],
        [0.0003],
        [0.0070],
        [0.0017],
        [0.0006],
        [0.0008],
        [0.0002]], device='cuda:0')/tensor([[0.0004, 0.0045, 0.0010, 0.0027, 0.0017, 0.0020, 0.0009, 0.0002, 0.0033,
         0.0011, 0.0003, 0.0070, 0.0017, 0.0006, 0.0008, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.4697e-05],
        [2.6574e-04],
        [3.8611e-04],
        [2.7023e-04],
        [7.9700e-05],
        [1.5156e-04],
        [3.5973e-05],
        [3.2852e-05],
        [3.6743e-04],
        [3.5588e-04],
        [1.4127e-04],
        [1.0341e-03],
        [1.6065e-04],
        [7.8377e-05],
        [4.4131e-04],
        [1.7154e-04]], device='cuda:0')/tensor([[4.4697e-05, 2.6574e-04, 3.8611e-04, 2.7023e-04, 7.9700e-05, 1.5156e-04,
         3.5973e-05, 3.2852e-05, 3.6743e-04, 3.5588e-04, 1.4127e-04, 1.0341e-03,
         1.6065e-04, 7.8377e-05, 4.4131e-04, 1.7154e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4063e-04, 3.9650e-04, 4.4697e-05],
        [1.3986e-03, 4.4637e-03, 2.6574e-04],
        [5.9545e-04, 9.9518e-04, 3.8611e-04],
        [1.2991e-03, 2.7165e-03, 2.7023e-04],
        [1.8769e-03, 1.6761e-03, 7.9700e-05],
        [5.8009e-04, 1.9678e-03, 1.5156e-04],
        [9.7762e-05, 8.6919e-04, 3.5973e-05],
        [1.2401e-03, 2.3675e-04, 3.2852e-05],
        [2.1921e-03, 3.3098e-03, 3.6743e-04],
        [9.4440e-04, 1.1204e-03, 3.5588e-04],
        [9.3306e-04, 2.7975e-04, 1.4127e-04],
        [2.4942e-03, 6.9689e-03, 1.0341e-03],
        [6.6117e-04, 1.7291e-03, 1.6065e-04],
        [1.1181e-03, 6.1571e-04, 7.8377e-05],
        [3.7275e-03, 8.2078e-04, 4.4131e-04],
        [1.6939e-03, 2.3004e-04, 1.7154e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.0779e-03],
        [4.6401e-03],
        [5.7305e-05],
        [1.4202e-03],
        [1.4115e-03],
        [2.5412e-04],
        [1.7585e-03],
        [9.8552e-04],
        [8.1198e-04],
        [1.5088e-03],
        [2.9201e-03],
        [6.2316e-04],
        [1.1819e-03],
        [3.9859e-03],
        [8.2481e-03],
        [1.2437e-03]], device='cuda:0')/tensor([[4.0779e-03, 4.6401e-03, 5.7305e-05, 1.4202e-03, 1.4115e-03, 2.5412e-04,
         1.7585e-03, 9.8552e-04, 8.1198e-04, 1.5088e-03, 2.9201e-03, 6.2316e-04,
         1.1819e-03, 3.9859e-03, 8.2481e-03, 1.2437e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0238e-02],
        [2.8453e-03],
        [2.3835e-04],
        [6.4503e-04],
        [1.0019e-04],
        [9.1768e-05],
        [1.3918e-03],
        [9.5757e-03],
        [5.7203e-05],
        [6.9826e-04],
        [2.0049e-03],
        [2.2411e-04],
        [2.0766e-03],
        [9.8865e-04],
        [9.7796e-03],
        [1.5162e-04]], device='cuda:0')/tensor([[1.0238e-02, 2.8453e-03, 2.3835e-04, 6.4503e-04, 1.0019e-04, 9.1768e-05,
         1.3918e-03, 9.5757e-03, 5.7203e-05, 6.9826e-04, 2.0049e-03, 2.2411e-04,
         2.0766e-03, 9.8865e-04, 9.7796e-03, 1.5162e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.9639e-04],
        [4.5281e-04],
        [2.8534e-05],
        [1.6170e-04],
        [3.5823e-04],
        [2.8940e-04],
        [6.3068e-05],
        [5.4448e-05],
        [3.5359e-04],
        [1.6993e-04],
        [1.5098e-04],
        [7.2738e-04],
        [6.1566e-04],
        [3.8119e-04],
        [8.6545e-04],
        [1.4149e-04]], device='cuda:0')/tensor([[2.9639e-04, 4.5281e-04, 2.8534e-05, 1.6170e-04, 3.5823e-04, 2.8940e-04,
         6.3068e-05, 5.4448e-05, 3.5359e-04, 1.6993e-04, 1.5098e-04, 7.2738e-04,
         6.1566e-04, 3.8119e-04, 8.6545e-04, 1.4149e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.0779e-03, 1.0238e-02, 2.9639e-04],
        [4.6401e-03, 2.8453e-03, 4.5281e-04],
        [5.7305e-05, 2.3835e-04, 2.8534e-05],
        [1.4202e-03, 6.4503e-04, 1.6170e-04],
        [1.4115e-03, 1.0019e-04, 3.5823e-04],
        [2.5412e-04, 9.1768e-05, 2.8940e-04],
        [1.7585e-03, 1.3918e-03, 6.3068e-05],
        [9.8552e-04, 9.5757e-03, 5.4448e-05],
        [8.1198e-04, 5.7203e-05, 3.5359e-04],
        [1.5088e-03, 6.9826e-04, 1.6993e-04],
        [2.9201e-03, 2.0049e-03, 1.5098e-04],
        [6.2316e-04, 2.2411e-04, 7.2738e-04],
        [1.1819e-03, 2.0766e-03, 6.1566e-04],
        [3.9859e-03, 9.8865e-04, 3.8119e-04],
        [8.2481e-03, 9.7796e-03, 8.6545e-04],
        [1.2437e-03, 1.5162e-04, 1.4149e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.1474e-04],
        [4.0999e-04],
        [4.7862e-04],
        [1.2148e-03],
        [1.6594e-03],
        [4.4768e-05],
        [1.8452e-03],
        [2.4929e-03],
        [5.9243e-04],
        [1.1751e-03],
        [9.4634e-04],
        [2.4516e-03],
        [3.6183e-04],
        [8.4709e-04],
        [1.0051e-03],
        [2.3371e-03]], device='cuda:0')/tensor([[7.1474e-04, 4.0999e-04, 4.7862e-04, 1.2148e-03, 1.6594e-03, 4.4768e-05,
         1.8452e-03, 2.4929e-03, 5.9243e-04, 1.1751e-03, 9.4634e-04, 2.4516e-03,
         3.6183e-04, 8.4709e-04, 1.0051e-03, 2.3371e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0006],
        [0.0023],
        [0.0012],
        [0.0016],
        [0.0008],
        [0.0006],
        [0.0006],
        [0.0014],
        [0.0010],
        [0.0012],
        [0.0022],
        [0.0026],
        [0.0019],
        [0.0006],
        [0.0003],
        [0.0009]], device='cuda:0')/tensor([[0.0006, 0.0023, 0.0012, 0.0016, 0.0008, 0.0006, 0.0006, 0.0014, 0.0010,
         0.0012, 0.0022, 0.0026, 0.0019, 0.0006, 0.0003, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.5592e-05],
        [5.0609e-05],
        [3.1309e-05],
        [2.2377e-04],
        [7.9382e-05],
        [7.4425e-05],
        [6.9091e-04],
        [4.2541e-04],
        [2.9999e-04],
        [1.2604e-04],
        [5.3318e-04],
        [2.4349e-04],
        [1.7767e-04],
        [6.6199e-05],
        [6.6576e-05],
        [5.9501e-04]], device='cuda:0')/tensor([[5.5592e-05, 5.0609e-05, 3.1309e-05, 2.2377e-04, 7.9382e-05, 7.4425e-05,
         6.9091e-04, 4.2541e-04, 2.9999e-04, 1.2604e-04, 5.3318e-04, 2.4349e-04,
         1.7767e-04, 6.6199e-05, 6.6576e-05, 5.9501e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.1474e-04, 5.6301e-04, 5.5592e-05],
        [4.0999e-04, 2.3103e-03, 5.0609e-05],
        [4.7862e-04, 1.1592e-03, 3.1309e-05],
        [1.2148e-03, 1.5736e-03, 2.2377e-04],
        [1.6594e-03, 7.5087e-04, 7.9382e-05],
        [4.4768e-05, 6.1403e-04, 7.4425e-05],
        [1.8452e-03, 6.4452e-04, 6.9091e-04],
        [2.4929e-03, 1.4469e-03, 4.2541e-04],
        [5.9243e-04, 9.6499e-04, 2.9999e-04],
        [1.1751e-03, 1.1781e-03, 1.2604e-04],
        [9.4634e-04, 2.2251e-03, 5.3318e-04],
        [2.4516e-03, 2.5720e-03, 2.4349e-04],
        [3.6183e-04, 1.9352e-03, 1.7767e-04],
        [8.4709e-04, 5.9596e-04, 6.6199e-05],
        [1.0051e-03, 3.2321e-04, 6.6576e-05],
        [2.3371e-03, 8.8300e-04, 5.9501e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0008],
        [0.0013],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0006],
        [0.0009],
        [0.0003],
        [0.0015],
        [0.0006],
        [0.0007],
        [0.0009],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0008, 0.0013, 0.0003, 0.0005, 0.0005, 0.0005, 0.0006, 0.0006,
         0.0009, 0.0003, 0.0015, 0.0006, 0.0007, 0.0009, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.1034e-04],
        [3.3575e-04],
        [1.5535e-03],
        [2.5696e-04],
        [5.3385e-05],
        [1.9151e-04],
        [1.2165e-03],
        [2.1184e-04],
        [4.4781e-04],
        [4.2195e-04],
        [8.2172e-04],
        [3.3387e-03],
        [1.2968e-03],
        [2.2119e-03],
        [1.0928e-03],
        [4.0572e-04]], device='cuda:0')/tensor([[8.1034e-04, 3.3575e-04, 1.5535e-03, 2.5696e-04, 5.3385e-05, 1.9151e-04,
         1.2165e-03, 2.1184e-04, 4.4781e-04, 4.2195e-04, 8.2172e-04, 3.3387e-03,
         1.2968e-03, 2.2119e-03, 1.0928e-03, 4.0572e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1727e-04],
        [5.3473e-05],
        [5.8590e-04],
        [4.2885e-05],
        [3.1369e-05],
        [6.3341e-04],
        [2.2158e-04],
        [3.1054e-05],
        [5.6962e-05],
        [9.1774e-04],
        [2.2065e-04],
        [2.4329e-04],
        [1.4246e-04],
        [2.7134e-04],
        [2.4917e-04],
        [3.7462e-05]], device='cuda:0')/tensor([[1.1727e-04, 5.3473e-05, 5.8590e-04, 4.2885e-05, 3.1369e-05, 6.3341e-04,
         2.2158e-04, 3.1054e-05, 5.6962e-05, 9.1774e-04, 2.2065e-04, 2.4329e-04,
         1.4246e-04, 2.7134e-04, 2.4917e-04, 3.7462e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.5614e-04, 8.1034e-04, 1.1727e-04],
        [8.2912e-04, 3.3575e-04, 5.3473e-05],
        [1.3464e-03, 1.5535e-03, 5.8590e-04],
        [2.8772e-04, 2.5696e-04, 4.2885e-05],
        [5.1172e-04, 5.3385e-05, 3.1369e-05],
        [4.8964e-04, 1.9151e-04, 6.3341e-04],
        [4.5204e-04, 1.2165e-03, 2.2158e-04],
        [6.0765e-04, 2.1184e-04, 3.1054e-05],
        [5.9739e-04, 4.4781e-04, 5.6962e-05],
        [9.4811e-04, 4.2195e-04, 9.1774e-04],
        [2.5392e-04, 8.2172e-04, 2.2065e-04],
        [1.5004e-03, 3.3387e-03, 2.4329e-04],
        [6.1836e-04, 1.2968e-03, 1.4246e-04],
        [6.8928e-04, 2.2119e-03, 2.7134e-04],
        [8.9019e-04, 1.0928e-03, 2.4917e-04],
        [3.8715e-04, 4.0572e-04, 3.7462e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0045],
        [0.0003],
        [0.0017],
        [0.0010],
        [0.0016],
        [0.0012],
        [0.0023],
        [0.0005],
        [0.0004],
        [0.0019],
        [0.0015],
        [0.0006],
        [0.0015],
        [0.0005],
        [0.0008],
        [0.0014]], device='cuda:0')/tensor([[0.0045, 0.0003, 0.0017, 0.0010, 0.0016, 0.0012, 0.0023, 0.0005, 0.0004,
         0.0019, 0.0015, 0.0006, 0.0015, 0.0005, 0.0008, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0013],
        [0.0033],
        [0.0002],
        [0.0009],
        [0.0008],
        [0.0073],
        [0.0004],
        [0.0003],
        [0.0005],
        [0.0011],
        [0.0048],
        [0.0018],
        [0.0003],
        [0.0007],
        [0.0009]], device='cuda:0')/tensor([[0.0014, 0.0013, 0.0033, 0.0002, 0.0009, 0.0008, 0.0073, 0.0004, 0.0003,
         0.0005, 0.0011, 0.0048, 0.0018, 0.0003, 0.0007, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0981e-03],
        [1.2963e-04],
        [6.9923e-04],
        [1.2917e-04],
        [6.2276e-05],
        [6.9019e-04],
        [1.5912e-03],
        [5.4677e-05],
        [7.2208e-05],
        [4.3068e-05],
        [1.2842e-04],
        [5.8860e-05],
        [7.7187e-04],
        [2.4844e-04],
        [1.9080e-04],
        [8.6388e-04]], device='cuda:0')/tensor([[1.0981e-03, 1.2963e-04, 6.9923e-04, 1.2917e-04, 6.2276e-05, 6.9019e-04,
         1.5912e-03, 5.4677e-05, 7.2208e-05, 4.3068e-05, 1.2842e-04, 5.8860e-05,
         7.7187e-04, 2.4844e-04, 1.9080e-04, 8.6388e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.5327e-03, 1.3922e-03, 1.0981e-03],
        [3.3236e-04, 1.2763e-03, 1.2963e-04],
        [1.6916e-03, 3.3053e-03, 6.9923e-04],
        [1.0446e-03, 1.8904e-04, 1.2917e-04],
        [1.6080e-03, 8.9927e-04, 6.2276e-05],
        [1.1931e-03, 8.2376e-04, 6.9019e-04],
        [2.3068e-03, 7.2880e-03, 1.5912e-03],
        [5.1064e-04, 3.6354e-04, 5.4677e-05],
        [4.2845e-04, 3.1723e-04, 7.2208e-05],
        [1.8532e-03, 5.4567e-04, 4.3068e-05],
        [1.5367e-03, 1.0572e-03, 1.2842e-04],
        [5.9225e-04, 4.7951e-03, 5.8860e-05],
        [1.4680e-03, 1.8427e-03, 7.7187e-04],
        [5.3787e-04, 3.0703e-04, 2.4844e-04],
        [7.5448e-04, 7.0852e-04, 1.9080e-04],
        [1.3976e-03, 8.5429e-04, 8.6388e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0005],
        [0.0012],
        [0.0006],
        [0.0006],
        [0.0017],
        [0.0014],
        [0.0021],
        [0.0005],
        [0.0012],
        [0.0042],
        [0.0004],
        [0.0011],
        [0.0007],
        [0.0003],
        [0.0012]], device='cuda:0')/tensor([[0.0009, 0.0005, 0.0012, 0.0006, 0.0006, 0.0017, 0.0014, 0.0021, 0.0005,
         0.0012, 0.0042, 0.0004, 0.0011, 0.0007, 0.0003, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.4612e-05],
        [7.3449e-04],
        [1.8133e-03],
        [4.0990e-04],
        [8.3680e-04],
        [6.4080e-04],
        [2.5918e-03],
        [5.1928e-03],
        [2.2439e-04],
        [3.1595e-04],
        [1.8702e-03],
        [4.7561e-04],
        [4.7291e-05],
        [1.0123e-03],
        [7.2680e-05],
        [1.7189e-03]], device='cuda:0')/tensor([[7.4612e-05, 7.3449e-04, 1.8133e-03, 4.0990e-04, 8.3680e-04, 6.4080e-04,
         2.5918e-03, 5.1928e-03, 2.2439e-04, 3.1595e-04, 1.8702e-03, 4.7561e-04,
         4.7291e-05, 1.0123e-03, 7.2680e-05, 1.7189e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.9318e-04],
        [1.2998e-04],
        [2.3688e-04],
        [5.0875e-05],
        [1.2180e-03],
        [1.4623e-04],
        [2.6029e-04],
        [3.3151e-04],
        [3.8707e-05],
        [8.9069e-05],
        [3.1446e-04],
        [3.2147e-04],
        [2.6332e-05],
        [9.4501e-05],
        [3.1225e-05],
        [6.6366e-05]], device='cuda:0')/tensor([[4.9318e-04, 1.2998e-04, 2.3688e-04, 5.0875e-05, 1.2180e-03, 1.4623e-04,
         2.6029e-04, 3.3151e-04, 3.8707e-05, 8.9069e-05, 3.1446e-04, 3.2147e-04,
         2.6332e-05, 9.4501e-05, 3.1225e-05, 6.6366e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.1587e-04, 7.4612e-05, 4.9318e-04],
        [4.6219e-04, 7.3449e-04, 1.2998e-04],
        [1.1566e-03, 1.8133e-03, 2.3688e-04],
        [6.1042e-04, 4.0990e-04, 5.0875e-05],
        [5.6938e-04, 8.3680e-04, 1.2180e-03],
        [1.6925e-03, 6.4080e-04, 1.4623e-04],
        [1.3518e-03, 2.5918e-03, 2.6029e-04],
        [2.1121e-03, 5.1928e-03, 3.3151e-04],
        [4.9023e-04, 2.2439e-04, 3.8707e-05],
        [1.1953e-03, 3.1595e-04, 8.9069e-05],
        [4.2429e-03, 1.8702e-03, 3.1446e-04],
        [3.8516e-04, 4.7561e-04, 3.2147e-04],
        [1.1230e-03, 4.7291e-05, 2.6332e-05],
        [7.2488e-04, 1.0123e-03, 9.4501e-05],
        [2.7438e-04, 7.2680e-05, 3.1225e-05],
        [1.1861e-03, 1.7189e-03, 6.6366e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0010],
        [0.0015],
        [0.0018],
        [0.0012],
        [0.0009],
        [0.0008],
        [0.0007],
        [0.0008],
        [0.0010],
        [0.0010],
        [0.0007],
        [0.0008],
        [0.0009],
        [0.0008],
        [0.0009]], device='cuda:0')/tensor([[0.0005, 0.0010, 0.0015, 0.0018, 0.0012, 0.0009, 0.0008, 0.0007, 0.0008,
         0.0010, 0.0010, 0.0007, 0.0008, 0.0009, 0.0008, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0494e-03],
        [2.6863e-04],
        [5.8742e-04],
        [6.3319e-04],
        [1.1646e-03],
        [1.3606e-03],
        [2.5583e-03],
        [1.0097e-03],
        [6.5463e-05],
        [6.8900e-04],
        [1.8968e-03],
        [2.6483e-04],
        [4.1358e-04],
        [1.2257e-03],
        [4.0525e-04],
        [5.3675e-04]], device='cuda:0')/tensor([[2.0494e-03, 2.6863e-04, 5.8742e-04, 6.3319e-04, 1.1646e-03, 1.3606e-03,
         2.5583e-03, 1.0097e-03, 6.5463e-05, 6.8900e-04, 1.8968e-03, 2.6483e-04,
         4.1358e-04, 1.2257e-03, 4.0525e-04, 5.3675e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1298e-04],
        [2.5008e-04],
        [5.9696e-05],
        [2.2752e-03],
        [1.0956e-04],
        [1.6452e-04],
        [1.2403e-04],
        [1.5021e-04],
        [6.3821e-05],
        [2.1399e-04],
        [9.7573e-05],
        [4.5191e-05],
        [3.6903e-05],
        [7.8053e-05],
        [1.8356e-04],
        [5.6356e-05]], device='cuda:0')/tensor([[1.1298e-04, 2.5008e-04, 5.9696e-05, 2.2752e-03, 1.0956e-04, 1.6452e-04,
         1.2403e-04, 1.5021e-04, 6.3821e-05, 2.1399e-04, 9.7573e-05, 4.5191e-05,
         3.6903e-05, 7.8053e-05, 1.8356e-04, 5.6356e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7399e-04, 2.0494e-03, 1.1298e-04],
        [9.7108e-04, 2.6863e-04, 2.5008e-04],
        [1.5179e-03, 5.8742e-04, 5.9696e-05],
        [1.8020e-03, 6.3319e-04, 2.2752e-03],
        [1.1872e-03, 1.1646e-03, 1.0956e-04],
        [9.3996e-04, 1.3606e-03, 1.6452e-04],
        [7.8661e-04, 2.5583e-03, 1.2403e-04],
        [6.9747e-04, 1.0097e-03, 1.5021e-04],
        [8.1113e-04, 6.5463e-05, 6.3821e-05],
        [9.9909e-04, 6.8900e-04, 2.1399e-04],
        [9.7876e-04, 1.8968e-03, 9.7573e-05],
        [6.8691e-04, 2.6483e-04, 4.5191e-05],
        [8.4081e-04, 4.1358e-04, 3.6903e-05],
        [9.2504e-04, 1.2257e-03, 7.8053e-05],
        [8.4865e-04, 4.0525e-04, 1.8356e-04],
        [9.0172e-04, 5.3675e-04, 5.6356e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[0.0027],
        [0.0008],
        [0.0019],
        [0.0021]], device='cuda:0')/tensor([[0.0027, 0.0008, 0.0019, 0.0021]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0015],
        [0.0005],
        [0.0018],
        [0.0020]], device='cuda:0')/tensor([[0.0015, 0.0005, 0.0018, 0.0020]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.4102e-04],
        [4.0023e-04],
        [3.4118e-04],
        [9.1800e-05]], device='cuda:0')/tensor([[2.4102e-04, 4.0023e-04, 3.4118e-04, 9.1800e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.7435e-03, 1.5478e-03, 2.4102e-04],
        [8.3150e-04, 4.9088e-04, 4.0023e-04],
        [1.9398e-03, 1.7805e-03, 3.4118e-04],
        [2.1482e-03, 2.0431e-03, 9.1800e-05]], device='cuda:0')
acc:  0.2727272727272727
Time taken to execute the de NLI task with prompt type common, variation 1 and batchsize 16: 0:01:01.687916
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI common 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 366.74it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.8707e-03],
        [8.5034e-05],
        [6.0995e-04],
        [1.2064e-04],
        [1.3269e-03],
        [5.4995e-04],
        [2.0013e-04],
        [1.0978e-04],
        [7.6365e-04],
        [1.2808e-03],
        [1.4379e-03],
        [6.9653e-05],
        [5.8731e-04],
        [6.7194e-05],
        [3.6409e-04],
        [6.5213e-04]], device='cuda:0')/tensor([[1.8707e-03, 8.5034e-05, 6.0995e-04, 1.2064e-04, 1.3269e-03, 5.4995e-04,
         2.0013e-04, 1.0978e-04, 7.6365e-04, 1.2808e-03, 1.4379e-03, 6.9653e-05,
         5.8731e-04, 6.7194e-05, 3.6409e-04, 6.5213e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.3307e-03],
        [8.1201e-04],
        [2.1285e-03],
        [2.5391e-05],
        [6.1745e-03],
        [2.6704e-03],
        [3.8807e-03],
        [2.4237e-04],
        [8.5294e-04],
        [2.7515e-03],
        [3.5523e-03],
        [8.0591e-06],
        [2.9217e-03],
        [3.4693e-05],
        [3.3401e-04],
        [4.1272e-04]], device='cuda:0')/tensor([[3.3307e-03, 8.1201e-04, 2.1285e-03, 2.5391e-05, 6.1745e-03, 2.6704e-03,
         3.8807e-03, 2.4237e-04, 8.5294e-04, 2.7515e-03, 3.5523e-03, 8.0591e-06,
         2.9217e-03, 3.4693e-05, 3.3401e-04, 4.1272e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.1700e-04],
        [3.8000e-04],
        [9.6043e-04],
        [9.4374e-05],
        [3.6274e-04],
        [3.4518e-04],
        [5.5533e-05],
        [2.4323e-05],
        [3.1822e-04],
        [7.3696e-04],
        [2.1072e-04],
        [1.4046e-05],
        [9.8820e-04],
        [1.9493e-05],
        [4.0441e-04],
        [9.1500e-05]], device='cuda:0')/tensor([[9.1700e-04, 3.8000e-04, 9.6043e-04, 9.4374e-05, 3.6274e-04, 3.4518e-04,
         5.5533e-05, 2.4323e-05, 3.1822e-04, 7.3696e-04, 2.1072e-04, 1.4046e-05,
         9.8820e-04, 1.9493e-05, 4.0441e-04, 9.1500e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8707e-03, 3.3307e-03, 9.1700e-04],
        [8.5034e-05, 8.1201e-04, 3.8000e-04],
        [6.0995e-04, 2.1285e-03, 9.6043e-04],
        [1.2064e-04, 2.5391e-05, 9.4374e-05],
        [1.3269e-03, 6.1745e-03, 3.6274e-04],
        [5.4995e-04, 2.6704e-03, 3.4518e-04],
        [2.0013e-04, 3.8807e-03, 5.5533e-05],
        [1.0978e-04, 2.4237e-04, 2.4323e-05],
        [7.6365e-04, 8.5294e-04, 3.1822e-04],
        [1.2808e-03, 2.7515e-03, 7.3696e-04],
        [1.4379e-03, 3.5523e-03, 2.1072e-04],
        [6.9653e-05, 8.0591e-06, 1.4046e-05],
        [5.8731e-04, 2.9217e-03, 9.8820e-04],
        [6.7194e-05, 3.4693e-05, 1.9493e-05],
        [3.6409e-04, 3.3401e-04, 4.0441e-04],
        [6.5213e-04, 4.1272e-04, 9.1500e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.8074e-05],
        [4.6105e-04],
        [3.3750e-04],
        [3.0965e-04],
        [5.7989e-05],
        [6.6509e-04],
        [7.3470e-04],
        [1.1395e-04],
        [3.6844e-04],
        [2.8051e-04],
        [3.6068e-04],
        [1.5997e-04],
        [2.4928e-04],
        [1.6639e-03],
        [3.9549e-04],
        [7.3044e-04]], device='cuda:0')/tensor([[5.8074e-05, 4.6105e-04, 3.3750e-04, 3.0965e-04, 5.7989e-05, 6.6509e-04,
         7.3470e-04, 1.1395e-04, 3.6844e-04, 2.8051e-04, 3.6068e-04, 1.5997e-04,
         2.4928e-04, 1.6639e-03, 3.9549e-04, 7.3044e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0093e-03],
        [1.3164e-03],
        [6.6631e-04],
        [4.2525e-04],
        [2.0776e-05],
        [6.6530e-04],
        [2.2287e-03],
        [2.0583e-05],
        [4.1078e-04],
        [1.2227e-03],
        [2.3379e-03],
        [2.7050e-03],
        [2.4490e-04],
        [2.2085e-03],
        [1.8922e-03],
        [2.5787e-03]], device='cuda:0')/tensor([[1.0093e-03, 1.3164e-03, 6.6631e-04, 4.2525e-04, 2.0776e-05, 6.6530e-04,
         2.2287e-03, 2.0583e-05, 4.1078e-04, 1.2227e-03, 2.3379e-03, 2.7050e-03,
         2.4490e-04, 2.2085e-03, 1.8922e-03, 2.5787e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.6014e-04],
        [1.1889e-03],
        [4.6994e-04],
        [4.0231e-05],
        [3.2373e-05],
        [9.1205e-04],
        [3.0291e-04],
        [2.3060e-05],
        [6.7588e-05],
        [4.1649e-04],
        [5.1793e-04],
        [2.9155e-04],
        [8.5005e-05],
        [4.9299e-04],
        [2.9843e-03],
        [5.2930e-04]], device='cuda:0')/tensor([[3.6014e-04, 1.1889e-03, 4.6994e-04, 4.0231e-05, 3.2373e-05, 9.1205e-04,
         3.0291e-04, 2.3060e-05, 6.7588e-05, 4.1649e-04, 5.1793e-04, 2.9155e-04,
         8.5005e-05, 4.9299e-04, 2.9843e-03, 5.2930e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8074e-05, 1.0093e-03, 3.6014e-04],
        [4.6105e-04, 1.3164e-03, 1.1889e-03],
        [3.3750e-04, 6.6631e-04, 4.6994e-04],
        [3.0965e-04, 4.2525e-04, 4.0231e-05],
        [5.7989e-05, 2.0776e-05, 3.2373e-05],
        [6.6509e-04, 6.6530e-04, 9.1205e-04],
        [7.3470e-04, 2.2287e-03, 3.0291e-04],
        [1.1395e-04, 2.0583e-05, 2.3060e-05],
        [3.6844e-04, 4.1078e-04, 6.7588e-05],
        [2.8051e-04, 1.2227e-03, 4.1649e-04],
        [3.6068e-04, 2.3379e-03, 5.1793e-04],
        [1.5997e-04, 2.7050e-03, 2.9155e-04],
        [2.4928e-04, 2.4490e-04, 8.5005e-05],
        [1.6639e-03, 2.2085e-03, 4.9299e-04],
        [3.9549e-04, 1.8922e-03, 2.9843e-03],
        [7.3044e-04, 2.5787e-03, 5.2930e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0003],
        [0.0004],
        [0.0002],
        [0.0073],
        [0.0004],
        [0.0002],
        [0.0006],
        [0.0014],
        [0.0004],
        [0.0002],
        [0.0003],
        [0.0010],
        [0.0002],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0003, 0.0004, 0.0002, 0.0073, 0.0004, 0.0002, 0.0006,
         0.0014, 0.0004, 0.0002, 0.0003, 0.0010, 0.0002, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0010],
        [0.0012],
        [0.0006],
        [0.0007],
        [0.0093],
        [0.0002],
        [0.0039],
        [0.0111],
        [0.0022],
        [0.0017],
        [0.0004],
        [0.0011],
        [0.0012],
        [0.0015],
        [0.0030]], device='cuda:0')/tensor([[0.0003, 0.0010, 0.0012, 0.0006, 0.0007, 0.0093, 0.0002, 0.0039, 0.0111,
         0.0022, 0.0017, 0.0004, 0.0011, 0.0012, 0.0015, 0.0030]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.1629e-04],
        [3.6798e-04],
        [1.8452e-03],
        [9.5943e-05],
        [9.7169e-05],
        [1.9168e-03],
        [1.5028e-03],
        [3.0803e-04],
        [6.7774e-03],
        [2.3856e-04],
        [3.8855e-04],
        [2.3464e-04],
        [1.2005e-03],
        [5.4259e-04],
        [5.3688e-04],
        [7.5992e-04]], device='cuda:0')/tensor([[3.1629e-04, 3.6798e-04, 1.8452e-03, 9.5943e-05, 9.7169e-05, 1.9168e-03,
         1.5028e-03, 3.0803e-04, 6.7774e-03, 2.3856e-04, 3.8855e-04, 2.3464e-04,
         1.2005e-03, 5.4259e-04, 5.3688e-04, 7.5992e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.1635e-04, 3.0097e-04, 3.1629e-04],
        [1.7968e-04, 9.5472e-04, 3.6798e-04],
        [3.3142e-04, 1.1926e-03, 1.8452e-03],
        [4.2112e-04, 6.3018e-04, 9.5943e-05],
        [2.0527e-04, 6.8574e-04, 9.7169e-05],
        [7.3085e-03, 9.2677e-03, 1.9168e-03],
        [3.9698e-04, 2.3379e-04, 1.5028e-03],
        [1.8191e-04, 3.8779e-03, 3.0803e-04],
        [6.2891e-04, 1.1075e-02, 6.7774e-03],
        [1.3516e-03, 2.2170e-03, 2.3856e-04],
        [4.0397e-04, 1.6910e-03, 3.8855e-04],
        [2.2324e-04, 4.3698e-04, 2.3464e-04],
        [2.9206e-04, 1.1219e-03, 1.2005e-03],
        [9.5593e-04, 1.1903e-03, 5.4259e-04],
        [1.6009e-04, 1.5079e-03, 5.3688e-04],
        [8.2361e-04, 3.0209e-03, 7.5992e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.6781e-04],
        [9.5087e-05],
        [2.1721e-04],
        [3.7109e-04],
        [6.3497e-04],
        [5.3963e-04],
        [5.1201e-05],
        [4.0883e-04],
        [6.5173e-04],
        [6.0708e-04],
        [3.7186e-04],
        [1.4526e-04],
        [3.5151e-04],
        [2.6546e-04],
        [3.1595e-04],
        [4.5576e-04]], device='cuda:0')/tensor([[5.6781e-04, 9.5087e-05, 2.1721e-04, 3.7109e-04, 6.3497e-04, 5.3963e-04,
         5.1201e-05, 4.0883e-04, 6.5173e-04, 6.0708e-04, 3.7186e-04, 1.4526e-04,
         3.5151e-04, 2.6546e-04, 3.1595e-04, 4.5576e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.6351e-04],
        [1.6949e-04],
        [3.3853e-04],
        [9.4290e-04],
        [5.5076e-04],
        [1.3888e-03],
        [8.0732e-05],
        [1.0878e-03],
        [1.2555e-03],
        [2.4682e-03],
        [5.8174e-04],
        [3.6541e-04],
        [7.1952e-04],
        [3.9101e-03],
        [2.0221e-04],
        [2.2497e-03]], device='cuda:0')/tensor([[9.6351e-04, 1.6949e-04, 3.3853e-04, 9.4290e-04, 5.5076e-04, 1.3888e-03,
         8.0732e-05, 1.0878e-03, 1.2555e-03, 2.4682e-03, 5.8174e-04, 3.6541e-04,
         7.1952e-04, 3.9101e-03, 2.0221e-04, 2.2497e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2836e-03],
        [1.1708e-04],
        [5.3531e-04],
        [3.1637e-04],
        [9.7377e-03],
        [4.1621e-04],
        [9.6291e-05],
        [2.5763e-04],
        [5.0501e-04],
        [1.0841e-03],
        [3.8028e-04],
        [3.5235e-04],
        [5.9326e-04],
        [1.9856e-04],
        [9.8145e-05],
        [8.4756e-04]], device='cuda:0')/tensor([[1.2836e-03, 1.1708e-04, 5.3531e-04, 3.1637e-04, 9.7377e-03, 4.1621e-04,
         9.6291e-05, 2.5763e-04, 5.0501e-04, 1.0841e-03, 3.8028e-04, 3.5235e-04,
         5.9326e-04, 1.9856e-04, 9.8145e-05, 8.4756e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.6781e-04, 9.6351e-04, 1.2836e-03],
        [9.5087e-05, 1.6949e-04, 1.1708e-04],
        [2.1721e-04, 3.3853e-04, 5.3531e-04],
        [3.7109e-04, 9.4290e-04, 3.1637e-04],
        [6.3497e-04, 5.5076e-04, 9.7377e-03],
        [5.3963e-04, 1.3888e-03, 4.1621e-04],
        [5.1201e-05, 8.0732e-05, 9.6291e-05],
        [4.0883e-04, 1.0878e-03, 2.5763e-04],
        [6.5173e-04, 1.2555e-03, 5.0501e-04],
        [6.0708e-04, 2.4682e-03, 1.0841e-03],
        [3.7186e-04, 5.8174e-04, 3.8028e-04],
        [1.4526e-04, 3.6541e-04, 3.5235e-04],
        [3.5151e-04, 7.1952e-04, 5.9326e-04],
        [2.6546e-04, 3.9101e-03, 1.9856e-04],
        [3.1595e-04, 2.0221e-04, 9.8145e-05],
        [4.5576e-04, 2.2497e-03, 8.4756e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0002],
        [0.0009],
        [0.0003],
        [0.0001],
        [0.0008],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0008],
        [0.0006],
        [0.0011],
        [0.0004],
        [0.0002],
        [0.0005],
        [0.0004]], device='cuda:0')/tensor([[0.0001, 0.0002, 0.0009, 0.0003, 0.0001, 0.0008, 0.0005, 0.0002, 0.0004,
         0.0008, 0.0006, 0.0011, 0.0004, 0.0002, 0.0005, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.6672e-04],
        [6.0837e-04],
        [6.7130e-04],
        [8.0608e-04],
        [3.1885e-04],
        [7.5954e-03],
        [9.8296e-04],
        [5.3357e-04],
        [4.3597e-03],
        [1.2408e-03],
        [5.6003e-04],
        [8.0642e-04],
        [9.7300e-04],
        [8.4788e-05],
        [8.6557e-04],
        [7.8693e-05]], device='cuda:0')/tensor([[7.6672e-04, 6.0837e-04, 6.7130e-04, 8.0608e-04, 3.1885e-04, 7.5954e-03,
         9.8296e-04, 5.3357e-04, 4.3597e-03, 1.2408e-03, 5.6003e-04, 8.0642e-04,
         9.7300e-04, 8.4788e-05, 8.6557e-04, 7.8693e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8765e-04],
        [1.5161e-04],
        [3.9183e-04],
        [1.6857e-04],
        [1.2929e-04],
        [8.1326e-04],
        [1.2297e-04],
        [2.4838e-04],
        [1.3820e-04],
        [1.6329e-04],
        [1.7935e-04],
        [1.2506e-04],
        [3.3690e-04],
        [2.1542e-05],
        [3.0363e-04],
        [5.3505e-05]], device='cuda:0')/tensor([[4.8765e-04, 1.5161e-04, 3.9183e-04, 1.6857e-04, 1.2929e-04, 8.1326e-04,
         1.2297e-04, 2.4838e-04, 1.3820e-04, 1.6329e-04, 1.7935e-04, 1.2506e-04,
         3.3690e-04, 2.1542e-05, 3.0363e-04, 5.3505e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2091e-04, 7.6672e-04, 4.8765e-04],
        [1.8940e-04, 6.0837e-04, 1.5161e-04],
        [8.8352e-04, 6.7130e-04, 3.9183e-04],
        [3.2304e-04, 8.0608e-04, 1.6857e-04],
        [1.4477e-04, 3.1885e-04, 1.2929e-04],
        [7.6222e-04, 7.5954e-03, 8.1326e-04],
        [4.6277e-04, 9.8296e-04, 1.2297e-04],
        [1.5895e-04, 5.3357e-04, 2.4838e-04],
        [4.1516e-04, 4.3597e-03, 1.3820e-04],
        [8.3852e-04, 1.2408e-03, 1.6329e-04],
        [5.9826e-04, 5.6003e-04, 1.7935e-04],
        [1.1044e-03, 8.0642e-04, 1.2506e-04],
        [3.9101e-04, 9.7300e-04, 3.3690e-04],
        [2.4594e-04, 8.4788e-05, 2.1542e-05],
        [4.8888e-04, 8.6557e-04, 3.0363e-04],
        [4.1520e-04, 7.8693e-05, 5.3505e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0002],
        [0.0001],
        [0.0004],
        [0.0001],
        [0.0002],
        [0.0002],
        [0.0001],
        [0.0001],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0002],
        [0.0011],
        [0.0002],
        [0.0011]], device='cuda:0')/tensor([[0.0003, 0.0002, 0.0001, 0.0004, 0.0001, 0.0002, 0.0002, 0.0001, 0.0001,
         0.0004, 0.0006, 0.0005, 0.0002, 0.0011, 0.0002, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1984e-03],
        [4.1777e-04],
        [8.6581e-05],
        [2.6627e-04],
        [8.8883e-05],
        [1.2138e-04],
        [5.2213e-04],
        [2.0051e-04],
        [2.1679e-03],
        [4.5070e-03],
        [1.0199e-02],
        [6.0988e-04],
        [1.0723e-03],
        [1.8358e-03],
        [6.0532e-04],
        [1.0708e-03]], device='cuda:0')/tensor([[1.1984e-03, 4.1777e-04, 8.6581e-05, 2.6627e-04, 8.8883e-05, 1.2138e-04,
         5.2213e-04, 2.0051e-04, 2.1679e-03, 4.5070e-03, 1.0199e-02, 6.0988e-04,
         1.0723e-03, 1.8358e-03, 6.0532e-04, 1.0708e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8019e-04],
        [3.0814e-04],
        [1.5067e-04],
        [6.8066e-04],
        [1.5229e-03],
        [5.1451e-04],
        [1.2318e-04],
        [8.1201e-05],
        [4.2768e-05],
        [4.5274e-04],
        [2.2569e-04],
        [1.2188e-03],
        [3.6500e-04],
        [5.3738e-04],
        [8.1168e-04],
        [9.1297e-05]], device='cuda:0')/tensor([[1.8019e-04, 3.0814e-04, 1.5067e-04, 6.8066e-04, 1.5229e-03, 5.1451e-04,
         1.2318e-04, 8.1201e-05, 4.2768e-05, 4.5274e-04, 2.2569e-04, 1.2188e-03,
         3.6500e-04, 5.3738e-04, 8.1168e-04, 9.1297e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7636e-04, 1.1984e-03, 1.8019e-04],
        [1.8146e-04, 4.1777e-04, 3.0814e-04],
        [1.1009e-04, 8.6581e-05, 1.5067e-04],
        [4.2095e-04, 2.6627e-04, 6.8066e-04],
        [1.2725e-04, 8.8883e-05, 1.5229e-03],
        [1.8133e-04, 1.2138e-04, 5.1451e-04],
        [2.1098e-04, 5.2213e-04, 1.2318e-04],
        [1.4445e-04, 2.0051e-04, 8.1201e-05],
        [1.3374e-04, 2.1679e-03, 4.2768e-05],
        [3.7405e-04, 4.5070e-03, 4.5274e-04],
        [6.0435e-04, 1.0199e-02, 2.2569e-04],
        [5.4469e-04, 6.0988e-04, 1.2188e-03],
        [1.6892e-04, 1.0723e-03, 3.6500e-04],
        [1.1097e-03, 1.8358e-03, 5.3738e-04],
        [2.2781e-04, 6.0532e-04, 8.1168e-04],
        [1.1280e-03, 1.0708e-03, 9.1297e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5007e-03],
        [1.8756e-04],
        [2.1550e-04],
        [8.1450e-04],
        [1.1873e-04],
        [4.1921e-04],
        [3.6766e-04],
        [1.4055e-04],
        [2.1922e-04],
        [3.7109e-04],
        [7.5855e-04],
        [7.7950e-05],
        [1.2870e-03],
        [1.7088e-04],
        [3.6857e-04],
        [7.9402e-04]], device='cuda:0')/tensor([[2.5007e-03, 1.8756e-04, 2.1550e-04, 8.1450e-04, 1.1873e-04, 4.1921e-04,
         3.6766e-04, 1.4055e-04, 2.1922e-04, 3.7109e-04, 7.5855e-04, 7.7950e-05,
         1.2870e-03, 1.7088e-04, 3.6857e-04, 7.9402e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.3057e-03],
        [8.1621e-04],
        [1.8367e-03],
        [6.7263e-03],
        [1.0013e-03],
        [1.8531e-03],
        [3.5740e-03],
        [6.5578e-04],
        [5.2741e-05],
        [2.2014e-03],
        [1.1291e-03],
        [1.4178e-04],
        [1.1289e-03],
        [3.8326e-03],
        [9.6733e-04],
        [6.4109e-04]], device='cuda:0')/tensor([[4.3057e-03, 8.1621e-04, 1.8367e-03, 6.7263e-03, 1.0013e-03, 1.8531e-03,
         3.5740e-03, 6.5578e-04, 5.2741e-05, 2.2014e-03, 1.1291e-03, 1.4178e-04,
         1.1289e-03, 3.8326e-03, 9.6733e-04, 6.4109e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.3631e-04],
        [2.8400e-04],
        [1.4777e-03],
        [1.0108e-03],
        [2.3388e-04],
        [1.9989e-04],
        [5.5563e-04],
        [7.7000e-05],
        [6.5222e-04],
        [4.1113e-04],
        [8.6378e-04],
        [8.9310e-05],
        [6.7083e-04],
        [8.0404e-04],
        [6.0825e-04],
        [3.5806e-04]], device='cuda:0')/tensor([[2.3631e-04, 2.8400e-04, 1.4777e-03, 1.0108e-03, 2.3388e-04, 1.9989e-04,
         5.5563e-04, 7.7000e-05, 6.5222e-04, 4.1113e-04, 8.6378e-04, 8.9310e-05,
         6.7083e-04, 8.0404e-04, 6.0825e-04, 3.5806e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5007e-03, 4.3057e-03, 2.3631e-04],
        [1.8756e-04, 8.1621e-04, 2.8400e-04],
        [2.1550e-04, 1.8367e-03, 1.4777e-03],
        [8.1450e-04, 6.7263e-03, 1.0108e-03],
        [1.1873e-04, 1.0013e-03, 2.3388e-04],
        [4.1921e-04, 1.8531e-03, 1.9989e-04],
        [3.6766e-04, 3.5740e-03, 5.5563e-04],
        [1.4055e-04, 6.5578e-04, 7.7000e-05],
        [2.1922e-04, 5.2741e-05, 6.5222e-04],
        [3.7109e-04, 2.2014e-03, 4.1113e-04],
        [7.5855e-04, 1.1291e-03, 8.6378e-04],
        [7.7950e-05, 1.4178e-04, 8.9310e-05],
        [1.2870e-03, 1.1289e-03, 6.7083e-04],
        [1.7088e-04, 3.8326e-03, 8.0404e-04],
        [3.6857e-04, 9.6733e-04, 6.0825e-04],
        [7.9402e-04, 6.4109e-04, 3.5806e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.0545e-04],
        [4.5787e-04],
        [1.7868e-04],
        [1.6083e-03],
        [4.3360e-04],
        [5.8967e-04],
        [1.0138e-04],
        [2.6696e-04],
        [1.8559e-04],
        [3.4996e-04],
        [1.7927e-04],
        [4.1632e-04],
        [3.4475e-05],
        [5.7310e-04],
        [1.0612e-03],
        [1.2046e-04]], device='cuda:0')/tensor([[2.0545e-04, 4.5787e-04, 1.7868e-04, 1.6083e-03, 4.3360e-04, 5.8967e-04,
         1.0138e-04, 2.6696e-04, 1.8559e-04, 3.4996e-04, 1.7927e-04, 4.1632e-04,
         3.4475e-05, 5.7310e-04, 1.0612e-03, 1.2046e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1626e-03],
        [7.9483e-04],
        [4.8617e-04],
        [2.8824e-03],
        [1.3732e-04],
        [8.3089e-04],
        [4.7751e-04],
        [4.9059e-04],
        [4.7808e-04],
        [2.3209e-03],
        [6.7958e-05],
        [1.2589e-03],
        [6.0148e-05],
        [5.0282e-04],
        [2.7260e-03],
        [1.0212e-03]], device='cuda:0')/tensor([[1.1626e-03, 7.9483e-04, 4.8617e-04, 2.8824e-03, 1.3732e-04, 8.3089e-04,
         4.7751e-04, 4.9059e-04, 4.7808e-04, 2.3209e-03, 6.7958e-05, 1.2589e-03,
         6.0148e-05, 5.0282e-04, 2.7260e-03, 1.0212e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1624e-04],
        [2.7480e-04],
        [2.0623e-04],
        [1.5532e-03],
        [8.1763e-04],
        [3.3663e-04],
        [4.2071e-04],
        [2.1442e-04],
        [1.6868e-04],
        [1.2324e-03],
        [5.3075e-05],
        [2.1996e-04],
        [8.1251e-05],
        [2.1246e-04],
        [6.7757e-04],
        [2.4402e-04]], device='cuda:0')/tensor([[1.1624e-04, 2.7480e-04, 2.0623e-04, 1.5532e-03, 8.1763e-04, 3.3663e-04,
         4.2071e-04, 2.1442e-04, 1.6868e-04, 1.2324e-03, 5.3075e-05, 2.1996e-04,
         8.1251e-05, 2.1246e-04, 6.7757e-04, 2.4402e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[2.0545e-04, 1.1626e-03, 1.1624e-04],
        [4.5787e-04, 7.9483e-04, 2.7480e-04],
        [1.7868e-04, 4.8617e-04, 2.0623e-04],
        [1.6083e-03, 2.8824e-03, 1.5532e-03],
        [4.3360e-04, 1.3732e-04, 8.1763e-04],
        [5.8967e-04, 8.3089e-04, 3.3663e-04],
        [1.0138e-04, 4.7751e-04, 4.2071e-04],
        [2.6696e-04, 4.9059e-04, 2.1442e-04],
        [1.8559e-04, 4.7808e-04, 1.6868e-04],
        [3.4996e-04, 2.3209e-03, 1.2324e-03],
        [1.7927e-04, 6.7958e-05, 5.3075e-05],
        [4.1632e-04, 1.2589e-03, 2.1996e-04],
        [3.4475e-05, 6.0148e-05, 8.1251e-05],
        [5.7310e-04, 5.0282e-04, 2.1246e-04],
        [1.0612e-03, 2.7260e-03, 6.7757e-04],
        [1.2046e-04, 1.0212e-03, 2.4402e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0015],
        [0.0003],
        [0.0007],
        [0.0009]], device='cuda:0')/tensor([[0.0015, 0.0003, 0.0007, 0.0009]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0013],
        [0.0001],
        [0.0007],
        [0.0013]], device='cuda:0')/tensor([[0.0013, 0.0001, 0.0007, 0.0013]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[0.0010],
        [0.0029],
        [0.0001],
        [0.0007]], device='cuda:0')/tensor([[0.0010, 0.0029, 0.0001, 0.0007]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0015, 0.0013, 0.0010],
        [0.0003, 0.0001, 0.0029],
        [0.0007, 0.0007, 0.0001],
        [0.0009, 0.0013, 0.0007]], device='cuda:0')
acc:  0.5454545454545454
Time taken to execute the de NLI task with prompt type common, variation 2 and batchsize 16: 0:01:01.845959
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI common 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 373.64it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0004],
        [0.0013],
        [0.0005],
        [0.0005],
        [0.0009],
        [0.0002],
        [0.0007],
        [0.0013],
        [0.0007],
        [0.0003]], device='cuda:0')/tensor([[0.0003, 0.0004, 0.0004, 0.0005, 0.0005, 0.0006, 0.0004, 0.0013, 0.0005,
         0.0005, 0.0009, 0.0002, 0.0007, 0.0013, 0.0007, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.2246e-03],
        [7.3824e-04],
        [1.3091e-03],
        [7.3532e-05],
        [1.3746e-03],
        [9.7846e-03],
        [9.9663e-04],
        [1.4223e-03],
        [1.0331e-03],
        [2.4827e-03],
        [8.5160e-04],
        [3.8277e-04],
        [3.5168e-04],
        [7.3962e-04],
        [1.8324e-03],
        [1.0629e-03]], device='cuda:0')/tensor([[2.2246e-03, 7.3824e-04, 1.3091e-03, 7.3532e-05, 1.3746e-03, 9.7846e-03,
         9.9663e-04, 1.4223e-03, 1.0331e-03, 2.4827e-03, 8.5160e-04, 3.8277e-04,
         3.5168e-04, 7.3962e-04, 1.8324e-03, 1.0629e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1758e-04],
        [6.9063e-06],
        [7.1034e-05],
        [1.5803e-05],
        [1.1207e-04],
        [2.1162e-04],
        [9.5715e-05],
        [8.2510e-04],
        [5.1383e-05],
        [9.0630e-05],
        [1.2077e-04],
        [8.7521e-05],
        [1.6454e-04],
        [9.3002e-05],
        [8.8916e-05],
        [6.2634e-05]], device='cuda:0')/tensor([[1.1758e-04, 6.9063e-06, 7.1034e-05, 1.5803e-05, 1.1207e-04, 2.1162e-04,
         9.5715e-05, 8.2510e-04, 5.1383e-05, 9.0630e-05, 1.2077e-04, 8.7521e-05,
         1.6454e-04, 9.3002e-05, 8.8916e-05, 6.2634e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.4125e-04, 2.2246e-03, 1.1758e-04],
        [3.8839e-04, 7.3824e-04, 6.9063e-06],
        [3.6957e-04, 1.3091e-03, 7.1034e-05],
        [4.8638e-04, 7.3532e-05, 1.5803e-05],
        [4.9375e-04, 1.3746e-03, 1.1207e-04],
        [5.7142e-04, 9.7846e-03, 2.1162e-04],
        [3.5986e-04, 9.9663e-04, 9.5715e-05],
        [1.2611e-03, 1.4223e-03, 8.2510e-04],
        [4.5760e-04, 1.0331e-03, 5.1383e-05],
        [4.9447e-04, 2.4827e-03, 9.0630e-05],
        [9.1647e-04, 8.5160e-04, 1.2077e-04],
        [2.2525e-04, 3.8277e-04, 8.7521e-05],
        [7.4721e-04, 3.5168e-04, 1.6454e-04],
        [1.2605e-03, 7.3962e-04, 9.3002e-05],
        [7.2672e-04, 1.8324e-03, 8.8916e-05],
        [3.4905e-04, 1.0629e-03, 6.2634e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0001],
        [0.0014],
        [0.0002],
        [0.0015],
        [0.0027],
        [0.0008],
        [0.0032],
        [0.0001],
        [0.0003],
        [0.0003],
        [0.0006],
        [0.0007],
        [0.0006],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0001, 0.0014, 0.0002, 0.0015, 0.0027, 0.0008, 0.0032,
         0.0001, 0.0003, 0.0003, 0.0006, 0.0007, 0.0006, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0175e-04],
        [2.6568e-03],
        [6.1787e-05],
        [1.7827e-03],
        [1.5460e-04],
        [2.8127e-03],
        [5.2785e-03],
        [6.3547e-04],
        [1.9177e-03],
        [3.2193e-05],
        [1.6567e-03],
        [1.0106e-03],
        [1.5642e-03],
        [1.9153e-03],
        [2.6621e-03],
        [5.9381e-04]], device='cuda:0')/tensor([[2.0175e-04, 2.6568e-03, 6.1787e-05, 1.7827e-03, 1.5460e-04, 2.8127e-03,
         5.2785e-03, 6.3547e-04, 1.9177e-03, 3.2193e-05, 1.6567e-03, 1.0106e-03,
         1.5642e-03, 1.9153e-03, 2.6621e-03, 5.9381e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.6194e-04],
        [2.7325e-05],
        [1.3083e-05],
        [1.4513e-04],
        [1.7168e-05],
        [1.7335e-04],
        [1.0180e-04],
        [8.1019e-05],
        [1.9134e-04],
        [1.1598e-05],
        [1.4436e-04],
        [3.2251e-05],
        [2.8213e-04],
        [2.7464e-04],
        [2.3545e-04],
        [8.1300e-05]], device='cuda:0')/tensor([[3.6194e-04, 2.7325e-05, 1.3083e-05, 1.4513e-04, 1.7168e-05, 1.7335e-04,
         1.0180e-04, 8.1019e-05, 1.9134e-04, 1.1598e-05, 1.4436e-04, 3.2251e-05,
         2.8213e-04, 2.7464e-04, 2.3545e-04, 8.1300e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1406e-04, 2.0175e-04, 3.6194e-04],
        [2.6461e-04, 2.6568e-03, 2.7325e-05],
        [1.1957e-04, 6.1787e-05, 1.3083e-05],
        [1.4071e-03, 1.7827e-03, 1.4513e-04],
        [1.9236e-04, 1.5460e-04, 1.7168e-05],
        [1.5457e-03, 2.8127e-03, 1.7335e-04],
        [2.7403e-03, 5.2785e-03, 1.0180e-04],
        [8.2269e-04, 6.3547e-04, 8.1019e-05],
        [3.1919e-03, 1.9177e-03, 1.9134e-04],
        [1.3646e-04, 3.2193e-05, 1.1598e-05],
        [2.9657e-04, 1.6567e-03, 1.4436e-04],
        [2.8382e-04, 1.0106e-03, 3.2251e-05],
        [6.3519e-04, 1.5642e-03, 2.8213e-04],
        [7.1831e-04, 1.9153e-03, 2.7464e-04],
        [5.8351e-04, 2.6621e-03, 2.3545e-04],
        [4.6625e-04, 5.9381e-04, 8.1300e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0009],
        [0.0002],
        [0.0014],
        [0.0007],
        [0.0007],
        [0.0001],
        [0.0003],
        [0.0016],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0006],
        [0.0006],
        [0.0004]], device='cuda:0')/tensor([[0.0006, 0.0009, 0.0002, 0.0014, 0.0007, 0.0007, 0.0001, 0.0003, 0.0016,
         0.0004, 0.0006, 0.0002, 0.0003, 0.0006, 0.0006, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.4101e-04],
        [6.6415e-04],
        [6.8422e-04],
        [1.8536e-03],
        [1.7433e-03],
        [1.4775e-03],
        [2.9110e-04],
        [2.1610e-04],
        [1.6138e-03],
        [4.7223e-04],
        [3.6993e-04],
        [1.6218e-04],
        [4.2277e-05],
        [3.4429e-03],
        [9.5624e-04],
        [7.3866e-05]], device='cuda:0')/tensor([[8.4101e-04, 6.6415e-04, 6.8422e-04, 1.8536e-03, 1.7433e-03, 1.4775e-03,
         2.9110e-04, 2.1610e-04, 1.6138e-03, 4.7223e-04, 3.6993e-04, 1.6218e-04,
         4.2277e-05, 3.4429e-03, 9.5624e-04, 7.3866e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2801e-04],
        [1.2732e-05],
        [3.7392e-05],
        [2.0208e-04],
        [5.6444e-05],
        [2.0022e-04],
        [1.0937e-05],
        [7.7930e-05],
        [1.2737e-04],
        [2.5981e-05],
        [4.0265e-04],
        [3.8788e-05],
        [3.2279e-05],
        [1.9770e-04],
        [2.8974e-04],
        [2.7011e-04]], device='cuda:0')/tensor([[2.2801e-04, 1.2732e-05, 3.7392e-05, 2.0208e-04, 5.6444e-05, 2.0022e-04,
         1.0937e-05, 7.7930e-05, 1.2737e-04, 2.5981e-05, 4.0265e-04, 3.8788e-05,
         3.2279e-05, 1.9770e-04, 2.8974e-04, 2.7011e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.4135e-04, 8.4101e-04, 2.2801e-04],
        [9.1390e-04, 6.6415e-04, 1.2732e-05],
        [2.4955e-04, 6.8422e-04, 3.7392e-05],
        [1.4003e-03, 1.8536e-03, 2.0208e-04],
        [6.8602e-04, 1.7433e-03, 5.6444e-05],
        [7.0837e-04, 1.4775e-03, 2.0022e-04],
        [1.0028e-04, 2.9110e-04, 1.0937e-05],
        [2.8551e-04, 2.1610e-04, 7.7930e-05],
        [1.6297e-03, 1.6138e-03, 1.2737e-04],
        [4.4378e-04, 4.7223e-04, 2.5981e-05],
        [5.5746e-04, 3.6993e-04, 4.0265e-04],
        [1.6173e-04, 1.6218e-04, 3.8788e-05],
        [2.5311e-04, 4.2277e-05, 3.2279e-05],
        [6.1043e-04, 3.4429e-03, 1.9770e-04],
        [5.8233e-04, 9.5624e-04, 2.8974e-04],
        [4.0122e-04, 7.3866e-05, 2.7011e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0011],
        [0.0006],
        [0.0008],
        [0.0004],
        [0.0002],
        [0.0002],
        [0.0007],
        [0.0008],
        [0.0002],
        [0.0003],
        [0.0021],
        [0.0004],
        [0.0007],
        [0.0012],
        [0.0013]], device='cuda:0')/tensor([[0.0002, 0.0011, 0.0006, 0.0008, 0.0004, 0.0002, 0.0002, 0.0007, 0.0008,
         0.0002, 0.0003, 0.0021, 0.0004, 0.0007, 0.0012, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0013],
        [0.0125],
        [0.0018],
        [0.0023],
        [0.0002],
        [0.0028],
        [0.0008],
        [0.0019],
        [0.0010],
        [0.0009],
        [0.0005],
        [0.0017],
        [0.0013],
        [0.0007],
        [0.0010],
        [0.0016]], device='cuda:0')/tensor([[0.0013, 0.0125, 0.0018, 0.0023, 0.0002, 0.0028, 0.0008, 0.0019, 0.0010,
         0.0009, 0.0005, 0.0017, 0.0013, 0.0007, 0.0010, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8235e-05],
        [2.1748e-04],
        [1.1151e-04],
        [8.1060e-05],
        [4.2971e-04],
        [1.7565e-05],
        [1.0009e-04],
        [6.0273e-04],
        [9.6249e-05],
        [7.3302e-05],
        [1.6787e-04],
        [2.6246e-04],
        [5.9488e-05],
        [7.5863e-05],
        [2.4410e-04],
        [2.8696e-04]], device='cuda:0')/tensor([[4.8235e-05, 2.1748e-04, 1.1151e-04, 8.1060e-05, 4.2971e-04, 1.7565e-05,
         1.0009e-04, 6.0273e-04, 9.6249e-05, 7.3302e-05, 1.6787e-04, 2.6246e-04,
         5.9488e-05, 7.5863e-05, 2.4410e-04, 2.8696e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3008e-04, 1.3133e-03, 4.8235e-05],
        [1.0923e-03, 1.2525e-02, 2.1748e-04],
        [5.9727e-04, 1.8023e-03, 1.1151e-04],
        [7.9461e-04, 2.3115e-03, 8.1060e-05],
        [3.5244e-04, 2.2839e-04, 4.2971e-04],
        [1.6242e-04, 2.7813e-03, 1.7565e-05],
        [2.1410e-04, 8.0312e-04, 1.0009e-04],
        [6.5711e-04, 1.8782e-03, 6.0273e-04],
        [8.4255e-04, 9.5027e-04, 9.6249e-05],
        [2.4119e-04, 8.7016e-04, 7.3302e-05],
        [2.5483e-04, 4.8272e-04, 1.6787e-04],
        [2.1088e-03, 1.7450e-03, 2.6246e-04],
        [3.7226e-04, 1.2947e-03, 5.9488e-05],
        [6.7236e-04, 7.3130e-04, 7.5863e-05],
        [1.1728e-03, 9.5853e-04, 2.4410e-04],
        [1.2777e-03, 1.6254e-03, 2.8696e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.0056e-05],
        [1.1616e-03],
        [1.6457e-03],
        [1.4094e-03],
        [1.0035e-03],
        [4.3770e-04],
        [4.9818e-05],
        [6.5512e-04],
        [6.5895e-04],
        [1.4312e-04],
        [1.7823e-04],
        [1.8078e-04],
        [6.6851e-04],
        [9.4285e-04],
        [5.0455e-04],
        [5.0680e-04]], device='cuda:0')/tensor([[8.0056e-05, 1.1616e-03, 1.6457e-03, 1.4094e-03, 1.0035e-03, 4.3770e-04,
         4.9818e-05, 6.5512e-04, 6.5895e-04, 1.4312e-04, 1.7823e-04, 1.8078e-04,
         6.6851e-04, 9.4285e-04, 5.0455e-04, 5.0680e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.4360e-03],
        [1.9402e-03],
        [2.4120e-03],
        [1.9163e-03],
        [5.2743e-03],
        [6.6466e-04],
        [8.6448e-05],
        [1.3132e-03],
        [1.5007e-03],
        [4.5933e-04],
        [3.0526e-04],
        [2.4019e-04],
        [5.1853e-04],
        [1.2787e-03],
        [9.1568e-04],
        [2.6667e-03]], device='cuda:0')/tensor([[1.4360e-03, 1.9402e-03, 2.4120e-03, 1.9163e-03, 5.2743e-03, 6.6466e-04,
         8.6448e-05, 1.3132e-03, 1.5007e-03, 4.5933e-04, 3.0526e-04, 2.4019e-04,
         5.1853e-04, 1.2787e-03, 9.1568e-04, 2.6667e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.3573e-05],
        [1.6788e-04],
        [3.5601e-04],
        [4.0979e-05],
        [2.9853e-04],
        [1.8847e-04],
        [1.2845e-05],
        [3.9743e-05],
        [2.2303e-04],
        [4.3493e-05],
        [2.8310e-05],
        [1.7383e-05],
        [1.5651e-05],
        [2.7861e-05],
        [4.0066e-05],
        [8.4973e-05]], device='cuda:0')/tensor([[7.3573e-05, 1.6788e-04, 3.5601e-04, 4.0979e-05, 2.9853e-04, 1.8847e-04,
         1.2845e-05, 3.9743e-05, 2.2303e-04, 4.3493e-05, 2.8310e-05, 1.7383e-05,
         1.5651e-05, 2.7861e-05, 4.0066e-05, 8.4973e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.0056e-05, 1.4360e-03, 7.3573e-05],
        [1.1616e-03, 1.9402e-03, 1.6788e-04],
        [1.6457e-03, 2.4120e-03, 3.5601e-04],
        [1.4094e-03, 1.9163e-03, 4.0979e-05],
        [1.0035e-03, 5.2743e-03, 2.9853e-04],
        [4.3770e-04, 6.6466e-04, 1.8847e-04],
        [4.9818e-05, 8.6448e-05, 1.2845e-05],
        [6.5512e-04, 1.3132e-03, 3.9743e-05],
        [6.5895e-04, 1.5007e-03, 2.2303e-04],
        [1.4312e-04, 4.5933e-04, 4.3493e-05],
        [1.7823e-04, 3.0526e-04, 2.8310e-05],
        [1.8078e-04, 2.4019e-04, 1.7383e-05],
        [6.6851e-04, 5.1853e-04, 1.5651e-05],
        [9.4285e-04, 1.2787e-03, 2.7861e-05],
        [5.0455e-04, 9.1568e-04, 4.0066e-05],
        [5.0680e-04, 2.6667e-03, 8.4973e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0013],
        [0.0007],
        [0.0002],
        [0.0011],
        [0.0003],
        [0.0004],
        [0.0006],
        [0.0008],
        [0.0001],
        [0.0013],
        [0.0003],
        [0.0002],
        [0.0002],
        [0.0004],
        [0.0007]], device='cuda:0')/tensor([[0.0007, 0.0013, 0.0007, 0.0002, 0.0011, 0.0003, 0.0004, 0.0006, 0.0008,
         0.0001, 0.0013, 0.0003, 0.0002, 0.0002, 0.0004, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0014],
        [0.0013],
        [0.0020],
        [0.0006],
        [0.0077],
        [0.0038],
        [0.0022],
        [0.0005],
        [0.0023],
        [0.0004],
        [0.0065],
        [0.0001],
        [0.0005],
        [0.0002],
        [0.0003],
        [0.0023]], device='cuda:0')/tensor([[0.0014, 0.0013, 0.0020, 0.0006, 0.0077, 0.0038, 0.0022, 0.0005, 0.0023,
         0.0004, 0.0065, 0.0001, 0.0005, 0.0002, 0.0003, 0.0023]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.3803e-05],
        [7.1009e-05],
        [2.0210e-04],
        [3.9230e-05],
        [1.8998e-04],
        [2.3906e-05],
        [6.9068e-05],
        [5.0649e-05],
        [2.6627e-05],
        [9.5320e-05],
        [2.6079e-04],
        [3.8032e-06],
        [1.6548e-05],
        [3.1194e-05],
        [1.0738e-05],
        [1.5064e-04]], device='cuda:0')/tensor([[2.3803e-05, 7.1009e-05, 2.0210e-04, 3.9230e-05, 1.8998e-04, 2.3906e-05,
         6.9068e-05, 5.0649e-05, 2.6627e-05, 9.5320e-05, 2.6079e-04, 3.8032e-06,
         1.6548e-05, 3.1194e-05, 1.0738e-05, 1.5064e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.1452e-04, 1.3692e-03, 2.3803e-05],
        [1.3459e-03, 1.3359e-03, 7.1009e-05],
        [6.7775e-04, 1.9960e-03, 2.0210e-04],
        [2.0650e-04, 5.9662e-04, 3.9230e-05],
        [1.1265e-03, 7.7137e-03, 1.8998e-04],
        [3.1201e-04, 3.8106e-03, 2.3906e-05],
        [4.4592e-04, 2.2218e-03, 6.9068e-05],
        [5.7471e-04, 5.2740e-04, 5.0649e-05],
        [7.9072e-04, 2.2833e-03, 2.6627e-05],
        [1.4327e-04, 4.1411e-04, 9.5320e-05],
        [1.3453e-03, 6.5231e-03, 2.6079e-04],
        [3.0191e-04, 1.0506e-04, 3.8032e-06],
        [2.3735e-04, 5.1902e-04, 1.6548e-05],
        [2.0917e-04, 2.3821e-04, 3.1194e-05],
        [3.9244e-04, 3.1845e-04, 1.0738e-05],
        [7.4541e-04, 2.2706e-03, 1.5064e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0006],
        [0.0008],
        [0.0004],
        [0.0016],
        [0.0009],
        [0.0024],
        [0.0010],
        [0.0069],
        [0.0006],
        [0.0001],
        [0.0003],
        [0.0002],
        [0.0012],
        [0.0003],
        [0.0016]], device='cuda:0')/tensor([[0.0013, 0.0006, 0.0008, 0.0004, 0.0016, 0.0009, 0.0024, 0.0010, 0.0069,
         0.0006, 0.0001, 0.0003, 0.0002, 0.0012, 0.0003, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0059],
        [0.0009],
        [0.0007],
        [0.0020],
        [0.0010],
        [0.0012],
        [0.0042],
        [0.0027],
        [0.0061],
        [0.0004],
        [0.0002],
        [0.0059],
        [0.0039],
        [0.0013],
        [0.0004],
        [0.0037]], device='cuda:0')/tensor([[0.0059, 0.0009, 0.0007, 0.0020, 0.0010, 0.0012, 0.0042, 0.0027, 0.0061,
         0.0004, 0.0002, 0.0059, 0.0039, 0.0013, 0.0004, 0.0037]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0298e-04],
        [1.3177e-04],
        [1.4601e-04],
        [9.1517e-05],
        [9.7605e-05],
        [1.7818e-04],
        [6.0399e-04],
        [1.3911e-04],
        [4.4236e-04],
        [9.7064e-05],
        [3.0569e-05],
        [5.2960e-05],
        [9.7711e-05],
        [3.8687e-05],
        [3.4374e-05],
        [4.2277e-04]], device='cuda:0')/tensor([[1.0298e-04, 1.3177e-04, 1.4601e-04, 9.1517e-05, 9.7605e-05, 1.7818e-04,
         6.0399e-04, 1.3911e-04, 4.4236e-04, 9.7064e-05, 3.0569e-05, 5.2960e-05,
         9.7711e-05, 3.8687e-05, 3.4374e-05, 4.2277e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2931e-03, 5.8790e-03, 1.0298e-04],
        [5.9852e-04, 9.3075e-04, 1.3177e-04],
        [7.9301e-04, 7.2461e-04, 1.4601e-04],
        [4.1602e-04, 1.9823e-03, 9.1517e-05],
        [1.5917e-03, 9.7793e-04, 9.7605e-05],
        [9.2956e-04, 1.1676e-03, 1.7818e-04],
        [2.4245e-03, 4.1611e-03, 6.0399e-04],
        [9.5544e-04, 2.6861e-03, 1.3911e-04],
        [6.9412e-03, 6.1425e-03, 4.4236e-04],
        [5.5212e-04, 3.9195e-04, 9.7064e-05],
        [1.2088e-04, 2.1715e-04, 3.0569e-05],
        [3.3164e-04, 5.8607e-03, 5.2960e-05],
        [2.1207e-04, 3.8861e-03, 9.7711e-05],
        [1.2003e-03, 1.2754e-03, 3.8687e-05],
        [2.7424e-04, 3.6104e-04, 3.4374e-05],
        [1.5655e-03, 3.7450e-03, 4.2277e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.0095e-04],
        [1.3883e-04],
        [9.8094e-04],
        [1.2947e-03],
        [1.3099e-03],
        [5.0851e-04],
        [3.0668e-04],
        [2.4129e-05],
        [4.5291e-04],
        [1.1529e-04],
        [7.7646e-04],
        [6.3570e-04],
        [6.6394e-04],
        [3.7627e-04],
        [9.3346e-04],
        [4.4082e-04]], device='cuda:0')/tensor([[2.0095e-04, 1.3883e-04, 9.8094e-04, 1.2947e-03, 1.3099e-03, 5.0851e-04,
         3.0668e-04, 2.4129e-05, 4.5291e-04, 1.1529e-04, 7.7646e-04, 6.3570e-04,
         6.6394e-04, 3.7627e-04, 9.3346e-04, 4.4082e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.6752e-04],
        [2.4483e-04],
        [1.5807e-03],
        [7.2333e-03],
        [6.8694e-03],
        [4.6055e-03],
        [8.3189e-04],
        [3.2289e-05],
        [7.9738e-04],
        [2.3995e-04],
        [4.4079e-03],
        [3.2281e-03],
        [1.5429e-03],
        [1.7496e-03],
        [1.9582e-03],
        [7.1643e-04]], device='cuda:0')/tensor([[7.6752e-04, 2.4483e-04, 1.5807e-03, 7.2333e-03, 6.8694e-03, 4.6055e-03,
         8.3189e-04, 3.2289e-05, 7.9738e-04, 2.3995e-04, 4.4079e-03, 3.2281e-03,
         1.5429e-03, 1.7496e-03, 1.9582e-03, 7.1643e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.7189e-05],
        [2.1830e-05],
        [2.0306e-04],
        [1.8046e-04],
        [3.2205e-04],
        [9.0454e-05],
        [1.7680e-05],
        [1.6042e-06],
        [5.4328e-04],
        [1.4248e-05],
        [7.5659e-04],
        [1.6997e-04],
        [1.3214e-04],
        [8.8897e-05],
        [1.1118e-04],
        [1.2167e-05]], device='cuda:0')/tensor([[4.7189e-05, 2.1830e-05, 2.0306e-04, 1.8046e-04, 3.2205e-04, 9.0454e-05,
         1.7680e-05, 1.6042e-06, 5.4328e-04, 1.4248e-05, 7.5659e-04, 1.6997e-04,
         1.3214e-04, 8.8897e-05, 1.1118e-04, 1.2167e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.0095e-04, 7.6752e-04, 4.7189e-05],
        [1.3883e-04, 2.4483e-04, 2.1830e-05],
        [9.8094e-04, 1.5807e-03, 2.0306e-04],
        [1.2947e-03, 7.2333e-03, 1.8046e-04],
        [1.3099e-03, 6.8694e-03, 3.2205e-04],
        [5.0851e-04, 4.6055e-03, 9.0454e-05],
        [3.0668e-04, 8.3189e-04, 1.7680e-05],
        [2.4129e-05, 3.2289e-05, 1.6042e-06],
        [4.5291e-04, 7.9738e-04, 5.4328e-04],
        [1.1529e-04, 2.3995e-04, 1.4248e-05],
        [7.7646e-04, 4.4079e-03, 7.5659e-04],
        [6.3570e-04, 3.2281e-03, 1.6997e-04],
        [6.6394e-04, 1.5429e-03, 1.3214e-04],
        [3.7627e-04, 1.7496e-03, 8.8897e-05],
        [9.3346e-04, 1.9582e-03, 1.1118e-04],
        [4.4082e-04, 7.1643e-04, 1.2167e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0009],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0009, 0.0002]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0004],
        [0.0008],
        [0.0015],
        [0.0011]], device='cuda:0')/tensor([[0.0004, 0.0008, 0.0015, 0.0011]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.5209e-05],
        [3.9130e-05],
        [9.8216e-05],
        [2.1809e-04]], device='cuda:0')/tensor([[3.5209e-05, 3.9130e-05, 9.8216e-05, 2.1809e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[3.0007e-04, 4.4724e-04, 3.5209e-05],
        [3.1858e-04, 8.0942e-04, 3.9130e-05],
        [9.2313e-04, 1.4992e-03, 9.8216e-05],
        [2.4565e-04, 1.1373e-03, 2.1809e-04]], device='cuda:0')
acc:  0.4166666666666667
Time taken to execute the de NLI task with prompt type common, variation 3 and batchsize 16: 0:01:02.030945
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI common 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 374.69it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0005],
        [0.0007],
        [0.0036],
        [0.0042],
        [0.0024],
        [0.0004],
        [0.0029],
        [0.0022],
        [0.0004],
        [0.0008],
        [0.0039],
        [0.0008],
        [0.0018],
        [0.0004],
        [0.0019]], device='cuda:0')/tensor([[0.0012, 0.0005, 0.0007, 0.0036, 0.0042, 0.0024, 0.0004, 0.0029, 0.0022,
         0.0004, 0.0008, 0.0039, 0.0008, 0.0018, 0.0004, 0.0019]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.6475e-04],
        [3.2175e-04],
        [8.3089e-04],
        [1.0584e-03],
        [1.5887e-02],
        [3.9012e-03],
        [4.1154e-04],
        [4.8055e-03],
        [4.8975e-04],
        [3.6019e-04],
        [1.2770e-03],
        [1.0782e-03],
        [8.2689e-05],
        [1.1039e-03],
        [2.1491e-04],
        [1.0168e-04]], device='cuda:0')/tensor([[1.6475e-04, 3.2175e-04, 8.3089e-04, 1.0584e-03, 1.5887e-02, 3.9012e-03,
         4.1154e-04, 4.8055e-03, 4.8975e-04, 3.6019e-04, 1.2770e-03, 1.0782e-03,
         8.2689e-05, 1.1039e-03, 2.1491e-04, 1.0168e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.6215e-05],
        [3.6242e-05],
        [4.2654e-04],
        [2.7415e-03],
        [1.2802e-03],
        [2.7654e-03],
        [7.6824e-05],
        [1.3815e-03],
        [1.0607e-04],
        [3.4523e-05],
        [3.6583e-04],
        [2.3709e-03],
        [1.0701e-04],
        [2.2299e-04],
        [1.8670e-04],
        [5.6957e-04]], device='cuda:0')/tensor([[2.6215e-05, 3.6242e-05, 4.2654e-04, 2.7415e-03, 1.2802e-03, 2.7654e-03,
         7.6824e-05, 1.3815e-03, 1.0607e-04, 3.4523e-05, 3.6583e-04, 2.3709e-03,
         1.0701e-04, 2.2299e-04, 1.8670e-04, 5.6957e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1936e-03, 1.6475e-04, 2.6215e-05],
        [5.3308e-04, 3.2175e-04, 3.6242e-05],
        [6.5317e-04, 8.3089e-04, 4.2654e-04],
        [3.6380e-03, 1.0584e-03, 2.7415e-03],
        [4.1930e-03, 1.5887e-02, 1.2802e-03],
        [2.3961e-03, 3.9012e-03, 2.7654e-03],
        [4.4181e-04, 4.1154e-04, 7.6824e-05],
        [2.9223e-03, 4.8055e-03, 1.3815e-03],
        [2.1870e-03, 4.8975e-04, 1.0607e-04],
        [3.8932e-04, 3.6019e-04, 3.4523e-05],
        [7.5200e-04, 1.2770e-03, 3.6583e-04],
        [3.8980e-03, 1.0782e-03, 2.3709e-03],
        [8.4206e-04, 8.2689e-05, 1.0701e-04],
        [1.7700e-03, 1.1039e-03, 2.2299e-04],
        [4.3081e-04, 2.1491e-04, 1.8670e-04],
        [1.8731e-03, 1.0168e-04, 5.6957e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0011],
        [0.0006],
        [0.0012],
        [0.0005],
        [0.0009],
        [0.0024],
        [0.0021],
        [0.0014],
        [0.0008],
        [0.0032],
        [0.0003],
        [0.0013],
        [0.0017],
        [0.0022],
        [0.0015]], device='cuda:0')/tensor([[0.0001, 0.0011, 0.0006, 0.0012, 0.0005, 0.0009, 0.0024, 0.0021, 0.0014,
         0.0008, 0.0032, 0.0003, 0.0013, 0.0017, 0.0022, 0.0015]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0010],
        [0.0007],
        [0.0017],
        [0.0004],
        [0.0020],
        [0.0039],
        [0.0037],
        [0.0012],
        [0.0009],
        [0.0020],
        [0.0041],
        [0.0017],
        [0.0049],
        [0.0031],
        [0.0016],
        [0.0037]], device='cuda:0')/tensor([[0.0010, 0.0007, 0.0017, 0.0004, 0.0020, 0.0039, 0.0037, 0.0012, 0.0009,
         0.0020, 0.0041, 0.0017, 0.0049, 0.0031, 0.0016, 0.0037]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.0345e-05],
        [2.8064e-04],
        [7.0920e-04],
        [1.2820e-04],
        [6.0044e-04],
        [5.2060e-04],
        [1.0059e-03],
        [2.7106e-03],
        [5.6840e-05],
        [1.4858e-04],
        [6.4716e-04],
        [7.3394e-04],
        [2.1558e-03],
        [4.0518e-04],
        [4.5137e-04],
        [3.2866e-04]], device='cuda:0')/tensor([[6.0345e-05, 2.8064e-04, 7.0920e-04, 1.2820e-04, 6.0044e-04, 5.2060e-04,
         1.0059e-03, 2.7106e-03, 5.6840e-05, 1.4858e-04, 6.4716e-04, 7.3394e-04,
         2.1558e-03, 4.0518e-04, 4.5137e-04, 3.2866e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0567e-04, 1.0287e-03, 6.0345e-05],
        [1.1466e-03, 7.2221e-04, 2.8064e-04],
        [5.6726e-04, 1.7070e-03, 7.0920e-04],
        [1.2257e-03, 4.1106e-04, 1.2820e-04],
        [5.0976e-04, 1.9979e-03, 6.0044e-04],
        [9.2402e-04, 3.8691e-03, 5.2060e-04],
        [2.4325e-03, 3.7296e-03, 1.0059e-03],
        [2.1381e-03, 1.2070e-03, 2.7106e-03],
        [1.4262e-03, 9.1201e-04, 5.6840e-05],
        [7.8140e-04, 1.9529e-03, 1.4858e-04],
        [3.1508e-03, 4.0742e-03, 6.4716e-04],
        [3.4628e-04, 1.6826e-03, 7.3394e-04],
        [1.2578e-03, 4.8658e-03, 2.1558e-03],
        [1.6716e-03, 3.0688e-03, 4.0518e-04],
        [2.2081e-03, 1.5731e-03, 4.5137e-04],
        [1.5192e-03, 3.7384e-03, 3.2866e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0032],
        [0.0016],
        [0.0045],
        [0.0012],
        [0.0014],
        [0.0008],
        [0.0002],
        [0.0013],
        [0.0015],
        [0.0022],
        [0.0009],
        [0.0007],
        [0.0005],
        [0.0016],
        [0.0029],
        [0.0050]], device='cuda:0')/tensor([[0.0032, 0.0016, 0.0045, 0.0012, 0.0014, 0.0008, 0.0002, 0.0013, 0.0015,
         0.0022, 0.0009, 0.0007, 0.0005, 0.0016, 0.0029, 0.0050]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.5501e-03],
        [1.6078e-02],
        [1.5699e-03],
        [1.0607e-04],
        [9.0303e-05],
        [1.8872e-03],
        [6.9623e-05],
        [7.4071e-04],
        [1.2303e-03],
        [1.8160e-04],
        [6.4598e-04],
        [8.5111e-04],
        [5.2780e-04],
        [1.1483e-03],
        [1.1483e-03],
        [1.7600e-03]], device='cuda:0')/tensor([[6.5501e-03, 1.6078e-02, 1.5699e-03, 1.0607e-04, 9.0303e-05, 1.8872e-03,
         6.9623e-05, 7.4071e-04, 1.2303e-03, 1.8160e-04, 6.4598e-04, 8.5111e-04,
         5.2780e-04, 1.1483e-03, 1.1483e-03, 1.7600e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2498e-03],
        [2.5670e-04],
        [1.1487e-03],
        [8.9396e-04],
        [5.7141e-04],
        [2.2897e-04],
        [5.7529e-05],
        [4.7260e-04],
        [3.6102e-04],
        [1.6288e-04],
        [9.7468e-04],
        [5.4455e-04],
        [2.3203e-04],
        [4.6715e-04],
        [2.2037e-04],
        [1.3051e-03]], device='cuda:0')/tensor([[2.2498e-03, 2.5670e-04, 1.1487e-03, 8.9396e-04, 5.7141e-04, 2.2897e-04,
         5.7529e-05, 4.7260e-04, 3.6102e-04, 1.6288e-04, 9.7468e-04, 5.4455e-04,
         2.3203e-04, 4.6715e-04, 2.2037e-04, 1.3051e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2357e-03, 6.5501e-03, 2.2498e-03],
        [1.5689e-03, 1.6078e-02, 2.5670e-04],
        [4.5411e-03, 1.5699e-03, 1.1487e-03],
        [1.2455e-03, 1.0607e-04, 8.9396e-04],
        [1.3632e-03, 9.0303e-05, 5.7141e-04],
        [8.3293e-04, 1.8872e-03, 2.2897e-04],
        [2.0480e-04, 6.9623e-05, 5.7529e-05],
        [1.3381e-03, 7.4071e-04, 4.7260e-04],
        [1.4884e-03, 1.2303e-03, 3.6102e-04],
        [2.2493e-03, 1.8160e-04, 1.6288e-04],
        [9.3701e-04, 6.4598e-04, 9.7468e-04],
        [6.9622e-04, 8.5111e-04, 5.4455e-04],
        [4.5173e-04, 5.2780e-04, 2.3203e-04],
        [1.5920e-03, 1.1483e-03, 4.6715e-04],
        [2.8852e-03, 1.1483e-03, 2.2037e-04],
        [5.0391e-03, 1.7600e-03, 1.3051e-03]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0018],
        [0.0014],
        [0.0013],
        [0.0012],
        [0.0025],
        [0.0008],
        [0.0074],
        [0.0007],
        [0.0012],
        [0.0018],
        [0.0007],
        [0.0018],
        [0.0022],
        [0.0016],
        [0.0019],
        [0.0008]], device='cuda:0')/tensor([[0.0018, 0.0014, 0.0013, 0.0012, 0.0025, 0.0008, 0.0074, 0.0007, 0.0012,
         0.0018, 0.0007, 0.0018, 0.0022, 0.0016, 0.0019, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0011],
        [0.0002],
        [0.0040],
        [0.0027],
        [0.0008],
        [0.0052],
        [0.0002],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0029],
        [0.0012],
        [0.0048],
        [0.0036],
        [0.0006]], device='cuda:0')/tensor([[0.0004, 0.0011, 0.0002, 0.0040, 0.0027, 0.0008, 0.0052, 0.0002, 0.0002,
         0.0002, 0.0005, 0.0029, 0.0012, 0.0048, 0.0036, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.3908e-04],
        [1.6315e-03],
        [8.4814e-04],
        [3.0832e-04],
        [8.9080e-05],
        [1.1928e-03],
        [1.6059e-03],
        [8.5758e-05],
        [2.7906e-04],
        [2.6181e-04],
        [8.0163e-04],
        [8.6693e-04],
        [2.2741e-04],
        [2.2806e-03],
        [2.2229e-03],
        [2.5906e-03]], device='cuda:0')/tensor([[3.3908e-04, 1.6315e-03, 8.4814e-04, 3.0832e-04, 8.9080e-05, 1.1928e-03,
         1.6059e-03, 8.5758e-05, 2.7906e-04, 2.6181e-04, 8.0163e-04, 8.6693e-04,
         2.2741e-04, 2.2806e-03, 2.2229e-03, 2.5906e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8058e-03, 4.1109e-04, 3.3908e-04],
        [1.4261e-03, 1.0649e-03, 1.6315e-03],
        [1.2665e-03, 2.0507e-04, 8.4814e-04],
        [1.1506e-03, 3.9629e-03, 3.0832e-04],
        [2.4734e-03, 2.6658e-03, 8.9080e-05],
        [7.5009e-04, 7.7706e-04, 1.1928e-03],
        [7.3786e-03, 5.2152e-03, 1.6059e-03],
        [7.2559e-04, 2.1659e-04, 8.5758e-05],
        [1.1950e-03, 1.6590e-04, 2.7906e-04],
        [1.7697e-03, 1.5307e-04, 2.6181e-04],
        [7.3832e-04, 5.0572e-04, 8.0163e-04],
        [1.8127e-03, 2.9078e-03, 8.6693e-04],
        [2.2080e-03, 1.2023e-03, 2.2741e-04],
        [1.5587e-03, 4.8216e-03, 2.2806e-03],
        [1.9042e-03, 3.6054e-03, 2.2229e-03],
        [7.7930e-04, 5.5401e-04, 2.5906e-03]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0035],
        [0.0019],
        [0.0004],
        [0.0006],
        [0.0025],
        [0.0009],
        [0.0008],
        [0.0007],
        [0.0020],
        [0.0011],
        [0.0008],
        [0.0014],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0008]], device='cuda:0')/tensor([[0.0035, 0.0019, 0.0004, 0.0006, 0.0025, 0.0009, 0.0008, 0.0007, 0.0020,
         0.0011, 0.0008, 0.0014, 0.0005, 0.0005, 0.0008, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5953e-02],
        [1.8834e-03],
        [6.6210e-03],
        [5.6148e-03],
        [3.1508e-03],
        [1.5196e-03],
        [7.3015e-05],
        [1.3269e-03],
        [2.6544e-03],
        [2.6869e-03],
        [1.9142e-03],
        [2.0861e-03],
        [8.8030e-04],
        [1.3911e-03],
        [1.7021e-03],
        [1.0475e-03]], device='cuda:0')/tensor([[1.5953e-02, 1.8834e-03, 6.6210e-03, 5.6148e-03, 3.1508e-03, 1.5196e-03,
         7.3015e-05, 1.3269e-03, 2.6544e-03, 2.6869e-03, 1.9142e-03, 2.0861e-03,
         8.8030e-04, 1.3911e-03, 1.7021e-03, 1.0475e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2071e-04],
        [3.1441e-04],
        [1.2040e-04],
        [2.4750e-04],
        [3.2286e-04],
        [1.9457e-03],
        [9.7113e-05],
        [8.6598e-05],
        [8.4919e-04],
        [3.4513e-04],
        [1.6526e-04],
        [1.3732e-03],
        [1.5892e-04],
        [7.8625e-05],
        [5.5440e-04],
        [7.6607e-04]], device='cuda:0')/tensor([[3.2071e-04, 3.1441e-04, 1.2040e-04, 2.4750e-04, 3.2286e-04, 1.9457e-03,
         9.7113e-05, 8.6598e-05, 8.4919e-04, 3.4513e-04, 1.6526e-04, 1.3732e-03,
         1.5892e-04, 7.8625e-05, 5.5440e-04, 7.6607e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.5142e-03, 1.5953e-02, 3.2071e-04],
        [1.9171e-03, 1.8834e-03, 3.1441e-04],
        [4.0195e-04, 6.6210e-03, 1.2040e-04],
        [5.9541e-04, 5.6148e-03, 2.4750e-04],
        [2.4906e-03, 3.1508e-03, 3.2286e-04],
        [9.2586e-04, 1.5196e-03, 1.9457e-03],
        [8.0468e-04, 7.3015e-05, 9.7113e-05],
        [7.0563e-04, 1.3269e-03, 8.6598e-05],
        [2.0093e-03, 2.6544e-03, 8.4919e-04],
        [1.1132e-03, 2.6869e-03, 3.4513e-04],
        [7.9792e-04, 1.9142e-03, 1.6526e-04],
        [1.3516e-03, 2.0861e-03, 1.3732e-03],
        [4.7174e-04, 8.8030e-04, 1.5892e-04],
        [4.8357e-04, 1.3911e-03, 7.8625e-05],
        [7.9900e-04, 1.7021e-03, 5.5440e-04],
        [8.1663e-04, 1.0475e-03, 7.6607e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0013],
        [0.0020],
        [0.0007],
        [0.0021],
        [0.0010],
        [0.0004],
        [0.0024],
        [0.0012],
        [0.0010],
        [0.0011],
        [0.0022],
        [0.0008],
        [0.0008],
        [0.0007],
        [0.0002]], device='cuda:0')/tensor([[0.0014, 0.0013, 0.0020, 0.0007, 0.0021, 0.0010, 0.0004, 0.0024, 0.0012,
         0.0010, 0.0011, 0.0022, 0.0008, 0.0008, 0.0007, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5347e-03],
        [2.1528e-03],
        [5.8131e-04],
        [8.8393e-04],
        [3.4319e-03],
        [6.9556e-04],
        [9.7250e-04],
        [6.9856e-03],
        [2.9535e-03],
        [7.1884e-04],
        [2.7936e-03],
        [3.5068e-03],
        [1.6734e-03],
        [5.5390e-04],
        [1.9390e-05],
        [4.7602e-05]], device='cuda:0')/tensor([[4.5347e-03, 2.1528e-03, 5.8131e-04, 8.8393e-04, 3.4319e-03, 6.9556e-04,
         9.7250e-04, 6.9856e-03, 2.9535e-03, 7.1884e-04, 2.7936e-03, 3.5068e-03,
         1.6734e-03, 5.5390e-04, 1.9390e-05, 4.7602e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2535e-03],
        [2.0066e-04],
        [3.2201e-03],
        [1.7873e-04],
        [3.9835e-04],
        [2.3861e-04],
        [7.8700e-05],
        [5.3525e-04],
        [6.0990e-04],
        [6.0226e-04],
        [5.2554e-04],
        [5.4715e-04],
        [2.7985e-04],
        [6.9881e-05],
        [3.0329e-05],
        [4.5893e-05]], device='cuda:0')/tensor([[1.2535e-03, 2.0066e-04, 3.2201e-03, 1.7873e-04, 3.9835e-04, 2.3861e-04,
         7.8700e-05, 5.3525e-04, 6.0990e-04, 6.0226e-04, 5.2554e-04, 5.4715e-04,
         2.7985e-04, 6.9881e-05, 3.0329e-05, 4.5893e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4429e-03, 4.5347e-03, 1.2535e-03],
        [1.2678e-03, 2.1528e-03, 2.0066e-04],
        [2.0411e-03, 5.8131e-04, 3.2201e-03],
        [7.0395e-04, 8.8393e-04, 1.7873e-04],
        [2.1238e-03, 3.4319e-03, 3.9835e-04],
        [1.0049e-03, 6.9556e-04, 2.3861e-04],
        [3.6915e-04, 9.7250e-04, 7.8700e-05],
        [2.4139e-03, 6.9856e-03, 5.3525e-04],
        [1.2342e-03, 2.9535e-03, 6.0990e-04],
        [1.0098e-03, 7.1884e-04, 6.0226e-04],
        [1.0535e-03, 2.7936e-03, 5.2554e-04],
        [2.2289e-03, 3.5068e-03, 5.4715e-04],
        [7.8100e-04, 1.6734e-03, 2.7985e-04],
        [7.6890e-04, 5.5390e-04, 6.9881e-05],
        [6.7968e-04, 1.9390e-05, 3.0329e-05],
        [1.7627e-04, 4.7602e-05, 4.5893e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0012],
        [0.0015],
        [0.0007],
        [0.0004],
        [0.0018],
        [0.0005],
        [0.0012],
        [0.0004],
        [0.0002],
        [0.0020],
        [0.0016],
        [0.0010],
        [0.0053],
        [0.0002],
        [0.0010],
        [0.0011]], device='cuda:0')/tensor([[0.0012, 0.0015, 0.0007, 0.0004, 0.0018, 0.0005, 0.0012, 0.0004, 0.0002,
         0.0020, 0.0016, 0.0010, 0.0053, 0.0002, 0.0010, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.3039e-04],
        [1.9375e-03],
        [1.1274e-02],
        [5.9489e-04],
        [8.8620e-04],
        [2.4027e-04],
        [1.1637e-03],
        [1.9504e-03],
        [2.8271e-04],
        [5.7509e-04],
        [3.7270e-03],
        [3.6456e-04],
        [3.6506e-03],
        [1.7326e-05],
        [1.1479e-03],
        [3.4436e-03]], device='cuda:0')/tensor([[9.3039e-04, 1.9375e-03, 1.1274e-02, 5.9489e-04, 8.8620e-04, 2.4027e-04,
         1.1637e-03, 1.9504e-03, 2.8271e-04, 5.7509e-04, 3.7270e-03, 3.6456e-04,
         3.6506e-03, 1.7326e-05, 1.1479e-03, 3.4436e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.0074e-04],
        [3.1198e-04],
        [1.2273e-04],
        [1.1738e-04],
        [8.3877e-05],
        [2.0227e-03],
        [3.1772e-04],
        [6.4592e-04],
        [3.2658e-04],
        [3.8737e-04],
        [3.0318e-03],
        [6.1953e-04],
        [1.3827e-03],
        [6.7524e-06],
        [2.1252e-04],
        [6.0744e-04]], device='cuda:0')/tensor([[3.0074e-04, 3.1198e-04, 1.2273e-04, 1.1738e-04, 8.3877e-05, 2.0227e-03,
         3.1772e-04, 6.4592e-04, 3.2658e-04, 3.8737e-04, 3.0318e-03, 6.1953e-04,
         1.3827e-03, 6.7524e-06, 2.1252e-04, 6.0744e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2065e-03, 9.3039e-04, 3.0074e-04],
        [1.5491e-03, 1.9375e-03, 3.1198e-04],
        [7.4287e-04, 1.1274e-02, 1.2273e-04],
        [4.2755e-04, 5.9489e-04, 1.1738e-04],
        [1.7565e-03, 8.8620e-04, 8.3877e-05],
        [4.9663e-04, 2.4027e-04, 2.0227e-03],
        [1.1847e-03, 1.1637e-03, 3.1772e-04],
        [4.3215e-04, 1.9504e-03, 6.4592e-04],
        [1.6276e-04, 2.8271e-04, 3.2658e-04],
        [2.0425e-03, 5.7509e-04, 3.8737e-04],
        [1.6055e-03, 3.7270e-03, 3.0318e-03],
        [9.7602e-04, 3.6456e-04, 6.1953e-04],
        [5.3262e-03, 3.6506e-03, 1.3827e-03],
        [2.1638e-04, 1.7326e-05, 6.7524e-06],
        [9.5208e-04, 1.1479e-03, 2.1252e-04],
        [1.1209e-03, 3.4436e-03, 6.0744e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0011],
        [0.0010],
        [0.0001],
        [0.0009],
        [0.0019],
        [0.0040],
        [0.0012],
        [0.0044],
        [0.0018],
        [0.0006],
        [0.0023],
        [0.0009],
        [0.0041],
        [0.0011],
        [0.0009],
        [0.0066]], device='cuda:0')/tensor([[0.0011, 0.0010, 0.0001, 0.0009, 0.0019, 0.0040, 0.0012, 0.0044, 0.0018,
         0.0006, 0.0023, 0.0009, 0.0041, 0.0011, 0.0009, 0.0066]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2029e-03],
        [1.0885e-03],
        [6.8241e-04],
        [7.9550e-04],
        [3.3352e-03],
        [5.0157e-03],
        [1.0619e-03],
        [8.8381e-03],
        [1.4960e-03],
        [5.0093e-04],
        [6.4757e-04],
        [2.9511e-03],
        [2.5271e-05],
        [4.5588e-03],
        [1.5889e-03],
        [7.1509e-03]], device='cuda:0')/tensor([[3.2029e-03, 1.0885e-03, 6.8241e-04, 7.9550e-04, 3.3352e-03, 5.0157e-03,
         1.0619e-03, 8.8381e-03, 1.4960e-03, 5.0093e-04, 6.4757e-04, 2.9511e-03,
         2.5271e-05, 4.5588e-03, 1.5889e-03, 7.1509e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4314e-03],
        [1.1601e-03],
        [1.0497e-04],
        [3.6321e-04],
        [3.9522e-04],
        [1.3859e-03],
        [1.6473e-04],
        [1.3930e-03],
        [3.6368e-04],
        [1.2859e-04],
        [1.2078e-04],
        [6.9316e-04],
        [4.1569e-05],
        [4.4998e-04],
        [2.1746e-03],
        [1.2654e-03]], device='cuda:0')/tensor([[1.4314e-03, 1.1601e-03, 1.0497e-04, 3.6321e-04, 3.9522e-04, 1.3859e-03,
         1.6473e-04, 1.3930e-03, 3.6368e-04, 1.2859e-04, 1.2078e-04, 6.9316e-04,
         4.1569e-05, 4.4998e-04, 2.1746e-03, 1.2654e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0933e-03, 3.2029e-03, 1.4314e-03],
        [9.9553e-04, 1.0885e-03, 1.1601e-03],
        [1.3820e-04, 6.8241e-04, 1.0497e-04],
        [9.1685e-04, 7.9550e-04, 3.6321e-04],
        [1.8910e-03, 3.3352e-03, 3.9522e-04],
        [3.9612e-03, 5.0157e-03, 1.3859e-03],
        [1.1937e-03, 1.0619e-03, 1.6473e-04],
        [4.3697e-03, 8.8381e-03, 1.3930e-03],
        [1.8018e-03, 1.4960e-03, 3.6368e-04],
        [5.5856e-04, 5.0093e-04, 1.2859e-04],
        [2.3336e-03, 6.4757e-04, 1.2078e-04],
        [8.9025e-04, 2.9511e-03, 6.9316e-04],
        [4.1035e-03, 2.5271e-05, 4.1569e-05],
        [1.1061e-03, 4.5588e-03, 4.4998e-04],
        [8.7385e-04, 1.5889e-03, 2.1746e-03],
        [6.5601e-03, 7.1509e-03, 1.2654e-03]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0016],
        [0.0011],
        [0.0008],
        [0.0008]], device='cuda:0')/tensor([[0.0016, 0.0011, 0.0008, 0.0008]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0041],
        [0.0002],
        [0.0002],
        [0.0002]], device='cuda:0')/tensor([[0.0041, 0.0002, 0.0002, 0.0002]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[0.0002],
        [0.0023],
        [0.0001],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0023, 0.0001, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[0.0016, 0.0041, 0.0002],
        [0.0011, 0.0002, 0.0023],
        [0.0008, 0.0002, 0.0001],
        [0.0008, 0.0002, 0.0005]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the de NLI task with prompt type common, variation 4 and batchsize 16: 0:01:02.063625
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI common 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 350.83it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.7553e-04],
        [1.3294e-03],
        [1.5440e-03],
        [1.0085e-03],
        [7.4121e-04],
        [6.6582e-04],
        [4.2674e-04],
        [4.7531e-04],
        [1.2426e-03],
        [9.7738e-04],
        [2.1394e-04],
        [6.4539e-05],
        [7.6014e-04],
        [3.5439e-04],
        [2.3128e-03],
        [1.9259e-03]], device='cuda:0')/tensor([[2.7553e-04, 1.3294e-03, 1.5440e-03, 1.0085e-03, 7.4121e-04, 6.6582e-04,
         4.2674e-04, 4.7531e-04, 1.2426e-03, 9.7738e-04, 2.1394e-04, 6.4539e-05,
         7.6014e-04, 3.5439e-04, 2.3128e-03, 1.9259e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.0087e-04],
        [1.7904e-03],
        [9.2820e-03],
        [6.1028e-04],
        [9.2058e-04],
        [5.8652e-04],
        [2.1360e-04],
        [9.1638e-04],
        [1.7688e-03],
        [4.2371e-04],
        [6.0201e-04],
        [1.6961e-05],
        [8.2181e-04],
        [4.8008e-04],
        [3.9542e-03],
        [4.4947e-03]], device='cuda:0')/tensor([[5.0087e-04, 1.7904e-03, 9.2820e-03, 6.1028e-04, 9.2058e-04, 5.8652e-04,
         2.1360e-04, 9.1638e-04, 1.7688e-03, 4.2371e-04, 6.0201e-04, 1.6961e-05,
         8.2181e-04, 4.8008e-04, 3.9542e-03, 4.4947e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.2962e-05],
        [5.0301e-04],
        [3.3239e-04],
        [1.2313e-04],
        [2.7512e-04],
        [1.5806e-04],
        [9.5153e-05],
        [6.5955e-04],
        [2.7130e-04],
        [1.8002e-04],
        [5.4364e-05],
        [1.1193e-05],
        [1.6924e-04],
        [2.4504e-04],
        [2.7831e-04],
        [1.3708e-04]], device='cuda:0')/tensor([[8.2962e-05, 5.0301e-04, 3.3239e-04, 1.2313e-04, 2.7512e-04, 1.5806e-04,
         9.5153e-05, 6.5955e-04, 2.7130e-04, 1.8002e-04, 5.4364e-05, 1.1193e-05,
         1.6924e-04, 2.4504e-04, 2.7831e-04, 1.3708e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7553e-04, 5.0087e-04, 8.2962e-05],
        [1.3294e-03, 1.7904e-03, 5.0301e-04],
        [1.5440e-03, 9.2820e-03, 3.3239e-04],
        [1.0085e-03, 6.1028e-04, 1.2313e-04],
        [7.4121e-04, 9.2058e-04, 2.7512e-04],
        [6.6582e-04, 5.8652e-04, 1.5806e-04],
        [4.2674e-04, 2.1360e-04, 9.5153e-05],
        [4.7531e-04, 9.1638e-04, 6.5955e-04],
        [1.2426e-03, 1.7688e-03, 2.7130e-04],
        [9.7738e-04, 4.2371e-04, 1.8002e-04],
        [2.1394e-04, 6.0201e-04, 5.4364e-05],
        [6.4539e-05, 1.6961e-05, 1.1193e-05],
        [7.6014e-04, 8.2181e-04, 1.6924e-04],
        [3.5439e-04, 4.8008e-04, 2.4504e-04],
        [2.3128e-03, 3.9542e-03, 2.7831e-04],
        [1.9259e-03, 4.4947e-03, 1.3708e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5813e-04],
        [2.2275e-04],
        [8.2672e-04],
        [2.0764e-04],
        [1.0254e-04],
        [1.0612e-03],
        [8.4748e-04],
        [1.9814e-04],
        [9.0104e-04],
        [8.7025e-05],
        [2.0807e-04],
        [9.4587e-04],
        [3.0338e-04],
        [2.3076e-04],
        [2.9873e-04],
        [4.9220e-04]], device='cuda:0')/tensor([[2.5813e-04, 2.2275e-04, 8.2672e-04, 2.0764e-04, 1.0254e-04, 1.0612e-03,
         8.4748e-04, 1.9814e-04, 9.0104e-04, 8.7025e-05, 2.0807e-04, 9.4587e-04,
         3.0338e-04, 2.3076e-04, 2.9873e-04, 4.9220e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8707e-04],
        [1.8127e-04],
        [1.4561e-03],
        [1.2375e-04],
        [6.7950e-05],
        [7.0052e-04],
        [9.0298e-04],
        [2.0579e-04],
        [6.3706e-04],
        [9.6963e-05],
        [3.5775e-04],
        [2.5671e-03],
        [4.2398e-04],
        [1.2092e-03],
        [1.9318e-04],
        [2.0204e-03]], device='cuda:0')/tensor([[1.8707e-04, 1.8127e-04, 1.4561e-03, 1.2375e-04, 6.7950e-05, 7.0052e-04,
         9.0298e-04, 2.0579e-04, 6.3706e-04, 9.6963e-05, 3.5775e-04, 2.5671e-03,
         4.2398e-04, 1.2092e-03, 1.9318e-04, 2.0204e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6407e-05],
        [6.4341e-05],
        [3.9144e-05],
        [1.0581e-04],
        [2.0272e-05],
        [1.0103e-04],
        [4.4287e-04],
        [5.9573e-05],
        [8.8778e-05],
        [2.3913e-05],
        [3.5860e-05],
        [1.6496e-04],
        [1.1053e-04],
        [5.9625e-05],
        [8.5678e-05],
        [2.0456e-04]], device='cuda:0')/tensor([[5.6407e-05, 6.4341e-05, 3.9144e-05, 1.0581e-04, 2.0272e-05, 1.0103e-04,
         4.4287e-04, 5.9573e-05, 8.8778e-05, 2.3913e-05, 3.5860e-05, 1.6496e-04,
         1.1053e-04, 5.9625e-05, 8.5678e-05, 2.0456e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5813e-04, 1.8707e-04, 5.6407e-05],
        [2.2275e-04, 1.8127e-04, 6.4341e-05],
        [8.2672e-04, 1.4561e-03, 3.9144e-05],
        [2.0764e-04, 1.2375e-04, 1.0581e-04],
        [1.0254e-04, 6.7950e-05, 2.0272e-05],
        [1.0612e-03, 7.0052e-04, 1.0103e-04],
        [8.4748e-04, 9.0298e-04, 4.4287e-04],
        [1.9814e-04, 2.0579e-04, 5.9573e-05],
        [9.0104e-04, 6.3706e-04, 8.8778e-05],
        [8.7025e-05, 9.6963e-05, 2.3913e-05],
        [2.0807e-04, 3.5775e-04, 3.5860e-05],
        [9.4587e-04, 2.5671e-03, 1.6496e-04],
        [3.0338e-04, 4.2398e-04, 1.1053e-04],
        [2.3076e-04, 1.2092e-03, 5.9625e-05],
        [2.9873e-04, 1.9318e-04, 8.5678e-05],
        [4.9220e-04, 2.0204e-03, 2.0456e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.3101e-04],
        [1.1935e-03],
        [7.8915e-04],
        [7.0717e-04],
        [1.9427e-04],
        [3.9878e-04],
        [5.9944e-04],
        [1.2421e-03],
        [6.0759e-04],
        [6.3997e-04],
        [1.4838e-04],
        [8.7222e-04],
        [7.9289e-05],
        [4.1320e-04],
        [4.8707e-04],
        [9.1478e-04]], device='cuda:0')/tensor([[8.3101e-04, 1.1935e-03, 7.8915e-04, 7.0717e-04, 1.9427e-04, 3.9878e-04,
         5.9944e-04, 1.2421e-03, 6.0759e-04, 6.3997e-04, 1.4838e-04, 8.7222e-04,
         7.9289e-05, 4.1320e-04, 4.8707e-04, 9.1478e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9627e-03],
        [2.0135e-03],
        [1.4506e-03],
        [9.4792e-04],
        [4.2986e-05],
        [5.9907e-04],
        [4.5912e-04],
        [1.7055e-03],
        [6.5571e-04],
        [3.2415e-03],
        [5.7156e-05],
        [8.3869e-04],
        [6.5841e-05],
        [1.3194e-03],
        [1.0106e-03],
        [1.1423e-03]], device='cuda:0')/tensor([[1.9627e-03, 2.0135e-03, 1.4506e-03, 9.4792e-04, 4.2986e-05, 5.9907e-04,
         4.5912e-04, 1.7055e-03, 6.5571e-04, 3.2415e-03, 5.7156e-05, 8.3869e-04,
         6.5841e-05, 1.3194e-03, 1.0106e-03, 1.1423e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2142e-04],
        [1.6974e-04],
        [1.9025e-04],
        [1.1071e-04],
        [5.5328e-05],
        [3.5208e-05],
        [9.1046e-05],
        [1.2033e-04],
        [1.2832e-04],
        [4.6994e-04],
        [4.1879e-05],
        [4.8431e-05],
        [2.2566e-05],
        [1.6975e-04],
        [1.3606e-04],
        [5.9216e-04]], device='cuda:0')/tensor([[1.2142e-04, 1.6974e-04, 1.9025e-04, 1.1071e-04, 5.5328e-05, 3.5208e-05,
         9.1046e-05, 1.2033e-04, 1.2832e-04, 4.6994e-04, 4.1879e-05, 4.8431e-05,
         2.2566e-05, 1.6975e-04, 1.3606e-04, 5.9216e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.3101e-04, 1.9627e-03, 1.2142e-04],
        [1.1935e-03, 2.0135e-03, 1.6974e-04],
        [7.8915e-04, 1.4506e-03, 1.9025e-04],
        [7.0717e-04, 9.4792e-04, 1.1071e-04],
        [1.9427e-04, 4.2986e-05, 5.5328e-05],
        [3.9878e-04, 5.9907e-04, 3.5208e-05],
        [5.9944e-04, 4.5912e-04, 9.1046e-05],
        [1.2421e-03, 1.7055e-03, 1.2033e-04],
        [6.0759e-04, 6.5571e-04, 1.2832e-04],
        [6.3997e-04, 3.2415e-03, 4.6994e-04],
        [1.4838e-04, 5.7156e-05, 4.1879e-05],
        [8.7222e-04, 8.3869e-04, 4.8431e-05],
        [7.9289e-05, 6.5841e-05, 2.2566e-05],
        [4.1320e-04, 1.3194e-03, 1.6975e-04],
        [4.8707e-04, 1.0106e-03, 1.3606e-04],
        [9.1478e-04, 1.1423e-03, 5.9216e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0006],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0008],
        [0.0001],
        [0.0002],
        [0.0020],
        [0.0004],
        [0.0004],
        [0.0010],
        [0.0008],
        [0.0012],
        [0.0009],
        [0.0002]], device='cuda:0')/tensor([[0.0003, 0.0006, 0.0003, 0.0002, 0.0003, 0.0008, 0.0001, 0.0002, 0.0020,
         0.0004, 0.0004, 0.0010, 0.0008, 0.0012, 0.0009, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0011],
        [0.0007],
        [0.0003],
        [0.0001],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0002],
        [0.0012],
        [0.0004],
        [0.0026],
        [0.0007],
        [0.0012],
        [0.0022],
        [0.0003],
        [0.0005]], device='cuda:0')/tensor([[0.0011, 0.0007, 0.0003, 0.0001, 0.0002, 0.0005, 0.0002, 0.0002, 0.0012,
         0.0004, 0.0026, 0.0007, 0.0012, 0.0022, 0.0003, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1263e-04],
        [1.0202e-04],
        [4.3340e-05],
        [2.5193e-05],
        [3.1906e-04],
        [1.4769e-04],
        [3.5117e-05],
        [6.1138e-05],
        [1.6496e-04],
        [1.0994e-04],
        [2.5753e-04],
        [3.1868e-05],
        [1.6155e-04],
        [1.6720e-04],
        [4.6664e-05],
        [7.2393e-05]], device='cuda:0')/tensor([[1.1263e-04, 1.0202e-04, 4.3340e-05, 2.5193e-05, 3.1906e-04, 1.4769e-04,
         3.5117e-05, 6.1138e-05, 1.6496e-04, 1.0994e-04, 2.5753e-04, 3.1868e-05,
         1.6155e-04, 1.6720e-04, 4.6664e-05, 7.2393e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.9765e-04, 1.1219e-03, 1.1263e-04],
        [6.0474e-04, 7.2028e-04, 1.0202e-04],
        [3.2337e-04, 2.6447e-04, 4.3340e-05],
        [2.4134e-04, 1.3928e-04, 2.5193e-05],
        [3.0821e-04, 2.4350e-04, 3.1906e-04],
        [7.6926e-04, 5.2107e-04, 1.4769e-04],
        [1.0805e-04, 1.6712e-04, 3.5117e-05],
        [1.7202e-04, 1.7805e-04, 6.1138e-05],
        [2.0038e-03, 1.1701e-03, 1.6496e-04],
        [3.6105e-04, 4.2950e-04, 1.0994e-04],
        [3.6588e-04, 2.6426e-03, 2.5753e-04],
        [9.8296e-04, 6.6871e-04, 3.1868e-05],
        [8.2786e-04, 1.1934e-03, 1.6155e-04],
        [1.2278e-03, 2.2153e-03, 1.6720e-04],
        [8.5403e-04, 2.8114e-04, 4.6664e-05],
        [2.1929e-04, 5.1669e-04, 7.2393e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0004],
        [0.0006],
        [0.0004],
        [0.0007],
        [0.0009],
        [0.0002],
        [0.0005],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0002],
        [0.0007],
        [0.0005],
        [0.0003],
        [0.0001]], device='cuda:0')/tensor([[0.0002, 0.0004, 0.0006, 0.0004, 0.0007, 0.0009, 0.0002, 0.0005, 0.0002,
         0.0004, 0.0003, 0.0002, 0.0007, 0.0005, 0.0003, 0.0001]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0005],
        [0.0007],
        [0.0018],
        [0.0047],
        [0.0009],
        [0.0003],
        [0.0010],
        [0.0002],
        [0.0001],
        [0.0003],
        [0.0006],
        [0.0017],
        [0.0017],
        [0.0008],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0005, 0.0007, 0.0018, 0.0047, 0.0009, 0.0003, 0.0010, 0.0002,
         0.0001, 0.0003, 0.0006, 0.0017, 0.0017, 0.0008, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.6132e-05],
        [9.8404e-05],
        [8.1041e-05],
        [1.6122e-04],
        [6.7217e-04],
        [3.2628e-04],
        [1.3168e-04],
        [1.8843e-04],
        [1.1524e-04],
        [2.6777e-04],
        [3.0225e-04],
        [1.6809e-04],
        [2.7387e-04],
        [6.0823e-05],
        [8.7737e-05],
        [4.8306e-05]], device='cuda:0')/tensor([[7.6132e-05, 9.8404e-05, 8.1041e-05, 1.6122e-04, 6.7217e-04, 3.2628e-04,
         1.3168e-04, 1.8843e-04, 1.1524e-04, 2.6777e-04, 3.0225e-04, 1.6809e-04,
         2.7387e-04, 6.0823e-05, 8.7737e-05, 4.8306e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2004e-04, 4.2059e-04, 7.6132e-05],
        [3.5709e-04, 4.5394e-04, 9.8404e-05],
        [6.1834e-04, 6.9099e-04, 8.1041e-05],
        [3.8886e-04, 1.8352e-03, 1.6122e-04],
        [7.4800e-04, 4.7047e-03, 6.7217e-04],
        [8.6578e-04, 9.4088e-04, 3.2628e-04],
        [2.2955e-04, 3.4502e-04, 1.3168e-04],
        [4.7043e-04, 9.6533e-04, 1.8843e-04],
        [2.4941e-04, 2.0379e-04, 1.1524e-04],
        [4.4433e-04, 1.2264e-04, 2.6777e-04],
        [2.7451e-04, 3.0005e-04, 3.0225e-04],
        [1.8044e-04, 5.5571e-04, 1.6809e-04],
        [7.3503e-04, 1.7413e-03, 2.7387e-04],
        [4.9738e-04, 1.7182e-03, 6.0823e-05],
        [3.3405e-04, 7.5351e-04, 8.7737e-05],
        [1.4226e-04, 2.6964e-04, 4.8306e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0002],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0003],
        [0.0018],
        [0.0004],
        [0.0001],
        [0.0007],
        [0.0007],
        [0.0002],
        [0.0004],
        [0.0007],
        [0.0007],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0002, 0.0004, 0.0006, 0.0003, 0.0003, 0.0018, 0.0004, 0.0001,
         0.0007, 0.0007, 0.0002, 0.0004, 0.0007, 0.0007, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5635e-03],
        [1.9181e-04],
        [6.1672e-04],
        [9.6959e-04],
        [4.2253e-04],
        [2.3561e-04],
        [2.6786e-03],
        [3.3546e-04],
        [1.4438e-04],
        [6.8435e-05],
        [1.6336e-03],
        [6.2342e-05],
        [2.5616e-04],
        [7.2376e-04],
        [6.1753e-04],
        [6.1394e-04]], device='cuda:0')/tensor([[4.5635e-03, 1.9181e-04, 6.1672e-04, 9.6959e-04, 4.2253e-04, 2.3561e-04,
         2.6786e-03, 3.3546e-04, 1.4438e-04, 6.8435e-05, 1.6336e-03, 6.2342e-05,
         2.5616e-04, 7.2376e-04, 6.1753e-04, 6.1394e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.7775e-05],
        [6.0651e-05],
        [1.2085e-04],
        [1.1897e-04],
        [2.1902e-04],
        [3.4745e-04],
        [2.8168e-04],
        [8.0713e-05],
        [1.0169e-04],
        [5.5731e-05],
        [1.3056e-04],
        [3.2585e-04],
        [4.2112e-05],
        [1.1916e-04],
        [1.7937e-04],
        [5.3819e-05]], device='cuda:0')/tensor([[5.7775e-05, 6.0651e-05, 1.2085e-04, 1.1897e-04, 2.1902e-04, 3.4745e-04,
         2.8168e-04, 8.0713e-05, 1.0169e-04, 5.5731e-05, 1.3056e-04, 3.2585e-04,
         4.2112e-05, 1.1916e-04, 1.7937e-04, 5.3819e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3252e-04, 4.5635e-03, 5.7775e-05],
        [2.2901e-04, 1.9181e-04, 6.0651e-05],
        [4.0380e-04, 6.1672e-04, 1.2085e-04],
        [6.1774e-04, 9.6959e-04, 1.1897e-04],
        [3.2344e-04, 4.2253e-04, 2.1902e-04],
        [2.8641e-04, 2.3561e-04, 3.4745e-04],
        [1.7910e-03, 2.6786e-03, 2.8168e-04],
        [4.4392e-04, 3.3546e-04, 8.0713e-05],
        [1.1862e-04, 1.4438e-04, 1.0169e-04],
        [6.5596e-04, 6.8435e-05, 5.5731e-05],
        [7.0042e-04, 1.6336e-03, 1.3056e-04],
        [1.7960e-04, 6.2342e-05, 3.2585e-04],
        [4.4414e-04, 2.5616e-04, 4.2112e-05],
        [7.4260e-04, 7.2376e-04, 1.1916e-04],
        [7.0041e-04, 6.1753e-04, 1.7937e-04],
        [3.4914e-04, 6.1394e-04, 5.3819e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7974e-05],
        [3.4436e-04],
        [6.7402e-04],
        [3.2829e-04],
        [3.5054e-04],
        [2.0324e-04],
        [8.9964e-05],
        [2.1702e-04],
        [4.2386e-04],
        [2.7690e-04],
        [1.5961e-04],
        [3.5358e-04],
        [2.3392e-04],
        [3.2565e-04],
        [3.6812e-04],
        [3.4176e-04]], device='cuda:0')/tensor([[1.7974e-05, 3.4436e-04, 6.7402e-04, 3.2829e-04, 3.5054e-04, 2.0324e-04,
         8.9964e-05, 2.1702e-04, 4.2386e-04, 2.7690e-04, 1.5961e-04, 3.5358e-04,
         2.3392e-04, 3.2565e-04, 3.6812e-04, 3.4176e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7444e-05],
        [5.1543e-04],
        [5.6542e-04],
        [1.5098e-03],
        [8.8574e-04],
        [1.5927e-04],
        [4.7991e-05],
        [2.5364e-04],
        [2.0831e-04],
        [1.1195e-04],
        [2.1029e-04],
        [5.1924e-04],
        [4.2369e-04],
        [5.8065e-04],
        [8.6621e-04],
        [8.8418e-03]], device='cuda:0')/tensor([[1.7444e-05, 5.1543e-04, 5.6542e-04, 1.5098e-03, 8.8574e-04, 1.5927e-04,
         4.7991e-05, 2.5364e-04, 2.0831e-04, 1.1195e-04, 2.1029e-04, 5.1924e-04,
         4.2369e-04, 5.8065e-04, 8.6621e-04, 8.8418e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.0062e-06],
        [6.7407e-05],
        [1.1241e-04],
        [8.6574e-05],
        [1.0347e-04],
        [6.3812e-05],
        [1.5768e-05],
        [8.9944e-05],
        [2.5924e-05],
        [1.1809e-04],
        [5.1406e-05],
        [4.5759e-05],
        [7.3820e-05],
        [6.0152e-05],
        [1.0683e-04],
        [1.4326e-04]], device='cuda:0')/tensor([[7.0062e-06, 6.7407e-05, 1.1241e-04, 8.6574e-05, 1.0347e-04, 6.3812e-05,
         1.5768e-05, 8.9944e-05, 2.5924e-05, 1.1809e-04, 5.1406e-05, 4.5759e-05,
         7.3820e-05, 6.0152e-05, 1.0683e-04, 1.4326e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7974e-05, 1.7444e-05, 7.0062e-06],
        [3.4436e-04, 5.1543e-04, 6.7407e-05],
        [6.7402e-04, 5.6542e-04, 1.1241e-04],
        [3.2829e-04, 1.5098e-03, 8.6574e-05],
        [3.5054e-04, 8.8574e-04, 1.0347e-04],
        [2.0324e-04, 1.5927e-04, 6.3812e-05],
        [8.9964e-05, 4.7991e-05, 1.5768e-05],
        [2.1702e-04, 2.5364e-04, 8.9944e-05],
        [4.2386e-04, 2.0831e-04, 2.5924e-05],
        [2.7690e-04, 1.1195e-04, 1.1809e-04],
        [1.5961e-04, 2.1029e-04, 5.1406e-05],
        [3.5358e-04, 5.1924e-04, 4.5759e-05],
        [2.3392e-04, 4.2369e-04, 7.3820e-05],
        [3.2565e-04, 5.8065e-04, 6.0152e-05],
        [3.6812e-04, 8.6621e-04, 1.0683e-04],
        [3.4176e-04, 8.8418e-03, 1.4326e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.9864e-04],
        [1.5264e-04],
        [1.3605e-04],
        [2.3004e-04],
        [1.0065e-03],
        [1.5190e-03],
        [2.7986e-04],
        [1.1783e-04],
        [1.4479e-04],
        [6.4770e-04],
        [7.4398e-04],
        [1.0275e-04],
        [7.2986e-05],
        [8.8654e-04],
        [1.0585e-03],
        [1.5294e-04]], device='cuda:0')/tensor([[6.9864e-04, 1.5264e-04, 1.3605e-04, 2.3004e-04, 1.0065e-03, 1.5190e-03,
         2.7986e-04, 1.1783e-04, 1.4479e-04, 6.4770e-04, 7.4398e-04, 1.0275e-04,
         7.2986e-05, 8.8654e-04, 1.0585e-03, 1.5294e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.0229e-04],
        [2.2832e-05],
        [1.1676e-04],
        [3.5918e-04],
        [9.8593e-04],
        [1.6383e-03],
        [1.0656e-04],
        [1.5589e-04],
        [2.5710e-03],
        [3.1384e-03],
        [6.0585e-04],
        [1.1789e-04],
        [6.9417e-05],
        [1.2738e-03],
        [1.1138e-03],
        [6.0383e-04]], device='cuda:0')/tensor([[5.0229e-04, 2.2832e-05, 1.1676e-04, 3.5918e-04, 9.8593e-04, 1.6383e-03,
         1.0656e-04, 1.5589e-04, 2.5710e-03, 3.1384e-03, 6.0585e-04, 1.1789e-04,
         6.9417e-05, 1.2738e-03, 1.1138e-03, 6.0383e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.4430e-05],
        [1.3902e-04],
        [1.1724e-05],
        [4.9259e-05],
        [6.3254e-05],
        [4.8578e-04],
        [2.8366e-05],
        [2.6519e-05],
        [9.7427e-05],
        [7.9607e-05],
        [9.2599e-05],
        [1.4593e-05],
        [1.7591e-05],
        [1.1578e-04],
        [1.0531e-04],
        [2.9853e-05]], device='cuda:0')/tensor([[6.4430e-05, 1.3902e-04, 1.1724e-05, 4.9259e-05, 6.3254e-05, 4.8578e-04,
         2.8366e-05, 2.6519e-05, 9.7427e-05, 7.9607e-05, 9.2599e-05, 1.4593e-05,
         1.7591e-05, 1.1578e-04, 1.0531e-04, 2.9853e-05]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[6.9864e-04, 5.0229e-04, 6.4430e-05],
        [1.5264e-04, 2.2832e-05, 1.3902e-04],
        [1.3605e-04, 1.1676e-04, 1.1724e-05],
        [2.3004e-04, 3.5918e-04, 4.9259e-05],
        [1.0065e-03, 9.8593e-04, 6.3254e-05],
        [1.5190e-03, 1.6383e-03, 4.8578e-04],
        [2.7986e-04, 1.0656e-04, 2.8366e-05],
        [1.1783e-04, 1.5589e-04, 2.6519e-05],
        [1.4479e-04, 2.5710e-03, 9.7427e-05],
        [6.4770e-04, 3.1384e-03, 7.9607e-05],
        [7.4398e-04, 6.0585e-04, 9.2599e-05],
        [1.0275e-04, 1.1789e-04, 1.4593e-05],
        [7.2986e-05, 6.9417e-05, 1.7591e-05],
        [8.8654e-04, 1.2738e-03, 1.1578e-04],
        [1.0585e-03, 1.1138e-03, 1.0531e-04],
        [1.5294e-04, 6.0383e-04, 2.9853e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0009],
        [0.0004],
        [0.0004],
        [0.0001]], device='cuda:0')/tensor([[0.0009, 0.0004, 0.0004, 0.0001]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[8.3046e-03],
        [3.4051e-04],
        [8.8752e-04],
        [8.5000e-05]], device='cuda:0')/tensor([[8.3046e-03, 3.4051e-04, 8.8752e-04, 8.5000e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[1.3347e-04],
        [1.0853e-04],
        [1.9008e-04],
        [2.8434e-05]], device='cuda:0')/tensor([[1.3347e-04, 1.0853e-04, 1.9008e-04, 2.8434e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[8.7249e-04, 8.3046e-03, 1.3347e-04],
        [3.7618e-04, 3.4051e-04, 1.0853e-04],
        [3.6106e-04, 8.8752e-04, 1.9008e-04],
        [1.3315e-04, 8.5000e-05, 2.8434e-05]], device='cuda:0')
acc:  0.3484848484848485
Time taken to execute the de NLI task with prompt type common, variation 5 and batchsize 16: 0:01:02.181099
path ['42', 'de', 'flan', 'NLI', 'common', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI rare_synonyms 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 362.76it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0016],
        [0.0009],
        [0.0006],
        [0.0002],
        [0.0018],
        [0.0004],
        [0.0010],
        [0.0006],
        [0.0013],
        [0.0009],
        [0.0023],
        [0.0014],
        [0.0008],
        [0.0010],
        [0.0005],
        [0.0002]], device='cuda:0')/tensor([[0.0016, 0.0009, 0.0006, 0.0002, 0.0018, 0.0004, 0.0010, 0.0006, 0.0013,
         0.0009, 0.0023, 0.0014, 0.0008, 0.0010, 0.0005, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2885e-03],
        [2.1330e-03],
        [6.3864e-04],
        [2.7376e-05],
        [1.9289e-03],
        [2.1826e-04],
        [1.1240e-03],
        [6.5017e-04],
        [3.1285e-03],
        [1.0393e-03],
        [1.6614e-03],
        [5.8697e-03],
        [1.3214e-03],
        [4.0793e-04],
        [7.8128e-04],
        [1.1990e-04]], device='cuda:0')/tensor([[3.2885e-03, 2.1330e-03, 6.3864e-04, 2.7376e-05, 1.9289e-03, 2.1826e-04,
         1.1240e-03, 6.5017e-04, 3.1285e-03, 1.0393e-03, 1.6614e-03, 5.8697e-03,
         1.3214e-03, 4.0793e-04, 7.8128e-04, 1.1990e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4846e-04],
        [3.0599e-04],
        [1.7017e-04],
        [1.2860e-04],
        [1.2228e-03],
        [9.6326e-04],
        [3.1730e-04],
        [3.6489e-04],
        [7.8202e-04],
        [1.3968e-04],
        [6.3729e-04],
        [5.3621e-04],
        [8.2298e-04],
        [2.3811e-04],
        [3.2777e-05],
        [1.0148e-04]], device='cuda:0')/tensor([[1.4846e-04, 3.0599e-04, 1.7017e-04, 1.2860e-04, 1.2228e-03, 9.6326e-04,
         3.1730e-04, 3.6489e-04, 7.8202e-04, 1.3968e-04, 6.3729e-04, 5.3621e-04,
         8.2298e-04, 2.3811e-04, 3.2777e-05, 1.0148e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6079e-03, 3.2885e-03, 1.4846e-04],
        [9.2525e-04, 2.1330e-03, 3.0599e-04],
        [6.3289e-04, 6.3864e-04, 1.7017e-04],
        [1.9680e-04, 2.7376e-05, 1.2860e-04],
        [1.7558e-03, 1.9289e-03, 1.2228e-03],
        [3.9036e-04, 2.1826e-04, 9.6326e-04],
        [1.0094e-03, 1.1240e-03, 3.1730e-04],
        [6.3632e-04, 6.5017e-04, 3.6489e-04],
        [1.2849e-03, 3.1285e-03, 7.8202e-04],
        [9.4050e-04, 1.0393e-03, 1.3968e-04],
        [2.3021e-03, 1.6614e-03, 6.3729e-04],
        [1.4408e-03, 5.8697e-03, 5.3621e-04],
        [8.4318e-04, 1.3214e-03, 8.2298e-04],
        [9.9611e-04, 4.0793e-04, 2.3811e-04],
        [4.5730e-04, 7.8128e-04, 3.2777e-05],
        [1.7592e-04, 1.1990e-04, 1.0148e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0014],
        [0.0009],
        [0.0002],
        [0.0014],
        [0.0007],
        [0.0012],
        [0.0014],
        [0.0006],
        [0.0005],
        [0.0005],
        [0.0004],
        [0.0009],
        [0.0005],
        [0.0002],
        [0.0007],
        [0.0008]], device='cuda:0')/tensor([[0.0014, 0.0009, 0.0002, 0.0014, 0.0007, 0.0012, 0.0014, 0.0006, 0.0005,
         0.0005, 0.0004, 0.0009, 0.0005, 0.0002, 0.0007, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0009],
        [0.0001],
        [0.0017],
        [0.0005],
        [0.0007],
        [0.0007],
        [0.0006],
        [0.0001],
        [0.0013],
        [0.0002],
        [0.0054],
        [0.0005],
        [0.0002],
        [0.0017],
        [0.0008]], device='cuda:0')/tensor([[0.0003, 0.0009, 0.0001, 0.0017, 0.0005, 0.0007, 0.0007, 0.0006, 0.0001,
         0.0013, 0.0002, 0.0054, 0.0005, 0.0002, 0.0017, 0.0008]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.3102e-05],
        [2.0736e-04],
        [9.9356e-05],
        [2.0601e-04],
        [4.2874e-04],
        [1.4981e-04],
        [2.2110e-04],
        [1.2811e-04],
        [4.7717e-04],
        [1.3072e-04],
        [8.2472e-04],
        [8.6871e-05],
        [1.9654e-04],
        [2.1038e-04],
        [1.7142e-04],
        [8.9006e-05]], device='cuda:0')/tensor([[8.3102e-05, 2.0736e-04, 9.9356e-05, 2.0601e-04, 4.2874e-04, 1.4981e-04,
         2.2110e-04, 1.2811e-04, 4.7717e-04, 1.3072e-04, 8.2472e-04, 8.6871e-05,
         1.9654e-04, 2.1038e-04, 1.7142e-04, 8.9006e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3691e-03, 2.5647e-04, 8.3102e-05],
        [8.8751e-04, 9.4754e-04, 2.0736e-04],
        [2.3284e-04, 1.0516e-04, 9.9356e-05],
        [1.3568e-03, 1.6937e-03, 2.0601e-04],
        [7.0169e-04, 5.4032e-04, 4.2874e-04],
        [1.1621e-03, 7.3064e-04, 1.4981e-04],
        [1.4329e-03, 6.7326e-04, 2.2110e-04],
        [6.3734e-04, 5.9492e-04, 1.2811e-04],
        [5.1855e-04, 1.0305e-04, 4.7717e-04],
        [5.4968e-04, 1.2751e-03, 1.3072e-04],
        [3.9728e-04, 2.2219e-04, 8.2472e-04],
        [8.5858e-04, 5.3684e-03, 8.6871e-05],
        [5.0972e-04, 5.2514e-04, 1.9654e-04],
        [2.2067e-04, 2.2796e-04, 2.1038e-04],
        [6.9495e-04, 1.6901e-03, 1.7142e-04],
        [7.7779e-04, 7.7272e-04, 8.9006e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0008],
        [0.0007],
        [0.0012],
        [0.0009],
        [0.0003],
        [0.0003],
        [0.0005],
        [0.0008],
        [0.0007],
        [0.0004],
        [0.0006],
        [0.0003],
        [0.0011],
        [0.0006],
        [0.0022]], device='cuda:0')/tensor([[0.0002, 0.0008, 0.0007, 0.0012, 0.0009, 0.0003, 0.0003, 0.0005, 0.0008,
         0.0007, 0.0004, 0.0006, 0.0003, 0.0011, 0.0006, 0.0022]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0002],
        [0.0011],
        [0.0013],
        [0.0008],
        [0.0006],
        [0.0028],
        [0.0003],
        [0.0009],
        [0.0006],
        [0.0003],
        [0.0008],
        [0.0011],
        [0.0008],
        [0.0005],
        [0.0010],
        [0.0007]], device='cuda:0')/tensor([[0.0002, 0.0011, 0.0013, 0.0008, 0.0006, 0.0028, 0.0003, 0.0009, 0.0006,
         0.0003, 0.0008, 0.0011, 0.0008, 0.0005, 0.0010, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.7708e-04],
        [1.4559e-04],
        [1.6097e-04],
        [4.4530e-04],
        [3.6241e-04],
        [2.1131e-04],
        [1.5358e-04],
        [2.6775e-04],
        [7.2421e-05],
        [1.1856e-04],
        [6.5198e-04],
        [1.5743e-04],
        [4.6403e-04],
        [1.8174e-04],
        [3.7554e-04],
        [2.0900e-04]], device='cuda:0')/tensor([[2.7708e-04, 1.4559e-04, 1.6097e-04, 4.4530e-04, 3.6241e-04, 2.1131e-04,
         1.5358e-04, 2.6775e-04, 7.2421e-05, 1.1856e-04, 6.5198e-04, 1.5743e-04,
         4.6403e-04, 1.8174e-04, 3.7554e-04, 2.0900e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4866e-04, 1.6307e-04, 2.7708e-04],
        [7.5529e-04, 1.1195e-03, 1.4559e-04],
        [7.2718e-04, 1.2850e-03, 1.6097e-04],
        [1.1672e-03, 7.9647e-04, 4.4530e-04],
        [8.5743e-04, 5.8378e-04, 3.6241e-04],
        [3.4637e-04, 2.8307e-03, 2.1131e-04],
        [2.7611e-04, 2.6911e-04, 1.5358e-04],
        [5.1165e-04, 9.2405e-04, 2.6775e-04],
        [8.3128e-04, 5.6627e-04, 7.2421e-05],
        [7.2916e-04, 2.5487e-04, 1.1856e-04],
        [4.3188e-04, 7.8327e-04, 6.5198e-04],
        [5.9432e-04, 1.1236e-03, 1.5743e-04],
        [2.7383e-04, 8.3080e-04, 4.6403e-04],
        [1.0718e-03, 5.1090e-04, 1.8174e-04],
        [6.4463e-04, 1.0184e-03, 3.7554e-04],
        [2.2222e-03, 6.9500e-04, 2.0900e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0009],
        [0.0007],
        [0.0014],
        [0.0006],
        [0.0006],
        [0.0010],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0009],
        [0.0006],
        [0.0003],
        [0.0007],
        [0.0003],
        [0.0006]], device='cuda:0')/tensor([[0.0010, 0.0009, 0.0007, 0.0014, 0.0006, 0.0006, 0.0010, 0.0002, 0.0006,
         0.0005, 0.0009, 0.0006, 0.0003, 0.0007, 0.0003, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0003],
        [0.0005],
        [0.0011],
        [0.0043],
        [0.0047],
        [0.0003],
        [0.0014],
        [0.0003],
        [0.0006],
        [0.0015],
        [0.0014],
        [0.0002],
        [0.0002],
        [0.0006],
        [0.0025],
        [0.0006]], device='cuda:0')/tensor([[0.0003, 0.0005, 0.0011, 0.0043, 0.0047, 0.0003, 0.0014, 0.0003, 0.0006,
         0.0015, 0.0014, 0.0002, 0.0002, 0.0006, 0.0025, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0003e-04],
        [5.7106e-04],
        [5.1739e-04],
        [8.9915e-04],
        [2.2377e-04],
        [2.8408e-04],
        [8.8586e-04],
        [1.4189e-04],
        [8.5488e-04],
        [2.9495e-04],
        [3.0629e-04],
        [1.7746e-03],
        [2.1442e-04],
        [1.5623e-04],
        [5.9072e-05],
        [3.0296e-04]], device='cuda:0')/tensor([[2.0003e-04, 5.7106e-04, 5.1739e-04, 8.9915e-04, 2.2377e-04, 2.8408e-04,
         8.8586e-04, 1.4189e-04, 8.5488e-04, 2.9495e-04, 3.0629e-04, 1.7746e-03,
         2.1442e-04, 1.5623e-04, 5.9072e-05, 3.0296e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0473e-03, 3.3938e-04, 2.0003e-04],
        [9.1978e-04, 5.2363e-04, 5.7106e-04],
        [6.8421e-04, 1.0951e-03, 5.1739e-04],
        [1.4391e-03, 4.2779e-03, 8.9915e-04],
        [5.5270e-04, 4.6761e-03, 2.2377e-04],
        [6.1935e-04, 2.5700e-04, 2.8408e-04],
        [9.6052e-04, 1.4349e-03, 8.8586e-04],
        [1.6415e-04, 3.1686e-04, 1.4189e-04],
        [6.0931e-04, 5.7223e-04, 8.5488e-04],
        [4.6351e-04, 1.4808e-03, 2.9495e-04],
        [8.7523e-04, 1.3780e-03, 3.0629e-04],
        [6.3731e-04, 2.4930e-04, 1.7746e-03],
        [3.2246e-04, 1.9776e-04, 2.1442e-04],
        [7.1680e-04, 6.2197e-04, 1.5623e-04],
        [2.6057e-04, 2.5394e-03, 5.9072e-05],
        [6.0118e-04, 6.0374e-04, 3.0296e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0015],
        [0.0017],
        [0.0005],
        [0.0010],
        [0.0002],
        [0.0005],
        [0.0003],
        [0.0027],
        [0.0011],
        [0.0003],
        [0.0015],
        [0.0003],
        [0.0002],
        [0.0028],
        [0.0006]], device='cuda:0')/tensor([[0.0002, 0.0015, 0.0017, 0.0005, 0.0010, 0.0002, 0.0005, 0.0003, 0.0027,
         0.0011, 0.0003, 0.0015, 0.0003, 0.0002, 0.0028, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.8683e-05],
        [2.9873e-03],
        [2.9884e-03],
        [1.5741e-03],
        [1.5236e-03],
        [3.0023e-05],
        [7.1386e-04],
        [2.3152e-04],
        [1.5059e-03],
        [3.0934e-04],
        [2.2780e-04],
        [9.3656e-03],
        [4.8573e-05],
        [1.7755e-04],
        [2.3202e-03],
        [6.4500e-04]], device='cuda:0')/tensor([[7.8683e-05, 2.9873e-03, 2.9884e-03, 1.5741e-03, 1.5236e-03, 3.0023e-05,
         7.1386e-04, 2.3152e-04, 1.5059e-03, 3.0934e-04, 2.2780e-04, 9.3656e-03,
         4.8573e-05, 1.7755e-04, 2.3202e-03, 6.4500e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.1258e-05],
        [3.1782e-04],
        [9.4749e-04],
        [7.3293e-05],
        [2.3783e-04],
        [7.5630e-05],
        [1.2325e-04],
        [4.6249e-04],
        [2.5758e-04],
        [1.9872e-04],
        [1.3333e-04],
        [2.6990e-04],
        [1.6452e-04],
        [1.0716e-04],
        [6.2487e-04],
        [2.6695e-04]], device='cuda:0')/tensor([[8.1258e-05, 3.1782e-04, 9.4749e-04, 7.3293e-05, 2.3783e-04, 7.5630e-05,
         1.2325e-04, 4.6249e-04, 2.5758e-04, 1.9872e-04, 1.3333e-04, 2.6990e-04,
         1.6452e-04, 1.0716e-04, 6.2487e-04, 2.6695e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7053e-04, 7.8683e-05, 8.1258e-05],
        [1.4683e-03, 2.9873e-03, 3.1782e-04],
        [1.6856e-03, 2.9884e-03, 9.4749e-04],
        [5.4444e-04, 1.5741e-03, 7.3293e-05],
        [9.9745e-04, 1.5236e-03, 2.3783e-04],
        [1.5770e-04, 3.0023e-05, 7.5630e-05],
        [4.5351e-04, 7.1386e-04, 1.2325e-04],
        [3.3814e-04, 2.3152e-04, 4.6249e-04],
        [2.6786e-03, 1.5059e-03, 2.5758e-04],
        [1.0833e-03, 3.0934e-04, 1.9872e-04],
        [2.9980e-04, 2.2780e-04, 1.3333e-04],
        [1.5114e-03, 9.3656e-03, 2.6990e-04],
        [2.9510e-04, 4.8573e-05, 1.6452e-04],
        [1.9596e-04, 1.7755e-04, 1.0716e-04],
        [2.8333e-03, 2.3202e-03, 6.2487e-04],
        [5.6604e-04, 6.4500e-04, 2.6695e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.4870e-03],
        [5.4127e-04],
        [1.0367e-03],
        [5.9414e-04],
        [3.5851e-04],
        [4.3674e-04],
        [9.1271e-05],
        [1.5313e-03],
        [1.6062e-04],
        [7.1650e-04],
        [1.0155e-03],
        [3.7764e-04],
        [2.7622e-04],
        [1.1240e-03],
        [1.5521e-04],
        [6.1277e-04]], device='cuda:0')/tensor([[1.4870e-03, 5.4127e-04, 1.0367e-03, 5.9414e-04, 3.5851e-04, 4.3674e-04,
         9.1271e-05, 1.5313e-03, 1.6062e-04, 7.1650e-04, 1.0155e-03, 3.7764e-04,
         2.7622e-04, 1.1240e-03, 1.5521e-04, 6.1277e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1113e-03],
        [2.7391e-04],
        [5.7539e-04],
        [1.1695e-03],
        [2.5692e-04],
        [6.8723e-04],
        [3.1352e-05],
        [6.9291e-05],
        [1.7283e-04],
        [1.4821e-03],
        [1.2738e-03],
        [2.9528e-04],
        [5.6887e-05],
        [4.2758e-04],
        [1.7754e-05],
        [1.3881e-03]], device='cuda:0')/tensor([[1.1113e-03, 2.7391e-04, 5.7539e-04, 1.1695e-03, 2.5692e-04, 6.8723e-04,
         3.1352e-05, 6.9291e-05, 1.7283e-04, 1.4821e-03, 1.2738e-03, 2.9528e-04,
         5.6887e-05, 4.2758e-04, 1.7754e-05, 1.3881e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1769e-04],
        [9.0091e-05],
        [1.3075e-04],
        [2.3206e-04],
        [2.1652e-04],
        [5.6867e-05],
        [3.3975e-05],
        [2.7210e-04],
        [1.2401e-04],
        [3.4767e-04],
        [4.1554e-04],
        [1.5819e-04],
        [2.9973e-04],
        [2.2323e-04],
        [2.6746e-04],
        [3.3803e-04]], device='cuda:0')/tensor([[1.1769e-04, 9.0091e-05, 1.3075e-04, 2.3206e-04, 2.1652e-04, 5.6867e-05,
         3.3975e-05, 2.7210e-04, 1.2401e-04, 3.4767e-04, 4.1554e-04, 1.5819e-04,
         2.9973e-04, 2.2323e-04, 2.6746e-04, 3.3803e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.4870e-03, 1.1113e-03, 1.1769e-04],
        [5.4127e-04, 2.7391e-04, 9.0091e-05],
        [1.0367e-03, 5.7539e-04, 1.3075e-04],
        [5.9414e-04, 1.1695e-03, 2.3206e-04],
        [3.5851e-04, 2.5692e-04, 2.1652e-04],
        [4.3674e-04, 6.8723e-04, 5.6867e-05],
        [9.1271e-05, 3.1352e-05, 3.3975e-05],
        [1.5313e-03, 6.9291e-05, 2.7210e-04],
        [1.6062e-04, 1.7283e-04, 1.2401e-04],
        [7.1650e-04, 1.4821e-03, 3.4767e-04],
        [1.0155e-03, 1.2738e-03, 4.1554e-04],
        [3.7764e-04, 2.9528e-04, 1.5819e-04],
        [2.7622e-04, 5.6887e-05, 2.9973e-04],
        [1.1240e-03, 4.2758e-04, 2.2323e-04],
        [1.5521e-04, 1.7754e-05, 2.6746e-04],
        [6.1277e-04, 1.3881e-03, 3.3803e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0013],
        [0.0006],
        [0.0010],
        [0.0015],
        [0.0012],
        [0.0001],
        [0.0007],
        [0.0002],
        [0.0019],
        [0.0020],
        [0.0005],
        [0.0005],
        [0.0015],
        [0.0004],
        [0.0006],
        [0.0009]], device='cuda:0')/tensor([[0.0013, 0.0006, 0.0010, 0.0015, 0.0012, 0.0001, 0.0007, 0.0002, 0.0019,
         0.0020, 0.0005, 0.0005, 0.0015, 0.0004, 0.0006, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0205e-04],
        [1.2504e-03],
        [3.3289e-03],
        [1.2587e-03],
        [6.9845e-04],
        [2.2670e-05],
        [6.7802e-05],
        [2.8115e-05],
        [4.0794e-03],
        [1.8742e-03],
        [4.8318e-04],
        [5.7858e-04],
        [1.3031e-03],
        [3.5072e-04],
        [2.5967e-03],
        [7.8301e-03]], device='cuda:0')/tensor([[2.0205e-04, 1.2504e-03, 3.3289e-03, 1.2587e-03, 6.9845e-04, 2.2670e-05,
         6.7802e-05, 2.8115e-05, 4.0794e-03, 1.8742e-03, 4.8318e-04, 5.7858e-04,
         1.3031e-03, 3.5072e-04, 2.5967e-03, 7.8301e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.7812e-04],
        [1.1514e-04],
        [3.5699e-04],
        [4.6982e-04],
        [2.1587e-04],
        [3.0005e-04],
        [4.5621e-04],
        [8.5946e-05],
        [6.3851e-04],
        [2.4211e-04],
        [2.8748e-04],
        [2.2136e-04],
        [1.0736e-04],
        [1.9116e-04],
        [3.5892e-04],
        [1.4390e-04]], device='cuda:0')/tensor([[6.7812e-04, 1.1514e-04, 3.5699e-04, 4.6982e-04, 2.1587e-04, 3.0005e-04,
         4.5621e-04, 8.5946e-05, 6.3851e-04, 2.4211e-04, 2.8748e-04, 2.2136e-04,
         1.0736e-04, 1.9116e-04, 3.5892e-04, 1.4390e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2992e-03, 2.0205e-04, 6.7812e-04],
        [6.3161e-04, 1.2504e-03, 1.1514e-04],
        [1.0057e-03, 3.3289e-03, 3.5699e-04],
        [1.4728e-03, 1.2587e-03, 4.6982e-04],
        [1.1844e-03, 6.9845e-04, 2.1587e-04],
        [1.1154e-04, 2.2670e-05, 3.0005e-04],
        [7.2093e-04, 6.7802e-05, 4.5621e-04],
        [2.1735e-04, 2.8115e-05, 8.5946e-05],
        [1.8552e-03, 4.0794e-03, 6.3851e-04],
        [2.0297e-03, 1.8742e-03, 2.4211e-04],
        [4.8468e-04, 4.8318e-04, 2.8748e-04],
        [5.0271e-04, 5.7858e-04, 2.2136e-04],
        [1.5059e-03, 1.3031e-03, 1.0736e-04],
        [4.1410e-04, 3.5072e-04, 1.9116e-04],
        [6.3887e-04, 2.5967e-03, 3.5892e-04],
        [8.7385e-04, 7.8301e-03, 1.4390e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.9983e-03],
        [3.5086e-04],
        [3.6207e-04],
        [2.5973e-03],
        [3.3316e-04],
        [6.0984e-05],
        [8.4392e-04],
        [1.2720e-03],
        [1.2133e-03],
        [1.5739e-03],
        [1.8662e-03],
        [2.6522e-03],
        [6.1019e-04],
        [1.4655e-03],
        [4.9404e-04],
        [1.3724e-03]], device='cuda:0')/tensor([[2.9983e-03, 3.5086e-04, 3.6207e-04, 2.5973e-03, 3.3316e-04, 6.0984e-05,
         8.4392e-04, 1.2720e-03, 1.2133e-03, 1.5739e-03, 1.8662e-03, 2.6522e-03,
         6.1019e-04, 1.4655e-03, 4.9404e-04, 1.3724e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.3549e-04],
        [4.1036e-04],
        [3.0416e-04],
        [3.0625e-03],
        [9.1445e-05],
        [2.5482e-05],
        [7.2600e-04],
        [4.7753e-04],
        [9.4845e-04],
        [2.4476e-03],
        [3.1477e-03],
        [2.5689e-03],
        [7.1423e-04],
        [1.0835e-03],
        [5.1884e-04],
        [4.4014e-03]], device='cuda:0')/tensor([[8.3549e-04, 4.1036e-04, 3.0416e-04, 3.0625e-03, 9.1445e-05, 2.5482e-05,
         7.2600e-04, 4.7753e-04, 9.4845e-04, 2.4476e-03, 3.1477e-03, 2.5689e-03,
         7.1423e-04, 1.0835e-03, 5.1884e-04, 4.4014e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.7797e-04],
        [3.7413e-04],
        [1.2692e-04],
        [1.8909e-04],
        [6.6676e-05],
        [8.7823e-05],
        [2.4737e-04],
        [1.1812e-04],
        [2.7757e-04],
        [1.7827e-04],
        [2.4913e-04],
        [2.2598e-04],
        [8.8609e-05],
        [1.2157e-04],
        [3.6244e-05],
        [2.5480e-04]], device='cuda:0')/tensor([[4.7797e-04, 3.7413e-04, 1.2692e-04, 1.8909e-04, 6.6676e-05, 8.7823e-05,
         2.4737e-04, 1.1812e-04, 2.7757e-04, 1.7827e-04, 2.4913e-04, 2.2598e-04,
         8.8609e-05, 1.2157e-04, 3.6244e-05, 2.5480e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.9983e-03, 8.3549e-04, 4.7797e-04],
        [3.5086e-04, 4.1036e-04, 3.7413e-04],
        [3.6207e-04, 3.0416e-04, 1.2692e-04],
        [2.5973e-03, 3.0625e-03, 1.8909e-04],
        [3.3316e-04, 9.1445e-05, 6.6676e-05],
        [6.0984e-05, 2.5482e-05, 8.7823e-05],
        [8.4392e-04, 7.2600e-04, 2.4737e-04],
        [1.2720e-03, 4.7753e-04, 1.1812e-04],
        [1.2133e-03, 9.4845e-04, 2.7757e-04],
        [1.5739e-03, 2.4476e-03, 1.7827e-04],
        [1.8662e-03, 3.1477e-03, 2.4913e-04],
        [2.6522e-03, 2.5689e-03, 2.2598e-04],
        [6.1019e-04, 7.1423e-04, 8.8609e-05],
        [1.4655e-03, 1.0835e-03, 1.2157e-04],
        [4.9404e-04, 5.1884e-04, 3.6244e-05],
        [1.3724e-03, 4.4014e-03, 2.5480e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0034],
        [0.0005],
        [0.0014],
        [0.0004]], device='cuda:0')/tensor([[0.0034, 0.0005, 0.0014, 0.0004]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [23607] -> tensor([[2.6858e-03],
        [8.8696e-05],
        [2.0584e-03],
        [6.1620e-04]], device='cuda:0')/tensor([[2.6858e-03, 8.8696e-05, 2.0584e-03, 6.1620e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[8.4113e-04],
        [3.3246e-04],
        [1.5585e-04],
        [7.4095e-05]], device='cuda:0')/tensor([[8.4113e-04, 3.3246e-04, 1.5585e-04, 7.4095e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[3.3736e-03, 2.6858e-03, 8.4113e-04],
        [4.5166e-04, 8.8696e-05, 3.3246e-04],
        [1.4403e-03, 2.0584e-03, 1.5585e-04],
        [4.3006e-04, 6.1620e-04, 7.4095e-05]], device='cuda:0')
acc:  0.2803030303030303
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 0 and batchsize 16: 0:01:02.178056
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI rare_synonyms 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 367.93it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0002],
        [0.0001],
        [0.0011],
        [0.0007],
        [0.0010],
        [0.0002],
        [0.0004],
        [0.0003],
        [0.0007],
        [0.0005],
        [0.0005],
        [0.0005],
        [0.0006],
        [0.0010],
        [0.0010]], device='cuda:0')/tensor([[0.0004, 0.0002, 0.0001, 0.0011, 0.0007, 0.0010, 0.0002, 0.0004, 0.0003,
         0.0007, 0.0005, 0.0005, 0.0005, 0.0006, 0.0010, 0.0010]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.8386e-04],
        [2.3711e-04],
        [4.0344e-04],
        [8.2338e-04],
        [5.6288e-04],
        [1.8731e-03],
        [1.6715e-04],
        [6.2300e-04],
        [3.2633e-04],
        [3.3470e-04],
        [3.2825e-04],
        [8.6971e-04],
        [2.7897e-05],
        [1.3017e-03],
        [9.2451e-04],
        [1.1953e-03]], device='cuda:0')/tensor([[5.8386e-04, 2.3711e-04, 4.0344e-04, 8.2338e-04, 5.6288e-04, 1.8731e-03,
         1.6715e-04, 6.2300e-04, 3.2633e-04, 3.3470e-04, 3.2825e-04, 8.6971e-04,
         2.7897e-05, 1.3017e-03, 9.2451e-04, 1.1953e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.5480e-05],
        [6.4681e-05],
        [3.2715e-05],
        [1.2565e-04],
        [3.0794e-05],
        [2.2088e-04],
        [6.8939e-05],
        [5.6798e-05],
        [1.4444e-04],
        [7.5755e-05],
        [5.6951e-05],
        [3.2038e-04],
        [6.6656e-05],
        [7.2924e-04],
        [8.3584e-05],
        [1.4809e-04]], device='cuda:0')/tensor([[6.5480e-05, 6.4681e-05, 3.2715e-05, 1.2565e-04, 3.0794e-05, 2.2088e-04,
         6.8939e-05, 5.6798e-05, 1.4444e-04, 7.5755e-05, 5.6951e-05, 3.2038e-04,
         6.6656e-05, 7.2924e-04, 8.3584e-05, 1.4809e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.0842e-04, 5.8386e-04, 6.5480e-05],
        [2.4456e-04, 2.3711e-04, 6.4681e-05],
        [1.4110e-04, 4.0344e-04, 3.2715e-05],
        [1.1272e-03, 8.2338e-04, 1.2565e-04],
        [6.7956e-04, 5.6288e-04, 3.0794e-05],
        [9.9200e-04, 1.8731e-03, 2.2088e-04],
        [1.8961e-04, 1.6715e-04, 6.8939e-05],
        [4.0724e-04, 6.2300e-04, 5.6798e-05],
        [3.0921e-04, 3.2633e-04, 1.4444e-04],
        [7.0748e-04, 3.3470e-04, 7.5755e-05],
        [5.2177e-04, 3.2825e-04, 5.6951e-05],
        [5.1079e-04, 8.6971e-04, 3.2038e-04],
        [5.2248e-04, 2.7897e-05, 6.6656e-05],
        [5.9449e-04, 1.3017e-03, 7.2924e-04],
        [1.0048e-03, 9.2451e-04, 8.3584e-05],
        [9.5943e-04, 1.1953e-03, 1.4809e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0011],
        [0.0010],
        [0.0009],
        [0.0002],
        [0.0004],
        [0.0020],
        [0.0011],
        [0.0010],
        [0.0008],
        [0.0036],
        [0.0001],
        [0.0011],
        [0.0022],
        [0.0014],
        [0.0005]], device='cuda:0')/tensor([[0.0002, 0.0011, 0.0010, 0.0009, 0.0002, 0.0004, 0.0020, 0.0011, 0.0010,
         0.0008, 0.0036, 0.0001, 0.0011, 0.0022, 0.0014, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.3401e-05],
        [5.8156e-04],
        [1.8307e-04],
        [2.6017e-04],
        [9.3725e-05],
        [6.7987e-05],
        [7.7746e-04],
        [1.3309e-03],
        [1.6176e-03],
        [2.3840e-04],
        [3.2264e-03],
        [5.6354e-04],
        [3.5075e-03],
        [6.3241e-04],
        [6.9777e-03],
        [2.6562e-04]], device='cuda:0')/tensor([[7.3401e-05, 5.8156e-04, 1.8307e-04, 2.6017e-04, 9.3725e-05, 6.7987e-05,
         7.7746e-04, 1.3309e-03, 1.6176e-03, 2.3840e-04, 3.2264e-03, 5.6354e-04,
         3.5075e-03, 6.3241e-04, 6.9777e-03, 2.6562e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0741e-05],
        [5.6553e-05],
        [9.2969e-05],
        [9.6002e-05],
        [1.3857e-05],
        [3.4377e-04],
        [5.0068e-05],
        [8.6105e-05],
        [1.9312e-04],
        [1.1377e-04],
        [2.0698e-04],
        [5.6511e-05],
        [2.5051e-04],
        [1.3136e-04],
        [1.1586e-03],
        [1.1437e-04]], device='cuda:0')/tensor([[2.0741e-05, 5.6553e-05, 9.2969e-05, 9.6002e-05, 1.3857e-05, 3.4377e-04,
         5.0068e-05, 8.6105e-05, 1.9312e-04, 1.1377e-04, 2.0698e-04, 5.6511e-05,
         2.5051e-04, 1.3136e-04, 1.1586e-03, 1.1437e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.0370e-04, 7.3401e-05, 2.0741e-05],
        [1.1104e-03, 5.8156e-04, 5.6553e-05],
        [9.5565e-04, 1.8307e-04, 9.2969e-05],
        [9.2610e-04, 2.6017e-04, 9.6002e-05],
        [2.0597e-04, 9.3725e-05, 1.3857e-05],
        [4.2217e-04, 6.7987e-05, 3.4377e-04],
        [1.9779e-03, 7.7746e-04, 5.0068e-05],
        [1.1273e-03, 1.3309e-03, 8.6105e-05],
        [9.9413e-04, 1.6176e-03, 1.9312e-04],
        [8.4972e-04, 2.3840e-04, 1.1377e-04],
        [3.5987e-03, 3.2264e-03, 2.0698e-04],
        [1.1728e-04, 5.6354e-04, 5.6511e-05],
        [1.1082e-03, 3.5075e-03, 2.5051e-04],
        [2.2149e-03, 6.3241e-04, 1.3136e-04],
        [1.3752e-03, 6.9777e-03, 1.1586e-03],
        [5.3111e-04, 2.6562e-04, 1.1437e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.9117e-04],
        [2.5263e-04],
        [1.0349e-03],
        [5.4686e-04],
        [7.0190e-04],
        [6.3768e-04],
        [1.4573e-03],
        [3.0763e-03],
        [1.4907e-03],
        [8.6975e-04],
        [9.1332e-05],
        [1.0280e-03],
        [2.8274e-04],
        [1.6564e-03],
        [6.7765e-04],
        [2.2715e-04]], device='cuda:0')/tensor([[4.9117e-04, 2.5263e-04, 1.0349e-03, 5.4686e-04, 7.0190e-04, 6.3768e-04,
         1.4573e-03, 3.0763e-03, 1.4907e-03, 8.6975e-04, 9.1332e-05, 1.0280e-03,
         2.8274e-04, 1.6564e-03, 6.7765e-04, 2.2715e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0002],
        [0.0001],
        [0.0006],
        [0.0013],
        [0.0011],
        [0.0015],
        [0.0025],
        [0.0009],
        [0.0012],
        [0.0007],
        [0.0013],
        [0.0015],
        [0.0004],
        [0.0008],
        [0.0003],
        [0.0002]], device='cuda:0')/tensor([[0.0002, 0.0001, 0.0006, 0.0013, 0.0011, 0.0015, 0.0025, 0.0009, 0.0012,
         0.0007, 0.0013, 0.0015, 0.0004, 0.0008, 0.0003, 0.0002]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1611e-04],
        [3.2016e-05],
        [8.3682e-05],
        [2.6732e-04],
        [1.4993e-04],
        [2.1454e-04],
        [3.0748e-04],
        [4.9785e-04],
        [2.3893e-04],
        [5.5374e-05],
        [2.6537e-05],
        [4.6630e-04],
        [4.9937e-05],
        [5.8253e-04],
        [4.7826e-05],
        [4.7580e-05]], device='cuda:0')/tensor([[1.1611e-04, 3.2016e-05, 8.3682e-05, 2.6732e-04, 1.4993e-04, 2.1454e-04,
         3.0748e-04, 4.9785e-04, 2.3893e-04, 5.5374e-05, 2.6537e-05, 4.6630e-04,
         4.9937e-05, 5.8253e-04, 4.7826e-05, 4.7580e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.9117e-04, 1.5372e-04, 1.1611e-04],
        [2.5263e-04, 1.0635e-04, 3.2016e-05],
        [1.0349e-03, 6.0416e-04, 8.3682e-05],
        [5.4686e-04, 1.3081e-03, 2.6732e-04],
        [7.0190e-04, 1.0990e-03, 1.4993e-04],
        [6.3768e-04, 1.4849e-03, 2.1454e-04],
        [1.4573e-03, 2.5307e-03, 3.0748e-04],
        [3.0763e-03, 8.6190e-04, 4.9785e-04],
        [1.4907e-03, 1.1684e-03, 2.3893e-04],
        [8.6975e-04, 6.9527e-04, 5.5374e-05],
        [9.1332e-05, 1.3098e-03, 2.6537e-05],
        [1.0280e-03, 1.4735e-03, 4.6630e-04],
        [2.8274e-04, 4.2085e-04, 4.9937e-05],
        [1.6564e-03, 8.2983e-04, 5.8253e-04],
        [6.7765e-04, 2.7411e-04, 4.7826e-05],
        [2.2715e-04, 2.0284e-04, 4.7580e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6232e-04],
        [1.3194e-03],
        [5.9062e-04],
        [4.0497e-04],
        [4.9964e-04],
        [1.6666e-02],
        [7.6612e-04],
        [2.5735e-04],
        [7.1744e-04],
        [2.3635e-04],
        [2.5751e-04],
        [4.2151e-05],
        [1.0556e-04],
        [1.4686e-03],
        [2.2433e-03],
        [1.4826e-03]], device='cuda:0')/tensor([[2.6232e-04, 1.3194e-03, 5.9062e-04, 4.0497e-04, 4.9964e-04, 1.6666e-02,
         7.6612e-04, 2.5735e-04, 7.1744e-04, 2.3635e-04, 2.5751e-04, 4.2151e-05,
         1.0556e-04, 1.4686e-03, 2.2433e-03, 1.4826e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8129e-03],
        [1.1635e-03],
        [5.9821e-04],
        [4.3201e-04],
        [1.5427e-04],
        [8.3297e-03],
        [5.8361e-04],
        [9.2396e-04],
        [2.4882e-03],
        [1.3742e-04],
        [3.5042e-04],
        [7.6370e-04],
        [2.9623e-05],
        [3.2730e-03],
        [1.1147e-03],
        [8.4096e-04]], device='cuda:0')/tensor([[1.8129e-03, 1.1635e-03, 5.9821e-04, 4.3201e-04, 1.5427e-04, 8.3297e-03,
         5.8361e-04, 9.2396e-04, 2.4882e-03, 1.3742e-04, 3.5042e-04, 7.6370e-04,
         2.9623e-05, 3.2730e-03, 1.1147e-03, 8.4096e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.8884e-05],
        [3.9891e-05],
        [4.6984e-05],
        [2.6983e-04],
        [8.2994e-06],
        [7.0969e-04],
        [1.2600e-04],
        [2.7085e-04],
        [4.7553e-04],
        [2.1830e-05],
        [6.3941e-05],
        [4.4729e-05],
        [1.6014e-05],
        [4.3268e-04],
        [1.0144e-04],
        [6.0489e-05]], device='cuda:0')/tensor([[4.8884e-05, 3.9891e-05, 4.6984e-05, 2.6983e-04, 8.2994e-06, 7.0969e-04,
         1.2600e-04, 2.7085e-04, 4.7553e-04, 2.1830e-05, 6.3941e-05, 4.4729e-05,
         1.6014e-05, 4.3268e-04, 1.0144e-04, 6.0489e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6232e-04, 1.8129e-03, 4.8884e-05],
        [1.3194e-03, 1.1635e-03, 3.9891e-05],
        [5.9062e-04, 5.9821e-04, 4.6984e-05],
        [4.0497e-04, 4.3201e-04, 2.6983e-04],
        [4.9964e-04, 1.5427e-04, 8.2994e-06],
        [1.6666e-02, 8.3297e-03, 7.0969e-04],
        [7.6612e-04, 5.8361e-04, 1.2600e-04],
        [2.5735e-04, 9.2396e-04, 2.7085e-04],
        [7.1744e-04, 2.4882e-03, 4.7553e-04],
        [2.3635e-04, 1.3742e-04, 2.1830e-05],
        [2.5751e-04, 3.5042e-04, 6.3941e-05],
        [4.2151e-05, 7.6370e-04, 4.4729e-05],
        [1.0556e-04, 2.9623e-05, 1.6014e-05],
        [1.4686e-03, 3.2730e-03, 4.3268e-04],
        [2.2433e-03, 1.1147e-03, 1.0144e-04],
        [1.4826e-03, 8.4096e-04, 6.0489e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.8995e-05],
        [3.7490e-03],
        [4.3753e-04],
        [6.4145e-04],
        [4.0426e-04],
        [7.4137e-04],
        [5.4308e-04],
        [1.3423e-03],
        [3.1953e-04],
        [5.2659e-04],
        [1.1640e-03],
        [1.3693e-03],
        [5.8455e-04],
        [4.4542e-04],
        [1.1141e-03],
        [1.2843e-03]], device='cuda:0')/tensor([[4.8995e-05, 3.7490e-03, 4.3753e-04, 6.4145e-04, 4.0426e-04, 7.4137e-04,
         5.4308e-04, 1.3423e-03, 3.1953e-04, 5.2659e-04, 1.1640e-03, 1.3693e-03,
         5.8455e-04, 4.4542e-04, 1.1141e-03, 1.2843e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.9633e-06],
        [1.0060e-03],
        [8.8156e-04],
        [1.0017e-03],
        [6.3484e-05],
        [5.8328e-04],
        [1.3540e-05],
        [1.8372e-03],
        [6.3899e-03],
        [4.2750e-04],
        [2.7656e-04],
        [3.2264e-03],
        [4.0446e-04],
        [1.5768e-03],
        [1.2521e-02],
        [3.1517e-03]], device='cuda:0')/tensor([[6.9633e-06, 1.0060e-03, 8.8156e-04, 1.0017e-03, 6.3484e-05, 5.8328e-04,
         1.3540e-05, 1.8372e-03, 6.3899e-03, 4.2750e-04, 2.7656e-04, 3.2264e-03,
         4.0446e-04, 1.5768e-03, 1.2521e-02, 3.1517e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.2704e-06],
        [1.5191e-04],
        [1.6474e-04],
        [1.0252e-04],
        [7.6581e-05],
        [3.7844e-04],
        [1.7272e-05],
        [2.2346e-04],
        [6.8207e-05],
        [3.6554e-05],
        [8.5279e-04],
        [3.9554e-04],
        [8.0807e-05],
        [1.1632e-04],
        [1.9882e-04],
        [1.1752e-04]], device='cuda:0')/tensor([[6.2704e-06, 1.5191e-04, 1.6474e-04, 1.0252e-04, 7.6581e-05, 3.7844e-04,
         1.7272e-05, 2.2346e-04, 6.8207e-05, 3.6554e-05, 8.5279e-04, 3.9554e-04,
         8.0807e-05, 1.1632e-04, 1.9882e-04, 1.1752e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.8995e-05, 6.9633e-06, 6.2704e-06],
        [3.7490e-03, 1.0060e-03, 1.5191e-04],
        [4.3753e-04, 8.8156e-04, 1.6474e-04],
        [6.4145e-04, 1.0017e-03, 1.0252e-04],
        [4.0426e-04, 6.3484e-05, 7.6581e-05],
        [7.4137e-04, 5.8328e-04, 3.7844e-04],
        [5.4308e-04, 1.3540e-05, 1.7272e-05],
        [1.3423e-03, 1.8372e-03, 2.2346e-04],
        [3.1953e-04, 6.3899e-03, 6.8207e-05],
        [5.2659e-04, 4.2750e-04, 3.6554e-05],
        [1.1640e-03, 2.7656e-04, 8.5279e-04],
        [1.3693e-03, 3.2264e-03, 3.9554e-04],
        [5.8455e-04, 4.0446e-04, 8.0807e-05],
        [4.4542e-04, 1.5768e-03, 1.1632e-04],
        [1.1141e-03, 1.2521e-02, 1.9882e-04],
        [1.2843e-03, 3.1517e-03, 1.1752e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7198e-04],
        [6.2009e-04],
        [2.0678e-03],
        [2.0375e-04],
        [7.8743e-04],
        [2.2648e-03],
        [4.6220e-04],
        [1.9286e-03],
        [5.5665e-05],
        [1.4105e-04],
        [2.7972e-04],
        [7.9842e-04],
        [4.2985e-04],
        [5.5501e-04],
        [4.7033e-04],
        [2.1258e-03]], device='cuda:0')/tensor([[1.7198e-04, 6.2009e-04, 2.0678e-03, 2.0375e-04, 7.8743e-04, 2.2648e-03,
         4.6220e-04, 1.9286e-03, 5.5665e-05, 1.4105e-04, 2.7972e-04, 7.9842e-04,
         4.2985e-04, 5.5501e-04, 4.7033e-04, 2.1258e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.7075e-06],
        [5.7583e-04],
        [1.2131e-03],
        [1.4592e-04],
        [4.0844e-04],
        [1.5936e-03],
        [2.3996e-05],
        [8.7053e-04],
        [4.4124e-05],
        [3.1397e-05],
        [4.3656e-05],
        [2.1528e-03],
        [6.9137e-04],
        [5.4749e-04],
        [1.0393e-03],
        [4.7228e-06]], device='cuda:0')/tensor([[9.7075e-06, 5.7583e-04, 1.2131e-03, 1.4592e-04, 4.0844e-04, 1.5936e-03,
         2.3996e-05, 8.7053e-04, 4.4124e-05, 3.1397e-05, 4.3656e-05, 2.1528e-03,
         6.9137e-04, 5.4749e-04, 1.0393e-03, 4.7228e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.5995e-05],
        [1.2823e-04],
        [1.1935e-03],
        [6.1599e-05],
        [6.4869e-05],
        [7.0043e-05],
        [2.1963e-04],
        [2.4112e-04],
        [8.0875e-06],
        [1.7513e-04],
        [2.3314e-05],
        [3.7214e-04],
        [1.4067e-04],
        [1.1311e-04],
        [1.2161e-04],
        [1.2314e-05]], device='cuda:0')/tensor([[1.5995e-05, 1.2823e-04, 1.1935e-03, 6.1599e-05, 6.4869e-05, 7.0043e-05,
         2.1963e-04, 2.4112e-04, 8.0875e-06, 1.7513e-04, 2.3314e-05, 3.7214e-04,
         1.4067e-04, 1.1311e-04, 1.2161e-04, 1.2314e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7198e-04, 9.7075e-06, 1.5995e-05],
        [6.2009e-04, 5.7583e-04, 1.2823e-04],
        [2.0678e-03, 1.2131e-03, 1.1935e-03],
        [2.0375e-04, 1.4592e-04, 6.1599e-05],
        [7.8743e-04, 4.0844e-04, 6.4869e-05],
        [2.2648e-03, 1.5936e-03, 7.0043e-05],
        [4.6220e-04, 2.3996e-05, 2.1963e-04],
        [1.9286e-03, 8.7053e-04, 2.4112e-04],
        [5.5665e-05, 4.4124e-05, 8.0875e-06],
        [1.4105e-04, 3.1397e-05, 1.7513e-04],
        [2.7972e-04, 4.3656e-05, 2.3314e-05],
        [7.9842e-04, 2.1528e-03, 3.7214e-04],
        [4.2985e-04, 6.9137e-04, 1.4067e-04],
        [5.5501e-04, 5.4749e-04, 1.1311e-04],
        [4.7033e-04, 1.0393e-03, 1.2161e-04],
        [2.1258e-03, 4.7228e-06, 1.2314e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0009],
        [0.0001],
        [0.0006],
        [0.0002],
        [0.0014],
        [0.0011],
        [0.0004],
        [0.0003],
        [0.0004],
        [0.0028],
        [0.0003],
        [0.0005],
        [0.0013],
        [0.0004],
        [0.0003],
        [0.0016]], device='cuda:0')/tensor([[0.0009, 0.0001, 0.0006, 0.0002, 0.0014, 0.0011, 0.0004, 0.0003, 0.0004,
         0.0028, 0.0003, 0.0005, 0.0013, 0.0004, 0.0003, 0.0016]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8318e-03],
        [1.3328e-05],
        [5.2380e-05],
        [7.6986e-05],
        [6.4440e-04],
        [1.2814e-04],
        [6.4966e-04],
        [1.2504e-04],
        [9.0554e-04],
        [1.9153e-03],
        [1.1205e-03],
        [1.6408e-03],
        [7.1154e-04],
        [5.4855e-04],
        [5.8440e-04],
        [2.6521e-03]], device='cuda:0')/tensor([[1.8318e-03, 1.3328e-05, 5.2380e-05, 7.6986e-05, 6.4440e-04, 1.2814e-04,
         6.4966e-04, 1.2504e-04, 9.0554e-04, 1.9153e-03, 1.1205e-03, 1.6408e-03,
         7.1154e-04, 5.4855e-04, 5.8440e-04, 2.6521e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7749e-03],
        [5.0140e-06],
        [2.2763e-04],
        [5.5053e-05],
        [1.4717e-04],
        [3.6136e-04],
        [1.4079e-04],
        [3.0324e-05],
        [1.3721e-04],
        [4.5806e-04],
        [2.0070e-04],
        [1.9319e-04],
        [1.6721e-04],
        [2.1262e-04],
        [4.5398e-05],
        [1.7013e-04]], device='cuda:0')/tensor([[1.7749e-03, 5.0140e-06, 2.2763e-04, 5.5053e-05, 1.4717e-04, 3.6136e-04,
         1.4079e-04, 3.0324e-05, 1.3721e-04, 4.5806e-04, 2.0070e-04, 1.9319e-04,
         1.6721e-04, 2.1262e-04, 4.5398e-05, 1.7013e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.9628e-04, 1.8318e-03, 1.7749e-03],
        [1.1766e-04, 1.3328e-05, 5.0140e-06],
        [6.0172e-04, 5.2380e-05, 2.2763e-04],
        [1.9236e-04, 7.6986e-05, 5.5053e-05],
        [1.3692e-03, 6.4440e-04, 1.4717e-04],
        [1.1300e-03, 1.2814e-04, 3.6136e-04],
        [4.4474e-04, 6.4966e-04, 1.4079e-04],
        [2.6451e-04, 1.2504e-04, 3.0324e-05],
        [3.9779e-04, 9.0554e-04, 1.3721e-04],
        [2.7838e-03, 1.9153e-03, 4.5806e-04],
        [2.6074e-04, 1.1205e-03, 2.0070e-04],
        [4.8237e-04, 1.6408e-03, 1.9319e-04],
        [1.2973e-03, 7.1154e-04, 1.6721e-04],
        [4.3905e-04, 5.4855e-04, 2.1262e-04],
        [3.4686e-04, 5.8440e-04, 4.5398e-05],
        [1.5737e-03, 2.6521e-03, 1.7013e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.1557e-04],
        [5.1167e-04],
        [1.5158e-03],
        [8.8350e-04],
        [7.5931e-04],
        [3.9434e-04],
        [6.4569e-04],
        [2.1989e-04],
        [4.2586e-04],
        [7.1956e-04],
        [7.5740e-04],
        [9.5887e-04],
        [4.4609e-05],
        [3.1679e-04],
        [2.0690e-03],
        [3.4790e-04]], device='cuda:0')/tensor([[4.1557e-04, 5.1167e-04, 1.5158e-03, 8.8350e-04, 7.5931e-04, 3.9434e-04,
         6.4569e-04, 2.1989e-04, 4.2586e-04, 7.1956e-04, 7.5740e-04, 9.5887e-04,
         4.4609e-05, 3.1679e-04, 2.0690e-03, 3.4790e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0012],
        [0.0002],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0009],
        [0.0003],
        [0.0002],
        [0.0028],
        [0.0008],
        [0.0003],
        [0.0002],
        [0.0005],
        [0.0012],
        [0.0004]], device='cuda:0')/tensor([[0.0012, 0.0002, 0.0003, 0.0002, 0.0004, 0.0005, 0.0009, 0.0003, 0.0002,
         0.0028, 0.0008, 0.0003, 0.0002, 0.0005, 0.0012, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.8637e-04],
        [5.9784e-04],
        [1.0963e-04],
        [1.3751e-04],
        [9.0125e-05],
        [5.1376e-04],
        [3.1048e-05],
        [3.0804e-04],
        [3.2131e-04],
        [1.7915e-04],
        [3.6390e-04],
        [9.7518e-05],
        [2.0823e-05],
        [1.2139e-04],
        [9.6795e-05],
        [2.7773e-05]], device='cuda:0')/tensor([[2.8637e-04, 5.9784e-04, 1.0963e-04, 1.3751e-04, 9.0125e-05, 5.1376e-04,
         3.1048e-05, 3.0804e-04, 3.2131e-04, 1.7915e-04, 3.6390e-04, 9.7518e-05,
         2.0823e-05, 1.2139e-04, 9.6795e-05, 2.7773e-05]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[4.1557e-04, 1.1542e-03, 2.8637e-04],
        [5.1167e-04, 1.5682e-04, 5.9784e-04],
        [1.5158e-03, 2.9784e-04, 1.0963e-04],
        [8.8350e-04, 2.4139e-04, 1.3751e-04],
        [7.5931e-04, 3.9451e-04, 9.0125e-05],
        [3.9434e-04, 5.2773e-04, 5.1376e-04],
        [6.4569e-04, 9.2387e-04, 3.1048e-05],
        [2.1989e-04, 3.2447e-04, 3.0804e-04],
        [4.2586e-04, 1.9724e-04, 3.2131e-04],
        [7.1956e-04, 2.8457e-03, 1.7915e-04],
        [7.5740e-04, 8.4367e-04, 3.6390e-04],
        [9.5887e-04, 3.0048e-04, 9.7518e-05],
        [4.4609e-05, 1.5289e-04, 2.0823e-05],
        [3.1679e-04, 4.9900e-04, 1.2139e-04],
        [2.0690e-03, 1.2022e-03, 9.6795e-05],
        [3.4790e-04, 3.6682e-04, 2.7773e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[1.9256e-05],
        [2.8055e-04],
        [6.7657e-04],
        [6.2012e-04]], device='cuda:0')/tensor([[1.9256e-05, 2.8055e-04, 6.7657e-04, 6.2012e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[9.3150e-04],
        [1.2517e-04],
        [5.7845e-05],
        [3.9626e-05]], device='cuda:0')/tensor([[9.3150e-04, 1.2517e-04, 5.7845e-05, 3.9626e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.9474e-06],
        [2.9788e-05],
        [9.3777e-05],
        [1.5082e-05]], device='cuda:0')/tensor([[2.9474e-06, 2.9788e-05, 9.3777e-05, 1.5082e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.9256e-05, 9.3150e-04, 2.9474e-06],
        [2.8055e-04, 1.2517e-04, 2.9788e-05],
        [6.7657e-04, 5.7845e-05, 9.3777e-05],
        [6.2012e-04, 3.9626e-05, 1.5082e-05]], device='cuda:0')
acc:  0.23484848484848486
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 1 and batchsize 16: 0:01:02.587979
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI rare_synonyms 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 370.72it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.8827e-04],
        [4.2221e-04],
        [2.5667e-04],
        [2.7652e-04],
        [3.2906e-04],
        [1.8571e-04],
        [1.2100e-04],
        [1.5997e-04],
        [8.6442e-05],
        [2.4611e-04],
        [1.7010e-04],
        [1.7102e-04],
        [6.1663e-04],
        [9.3329e-05],
        [9.9986e-05],
        [3.3140e-04]], device='cuda:0')/tensor([[5.8827e-04, 4.2221e-04, 2.5667e-04, 2.7652e-04, 3.2906e-04, 1.8571e-04,
         1.2100e-04, 1.5997e-04, 8.6442e-05, 2.4611e-04, 1.7010e-04, 1.7102e-04,
         6.1663e-04, 9.3329e-05, 9.9986e-05, 3.3140e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.6327e-03],
        [3.7058e-04],
        [1.6487e-03],
        [3.7488e-04],
        [7.7211e-04],
        [7.5365e-04],
        [3.0656e-05],
        [1.0392e-04],
        [2.8885e-05],
        [1.9000e-03],
        [9.7912e-04],
        [1.9621e-05],
        [4.3687e-04],
        [7.5586e-05],
        [1.1578e-04],
        [6.7359e-04]], device='cuda:0')/tensor([[2.6327e-03, 3.7058e-04, 1.6487e-03, 3.7488e-04, 7.7211e-04, 7.5365e-04,
         3.0656e-05, 1.0392e-04, 2.8885e-05, 1.9000e-03, 9.7912e-04, 1.9621e-05,
         4.3687e-04, 7.5586e-05, 1.1578e-04, 6.7359e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2105e-04],
        [4.6662e-04],
        [4.2084e-05],
        [3.2677e-05],
        [3.6266e-04],
        [1.0841e-04],
        [1.4876e-05],
        [3.4545e-05],
        [1.2829e-05],
        [1.1563e-04],
        [2.1702e-04],
        [1.1716e-04],
        [3.2897e-04],
        [1.1927e-04],
        [3.4075e-05],
        [1.0268e-04]], device='cuda:0')/tensor([[3.2105e-04, 4.6662e-04, 4.2084e-05, 3.2677e-05, 3.6266e-04, 1.0841e-04,
         1.4876e-05, 3.4545e-05, 1.2829e-05, 1.1563e-04, 2.1702e-04, 1.1716e-04,
         3.2897e-04, 1.1927e-04, 3.4075e-05, 1.0268e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8827e-04, 2.6327e-03, 3.2105e-04],
        [4.2221e-04, 3.7058e-04, 4.6662e-04],
        [2.5667e-04, 1.6487e-03, 4.2084e-05],
        [2.7652e-04, 3.7488e-04, 3.2677e-05],
        [3.2906e-04, 7.7211e-04, 3.6266e-04],
        [1.8571e-04, 7.5365e-04, 1.0841e-04],
        [1.2100e-04, 3.0656e-05, 1.4876e-05],
        [1.5997e-04, 1.0392e-04, 3.4545e-05],
        [8.6442e-05, 2.8885e-05, 1.2829e-05],
        [2.4611e-04, 1.9000e-03, 1.1563e-04],
        [1.7010e-04, 9.7912e-04, 2.1702e-04],
        [1.7102e-04, 1.9621e-05, 1.1716e-04],
        [6.1663e-04, 4.3687e-04, 3.2897e-04],
        [9.3329e-05, 7.5586e-05, 1.1927e-04],
        [9.9986e-05, 1.1578e-04, 3.4075e-05],
        [3.3140e-04, 6.7359e-04, 1.0268e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.2621e-04],
        [1.2014e-04],
        [1.3067e-05],
        [9.9986e-05],
        [4.0954e-04],
        [2.8796e-03],
        [5.7355e-05],
        [1.5837e-04],
        [2.3334e-04],
        [3.3602e-03],
        [2.7436e-05],
        [5.7101e-04],
        [6.8889e-05],
        [1.1153e-04],
        [2.1536e-04],
        [7.2538e-04]], device='cuda:0')/tensor([[3.2621e-04, 1.2014e-04, 1.3067e-05, 9.9986e-05, 4.0954e-04, 2.8796e-03,
         5.7355e-05, 1.5837e-04, 2.3334e-04, 3.3602e-03, 2.7436e-05, 5.7101e-04,
         6.8889e-05, 1.1153e-04, 2.1536e-04, 7.2538e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.2036e-04],
        [4.4984e-04],
        [6.8126e-07],
        [2.4975e-04],
        [1.0512e-04],
        [3.3300e-03],
        [4.3828e-05],
        [2.7315e-03],
        [4.8091e-04],
        [1.1810e-03],
        [2.2870e-05],
        [4.9874e-04],
        [2.4192e-05],
        [1.2761e-04],
        [1.6345e-04],
        [5.8512e-04]], device='cuda:0')/tensor([[4.2036e-04, 4.4984e-04, 6.8126e-07, 2.4975e-04, 1.0512e-04, 3.3300e-03,
         4.3828e-05, 2.7315e-03, 4.8091e-04, 1.1810e-03, 2.2870e-05, 4.9874e-04,
         2.4192e-05, 1.2761e-04, 1.6345e-04, 5.8512e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7911e-04],
        [2.3042e-04],
        [1.5965e-06],
        [1.5687e-04],
        [5.9194e-04],
        [1.1223e-04],
        [2.4732e-05],
        [2.6149e-04],
        [1.7201e-04],
        [3.2994e-04],
        [7.9627e-06],
        [5.0610e-05],
        [3.6471e-05],
        [4.4436e-05],
        [1.2060e-04],
        [2.0496e-04]], device='cuda:0')/tensor([[1.7911e-04, 2.3042e-04, 1.5965e-06, 1.5687e-04, 5.9194e-04, 1.1223e-04,
         2.4732e-05, 2.6149e-04, 1.7201e-04, 3.2994e-04, 7.9627e-06, 5.0610e-05,
         3.6471e-05, 4.4436e-05, 1.2060e-04, 2.0496e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2621e-04, 4.2036e-04, 1.7911e-04],
        [1.2014e-04, 4.4984e-04, 2.3042e-04],
        [1.3067e-05, 6.8126e-07, 1.5965e-06],
        [9.9986e-05, 2.4975e-04, 1.5687e-04],
        [4.0954e-04, 1.0512e-04, 5.9194e-04],
        [2.8796e-03, 3.3300e-03, 1.1223e-04],
        [5.7355e-05, 4.3828e-05, 2.4732e-05],
        [1.5837e-04, 2.7315e-03, 2.6149e-04],
        [2.3334e-04, 4.8091e-04, 1.7201e-04],
        [3.3602e-03, 1.1810e-03, 3.2994e-04],
        [2.7436e-05, 2.2870e-05, 7.9627e-06],
        [5.7101e-04, 4.9874e-04, 5.0610e-05],
        [6.8889e-05, 2.4192e-05, 3.6471e-05],
        [1.1153e-04, 1.2761e-04, 4.4436e-05],
        [2.1536e-04, 1.6345e-04, 1.2060e-04],
        [7.2538e-04, 5.8512e-04, 2.0496e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3789e-04],
        [3.3283e-04],
        [1.2375e-04],
        [7.5225e-05],
        [5.6208e-05],
        [1.7866e-03],
        [2.2255e-03],
        [6.7334e-04],
        [5.9513e-05],
        [3.2348e-04],
        [1.8179e-04],
        [5.5014e-04],
        [3.8255e-04],
        [3.2961e-04],
        [2.6433e-04],
        [3.9123e-04]], device='cuda:0')/tensor([[1.3789e-04, 3.3283e-04, 1.2375e-04, 7.5225e-05, 5.6208e-05, 1.7866e-03,
         2.2255e-03, 6.7334e-04, 5.9513e-05, 3.2348e-04, 1.8179e-04, 5.5014e-04,
         3.8255e-04, 3.2961e-04, 2.6433e-04, 3.9123e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.8629e-05],
        [1.1494e-04],
        [1.4434e-03],
        [3.8555e-05],
        [2.1750e-05],
        [1.8360e-03],
        [8.6454e-04],
        [4.4075e-04],
        [3.6807e-06],
        [5.9559e-04],
        [2.4149e-05],
        [1.1406e-03],
        [2.0064e-04],
        [4.5764e-04],
        [8.2582e-04],
        [2.6003e-03]], device='cuda:0')/tensor([[1.8629e-05, 1.1494e-04, 1.4434e-03, 3.8555e-05, 2.1750e-05, 1.8360e-03,
         8.6454e-04, 4.4075e-04, 3.6807e-06, 5.9559e-04, 2.4149e-05, 1.1406e-03,
         2.0064e-04, 4.5764e-04, 8.2582e-04, 2.6003e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8111e-05],
        [7.2228e-05],
        [2.1649e-04],
        [3.0920e-05],
        [3.2917e-05],
        [5.3674e-04],
        [3.2854e-04],
        [1.1773e-04],
        [1.0467e-05],
        [6.4718e-05],
        [4.4995e-05],
        [1.2401e-04],
        [6.4061e-05],
        [1.1408e-04],
        [1.4558e-04],
        [2.3214e-04]], device='cuda:0')/tensor([[3.8111e-05, 7.2228e-05, 2.1649e-04, 3.0920e-05, 3.2917e-05, 5.3674e-04,
         3.2854e-04, 1.1773e-04, 1.0467e-05, 6.4718e-05, 4.4995e-05, 1.2401e-04,
         6.4061e-05, 1.1408e-04, 1.4558e-04, 2.3214e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3789e-04, 1.8629e-05, 3.8111e-05],
        [3.3283e-04, 1.1494e-04, 7.2228e-05],
        [1.2375e-04, 1.4434e-03, 2.1649e-04],
        [7.5225e-05, 3.8555e-05, 3.0920e-05],
        [5.6208e-05, 2.1750e-05, 3.2917e-05],
        [1.7866e-03, 1.8360e-03, 5.3674e-04],
        [2.2255e-03, 8.6454e-04, 3.2854e-04],
        [6.7334e-04, 4.4075e-04, 1.1773e-04],
        [5.9513e-05, 3.6807e-06, 1.0467e-05],
        [3.2348e-04, 5.9559e-04, 6.4718e-05],
        [1.8179e-04, 2.4149e-05, 4.4995e-05],
        [5.5014e-04, 1.1406e-03, 1.2401e-04],
        [3.8255e-04, 2.0064e-04, 6.4061e-05],
        [3.2961e-04, 4.5764e-04, 1.1408e-04],
        [2.6433e-04, 8.2582e-04, 1.4558e-04],
        [3.9123e-04, 2.6003e-03, 2.3214e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7267e-04],
        [2.8075e-04],
        [3.3301e-04],
        [1.1659e-04],
        [3.4089e-05],
        [2.3851e-05],
        [1.1414e-04],
        [2.1732e-04],
        [2.5562e-04],
        [4.6485e-04],
        [1.2827e-04],
        [1.4983e-04],
        [4.6285e-05],
        [4.3880e-04],
        [9.3636e-04],
        [7.6567e-05]], device='cuda:0')/tensor([[1.7267e-04, 2.8075e-04, 3.3301e-04, 1.1659e-04, 3.4089e-05, 2.3851e-05,
         1.1414e-04, 2.1732e-04, 2.5562e-04, 4.6485e-04, 1.2827e-04, 1.4983e-04,
         4.6285e-05, 4.3880e-04, 9.3636e-04, 7.6567e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.9279e-04],
        [2.0824e-04],
        [6.4856e-04],
        [3.0146e-04],
        [2.6650e-06],
        [3.1996e-06],
        [1.7697e-05],
        [2.9335e-04],
        [8.2900e-05],
        [2.6910e-04],
        [1.4205e-04],
        [1.7953e-04],
        [7.5530e-06],
        [1.3411e-04],
        [4.6584e-04],
        [5.2427e-05]], device='cuda:0')/tensor([[6.9279e-04, 2.0824e-04, 6.4856e-04, 3.0146e-04, 2.6650e-06, 3.1996e-06,
         1.7697e-05, 2.9335e-04, 8.2900e-05, 2.6910e-04, 1.4205e-04, 1.7953e-04,
         7.5530e-06, 1.3411e-04, 4.6584e-04, 5.2427e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.4567e-05],
        [2.0098e-04],
        [9.8301e-05],
        [3.2524e-05],
        [5.3814e-06],
        [9.8659e-06],
        [4.1658e-06],
        [1.1525e-04],
        [3.5939e-05],
        [6.6033e-05],
        [1.0292e-04],
        [6.5569e-05],
        [9.7041e-06],
        [7.4162e-05],
        [9.7397e-05],
        [1.7863e-05]], device='cuda:0')/tensor([[4.4567e-05, 2.0098e-04, 9.8301e-05, 3.2524e-05, 5.3814e-06, 9.8659e-06,
         4.1658e-06, 1.1525e-04, 3.5939e-05, 6.6033e-05, 1.0292e-04, 6.5569e-05,
         9.7041e-06, 7.4162e-05, 9.7397e-05, 1.7863e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7267e-04, 6.9279e-04, 4.4567e-05],
        [2.8075e-04, 2.0824e-04, 2.0098e-04],
        [3.3301e-04, 6.4856e-04, 9.8301e-05],
        [1.1659e-04, 3.0146e-04, 3.2524e-05],
        [3.4089e-05, 2.6650e-06, 5.3814e-06],
        [2.3851e-05, 3.1996e-06, 9.8659e-06],
        [1.1414e-04, 1.7697e-05, 4.1658e-06],
        [2.1732e-04, 2.9335e-04, 1.1525e-04],
        [2.5562e-04, 8.2900e-05, 3.5939e-05],
        [4.6485e-04, 2.6910e-04, 6.6033e-05],
        [1.2827e-04, 1.4205e-04, 1.0292e-04],
        [1.4983e-04, 1.7953e-04, 6.5569e-05],
        [4.6285e-05, 7.5530e-06, 9.7041e-06],
        [4.3880e-04, 1.3411e-04, 7.4162e-05],
        [9.3636e-04, 4.6584e-04, 9.7397e-05],
        [7.6567e-05, 5.2427e-05, 1.7863e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.9983e-05],
        [2.5758e-04],
        [2.1346e-04],
        [9.0901e-04],
        [2.3004e-05],
        [7.0798e-04],
        [1.0885e-04],
        [1.5787e-04],
        [1.2673e-04],
        [1.6107e-04],
        [1.8971e-04],
        [1.4413e-04],
        [1.4348e-04],
        [1.1937e-05],
        [3.3350e-04],
        [6.0884e-05]], device='cuda:0')/tensor([[3.9983e-05, 2.5758e-04, 2.1346e-04, 9.0901e-04, 2.3004e-05, 7.0798e-04,
         1.0885e-04, 1.5787e-04, 1.2673e-04, 1.6107e-04, 1.8971e-04, 1.4413e-04,
         1.4348e-04, 1.1937e-05, 3.3350e-04, 6.0884e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.6807e-05],
        [3.9007e-05],
        [1.5840e-04],
        [2.3289e-03],
        [6.1530e-06],
        [6.9052e-04],
        [4.4797e-05],
        [9.9252e-05],
        [2.6891e-05],
        [3.9007e-04],
        [6.6385e-05],
        [1.1687e-04],
        [6.0337e-05],
        [9.9479e-08],
        [5.8645e-05],
        [4.3439e-05]], device='cuda:0')/tensor([[4.6807e-05, 3.9007e-05, 1.5840e-04, 2.3289e-03, 6.1530e-06, 6.9052e-04,
         4.4797e-05, 9.9252e-05, 2.6891e-05, 3.9007e-04, 6.6385e-05, 1.1687e-04,
         6.0337e-05, 9.9479e-08, 5.8645e-05, 4.3439e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.9859e-05],
        [6.3527e-06],
        [1.3425e-03],
        [1.7184e-04],
        [5.8102e-06],
        [1.5429e-04],
        [2.2617e-05],
        [4.2134e-05],
        [1.6364e-04],
        [1.9652e-04],
        [6.2835e-05],
        [2.4902e-05],
        [1.5501e-05],
        [1.7392e-06],
        [2.7706e-05],
        [6.0904e-06]], device='cuda:0')/tensor([[2.9859e-05, 6.3527e-06, 1.3425e-03, 1.7184e-04, 5.8102e-06, 1.5429e-04,
         2.2617e-05, 4.2134e-05, 1.6364e-04, 1.9652e-04, 6.2835e-05, 2.4902e-05,
         1.5501e-05, 1.7392e-06, 2.7706e-05, 6.0904e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.9983e-05, 4.6807e-05, 2.9859e-05],
        [2.5758e-04, 3.9007e-05, 6.3527e-06],
        [2.1346e-04, 1.5840e-04, 1.3425e-03],
        [9.0901e-04, 2.3289e-03, 1.7184e-04],
        [2.3004e-05, 6.1530e-06, 5.8102e-06],
        [7.0798e-04, 6.9052e-04, 1.5429e-04],
        [1.0885e-04, 4.4797e-05, 2.2617e-05],
        [1.5787e-04, 9.9252e-05, 4.2134e-05],
        [1.2673e-04, 2.6891e-05, 1.6364e-04],
        [1.6107e-04, 3.9007e-04, 1.9652e-04],
        [1.8971e-04, 6.6385e-05, 6.2835e-05],
        [1.4413e-04, 1.1687e-04, 2.4902e-05],
        [1.4348e-04, 6.0337e-05, 1.5501e-05],
        [1.1937e-05, 9.9479e-08, 1.7392e-06],
        [3.3350e-04, 5.8645e-05, 2.7706e-05],
        [6.0884e-05, 4.3439e-05, 6.0904e-06]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2073e-03],
        [6.2870e-04],
        [1.2079e-04],
        [3.8905e-04],
        [1.0100e-03],
        [6.6849e-04],
        [2.3567e-04],
        [8.3310e-05],
        [1.5168e-04],
        [9.9624e-06],
        [2.0640e-04],
        [5.4128e-04],
        [6.3362e-04],
        [3.4100e-04],
        [5.0186e-04],
        [1.2271e-04]], device='cuda:0')/tensor([[1.2073e-03, 6.2870e-04, 1.2079e-04, 3.8905e-04, 1.0100e-03, 6.6849e-04,
         2.3567e-04, 8.3310e-05, 1.5168e-04, 9.9624e-06, 2.0640e-04, 5.4128e-04,
         6.3362e-04, 3.4100e-04, 5.0186e-04, 1.2271e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4099e-03],
        [3.3101e-04],
        [2.5573e-05],
        [4.1562e-04],
        [1.7446e-04],
        [1.0548e-04],
        [9.2013e-05],
        [1.0148e-05],
        [2.2836e-05],
        [4.4202e-06],
        [6.6861e-04],
        [2.6381e-04],
        [5.5849e-04],
        [8.6200e-04],
        [2.8460e-04],
        [4.4220e-05]], device='cuda:0')/tensor([[6.4099e-03, 3.3101e-04, 2.5573e-05, 4.1562e-04, 1.7446e-04, 1.0548e-04,
         9.2013e-05, 1.0148e-05, 2.2836e-05, 4.4202e-06, 6.6861e-04, 2.6381e-04,
         5.5849e-04, 8.6200e-04, 2.8460e-04, 4.4220e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.0724e-04],
        [1.1656e-04],
        [4.6269e-05],
        [2.5032e-05],
        [5.1891e-05],
        [3.3704e-05],
        [1.0464e-05],
        [1.0130e-04],
        [9.7599e-05],
        [4.8642e-06],
        [5.1906e-04],
        [5.1415e-05],
        [1.0781e-04],
        [3.8041e-04],
        [4.1340e-05],
        [1.9547e-05]], device='cuda:0')/tensor([[2.0724e-04, 1.1656e-04, 4.6269e-05, 2.5032e-05, 5.1891e-05, 3.3704e-05,
         1.0464e-05, 1.0130e-04, 9.7599e-05, 4.8642e-06, 5.1906e-04, 5.1415e-05,
         1.0781e-04, 3.8041e-04, 4.1340e-05, 1.9547e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2073e-03, 6.4099e-03, 2.0724e-04],
        [6.2870e-04, 3.3101e-04, 1.1656e-04],
        [1.2079e-04, 2.5573e-05, 4.6269e-05],
        [3.8905e-04, 4.1562e-04, 2.5032e-05],
        [1.0100e-03, 1.7446e-04, 5.1891e-05],
        [6.6849e-04, 1.0548e-04, 3.3704e-05],
        [2.3567e-04, 9.2013e-05, 1.0464e-05],
        [8.3310e-05, 1.0148e-05, 1.0130e-04],
        [1.5168e-04, 2.2836e-05, 9.7599e-05],
        [9.9624e-06, 4.4202e-06, 4.8642e-06],
        [2.0640e-04, 6.6861e-04, 5.1906e-04],
        [5.4128e-04, 2.6381e-04, 5.1415e-05],
        [6.3362e-04, 5.5849e-04, 1.0781e-04],
        [3.4100e-04, 8.6200e-04, 3.8041e-04],
        [5.0186e-04, 2.8460e-04, 4.1340e-05],
        [1.2271e-04, 4.4220e-05, 1.9547e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.8364e-05],
        [6.0055e-05],
        [1.4348e-04],
        [2.0641e-04],
        [1.0449e-03],
        [1.2916e-04],
        [1.9955e-04],
        [1.9181e-04],
        [3.3448e-05],
        [2.8815e-04],
        [2.6013e-04],
        [2.4509e-04],
        [7.5420e-04],
        [9.4926e-04],
        [6.4499e-04],
        [6.8051e-05]], device='cuda:0')/tensor([[5.8364e-05, 6.0055e-05, 1.4348e-04, 2.0641e-04, 1.0449e-03, 1.2916e-04,
         1.9955e-04, 1.9181e-04, 3.3448e-05, 2.8815e-04, 2.6013e-04, 2.4509e-04,
         7.5420e-04, 9.4926e-04, 6.4499e-04, 6.8051e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.3569e-05],
        [8.2050e-06],
        [3.1118e-05],
        [1.4731e-04],
        [7.0899e-04],
        [9.4565e-05],
        [4.0389e-04],
        [6.5500e-05],
        [2.2435e-05],
        [1.5754e-04],
        [5.6347e-05],
        [1.2785e-04],
        [1.0704e-04],
        [2.0998e-03],
        [7.9556e-04],
        [9.9812e-04]], device='cuda:0')/tensor([[6.3569e-05, 8.2050e-06, 3.1118e-05, 1.4731e-04, 7.0899e-04, 9.4565e-05,
         4.0389e-04, 6.5500e-05, 2.2435e-05, 1.5754e-04, 5.6347e-05, 1.2785e-04,
         1.0704e-04, 2.0998e-03, 7.9556e-04, 9.9812e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.2901e-05],
        [7.3936e-06],
        [3.3127e-05],
        [4.7925e-05],
        [5.5456e-05],
        [3.2448e-04],
        [1.9145e-04],
        [1.7019e-04],
        [8.3631e-06],
        [2.5231e-05],
        [6.3984e-05],
        [7.1327e-05],
        [5.0814e-05],
        [2.3675e-04],
        [1.5516e-04],
        [3.9177e-04]], device='cuda:0')/tensor([[2.2901e-05, 7.3936e-06, 3.3127e-05, 4.7925e-05, 5.5456e-05, 3.2448e-04,
         1.9145e-04, 1.7019e-04, 8.3631e-06, 2.5231e-05, 6.3984e-05, 7.1327e-05,
         5.0814e-05, 2.3675e-04, 1.5516e-04, 3.9177e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.8364e-05, 6.3569e-05, 2.2901e-05],
        [6.0055e-05, 8.2050e-06, 7.3936e-06],
        [1.4348e-04, 3.1118e-05, 3.3127e-05],
        [2.0641e-04, 1.4731e-04, 4.7925e-05],
        [1.0449e-03, 7.0899e-04, 5.5456e-05],
        [1.2916e-04, 9.4565e-05, 3.2448e-04],
        [1.9955e-04, 4.0389e-04, 1.9145e-04],
        [1.9181e-04, 6.5500e-05, 1.7019e-04],
        [3.3448e-05, 2.2435e-05, 8.3631e-06],
        [2.8815e-04, 1.5754e-04, 2.5231e-05],
        [2.6013e-04, 5.6347e-05, 6.3984e-05],
        [2.4509e-04, 1.2785e-04, 7.1327e-05],
        [7.5420e-04, 1.0704e-04, 5.0814e-05],
        [9.4926e-04, 2.0998e-03, 2.3675e-04],
        [6.4499e-04, 7.9556e-04, 1.5516e-04],
        [6.8051e-05, 9.9812e-04, 3.9177e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.1162e-05],
        [4.8666e-06],
        [1.6146e-05],
        [9.5782e-04],
        [4.1838e-04],
        [3.7659e-04],
        [6.4541e-04],
        [5.8113e-04],
        [3.1310e-04],
        [8.1079e-06],
        [2.9232e-05],
        [2.4084e-03],
        [9.9750e-06],
        [5.4789e-06],
        [7.7092e-04],
        [3.6734e-05]], device='cuda:0')/tensor([[9.1162e-05, 4.8666e-06, 1.6146e-05, 9.5782e-04, 4.1838e-04, 3.7659e-04,
         6.4541e-04, 5.8113e-04, 3.1310e-04, 8.1079e-06, 2.9232e-05, 2.4084e-03,
         9.9750e-06, 5.4789e-06, 7.7092e-04, 3.6734e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4027e-05],
        [3.5412e-07],
        [1.2825e-06],
        [6.6078e-04],
        [4.9359e-04],
        [3.6880e-04],
        [2.4773e-04],
        [4.3563e-04],
        [1.4864e-04],
        [1.3155e-07],
        [7.2004e-06],
        [2.4916e-03],
        [1.7977e-06],
        [1.8103e-07],
        [4.2190e-04],
        [2.2155e-05]], device='cuda:0')/tensor([[6.4027e-05, 3.5412e-07, 1.2825e-06, 6.6078e-04, 4.9359e-04, 3.6880e-04,
         2.4773e-04, 4.3563e-04, 1.4864e-04, 1.3155e-07, 7.2004e-06, 2.4916e-03,
         1.7977e-06, 1.8103e-07, 4.2190e-04, 2.2155e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[5.2087e-06],
        [1.0612e-06],
        [4.1761e-05],
        [8.8166e-04],
        [3.5177e-05],
        [2.9774e-04],
        [1.0278e-04],
        [6.2746e-05],
        [3.1580e-05],
        [2.5656e-07],
        [2.0449e-05],
        [2.0735e-04],
        [2.0584e-06],
        [8.9405e-07],
        [1.9852e-04],
        [3.1832e-05]], device='cuda:0')/tensor([[5.2087e-06, 1.0612e-06, 4.1761e-05, 8.8166e-04, 3.5177e-05, 2.9774e-04,
         1.0278e-04, 6.2746e-05, 3.1580e-05, 2.5656e-07, 2.0449e-05, 2.0735e-04,
         2.0584e-06, 8.9405e-07, 1.9852e-04, 3.1832e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.1162e-05, 6.4027e-05, 5.2087e-06],
        [4.8666e-06, 3.5412e-07, 1.0612e-06],
        [1.6146e-05, 1.2825e-06, 4.1761e-05],
        [9.5782e-04, 6.6078e-04, 8.8166e-04],
        [4.1838e-04, 4.9359e-04, 3.5177e-05],
        [3.7659e-04, 3.6880e-04, 2.9774e-04],
        [6.4541e-04, 2.4773e-04, 1.0278e-04],
        [5.8113e-04, 4.3563e-04, 6.2746e-05],
        [3.1310e-04, 1.4864e-04, 3.1580e-05],
        [8.1079e-06, 1.3155e-07, 2.5656e-07],
        [2.9232e-05, 7.2004e-06, 2.0449e-05],
        [2.4084e-03, 2.4916e-03, 2.0735e-04],
        [9.9750e-06, 1.7977e-06, 2.0584e-06],
        [5.4789e-06, 1.8103e-07, 8.9405e-07],
        [7.7092e-04, 4.2190e-04, 1.9852e-04],
        [3.6734e-05, 2.2155e-05, 3.1832e-05]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[2.8502e-03],
        [6.6082e-06],
        [8.7012e-05],
        [3.7883e-04]], device='cuda:0')/tensor([[2.8502e-03, 6.6082e-06, 8.7012e-05, 3.7883e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.5626e-03],
        [1.4567e-07],
        [5.0845e-05],
        [1.0809e-03]], device='cuda:0')/tensor([[1.5626e-03, 1.4567e-07, 5.0845e-05, 1.0809e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.4257e-04],
        [1.3084e-06],
        [8.9231e-05],
        [8.4984e-04]], device='cuda:0')/tensor([[3.4257e-04, 1.3084e-06, 8.9231e-05, 8.4984e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.8502e-03, 1.5626e-03, 3.4257e-04],
        [6.6082e-06, 1.4567e-07, 1.3084e-06],
        [8.7012e-05, 5.0845e-05, 8.9231e-05],
        [3.7883e-04, 1.0809e-03, 8.4984e-04]], device='cuda:0')
acc:  0.20454545454545456
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 2 and batchsize 16: 0:01:02.290406
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI rare_synonyms 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 361.46it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0007],
        [0.0002],
        [0.0001],
        [0.0001],
        [0.0009],
        [0.0010],
        [0.0021],
        [0.0006],
        [0.0022],
        [0.0001],
        [0.0002],
        [0.0016],
        [0.0013],
        [0.0005],
        [0.0011],
        [0.0012]], device='cuda:0')/tensor([[0.0007, 0.0002, 0.0001, 0.0001, 0.0009, 0.0010, 0.0021, 0.0006, 0.0022,
         0.0001, 0.0002, 0.0016, 0.0013, 0.0005, 0.0011, 0.0012]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.2622e-03],
        [1.0637e-03],
        [1.6656e-05],
        [1.1312e-04],
        [3.3744e-03],
        [1.1075e-02],
        [8.6233e-03],
        [8.5067e-04],
        [8.4853e-03],
        [2.4010e-05],
        [2.1791e-04],
        [2.1963e-03],
        [2.3815e-03],
        [7.1334e-04],
        [6.4483e-04],
        [1.7478e-03]], device='cuda:0')/tensor([[2.2622e-03, 1.0637e-03, 1.6656e-05, 1.1312e-04, 3.3744e-03, 1.1075e-02,
         8.6233e-03, 8.5067e-04, 8.4853e-03, 2.4010e-05, 2.1791e-04, 2.1963e-03,
         2.3815e-03, 7.1334e-04, 6.4483e-04, 1.7478e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7310e-04],
        [3.0456e-06],
        [1.5844e-04],
        [9.9411e-05],
        [1.4277e-04],
        [4.5301e-04],
        [5.4278e-04],
        [3.0881e-04],
        [7.3657e-04],
        [4.0830e-05],
        [1.2506e-04],
        [1.0603e-04],
        [3.9290e-04],
        [1.2621e-04],
        [1.3471e-03],
        [1.2745e-04]], device='cuda:0')/tensor([[1.7310e-04, 3.0456e-06, 1.5844e-04, 9.9411e-05, 1.4277e-04, 4.5301e-04,
         5.4278e-04, 3.0881e-04, 7.3657e-04, 4.0830e-05, 1.2506e-04, 1.0603e-04,
         3.9290e-04, 1.2621e-04, 1.3471e-03, 1.2745e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.9377e-04, 2.2622e-03, 1.7310e-04],
        [2.1632e-04, 1.0637e-03, 3.0456e-06],
        [1.4738e-04, 1.6656e-05, 1.5844e-04],
        [1.2106e-04, 1.1312e-04, 9.9411e-05],
        [9.3537e-04, 3.3744e-03, 1.4277e-04],
        [1.0472e-03, 1.1075e-02, 4.5301e-04],
        [2.0780e-03, 8.6233e-03, 5.4278e-04],
        [6.0703e-04, 8.5067e-04, 3.0881e-04],
        [2.1885e-03, 8.4853e-03, 7.3657e-04],
        [1.0499e-04, 2.4010e-05, 4.0830e-05],
        [1.7918e-04, 2.1791e-04, 1.2506e-04],
        [1.5692e-03, 2.1963e-03, 1.0603e-04],
        [1.2913e-03, 2.3815e-03, 3.9290e-04],
        [4.9530e-04, 7.1334e-04, 1.2621e-04],
        [1.1298e-03, 6.4483e-04, 1.3471e-03],
        [1.2291e-03, 1.7478e-03, 1.2745e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0008],
        [0.0022],
        [0.0006],
        [0.0018],
        [0.0004],
        [0.0002],
        [0.0025],
        [0.0010],
        [0.0086],
        [0.0003],
        [0.0001],
        [0.0005],
        [0.0003],
        [0.0005],
        [0.0017]], device='cuda:0')/tensor([[0.0008, 0.0008, 0.0022, 0.0006, 0.0018, 0.0004, 0.0002, 0.0025, 0.0010,
         0.0086, 0.0003, 0.0001, 0.0005, 0.0003, 0.0005, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4667e-04],
        [1.8782e-03],
        [1.5502e-03],
        [2.9675e-03],
        [1.3464e-03],
        [4.6630e-05],
        [3.8322e-04],
        [2.2401e-03],
        [1.7989e-03],
        [1.0899e-02],
        [9.1748e-04],
        [2.1698e-04],
        [4.1588e-04],
        [2.6843e-05],
        [4.8177e-05],
        [2.5594e-03]], device='cuda:0')/tensor([[6.4667e-04, 1.8782e-03, 1.5502e-03, 2.9675e-03, 1.3464e-03, 4.6630e-05,
         3.8322e-04, 2.2401e-03, 1.7989e-03, 1.0899e-02, 9.1748e-04, 2.1698e-04,
         4.1588e-04, 2.6843e-05, 4.8177e-05, 2.5594e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.6640e-05],
        [4.4068e-04],
        [3.5409e-04],
        [2.9278e-04],
        [2.0480e-04],
        [5.8069e-04],
        [1.3502e-04],
        [1.1049e-04],
        [9.0120e-05],
        [1.0698e-03],
        [9.6283e-05],
        [8.7795e-05],
        [9.4612e-05],
        [2.4101e-04],
        [3.3317e-04],
        [9.4898e-05]], device='cuda:0')/tensor([[6.6640e-05, 4.4068e-04, 3.5409e-04, 2.9278e-04, 2.0480e-04, 5.8069e-04,
         1.3502e-04, 1.1049e-04, 9.0120e-05, 1.0698e-03, 9.6283e-05, 8.7795e-05,
         9.4612e-05, 2.4101e-04, 3.3317e-04, 9.4898e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.7949e-04, 6.4667e-04, 6.6640e-05],
        [8.0617e-04, 1.8782e-03, 4.4068e-04],
        [2.2266e-03, 1.5502e-03, 3.5409e-04],
        [6.4528e-04, 2.9675e-03, 2.9278e-04],
        [1.7608e-03, 1.3464e-03, 2.0480e-04],
        [4.1664e-04, 4.6630e-05, 5.8069e-04],
        [1.9788e-04, 3.8322e-04, 1.3502e-04],
        [2.5122e-03, 2.2401e-03, 1.1049e-04],
        [1.0476e-03, 1.7989e-03, 9.0120e-05],
        [8.6128e-03, 1.0899e-02, 1.0698e-03],
        [2.5750e-04, 9.1748e-04, 9.6283e-05],
        [1.2669e-04, 2.1698e-04, 8.7795e-05],
        [4.5039e-04, 4.1588e-04, 9.4612e-05],
        [2.7510e-04, 2.6843e-05, 2.4101e-04],
        [4.8641e-04, 4.8177e-05, 3.3317e-04],
        [1.7370e-03, 2.5594e-03, 9.4898e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0003],
        [0.0003],
        [0.0013],
        [0.0007],
        [0.0002],
        [0.0005],
        [0.0007],
        [0.0006],
        [0.0010],
        [0.0002],
        [0.0006],
        [0.0007],
        [0.0009],
        [0.0006],
        [0.0001],
        [0.0014]], device='cuda:0')/tensor([[0.0003, 0.0003, 0.0013, 0.0007, 0.0002, 0.0005, 0.0007, 0.0006, 0.0010,
         0.0002, 0.0006, 0.0007, 0.0009, 0.0006, 0.0001, 0.0014]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.2002e-04],
        [7.0111e-05],
        [3.6863e-03],
        [7.7179e-04],
        [6.5200e-05],
        [3.4868e-04],
        [1.6694e-03],
        [1.8507e-03],
        [2.4707e-03],
        [2.5442e-03],
        [4.4746e-03],
        [3.8586e-03],
        [1.8871e-03],
        [9.9106e-04],
        [1.5018e-05],
        [1.7992e-03]], device='cuda:0')/tensor([[4.2002e-04, 7.0111e-05, 3.6863e-03, 7.7179e-04, 6.5200e-05, 3.4868e-04,
         1.6694e-03, 1.8507e-03, 2.4707e-03, 2.5442e-03, 4.4746e-03, 3.8586e-03,
         1.8871e-03, 9.9106e-04, 1.5018e-05, 1.7992e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.8733e-05],
        [5.3140e-05],
        [8.6509e-04],
        [5.2877e-04],
        [8.1087e-04],
        [1.6975e-04],
        [3.5033e-04],
        [4.1462e-04],
        [2.8391e-04],
        [3.3121e-05],
        [5.5639e-04],
        [4.5579e-04],
        [2.6796e-04],
        [1.2343e-03],
        [5.5035e-05],
        [3.6653e-04]], device='cuda:0')/tensor([[7.8733e-05, 5.3140e-05, 8.6509e-04, 5.2877e-04, 8.1087e-04, 1.6975e-04,
         3.5033e-04, 4.1462e-04, 2.8391e-04, 3.3121e-05, 5.5639e-04, 4.5579e-04,
         2.6796e-04, 1.2343e-03, 5.5035e-05, 3.6653e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3670e-04, 4.2002e-04, 7.8733e-05],
        [3.1828e-04, 7.0111e-05, 5.3140e-05],
        [1.2926e-03, 3.6863e-03, 8.6509e-04],
        [6.5492e-04, 7.7179e-04, 5.2877e-04],
        [2.4401e-04, 6.5200e-05, 8.1087e-04],
        [4.5504e-04, 3.4868e-04, 1.6975e-04],
        [7.3245e-04, 1.6694e-03, 3.5033e-04],
        [6.3940e-04, 1.8507e-03, 4.1462e-04],
        [9.9286e-04, 2.4707e-03, 2.8391e-04],
        [1.9558e-04, 2.5442e-03, 3.3121e-05],
        [6.1364e-04, 4.4746e-03, 5.5639e-04],
        [7.0748e-04, 3.8586e-03, 4.5579e-04],
        [8.6302e-04, 1.8871e-03, 2.6796e-04],
        [5.6462e-04, 9.9106e-04, 1.2343e-03],
        [1.3321e-04, 1.5018e-05, 5.5035e-05],
        [1.3519e-03, 1.7992e-03, 3.6653e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0004],
        [0.0005],
        [0.0014],
        [0.0016],
        [0.0040],
        [0.0006],
        [0.0003],
        [0.0002],
        [0.0003],
        [0.0001],
        [0.0009],
        [0.0007]], device='cuda:0')/tensor([[0.0008, 0.0003, 0.0002, 0.0004, 0.0004, 0.0005, 0.0014, 0.0016, 0.0040,
         0.0006, 0.0003, 0.0002, 0.0003, 0.0001, 0.0009, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.1623e-03],
        [6.9790e-03],
        [1.5905e-03],
        [2.5554e-03],
        [1.2720e-03],
        [1.0768e-03],
        [5.5766e-03],
        [2.8495e-03],
        [5.5030e-03],
        [2.6097e-03],
        [1.0668e-04],
        [3.5397e-04],
        [4.3700e-03],
        [1.3708e-05],
        [3.3486e-03],
        [5.9552e-04]], device='cuda:0')/tensor([[2.1623e-03, 6.9790e-03, 1.5905e-03, 2.5554e-03, 1.2720e-03, 1.0768e-03,
         5.5766e-03, 2.8495e-03, 5.5030e-03, 2.6097e-03, 1.0668e-04, 3.5397e-04,
         4.3700e-03, 1.3708e-05, 3.3486e-03, 5.9552e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.3573e-04],
        [1.0474e-04],
        [5.8733e-04],
        [3.8212e-04],
        [2.3311e-04],
        [9.2318e-05],
        [6.0148e-04],
        [4.2429e-04],
        [1.2281e-04],
        [1.3937e-03],
        [9.1598e-04],
        [3.2411e-04],
        [2.0768e-04],
        [1.2440e-04],
        [1.8256e-04],
        [2.3177e-04]], device='cuda:0')/tensor([[6.3573e-04, 1.0474e-04, 5.8733e-04, 3.8212e-04, 2.3311e-04, 9.2318e-05,
         6.0148e-04, 4.2429e-04, 1.2281e-04, 1.3937e-03, 9.1598e-04, 3.2411e-04,
         2.0768e-04, 1.2440e-04, 1.8256e-04, 2.3177e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.6605e-04, 2.1623e-03, 6.3573e-04],
        [3.2391e-04, 6.9790e-03, 1.0474e-04],
        [2.4745e-04, 1.5905e-03, 5.8733e-04],
        [4.0883e-04, 2.5554e-03, 3.8212e-04],
        [3.9306e-04, 1.2720e-03, 2.3311e-04],
        [5.3275e-04, 1.0768e-03, 9.2318e-05],
        [1.3907e-03, 5.5766e-03, 6.0148e-04],
        [1.5882e-03, 2.8495e-03, 4.2429e-04],
        [4.0022e-03, 5.5030e-03, 1.2281e-04],
        [6.1449e-04, 2.6097e-03, 1.3937e-03],
        [2.7895e-04, 1.0668e-04, 9.1598e-04],
        [1.9662e-04, 3.5397e-04, 3.2411e-04],
        [3.1108e-04, 4.3700e-03, 2.0768e-04],
        [1.1955e-04, 1.3708e-05, 1.2440e-04],
        [9.2950e-04, 3.3486e-03, 1.8256e-04],
        [7.3947e-04, 5.9552e-04, 2.3177e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.1872e-04],
        [1.0896e-03],
        [1.4353e-04],
        [2.1998e-03],
        [7.7260e-04],
        [6.3965e-04],
        [5.3093e-04],
        [3.1100e-04],
        [1.2864e-03],
        [1.2496e-03],
        [8.7130e-04],
        [1.0250e-03],
        [5.0913e-04],
        [8.0580e-05],
        [1.3877e-03],
        [1.1176e-03]], device='cuda:0')/tensor([[8.1872e-04, 1.0896e-03, 1.4353e-04, 2.1998e-03, 7.7260e-04, 6.3965e-04,
         5.3093e-04, 3.1100e-04, 1.2864e-03, 1.2496e-03, 8.7130e-04, 1.0250e-03,
         5.0913e-04, 8.0580e-05, 1.3877e-03, 1.1176e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.5713e-04],
        [1.6401e-03],
        [1.8329e-04],
        [1.7585e-02],
        [9.5389e-04],
        [3.7824e-04],
        [1.2194e-03],
        [7.2040e-04],
        [9.6163e-04],
        [3.0268e-04],
        [1.7027e-03],
        [5.7520e-04],
        [1.6302e-05],
        [4.2923e-05],
        [1.3949e-03],
        [1.3246e-03]], device='cuda:0')/tensor([[8.5713e-04, 1.6401e-03, 1.8329e-04, 1.7585e-02, 9.5389e-04, 3.7824e-04,
         1.2194e-03, 7.2040e-04, 9.6163e-04, 3.0268e-04, 1.7027e-03, 5.7520e-04,
         1.6302e-05, 4.2923e-05, 1.3949e-03, 1.3246e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6387e-04],
        [8.7277e-05],
        [9.2105e-05],
        [2.6986e-04],
        [6.3344e-05],
        [1.7124e-04],
        [1.4592e-04],
        [5.1604e-05],
        [1.1488e-04],
        [1.2681e-04],
        [4.3752e-04],
        [1.9389e-04],
        [1.2258e-04],
        [5.7228e-05],
        [2.1097e-04],
        [3.3057e-04]], device='cuda:0')/tensor([[5.6387e-04, 8.7277e-05, 9.2105e-05, 2.6986e-04, 6.3344e-05, 1.7124e-04,
         1.4592e-04, 5.1604e-05, 1.1488e-04, 1.2681e-04, 4.3752e-04, 1.9389e-04,
         1.2258e-04, 5.7228e-05, 2.1097e-04, 3.3057e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.1872e-04, 8.5713e-04, 5.6387e-04],
        [1.0896e-03, 1.6401e-03, 8.7277e-05],
        [1.4353e-04, 1.8329e-04, 9.2105e-05],
        [2.1998e-03, 1.7585e-02, 2.6986e-04],
        [7.7260e-04, 9.5389e-04, 6.3344e-05],
        [6.3965e-04, 3.7824e-04, 1.7124e-04],
        [5.3093e-04, 1.2194e-03, 1.4592e-04],
        [3.1100e-04, 7.2040e-04, 5.1604e-05],
        [1.2864e-03, 9.6163e-04, 1.1488e-04],
        [1.2496e-03, 3.0268e-04, 1.2681e-04],
        [8.7130e-04, 1.7027e-03, 4.3752e-04],
        [1.0250e-03, 5.7520e-04, 1.9389e-04],
        [5.0913e-04, 1.6302e-05, 1.2258e-04],
        [8.0580e-05, 4.2923e-05, 5.7228e-05],
        [1.3877e-03, 1.3949e-03, 2.1097e-04],
        [1.1176e-03, 1.3246e-03, 3.3057e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0008],
        [0.0002],
        [0.0004],
        [0.0017],
        [0.0010],
        [0.0005],
        [0.0015],
        [0.0002],
        [0.0004],
        [0.0025],
        [0.0025],
        [0.0005],
        [0.0031],
        [0.0006],
        [0.0008],
        [0.0018]], device='cuda:0')/tensor([[0.0008, 0.0002, 0.0004, 0.0017, 0.0010, 0.0005, 0.0015, 0.0002, 0.0004,
         0.0025, 0.0025, 0.0005, 0.0031, 0.0006, 0.0008, 0.0018]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.1422e-04],
        [7.4728e-05],
        [1.6683e-03],
        [5.0087e-03],
        [1.9994e-03],
        [5.2501e-04],
        [1.4143e-03],
        [1.1768e-04],
        [8.5890e-04],
        [1.9332e-03],
        [3.6265e-03],
        [7.7561e-03],
        [2.1535e-03],
        [7.0337e-04],
        [2.3063e-03],
        [3.9077e-03]], device='cuda:0')/tensor([[6.1422e-04, 7.4728e-05, 1.6683e-03, 5.0087e-03, 1.9994e-03, 5.2501e-04,
         1.4143e-03, 1.1768e-04, 8.5890e-04, 1.9332e-03, 3.6265e-03, 7.7561e-03,
         2.1535e-03, 7.0337e-04, 2.3063e-03, 3.9077e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3361e-04],
        [2.2158e-04],
        [2.4311e-04],
        [2.8364e-04],
        [2.3678e-04],
        [1.2916e-04],
        [8.2211e-04],
        [1.9730e-04],
        [2.0986e-05],
        [1.7916e-04],
        [7.8104e-04],
        [5.3833e-05],
        [4.9237e-04],
        [1.9392e-04],
        [9.0979e-05],
        [5.6092e-04]], device='cuda:0')/tensor([[1.3361e-04, 2.2158e-04, 2.4311e-04, 2.8364e-04, 2.3678e-04, 1.2916e-04,
         8.2211e-04, 1.9730e-04, 2.0986e-05, 1.7916e-04, 7.8104e-04, 5.3833e-05,
         4.9237e-04, 1.9392e-04, 9.0979e-05, 5.6092e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.3731e-04, 6.1422e-04, 1.3361e-04],
        [2.1267e-04, 7.4728e-05, 2.2158e-04],
        [3.8379e-04, 1.6683e-03, 2.4311e-04],
        [1.6766e-03, 5.0087e-03, 2.8364e-04],
        [9.8215e-04, 1.9994e-03, 2.3678e-04],
        [4.6092e-04, 5.2501e-04, 1.2916e-04],
        [1.4658e-03, 1.4143e-03, 8.2211e-04],
        [2.1926e-04, 1.1768e-04, 1.9730e-04],
        [4.0541e-04, 8.5890e-04, 2.0986e-05],
        [2.5021e-03, 1.9332e-03, 1.7916e-04],
        [2.4639e-03, 3.6265e-03, 7.8104e-04],
        [4.6702e-04, 7.7561e-03, 5.3833e-05],
        [3.1193e-03, 2.1535e-03, 4.9237e-04],
        [6.0422e-04, 7.0337e-04, 1.9392e-04],
        [8.4217e-04, 2.3063e-03, 9.0979e-05],
        [1.7845e-03, 3.9077e-03, 5.6092e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0010],
        [0.0009],
        [0.0002],
        [0.0009],
        [0.0009],
        [0.0014],
        [0.0004],
        [0.0006],
        [0.0005],
        [0.0001],
        [0.0006],
        [0.0008],
        [0.0018],
        [0.0003],
        [0.0004]], device='cuda:0')/tensor([[0.0004, 0.0010, 0.0009, 0.0002, 0.0009, 0.0009, 0.0014, 0.0004, 0.0006,
         0.0005, 0.0001, 0.0006, 0.0008, 0.0018, 0.0003, 0.0004]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.2346e-03],
        [6.2577e-04],
        [2.0588e-03],
        [1.6605e-05],
        [1.4628e-03],
        [4.8725e-03],
        [1.8900e-03],
        [8.9003e-04],
        [1.0971e-03],
        [9.6529e-04],
        [5.5555e-05],
        [9.1275e-04],
        [4.1884e-04],
        [1.8397e-03],
        [3.6774e-04],
        [7.8549e-05]], device='cuda:0')/tensor([[3.2346e-03, 6.2577e-04, 2.0588e-03, 1.6605e-05, 1.4628e-03, 4.8725e-03,
         1.8900e-03, 8.9003e-04, 1.0971e-03, 9.6529e-04, 5.5555e-05, 9.1275e-04,
         4.1884e-04, 1.8397e-03, 3.6774e-04, 7.8549e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.1486e-05],
        [4.2796e-05],
        [7.1379e-04],
        [5.3943e-05],
        [3.9033e-04],
        [5.4719e-05],
        [3.5251e-04],
        [1.5066e-04],
        [3.0694e-04],
        [4.8436e-04],
        [5.0998e-05],
        [6.1082e-05],
        [1.6477e-04],
        [5.0158e-04],
        [1.5143e-04],
        [7.8530e-04]], device='cuda:0')/tensor([[5.1486e-05, 4.2796e-05, 7.1379e-04, 5.3943e-05, 3.9033e-04, 5.4719e-05,
         3.5251e-04, 1.5066e-04, 3.0694e-04, 4.8436e-04, 5.0998e-05, 6.1082e-05,
         1.6477e-04, 5.0158e-04, 1.5143e-04, 7.8530e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.8113e-04, 3.2346e-03, 5.1486e-05],
        [1.0337e-03, 6.2577e-04, 4.2796e-05],
        [9.2691e-04, 2.0588e-03, 7.1379e-04],
        [1.8484e-04, 1.6605e-05, 5.3943e-05],
        [9.1939e-04, 1.4628e-03, 3.9033e-04],
        [8.9171e-04, 4.8725e-03, 5.4719e-05],
        [1.4409e-03, 1.8900e-03, 3.5251e-04],
        [4.3500e-04, 8.9003e-04, 1.5066e-04],
        [5.6108e-04, 1.0971e-03, 3.0694e-04],
        [4.5412e-04, 9.6529e-04, 4.8436e-04],
        [1.1602e-04, 5.5555e-05, 5.0998e-05],
        [5.7640e-04, 9.1275e-04, 6.1082e-05],
        [7.8669e-04, 4.1884e-04, 1.6477e-04],
        [1.8097e-03, 1.8397e-03, 5.0158e-04],
        [3.3251e-04, 3.6774e-04, 1.5143e-04],
        [3.7834e-04, 7.8549e-05, 7.8530e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.6227e-04],
        [2.0954e-03],
        [8.7159e-04],
        [4.2604e-05],
        [3.4352e-03],
        [2.6192e-04],
        [5.1549e-04],
        [1.8527e-04],
        [1.4500e-04],
        [1.6213e-04],
        [9.1678e-05],
        [8.2651e-04],
        [9.9722e-04],
        [1.4052e-03],
        [1.6568e-04],
        [4.9338e-04]], device='cuda:0')/tensor([[9.6227e-04, 2.0954e-03, 8.7159e-04, 4.2604e-05, 3.4352e-03, 2.6192e-04,
         5.1549e-04, 1.8527e-04, 1.4500e-04, 1.6213e-04, 9.1678e-05, 8.2651e-04,
         9.9722e-04, 1.4052e-03, 1.6568e-04, 4.9338e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1797e-03],
        [4.4894e-03],
        [1.8416e-03],
        [1.1252e-05],
        [2.0752e-03],
        [1.1227e-04],
        [1.9990e-03],
        [7.5737e-05],
        [4.5944e-05],
        [2.4387e-04],
        [1.3896e-03],
        [4.6760e-03],
        [1.0890e-03],
        [4.8263e-03],
        [1.2440e-04],
        [2.1117e-03]], device='cuda:0')/tensor([[1.1797e-03, 4.4894e-03, 1.8416e-03, 1.1252e-05, 2.0752e-03, 1.1227e-04,
         1.9990e-03, 7.5737e-05, 4.5944e-05, 2.4387e-04, 1.3896e-03, 4.6760e-03,
         1.0890e-03, 4.8263e-03, 1.2440e-04, 2.1117e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.6937e-05],
        [3.3087e-04],
        [1.3262e-04],
        [7.9491e-05],
        [2.9470e-04],
        [1.0703e-04],
        [1.8838e-04],
        [1.1972e-04],
        [9.1094e-05],
        [7.7518e-05],
        [1.3958e-04],
        [1.1894e-03],
        [1.3792e-04],
        [5.9656e-04],
        [1.0959e-04],
        [2.0098e-04]], device='cuda:0')/tensor([[8.6937e-05, 3.3087e-04, 1.3262e-04, 7.9491e-05, 2.9470e-04, 1.0703e-04,
         1.8838e-04, 1.1972e-04, 9.1094e-05, 7.7518e-05, 1.3958e-04, 1.1894e-03,
         1.3792e-04, 5.9656e-04, 1.0959e-04, 2.0098e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[9.6227e-04, 1.1797e-03, 8.6937e-05],
        [2.0954e-03, 4.4894e-03, 3.3087e-04],
        [8.7159e-04, 1.8416e-03, 1.3262e-04],
        [4.2604e-05, 1.1252e-05, 7.9491e-05],
        [3.4352e-03, 2.0752e-03, 2.9470e-04],
        [2.6192e-04, 1.1227e-04, 1.0703e-04],
        [5.1549e-04, 1.9990e-03, 1.8838e-04],
        [1.8527e-04, 7.5737e-05, 1.1972e-04],
        [1.4500e-04, 4.5944e-05, 9.1094e-05],
        [1.6213e-04, 2.4387e-04, 7.7518e-05],
        [9.1678e-05, 1.3896e-03, 1.3958e-04],
        [8.2651e-04, 4.6760e-03, 1.1894e-03],
        [9.9722e-04, 1.0890e-03, 1.3792e-04],
        [1.4052e-03, 4.8263e-03, 5.9656e-04],
        [1.6568e-04, 1.2440e-04, 1.0959e-04],
        [4.9338e-04, 2.1117e-03, 2.0098e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0020],
        [0.0011],
        [0.0023],
        [0.0029]], device='cuda:0')/tensor([[0.0020, 0.0011, 0.0023, 0.0029]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[0.0085],
        [0.0042],
        [0.0036],
        [0.0028]], device='cuda:0')/tensor([[0.0085, 0.0042, 0.0036, 0.0028]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.0701e-03],
        [8.1849e-05],
        [8.9188e-04],
        [1.1229e-03]], device='cuda:0')/tensor([[3.0701e-03, 8.1849e-05, 8.9188e-04, 1.1229e-03]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.9687e-03, 8.4812e-03, 3.0701e-03],
        [1.1070e-03, 4.1547e-03, 8.1849e-05],
        [2.3177e-03, 3.5545e-03, 8.9188e-04],
        [2.8748e-03, 2.7956e-03, 1.1229e-03]], device='cuda:0')
acc:  0.42424242424242425
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 3 and batchsize 16: 0:01:02.116804
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI rare_synonyms 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 365.02it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0010],
        [0.0002],
        [0.0004],
        [0.0005],
        [0.0001],
        [0.0001],
        [0.0007],
        [0.0008],
        [0.0020],
        [0.0010],
        [0.0008],
        [0.0010],
        [0.0052],
        [0.0004],
        [0.0006],
        [0.0013]], device='cuda:0')/tensor([[0.0010, 0.0002, 0.0004, 0.0005, 0.0001, 0.0001, 0.0007, 0.0008, 0.0020,
         0.0010, 0.0008, 0.0010, 0.0052, 0.0004, 0.0006, 0.0013]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.7484e-03],
        [3.1722e-04],
        [2.7804e-05],
        [2.5252e-03],
        [1.3581e-05],
        [1.3896e-03],
        [1.6727e-03],
        [2.8939e-03],
        [1.5357e-03],
        [7.3874e-04],
        [2.0451e-03],
        [1.1511e-03],
        [6.4237e-03],
        [1.2080e-03],
        [2.3821e-03],
        [2.8999e-04]], device='cuda:0')/tensor([[2.7484e-03, 3.1722e-04, 2.7804e-05, 2.5252e-03, 1.3581e-05, 1.3896e-03,
         1.6727e-03, 2.8939e-03, 1.5357e-03, 7.3874e-04, 2.0451e-03, 1.1511e-03,
         6.4237e-03, 1.2080e-03, 2.3821e-03, 2.8999e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7330e-04],
        [2.0276e-04],
        [1.5573e-05],
        [2.7787e-04],
        [6.8042e-06],
        [6.5962e-05],
        [9.8538e-05],
        [1.2472e-04],
        [3.8414e-05],
        [1.7655e-04],
        [7.0383e-05],
        [6.8049e-05],
        [1.5177e-04],
        [2.9791e-04],
        [2.7335e-04],
        [7.3225e-05]], device='cuda:0')/tensor([[1.7330e-04, 2.0276e-04, 1.5573e-05, 2.7787e-04, 6.8042e-06, 6.5962e-05,
         9.8538e-05, 1.2472e-04, 3.8414e-05, 1.7655e-04, 7.0383e-05, 6.8049e-05,
         1.5177e-04, 2.9791e-04, 2.7335e-04, 7.3225e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.5910e-04, 2.7484e-03, 1.7330e-04],
        [1.9853e-04, 3.1722e-04, 2.0276e-04],
        [4.4254e-04, 2.7804e-05, 1.5573e-05],
        [5.3029e-04, 2.5252e-03, 2.7787e-04],
        [1.2843e-04, 1.3581e-05, 6.8042e-06],
        [1.4693e-04, 1.3896e-03, 6.5962e-05],
        [6.5713e-04, 1.6727e-03, 9.8538e-05],
        [7.7712e-04, 2.8939e-03, 1.2472e-04],
        [1.9783e-03, 1.5357e-03, 3.8414e-05],
        [9.9065e-04, 7.3874e-04, 1.7655e-04],
        [7.5885e-04, 2.0451e-03, 7.0383e-05],
        [1.0369e-03, 1.1511e-03, 6.8049e-05],
        [5.2391e-03, 6.4237e-03, 1.5177e-04],
        [4.3014e-04, 1.2080e-03, 2.9791e-04],
        [6.3797e-04, 2.3821e-03, 2.7335e-04],
        [1.2642e-03, 2.8999e-04, 7.3225e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0022],
        [0.0007],
        [0.0018],
        [0.0019],
        [0.0003],
        [0.0012],
        [0.0008],
        [0.0002],
        [0.0003],
        [0.0012],
        [0.0005],
        [0.0002],
        [0.0007],
        [0.0022],
        [0.0009],
        [0.0017]], device='cuda:0')/tensor([[0.0022, 0.0007, 0.0018, 0.0019, 0.0003, 0.0012, 0.0008, 0.0002, 0.0003,
         0.0012, 0.0005, 0.0002, 0.0007, 0.0022, 0.0009, 0.0017]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0049],
        [0.0004],
        [0.0099],
        [0.0027],
        [0.0001],
        [0.0019],
        [0.0015],
        [0.0003],
        [0.0009],
        [0.0007],
        [0.0050],
        [0.0001],
        [0.0027],
        [0.0012],
        [0.0021],
        [0.0006]], device='cuda:0')/tensor([[0.0049, 0.0004, 0.0099, 0.0027, 0.0001, 0.0019, 0.0015, 0.0003, 0.0009,
         0.0007, 0.0050, 0.0001, 0.0027, 0.0012, 0.0021, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8971e-04],
        [4.3788e-05],
        [1.1146e-04],
        [3.7167e-04],
        [3.7775e-05],
        [1.5201e-04],
        [1.8775e-04],
        [5.1050e-05],
        [1.9604e-04],
        [2.3742e-04],
        [7.0373e-05],
        [6.4978e-05],
        [3.2027e-04],
        [1.6829e-04],
        [5.1612e-04],
        [8.5452e-04]], device='cuda:0')/tensor([[3.8971e-04, 4.3788e-05, 1.1146e-04, 3.7167e-04, 3.7775e-05, 1.5201e-04,
         1.8775e-04, 5.1050e-05, 1.9604e-04, 2.3742e-04, 7.0373e-05, 6.4978e-05,
         3.2027e-04, 1.6829e-04, 5.1612e-04, 8.5452e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2485e-03, 4.9385e-03, 3.8971e-04],
        [7.4756e-04, 4.1853e-04, 4.3788e-05],
        [1.7982e-03, 9.8890e-03, 1.1146e-04],
        [1.9314e-03, 2.7049e-03, 3.7167e-04],
        [3.4748e-04, 1.3311e-04, 3.7775e-05],
        [1.2410e-03, 1.8956e-03, 1.5201e-04],
        [7.9859e-04, 1.5244e-03, 1.8775e-04],
        [2.3858e-04, 2.7539e-04, 5.1050e-05],
        [2.5555e-04, 8.6442e-04, 1.9604e-04],
        [1.1846e-03, 7.0743e-04, 2.3742e-04],
        [4.9472e-04, 4.9834e-03, 7.0373e-05],
        [2.1527e-04, 1.1957e-04, 6.4978e-05],
        [6.7513e-04, 2.6662e-03, 3.2027e-04],
        [2.2050e-03, 1.2284e-03, 1.6829e-04],
        [8.6446e-04, 2.0673e-03, 5.1612e-04],
        [1.6875e-03, 6.3096e-04, 8.5452e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0006],
        [0.0007],
        [0.0006],
        [0.0006],
        [0.0004],
        [0.0002],
        [0.0012],
        [0.0004],
        [0.0013],
        [0.0006],
        [0.0010],
        [0.0011],
        [0.0003],
        [0.0009],
        [0.0052]], device='cuda:0')/tensor([[0.0005, 0.0006, 0.0007, 0.0006, 0.0006, 0.0004, 0.0002, 0.0012, 0.0004,
         0.0013, 0.0006, 0.0010, 0.0011, 0.0003, 0.0009, 0.0052]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.0307e-04],
        [5.9034e-05],
        [3.4645e-04],
        [2.1504e-03],
        [2.8136e-04],
        [5.2024e-03],
        [9.0988e-05],
        [1.2475e-03],
        [4.7480e-04],
        [3.1121e-03],
        [4.8127e-04],
        [1.0057e-03],
        [7.6394e-04],
        [1.1845e-03],
        [1.1105e-03],
        [2.4545e-03]], device='cuda:0')/tensor([[6.0307e-04, 5.9034e-05, 3.4645e-04, 2.1504e-03, 2.8136e-04, 5.2024e-03,
         9.0988e-05, 1.2475e-03, 4.7480e-04, 3.1121e-03, 4.8127e-04, 1.0057e-03,
         7.6394e-04, 1.1845e-03, 1.1105e-03, 2.4545e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2644e-05],
        [8.4361e-05],
        [2.3810e-04],
        [1.4915e-04],
        [5.3936e-04],
        [7.6286e-05],
        [1.5724e-05],
        [3.5022e-04],
        [1.9708e-05],
        [4.3651e-04],
        [6.0302e-05],
        [2.5304e-04],
        [2.4288e-05],
        [5.8563e-05],
        [2.5067e-04],
        [4.6791e-04]], device='cuda:0')/tensor([[3.2644e-05, 8.4361e-05, 2.3810e-04, 1.4915e-04, 5.3936e-04, 7.6286e-05,
         1.5724e-05, 3.5022e-04, 1.9708e-05, 4.3651e-04, 6.0302e-05, 2.5304e-04,
         2.4288e-05, 5.8563e-05, 2.5067e-04, 4.6791e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.9072e-04, 6.0307e-04, 3.2644e-05],
        [6.1412e-04, 5.9034e-05, 8.4361e-05],
        [7.2380e-04, 3.4645e-04, 2.3810e-04],
        [6.0482e-04, 2.1504e-03, 1.4915e-04],
        [5.9395e-04, 2.8136e-04, 5.3936e-04],
        [4.4300e-04, 5.2024e-03, 7.6286e-05],
        [2.4756e-04, 9.0988e-05, 1.5724e-05],
        [1.1903e-03, 1.2475e-03, 3.5022e-04],
        [4.2503e-04, 4.7480e-04, 1.9708e-05],
        [1.3477e-03, 3.1121e-03, 4.3651e-04],
        [5.9703e-04, 4.8127e-04, 6.0302e-05],
        [1.0142e-03, 1.0057e-03, 2.5304e-04],
        [1.1466e-03, 7.6394e-04, 2.4288e-05],
        [2.7184e-04, 1.1845e-03, 5.8563e-05],
        [8.7442e-04, 1.1105e-03, 2.5067e-04],
        [5.2279e-03, 2.4545e-03, 4.6791e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3079e-03],
        [4.6576e-04],
        [2.7044e-03],
        [3.3695e-04],
        [1.3809e-03],
        [3.1002e-04],
        [1.9771e-03],
        [8.9411e-05],
        [2.0136e-03],
        [4.1537e-04],
        [1.9508e-04],
        [1.8732e-03],
        [2.5714e-04],
        [1.0144e-03],
        [1.6113e-03],
        [1.2105e-03]], device='cuda:0')/tensor([[1.3079e-03, 4.6576e-04, 2.7044e-03, 3.3695e-04, 1.3809e-03, 3.1002e-04,
         1.9771e-03, 8.9411e-05, 2.0136e-03, 4.1537e-04, 1.9508e-04, 1.8732e-03,
         2.5714e-04, 1.0144e-03, 1.6113e-03, 1.2105e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0591e-03],
        [4.6855e-04],
        [2.6812e-03],
        [1.4268e-04],
        [1.3328e-03],
        [2.9247e-04],
        [1.8613e-03],
        [8.4036e-05],
        [1.6001e-04],
        [4.7406e-04],
        [1.0274e-03],
        [1.4660e-02],
        [2.2461e-04],
        [1.0817e-03],
        [2.6311e-03],
        [8.1922e-05]], device='cuda:0')/tensor([[1.0591e-03, 4.6855e-04, 2.6812e-03, 1.4268e-04, 1.3328e-03, 2.9247e-04,
         1.8613e-03, 8.4036e-05, 1.6001e-04, 4.7406e-04, 1.0274e-03, 1.4660e-02,
         2.2461e-04, 1.0817e-03, 2.6311e-03, 8.1922e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7553e-04],
        [2.1466e-05],
        [1.4182e-04],
        [5.6103e-04],
        [1.3218e-04],
        [2.0834e-04],
        [2.3381e-03],
        [1.8397e-05],
        [1.2245e-04],
        [8.6027e-05],
        [1.6884e-04],
        [1.4670e-04],
        [2.1546e-05],
        [1.6454e-04],
        [3.2134e-04],
        [3.9765e-04]], device='cuda:0')/tensor([[1.7553e-04, 2.1466e-05, 1.4182e-04, 5.6103e-04, 1.3218e-04, 2.0834e-04,
         2.3381e-03, 1.8397e-05, 1.2245e-04, 8.6027e-05, 1.6884e-04, 1.4670e-04,
         2.1546e-05, 1.6454e-04, 3.2134e-04, 3.9765e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3079e-03, 1.0591e-03, 1.7553e-04],
        [4.6576e-04, 4.6855e-04, 2.1466e-05],
        [2.7044e-03, 2.6812e-03, 1.4182e-04],
        [3.3695e-04, 1.4268e-04, 5.6103e-04],
        [1.3809e-03, 1.3328e-03, 1.3218e-04],
        [3.1002e-04, 2.9247e-04, 2.0834e-04],
        [1.9771e-03, 1.8613e-03, 2.3381e-03],
        [8.9411e-05, 8.4036e-05, 1.8397e-05],
        [2.0136e-03, 1.6001e-04, 1.2245e-04],
        [4.1537e-04, 4.7406e-04, 8.6027e-05],
        [1.9508e-04, 1.0274e-03, 1.6884e-04],
        [1.8732e-03, 1.4660e-02, 1.4670e-04],
        [2.5714e-04, 2.2461e-04, 2.1546e-05],
        [1.0144e-03, 1.0817e-03, 1.6454e-04],
        [1.6113e-03, 2.6311e-03, 3.2134e-04],
        [1.2105e-03, 8.1922e-05, 3.9765e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0042],
        [0.0026],
        [0.0007],
        [0.0006],
        [0.0002],
        [0.0009],
        [0.0002],
        [0.0005],
        [0.0006],
        [0.0014],
        [0.0016],
        [0.0017],
        [0.0003],
        [0.0003],
        [0.0011]], device='cuda:0')/tensor([[0.0005, 0.0042, 0.0026, 0.0007, 0.0006, 0.0002, 0.0009, 0.0002, 0.0005,
         0.0006, 0.0014, 0.0016, 0.0017, 0.0003, 0.0003, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0363e-04],
        [1.3906e-02],
        [1.3599e-03],
        [6.1688e-04],
        [6.7078e-04],
        [2.4042e-04],
        [1.8903e-03],
        [2.1482e-04],
        [3.3662e-03],
        [1.3576e-04],
        [8.7595e-04],
        [1.2495e-03],
        [2.1247e-04],
        [1.5995e-03],
        [8.6093e-05],
        [1.2791e-03]], device='cuda:0')/tensor([[2.0363e-04, 1.3906e-02, 1.3599e-03, 6.1688e-04, 6.7078e-04, 2.4042e-04,
         1.8903e-03, 2.1482e-04, 3.3662e-03, 1.3576e-04, 8.7595e-04, 1.2495e-03,
         2.1247e-04, 1.5995e-03, 8.6093e-05, 1.2791e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5525e-05],
        [2.7922e-04],
        [3.3041e-04],
        [1.4229e-04],
        [1.0901e-04],
        [3.1231e-05],
        [3.8144e-04],
        [3.8714e-05],
        [8.5504e-05],
        [4.9444e-05],
        [2.9752e-04],
        [5.7479e-04],
        [4.9175e-05],
        [9.9755e-05],
        [3.7871e-04],
        [9.0552e-05]], device='cuda:0')/tensor([[4.5525e-05, 2.7922e-04, 3.3041e-04, 1.4229e-04, 1.0901e-04, 3.1231e-05,
         3.8144e-04, 3.8714e-05, 8.5504e-05, 4.9444e-05, 2.9752e-04, 5.7479e-04,
         4.9175e-05, 9.9755e-05, 3.7871e-04, 9.0552e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.6191e-04, 2.0363e-04, 4.5525e-05],
        [4.2049e-03, 1.3906e-02, 2.7922e-04],
        [2.6240e-03, 1.3599e-03, 3.3041e-04],
        [7.3290e-04, 6.1688e-04, 1.4229e-04],
        [6.1437e-04, 6.7078e-04, 1.0901e-04],
        [2.0701e-04, 2.4042e-04, 3.1231e-05],
        [9.2128e-04, 1.8903e-03, 3.8144e-04],
        [1.7989e-04, 2.1482e-04, 3.8714e-05],
        [4.6616e-04, 3.3662e-03, 8.5504e-05],
        [6.4129e-04, 1.3576e-04, 4.9444e-05],
        [1.3869e-03, 8.7595e-04, 2.9752e-04],
        [1.6443e-03, 1.2495e-03, 5.7479e-04],
        [1.6601e-03, 2.1247e-04, 4.9175e-05],
        [3.3169e-04, 1.5995e-03, 9.9755e-05],
        [3.1952e-04, 8.6093e-05, 3.7871e-04],
        [1.1373e-03, 1.2791e-03, 9.0552e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0002],
        [0.0010],
        [0.0003],
        [0.0009],
        [0.0025],
        [0.0016],
        [0.0006],
        [0.0016],
        [0.0016],
        [0.0003],
        [0.0013],
        [0.0030],
        [0.0006],
        [0.0005],
        [0.0004],
        [0.0003]], device='cuda:0')/tensor([[0.0002, 0.0010, 0.0003, 0.0009, 0.0025, 0.0016, 0.0006, 0.0016, 0.0016,
         0.0003, 0.0013, 0.0030, 0.0006, 0.0005, 0.0004, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[0.0004],
        [0.0034],
        [0.0001],
        [0.0013],
        [0.0037],
        [0.0013],
        [0.0005],
        [0.0034],
        [0.0011],
        [0.0002],
        [0.0045],
        [0.0025],
        [0.0005],
        [0.0020],
        [0.0012],
        [0.0011]], device='cuda:0')/tensor([[0.0004, 0.0034, 0.0001, 0.0013, 0.0037, 0.0013, 0.0005, 0.0034, 0.0011,
         0.0002, 0.0045, 0.0025, 0.0005, 0.0020, 0.0012, 0.0011]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.1817e-05],
        [1.5857e-04],
        [7.3700e-05],
        [9.3562e-05],
        [2.9797e-04],
        [8.6517e-05],
        [2.8018e-04],
        [1.7450e-04],
        [1.7753e-04],
        [1.3766e-04],
        [3.8209e-04],
        [3.6978e-04],
        [6.4639e-05],
        [1.0307e-04],
        [1.2271e-04],
        [3.6360e-05]], device='cuda:0')/tensor([[7.1817e-05, 1.5857e-04, 7.3700e-05, 9.3562e-05, 2.9797e-04, 8.6517e-05,
         2.8018e-04, 1.7450e-04, 1.7753e-04, 1.3766e-04, 3.8209e-04, 3.6978e-04,
         6.4639e-05, 1.0307e-04, 1.2271e-04, 3.6360e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1428e-04, 4.3254e-04, 7.1817e-05],
        [9.7233e-04, 3.4135e-03, 1.5857e-04],
        [3.0290e-04, 1.1749e-04, 7.3700e-05],
        [8.5494e-04, 1.3369e-03, 9.3562e-05],
        [2.5332e-03, 3.7379e-03, 2.9797e-04],
        [1.6113e-03, 1.2649e-03, 8.6517e-05],
        [6.4150e-04, 5.3949e-04, 2.8018e-04],
        [1.6251e-03, 3.3699e-03, 1.7450e-04],
        [1.6292e-03, 1.1107e-03, 1.7753e-04],
        [2.7507e-04, 2.1466e-04, 1.3766e-04],
        [1.3376e-03, 4.4535e-03, 3.8209e-04],
        [3.0401e-03, 2.4970e-03, 3.6978e-04],
        [6.3121e-04, 4.9030e-04, 6.4639e-05],
        [4.5384e-04, 1.9604e-03, 1.0307e-04],
        [3.9802e-04, 1.1836e-03, 1.2271e-04],
        [2.5820e-04, 1.1326e-03, 3.6360e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.9863e-04],
        [8.5944e-04],
        [1.1280e-03],
        [5.1116e-04],
        [1.0909e-03],
        [2.0040e-04],
        [9.4588e-04],
        [2.5383e-04],
        [2.8893e-04],
        [1.0391e-03],
        [4.5343e-05],
        [1.3747e-03],
        [1.2808e-03],
        [6.5611e-04],
        [2.6070e-03],
        [4.6880e-03]], device='cuda:0')/tensor([[4.9863e-04, 8.5944e-04, 1.1280e-03, 5.1116e-04, 1.0909e-03, 2.0040e-04,
         9.4588e-04, 2.5383e-04, 2.8893e-04, 1.0391e-03, 4.5343e-05, 1.3747e-03,
         1.2808e-03, 6.5611e-04, 2.6070e-03, 4.6880e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.5131e-03],
        [3.1871e-04],
        [1.6944e-03],
        [6.0934e-04],
        [5.5415e-04],
        [1.0394e-03],
        [4.8540e-03],
        [8.3506e-04],
        [3.9485e-04],
        [1.7224e-03],
        [3.3826e-04],
        [5.1841e-03],
        [3.6534e-04],
        [1.7472e-03],
        [3.6699e-03],
        [8.1584e-05]], device='cuda:0')/tensor([[2.5131e-03, 3.1871e-04, 1.6944e-03, 6.0934e-04, 5.5415e-04, 1.0394e-03,
         4.8540e-03, 8.3506e-04, 3.9485e-04, 1.7224e-03, 3.3826e-04, 5.1841e-03,
         3.6534e-04, 1.7472e-03, 3.6699e-03, 8.1584e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7960e-04],
        [1.3596e-04],
        [2.9017e-04],
        [1.4848e-03],
        [1.0224e-04],
        [2.3596e-05],
        [2.6035e-04],
        [9.8292e-05],
        [3.7484e-05],
        [9.0750e-04],
        [1.7997e-05],
        [4.0728e-03],
        [8.0120e-04],
        [5.6072e-04],
        [7.7007e-04],
        [5.9911e-05]], device='cuda:0')/tensor([[1.7960e-04, 1.3596e-04, 2.9017e-04, 1.4848e-03, 1.0224e-04, 2.3596e-05,
         2.6035e-04, 9.8292e-05, 3.7484e-05, 9.0750e-04, 1.7997e-05, 4.0728e-03,
         8.0120e-04, 5.6072e-04, 7.7007e-04, 5.9911e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.9863e-04, 2.5131e-03, 1.7960e-04],
        [8.5944e-04, 3.1871e-04, 1.3596e-04],
        [1.1280e-03, 1.6944e-03, 2.9017e-04],
        [5.1116e-04, 6.0934e-04, 1.4848e-03],
        [1.0909e-03, 5.5415e-04, 1.0224e-04],
        [2.0040e-04, 1.0394e-03, 2.3596e-05],
        [9.4588e-04, 4.8540e-03, 2.6035e-04],
        [2.5383e-04, 8.3506e-04, 9.8292e-05],
        [2.8893e-04, 3.9485e-04, 3.7484e-05],
        [1.0391e-03, 1.7224e-03, 9.0750e-04],
        [4.5343e-05, 3.3826e-04, 1.7997e-05],
        [1.3747e-03, 5.1841e-03, 4.0728e-03],
        [1.2808e-03, 3.6534e-04, 8.0120e-04],
        [6.5611e-04, 1.7472e-03, 5.6072e-04],
        [2.6070e-03, 3.6699e-03, 7.7007e-04],
        [4.6880e-03, 8.1584e-05, 5.9911e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6378e-04],
        [7.3720e-04],
        [1.2879e-03],
        [1.3960e-03],
        [4.0039e-03],
        [5.9737e-04],
        [8.4774e-04],
        [8.8636e-04],
        [4.6616e-04],
        [1.9244e-05],
        [5.6638e-04],
        [1.2019e-03],
        [1.2017e-03],
        [7.6647e-05],
        [4.7578e-04],
        [4.9532e-04]], device='cuda:0')/tensor([[2.6378e-04, 7.3720e-04, 1.2879e-03, 1.3960e-03, 4.0039e-03, 5.9737e-04,
         8.4774e-04, 8.8636e-04, 4.6616e-04, 1.9244e-05, 5.6638e-04, 1.2019e-03,
         1.2017e-03, 7.6647e-05, 4.7578e-04, 4.9532e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.6924e-04],
        [2.6946e-03],
        [1.6904e-03],
        [2.0114e-03],
        [2.2484e-03],
        [8.2372e-04],
        [1.8410e-03],
        [1.7402e-03],
        [1.7414e-03],
        [1.6109e-04],
        [2.3726e-04],
        [5.0363e-03],
        [2.8708e-03],
        [1.7730e-05],
        [1.6532e-03],
        [1.4291e-03]], device='cuda:0')/tensor([[5.6924e-04, 2.6946e-03, 1.6904e-03, 2.0114e-03, 2.2484e-03, 8.2372e-04,
         1.8410e-03, 1.7402e-03, 1.7414e-03, 1.6109e-04, 2.3726e-04, 5.0363e-03,
         2.8708e-03, 1.7730e-05, 1.6532e-03, 1.4291e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.2115e-05],
        [1.2470e-04],
        [3.1992e-04],
        [8.7680e-05],
        [3.3534e-04],
        [7.3493e-05],
        [1.9620e-04],
        [8.0460e-05],
        [4.9533e-05],
        [2.1372e-05],
        [1.6869e-05],
        [1.6746e-04],
        [1.3461e-04],
        [1.5324e-05],
        [1.3414e-04],
        [1.8490e-04]], device='cuda:0')/tensor([[4.2115e-05, 1.2470e-04, 3.1992e-04, 8.7680e-05, 3.3534e-04, 7.3493e-05,
         1.9620e-04, 8.0460e-05, 4.9533e-05, 2.1372e-05, 1.6869e-05, 1.6746e-04,
         1.3461e-04, 1.5324e-05, 1.3414e-04, 1.8490e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6378e-04, 5.6924e-04, 4.2115e-05],
        [7.3720e-04, 2.6946e-03, 1.2470e-04],
        [1.2879e-03, 1.6904e-03, 3.1992e-04],
        [1.3960e-03, 2.0114e-03, 8.7680e-05],
        [4.0039e-03, 2.2484e-03, 3.3534e-04],
        [5.9737e-04, 8.2372e-04, 7.3493e-05],
        [8.4774e-04, 1.8410e-03, 1.9620e-04],
        [8.8636e-04, 1.7402e-03, 8.0460e-05],
        [4.6616e-04, 1.7414e-03, 4.9533e-05],
        [1.9244e-05, 1.6109e-04, 2.1372e-05],
        [5.6638e-04, 2.3726e-04, 1.6869e-05],
        [1.2019e-03, 5.0363e-03, 1.6746e-04],
        [1.2017e-03, 2.8708e-03, 1.3461e-04],
        [7.6647e-05, 1.7730e-05, 1.5324e-05],
        [4.7578e-04, 1.6532e-03, 1.3414e-04],
        [4.9532e-04, 1.4291e-03, 1.8490e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0015],
        [0.0001],
        [0.0007],
        [0.0005]], device='cuda:0')/tensor([[0.0015, 0.0001, 0.0007, 0.0005]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [23607] -> tensor([[0.0039],
        [0.0006],
        [0.0004],
        [0.0018]], device='cuda:0')/tensor([[0.0039, 0.0006, 0.0004, 0.0018]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.9757e-04],
        [9.9256e-05],
        [4.3124e-04],
        [6.5276e-04]], device='cuda:0')/tensor([[3.9757e-04, 9.9256e-05, 4.3124e-04, 6.5276e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.4586e-03, 3.9282e-03, 3.9757e-04],
        [1.4343e-04, 6.2296e-04, 9.9256e-05],
        [6.9163e-04, 3.8518e-04, 4.3124e-04],
        [4.6644e-04, 1.7754e-03, 6.5276e-04]], device='cuda:0')
acc:  0.3560606060606061
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 4 and batchsize 16: 0:01:02.393789
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI rare_synonyms 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 369.49it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0012],
        [0.0001],
        [0.0008],
        [0.0014],
        [0.0014],
        [0.0001],
        [0.0003],
        [0.0008],
        [0.0003],
        [0.0005],
        [0.0005],
        [0.0008],
        [0.0003],
        [0.0006],
        [0.0009]], device='cuda:0')/tensor([[0.0004, 0.0012, 0.0001, 0.0008, 0.0014, 0.0014, 0.0001, 0.0003, 0.0008,
         0.0003, 0.0005, 0.0005, 0.0008, 0.0003, 0.0006, 0.0009]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.1542e-04],
        [1.1200e-03],
        [1.5781e-05],
        [1.5631e-03],
        [1.2528e-02],
        [1.0165e-03],
        [4.9808e-05],
        [3.4554e-04],
        [1.4008e-03],
        [5.8693e-04],
        [2.3142e-03],
        [2.6520e-04],
        [7.2935e-04],
        [1.3584e-04],
        [1.4094e-03],
        [1.1243e-02]], device='cuda:0')/tensor([[3.1542e-04, 1.1200e-03, 1.5781e-05, 1.5631e-03, 1.2528e-02, 1.0165e-03,
         4.9808e-05, 3.4554e-04, 1.4008e-03, 5.8693e-04, 2.3142e-03, 2.6520e-04,
         7.2935e-04, 1.3584e-04, 1.4094e-03, 1.1243e-02]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4295e-04],
        [1.8584e-04],
        [2.5391e-04],
        [2.3063e-04],
        [1.9700e-04],
        [5.0538e-05],
        [7.8290e-05],
        [3.6510e-04],
        [3.5372e-04],
        [1.4059e-04],
        [1.3134e-04],
        [4.4465e-04],
        [2.7352e-04],
        [2.7361e-04],
        [1.2936e-04],
        [1.7550e-04]], device='cuda:0')/tensor([[1.4295e-04, 1.8584e-04, 2.5391e-04, 2.3063e-04, 1.9700e-04, 5.0538e-05,
         7.8290e-05, 3.6510e-04, 3.5372e-04, 1.4059e-04, 1.3134e-04, 4.4465e-04,
         2.7352e-04, 2.7361e-04, 1.2936e-04, 1.7550e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.4698e-04, 3.1542e-04, 1.4295e-04],
        [1.1659e-03, 1.1200e-03, 1.8584e-04],
        [1.1736e-04, 1.5781e-05, 2.5391e-04],
        [7.7874e-04, 1.5631e-03, 2.3063e-04],
        [1.4343e-03, 1.2528e-02, 1.9700e-04],
        [1.3581e-03, 1.0165e-03, 5.0538e-05],
        [1.1994e-04, 4.9808e-05, 7.8290e-05],
        [3.1375e-04, 3.4554e-04, 3.6510e-04],
        [7.7221e-04, 1.4008e-03, 3.5372e-04],
        [3.4613e-04, 5.8693e-04, 1.4059e-04],
        [4.7476e-04, 2.3142e-03, 1.3134e-04],
        [4.7161e-04, 2.6520e-04, 4.4465e-04],
        [7.9678e-04, 7.2935e-04, 2.7352e-04],
        [2.6716e-04, 1.3584e-04, 2.7361e-04],
        [5.7820e-04, 1.4094e-03, 1.2936e-04],
        [9.3523e-04, 1.1243e-02, 1.7550e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.8401e-04],
        [8.1823e-04],
        [9.8574e-05],
        [4.2845e-04],
        [2.0624e-03],
        [8.7576e-04],
        [9.7960e-04],
        [2.3363e-05],
        [1.3847e-03],
        [3.0175e-03],
        [7.9860e-04],
        [1.7900e-04],
        [5.6034e-04],
        [1.6673e-04],
        [1.9972e-03],
        [3.2027e-04]], device='cuda:0')/tensor([[3.8401e-04, 8.1823e-04, 9.8574e-05, 4.2845e-04, 2.0624e-03, 8.7576e-04,
         9.7960e-04, 2.3363e-05, 1.3847e-03, 3.0175e-03, 7.9860e-04, 1.7900e-04,
         5.6034e-04, 1.6673e-04, 1.9972e-03, 3.2027e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.1106e-04],
        [1.4305e-03],
        [4.6704e-05],
        [2.7060e-04],
        [2.2592e-03],
        [1.6186e-03],
        [1.3074e-03],
        [3.5606e-06],
        [9.7384e-04],
        [1.4071e-03],
        [5.5684e-04],
        [8.9115e-05],
        [1.1965e-03],
        [2.5016e-04],
        [1.2281e-03],
        [1.0058e-02]], device='cuda:0')/tensor([[9.1106e-04, 1.4305e-03, 4.6704e-05, 2.7060e-04, 2.2592e-03, 1.6186e-03,
         1.3074e-03, 3.5606e-06, 9.7384e-04, 1.4071e-03, 5.5684e-04, 8.9115e-05,
         1.1965e-03, 2.5016e-04, 1.2281e-03, 1.0058e-02]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.1751e-04],
        [1.2302e-04],
        [1.9730e-04],
        [9.0853e-05],
        [4.5475e-04],
        [3.4464e-04],
        [2.0508e-04],
        [7.8928e-05],
        [1.1664e-04],
        [1.2480e-04],
        [7.0542e-05],
        [1.8494e-04],
        [2.2598e-04],
        [2.0084e-04],
        [2.0341e-04],
        [1.7409e-04]], device='cuda:0')/tensor([[7.1751e-04, 1.2302e-04, 1.9730e-04, 9.0853e-05, 4.5475e-04, 3.4464e-04,
         2.0508e-04, 7.8928e-05, 1.1664e-04, 1.2480e-04, 7.0542e-05, 1.8494e-04,
         2.2598e-04, 2.0084e-04, 2.0341e-04, 1.7409e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.8401e-04, 9.1106e-04, 7.1751e-04],
        [8.1823e-04, 1.4305e-03, 1.2302e-04],
        [9.8574e-05, 4.6704e-05, 1.9730e-04],
        [4.2845e-04, 2.7060e-04, 9.0853e-05],
        [2.0624e-03, 2.2592e-03, 4.5475e-04],
        [8.7576e-04, 1.6186e-03, 3.4464e-04],
        [9.7960e-04, 1.3074e-03, 2.0508e-04],
        [2.3363e-05, 3.5606e-06, 7.8928e-05],
        [1.3847e-03, 9.7384e-04, 1.1664e-04],
        [3.0175e-03, 1.4071e-03, 1.2480e-04],
        [7.9860e-04, 5.5684e-04, 7.0542e-05],
        [1.7900e-04, 8.9115e-05, 1.8494e-04],
        [5.6034e-04, 1.1965e-03, 2.2598e-04],
        [1.6673e-04, 2.5016e-04, 2.0084e-04],
        [1.9972e-03, 1.2281e-03, 2.0341e-04],
        [3.2027e-04, 1.0058e-02, 1.7409e-04]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1892e-03],
        [9.4063e-04],
        [7.5859e-04],
        [2.0030e-03],
        [1.6986e-04],
        [1.2192e-03],
        [8.6667e-04],
        [1.5484e-03],
        [2.4954e-04],
        [7.9969e-04],
        [2.7138e-04],
        [9.7742e-05],
        [1.0417e-03],
        [7.4795e-04],
        [1.0214e-03],
        [2.5098e-04]], device='cuda:0')/tensor([[1.1892e-03, 9.4063e-04, 7.5859e-04, 2.0030e-03, 1.6986e-04, 1.2192e-03,
         8.6667e-04, 1.5484e-03, 2.4954e-04, 7.9969e-04, 2.7138e-04, 9.7742e-05,
         1.0417e-03, 7.4795e-04, 1.0214e-03, 2.5098e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.3595e-04],
        [1.6686e-03],
        [2.0913e-03],
        [3.8587e-03],
        [1.3900e-04],
        [1.3451e-03],
        [3.1536e-04],
        [2.9395e-03],
        [2.1129e-04],
        [4.9898e-04],
        [5.8164e-05],
        [1.3165e-05],
        [8.9703e-04],
        [2.3080e-04],
        [1.2414e-03],
        [1.8265e-03]], device='cuda:0')/tensor([[7.3595e-04, 1.6686e-03, 2.0913e-03, 3.8587e-03, 1.3900e-04, 1.3451e-03,
         3.1536e-04, 2.9395e-03, 2.1129e-04, 4.9898e-04, 5.8164e-05, 1.3165e-05,
         8.9703e-04, 2.3080e-04, 1.2414e-03, 1.8265e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.5060e-04],
        [1.4951e-04],
        [6.6775e-04],
        [4.2948e-04],
        [8.5473e-05],
        [9.3286e-05],
        [1.7499e-04],
        [5.0434e-05],
        [6.4887e-05],
        [1.5166e-04],
        [9.0992e-05],
        [7.7096e-05],
        [3.3269e-04],
        [1.8977e-04],
        [7.9640e-05],
        [3.7556e-04]], device='cuda:0')/tensor([[3.5060e-04, 1.4951e-04, 6.6775e-04, 4.2948e-04, 8.5473e-05, 9.3286e-05,
         1.7499e-04, 5.0434e-05, 6.4887e-05, 1.5166e-04, 9.0992e-05, 7.7096e-05,
         3.3269e-04, 1.8977e-04, 7.9640e-05, 3.7556e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1892e-03, 7.3595e-04, 3.5060e-04],
        [9.4063e-04, 1.6686e-03, 1.4951e-04],
        [7.5859e-04, 2.0913e-03, 6.6775e-04],
        [2.0030e-03, 3.8587e-03, 4.2948e-04],
        [1.6986e-04, 1.3900e-04, 8.5473e-05],
        [1.2192e-03, 1.3451e-03, 9.3286e-05],
        [8.6667e-04, 3.1536e-04, 1.7499e-04],
        [1.5484e-03, 2.9395e-03, 5.0434e-05],
        [2.4954e-04, 2.1129e-04, 6.4887e-05],
        [7.9969e-04, 4.9898e-04, 1.5166e-04],
        [2.7138e-04, 5.8164e-05, 9.0992e-05],
        [9.7742e-05, 1.3165e-05, 7.7096e-05],
        [1.0417e-03, 8.9703e-04, 3.3269e-04],
        [7.4795e-04, 2.3080e-04, 1.8977e-04],
        [1.0214e-03, 1.2414e-03, 7.9640e-05],
        [2.5098e-04, 1.8265e-03, 3.7556e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.7079e-05],
        [2.3792e-04],
        [1.0652e-03],
        [2.4443e-04],
        [1.3471e-03],
        [1.9257e-04],
        [2.9638e-04],
        [4.0239e-04],
        [5.0554e-04],
        [6.3274e-04],
        [2.0011e-04],
        [2.4463e-04],
        [1.6845e-04],
        [8.8583e-04],
        [5.4338e-04],
        [4.2793e-04]], device='cuda:0')/tensor([[7.7079e-05, 2.3792e-04, 1.0652e-03, 2.4443e-04, 1.3471e-03, 1.9257e-04,
         2.9638e-04, 4.0239e-04, 5.0554e-04, 6.3274e-04, 2.0011e-04, 2.4463e-04,
         1.6845e-04, 8.8583e-04, 5.4338e-04, 4.2793e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.1818e-05],
        [1.5923e-04],
        [1.6683e-03],
        [4.6335e-03],
        [4.3438e-03],
        [4.1972e-04],
        [4.6662e-04],
        [2.6660e-04],
        [5.2842e-03],
        [8.1688e-04],
        [1.0114e-04],
        [2.8897e-04],
        [2.8444e-04],
        [1.0157e-03],
        [2.2939e-03],
        [2.5595e-04]], device='cuda:0')/tensor([[6.1818e-05, 1.5923e-04, 1.6683e-03, 4.6335e-03, 4.3438e-03, 4.1972e-04,
         4.6662e-04, 2.6660e-04, 5.2842e-03, 8.1688e-04, 1.0114e-04, 2.8897e-04,
         2.8444e-04, 1.0157e-03, 2.2939e-03, 2.5595e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4124e-04],
        [2.9299e-04],
        [3.1459e-04],
        [7.6838e-05],
        [4.5128e-04],
        [3.1931e-04],
        [1.0900e-04],
        [4.0279e-04],
        [9.9539e-05],
        [2.3034e-04],
        [6.2094e-04],
        [1.6878e-04],
        [3.2194e-04],
        [2.7866e-04],
        [1.5635e-04],
        [3.3641e-04]], device='cuda:0')/tensor([[1.4124e-04, 2.9299e-04, 3.1459e-04, 7.6838e-05, 4.5128e-04, 3.1931e-04,
         1.0900e-04, 4.0279e-04, 9.9539e-05, 2.3034e-04, 6.2094e-04, 1.6878e-04,
         3.2194e-04, 2.7866e-04, 1.5635e-04, 3.3641e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.7079e-05, 6.1818e-05, 1.4124e-04],
        [2.3792e-04, 1.5923e-04, 2.9299e-04],
        [1.0652e-03, 1.6683e-03, 3.1459e-04],
        [2.4443e-04, 4.6335e-03, 7.6838e-05],
        [1.3471e-03, 4.3438e-03, 4.5128e-04],
        [1.9257e-04, 4.1972e-04, 3.1931e-04],
        [2.9638e-04, 4.6662e-04, 1.0900e-04],
        [4.0239e-04, 2.6660e-04, 4.0279e-04],
        [5.0554e-04, 5.2842e-03, 9.9539e-05],
        [6.3274e-04, 8.1688e-04, 2.3034e-04],
        [2.0011e-04, 1.0114e-04, 6.2094e-04],
        [2.4463e-04, 2.8897e-04, 1.6878e-04],
        [1.6845e-04, 2.8444e-04, 3.2194e-04],
        [8.8583e-04, 1.0157e-03, 2.7866e-04],
        [5.4338e-04, 2.2939e-03, 1.5635e-04],
        [4.2793e-04, 2.5595e-04, 3.3641e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0005],
        [0.0005],
        [0.0002],
        [0.0006],
        [0.0005],
        [0.0033],
        [0.0004],
        [0.0006],
        [0.0002],
        [0.0003],
        [0.0011],
        [0.0020],
        [0.0011],
        [0.0002],
        [0.0002],
        [0.0006]], device='cuda:0')/tensor([[0.0005, 0.0005, 0.0002, 0.0006, 0.0005, 0.0033, 0.0004, 0.0006, 0.0002,
         0.0003, 0.0011, 0.0020, 0.0011, 0.0002, 0.0002, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.3580e-03],
        [8.6761e-04],
        [2.7863e-04],
        [1.8649e-03],
        [1.4158e-03],
        [4.8690e-03],
        [4.4364e-04],
        [4.6345e-04],
        [9.9142e-05],
        [2.2635e-03],
        [3.6677e-04],
        [1.2386e-03],
        [1.1331e-03],
        [1.0216e-04],
        [8.9259e-04],
        [1.3736e-04]], device='cuda:0')/tensor([[2.3580e-03, 8.6761e-04, 2.7863e-04, 1.8649e-03, 1.4158e-03, 4.8690e-03,
         4.4364e-04, 4.6345e-04, 9.9142e-05, 2.2635e-03, 3.6677e-04, 1.2386e-03,
         1.1331e-03, 1.0216e-04, 8.9259e-04, 1.3736e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.4864e-04],
        [5.0151e-04],
        [1.1961e-04],
        [8.0930e-05],
        [3.1033e-04],
        [1.3592e-04],
        [1.9477e-04],
        [1.6865e-04],
        [8.9276e-05],
        [6.8413e-05],
        [1.1285e-04],
        [3.5086e-04],
        [4.8613e-04],
        [2.1782e-04],
        [3.6918e-04],
        [6.8279e-04]], device='cuda:0')/tensor([[2.4864e-04, 5.0151e-04, 1.1961e-04, 8.0930e-05, 3.1033e-04, 1.3592e-04,
         1.9477e-04, 1.6865e-04, 8.9276e-05, 6.8413e-05, 1.1285e-04, 3.5086e-04,
         4.8613e-04, 2.1782e-04, 3.6918e-04, 6.8279e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7455e-04, 2.3580e-03, 2.4864e-04],
        [4.9175e-04, 8.6761e-04, 5.0151e-04],
        [2.2401e-04, 2.7863e-04, 1.1961e-04],
        [5.8282e-04, 1.8649e-03, 8.0930e-05],
        [4.7528e-04, 1.4158e-03, 3.1033e-04],
        [3.2624e-03, 4.8690e-03, 1.3592e-04],
        [3.9350e-04, 4.4364e-04, 1.9477e-04],
        [5.7075e-04, 4.6345e-04, 1.6865e-04],
        [1.6092e-04, 9.9142e-05, 8.9276e-05],
        [3.2062e-04, 2.2635e-03, 6.8413e-05],
        [1.1221e-03, 3.6677e-04, 1.1285e-04],
        [1.9673e-03, 1.2386e-03, 3.5086e-04],
        [1.1060e-03, 1.1331e-03, 4.8613e-04],
        [1.6886e-04, 1.0216e-04, 2.1782e-04],
        [2.1821e-04, 8.9259e-04, 3.6918e-04],
        [6.2118e-04, 1.3736e-04, 6.8279e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0003],
        [0.0014],
        [0.0006],
        [0.0002],
        [0.0018],
        [0.0016],
        [0.0006],
        [0.0020],
        [0.0008],
        [0.0001],
        [0.0003],
        [0.0005],
        [0.0001],
        [0.0019],
        [0.0003]], device='cuda:0')/tensor([[0.0004, 0.0003, 0.0014, 0.0006, 0.0002, 0.0018, 0.0016, 0.0006, 0.0020,
         0.0008, 0.0001, 0.0003, 0.0005, 0.0001, 0.0019, 0.0003]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.9901e-04],
        [1.5100e-05],
        [6.4363e-04],
        [4.3539e-03],
        [6.5304e-05],
        [1.2505e-03],
        [4.0980e-03],
        [4.3023e-04],
        [2.6201e-03],
        [2.4997e-03],
        [1.0598e-05],
        [3.2259e-05],
        [9.0495e-04],
        [3.2895e-05],
        [1.7951e-03],
        [1.8529e-03]], device='cuda:0')/tensor([[4.9901e-04, 1.5100e-05, 6.4363e-04, 4.3539e-03, 6.5304e-05, 1.2505e-03,
         4.0980e-03, 4.3023e-04, 2.6201e-03, 2.4997e-03, 1.0598e-05, 3.2259e-05,
         9.0495e-04, 3.2895e-05, 1.7951e-03, 1.8529e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.8909e-05],
        [7.8916e-05],
        [1.7589e-04],
        [1.0596e-04],
        [7.5805e-05],
        [5.2849e-04],
        [7.0855e-04],
        [1.6964e-04],
        [5.0600e-04],
        [3.5886e-04],
        [1.7462e-04],
        [3.0795e-04],
        [4.0507e-04],
        [2.7723e-05],
        [2.5592e-04],
        [1.6171e-04]], device='cuda:0')/tensor([[9.8909e-05, 7.8916e-05, 1.7589e-04, 1.0596e-04, 7.5805e-05, 5.2849e-04,
         7.0855e-04, 1.6964e-04, 5.0600e-04, 3.5886e-04, 1.7462e-04, 3.0795e-04,
         4.0507e-04, 2.7723e-05, 2.5592e-04, 1.6171e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2057e-04, 4.9901e-04, 9.8909e-05],
        [3.3493e-04, 1.5100e-05, 7.8916e-05],
        [1.4062e-03, 6.4363e-04, 1.7589e-04],
        [6.0397e-04, 4.3539e-03, 1.0596e-04],
        [2.1069e-04, 6.5304e-05, 7.5805e-05],
        [1.7994e-03, 1.2505e-03, 5.2849e-04],
        [1.5642e-03, 4.0980e-03, 7.0855e-04],
        [5.5963e-04, 4.3023e-04, 1.6964e-04],
        [1.9602e-03, 2.6201e-03, 5.0600e-04],
        [8.0663e-04, 2.4997e-03, 3.5886e-04],
        [1.1463e-04, 1.0598e-05, 1.7462e-04],
        [2.5357e-04, 3.2259e-05, 3.0795e-04],
        [5.1053e-04, 9.0495e-04, 4.0507e-04],
        [1.1738e-04, 3.2895e-05, 2.7723e-05],
        [1.9216e-03, 1.7951e-03, 2.5592e-04],
        [2.9385e-04, 1.8529e-03, 1.6171e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0004],
        [0.0006],
        [0.0005],
        [0.0013],
        [0.0004],
        [0.0004],
        [0.0014],
        [0.0008],
        [0.0009],
        [0.0006],
        [0.0002],
        [0.0002],
        [0.0005],
        [0.0011],
        [0.0004],
        [0.0005]], device='cuda:0')/tensor([[0.0004, 0.0006, 0.0005, 0.0013, 0.0004, 0.0004, 0.0014, 0.0008, 0.0009,
         0.0006, 0.0002, 0.0002, 0.0005, 0.0011, 0.0004, 0.0005]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[9.4787e-04],
        [9.8201e-04],
        [4.0183e-03],
        [4.6395e-03],
        [4.0686e-04],
        [5.5111e-04],
        [1.0251e-03],
        [1.0344e-03],
        [1.0137e-03],
        [6.2104e-04],
        [2.5312e-04],
        [1.3554e-05],
        [6.4019e-04],
        [1.3636e-03],
        [2.2455e-04],
        [2.8048e-05]], device='cuda:0')/tensor([[9.4787e-04, 9.8201e-04, 4.0183e-03, 4.6395e-03, 4.0686e-04, 5.5111e-04,
         1.0251e-03, 1.0344e-03, 1.0137e-03, 6.2104e-04, 2.5312e-04, 1.3554e-05,
         6.4019e-04, 1.3636e-03, 2.2455e-04, 2.8048e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.6451e-05],
        [2.5267e-04],
        [3.3816e-04],
        [2.2536e-04],
        [2.8134e-05],
        [2.1913e-04],
        [7.6797e-05],
        [1.7006e-04],
        [1.3525e-04],
        [8.1572e-05],
        [1.7170e-04],
        [2.7245e-04],
        [1.3852e-04],
        [3.2382e-04],
        [6.8684e-05],
        [3.7623e-04]], device='cuda:0')/tensor([[8.6451e-05, 2.5267e-04, 3.3816e-04, 2.2536e-04, 2.8134e-05, 2.1913e-04,
         7.6797e-05, 1.7006e-04, 1.3525e-04, 8.1572e-05, 1.7170e-04, 2.7245e-04,
         1.3852e-04, 3.2382e-04, 6.8684e-05, 3.7623e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7671e-04, 9.4787e-04, 8.6451e-05],
        [6.2054e-04, 9.8201e-04, 2.5267e-04],
        [5.0055e-04, 4.0183e-03, 3.3816e-04],
        [1.3349e-03, 4.6395e-03, 2.2536e-04],
        [4.1188e-04, 4.0686e-04, 2.8134e-05],
        [3.8334e-04, 5.5111e-04, 2.1913e-04],
        [1.3587e-03, 1.0251e-03, 7.6797e-05],
        [7.9269e-04, 1.0344e-03, 1.7006e-04],
        [8.6732e-04, 1.0137e-03, 1.3525e-04],
        [6.2674e-04, 6.2104e-04, 8.1572e-05],
        [2.4358e-04, 2.5312e-04, 1.7170e-04],
        [1.5763e-04, 1.3554e-05, 2.7245e-04],
        [4.8043e-04, 6.4019e-04, 1.3852e-04],
        [1.0791e-03, 1.3636e-03, 3.2382e-04],
        [3.5612e-04, 2.2455e-04, 6.8684e-05],
        [5.2357e-04, 2.8048e-05, 3.7623e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0006],
        [0.0004],
        [0.0005],
        [0.0013],
        [0.0010],
        [0.0004],
        [0.0007],
        [0.0007],
        [0.0007],
        [0.0003],
        [0.0078],
        [0.0001],
        [0.0001],
        [0.0006],
        [0.0015],
        [0.0006]], device='cuda:0')/tensor([[0.0006, 0.0004, 0.0005, 0.0013, 0.0010, 0.0004, 0.0007, 0.0007, 0.0007,
         0.0003, 0.0078, 0.0001, 0.0001, 0.0006, 0.0015, 0.0006]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.2014e-04],
        [2.5557e-04],
        [6.3829e-04],
        [2.0315e-03],
        [8.5814e-04],
        [5.7196e-04],
        [4.8060e-04],
        [7.1439e-04],
        [1.0775e-03],
        [9.5413e-05],
        [8.2503e-03],
        [8.7292e-05],
        [4.6879e-03],
        [5.2761e-04],
        [1.0683e-03],
        [8.5130e-04]], device='cuda:0')/tensor([[7.2014e-04, 2.5557e-04, 6.3829e-04, 2.0315e-03, 8.5814e-04, 5.7196e-04,
         4.8060e-04, 7.1439e-04, 1.0775e-03, 9.5413e-05, 8.2503e-03, 8.7292e-05,
         4.6879e-03, 5.2761e-04, 1.0683e-03, 8.5130e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[6.0781e-05],
        [9.6434e-05],
        [4.9850e-05],
        [2.3673e-04],
        [2.6955e-04],
        [1.4860e-04],
        [1.4786e-04],
        [5.7839e-04],
        [1.2424e-04],
        [7.2038e-04],
        [8.1468e-04],
        [2.7631e-04],
        [1.8071e-04],
        [1.6650e-04],
        [1.0715e-04],
        [1.8607e-04]], device='cuda:0')/tensor([[6.0781e-05, 9.6434e-05, 4.9850e-05, 2.3673e-04, 2.6955e-04, 1.4860e-04,
         1.4786e-04, 5.7839e-04, 1.2424e-04, 7.2038e-04, 8.1468e-04, 2.7631e-04,
         1.8071e-04, 1.6650e-04, 1.0715e-04, 1.8607e-04]], device='cuda:0'), torch.Size([1, 16])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
answers_probs: tensor([[5.6120e-04, 7.2014e-04, 6.0781e-05],
        [4.3415e-04, 2.5557e-04, 9.6434e-05],
        [5.1433e-04, 6.3829e-04, 4.9850e-05],
        [1.3284e-03, 2.0315e-03, 2.3673e-04],
        [9.5712e-04, 8.5814e-04, 2.6955e-04],
        [4.0997e-04, 5.7196e-04, 1.4860e-04],
        [7.2690e-04, 4.8060e-04, 1.4786e-04],
        [7.0942e-04, 7.1439e-04, 5.7839e-04],
        [7.4738e-04, 1.0775e-03, 1.2424e-04],
        [2.6379e-04, 9.5413e-05, 7.2038e-04],
        [7.8481e-03, 8.2503e-03, 8.1468e-04],
        [1.0518e-04, 8.7292e-05, 2.7631e-04],
        [1.2567e-04, 4.6879e-03, 1.8071e-04],
        [5.8304e-04, 5.2761e-04, 1.6650e-04],
        [1.4985e-03, 1.0683e-03, 1.0715e-04],
        [5.7539e-04, 8.5130e-04, 1.8607e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[0.0002],
        [0.0003],
        [0.0010],
        [0.0004]], device='cuda:0')/tensor([[0.0002, 0.0003, 0.0010, 0.0004]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.8900e-05],
        [5.1832e-05],
        [8.7275e-03],
        [4.8908e-05]], device='cuda:0')/tensor([[1.8900e-05, 5.1832e-05, 8.7275e-03, 4.8908e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[3.8284e-04],
        [1.3779e-04],
        [8.3255e-05],
        [1.2856e-04]], device='cuda:0')/tensor([[3.8284e-04, 1.3779e-04, 8.3255e-05, 1.2856e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.5470e-04, 1.8900e-05, 3.8284e-04],
        [2.7432e-04, 5.1832e-05, 1.3779e-04],
        [1.0412e-03, 8.7275e-03, 8.3255e-05],
        [4.2211e-04, 4.8908e-05, 1.2856e-04]], device='cuda:0')
acc:  0.3939393939393939
Time taken to execute the de NLI task with prompt type rare_synonyms, variation 5 and batchsize 16: 0:01:02.197379
path ['42', 'de', 'flan', 'NLI', 'rare_synonyms', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
----------- 42 de google/flan-t5-base NLI identical_modal 0 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 190.71it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.5203e-04],
        [2.8693e-04],
        [1.2470e-04],
        [6.4868e-05],
        [8.3710e-05],
        [4.2185e-05],
        [1.1307e-04],
        [1.2289e-05],
        [2.4867e-04],
        [9.8927e-05],
        [2.1498e-05],
        [3.7988e-04],
        [3.7858e-04],
        [6.5376e-04],
        [7.1933e-04],
        [3.9193e-04]], device='cuda:0')/tensor([[3.5203e-04, 2.8693e-04, 1.2470e-04, 6.4868e-05, 8.3710e-05, 4.2185e-05,
         1.1307e-04, 1.2289e-05, 2.4867e-04, 9.8927e-05, 2.1498e-05, 3.7988e-04,
         3.7858e-04, 6.5376e-04, 7.1933e-04, 3.9193e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.7586e-03],
        [2.8439e-04],
        [2.8939e-05],
        [2.0693e-06],
        [2.9337e-05],
        [1.3042e-05],
        [3.6545e-05],
        [1.4472e-06],
        [2.6573e-05],
        [2.2491e-06],
        [9.0322e-07],
        [1.1670e-03],
        [2.9613e-04],
        [1.3425e-04],
        [3.0663e-04],
        [1.9538e-04]], device='cuda:0')/tensor([[1.7586e-03, 2.8439e-04, 2.8939e-05, 2.0693e-06, 2.9337e-05, 1.3042e-05,
         3.6545e-05, 1.4472e-06, 2.6573e-05, 2.2491e-06, 9.0322e-07, 1.1670e-03,
         2.9613e-04, 1.3425e-04, 3.0663e-04, 1.9538e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.1978e-05],
        [1.2624e-04],
        [1.0772e-05],
        [3.9570e-05],
        [9.3693e-06],
        [8.8234e-06],
        [7.3607e-06],
        [2.5768e-06],
        [2.4466e-05],
        [1.8693e-05],
        [5.7593e-06],
        [1.1441e-04],
        [2.8553e-04],
        [1.2646e-05],
        [1.6706e-04],
        [4.1199e-05]], device='cuda:0')/tensor([[4.1978e-05, 1.2624e-04, 1.0772e-05, 3.9570e-05, 9.3693e-06, 8.8234e-06,
         7.3607e-06, 2.5768e-06, 2.4466e-05, 1.8693e-05, 5.7593e-06, 1.1441e-04,
         2.8553e-04, 1.2646e-05, 1.6706e-04, 4.1199e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.5203e-04, 1.7586e-03, 4.1978e-05],
        [2.8693e-04, 2.8439e-04, 1.2624e-04],
        [1.2470e-04, 2.8939e-05, 1.0772e-05],
        [6.4868e-05, 2.0693e-06, 3.9570e-05],
        [8.3710e-05, 2.9337e-05, 9.3693e-06],
        [4.2185e-05, 1.3042e-05, 8.8234e-06],
        [1.1307e-04, 3.6545e-05, 7.3607e-06],
        [1.2289e-05, 1.4472e-06, 2.5768e-06],
        [2.4867e-04, 2.6573e-05, 2.4466e-05],
        [9.8927e-05, 2.2491e-06, 1.8693e-05],
        [2.1498e-05, 9.0322e-07, 5.7593e-06],
        [3.7988e-04, 1.1670e-03, 1.1441e-04],
        [3.7858e-04, 2.9613e-04, 2.8553e-04],
        [6.5376e-04, 1.3425e-04, 1.2646e-05],
        [7.1933e-04, 3.0663e-04, 1.6706e-04],
        [3.9193e-04, 1.9538e-04, 4.1199e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7319e-04],
        [3.7205e-03],
        [1.2026e-04],
        [1.2700e-04],
        [1.8018e-04],
        [2.4314e-04],
        [9.6897e-04],
        [1.1528e-04],
        [3.2531e-04],
        [2.0356e-04],
        [5.5113e-05],
        [2.6920e-04],
        [7.7380e-04],
        [2.6706e-04],
        [1.1302e-04],
        [1.1229e-04]], device='cuda:0')/tensor([[1.7319e-04, 3.7205e-03, 1.2026e-04, 1.2700e-04, 1.8018e-04, 2.4314e-04,
         9.6897e-04, 1.1528e-04, 3.2531e-04, 2.0356e-04, 5.5113e-05, 2.6920e-04,
         7.7380e-04, 2.6706e-04, 1.1302e-04, 1.1229e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.5473e-05],
        [1.1767e-03],
        [3.1953e-05],
        [5.6800e-04],
        [1.5117e-04],
        [8.4327e-03],
        [3.5156e-04],
        [7.5061e-05],
        [3.6983e-05],
        [1.9623e-04],
        [1.9062e-05],
        [1.2278e-04],
        [4.2617e-04],
        [2.9605e-04],
        [1.2264e-05],
        [5.1810e-07]], device='cuda:0')/tensor([[7.5473e-05, 1.1767e-03, 3.1953e-05, 5.6800e-04, 1.5117e-04, 8.4327e-03,
         3.5156e-04, 7.5061e-05, 3.6983e-05, 1.9623e-04, 1.9062e-05, 1.2278e-04,
         4.2617e-04, 2.9605e-04, 1.2264e-05, 5.1810e-07]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.3208e-05],
        [4.8125e-04],
        [1.4205e-05],
        [3.5911e-05],
        [7.7020e-05],
        [1.0680e-04],
        [2.0756e-04],
        [8.1589e-05],
        [1.9420e-05],
        [1.6478e-04],
        [1.5198e-05],
        [4.1193e-05],
        [5.7399e-05],
        [4.2027e-05],
        [2.1828e-05],
        [5.7261e-06]], device='cuda:0')/tensor([[4.3208e-05, 4.8125e-04, 1.4205e-05, 3.5911e-05, 7.7020e-05, 1.0680e-04,
         2.0756e-04, 8.1589e-05, 1.9420e-05, 1.6478e-04, 1.5198e-05, 4.1193e-05,
         5.7399e-05, 4.2027e-05, 2.1828e-05, 5.7261e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7319e-04, 7.5473e-05, 4.3208e-05],
        [3.7205e-03, 1.1767e-03, 4.8125e-04],
        [1.2026e-04, 3.1953e-05, 1.4205e-05],
        [1.2700e-04, 5.6800e-04, 3.5911e-05],
        [1.8018e-04, 1.5117e-04, 7.7020e-05],
        [2.4314e-04, 8.4327e-03, 1.0680e-04],
        [9.6897e-04, 3.5156e-04, 2.0756e-04],
        [1.1528e-04, 7.5061e-05, 8.1589e-05],
        [3.2531e-04, 3.6983e-05, 1.9420e-05],
        [2.0356e-04, 1.9623e-04, 1.6478e-04],
        [5.5113e-05, 1.9062e-05, 1.5198e-05],
        [2.6920e-04, 1.2278e-04, 4.1193e-05],
        [7.7380e-04, 4.2617e-04, 5.7399e-05],
        [2.6706e-04, 2.9605e-04, 4.2027e-05],
        [1.1302e-04, 1.2264e-05, 2.1828e-05],
        [1.1229e-04, 5.1810e-07, 5.7261e-06]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.0888e-04],
        [9.7267e-05],
        [2.2790e-04],
        [5.6596e-04],
        [8.6646e-05],
        [3.7093e-05],
        [1.2308e-03],
        [6.9690e-04],
        [1.8831e-04],
        [1.7969e-04],
        [4.8078e-05],
        [4.6852e-05],
        [5.7885e-05],
        [1.6848e-04],
        [1.7051e-04],
        [3.7346e-05]], device='cuda:0')/tensor([[5.0888e-04, 9.7267e-05, 2.2790e-04, 5.6596e-04, 8.6646e-05, 3.7093e-05,
         1.2308e-03, 6.9690e-04, 1.8831e-04, 1.7969e-04, 4.8078e-05, 4.6852e-05,
         5.7885e-05, 1.6848e-04, 1.7051e-04, 3.7346e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.4463e-04],
        [5.6475e-05],
        [3.3515e-05],
        [1.7288e-04],
        [1.2912e-03],
        [3.7321e-07],
        [4.7527e-03],
        [4.2284e-04],
        [2.8309e-04],
        [2.8515e-05],
        [6.3959e-07],
        [1.1941e-06],
        [2.8551e-06],
        [9.3929e-05],
        [2.3695e-05],
        [8.0317e-06]], device='cuda:0')/tensor([[6.4463e-04, 5.6475e-05, 3.3515e-05, 1.7288e-04, 1.2912e-03, 3.7321e-07,
         4.7527e-03, 4.2284e-04, 2.8309e-04, 2.8515e-05, 6.3959e-07, 1.1941e-06,
         2.8551e-06, 9.3929e-05, 2.3695e-05, 8.0317e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.5549e-05],
        [4.1343e-05],
        [3.5583e-05],
        [2.9971e-04],
        [4.7221e-05],
        [4.8761e-06],
        [2.1818e-04],
        [2.6338e-04],
        [4.2225e-05],
        [1.5450e-05],
        [7.5782e-06],
        [1.6287e-06],
        [6.8562e-06],
        [1.9866e-05],
        [2.4003e-05],
        [1.0429e-05]], device='cuda:0')/tensor([[2.5549e-05, 4.1343e-05, 3.5583e-05, 2.9971e-04, 4.7221e-05, 4.8761e-06,
         2.1818e-04, 2.6338e-04, 4.2225e-05, 1.5450e-05, 7.5782e-06, 1.6287e-06,
         6.8562e-06, 1.9866e-05, 2.4003e-05, 1.0429e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.0888e-04, 6.4463e-04, 2.5549e-05],
        [9.7267e-05, 5.6475e-05, 4.1343e-05],
        [2.2790e-04, 3.3515e-05, 3.5583e-05],
        [5.6596e-04, 1.7288e-04, 2.9971e-04],
        [8.6646e-05, 1.2912e-03, 4.7221e-05],
        [3.7093e-05, 3.7321e-07, 4.8761e-06],
        [1.2308e-03, 4.7527e-03, 2.1818e-04],
        [6.9690e-04, 4.2284e-04, 2.6338e-04],
        [1.8831e-04, 2.8309e-04, 4.2225e-05],
        [1.7969e-04, 2.8515e-05, 1.5450e-05],
        [4.8078e-05, 6.3959e-07, 7.5782e-06],
        [4.6852e-05, 1.1941e-06, 1.6287e-06],
        [5.7885e-05, 2.8551e-06, 6.8562e-06],
        [1.6848e-04, 9.3929e-05, 1.9866e-05],
        [1.7051e-04, 2.3695e-05, 2.4003e-05],
        [3.7346e-05, 8.0317e-06, 1.0429e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.3258e-04],
        [5.8727e-04],
        [6.4474e-04],
        [2.4756e-05],
        [7.2502e-04],
        [2.9244e-05],
        [1.8109e-04],
        [2.2335e-05],
        [1.4821e-04],
        [1.5066e-04],
        [3.6107e-05],
        [1.5249e-03],
        [8.1042e-04],
        [1.0974e-04],
        [1.9083e-05],
        [1.7284e-04]], device='cuda:0')/tensor([[1.3258e-04, 5.8727e-04, 6.4474e-04, 2.4756e-05, 7.2502e-04, 2.9244e-05,
         1.8109e-04, 2.2335e-05, 1.4821e-04, 1.5066e-04, 3.6107e-05, 1.5249e-03,
         8.1042e-04, 1.0974e-04, 1.9083e-05, 1.7284e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2597e-04],
        [2.2091e-04],
        [6.8377e-03],
        [1.2065e-06],
        [3.9050e-04],
        [1.3141e-05],
        [4.1740e-04],
        [3.8903e-07],
        [8.9541e-05],
        [1.5167e-04],
        [5.0878e-06],
        [3.5378e-04],
        [1.8544e-04],
        [2.4357e-05],
        [4.6430e-07],
        [3.5812e-04]], device='cuda:0')/tensor([[1.2597e-04, 2.2091e-04, 6.8377e-03, 1.2065e-06, 3.9050e-04, 1.3141e-05,
         4.1740e-04, 3.8903e-07, 8.9541e-05, 1.5167e-04, 5.0878e-06, 3.5378e-04,
         1.8544e-04, 2.4357e-05, 4.6430e-07, 3.5812e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.1489e-05],
        [2.1992e-05],
        [9.4987e-05],
        [1.5374e-05],
        [1.0360e-04],
        [9.4610e-06],
        [5.3457e-05],
        [4.4228e-06],
        [3.3858e-05],
        [7.8451e-05],
        [5.6551e-06],
        [7.1092e-05],
        [5.5575e-05],
        [1.7466e-05],
        [1.8197e-06],
        [8.7181e-05]], device='cuda:0')/tensor([[2.1489e-05, 2.1992e-05, 9.4987e-05, 1.5374e-05, 1.0360e-04, 9.4610e-06,
         5.3457e-05, 4.4228e-06, 3.3858e-05, 7.8451e-05, 5.6551e-06, 7.1092e-05,
         5.5575e-05, 1.7466e-05, 1.8197e-06, 8.7181e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3258e-04, 1.2597e-04, 2.1489e-05],
        [5.8727e-04, 2.2091e-04, 2.1992e-05],
        [6.4474e-04, 6.8377e-03, 9.4987e-05],
        [2.4756e-05, 1.2065e-06, 1.5374e-05],
        [7.2502e-04, 3.9050e-04, 1.0360e-04],
        [2.9244e-05, 1.3141e-05, 9.4610e-06],
        [1.8109e-04, 4.1740e-04, 5.3457e-05],
        [2.2335e-05, 3.8903e-07, 4.4228e-06],
        [1.4821e-04, 8.9541e-05, 3.3858e-05],
        [1.5066e-04, 1.5167e-04, 7.8451e-05],
        [3.6107e-05, 5.0878e-06, 5.6551e-06],
        [1.5249e-03, 3.5378e-04, 7.1092e-05],
        [8.1042e-04, 1.8544e-04, 5.5575e-05],
        [1.0974e-04, 2.4357e-05, 1.7466e-05],
        [1.9083e-05, 4.6430e-07, 1.8197e-06],
        [1.7284e-04, 3.5812e-04, 8.7181e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.5920e-04],
        [4.2681e-04],
        [8.6460e-04],
        [1.5803e-04],
        [1.1718e-04],
        [4.1136e-04],
        [2.3827e-05],
        [1.1788e-04],
        [2.1634e-04],
        [2.6266e-05],
        [6.6333e-04],
        [4.3270e-05],
        [2.4388e-04],
        [5.3370e-04],
        [8.3273e-05],
        [3.5680e-05]], device='cuda:0')/tensor([[1.5920e-04, 4.2681e-04, 8.6460e-04, 1.5803e-04, 1.1718e-04, 4.1136e-04,
         2.3827e-05, 1.1788e-04, 2.1634e-04, 2.6266e-05, 6.6333e-04, 4.3270e-05,
         2.4388e-04, 5.3370e-04, 8.3273e-05, 3.5680e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.6837e-06],
        [1.6861e-04],
        [3.9167e-04],
        [1.5111e-05],
        [8.9662e-04],
        [2.6743e-04],
        [2.7863e-06],
        [1.8084e-05],
        [2.2552e-05],
        [1.1114e-06],
        [4.4533e-04],
        [1.3589e-06],
        [1.1216e-04],
        [3.4935e-04],
        [9.6905e-06],
        [2.1319e-06]], device='cuda:0')/tensor([[5.6837e-06, 1.6861e-04, 3.9167e-04, 1.5111e-05, 8.9662e-04, 2.6743e-04,
         2.7863e-06, 1.8084e-05, 2.2552e-05, 1.1114e-06, 4.4533e-04, 1.3589e-06,
         1.1216e-04, 3.4935e-04, 9.6905e-06, 2.1319e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.4823e-06],
        [1.7362e-04],
        [1.1217e-04],
        [2.9490e-05],
        [2.4208e-05],
        [9.2202e-05],
        [3.9535e-06],
        [2.2247e-05],
        [1.0521e-05],
        [2.2663e-06],
        [2.3847e-04],
        [1.6274e-05],
        [5.8663e-05],
        [1.1285e-04],
        [8.8482e-06],
        [3.7652e-06]], device='cuda:0')/tensor([[9.4823e-06, 1.7362e-04, 1.1217e-04, 2.9490e-05, 2.4208e-05, 9.2202e-05,
         3.9535e-06, 2.2247e-05, 1.0521e-05, 2.2663e-06, 2.3847e-04, 1.6274e-05,
         5.8663e-05, 1.1285e-04, 8.8482e-06, 3.7652e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.5920e-04, 5.6837e-06, 9.4823e-06],
        [4.2681e-04, 1.6861e-04, 1.7362e-04],
        [8.6460e-04, 3.9167e-04, 1.1217e-04],
        [1.5803e-04, 1.5111e-05, 2.9490e-05],
        [1.1718e-04, 8.9662e-04, 2.4208e-05],
        [4.1136e-04, 2.6743e-04, 9.2202e-05],
        [2.3827e-05, 2.7863e-06, 3.9535e-06],
        [1.1788e-04, 1.8084e-05, 2.2247e-05],
        [2.1634e-04, 2.2552e-05, 1.0521e-05],
        [2.6266e-05, 1.1114e-06, 2.2663e-06],
        [6.6333e-04, 4.4533e-04, 2.3847e-04],
        [4.3270e-05, 1.3589e-06, 1.6274e-05],
        [2.4388e-04, 1.1216e-04, 5.8663e-05],
        [5.3370e-04, 3.4935e-04, 1.1285e-04],
        [8.3273e-05, 9.6905e-06, 8.8482e-06],
        [3.5680e-05, 2.1319e-06, 3.7652e-06]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.3588e-04],
        [3.1697e-05],
        [3.2017e-04],
        [1.7890e-04],
        [1.2283e-04],
        [2.5442e-05],
        [1.6534e-04],
        [5.5274e-04],
        [1.6557e-05],
        [2.3787e-04],
        [4.9445e-04],
        [1.1431e-04],
        [2.0153e-04],
        [4.1210e-04],
        [2.6995e-04],
        [1.1137e-04]], device='cuda:0')/tensor([[2.3588e-04, 3.1697e-05, 3.2017e-04, 1.7890e-04, 1.2283e-04, 2.5442e-05,
         1.6534e-04, 5.5274e-04, 1.6557e-05, 2.3787e-04, 4.9445e-04, 1.1431e-04,
         2.0153e-04, 4.1210e-04, 2.6995e-04, 1.1137e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.6554e-05],
        [1.7112e-06],
        [3.0748e-05],
        [1.0116e-04],
        [2.6008e-03],
        [5.2040e-06],
        [8.1133e-05],
        [5.9706e-04],
        [2.3815e-06],
        [1.3064e-04],
        [6.3766e-05],
        [2.8924e-05],
        [5.4462e-04],
        [2.8327e-04],
        [5.2078e-04],
        [2.6431e-04]], device='cuda:0')/tensor([[5.6554e-05, 1.7112e-06, 3.0748e-05, 1.0116e-04, 2.6008e-03, 5.2040e-06,
         8.1133e-05, 5.9706e-04, 2.3815e-06, 1.3064e-04, 6.3766e-05, 2.8924e-05,
         5.4462e-04, 2.8327e-04, 5.2078e-04, 2.6431e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.7928e-05],
        [3.4045e-06],
        [2.8444e-05],
        [8.1558e-05],
        [3.1125e-05],
        [8.9975e-06],
        [1.0684e-04],
        [1.5901e-04],
        [4.7390e-06],
        [5.8292e-05],
        [4.7026e-05],
        [1.3530e-05],
        [1.3626e-04],
        [1.5765e-04],
        [1.1844e-04],
        [3.0177e-04]], device='cuda:0')/tensor([[1.7928e-05, 3.4045e-06, 2.8444e-05, 8.1558e-05, 3.1125e-05, 8.9975e-06,
         1.0684e-04, 1.5901e-04, 4.7390e-06, 5.8292e-05, 4.7026e-05, 1.3530e-05,
         1.3626e-04, 1.5765e-04, 1.1844e-04, 3.0177e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3588e-04, 5.6554e-05, 1.7928e-05],
        [3.1697e-05, 1.7112e-06, 3.4045e-06],
        [3.2017e-04, 3.0748e-05, 2.8444e-05],
        [1.7890e-04, 1.0116e-04, 8.1558e-05],
        [1.2283e-04, 2.6008e-03, 3.1125e-05],
        [2.5442e-05, 5.2040e-06, 8.9975e-06],
        [1.6534e-04, 8.1133e-05, 1.0684e-04],
        [5.5274e-04, 5.9706e-04, 1.5901e-04],
        [1.6557e-05, 2.3815e-06, 4.7390e-06],
        [2.3787e-04, 1.3064e-04, 5.8292e-05],
        [4.9445e-04, 6.3766e-05, 4.7026e-05],
        [1.1431e-04, 2.8924e-05, 1.3530e-05],
        [2.0153e-04, 5.4462e-04, 1.3626e-04],
        [4.1210e-04, 2.8327e-04, 1.5765e-04],
        [2.6995e-04, 5.2078e-04, 1.1844e-04],
        [1.1137e-04, 2.6431e-04, 3.0177e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2226e-04],
        [3.2466e-04],
        [3.4459e-05],
        [4.4722e-04],
        [1.4652e-04],
        [3.8561e-04],
        [1.1025e-04],
        [1.7812e-04],
        [3.2247e-05],
        [1.4437e-05],
        [3.0539e-04],
        [2.0391e-04],
        [5.4121e-06],
        [1.5773e-03],
        [1.7878e-04],
        [2.3757e-04]], device='cuda:0')/tensor([[2.2226e-04, 3.2466e-04, 3.4459e-05, 4.4722e-04, 1.4652e-04, 3.8561e-04,
         1.1025e-04, 1.7812e-04, 3.2247e-05, 1.4437e-05, 3.0539e-04, 2.0391e-04,
         5.4121e-06, 1.5773e-03, 1.7878e-04, 2.3757e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.5166e-05],
        [1.5851e-04],
        [3.7396e-06],
        [5.3696e-05],
        [2.3851e-04],
        [2.4902e-05],
        [7.4197e-05],
        [1.5491e-04],
        [7.7082e-06],
        [4.8124e-07],
        [5.8375e-05],
        [6.1663e-05],
        [7.6260e-08],
        [2.5417e-04],
        [2.0926e-05],
        [9.8048e-05]], device='cuda:0')/tensor([[6.5166e-05, 1.5851e-04, 3.7396e-06, 5.3696e-05, 2.3851e-04, 2.4902e-05,
         7.4197e-05, 1.5491e-04, 7.7082e-06, 4.8124e-07, 5.8375e-05, 6.1663e-05,
         7.6260e-08, 2.5417e-04, 2.0926e-05, 9.8048e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6425e-05],
        [7.9674e-05],
        [2.4233e-06],
        [4.2325e-05],
        [2.4614e-04],
        [3.9101e-05],
        [4.9560e-05],
        [3.8712e-05],
        [9.7170e-06],
        [1.0270e-06],
        [1.8720e-05],
        [3.5256e-05],
        [8.9613e-07],
        [1.4520e-04],
        [1.9315e-05],
        [2.0162e-04]], device='cuda:0')/tensor([[5.6425e-05, 7.9674e-05, 2.4233e-06, 4.2325e-05, 2.4614e-04, 3.9101e-05,
         4.9560e-05, 3.8712e-05, 9.7170e-06, 1.0270e-06, 1.8720e-05, 3.5256e-05,
         8.9613e-07, 1.4520e-04, 1.9315e-05, 2.0162e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2226e-04, 6.5166e-05, 5.6425e-05],
        [3.2466e-04, 1.5851e-04, 7.9674e-05],
        [3.4459e-05, 3.7396e-06, 2.4233e-06],
        [4.4722e-04, 5.3696e-05, 4.2325e-05],
        [1.4652e-04, 2.3851e-04, 2.4614e-04],
        [3.8561e-04, 2.4902e-05, 3.9101e-05],
        [1.1025e-04, 7.4197e-05, 4.9560e-05],
        [1.7812e-04, 1.5491e-04, 3.8712e-05],
        [3.2247e-05, 7.7082e-06, 9.7170e-06],
        [1.4437e-05, 4.8124e-07, 1.0270e-06],
        [3.0539e-04, 5.8375e-05, 1.8720e-05],
        [2.0391e-04, 6.1663e-05, 3.5256e-05],
        [5.4121e-06, 7.6260e-08, 8.9613e-07],
        [1.5773e-03, 2.5417e-04, 1.4520e-04],
        [1.7878e-04, 2.0926e-05, 1.9315e-05],
        [2.3757e-04, 9.8048e-05, 2.0162e-04]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2703e-03],
        [1.1418e-04],
        [5.1554e-04],
        [6.4708e-05],
        [4.0874e-04],
        [1.8417e-04],
        [3.4887e-04],
        [1.5746e-04],
        [5.9649e-05],
        [8.4940e-05],
        [3.2188e-04],
        [7.1786e-05],
        [7.8000e-06],
        [9.2520e-05],
        [2.0698e-04],
        [3.5838e-04]], device='cuda:0')/tensor([[1.2703e-03, 1.1418e-04, 5.1554e-04, 6.4708e-05, 4.0874e-04, 1.8417e-04,
         3.4887e-04, 1.5746e-04, 5.9649e-05, 8.4940e-05, 3.2188e-04, 7.1786e-05,
         7.8000e-06, 9.2520e-05, 2.0698e-04, 3.5838e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.2165e-04],
        [2.4775e-04],
        [1.2412e-03],
        [2.6263e-06],
        [2.4897e-04],
        [4.4327e-05],
        [1.5326e-04],
        [4.1253e-05],
        [2.1487e-05],
        [6.4997e-06],
        [5.1178e-04],
        [4.6068e-05],
        [1.0835e-06],
        [8.4044e-06],
        [6.1898e-05],
        [1.1812e-04]], device='cuda:0')/tensor([[5.2165e-04, 2.4775e-04, 1.2412e-03, 2.6263e-06, 2.4897e-04, 4.4327e-05,
         1.5326e-04, 4.1253e-05, 2.1487e-05, 6.4997e-06, 5.1178e-04, 4.6068e-05,
         1.0835e-06, 8.4044e-06, 6.1898e-05, 1.1812e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[1.0849e-03],
        [3.6718e-05],
        [1.3694e-04],
        [2.9732e-05],
        [3.3540e-05],
        [9.4306e-06],
        [6.7186e-05],
        [1.1187e-04],
        [1.1365e-05],
        [1.5925e-05],
        [1.2992e-04],
        [1.0500e-05],
        [2.6335e-06],
        [7.7788e-05],
        [1.7103e-04],
        [1.7769e-04]], device='cuda:0')/tensor([[1.0849e-03, 3.6718e-05, 1.3694e-04, 2.9732e-05, 3.3540e-05, 9.4306e-06,
         6.7186e-05, 1.1187e-04, 1.1365e-05, 1.5925e-05, 1.2992e-04, 1.0500e-05,
         2.6335e-06, 7.7788e-05, 1.7103e-04, 1.7769e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2703e-03, 5.2165e-04, 1.0849e-03],
        [1.1418e-04, 2.4775e-04, 3.6718e-05],
        [5.1554e-04, 1.2412e-03, 1.3694e-04],
        [6.4708e-05, 2.6263e-06, 2.9732e-05],
        [4.0874e-04, 2.4897e-04, 3.3540e-05],
        [1.8417e-04, 4.4327e-05, 9.4306e-06],
        [3.4887e-04, 1.5326e-04, 6.7186e-05],
        [1.5746e-04, 4.1253e-05, 1.1187e-04],
        [5.9649e-05, 2.1487e-05, 1.1365e-05],
        [8.4940e-05, 6.4997e-06, 1.5925e-05],
        [3.2188e-04, 5.1178e-04, 1.2992e-04],
        [7.1786e-05, 4.6068e-05, 1.0500e-05],
        [7.8000e-06, 1.0835e-06, 2.6335e-06],
        [9.2520e-05, 8.4044e-06, 7.7788e-05],
        [2.0698e-04, 6.1898e-05, 1.7103e-04],
        [3.5838e-04, 1.1812e-04, 1.7769e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[2.0376e-04],
        [2.7199e-05],
        [3.8116e-04],
        [2.5327e-04]], device='cuda:0')/tensor([[2.0376e-04, 2.7199e-05, 3.8116e-04, 2.5327e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[2.3903e-04],
        [4.1578e-07],
        [5.7770e-05],
        [2.9686e-03]], device='cuda:0')/tensor([[2.3903e-04, 4.1578e-07, 5.7770e-05, 2.9686e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[4.1259e-04],
        [1.9156e-06],
        [4.2184e-05],
        [1.0272e-04]], device='cuda:0')/tensor([[4.1259e-04, 1.9156e-06, 4.2184e-05, 1.0272e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[2.0376e-04, 2.3903e-04, 4.1259e-04],
        [2.7199e-05, 4.1578e-07, 1.9156e-06],
        [3.8116e-04, 5.7770e-05, 4.2184e-05],
        [2.5327e-04, 2.9686e-03, 1.0272e-04]], device='cuda:0')
acc:  0.11363636363636363
Time taken to execute the de NLI task with prompt type identical_modal, variation 0 and batchsize 16: 0:01:01.779978
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_0']
----------- 42 de google/flan-t5-base NLI identical_modal 1 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 365.35it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[0.0001],
        [0.0003],
        [0.0022],
        [0.0002],
        [0.0003],
        [0.0003],
        [0.0002],
        [0.0004],
        [0.0002],
        [0.0010],
        [0.0003],
        [0.0003],
        [0.0003],
        [0.0001],
        [0.0010],
        [0.0007]], device='cuda:0')/tensor([[0.0001, 0.0003, 0.0022, 0.0002, 0.0003, 0.0003, 0.0002, 0.0004, 0.0002,
         0.0010, 0.0003, 0.0003, 0.0003, 0.0001, 0.0010, 0.0007]],
       device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.6231e-03],
        [1.1653e-03],
        [2.9546e-03],
        [4.3976e-05],
        [3.4303e-04],
        [1.6246e-04],
        [8.0213e-04],
        [1.5893e-04],
        [9.9964e-04],
        [4.6544e-04],
        [1.4916e-04],
        [2.3573e-03],
        [2.5541e-04],
        [5.9730e-05],
        [7.5862e-04],
        [5.3585e-04]], device='cuda:0')/tensor([[5.6231e-03, 1.1653e-03, 2.9546e-03, 4.3976e-05, 3.4303e-04, 1.6246e-04,
         8.0213e-04, 1.5893e-04, 9.9964e-04, 4.6544e-04, 1.4916e-04, 2.3573e-03,
         2.5541e-04, 5.9730e-05, 7.5862e-04, 5.3585e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5521e-05],
        [3.1008e-04],
        [1.6353e-04],
        [2.2475e-04],
        [2.8060e-04],
        [1.3230e-04],
        [1.5524e-04],
        [4.2746e-05],
        [5.7819e-05],
        [1.1560e-04],
        [2.0743e-04],
        [9.4147e-05],
        [4.6023e-05],
        [5.2958e-05],
        [1.6255e-04],
        [1.1255e-04]], device='cuda:0')/tensor([[4.5521e-05, 3.1008e-04, 1.6353e-04, 2.2475e-04, 2.8060e-04, 1.3230e-04,
         1.5524e-04, 4.2746e-05, 5.7819e-05, 1.1560e-04, 2.0743e-04, 9.4147e-05,
         4.6023e-05, 5.2958e-05, 1.6255e-04, 1.1255e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.3777e-04, 5.6231e-03, 4.5521e-05],
        [2.7375e-04, 1.1653e-03, 3.1008e-04],
        [2.1639e-03, 2.9546e-03, 1.6353e-04],
        [1.9727e-04, 4.3976e-05, 2.2475e-04],
        [2.5520e-04, 3.4303e-04, 2.8060e-04],
        [2.6179e-04, 1.6246e-04, 1.3230e-04],
        [1.8528e-04, 8.0213e-04, 1.5524e-04],
        [3.5035e-04, 1.5893e-04, 4.2746e-05],
        [1.6645e-04, 9.9964e-04, 5.7819e-05],
        [1.0142e-03, 4.6544e-04, 1.1560e-04],
        [3.4169e-04, 1.4916e-04, 2.0743e-04],
        [2.5973e-04, 2.3573e-03, 9.4147e-05],
        [2.8725e-04, 2.5541e-04, 4.6023e-05],
        [1.1614e-04, 5.9730e-05, 5.2958e-05],
        [9.8944e-04, 7.5862e-04, 1.6255e-04],
        [6.9778e-04, 5.3585e-04, 1.1255e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.6467e-03],
        [2.5693e-04],
        [4.0912e-04],
        [6.8689e-04],
        [4.7284e-04],
        [3.3067e-04],
        [1.7702e-04],
        [2.7496e-04],
        [1.0715e-03],
        [5.9963e-04],
        [1.7288e-04],
        [8.7815e-05],
        [2.2848e-04],
        [5.6037e-04],
        [4.7747e-05],
        [2.4266e-04]], device='cuda:0')/tensor([[1.6467e-03, 2.5693e-04, 4.0912e-04, 6.8689e-04, 4.7284e-04, 3.3067e-04,
         1.7702e-04, 2.7496e-04, 1.0715e-03, 5.9963e-04, 1.7288e-04, 8.7815e-05,
         2.2848e-04, 5.6037e-04, 4.7747e-05, 2.4266e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0647e-03],
        [1.1218e-02],
        [1.3811e-04],
        [3.7417e-04],
        [4.5091e-04],
        [3.8647e-04],
        [4.4991e-04],
        [7.5066e-05],
        [4.7521e-04],
        [3.1359e-04],
        [6.2154e-05],
        [1.5307e-05],
        [5.8795e-05],
        [1.7534e-04],
        [1.2142e-06],
        [1.2721e-06]], device='cuda:0')/tensor([[1.0647e-03, 1.1218e-02, 1.3811e-04, 3.7417e-04, 4.5091e-04, 3.8647e-04,
         4.4991e-04, 7.5066e-05, 4.7521e-04, 3.1359e-04, 6.2154e-05, 1.5307e-05,
         5.8795e-05, 1.7534e-04, 1.2142e-06, 1.2721e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5685e-04],
        [1.0175e-04],
        [3.6645e-05],
        [2.2016e-04],
        [1.0461e-04],
        [9.3720e-05],
        [9.0152e-05],
        [4.5958e-05],
        [2.4147e-04],
        [1.3634e-04],
        [3.4924e-05],
        [1.9982e-05],
        [1.7232e-05],
        [1.3503e-04],
        [1.3527e-05],
        [1.4721e-05]], device='cuda:0')/tensor([[4.5685e-04, 1.0175e-04, 3.6645e-05, 2.2016e-04, 1.0461e-04, 9.3720e-05,
         9.0152e-05, 4.5958e-05, 2.4147e-04, 1.3634e-04, 3.4924e-05, 1.9982e-05,
         1.7232e-05, 1.3503e-04, 1.3527e-05, 1.4721e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.6467e-03, 1.0647e-03, 4.5685e-04],
        [2.5693e-04, 1.1218e-02, 1.0175e-04],
        [4.0912e-04, 1.3811e-04, 3.6645e-05],
        [6.8689e-04, 3.7417e-04, 2.2016e-04],
        [4.7284e-04, 4.5091e-04, 1.0461e-04],
        [3.3067e-04, 3.8647e-04, 9.3720e-05],
        [1.7702e-04, 4.4991e-04, 9.0152e-05],
        [2.7496e-04, 7.5066e-05, 4.5958e-05],
        [1.0715e-03, 4.7521e-04, 2.4147e-04],
        [5.9963e-04, 3.1359e-04, 1.3634e-04],
        [1.7288e-04, 6.2154e-05, 3.4924e-05],
        [8.7815e-05, 1.5307e-05, 1.9982e-05],
        [2.2848e-04, 5.8795e-05, 1.7232e-05],
        [5.6037e-04, 1.7534e-04, 1.3503e-04],
        [4.7747e-05, 1.2142e-06, 1.3527e-05],
        [2.4266e-04, 1.2721e-06, 1.4721e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2328e-04],
        [1.1574e-05],
        [4.1473e-04],
        [7.3052e-04],
        [3.4499e-05],
        [7.2524e-05],
        [3.8423e-04],
        [4.3295e-05],
        [1.7654e-04],
        [1.2918e-04],
        [1.3661e-03],
        [4.3547e-04],
        [2.9266e-04],
        [2.4462e-04],
        [2.9008e-04],
        [1.6669e-04]], device='cuda:0')/tensor([[2.2328e-04, 1.1574e-05, 4.1473e-04, 7.3052e-04, 3.4499e-05, 7.2524e-05,
         3.8423e-04, 4.3295e-05, 1.7654e-04, 1.2918e-04, 1.3661e-03, 4.3547e-04,
         2.9266e-04, 2.4462e-04, 2.9008e-04, 1.6669e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.8278e-05],
        [2.6194e-07],
        [1.2437e-04],
        [8.6287e-04],
        [1.1337e-06],
        [8.1275e-06],
        [2.6915e-04],
        [3.3796e-06],
        [7.9201e-05],
        [3.7640e-05],
        [6.0270e-03],
        [2.0181e-04],
        [1.0854e-04],
        [3.6533e-05],
        [1.3347e-04],
        [1.5011e-03]], device='cuda:0')/tensor([[7.8278e-05, 2.6194e-07, 1.2437e-04, 8.6287e-04, 1.1337e-06, 8.1275e-06,
         2.6915e-04, 3.3796e-06, 7.9201e-05, 3.7640e-05, 6.0270e-03, 2.0181e-04,
         1.0854e-04, 3.6533e-05, 1.3347e-04, 1.5011e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.1319e-05],
        [2.6430e-06],
        [9.7632e-05],
        [6.0261e-05],
        [3.5529e-06],
        [1.2255e-05],
        [1.2795e-04],
        [1.5143e-05],
        [5.1779e-05],
        [1.8358e-05],
        [2.7792e-04],
        [1.3623e-04],
        [4.5640e-05],
        [4.0641e-05],
        [9.2975e-05],
        [5.0701e-05]], device='cuda:0')/tensor([[4.1319e-05, 2.6430e-06, 9.7632e-05, 6.0261e-05, 3.5529e-06, 1.2255e-05,
         1.2795e-04, 1.5143e-05, 5.1779e-05, 1.8358e-05, 2.7792e-04, 1.3623e-04,
         4.5640e-05, 4.0641e-05, 9.2975e-05, 5.0701e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2328e-04, 7.8278e-05, 4.1319e-05],
        [1.1574e-05, 2.6194e-07, 2.6430e-06],
        [4.1473e-04, 1.2437e-04, 9.7632e-05],
        [7.3052e-04, 8.6287e-04, 6.0261e-05],
        [3.4499e-05, 1.1337e-06, 3.5529e-06],
        [7.2524e-05, 8.1275e-06, 1.2255e-05],
        [3.8423e-04, 2.6915e-04, 1.2795e-04],
        [4.3295e-05, 3.3796e-06, 1.5143e-05],
        [1.7654e-04, 7.9201e-05, 5.1779e-05],
        [1.2918e-04, 3.7640e-05, 1.8358e-05],
        [1.3661e-03, 6.0270e-03, 2.7792e-04],
        [4.3547e-04, 2.0181e-04, 1.3623e-04],
        [2.9266e-04, 1.0854e-04, 4.5640e-05],
        [2.4462e-04, 3.6533e-05, 4.0641e-05],
        [2.9008e-04, 1.3347e-04, 9.2975e-05],
        [1.6669e-04, 1.5011e-03, 5.0701e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1866e-04],
        [7.8032e-04],
        [2.4345e-04],
        [2.0125e-04],
        [3.9610e-04],
        [3.9754e-04],
        [5.2637e-05],
        [5.1893e-05],
        [1.2791e-04],
        [5.0878e-04],
        [2.7784e-04],
        [1.0845e-04],
        [2.2729e-04],
        [9.2017e-05],
        [1.5614e-04],
        [2.1884e-04]], device='cuda:0')/tensor([[2.1866e-04, 7.8032e-04, 2.4345e-04, 2.0125e-04, 3.9610e-04, 3.9754e-04,
         5.2637e-05, 5.1893e-05, 1.2791e-04, 5.0878e-04, 2.7784e-04, 1.0845e-04,
         2.2729e-04, 9.2017e-05, 1.5614e-04, 2.1884e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[6.6158e-04],
        [2.1411e-04],
        [9.2708e-05],
        [9.5516e-06],
        [6.3112e-04],
        [1.7910e-04],
        [2.6788e-05],
        [6.4231e-06],
        [2.1336e-06],
        [5.8410e-03],
        [4.8474e-05],
        [2.4064e-04],
        [5.9992e-05],
        [3.4660e-06],
        [1.0075e-04],
        [2.9159e-04]], device='cuda:0')/tensor([[6.6158e-04, 2.1411e-04, 9.2708e-05, 9.5516e-06, 6.3112e-04, 1.7910e-04,
         2.6788e-05, 6.4231e-06, 2.1336e-06, 5.8410e-03, 4.8474e-05, 2.4064e-04,
         5.9992e-05, 3.4660e-06, 1.0075e-04, 2.9159e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.2399e-04],
        [5.5875e-05],
        [1.2405e-04],
        [1.5023e-05],
        [1.0011e-04],
        [1.1238e-04],
        [2.7998e-05],
        [1.5455e-05],
        [3.4430e-05],
        [3.0257e-04],
        [4.6424e-05],
        [4.7675e-05],
        [2.8457e-05],
        [8.1009e-05],
        [4.3704e-05],
        [2.7169e-04]], device='cuda:0')/tensor([[1.2399e-04, 5.5875e-05, 1.2405e-04, 1.5023e-05, 1.0011e-04, 1.1238e-04,
         2.7998e-05, 1.5455e-05, 3.4430e-05, 3.0257e-04, 4.6424e-05, 4.7675e-05,
         2.8457e-05, 8.1009e-05, 4.3704e-05, 2.7169e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1866e-04, 6.6158e-04, 1.2399e-04],
        [7.8032e-04, 2.1411e-04, 5.5875e-05],
        [2.4345e-04, 9.2708e-05, 1.2405e-04],
        [2.0125e-04, 9.5516e-06, 1.5023e-05],
        [3.9610e-04, 6.3112e-04, 1.0011e-04],
        [3.9754e-04, 1.7910e-04, 1.1238e-04],
        [5.2637e-05, 2.6788e-05, 2.7998e-05],
        [5.1893e-05, 6.4231e-06, 1.5455e-05],
        [1.2791e-04, 2.1336e-06, 3.4430e-05],
        [5.0878e-04, 5.8410e-03, 3.0257e-04],
        [2.7784e-04, 4.8474e-05, 4.6424e-05],
        [1.0845e-04, 2.4064e-04, 4.7675e-05],
        [2.2729e-04, 5.9992e-05, 2.8457e-05],
        [9.2017e-05, 3.4660e-06, 8.1009e-05],
        [1.5614e-04, 1.0075e-04, 4.3704e-05],
        [2.1884e-04, 2.9159e-04, 2.7169e-04]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6070e-04],
        [3.8867e-04],
        [7.2851e-04],
        [6.0884e-05],
        [2.1421e-04],
        [2.3961e-04],
        [1.2493e-04],
        [6.3197e-04],
        [2.3730e-04],
        [2.1347e-04],
        [7.4013e-04],
        [5.4368e-04],
        [8.3561e-05],
        [2.7167e-04],
        [2.3248e-05],
        [8.0457e-05]], device='cuda:0')/tensor([[2.6070e-04, 3.8867e-04, 7.2851e-04, 6.0884e-05, 2.1421e-04, 2.3961e-04,
         1.2493e-04, 6.3197e-04, 2.3730e-04, 2.1347e-04, 7.4013e-04, 5.4368e-04,
         8.3561e-05, 2.7167e-04, 2.3248e-05, 8.0457e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0365e-04],
        [4.0765e-04],
        [9.0660e-03],
        [1.3470e-05],
        [2.5036e-04],
        [3.6617e-04],
        [7.2312e-06],
        [3.7779e-05],
        [4.1595e-05],
        [3.5881e-04],
        [7.5833e-04],
        [9.8254e-05],
        [6.7291e-06],
        [8.7553e-05],
        [4.9236e-06],
        [1.9340e-06]], device='cuda:0')/tensor([[1.0365e-04, 4.0765e-04, 9.0660e-03, 1.3470e-05, 2.5036e-04, 3.6617e-04,
         7.2312e-06, 3.7779e-05, 4.1595e-05, 3.5881e-04, 7.5833e-04, 9.8254e-05,
         6.7291e-06, 8.7553e-05, 4.9236e-06, 1.9340e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.4933e-04],
        [1.0657e-04],
        [1.0230e-04],
        [1.5852e-05],
        [4.3861e-05],
        [1.3821e-04],
        [6.8757e-05],
        [2.0419e-05],
        [3.9308e-05],
        [9.4699e-05],
        [1.6743e-04],
        [3.5838e-05],
        [1.7797e-05],
        [4.0529e-05],
        [1.1553e-05],
        [2.2360e-05]], device='cuda:0')/tensor([[2.4933e-04, 1.0657e-04, 1.0230e-04, 1.5852e-05, 4.3861e-05, 1.3821e-04,
         6.8757e-05, 2.0419e-05, 3.9308e-05, 9.4699e-05, 1.6743e-04, 3.5838e-05,
         1.7797e-05, 4.0529e-05, 1.1553e-05, 2.2360e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6070e-04, 1.0365e-04, 2.4933e-04],
        [3.8867e-04, 4.0765e-04, 1.0657e-04],
        [7.2851e-04, 9.0660e-03, 1.0230e-04],
        [6.0884e-05, 1.3470e-05, 1.5852e-05],
        [2.1421e-04, 2.5036e-04, 4.3861e-05],
        [2.3961e-04, 3.6617e-04, 1.3821e-04],
        [1.2493e-04, 7.2312e-06, 6.8757e-05],
        [6.3197e-04, 3.7779e-05, 2.0419e-05],
        [2.3730e-04, 4.1595e-05, 3.9308e-05],
        [2.1347e-04, 3.5881e-04, 9.4699e-05],
        [7.4013e-04, 7.5833e-04, 1.6743e-04],
        [5.4368e-04, 9.8254e-05, 3.5838e-05],
        [8.3561e-05, 6.7291e-06, 1.7797e-05],
        [2.7167e-04, 8.7553e-05, 4.0529e-05],
        [2.3248e-05, 4.9236e-06, 1.1553e-05],
        [8.0457e-05, 1.9340e-06, 2.2360e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.1418e-04],
        [6.4979e-04],
        [7.0215e-05],
        [1.3000e-03],
        [1.7985e-04],
        [5.0723e-04],
        [1.5861e-04],
        [6.9940e-04],
        [3.3104e-04],
        [1.8808e-04],
        [8.8359e-04],
        [5.5757e-04],
        [6.1024e-05],
        [8.1330e-04],
        [3.0667e-04],
        [5.6498e-04]], device='cuda:0')/tensor([[6.1418e-04, 6.4979e-04, 7.0215e-05, 1.3000e-03, 1.7985e-04, 5.0723e-04,
         1.5861e-04, 6.9940e-04, 3.3104e-04, 1.8808e-04, 8.8359e-04, 5.5757e-04,
         6.1024e-05, 8.1330e-04, 3.0667e-04, 5.6498e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5646e-03],
        [6.7084e-04],
        [6.6239e-06],
        [4.1996e-04],
        [1.4615e-04],
        [3.4004e-04],
        [4.4934e-05],
        [8.4735e-04],
        [1.6672e-03],
        [1.4356e-04],
        [1.1417e-03],
        [7.3154e-04],
        [1.7307e-05],
        [4.5619e-04],
        [3.4521e-04],
        [4.0639e-04]], device='cuda:0')/tensor([[1.5646e-03, 6.7084e-04, 6.6239e-06, 4.1996e-04, 1.4615e-04, 3.4004e-04,
         4.4934e-05, 8.4735e-04, 1.6672e-03, 1.4356e-04, 1.1417e-03, 7.3154e-04,
         1.7307e-05, 4.5619e-04, 3.4521e-04, 4.0639e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8121e-04],
        [2.5879e-04],
        [5.3982e-05],
        [1.9070e-04],
        [1.4457e-04],
        [6.2059e-05],
        [3.1008e-05],
        [2.5210e-04],
        [6.4013e-05],
        [5.3623e-05],
        [5.4444e-04],
        [2.0672e-04],
        [3.4754e-05],
        [3.5354e-04],
        [2.1312e-04],
        [3.4462e-04]], device='cuda:0')/tensor([[1.8121e-04, 2.5879e-04, 5.3982e-05, 1.9070e-04, 1.4457e-04, 6.2059e-05,
         3.1008e-05, 2.5210e-04, 6.4013e-05, 5.3623e-05, 5.4444e-04, 2.0672e-04,
         3.4754e-05, 3.5354e-04, 2.1312e-04, 3.4462e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1418e-04, 1.5646e-03, 1.8121e-04],
        [6.4979e-04, 6.7084e-04, 2.5879e-04],
        [7.0215e-05, 6.6239e-06, 5.3982e-05],
        [1.3000e-03, 4.1996e-04, 1.9070e-04],
        [1.7985e-04, 1.4615e-04, 1.4457e-04],
        [5.0723e-04, 3.4004e-04, 6.2059e-05],
        [1.5861e-04, 4.4934e-05, 3.1008e-05],
        [6.9940e-04, 8.4735e-04, 2.5210e-04],
        [3.3104e-04, 1.6672e-03, 6.4013e-05],
        [1.8808e-04, 1.4356e-04, 5.3623e-05],
        [8.8359e-04, 1.1417e-03, 5.4444e-04],
        [5.5757e-04, 7.3154e-04, 2.0672e-04],
        [6.1024e-05, 1.7307e-05, 3.4754e-05],
        [8.1330e-04, 4.5619e-04, 3.5354e-04],
        [3.0667e-04, 3.4521e-04, 2.1312e-04],
        [5.6498e-04, 4.0639e-04, 3.4462e-04]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.7628e-05],
        [5.3488e-05],
        [6.7774e-04],
        [3.8497e-05],
        [1.3424e-04],
        [1.4788e-04],
        [6.5023e-04],
        [1.4863e-04],
        [3.8117e-04],
        [6.0053e-04],
        [3.1295e-04],
        [6.5641e-04],
        [3.2920e-04],
        [1.5254e-04],
        [1.6683e-04],
        [1.5534e-03]], device='cuda:0')/tensor([[4.7628e-05, 5.3488e-05, 6.7774e-04, 3.8497e-05, 1.3424e-04, 1.4788e-04,
         6.5023e-04, 1.4863e-04, 3.8117e-04, 6.0053e-04, 3.1295e-04, 6.5641e-04,
         3.2920e-04, 1.5254e-04, 1.6683e-04, 1.5534e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.2346e-06],
        [1.5540e-05],
        [2.4538e-04],
        [1.0216e-06],
        [1.2673e-04],
        [9.6871e-04],
        [1.3250e-04],
        [1.0378e-04],
        [4.2531e-04],
        [1.6076e-04],
        [3.3716e-04],
        [3.1509e-04],
        [3.8239e-05],
        [3.4230e-05],
        [9.5210e-05],
        [3.9510e-03]], device='cuda:0')/tensor([[7.2346e-06, 1.5540e-05, 2.4538e-04, 1.0216e-06, 1.2673e-04, 9.6871e-04,
         1.3250e-04, 1.0378e-04, 4.2531e-04, 1.6076e-04, 3.3716e-04, 3.1509e-04,
         3.8239e-05, 3.4230e-05, 9.5210e-05, 3.9510e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.9495e-05],
        [1.6744e-05],
        [2.4735e-04],
        [4.8220e-06],
        [8.2779e-05],
        [4.9969e-05],
        [3.9518e-05],
        [3.0080e-05],
        [3.1218e-04],
        [2.7923e-04],
        [1.4933e-04],
        [2.1437e-04],
        [2.7227e-05],
        [4.8267e-05],
        [4.1370e-05],
        [9.9897e-05]], device='cuda:0')/tensor([[1.9495e-05, 1.6744e-05, 2.4735e-04, 4.8220e-06, 8.2779e-05, 4.9969e-05,
         3.9518e-05, 3.0080e-05, 3.1218e-04, 2.7923e-04, 1.4933e-04, 2.1437e-04,
         2.7227e-05, 4.8267e-05, 4.1370e-05, 9.9897e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.7628e-05, 7.2346e-06, 1.9495e-05],
        [5.3488e-05, 1.5540e-05, 1.6744e-05],
        [6.7774e-04, 2.4538e-04, 2.4735e-04],
        [3.8497e-05, 1.0216e-06, 4.8220e-06],
        [1.3424e-04, 1.2673e-04, 8.2779e-05],
        [1.4788e-04, 9.6871e-04, 4.9969e-05],
        [6.5023e-04, 1.3250e-04, 3.9518e-05],
        [1.4863e-04, 1.0378e-04, 3.0080e-05],
        [3.8117e-04, 4.2531e-04, 3.1218e-04],
        [6.0053e-04, 1.6076e-04, 2.7923e-04],
        [3.1295e-04, 3.3716e-04, 1.4933e-04],
        [6.5641e-04, 3.1509e-04, 2.1437e-04],
        [3.2920e-04, 3.8239e-05, 2.7227e-05],
        [1.5254e-04, 3.4230e-05, 4.8267e-05],
        [1.6683e-04, 9.5210e-05, 4.1370e-05],
        [1.5534e-03, 3.9510e-03, 9.9897e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[8.6144e-06],
        [3.4368e-05],
        [6.8133e-05],
        [1.2023e-04],
        [3.2836e-04],
        [1.8237e-04],
        [2.3251e-04],
        [2.7267e-04],
        [2.8242e-04],
        [3.6349e-04],
        [3.2840e-05],
        [1.9519e-04],
        [3.6220e-05],
        [4.3420e-05],
        [5.4291e-04],
        [3.3832e-05]], device='cuda:0')/tensor([[8.6144e-06, 3.4368e-05, 6.8133e-05, 1.2023e-04, 3.2836e-04, 1.8237e-04,
         2.3251e-04, 2.7267e-04, 2.8242e-04, 3.6349e-04, 3.2840e-05, 1.9519e-04,
         3.6220e-05, 4.3420e-05, 5.4291e-04, 3.3832e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.2840e-07],
        [2.0562e-06],
        [1.9780e-06],
        [4.1107e-05],
        [7.1151e-05],
        [1.6082e-04],
        [2.0543e-03],
        [1.3397e-04],
        [1.8020e-05],
        [1.8676e-04],
        [1.8058e-06],
        [4.3560e-04],
        [2.8647e-06],
        [1.4599e-06],
        [2.7842e-04],
        [8.2269e-06]], device='cuda:0')/tensor([[7.2840e-07, 2.0562e-06, 1.9780e-06, 4.1107e-05, 7.1151e-05, 1.6082e-04,
         2.0543e-03, 1.3397e-04, 1.8020e-05, 1.8676e-04, 1.8058e-06, 4.3560e-04,
         2.8647e-06, 1.4599e-06, 2.7842e-04, 8.2269e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[2.3872e-06],
        [2.3013e-05],
        [1.0706e-05],
        [5.2377e-05],
        [7.0957e-05],
        [1.2061e-04],
        [3.4113e-04],
        [4.9198e-05],
        [2.7992e-05],
        [8.9009e-05],
        [3.2403e-06],
        [4.7462e-04],
        [4.7104e-06],
        [4.6824e-06],
        [4.8871e-05],
        [7.9117e-06]], device='cuda:0')/tensor([[2.3872e-06, 2.3013e-05, 1.0706e-05, 5.2377e-05, 7.0957e-05, 1.2061e-04,
         3.4113e-04, 4.9198e-05, 2.7992e-05, 8.9009e-05, 3.2403e-06, 4.7462e-04,
         4.7104e-06, 4.6824e-06, 4.8871e-05, 7.9117e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[8.6144e-06, 7.2840e-07, 2.3872e-06],
        [3.4368e-05, 2.0562e-06, 2.3013e-05],
        [6.8133e-05, 1.9780e-06, 1.0706e-05],
        [1.2023e-04, 4.1107e-05, 5.2377e-05],
        [3.2836e-04, 7.1151e-05, 7.0957e-05],
        [1.8237e-04, 1.6082e-04, 1.2061e-04],
        [2.3251e-04, 2.0543e-03, 3.4113e-04],
        [2.7267e-04, 1.3397e-04, 4.9198e-05],
        [2.8242e-04, 1.8020e-05, 2.7992e-05],
        [3.6349e-04, 1.8676e-04, 8.9009e-05],
        [3.2840e-05, 1.8058e-06, 3.2403e-06],
        [1.9519e-04, 4.3560e-04, 4.7462e-04],
        [3.6220e-05, 2.8647e-06, 4.7104e-06],
        [4.3420e-05, 1.4599e-06, 4.6824e-06],
        [5.4291e-04, 2.7842e-04, 4.8871e-05],
        [3.3832e-05, 8.2269e-06, 7.9117e-06]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[8.9376e-05],
        [8.5781e-05],
        [2.4958e-04],
        [1.1240e-04]], device='cuda:0')/tensor([[8.9376e-05, 8.5781e-05, 2.4958e-04, 1.1240e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[3.2522e-06],
        [2.1319e-05],
        [5.7354e-03],
        [1.5196e-06]], device='cuda:0')/tensor([[3.2522e-06, 2.1319e-05, 5.7354e-03, 1.5196e-06]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[4.8184e-06],
        [2.8249e-05],
        [1.1213e-04],
        [2.0183e-05]], device='cuda:0')/tensor([[4.8184e-06, 2.8249e-05, 1.1213e-04, 2.0183e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[8.9376e-05, 3.2522e-06, 4.8184e-06],
        [8.5781e-05, 2.1319e-05, 2.8249e-05],
        [2.4958e-04, 5.7354e-03, 1.1213e-04],
        [1.1240e-04, 1.5196e-06, 2.0183e-05]], device='cuda:0')
acc:  0.1590909090909091
Time taken to execute the de NLI task with prompt type identical_modal, variation 1 and batchsize 16: 0:01:01.832662
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_1']
----------- 42 de google/flan-t5-base NLI identical_modal 2 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 376.04it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0637e-04],
        [5.1673e-04],
        [3.0342e-05],
        [1.7925e-03],
        [2.1619e-04],
        [1.1634e-03],
        [4.5584e-05],
        [2.6300e-05],
        [1.2905e-04],
        [7.2449e-04],
        [3.2744e-04],
        [8.4162e-04],
        [1.2683e-04],
        [2.5607e-04],
        [3.2911e-05],
        [9.2348e-05]], device='cuda:0')/tensor([[1.0637e-04, 5.1673e-04, 3.0342e-05, 1.7925e-03, 2.1619e-04, 1.1634e-03,
         4.5584e-05, 2.6300e-05, 1.2905e-04, 7.2449e-04, 3.2744e-04, 8.4162e-04,
         1.2683e-04, 2.5607e-04, 3.2911e-05, 9.2348e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0899e-05],
        [3.8850e-03],
        [1.0338e-06],
        [8.8714e-04],
        [7.4055e-04],
        [1.0701e-03],
        [2.2827e-05],
        [9.5277e-07],
        [3.5262e-04],
        [5.6792e-04],
        [5.5578e-04],
        [1.2195e-03],
        [2.0050e-05],
        [1.9703e-04],
        [5.4725e-07],
        [5.5570e-06]], device='cuda:0')/tensor([[1.0899e-05, 3.8850e-03, 1.0338e-06, 8.8714e-04, 7.4055e-04, 1.0701e-03,
         2.2827e-05, 9.5277e-07, 3.5262e-04, 5.6792e-04, 5.5578e-04, 1.2195e-03,
         2.0050e-05, 1.9703e-04, 5.4725e-07, 5.5570e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.5515e-05],
        [6.1757e-04],
        [9.1895e-06],
        [8.5510e-04],
        [2.5679e-04],
        [1.0764e-03],
        [5.5363e-05],
        [1.2845e-05],
        [2.5132e-04],
        [2.7183e-04],
        [8.8609e-04],
        [1.6766e-03],
        [4.2017e-05],
        [1.3783e-04],
        [1.4514e-05],
        [1.5802e-05]], device='cuda:0')/tensor([[5.5515e-05, 6.1757e-04, 9.1895e-06, 8.5510e-04, 2.5679e-04, 1.0764e-03,
         5.5363e-05, 1.2845e-05, 2.5132e-04, 2.7183e-04, 8.8609e-04, 1.6766e-03,
         4.2017e-05, 1.3783e-04, 1.4514e-05, 1.5802e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0637e-04, 1.0899e-05, 5.5515e-05],
        [5.1673e-04, 3.8850e-03, 6.1757e-04],
        [3.0342e-05, 1.0338e-06, 9.1895e-06],
        [1.7925e-03, 8.8714e-04, 8.5510e-04],
        [2.1619e-04, 7.4055e-04, 2.5679e-04],
        [1.1634e-03, 1.0701e-03, 1.0764e-03],
        [4.5584e-05, 2.2827e-05, 5.5363e-05],
        [2.6300e-05, 9.5277e-07, 1.2845e-05],
        [1.2905e-04, 3.5262e-04, 2.5132e-04],
        [7.2449e-04, 5.6792e-04, 2.7183e-04],
        [3.2744e-04, 5.5578e-04, 8.8609e-04],
        [8.4162e-04, 1.2195e-03, 1.6766e-03],
        [1.2683e-04, 2.0050e-05, 4.2017e-05],
        [2.5607e-04, 1.9703e-04, 1.3783e-04],
        [3.2911e-05, 5.4725e-07, 1.4514e-05],
        [9.2348e-05, 5.5570e-06, 1.5802e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.9590e-04],
        [5.1269e-05],
        [7.6752e-05],
        [3.2749e-04],
        [1.6676e-03],
        [8.0848e-05],
        [5.2669e-04],
        [4.2500e-04],
        [4.5190e-05],
        [3.0330e-04],
        [1.1324e-04],
        [1.7712e-05],
        [2.0689e-04],
        [9.8334e-05],
        [3.8643e-05],
        [5.6850e-04]], device='cuda:0')/tensor([[3.9590e-04, 5.1269e-05, 7.6752e-05, 3.2749e-04, 1.6676e-03, 8.0848e-05,
         5.2669e-04, 4.2500e-04, 4.5190e-05, 3.0330e-04, 1.1324e-04, 1.7712e-05,
         2.0689e-04, 9.8334e-05, 3.8643e-05, 5.6850e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.0752e-04],
        [3.6035e-06],
        [2.0825e-05],
        [2.5521e-03],
        [1.5449e-03],
        [4.1192e-07],
        [3.5620e-04],
        [1.0072e-04],
        [1.4800e-06],
        [1.9090e-04],
        [3.8791e-05],
        [5.5201e-06],
        [2.8941e-04],
        [1.6954e-04],
        [1.0710e-05],
        [4.0629e-05]], device='cuda:0')/tensor([[4.0752e-04, 3.6035e-06, 2.0825e-05, 2.5521e-03, 1.5449e-03, 4.1192e-07,
         3.5620e-04, 1.0072e-04, 1.4800e-06, 1.9090e-04, 3.8791e-05, 5.5201e-06,
         2.8941e-04, 1.6954e-04, 1.0710e-05, 4.0629e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.2827e-04],
        [4.8724e-05],
        [2.0478e-05],
        [8.8250e-04],
        [4.3457e-04],
        [1.1048e-05],
        [2.3630e-04],
        [1.4803e-04],
        [3.1582e-05],
        [1.8456e-04],
        [3.9039e-05],
        [2.5348e-05],
        [8.6795e-05],
        [2.0004e-04],
        [1.6624e-05],
        [4.5304e-05]], device='cuda:0')/tensor([[5.2827e-04, 4.8724e-05, 2.0478e-05, 8.8250e-04, 4.3457e-04, 1.1048e-05,
         2.3630e-04, 1.4803e-04, 3.1582e-05, 1.8456e-04, 3.9039e-05, 2.5348e-05,
         8.6795e-05, 2.0004e-04, 1.6624e-05, 4.5304e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.9590e-04, 4.0752e-04, 5.2827e-04],
        [5.1269e-05, 3.6035e-06, 4.8724e-05],
        [7.6752e-05, 2.0825e-05, 2.0478e-05],
        [3.2749e-04, 2.5521e-03, 8.8250e-04],
        [1.6676e-03, 1.5449e-03, 4.3457e-04],
        [8.0848e-05, 4.1192e-07, 1.1048e-05],
        [5.2669e-04, 3.5620e-04, 2.3630e-04],
        [4.2500e-04, 1.0072e-04, 1.4803e-04],
        [4.5190e-05, 1.4800e-06, 3.1582e-05],
        [3.0330e-04, 1.9090e-04, 1.8456e-04],
        [1.1324e-04, 3.8791e-05, 3.9039e-05],
        [1.7712e-05, 5.5201e-06, 2.5348e-05],
        [2.0689e-04, 2.8941e-04, 8.6795e-05],
        [9.8334e-05, 1.6954e-04, 2.0004e-04],
        [3.8643e-05, 1.0710e-05, 1.6624e-05],
        [5.6850e-04, 4.0629e-05, 4.5304e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2410e-04],
        [3.1026e-04],
        [6.8889e-04],
        [7.4297e-04],
        [1.2575e-03],
        [1.3586e-04],
        [2.8761e-04],
        [1.4467e-03],
        [2.2073e-04],
        [1.9863e-04],
        [9.5710e-04],
        [1.7449e-04],
        [2.3877e-04],
        [2.4778e-04],
        [2.2934e-04],
        [3.3250e-05]], device='cuda:0')/tensor([[2.2410e-04, 3.1026e-04, 6.8889e-04, 7.4297e-04, 1.2575e-03, 1.3586e-04,
         2.8761e-04, 1.4467e-03, 2.2073e-04, 1.9863e-04, 9.5710e-04, 1.7449e-04,
         2.3877e-04, 2.4778e-04, 2.2934e-04, 3.3250e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.5787e-04],
        [1.9457e-03],
        [8.3291e-04],
        [6.7390e-04],
        [4.1838e-04],
        [2.6954e-05],
        [4.9652e-04],
        [6.3104e-03],
        [9.7253e-05],
        [2.1682e-04],
        [5.2072e-04],
        [6.3839e-04],
        [3.9217e-05],
        [8.5478e-05],
        [1.9326e-04],
        [1.6243e-06]], device='cuda:0')/tensor([[3.5787e-04, 1.9457e-03, 8.3291e-04, 6.7390e-04, 4.1838e-04, 2.6954e-05,
         4.9652e-04, 6.3104e-03, 9.7253e-05, 2.1682e-04, 5.2072e-04, 6.3839e-04,
         3.9217e-05, 8.5478e-05, 1.9326e-04, 1.6243e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.9237e-04],
        [6.9008e-05],
        [4.4611e-04],
        [4.2986e-04],
        [5.8503e-04],
        [6.8118e-05],
        [1.2382e-03],
        [9.0366e-04],
        [2.0527e-04],
        [1.9707e-04],
        [8.3473e-04],
        [3.8531e-04],
        [6.7489e-05],
        [8.5238e-05],
        [2.8907e-04],
        [8.6222e-06]], device='cuda:0')/tensor([[3.9237e-04, 6.9008e-05, 4.4611e-04, 4.2986e-04, 5.8503e-04, 6.8118e-05,
         1.2382e-03, 9.0366e-04, 2.0527e-04, 1.9707e-04, 8.3473e-04, 3.8531e-04,
         6.7489e-05, 8.5238e-05, 2.8907e-04, 8.6222e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2410e-04, 3.5787e-04, 3.9237e-04],
        [3.1026e-04, 1.9457e-03, 6.9008e-05],
        [6.8889e-04, 8.3291e-04, 4.4611e-04],
        [7.4297e-04, 6.7390e-04, 4.2986e-04],
        [1.2575e-03, 4.1838e-04, 5.8503e-04],
        [1.3586e-04, 2.6954e-05, 6.8118e-05],
        [2.8761e-04, 4.9652e-04, 1.2382e-03],
        [1.4467e-03, 6.3104e-03, 9.0366e-04],
        [2.2073e-04, 9.7253e-05, 2.0527e-04],
        [1.9863e-04, 2.1682e-04, 1.9707e-04],
        [9.5710e-04, 5.2072e-04, 8.3473e-04],
        [1.7449e-04, 6.3839e-04, 3.8531e-04],
        [2.3877e-04, 3.9217e-05, 6.7489e-05],
        [2.4778e-04, 8.5478e-05, 8.5238e-05],
        [2.2934e-04, 1.9326e-04, 2.8907e-04],
        [3.3250e-05, 1.6243e-06, 8.6222e-06]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.5359e-04],
        [3.0035e-04],
        [1.5720e-03],
        [7.3410e-04],
        [4.4129e-05],
        [9.1709e-04],
        [3.6518e-05],
        [5.0213e-04],
        [7.6711e-04],
        [4.2185e-05],
        [2.5216e-04],
        [1.1930e-04],
        [8.6679e-05],
        [8.4073e-05],
        [3.8832e-04],
        [1.1862e-04]], device='cuda:0')/tensor([[6.5359e-04, 3.0035e-04, 1.5720e-03, 7.3410e-04, 4.4129e-05, 9.1709e-04,
         3.6518e-05, 5.0213e-04, 7.6711e-04, 4.2185e-05, 2.5216e-04, 1.1930e-04,
         8.6679e-05, 8.4073e-05, 3.8832e-04, 1.1862e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.3862e-04],
        [2.4193e-05],
        [2.0043e-02],
        [1.4868e-04],
        [1.0858e-06],
        [2.2263e-04],
        [4.2501e-06],
        [2.0809e-03],
        [1.1218e-04],
        [8.5711e-06],
        [5.2041e-05],
        [2.8818e-05],
        [3.0673e-06],
        [4.7368e-06],
        [1.4130e-04],
        [1.1067e-06]], device='cuda:0')/tensor([[4.3862e-04, 2.4193e-05, 2.0043e-02, 1.4868e-04, 1.0858e-06, 2.2263e-04,
         4.2501e-06, 2.0809e-03, 1.1218e-04, 8.5711e-06, 5.2041e-05, 2.8818e-05,
         3.0673e-06, 4.7368e-06, 1.4130e-04, 1.1067e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[2.9485e-04],
        [8.5111e-05],
        [1.7040e-04],
        [2.9265e-04],
        [3.7490e-05],
        [1.4139e-04],
        [1.2278e-05],
        [1.1188e-04],
        [1.6424e-04],
        [3.3058e-05],
        [1.6296e-04],
        [2.9771e-05],
        [6.7228e-05],
        [2.6008e-05],
        [1.0073e-04],
        [1.8780e-05]], device='cuda:0')/tensor([[2.9485e-04, 8.5111e-05, 1.7040e-04, 2.9265e-04, 3.7490e-05, 1.4139e-04,
         1.2278e-05, 1.1188e-04, 1.6424e-04, 3.3058e-05, 1.6296e-04, 2.9771e-05,
         6.7228e-05, 2.6008e-05, 1.0073e-04, 1.8780e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.5359e-04, 4.3862e-04, 2.9485e-04],
        [3.0035e-04, 2.4193e-05, 8.5111e-05],
        [1.5720e-03, 2.0043e-02, 1.7040e-04],
        [7.3410e-04, 1.4868e-04, 2.9265e-04],
        [4.4129e-05, 1.0858e-06, 3.7490e-05],
        [9.1709e-04, 2.2263e-04, 1.4139e-04],
        [3.6518e-05, 4.2501e-06, 1.2278e-05],
        [5.0213e-04, 2.0809e-03, 1.1188e-04],
        [7.6711e-04, 1.1218e-04, 1.6424e-04],
        [4.2185e-05, 8.5711e-06, 3.3058e-05],
        [2.5216e-04, 5.2041e-05, 1.6296e-04],
        [1.1930e-04, 2.8818e-05, 2.9771e-05],
        [8.6679e-05, 3.0673e-06, 6.7228e-05],
        [8.4073e-05, 4.7368e-06, 2.6008e-05],
        [3.8832e-04, 1.4130e-04, 1.0073e-04],
        [1.1862e-04, 1.1067e-06, 1.8780e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.1125e-04],
        [3.3325e-04],
        [6.5443e-04],
        [1.7448e-04],
        [7.4615e-04],
        [5.7435e-04],
        [1.2570e-03],
        [6.9334e-05],
        [2.1617e-04],
        [3.4405e-04],
        [2.6308e-04],
        [3.1536e-04],
        [2.1220e-04],
        [2.2565e-04],
        [2.0322e-04],
        [2.1261e-04]], device='cuda:0')/tensor([[2.1125e-04, 3.3325e-04, 6.5443e-04, 1.7448e-04, 7.4615e-04, 5.7435e-04,
         1.2570e-03, 6.9334e-05, 2.1617e-04, 3.4405e-04, 2.6308e-04, 3.1536e-04,
         2.1220e-04, 2.2565e-04, 2.0322e-04, 2.1261e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0206e-04],
        [3.0267e-04],
        [4.7333e-04],
        [1.7182e-04],
        [3.1508e-04],
        [7.3943e-04],
        [6.4527e-04],
        [8.7278e-05],
        [9.0901e-03],
        [2.9932e-04],
        [1.3395e-04],
        [2.0174e-04],
        [9.8595e-05],
        [7.0238e-05],
        [2.2523e-04],
        [3.4900e-05]], device='cuda:0')/tensor([[1.0206e-04, 3.0267e-04, 4.7333e-04, 1.7182e-04, 3.1508e-04, 7.3943e-04,
         6.4527e-04, 8.7278e-05, 9.0901e-03, 2.9932e-04, 1.3395e-04, 2.0174e-04,
         9.8595e-05, 7.0238e-05, 2.2523e-04, 3.4900e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.7543e-05],
        [4.4406e-04],
        [1.0705e-04],
        [1.2041e-04],
        [3.1577e-04],
        [4.0242e-04],
        [2.5046e-04],
        [8.4101e-05],
        [1.5465e-04],
        [3.3221e-04],
        [1.3412e-04],
        [8.0245e-05],
        [2.9740e-04],
        [3.8357e-05],
        [1.6422e-04],
        [5.0999e-05]], device='cuda:0')/tensor([[9.7543e-05, 4.4406e-04, 1.0705e-04, 1.2041e-04, 3.1577e-04, 4.0242e-04,
         2.5046e-04, 8.4101e-05, 1.5465e-04, 3.3221e-04, 1.3412e-04, 8.0245e-05,
         2.9740e-04, 3.8357e-05, 1.6422e-04, 5.0999e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.1125e-04, 1.0206e-04, 9.7543e-05],
        [3.3325e-04, 3.0267e-04, 4.4406e-04],
        [6.5443e-04, 4.7333e-04, 1.0705e-04],
        [1.7448e-04, 1.7182e-04, 1.2041e-04],
        [7.4615e-04, 3.1508e-04, 3.1577e-04],
        [5.7435e-04, 7.3943e-04, 4.0242e-04],
        [1.2570e-03, 6.4527e-04, 2.5046e-04],
        [6.9334e-05, 8.7278e-05, 8.4101e-05],
        [2.1617e-04, 9.0901e-03, 1.5465e-04],
        [3.4405e-04, 2.9932e-04, 3.3221e-04],
        [2.6308e-04, 1.3395e-04, 1.3412e-04],
        [3.1536e-04, 2.0174e-04, 8.0245e-05],
        [2.1220e-04, 9.8595e-05, 2.9740e-04],
        [2.2565e-04, 7.0238e-05, 3.8357e-05],
        [2.0322e-04, 2.2523e-04, 1.6422e-04],
        [2.1261e-04, 3.4900e-05, 5.0999e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.3744e-04],
        [6.6053e-05],
        [1.2831e-05],
        [3.7640e-04],
        [2.8017e-04],
        [2.6341e-04],
        [1.9772e-04],
        [4.9066e-04],
        [1.4949e-04],
        [7.1851e-05],
        [1.7965e-04],
        [1.0678e-04],
        [1.3880e-03],
        [3.3651e-04],
        [3.2562e-04],
        [3.4011e-05]], device='cuda:0')/tensor([[3.3744e-04, 6.6053e-05, 1.2831e-05, 3.7640e-04, 2.8017e-04, 2.6341e-04,
         1.9772e-04, 4.9066e-04, 1.4949e-04, 7.1851e-05, 1.7965e-04, 1.0678e-04,
         1.3880e-03, 3.3651e-04, 3.2562e-04, 3.4011e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5243e-04],
        [2.5499e-06],
        [3.0347e-06],
        [5.8687e-04],
        [2.3326e-04],
        [8.6666e-04],
        [2.4333e-05],
        [9.9577e-04],
        [3.9715e-03],
        [6.2056e-05],
        [2.9817e-04],
        [3.2807e-06],
        [8.9856e-04],
        [3.6899e-03],
        [4.9377e-04],
        [1.3038e-05]], device='cuda:0')/tensor([[4.5243e-04, 2.5499e-06, 3.0347e-06, 5.8687e-04, 2.3326e-04, 8.6666e-04,
         2.4333e-05, 9.9577e-04, 3.9715e-03, 6.2056e-05, 2.9817e-04, 3.2807e-06,
         8.9856e-04, 3.6899e-03, 4.9377e-04, 1.3038e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.2225e-04],
        [1.3250e-04],
        [8.2874e-06],
        [9.6613e-04],
        [1.1927e-04],
        [3.4791e-04],
        [8.6516e-05],
        [5.4017e-04],
        [7.6534e-05],
        [1.8024e-04],
        [1.2375e-04],
        [7.6412e-05],
        [3.0230e-03],
        [6.2848e-04],
        [2.2042e-04],
        [1.4042e-05]], device='cuda:0')/tensor([[3.2225e-04, 1.3250e-04, 8.2874e-06, 9.6613e-04, 1.1927e-04, 3.4791e-04,
         8.6516e-05, 5.4017e-04, 7.6534e-05, 1.8024e-04, 1.2375e-04, 7.6412e-05,
         3.0230e-03, 6.2848e-04, 2.2042e-04, 1.4042e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.3744e-04, 4.5243e-04, 3.2225e-04],
        [6.6053e-05, 2.5499e-06, 1.3250e-04],
        [1.2831e-05, 3.0347e-06, 8.2874e-06],
        [3.7640e-04, 5.8687e-04, 9.6613e-04],
        [2.8017e-04, 2.3326e-04, 1.1927e-04],
        [2.6341e-04, 8.6666e-04, 3.4791e-04],
        [1.9772e-04, 2.4333e-05, 8.6516e-05],
        [4.9066e-04, 9.9577e-04, 5.4017e-04],
        [1.4949e-04, 3.9715e-03, 7.6534e-05],
        [7.1851e-05, 6.2056e-05, 1.8024e-04],
        [1.7965e-04, 2.9817e-04, 1.2375e-04],
        [1.0678e-04, 3.2807e-06, 7.6412e-05],
        [1.3880e-03, 8.9856e-04, 3.0230e-03],
        [3.3651e-04, 3.6899e-03, 6.2848e-04],
        [3.2562e-04, 4.9377e-04, 2.2042e-04],
        [3.4011e-05, 1.3038e-05, 1.4042e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.3011e-04],
        [2.3414e-04],
        [3.2397e-05],
        [8.7236e-04],
        [9.2067e-04],
        [4.1000e-04],
        [4.3579e-04],
        [2.7347e-04],
        [5.6504e-05],
        [2.5109e-04],
        [2.3284e-04],
        [5.6183e-04],
        [3.3720e-04],
        [2.5142e-04],
        [9.3680e-04],
        [1.7130e-05]], device='cuda:0')/tensor([[2.3011e-04, 2.3414e-04, 3.2397e-05, 8.7236e-04, 9.2067e-04, 4.1000e-04,
         4.3579e-04, 2.7347e-04, 5.6504e-05, 2.5109e-04, 2.3284e-04, 5.6183e-04,
         3.3720e-04, 2.5142e-04, 9.3680e-04, 1.7130e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.5590e-05],
        [1.8295e-04],
        [3.6355e-06],
        [1.6412e-03],
        [9.3623e-04],
        [1.4364e-04],
        [2.2630e-04],
        [2.0386e-04],
        [1.6772e-05],
        [2.9094e-04],
        [8.0868e-05],
        [2.9062e-04],
        [1.0174e-03],
        [4.3052e-05],
        [4.1747e-04],
        [2.4754e-06]], device='cuda:0')/tensor([[4.5590e-05, 1.8295e-04, 3.6355e-06, 1.6412e-03, 9.3623e-04, 1.4364e-04,
         2.2630e-04, 2.0386e-04, 1.6772e-05, 2.9094e-04, 8.0868e-05, 2.9062e-04,
         1.0174e-03, 4.3052e-05, 4.1747e-04, 2.4754e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0484e-04],
        [1.3648e-04],
        [7.9216e-06],
        [2.6390e-04],
        [2.8499e-04],
        [1.5568e-04],
        [2.1791e-04],
        [2.9890e-04],
        [3.1285e-05],
        [6.7349e-05],
        [2.4403e-04],
        [2.3590e-04],
        [2.7306e-04],
        [9.8945e-05],
        [5.1882e-04],
        [1.1820e-05]], device='cuda:0')/tensor([[1.0484e-04, 1.3648e-04, 7.9216e-06, 2.6390e-04, 2.8499e-04, 1.5568e-04,
         2.1791e-04, 2.9890e-04, 3.1285e-05, 6.7349e-05, 2.4403e-04, 2.3590e-04,
         2.7306e-04, 9.8945e-05, 5.1882e-04, 1.1820e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.3011e-04, 4.5590e-05, 1.0484e-04],
        [2.3414e-04, 1.8295e-04, 1.3648e-04],
        [3.2397e-05, 3.6355e-06, 7.9216e-06],
        [8.7236e-04, 1.6412e-03, 2.6390e-04],
        [9.2067e-04, 9.3623e-04, 2.8499e-04],
        [4.1000e-04, 1.4364e-04, 1.5568e-04],
        [4.3579e-04, 2.2630e-04, 2.1791e-04],
        [2.7347e-04, 2.0386e-04, 2.9890e-04],
        [5.6504e-05, 1.6772e-05, 3.1285e-05],
        [2.5109e-04, 2.9094e-04, 6.7349e-05],
        [2.3284e-04, 8.0868e-05, 2.4403e-04],
        [5.6183e-04, 2.9062e-04, 2.3590e-04],
        [3.3720e-04, 1.0174e-03, 2.7306e-04],
        [2.5142e-04, 4.3052e-05, 9.8945e-05],
        [9.3680e-04, 4.1747e-04, 5.1882e-04],
        [1.7130e-05, 2.4754e-06, 1.1820e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[4.2107e-04],
        [7.3064e-05],
        [4.0915e-04],
        [4.7162e-03],
        [1.8212e-04],
        [4.0415e-04],
        [6.5487e-05],
        [3.4981e-05],
        [5.8908e-06],
        [1.5989e-04],
        [4.8459e-05],
        [4.7694e-04],
        [2.5853e-04],
        [3.3417e-04],
        [4.9665e-04],
        [1.2660e-03]], device='cuda:0')/tensor([[4.2107e-04, 7.3064e-05, 4.0915e-04, 4.7162e-03, 1.8212e-04, 4.0415e-04,
         6.5487e-05, 3.4981e-05, 5.8908e-06, 1.5989e-04, 4.8459e-05, 4.7694e-04,
         2.5853e-04, 3.3417e-04, 4.9665e-04, 1.2660e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[7.8063e-04],
        [1.8854e-05],
        [5.8336e-05],
        [6.3212e-03],
        [4.9277e-05],
        [4.2901e-04],
        [2.3625e-03],
        [1.0725e-06],
        [2.2038e-07],
        [8.6584e-05],
        [4.1694e-06],
        [3.7532e-04],
        [3.6819e-04],
        [4.9458e-04],
        [1.3063e-04],
        [7.9471e-04]], device='cuda:0')/tensor([[7.8063e-04, 1.8854e-05, 5.8336e-05, 6.3212e-03, 4.9277e-05, 4.2901e-04,
         2.3625e-03, 1.0725e-06, 2.2038e-07, 8.6584e-05, 4.1694e-06, 3.7532e-04,
         3.6819e-04, 4.9458e-04, 1.3063e-04, 7.9471e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[5.5176e-04],
        [3.2676e-05],
        [2.4826e-05],
        [4.6734e-04],
        [3.6643e-05],
        [6.0064e-04],
        [2.6132e-04],
        [6.9221e-06],
        [2.6833e-06],
        [5.5898e-05],
        [8.4668e-06],
        [3.0599e-04],
        [2.9613e-04],
        [5.9748e-04],
        [2.9700e-04],
        [1.4030e-03]], device='cuda:0')/tensor([[5.5176e-04, 3.2676e-05, 2.4826e-05, 4.6734e-04, 3.6643e-05, 6.0064e-04,
         2.6132e-04, 6.9221e-06, 2.6833e-06, 5.5898e-05, 8.4668e-06, 3.0599e-04,
         2.9613e-04, 5.9748e-04, 2.9700e-04, 1.4030e-03]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[4.2107e-04, 7.8063e-04, 5.5176e-04],
        [7.3064e-05, 1.8854e-05, 3.2676e-05],
        [4.0915e-04, 5.8336e-05, 2.4826e-05],
        [4.7162e-03, 6.3212e-03, 4.6734e-04],
        [1.8212e-04, 4.9277e-05, 3.6643e-05],
        [4.0415e-04, 4.2901e-04, 6.0064e-04],
        [6.5487e-05, 2.3625e-03, 2.6132e-04],
        [3.4981e-05, 1.0725e-06, 6.9221e-06],
        [5.8908e-06, 2.2038e-07, 2.6833e-06],
        [1.5989e-04, 8.6584e-05, 5.5898e-05],
        [4.8459e-05, 4.1694e-06, 8.4668e-06],
        [4.7694e-04, 3.7532e-04, 3.0599e-04],
        [2.5853e-04, 3.6819e-04, 2.9613e-04],
        [3.3417e-04, 4.9458e-04, 5.9748e-04],
        [4.9665e-04, 1.3063e-04, 2.9700e-04],
        [1.2660e-03, 7.9471e-04, 1.4030e-03]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[1.8756e-04],
        [8.2165e-04],
        [6.5973e-04],
        [2.8769e-05]], device='cuda:0')/tensor([[1.8756e-04, 8.2165e-04, 6.5973e-04, 2.8769e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[1.6411e-04],
        [1.2598e-03],
        [3.6857e-03],
        [4.1496e-06]], device='cuda:0')/tensor([[1.6411e-04, 1.2598e-03, 3.6857e-03, 4.1496e-06]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[7.6941e-05],
        [7.3878e-04],
        [4.6343e-04],
        [2.4123e-05]], device='cuda:0')/tensor([[7.6941e-05, 7.3878e-04, 4.6343e-04, 2.4123e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.8756e-04, 1.6411e-04, 7.6941e-05],
        [8.2165e-04, 1.2598e-03, 7.3878e-04],
        [6.5973e-04, 3.6857e-03, 4.6343e-04],
        [2.8769e-05, 4.1496e-06, 2.4123e-05]], device='cuda:0')
acc:  0.2803030303030303
Time taken to execute the de NLI task with prompt type identical_modal, variation 2 and batchsize 16: 0:01:01.961943
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_2']
----------- 42 de google/flan-t5-base NLI identical_modal 3 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 195.34it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.0130e-04],
        [4.0842e-05],
        [6.9363e-05],
        [2.6007e-04],
        [2.1107e-04],
        [4.3706e-04],
        [2.5123e-03],
        [3.6273e-04],
        [9.6990e-04],
        [2.9541e-04],
        [4.7022e-05],
        [1.1992e-03],
        [3.6049e-05],
        [1.8310e-04],
        [4.0266e-04],
        [1.0070e-04]], device='cuda:0')/tensor([[3.0130e-04, 4.0842e-05, 6.9363e-05, 2.6007e-04, 2.1107e-04, 4.3706e-04,
         2.5123e-03, 3.6273e-04, 9.6990e-04, 2.9541e-04, 4.7022e-05, 1.1992e-03,
         3.6049e-05, 1.8310e-04, 4.0266e-04, 1.0070e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2212e-04],
        [2.7206e-06],
        [2.2586e-06],
        [7.4062e-05],
        [6.3337e-04],
        [2.6869e-03],
        [2.9947e-03],
        [9.6343e-05],
        [4.2359e-04],
        [6.4373e-04],
        [2.4449e-06],
        [4.9793e-03],
        [6.5928e-06],
        [4.9786e-03],
        [7.6376e-05],
        [8.3389e-06]], device='cuda:0')/tensor([[1.2212e-04, 2.7206e-06, 2.2586e-06, 7.4062e-05, 6.3337e-04, 2.6869e-03,
         2.9947e-03, 9.6343e-05, 4.2359e-04, 6.4373e-04, 2.4449e-06, 4.9793e-03,
         6.5928e-06, 4.9786e-03, 7.6376e-05, 8.3389e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.5422e-05],
        [4.0627e-05],
        [8.6503e-05],
        [5.3278e-05],
        [1.0851e-04],
        [1.7604e-04],
        [2.0781e-04],
        [1.0054e-04],
        [2.2162e-04],
        [1.1983e-03],
        [8.9152e-06],
        [3.5030e-04],
        [1.9100e-05],
        [5.8233e-05],
        [1.0761e-04],
        [1.1223e-04]], device='cuda:0')/tensor([[4.5422e-05, 4.0627e-05, 8.6503e-05, 5.3278e-05, 1.0851e-04, 1.7604e-04,
         2.0781e-04, 1.0054e-04, 2.2162e-04, 1.1983e-03, 8.9152e-06, 3.5030e-04,
         1.9100e-05, 5.8233e-05, 1.0761e-04, 1.1223e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.0130e-04, 1.2212e-04, 4.5422e-05],
        [4.0842e-05, 2.7206e-06, 4.0627e-05],
        [6.9363e-05, 2.2586e-06, 8.6503e-05],
        [2.6007e-04, 7.4062e-05, 5.3278e-05],
        [2.1107e-04, 6.3337e-04, 1.0851e-04],
        [4.3706e-04, 2.6869e-03, 1.7604e-04],
        [2.5123e-03, 2.9947e-03, 2.0781e-04],
        [3.6273e-04, 9.6343e-05, 1.0054e-04],
        [9.6990e-04, 4.2359e-04, 2.2162e-04],
        [2.9541e-04, 6.4373e-04, 1.1983e-03],
        [4.7022e-05, 2.4449e-06, 8.9152e-06],
        [1.1992e-03, 4.9793e-03, 3.5030e-04],
        [3.6049e-05, 6.5928e-06, 1.9100e-05],
        [1.8310e-04, 4.9786e-03, 5.8233e-05],
        [4.0266e-04, 7.6376e-05, 1.0761e-04],
        [1.0070e-04, 8.3389e-06, 1.1223e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.6323e-04],
        [2.1532e-04],
        [6.7926e-05],
        [3.7058e-04],
        [3.7426e-04],
        [6.8845e-05],
        [2.2932e-04],
        [1.3459e-05],
        [2.6075e-05],
        [3.9937e-04],
        [1.1136e-04],
        [9.4538e-05],
        [4.4312e-04],
        [1.4020e-04],
        [1.6058e-04],
        [1.3859e-04]], device='cuda:0')/tensor([[2.6323e-04, 2.1532e-04, 6.7926e-05, 3.7058e-04, 3.7426e-04, 6.8845e-05,
         2.2932e-04, 1.3459e-05, 2.6075e-05, 3.9937e-04, 1.1136e-04, 9.4538e-05,
         4.4312e-04, 1.4020e-04, 1.6058e-04, 1.3859e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0563e-04],
        [2.0973e-04],
        [2.2413e-05],
        [2.4932e-03],
        [3.0532e-04],
        [2.0664e-05],
        [6.0733e-04],
        [7.0640e-07],
        [9.0767e-07],
        [2.8785e-04],
        [2.2218e-06],
        [5.5902e-06],
        [1.5597e-04],
        [2.3633e-05],
        [2.4742e-05],
        [1.8013e-05]], device='cuda:0')/tensor([[2.0563e-04, 2.0973e-04, 2.2413e-05, 2.4932e-03, 3.0532e-04, 2.0664e-05,
         6.0733e-04, 7.0640e-07, 9.0767e-07, 2.8785e-04, 2.2218e-06, 5.5902e-06,
         1.5597e-04, 2.3633e-05, 2.4742e-05, 1.8013e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.7663e-05],
        [3.0331e-05],
        [1.0568e-05],
        [4.9441e-04],
        [1.7553e-04],
        [1.3183e-05],
        [4.8143e-05],
        [2.6516e-06],
        [7.4677e-06],
        [6.1746e-05],
        [2.4925e-05],
        [1.5382e-05],
        [8.5328e-05],
        [9.6003e-05],
        [2.1600e-05],
        [1.5967e-05]], device='cuda:0')/tensor([[9.7663e-05, 3.0331e-05, 1.0568e-05, 4.9441e-04, 1.7553e-04, 1.3183e-05,
         4.8143e-05, 2.6516e-06, 7.4677e-06, 6.1746e-05, 2.4925e-05, 1.5382e-05,
         8.5328e-05, 9.6003e-05, 2.1600e-05, 1.5967e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.6323e-04, 2.0563e-04, 9.7663e-05],
        [2.1532e-04, 2.0973e-04, 3.0331e-05],
        [6.7926e-05, 2.2413e-05, 1.0568e-05],
        [3.7058e-04, 2.4932e-03, 4.9441e-04],
        [3.7426e-04, 3.0532e-04, 1.7553e-04],
        [6.8845e-05, 2.0664e-05, 1.3183e-05],
        [2.2932e-04, 6.0733e-04, 4.8143e-05],
        [1.3459e-05, 7.0640e-07, 2.6516e-06],
        [2.6075e-05, 9.0767e-07, 7.4677e-06],
        [3.9937e-04, 2.8785e-04, 6.1746e-05],
        [1.1136e-04, 2.2218e-06, 2.4925e-05],
        [9.4538e-05, 5.5902e-06, 1.5382e-05],
        [4.4312e-04, 1.5597e-04, 8.5328e-05],
        [1.4020e-04, 2.3633e-05, 9.6003e-05],
        [1.6058e-04, 2.4742e-05, 2.1600e-05],
        [1.3859e-04, 1.8013e-05, 1.5967e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.2372e-04],
        [2.3417e-05],
        [4.3184e-05],
        [1.7635e-04],
        [1.7916e-04],
        [2.9958e-05],
        [1.6461e-04],
        [2.5939e-04],
        [3.4778e-04],
        [7.3647e-04],
        [4.2789e-04],
        [2.9466e-04],
        [1.9047e-04],
        [7.0686e-05],
        [5.6500e-04],
        [1.5070e-04]], device='cuda:0')/tensor([[1.2372e-04, 2.3417e-05, 4.3184e-05, 1.7635e-04, 1.7916e-04, 2.9958e-05,
         1.6461e-04, 2.5939e-04, 3.4778e-04, 7.3647e-04, 4.2789e-04, 2.9466e-04,
         1.9047e-04, 7.0686e-05, 5.6500e-04, 1.5070e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.9153e-04],
        [8.9156e-07],
        [8.1335e-06],
        [2.4959e-05],
        [3.6575e-05],
        [1.5165e-06],
        [7.6140e-05],
        [1.7000e-04],
        [3.3264e-04],
        [6.6930e-04],
        [3.7014e-04],
        [9.0592e-03],
        [1.8568e-05],
        [9.8795e-07],
        [1.1458e-03],
        [1.3262e-05]], device='cuda:0')/tensor([[1.9153e-04, 8.9156e-07, 8.1335e-06, 2.4959e-05, 3.6575e-05, 1.5165e-06,
         7.6140e-05, 1.7000e-04, 3.3264e-04, 6.6930e-04, 3.7014e-04, 9.0592e-03,
         1.8568e-05, 9.8795e-07, 1.1458e-03, 1.3262e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.4220e-04],
        [4.8777e-06],
        [1.4716e-05],
        [3.8243e-05],
        [8.0999e-05],
        [3.0326e-06],
        [1.5428e-04],
        [1.3659e-04],
        [6.3133e-05],
        [2.2067e-04],
        [4.6512e-04],
        [1.4979e-04],
        [2.3865e-05],
        [2.2683e-05],
        [3.5659e-04],
        [2.9186e-05]], device='cuda:0')/tensor([[1.4220e-04, 4.8777e-06, 1.4716e-05, 3.8243e-05, 8.0999e-05, 3.0326e-06,
         1.5428e-04, 1.3659e-04, 6.3133e-05, 2.2067e-04, 4.6512e-04, 1.4979e-04,
         2.3865e-05, 2.2683e-05, 3.5659e-04, 2.9186e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.2372e-04, 1.9153e-04, 1.4220e-04],
        [2.3417e-05, 8.9156e-07, 4.8777e-06],
        [4.3184e-05, 8.1335e-06, 1.4716e-05],
        [1.7635e-04, 2.4959e-05, 3.8243e-05],
        [1.7916e-04, 3.6575e-05, 8.0999e-05],
        [2.9958e-05, 1.5165e-06, 3.0326e-06],
        [1.6461e-04, 7.6140e-05, 1.5428e-04],
        [2.5939e-04, 1.7000e-04, 1.3659e-04],
        [3.4778e-04, 3.3264e-04, 6.3133e-05],
        [7.3647e-04, 6.6930e-04, 2.2067e-04],
        [4.2789e-04, 3.7014e-04, 4.6512e-04],
        [2.9466e-04, 9.0592e-03, 1.4979e-04],
        [1.9047e-04, 1.8568e-05, 2.3865e-05],
        [7.0686e-05, 9.8795e-07, 2.2683e-05],
        [5.6500e-04, 1.1458e-03, 3.5659e-04],
        [1.5070e-04, 1.3262e-05, 2.9186e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.1067e-04],
        [2.0145e-03],
        [1.9623e-04],
        [4.4445e-04],
        [3.9175e-04],
        [4.9855e-05],
        [2.5420e-04],
        [3.7483e-04],
        [2.9039e-04],
        [1.5825e-03],
        [4.5375e-04],
        [3.2207e-04],
        [4.7711e-05],
        [2.2483e-04],
        [1.9708e-04],
        [3.4505e-05]], device='cuda:0')/tensor([[6.1067e-04, 2.0145e-03, 1.9623e-04, 4.4445e-04, 3.9175e-04, 4.9855e-05,
         2.5420e-04, 3.7483e-04, 2.9039e-04, 1.5825e-03, 4.5375e-04, 3.2207e-04,
         4.7711e-05, 2.2483e-04, 1.9708e-04, 3.4505e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.9309e-04],
        [2.8653e-04],
        [5.7142e-06],
        [1.9308e-03],
        [1.4461e-04],
        [9.4942e-07],
        [1.3374e-04],
        [6.1325e-05],
        [2.0251e-05],
        [9.6061e-04],
        [2.5365e-04],
        [4.2608e-04],
        [1.2855e-06],
        [1.9108e-05],
        [2.7741e-05],
        [2.8161e-06]], device='cuda:0')/tensor([[2.9309e-04, 2.8653e-04, 5.7142e-06, 1.9308e-03, 1.4461e-04, 9.4942e-07,
         1.3374e-04, 6.1325e-05, 2.0251e-05, 9.6061e-04, 2.5365e-04, 4.2608e-04,
         1.2855e-06, 1.9108e-05, 2.7741e-05, 2.8161e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8872e-04],
        [3.9071e-04],
        [9.7147e-06],
        [7.0528e-05],
        [1.2593e-04],
        [1.4881e-05],
        [1.1180e-04],
        [1.6836e-04],
        [1.2804e-05],
        [1.0897e-03],
        [2.7844e-04],
        [1.7069e-04],
        [1.7206e-05],
        [2.2505e-05],
        [1.9701e-05],
        [8.0235e-06]], device='cuda:0')/tensor([[1.8872e-04, 3.9071e-04, 9.7147e-06, 7.0528e-05, 1.2593e-04, 1.4881e-05,
         1.1180e-04, 1.6836e-04, 1.2804e-05, 1.0897e-03, 2.7844e-04, 1.7069e-04,
         1.7206e-05, 2.2505e-05, 1.9701e-05, 8.0235e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1067e-04, 2.9309e-04, 1.8872e-04],
        [2.0145e-03, 2.8653e-04, 3.9071e-04],
        [1.9623e-04, 5.7142e-06, 9.7147e-06],
        [4.4445e-04, 1.9308e-03, 7.0528e-05],
        [3.9175e-04, 1.4461e-04, 1.2593e-04],
        [4.9855e-05, 9.4942e-07, 1.4881e-05],
        [2.5420e-04, 1.3374e-04, 1.1180e-04],
        [3.7483e-04, 6.1325e-05, 1.6836e-04],
        [2.9039e-04, 2.0251e-05, 1.2804e-05],
        [1.5825e-03, 9.6061e-04, 1.0897e-03],
        [4.5375e-04, 2.5365e-04, 2.7844e-04],
        [3.2207e-04, 4.2608e-04, 1.7069e-04],
        [4.7711e-05, 1.2855e-06, 1.7206e-05],
        [2.2483e-04, 1.9108e-05, 2.2505e-05],
        [1.9708e-04, 2.7741e-05, 1.9701e-05],
        [3.4505e-05, 2.8161e-06, 8.0235e-06]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.7649e-05],
        [4.7875e-05],
        [7.2549e-04],
        [3.5906e-04],
        [1.6744e-04],
        [6.5128e-05],
        [1.2165e-03],
        [4.1916e-05],
        [2.7928e-04],
        [5.9532e-04],
        [4.3426e-04],
        [4.0058e-03],
        [1.2722e-04],
        [2.3589e-05],
        [7.0957e-04],
        [9.0592e-04]], device='cuda:0')/tensor([[3.7649e-05, 4.7875e-05, 7.2549e-04, 3.5906e-04, 1.6744e-04, 6.5128e-05,
         1.2165e-03, 4.1916e-05, 2.7928e-04, 5.9532e-04, 4.3426e-04, 4.0058e-03,
         1.2722e-04, 2.3589e-05, 7.0957e-04, 9.0592e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.0916e-05],
        [6.2600e-06],
        [2.1043e-04],
        [1.3610e-04],
        [6.8712e-05],
        [1.4702e-06],
        [5.4877e-04],
        [1.0402e-05],
        [4.1954e-04],
        [2.4633e-04],
        [2.2468e-04],
        [1.3950e-03],
        [3.9142e-05],
        [1.1307e-06],
        [8.0130e-03],
        [1.5330e-04]], device='cuda:0')/tensor([[1.0916e-05, 6.2600e-06, 2.1043e-04, 1.3610e-04, 6.8712e-05, 1.4702e-06,
         5.4877e-04, 1.0402e-05, 4.1954e-04, 2.4633e-04, 2.2468e-04, 1.3950e-03,
         3.9142e-05, 1.1307e-06, 8.0130e-03, 1.5330e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3747e-05],
        [1.1347e-05],
        [2.5458e-05],
        [8.9128e-05],
        [3.0344e-05],
        [2.7747e-05],
        [2.9062e-04],
        [1.1591e-05],
        [1.6189e-04],
        [5.0265e-05],
        [7.7705e-05],
        [3.9889e-04],
        [3.2458e-05],
        [2.1689e-06],
        [1.1525e-04],
        [7.7592e-05]], device='cuda:0')/tensor([[1.3747e-05, 1.1347e-05, 2.5458e-05, 8.9128e-05, 3.0344e-05, 2.7747e-05,
         2.9062e-04, 1.1591e-05, 1.6189e-04, 5.0265e-05, 7.7705e-05, 3.9889e-04,
         3.2458e-05, 2.1689e-06, 1.1525e-04, 7.7592e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.7649e-05, 1.0916e-05, 1.3747e-05],
        [4.7875e-05, 6.2600e-06, 1.1347e-05],
        [7.2549e-04, 2.1043e-04, 2.5458e-05],
        [3.5906e-04, 1.3610e-04, 8.9128e-05],
        [1.6744e-04, 6.8712e-05, 3.0344e-05],
        [6.5128e-05, 1.4702e-06, 2.7747e-05],
        [1.2165e-03, 5.4877e-04, 2.9062e-04],
        [4.1916e-05, 1.0402e-05, 1.1591e-05],
        [2.7928e-04, 4.1954e-04, 1.6189e-04],
        [5.9532e-04, 2.4633e-04, 5.0265e-05],
        [4.3426e-04, 2.2468e-04, 7.7705e-05],
        [4.0058e-03, 1.3950e-03, 3.9889e-04],
        [1.2722e-04, 3.9142e-05, 3.2458e-05],
        [2.3589e-05, 1.1307e-06, 2.1689e-06],
        [7.0957e-04, 8.0130e-03, 1.1525e-04],
        [9.0592e-04, 1.5330e-04, 7.7592e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.0717e-04],
        [6.6950e-05],
        [4.3717e-04],
        [6.2572e-05],
        [2.9855e-04],
        [1.3524e-03],
        [1.8444e-04],
        [4.0311e-04],
        [9.4373e-06],
        [1.5007e-04],
        [1.5462e-05],
        [7.6477e-05],
        [1.6059e-04],
        [3.3178e-04],
        [9.2342e-05],
        [2.7043e-04]], device='cuda:0')/tensor([[7.0717e-04, 6.6950e-05, 4.3717e-04, 6.2572e-05, 2.9855e-04, 1.3524e-03,
         1.8444e-04, 4.0311e-04, 9.4373e-06, 1.5007e-04, 1.5462e-05, 7.6477e-05,
         1.6059e-04, 3.3178e-04, 9.2342e-05, 2.7043e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.0750e-04],
        [8.2710e-06],
        [1.7972e-03],
        [1.4999e-05],
        [4.0840e-04],
        [4.3869e-04],
        [1.0939e-05],
        [8.6639e-05],
        [2.4378e-07],
        [2.5609e-05],
        [2.6846e-07],
        [5.3024e-05],
        [1.2249e-05],
        [8.3376e-05],
        [5.0732e-06],
        [7.3005e-05]], device='cuda:0')/tensor([[3.0750e-04, 8.2710e-06, 1.7972e-03, 1.4999e-05, 4.0840e-04, 4.3869e-04,
         1.0939e-05, 8.6639e-05, 2.4378e-07, 2.5609e-05, 2.6846e-07, 5.3024e-05,
         1.2249e-05, 8.3376e-05, 5.0732e-06, 7.3005e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.0890e-04],
        [8.3524e-06],
        [2.2217e-04],
        [2.5096e-05],
        [1.0448e-04],
        [1.5573e-04],
        [1.8981e-05],
        [3.8857e-05],
        [2.9859e-06],
        [1.5735e-05],
        [2.1189e-06],
        [8.7575e-05],
        [2.1489e-05],
        [4.3716e-05],
        [7.0246e-05],
        [5.8505e-05]], device='cuda:0')/tensor([[1.0890e-04, 8.3524e-06, 2.2217e-04, 2.5096e-05, 1.0448e-04, 1.5573e-04,
         1.8981e-05, 3.8857e-05, 2.9859e-06, 1.5735e-05, 2.1189e-06, 8.7575e-05,
         2.1489e-05, 4.3716e-05, 7.0246e-05, 5.8505e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.0717e-04, 3.0750e-04, 1.0890e-04],
        [6.6950e-05, 8.2710e-06, 8.3524e-06],
        [4.3717e-04, 1.7972e-03, 2.2217e-04],
        [6.2572e-05, 1.4999e-05, 2.5096e-05],
        [2.9855e-04, 4.0840e-04, 1.0448e-04],
        [1.3524e-03, 4.3869e-04, 1.5573e-04],
        [1.8444e-04, 1.0939e-05, 1.8981e-05],
        [4.0311e-04, 8.6639e-05, 3.8857e-05],
        [9.4373e-06, 2.4378e-07, 2.9859e-06],
        [1.5007e-04, 2.5609e-05, 1.5735e-05],
        [1.5462e-05, 2.6846e-07, 2.1189e-06],
        [7.6477e-05, 5.3024e-05, 8.7575e-05],
        [1.6059e-04, 1.2249e-05, 2.1489e-05],
        [3.3178e-04, 8.3376e-05, 4.3716e-05],
        [9.2342e-05, 5.0732e-06, 7.0246e-05],
        [2.7043e-04, 7.3005e-05, 5.8505e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.4140e-05],
        [7.6506e-04],
        [2.4491e-04],
        [1.0525e-03],
        [8.4014e-05],
        [3.7998e-04],
        [3.7225e-05],
        [3.0016e-04],
        [2.4519e-04],
        [2.7513e-04],
        [4.5254e-04],
        [2.3418e-04],
        [1.4294e-04],
        [3.7481e-04],
        [3.3554e-04],
        [2.5917e-04]], device='cuda:0')/tensor([[2.4140e-05, 7.6506e-04, 2.4491e-04, 1.0525e-03, 8.4014e-05, 3.7998e-04,
         3.7225e-05, 3.0016e-04, 2.4519e-04, 2.7513e-04, 4.5254e-04, 2.3418e-04,
         1.4294e-04, 3.7481e-04, 3.3554e-04, 2.5917e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.8495e-06],
        [1.9878e-04],
        [6.6534e-05],
        [5.2353e-04],
        [4.6381e-06],
        [5.4687e-05],
        [1.7596e-06],
        [1.7873e-04],
        [2.7173e-04],
        [1.3412e-04],
        [1.4526e-04],
        [4.6825e-04],
        [1.6832e-05],
        [1.8059e-03],
        [1.9181e-04],
        [3.1316e-04]], device='cuda:0')/tensor([[3.8495e-06, 1.9878e-04, 6.6534e-05, 5.2353e-04, 4.6381e-06, 5.4687e-05,
         1.7596e-06, 1.7873e-04, 2.7173e-04, 1.3412e-04, 1.4526e-04, 4.6825e-04,
         1.6832e-05, 1.8059e-03, 1.9181e-04, 3.1316e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.6283e-06],
        [3.0563e-05],
        [2.9198e-05],
        [4.9969e-04],
        [6.5972e-06],
        [7.5749e-05],
        [4.6159e-06],
        [2.1000e-04],
        [2.9199e-04],
        [1.3487e-04],
        [9.1103e-05],
        [1.1559e-04],
        [3.2847e-05],
        [5.3133e-05],
        [2.0899e-04],
        [6.4305e-05]], device='cuda:0')/tensor([[3.6283e-06, 3.0563e-05, 2.9198e-05, 4.9969e-04, 6.5972e-06, 7.5749e-05,
         4.6159e-06, 2.1000e-04, 2.9199e-04, 1.3487e-04, 9.1103e-05, 1.1559e-04,
         3.2847e-05, 5.3133e-05, 2.0899e-04, 6.4305e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.4140e-05, 3.8495e-06, 3.6283e-06],
        [7.6506e-04, 1.9878e-04, 3.0563e-05],
        [2.4491e-04, 6.6534e-05, 2.9198e-05],
        [1.0525e-03, 5.2353e-04, 4.9969e-04],
        [8.4014e-05, 4.6381e-06, 6.5972e-06],
        [3.7998e-04, 5.4687e-05, 7.5749e-05],
        [3.7225e-05, 1.7596e-06, 4.6159e-06],
        [3.0016e-04, 1.7873e-04, 2.1000e-04],
        [2.4519e-04, 2.7173e-04, 2.9199e-04],
        [2.7513e-04, 1.3412e-04, 1.3487e-04],
        [4.5254e-04, 1.4526e-04, 9.1103e-05],
        [2.3418e-04, 4.6825e-04, 1.1559e-04],
        [1.4294e-04, 1.6832e-05, 3.2847e-05],
        [3.7481e-04, 1.8059e-03, 5.3133e-05],
        [3.3554e-04, 1.9181e-04, 2.0899e-04],
        [2.5917e-04, 3.1316e-04, 6.4305e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[7.9985e-04],
        [2.4911e-04],
        [7.4766e-06],
        [1.0056e-04],
        [8.8628e-04],
        [2.8260e-05],
        [6.5920e-04],
        [1.6553e-04],
        [7.3298e-04],
        [1.2236e-04],
        [1.7639e-04],
        [6.2753e-04],
        [9.6439e-05],
        [6.7520e-04],
        [1.3947e-03],
        [4.8057e-05]], device='cuda:0')/tensor([[7.9985e-04, 2.4911e-04, 7.4766e-06, 1.0056e-04, 8.8628e-04, 2.8260e-05,
         6.5920e-04, 1.6553e-04, 7.3298e-04, 1.2236e-04, 1.7639e-04, 6.2753e-04,
         9.6439e-05, 6.7520e-04, 1.3947e-03, 4.8057e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.3798e-04],
        [6.5094e-05],
        [5.3620e-07],
        [1.9589e-05],
        [1.1890e-03],
        [3.2355e-06],
        [1.7606e-03],
        [3.2901e-05],
        [2.8551e-04],
        [7.7205e-05],
        [5.1042e-05],
        [3.0347e-05],
        [2.8765e-07],
        [4.7632e-05],
        [7.0839e-04],
        [2.3496e-06]], device='cuda:0')/tensor([[5.3798e-04, 6.5094e-05, 5.3620e-07, 1.9589e-05, 1.1890e-03, 3.2355e-06,
         1.7606e-03, 3.2901e-05, 2.8551e-04, 7.7205e-05, 5.1042e-05, 3.0347e-05,
         2.8765e-07, 4.7632e-05, 7.0839e-04, 2.3496e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[1.8279e-04],
        [4.7821e-05],
        [1.8196e-06],
        [1.3633e-05],
        [5.1516e-05],
        [5.2768e-06],
        [1.1488e-04],
        [1.2011e-05],
        [1.4122e-04],
        [1.9153e-05],
        [6.0269e-05],
        [2.0866e-05],
        [7.1630e-06],
        [1.7981e-05],
        [1.1625e-04],
        [5.2319e-06]], device='cuda:0')/tensor([[1.8279e-04, 4.7821e-05, 1.8196e-06, 1.3633e-05, 5.1516e-05, 5.2768e-06,
         1.1488e-04, 1.2011e-05, 1.4122e-04, 1.9153e-05, 6.0269e-05, 2.0866e-05,
         7.1630e-06, 1.7981e-05, 1.1625e-04, 5.2319e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[7.9985e-04, 5.3798e-04, 1.8279e-04],
        [2.4911e-04, 6.5094e-05, 4.7821e-05],
        [7.4766e-06, 5.3620e-07, 1.8196e-06],
        [1.0056e-04, 1.9589e-05, 1.3633e-05],
        [8.8628e-04, 1.1890e-03, 5.1516e-05],
        [2.8260e-05, 3.2355e-06, 5.2768e-06],
        [6.5920e-04, 1.7606e-03, 1.1488e-04],
        [1.6553e-04, 3.2901e-05, 1.2011e-05],
        [7.3298e-04, 2.8551e-04, 1.4122e-04],
        [1.2236e-04, 7.7205e-05, 1.9153e-05],
        [1.7639e-04, 5.1042e-05, 6.0269e-05],
        [6.2753e-04, 3.0347e-05, 2.0866e-05],
        [9.6439e-05, 2.8765e-07, 7.1630e-06],
        [6.7520e-04, 4.7632e-05, 1.7981e-05],
        [1.3947e-03, 7.0839e-04, 1.1625e-04],
        [4.8057e-05, 2.3496e-06, 5.2319e-06]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[4.6619e-04],
        [6.3185e-04],
        [1.2804e-04],
        [3.2567e-05]], device='cuda:0')/tensor([[4.6619e-04, 6.3185e-04, 1.2804e-04, 3.2567e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[2.7621e-04],
        [2.2040e-03],
        [6.1868e-05],
        [2.1489e-06]], device='cuda:0')/tensor([[2.7621e-04, 2.2040e-03, 6.1868e-05, 2.1489e-06]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[9.7097e-05],
        [1.8250e-04],
        [6.3454e-05],
        [4.9669e-06]], device='cuda:0')/tensor([[9.7097e-05, 1.8250e-04, 6.3454e-05, 4.9669e-06]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[4.6619e-04, 2.7621e-04, 9.7097e-05],
        [6.3185e-04, 2.2040e-03, 1.8250e-04],
        [1.2804e-04, 6.1868e-05, 6.3454e-05],
        [3.2567e-05, 2.1489e-06, 4.9669e-06]], device='cuda:0')
acc:  0.12121212121212122
Time taken to execute the de NLI task with prompt type identical_modal, variation 3 and batchsize 16: 0:01:02.267574
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_3']
----------- 42 de google/flan-t5-base NLI identical_modal 4 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 353.66it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7304e-05],
        [6.7207e-04],
        [1.9169e-05],
        [8.9648e-04],
        [3.1480e-04],
        [3.4618e-04],
        [7.3287e-05],
        [2.4033e-04],
        [8.5488e-05],
        [6.5877e-05],
        [1.4877e-04],
        [2.0596e-04],
        [6.8333e-05],
        [1.6132e-04],
        [1.4276e-04],
        [2.8580e-04]], device='cuda:0')/tensor([[1.7304e-05, 6.7207e-04, 1.9169e-05, 8.9648e-04, 3.1480e-04, 3.4618e-04,
         7.3287e-05, 2.4033e-04, 8.5488e-05, 6.5877e-05, 1.4877e-04, 2.0596e-04,
         6.8333e-05, 1.6132e-04, 1.4276e-04, 2.8580e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4552e-07],
        [2.1279e-04],
        [2.2471e-06],
        [2.2379e-04],
        [1.9690e-03],
        [2.1688e-04],
        [9.7334e-07],
        [9.3929e-05],
        [1.2648e-05],
        [7.5980e-06],
        [2.3165e-04],
        [3.2308e-05],
        [1.9873e-06],
        [4.3414e-05],
        [3.2619e-04],
        [3.3139e-04]], device='cuda:0')/tensor([[2.4552e-07, 2.1279e-04, 2.2471e-06, 2.2379e-04, 1.9690e-03, 2.1688e-04,
         9.7334e-07, 9.3929e-05, 1.2648e-05, 7.5980e-06, 2.3165e-04, 3.2308e-05,
         1.9873e-06, 4.3414e-05, 3.2619e-04, 3.3139e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1111e-06],
        [1.3254e-04],
        [5.2206e-06],
        [7.0726e-05],
        [2.5383e-04],
        [4.4220e-05],
        [1.5208e-05],
        [6.8435e-05],
        [6.8508e-06],
        [1.1390e-05],
        [7.2430e-05],
        [3.8364e-05],
        [2.3200e-06],
        [2.9090e-05],
        [5.2896e-05],
        [6.0140e-04]], device='cuda:0')/tensor([[1.1111e-06, 1.3254e-04, 5.2206e-06, 7.0726e-05, 2.5383e-04, 4.4220e-05,
         1.5208e-05, 6.8435e-05, 6.8508e-06, 1.1390e-05, 7.2430e-05, 3.8364e-05,
         2.3200e-06, 2.9090e-05, 5.2896e-05, 6.0140e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7304e-05, 2.4552e-07, 1.1111e-06],
        [6.7207e-04, 2.1279e-04, 1.3254e-04],
        [1.9169e-05, 2.2471e-06, 5.2206e-06],
        [8.9648e-04, 2.2379e-04, 7.0726e-05],
        [3.1480e-04, 1.9690e-03, 2.5383e-04],
        [3.4618e-04, 2.1688e-04, 4.4220e-05],
        [7.3287e-05, 9.7334e-07, 1.5208e-05],
        [2.4033e-04, 9.3929e-05, 6.8435e-05],
        [8.5488e-05, 1.2648e-05, 6.8508e-06],
        [6.5877e-05, 7.5980e-06, 1.1390e-05],
        [1.4877e-04, 2.3165e-04, 7.2430e-05],
        [2.0596e-04, 3.2308e-05, 3.8364e-05],
        [6.8333e-05, 1.9873e-06, 2.3200e-06],
        [1.6132e-04, 4.3414e-05, 2.9090e-05],
        [1.4276e-04, 3.2619e-04, 5.2896e-05],
        [2.8580e-04, 3.3139e-04, 6.0140e-04]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.3502e-04],
        [3.3447e-04],
        [3.0724e-04],
        [1.9596e-04],
        [5.3404e-05],
        [1.6065e-04],
        [6.3790e-04],
        [2.0734e-04],
        [7.1960e-05],
        [4.1645e-03],
        [2.8129e-04],
        [1.5191e-05],
        [2.9854e-04],
        [1.1596e-04],
        [9.7851e-04],
        [1.7832e-04]], device='cuda:0')/tensor([[6.3502e-04, 3.3447e-04, 3.0724e-04, 1.9596e-04, 5.3404e-05, 1.6065e-04,
         6.3790e-04, 2.0734e-04, 7.1960e-05, 4.1645e-03, 2.8129e-04, 1.5191e-05,
         2.9854e-04, 1.1596e-04, 9.7851e-04, 1.7832e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.4623e-04],
        [2.2552e-03],
        [5.6132e-05],
        [8.3541e-05],
        [2.8153e-05],
        [5.7207e-03],
        [3.6779e-04],
        [6.3613e-05],
        [4.9940e-05],
        [1.5137e-03],
        [2.2614e-04],
        [2.1745e-06],
        [1.0687e-04],
        [4.8874e-05],
        [4.9639e-04],
        [2.0927e-05]], device='cuda:0')/tensor([[2.4623e-04, 2.2552e-03, 5.6132e-05, 8.3541e-05, 2.8153e-05, 5.7207e-03,
         3.6779e-04, 6.3613e-05, 4.9940e-05, 1.5137e-03, 2.2614e-04, 2.1745e-06,
         1.0687e-04, 4.8874e-05, 4.9639e-04, 2.0927e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.8142e-04],
        [9.0345e-05],
        [1.7704e-05],
        [8.2607e-05],
        [1.7291e-05],
        [5.4476e-05],
        [1.3763e-04],
        [1.3379e-04],
        [5.8191e-05],
        [8.6096e-04],
        [1.7764e-04],
        [5.1349e-06],
        [2.8376e-05],
        [3.7853e-05],
        [2.6281e-04],
        [2.7631e-05]], device='cuda:0')/tensor([[1.8142e-04, 9.0345e-05, 1.7704e-05, 8.2607e-05, 1.7291e-05, 5.4476e-05,
         1.3763e-04, 1.3379e-04, 5.8191e-05, 8.6096e-04, 1.7764e-04, 5.1349e-06,
         2.8376e-05, 3.7853e-05, 2.6281e-04, 2.7631e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.3502e-04, 2.4623e-04, 1.8142e-04],
        [3.3447e-04, 2.2552e-03, 9.0345e-05],
        [3.0724e-04, 5.6132e-05, 1.7704e-05],
        [1.9596e-04, 8.3541e-05, 8.2607e-05],
        [5.3404e-05, 2.8153e-05, 1.7291e-05],
        [1.6065e-04, 5.7207e-03, 5.4476e-05],
        [6.3790e-04, 3.6779e-04, 1.3763e-04],
        [2.0734e-04, 6.3613e-05, 1.3379e-04],
        [7.1960e-05, 4.9940e-05, 5.8191e-05],
        [4.1645e-03, 1.5137e-03, 8.6096e-04],
        [2.8129e-04, 2.2614e-04, 1.7764e-04],
        [1.5191e-05, 2.1745e-06, 5.1349e-06],
        [2.9854e-04, 1.0687e-04, 2.8376e-05],
        [1.1596e-04, 4.8874e-05, 3.7853e-05],
        [9.7851e-04, 4.9639e-04, 2.6281e-04],
        [1.7832e-04, 2.0927e-05, 2.7631e-05]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.6356e-04],
        [4.5509e-05],
        [1.8047e-05],
        [7.5672e-05],
        [2.2124e-04],
        [4.8931e-04],
        [6.7421e-05],
        [4.2951e-04],
        [3.6109e-05],
        [2.5328e-05],
        [5.1815e-04],
        [1.2574e-04],
        [7.0692e-04],
        [6.4702e-04],
        [1.6005e-04],
        [3.6959e-04]], device='cuda:0')/tensor([[3.6356e-04, 4.5509e-05, 1.8047e-05, 7.5672e-05, 2.2124e-04, 4.8931e-04,
         6.7421e-05, 4.2951e-04, 3.6109e-05, 2.5328e-05, 5.1815e-04, 1.2574e-04,
         7.0692e-04, 6.4702e-04, 1.6005e-04, 3.6959e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.2508e-04],
        [1.7578e-05],
        [2.5766e-06],
        [1.2170e-06],
        [2.9500e-05],
        [2.7463e-04],
        [1.4382e-05],
        [2.0711e-04],
        [5.2067e-06],
        [1.7453e-06],
        [3.4680e-04],
        [3.7527e-05],
        [8.0201e-03],
        [1.2759e-03],
        [2.4644e-05],
        [2.2324e-04]], device='cuda:0')/tensor([[1.2508e-04, 1.7578e-05, 2.5766e-06, 1.2170e-06, 2.9500e-05, 2.7463e-04,
         1.4382e-05, 2.0711e-04, 5.2067e-06, 1.7453e-06, 3.4680e-04, 3.7527e-05,
         8.0201e-03, 1.2759e-03, 2.4644e-05, 2.2324e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.4507e-05],
        [1.4869e-05],
        [2.0422e-06],
        [1.4364e-05],
        [2.3833e-05],
        [4.0372e-05],
        [1.9030e-05],
        [1.1509e-04],
        [9.5623e-06],
        [1.9773e-06],
        [9.4161e-05],
        [2.7917e-05],
        [1.0687e-04],
        [1.2198e-04],
        [9.8474e-06],
        [6.4104e-05]], device='cuda:0')/tensor([[7.4507e-05, 1.4869e-05, 2.0422e-06, 1.4364e-05, 2.3833e-05, 4.0372e-05,
         1.9030e-05, 1.1509e-04, 9.5623e-06, 1.9773e-06, 9.4161e-05, 2.7917e-05,
         1.0687e-04, 1.2198e-04, 9.8474e-06, 6.4104e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.6356e-04, 1.2508e-04, 7.4507e-05],
        [4.5509e-05, 1.7578e-05, 1.4869e-05],
        [1.8047e-05, 2.5766e-06, 2.0422e-06],
        [7.5672e-05, 1.2170e-06, 1.4364e-05],
        [2.2124e-04, 2.9500e-05, 2.3833e-05],
        [4.8931e-04, 2.7463e-04, 4.0372e-05],
        [6.7421e-05, 1.4382e-05, 1.9030e-05],
        [4.2951e-04, 2.0711e-04, 1.1509e-04],
        [3.6109e-05, 5.2067e-06, 9.5623e-06],
        [2.5328e-05, 1.7453e-06, 1.9773e-06],
        [5.1815e-04, 3.4680e-04, 9.4161e-05],
        [1.2574e-04, 3.7527e-05, 2.7917e-05],
        [7.0692e-04, 8.0201e-03, 1.0687e-04],
        [6.4702e-04, 1.2759e-03, 1.2198e-04],
        [1.6005e-04, 2.4644e-05, 9.8474e-06],
        [3.6959e-04, 2.2324e-04, 6.4104e-05]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.7478e-04],
        [1.7724e-04],
        [2.7155e-05],
        [5.0949e-04],
        [3.3286e-04],
        [9.2358e-05],
        [7.8806e-04],
        [2.3442e-04],
        [2.1894e-04],
        [2.2527e-04],
        [6.5240e-04],
        [2.6047e-04],
        [1.3634e-04],
        [2.3956e-04],
        [2.1319e-04],
        [4.3444e-04]], device='cuda:0')/tensor([[1.7478e-04, 1.7724e-04, 2.7155e-05, 5.0949e-04, 3.3286e-04, 9.2358e-05,
         7.8806e-04, 2.3442e-04, 2.1894e-04, 2.2527e-04, 6.5240e-04, 2.6047e-04,
         1.3634e-04, 2.3956e-04, 2.1319e-04, 4.3444e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.0930e-05],
        [4.3484e-04],
        [7.0897e-07],
        [3.7310e-05],
        [2.5312e-04],
        [5.4123e-06],
        [4.0961e-04],
        [2.7940e-04],
        [1.1508e-04],
        [9.0974e-05],
        [2.8400e-04],
        [8.7834e-03],
        [2.9267e-06],
        [2.1562e-04],
        [4.2665e-05],
        [5.2639e-05]], device='cuda:0')/tensor([[3.0930e-05, 4.3484e-04, 7.0897e-07, 3.7310e-05, 2.5312e-04, 5.4123e-06,
         4.0961e-04, 2.7940e-04, 1.1508e-04, 9.0974e-05, 2.8400e-04, 8.7834e-03,
         2.9267e-06, 2.1562e-04, 4.2665e-05, 5.2639e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.6347e-05],
        [5.3733e-05],
        [2.6538e-06],
        [3.1778e-05],
        [1.2492e-04],
        [7.5417e-05],
        [8.3723e-05],
        [5.0104e-05],
        [8.3363e-05],
        [8.7347e-05],
        [2.8437e-05],
        [1.4892e-04],
        [2.4886e-05],
        [2.3244e-05],
        [2.2445e-05],
        [2.4036e-05]], device='cuda:0')/tensor([[1.6347e-05, 5.3733e-05, 2.6538e-06, 3.1778e-05, 1.2492e-04, 7.5417e-05,
         8.3723e-05, 5.0104e-05, 8.3363e-05, 8.7347e-05, 2.8437e-05, 1.4892e-04,
         2.4886e-05, 2.3244e-05, 2.2445e-05, 2.4036e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.7478e-04, 3.0930e-05, 1.6347e-05],
        [1.7724e-04, 4.3484e-04, 5.3733e-05],
        [2.7155e-05, 7.0897e-07, 2.6538e-06],
        [5.0949e-04, 3.7310e-05, 3.1778e-05],
        [3.3286e-04, 2.5312e-04, 1.2492e-04],
        [9.2358e-05, 5.4123e-06, 7.5417e-05],
        [7.8806e-04, 4.0961e-04, 8.3723e-05],
        [2.3442e-04, 2.7940e-04, 5.0104e-05],
        [2.1894e-04, 1.1508e-04, 8.3363e-05],
        [2.2527e-04, 9.0974e-05, 8.7347e-05],
        [6.5240e-04, 2.8400e-04, 2.8437e-05],
        [2.6047e-04, 8.7834e-03, 1.4892e-04],
        [1.3634e-04, 2.9267e-06, 2.4886e-05],
        [2.3956e-04, 2.1562e-04, 2.3244e-05],
        [2.1319e-04, 4.2665e-05, 2.2445e-05],
        [4.3444e-04, 5.2639e-05, 2.4036e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.1276e-05],
        [4.4334e-04],
        [5.2592e-04],
        [2.5643e-03],
        [2.2658e-04],
        [2.8571e-04],
        [4.4044e-04],
        [8.9189e-05],
        [2.0036e-04],
        [3.7689e-04],
        [2.1822e-05],
        [1.4204e-04],
        [3.3697e-05],
        [4.4117e-04],
        [9.1123e-05],
        [8.6036e-05]], device='cuda:0')/tensor([[6.1276e-05, 4.4334e-04, 5.2592e-04, 2.5643e-03, 2.2658e-04, 2.8571e-04,
         4.4044e-04, 8.9189e-05, 2.0036e-04, 3.7689e-04, 2.1822e-05, 1.4204e-04,
         3.3697e-05, 4.4117e-04, 9.1123e-05, 8.6036e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[8.9717e-06],
        [1.7134e-04],
        [5.0833e-05],
        [2.3820e-03],
        [2.9000e-04],
        [3.3287e-04],
        [6.0428e-04],
        [1.1582e-04],
        [1.1848e-04],
        [5.7063e-05],
        [2.0670e-06],
        [3.8834e-05],
        [1.0255e-06],
        [1.9096e-03],
        [6.7212e-05],
        [2.3770e-06]], device='cuda:0')/tensor([[8.9717e-06, 1.7134e-04, 5.0833e-05, 2.3820e-03, 2.9000e-04, 3.3287e-04,
         6.0428e-04, 1.1582e-04, 1.1848e-04, 5.7063e-05, 2.0670e-06, 3.8834e-05,
         1.0255e-06, 1.9096e-03, 6.7212e-05, 2.3770e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.9823e-06],
        [2.6927e-04],
        [5.0700e-05],
        [1.3209e-04],
        [1.3403e-04],
        [9.6138e-05],
        [1.8639e-04],
        [1.0434e-04],
        [3.3203e-05],
        [4.8773e-05],
        [3.1256e-06],
        [1.5379e-05],
        [3.5455e-06],
        [1.6915e-04],
        [6.7300e-05],
        [5.5150e-05]], device='cuda:0')/tensor([[8.9823e-06, 2.6927e-04, 5.0700e-05, 1.3209e-04, 1.3403e-04, 9.6138e-05,
         1.8639e-04, 1.0434e-04, 3.3203e-05, 4.8773e-05, 3.1256e-06, 1.5379e-05,
         3.5455e-06, 1.6915e-04, 6.7300e-05, 5.5150e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.1276e-05, 8.9717e-06, 8.9823e-06],
        [4.4334e-04, 1.7134e-04, 2.6927e-04],
        [5.2592e-04, 5.0833e-05, 5.0700e-05],
        [2.5643e-03, 2.3820e-03, 1.3209e-04],
        [2.2658e-04, 2.9000e-04, 1.3403e-04],
        [2.8571e-04, 3.3287e-04, 9.6138e-05],
        [4.4044e-04, 6.0428e-04, 1.8639e-04],
        [8.9189e-05, 1.1582e-04, 1.0434e-04],
        [2.0036e-04, 1.1848e-04, 3.3203e-05],
        [3.7689e-04, 5.7063e-05, 4.8773e-05],
        [2.1822e-05, 2.0670e-06, 3.1256e-06],
        [1.4204e-04, 3.8834e-05, 1.5379e-05],
        [3.3697e-05, 1.0255e-06, 3.5455e-06],
        [4.4117e-04, 1.9096e-03, 1.6915e-04],
        [9.1123e-05, 6.7212e-05, 6.7300e-05],
        [8.6036e-05, 2.3770e-06, 5.5150e-05]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.1923e-05],
        [3.2462e-04],
        [1.2631e-03],
        [4.7972e-05],
        [1.2658e-04],
        [3.2029e-04],
        [1.3591e-04],
        [1.7243e-04],
        [1.5124e-03],
        [6.4109e-04],
        [4.0507e-04],
        [7.0314e-05],
        [1.4313e-04],
        [3.5268e-04],
        [1.0122e-03],
        [4.0684e-05]], device='cuda:0')/tensor([[1.1923e-05, 3.2462e-04, 1.2631e-03, 4.7972e-05, 1.2658e-04, 3.2029e-04,
         1.3591e-04, 1.7243e-04, 1.5124e-03, 6.4109e-04, 4.0507e-04, 7.0314e-05,
         1.4313e-04, 3.5268e-04, 1.0122e-03, 4.0684e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.1198e-07],
        [1.0860e-04],
        [3.0444e-04],
        [2.8400e-06],
        [1.0985e-05],
        [1.7075e-03],
        [8.5302e-05],
        [7.4397e-05],
        [6.6024e-04],
        [1.6551e-04],
        [8.5029e-05],
        [7.8586e-06],
        [1.8091e-05],
        [1.7263e-04],
        [5.1056e-04],
        [8.9413e-07]], device='cuda:0')/tensor([[4.1198e-07, 1.0860e-04, 3.0444e-04, 2.8400e-06, 1.0985e-05, 1.7075e-03,
         8.5302e-05, 7.4397e-05, 6.6024e-04, 1.6551e-04, 8.5029e-05, 7.8586e-06,
         1.8091e-05, 1.7263e-04, 5.1056e-04, 8.9413e-07]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.0158e-06],
        [6.5154e-05],
        [1.3509e-04],
        [3.1570e-05],
        [2.1719e-05],
        [5.4480e-05],
        [3.1601e-05],
        [2.6753e-05],
        [3.3850e-04],
        [2.3332e-05],
        [2.7124e-05],
        [8.9611e-06],
        [2.6233e-05],
        [7.9091e-05],
        [7.7786e-05],
        [9.0699e-06]], device='cuda:0')/tensor([[3.0158e-06, 6.5154e-05, 1.3509e-04, 3.1570e-05, 2.1719e-05, 5.4480e-05,
         3.1601e-05, 2.6753e-05, 3.3850e-04, 2.3332e-05, 2.7124e-05, 8.9611e-06,
         2.6233e-05, 7.9091e-05, 7.7786e-05, 9.0699e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.1923e-05, 4.1198e-07, 3.0158e-06],
        [3.2462e-04, 1.0860e-04, 6.5154e-05],
        [1.2631e-03, 3.0444e-04, 1.3509e-04],
        [4.7972e-05, 2.8400e-06, 3.1570e-05],
        [1.2658e-04, 1.0985e-05, 2.1719e-05],
        [3.2029e-04, 1.7075e-03, 5.4480e-05],
        [1.3591e-04, 8.5302e-05, 3.1601e-05],
        [1.7243e-04, 7.4397e-05, 2.6753e-05],
        [1.5124e-03, 6.6024e-04, 3.3850e-04],
        [6.4109e-04, 1.6551e-04, 2.3332e-05],
        [4.0507e-04, 8.5029e-05, 2.7124e-05],
        [7.0314e-05, 7.8586e-06, 8.9611e-06],
        [1.4313e-04, 1.8091e-05, 2.6233e-05],
        [3.5268e-04, 1.7263e-04, 7.9091e-05],
        [1.0122e-03, 5.1056e-04, 7.7786e-05],
        [4.0684e-05, 8.9413e-07, 9.0699e-06]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[6.8685e-04],
        [1.6124e-04],
        [2.2088e-04],
        [1.9871e-04],
        [2.7825e-04],
        [4.9145e-05],
        [2.1616e-04],
        [2.9285e-04],
        [1.4866e-04],
        [1.7589e-04],
        [6.3871e-05],
        [5.1508e-04],
        [1.4517e-04],
        [2.5858e-04],
        [8.8998e-04],
        [2.1399e-05]], device='cuda:0')/tensor([[6.8685e-04, 1.6124e-04, 2.2088e-04, 1.9871e-04, 2.7825e-04, 4.9145e-05,
         2.1616e-04, 2.9285e-04, 1.4866e-04, 1.7589e-04, 6.3871e-05, 5.1508e-04,
         1.4517e-04, 2.5858e-04, 8.8998e-04, 2.1399e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.1550e-04],
        [7.6420e-06],
        [1.2520e-04],
        [5.2384e-05],
        [3.1027e-04],
        [3.0894e-07],
        [2.8766e-04],
        [4.8457e-04],
        [5.8642e-06],
        [3.7530e-05],
        [2.5573e-05],
        [2.7873e-04],
        [2.5747e-05],
        [1.8890e-04],
        [7.2294e-04],
        [8.5737e-07]], device='cuda:0')/tensor([[4.1550e-04, 7.6420e-06, 1.2520e-04, 5.2384e-05, 3.1027e-04, 3.0894e-07,
         2.8766e-04, 4.8457e-04, 5.8642e-06, 3.7530e-05, 2.5573e-05, 2.7873e-04,
         2.5747e-05, 1.8890e-04, 7.2294e-04, 8.5737e-07]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[7.0109e-05],
        [5.5826e-05],
        [9.9758e-05],
        [1.7568e-05],
        [9.2819e-05],
        [3.3259e-06],
        [1.0991e-04],
        [3.0483e-04],
        [7.2727e-06],
        [3.1739e-05],
        [6.3624e-06],
        [1.5071e-04],
        [7.7129e-05],
        [6.8297e-05],
        [1.8753e-04],
        [1.7568e-06]], device='cuda:0')/tensor([[7.0109e-05, 5.5826e-05, 9.9758e-05, 1.7568e-05, 9.2819e-05, 3.3259e-06,
         1.0991e-04, 3.0483e-04, 7.2727e-06, 3.1739e-05, 6.3624e-06, 1.5071e-04,
         7.7129e-05, 6.8297e-05, 1.8753e-04, 1.7568e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[6.8685e-04, 4.1550e-04, 7.0109e-05],
        [1.6124e-04, 7.6420e-06, 5.5826e-05],
        [2.2088e-04, 1.2520e-04, 9.9758e-05],
        [1.9871e-04, 5.2384e-05, 1.7568e-05],
        [2.7825e-04, 3.1027e-04, 9.2819e-05],
        [4.9145e-05, 3.0894e-07, 3.3259e-06],
        [2.1616e-04, 2.8766e-04, 1.0991e-04],
        [2.9285e-04, 4.8457e-04, 3.0483e-04],
        [1.4866e-04, 5.8642e-06, 7.2727e-06],
        [1.7589e-04, 3.7530e-05, 3.1739e-05],
        [6.3871e-05, 2.5573e-05, 6.3624e-06],
        [5.1508e-04, 2.7873e-04, 1.5071e-04],
        [1.4517e-04, 2.5747e-05, 7.7129e-05],
        [2.5858e-04, 1.8890e-04, 6.8297e-05],
        [8.8998e-04, 7.2294e-04, 1.8753e-04],
        [2.1399e-05, 8.5737e-07, 1.7568e-06]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.8047e-05],
        [1.5597e-04],
        [3.1685e-04],
        [6.3339e-05],
        [3.8433e-05],
        [2.4109e-04],
        [9.5500e-04],
        [1.6305e-04],
        [6.8818e-04],
        [9.2737e-04],
        [9.3474e-05],
        [8.1614e-05],
        [4.6240e-04],
        [1.7803e-04],
        [2.1777e-04],
        [1.0809e-03]], device='cuda:0')/tensor([[3.8047e-05, 1.5597e-04, 3.1685e-04, 6.3339e-05, 3.8433e-05, 2.4109e-04,
         9.5500e-04, 1.6305e-04, 6.8818e-04, 9.2737e-04, 9.3474e-05, 8.1614e-05,
         4.6240e-04, 1.7803e-04, 2.1777e-04, 1.0809e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[2.0168e-06],
        [4.2747e-04],
        [3.8244e-05],
        [1.9757e-03],
        [1.8146e-06],
        [1.6607e-04],
        [3.3425e-04],
        [4.1478e-05],
        [5.2240e-04],
        [5.5387e-04],
        [6.3012e-06],
        [1.9716e-05],
        [2.1801e-04],
        [1.1102e-04],
        [1.5466e-04],
        [4.3395e-03]], device='cuda:0')/tensor([[2.0168e-06, 4.2747e-04, 3.8244e-05, 1.9757e-03, 1.8146e-06, 1.6607e-04,
         3.3425e-04, 4.1478e-05, 5.2240e-04, 5.5387e-04, 6.3012e-06, 1.9716e-05,
         2.1801e-04, 1.1102e-04, 1.5466e-04, 4.3395e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
Found cached dataset xnli (/home/lcur1101/.cache/huggingface/datasets/xnli/de/1.1.0/818164464f9c9fd15776ca8a00423b074344c3e929d00a2c1a84aa5a50c928bd)
id: [10330] -> tensor([[9.2571e-06],
        [3.5467e-05],
        [5.1380e-05],
        [1.8240e-04],
        [2.7709e-05],
        [5.4018e-05],
        [3.0520e-04],
        [1.6216e-05],
        [1.5641e-04],
        [4.1232e-04],
        [1.3620e-05],
        [2.1522e-05],
        [6.7838e-05],
        [1.0738e-04],
        [7.3045e-05],
        [2.4851e-04]], device='cuda:0')/tensor([[9.2571e-06, 3.5467e-05, 5.1380e-05, 1.8240e-04, 2.7709e-05, 5.4018e-05,
         3.0520e-04, 1.6216e-05, 1.5641e-04, 4.1232e-04, 1.3620e-05, 2.1522e-05,
         6.7838e-05, 1.0738e-04, 7.3045e-05, 2.4851e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.8047e-05, 2.0168e-06, 9.2571e-06],
        [1.5597e-04, 4.2747e-04, 3.5467e-05],
        [3.1685e-04, 3.8244e-05, 5.1380e-05],
        [6.3339e-05, 1.9757e-03, 1.8240e-04],
        [3.8433e-05, 1.8146e-06, 2.7709e-05],
        [2.4109e-04, 1.6607e-04, 5.4018e-05],
        [9.5500e-04, 3.3425e-04, 3.0520e-04],
        [1.6305e-04, 4.1478e-05, 1.6216e-05],
        [6.8818e-04, 5.2240e-04, 1.5641e-04],
        [9.2737e-04, 5.5387e-04, 4.1232e-04],
        [9.3474e-05, 6.3012e-06, 1.3620e-05],
        [8.1614e-05, 1.9716e-05, 2.1522e-05],
        [4.6240e-04, 2.1801e-04, 6.7838e-05],
        [1.7803e-04, 1.1102e-04, 1.0738e-04],
        [2.1777e-04, 1.5466e-04, 7.3045e-05],
        [1.0809e-03, 4.3395e-03, 2.4851e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[8.3160e-04],
        [4.9324e-04],
        [3.9984e-04],
        [5.1677e-05]], device='cuda:0')/tensor([[8.3160e-04, 4.9324e-04, 3.9984e-04, 5.1677e-05]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[6.0844e-04],
        [6.1234e-03],
        [4.6319e-05],
        [9.5875e-06]], device='cuda:0')/tensor([[6.0844e-04, 6.1234e-03, 4.6319e-05, 9.5875e-06]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[5.0407e-05],
        [8.9165e-05],
        [3.0511e-05],
        [1.1179e-05]], device='cuda:0')/tensor([[5.0407e-05, 8.9165e-05, 3.0511e-05, 1.1179e-05]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[8.3160e-04, 6.0844e-04, 5.0407e-05],
        [4.9324e-04, 6.1234e-03, 8.9165e-05],
        [3.9984e-04, 4.6319e-05, 3.0511e-05],
        [5.1677e-05, 9.5875e-06, 1.1179e-05]], device='cuda:0')
acc:  0.10606060606060606
Time taken to execute the de NLI task with prompt type identical_modal, variation 4 and batchsize 16: 0:01:02.275733
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_4']
----------- 42 de google/flan-t5-base NLI identical_modal 5 200 16 --------------
Loading NLI dataset for de
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 368.40it/s]
NLI dataset loaded
len dataset  261803
len of entail_examples , neutral_examples, contra_examples:  0 66 66
len dataset  132
Batch: 0 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[9.0859e-05],
        [1.6186e-04],
        [7.3087e-04],
        [3.6455e-04],
        [4.5015e-05],
        [1.1618e-04],
        [2.5511e-04],
        [2.6809e-04],
        [2.3753e-04],
        [2.7513e-04],
        [1.5505e-04],
        [9.6534e-05],
        [6.8737e-04],
        [5.0130e-04],
        [4.9568e-04],
        [1.3816e-04]], device='cuda:0')/tensor([[9.0859e-05, 1.6186e-04, 7.3087e-04, 3.6455e-04, 4.5015e-05, 1.1618e-04,
         2.5511e-04, 2.6809e-04, 2.3753e-04, 2.7513e-04, 1.5505e-04, 9.6534e-05,
         6.8737e-04, 5.0130e-04, 4.9568e-04, 1.3816e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.2741e-06],
        [4.9702e-05],
        [7.5396e-03],
        [1.5175e-04],
        [7.3789e-06],
        [8.7135e-06],
        [4.3959e-05],
        [4.4485e-04],
        [1.0484e-04],
        [3.3309e-04],
        [2.2108e-05],
        [3.8606e-06],
        [2.5931e-04],
        [6.1747e-05],
        [2.8041e-04],
        [2.1108e-04]], device='cuda:0')/tensor([[5.2741e-06, 4.9702e-05, 7.5396e-03, 1.5175e-04, 7.3789e-06, 8.7135e-06,
         4.3959e-05, 4.4485e-04, 1.0484e-04, 3.3309e-04, 2.2108e-05, 3.8606e-06,
         2.5931e-04, 6.1747e-05, 2.8041e-04, 2.1108e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[9.5858e-06],
        [5.4522e-05],
        [1.0998e-04],
        [4.4806e-05],
        [8.7221e-06],
        [1.7866e-05],
        [3.3581e-05],
        [9.4332e-05],
        [8.6521e-05],
        [1.9713e-04],
        [8.7806e-06],
        [6.7611e-05],
        [3.2940e-04],
        [5.9247e-05],
        [3.9081e-05],
        [3.0814e-05]], device='cuda:0')/tensor([[9.5858e-06, 5.4522e-05, 1.0998e-04, 4.4806e-05, 8.7221e-06, 1.7866e-05,
         3.3581e-05, 9.4332e-05, 8.6521e-05, 1.9713e-04, 8.7806e-06, 6.7611e-05,
         3.2940e-04, 5.9247e-05, 3.9081e-05, 3.0814e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[9.0859e-05, 5.2741e-06, 9.5858e-06],
        [1.6186e-04, 4.9702e-05, 5.4522e-05],
        [7.3087e-04, 7.5396e-03, 1.0998e-04],
        [3.6455e-04, 1.5175e-04, 4.4806e-05],
        [4.5015e-05, 7.3789e-06, 8.7221e-06],
        [1.1618e-04, 8.7135e-06, 1.7866e-05],
        [2.5511e-04, 4.3959e-05, 3.3581e-05],
        [2.6809e-04, 4.4485e-04, 9.4332e-05],
        [2.3753e-04, 1.0484e-04, 8.6521e-05],
        [2.7513e-04, 3.3309e-04, 1.9713e-04],
        [1.5505e-04, 2.2108e-05, 8.7806e-06],
        [9.6534e-05, 3.8606e-06, 6.7611e-05],
        [6.8737e-04, 2.5931e-04, 3.2940e-04],
        [5.0130e-04, 6.1747e-05, 5.9247e-05],
        [4.9568e-04, 2.8041e-04, 3.9081e-05],
        [1.3816e-04, 2.1108e-04, 3.0814e-05]], device='cuda:0')
Batch: 1 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.0234e-04],
        [2.9120e-05],
        [5.2822e-04],
        [1.6702e-04],
        [4.8888e-05],
        [1.6900e-04],
        [5.6000e-04],
        [6.3469e-04],
        [5.0018e-04],
        [1.6578e-04],
        [1.6437e-04],
        [1.9805e-04],
        [2.0088e-04],
        [4.3040e-04],
        [4.9528e-04],
        [2.5317e-05]], device='cuda:0')/tensor([[1.0234e-04, 2.9120e-05, 5.2822e-04, 1.6702e-04, 4.8888e-05, 1.6900e-04,
         5.6000e-04, 6.3469e-04, 5.0018e-04, 1.6578e-04, 1.6437e-04, 1.9805e-04,
         2.0088e-04, 4.3040e-04, 4.9528e-04, 2.5317e-05]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.9411e-05],
        [6.3218e-07],
        [5.4570e-05],
        [4.4449e-05],
        [1.7718e-06],
        [4.6239e-05],
        [4.2672e-04],
        [1.4251e-03],
        [2.8659e-04],
        [5.9780e-05],
        [4.5077e-05],
        [1.2044e-04],
        [2.5147e-05],
        [1.5311e-04],
        [1.6654e-03],
        [1.3048e-06]], device='cuda:0')/tensor([[5.9411e-05, 6.3218e-07, 5.4570e-05, 4.4449e-05, 1.7718e-06, 4.6239e-05,
         4.2672e-04, 1.4251e-03, 2.8659e-04, 5.9780e-05, 4.5077e-05, 1.2044e-04,
         2.5147e-05, 1.5311e-04, 1.6654e-03, 1.3048e-06]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.3840e-05],
        [3.3632e-06],
        [2.3924e-05],
        [1.6377e-05],
        [2.1976e-05],
        [1.3588e-04],
        [9.0542e-05],
        [1.5517e-04],
        [5.5714e-05],
        [1.4119e-05],
        [3.3509e-05],
        [5.9977e-05],
        [2.7873e-05],
        [3.0142e-04],
        [1.9463e-04],
        [1.7601e-06]], device='cuda:0')/tensor([[1.3840e-05, 3.3632e-06, 2.3924e-05, 1.6377e-05, 2.1976e-05, 1.3588e-04,
         9.0542e-05, 1.5517e-04, 5.5714e-05, 1.4119e-05, 3.3509e-05, 5.9977e-05,
         2.7873e-05, 3.0142e-04, 1.9463e-04, 1.7601e-06]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.0234e-04, 5.9411e-05, 1.3840e-05],
        [2.9120e-05, 6.3218e-07, 3.3632e-06],
        [5.2822e-04, 5.4570e-05, 2.3924e-05],
        [1.6702e-04, 4.4449e-05, 1.6377e-05],
        [4.8888e-05, 1.7718e-06, 2.1976e-05],
        [1.6900e-04, 4.6239e-05, 1.3588e-04],
        [5.6000e-04, 4.2672e-04, 9.0542e-05],
        [6.3469e-04, 1.4251e-03, 1.5517e-04],
        [5.0018e-04, 2.8659e-04, 5.5714e-05],
        [1.6578e-04, 5.9780e-05, 1.4119e-05],
        [1.6437e-04, 4.5077e-05, 3.3509e-05],
        [1.9805e-04, 1.2044e-04, 5.9977e-05],
        [2.0088e-04, 2.5147e-05, 2.7873e-05],
        [4.3040e-04, 1.5311e-04, 3.0142e-04],
        [4.9528e-04, 1.6654e-03, 1.9463e-04],
        [2.5317e-05, 1.3048e-06, 1.7601e-06]], device='cuda:0')
Batch: 2 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[3.2038e-04],
        [2.2726e-04],
        [2.2037e-04],
        [4.6762e-05],
        [8.5512e-05],
        [1.9365e-04],
        [1.0629e-03],
        [5.3690e-05],
        [8.5049e-05],
        [1.4938e-04],
        [1.9347e-04],
        [2.4138e-04],
        [2.0159e-04],
        [2.1835e-04],
        [5.3168e-04],
        [4.8860e-03]], device='cuda:0')/tensor([[3.2038e-04, 2.2726e-04, 2.2037e-04, 4.6762e-05, 8.5512e-05, 1.9365e-04,
         1.0629e-03, 5.3690e-05, 8.5049e-05, 1.4938e-04, 1.9347e-04, 2.4138e-04,
         2.0159e-04, 2.1835e-04, 5.3168e-04, 4.8860e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.5302e-04],
        [2.9779e-04],
        [2.4553e-04],
        [2.5564e-06],
        [1.1185e-05],
        [2.1199e-04],
        [4.9221e-03],
        [2.1271e-05],
        [2.1287e-03],
        [6.0907e-07],
        [8.9131e-05],
        [1.3167e-03],
        [5.9832e-06],
        [3.6243e-04],
        [2.4123e-04],
        [1.7557e-03]], device='cuda:0')/tensor([[1.5302e-04, 2.9779e-04, 2.4553e-04, 2.5564e-06, 1.1185e-05, 2.1199e-04,
         4.9221e-03, 2.1271e-05, 2.1287e-03, 6.0907e-07, 8.9131e-05, 1.3167e-03,
         5.9832e-06, 3.6243e-04, 2.4123e-04, 1.7557e-03]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[4.9285e-05],
        [6.7174e-04],
        [2.0828e-04],
        [3.3112e-05],
        [1.0127e-05],
        [9.2151e-05],
        [2.3411e-04],
        [1.3325e-05],
        [1.9350e-04],
        [7.5339e-06],
        [2.6231e-05],
        [5.2491e-05],
        [5.0174e-05],
        [1.2900e-04],
        [1.1705e-04],
        [4.3372e-04]], device='cuda:0')/tensor([[4.9285e-05, 6.7174e-04, 2.0828e-04, 3.3112e-05, 1.0127e-05, 9.2151e-05,
         2.3411e-04, 1.3325e-05, 1.9350e-04, 7.5339e-06, 2.6231e-05, 5.2491e-05,
         5.0174e-05, 1.2900e-04, 1.1705e-04, 4.3372e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[3.2038e-04, 1.5302e-04, 4.9285e-05],
        [2.2726e-04, 2.9779e-04, 6.7174e-04],
        [2.2037e-04, 2.4553e-04, 2.0828e-04],
        [4.6762e-05, 2.5564e-06, 3.3112e-05],
        [8.5512e-05, 1.1185e-05, 1.0127e-05],
        [1.9365e-04, 2.1199e-04, 9.2151e-05],
        [1.0629e-03, 4.9221e-03, 2.3411e-04],
        [5.3690e-05, 2.1271e-05, 1.3325e-05],
        [8.5049e-05, 2.1287e-03, 1.9350e-04],
        [1.4938e-04, 6.0907e-07, 7.5339e-06],
        [1.9347e-04, 8.9131e-05, 2.6231e-05],
        [2.4138e-04, 1.3167e-03, 5.2491e-05],
        [2.0159e-04, 5.9832e-06, 5.0174e-05],
        [2.1835e-04, 3.6243e-04, 1.2900e-04],
        [5.3168e-04, 2.4123e-04, 1.1705e-04],
        [4.8860e-03, 1.7557e-03, 4.3372e-04]], device='cuda:0')
Batch: 3 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.2531e-04],
        [1.4121e-04],
        [2.4940e-04],
        [3.3557e-04],
        [1.4565e-04],
        [4.5421e-05],
        [2.7240e-04],
        [3.0228e-04],
        [1.1118e-04],
        [1.2452e-04],
        [3.5524e-04],
        [7.5427e-04],
        [2.4330e-04],
        [2.1248e-03],
        [7.4099e-04],
        [2.4262e-04]], device='cuda:0')/tensor([[2.2531e-04, 1.4121e-04, 2.4940e-04, 3.3557e-04, 1.4565e-04, 4.5421e-05,
         2.7240e-04, 3.0228e-04, 1.1118e-04, 1.2452e-04, 3.5524e-04, 7.5427e-04,
         2.4330e-04, 2.1248e-03, 7.4099e-04, 2.4262e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[1.1502e-04],
        [3.4982e-05],
        [1.8743e-04],
        [1.8680e-03],
        [3.8380e-05],
        [9.6694e-06],
        [1.7374e-04],
        [1.0457e-04],
        [2.9281e-05],
        [3.3618e-05],
        [2.8608e-04],
        [4.4939e-04],
        [2.0600e-04],
        [3.2357e-04],
        [8.9137e-04],
        [1.9632e-04]], device='cuda:0')/tensor([[1.1502e-04, 3.4982e-05, 1.8743e-04, 1.8680e-03, 3.8380e-05, 9.6694e-06,
         1.7374e-04, 1.0457e-04, 2.9281e-05, 3.3618e-05, 2.8608e-04, 4.4939e-04,
         2.0600e-04, 3.2357e-04, 8.9137e-04, 1.9632e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[8.9213e-05],
        [1.6112e-05],
        [1.4114e-04],
        [5.5403e-05],
        [2.3771e-05],
        [1.8333e-05],
        [7.5898e-05],
        [6.9925e-05],
        [3.1403e-05],
        [2.6243e-05],
        [3.5096e-04],
        [1.0560e-04],
        [2.3398e-05],
        [1.0910e-04],
        [2.2172e-04],
        [6.9779e-05]], device='cuda:0')/tensor([[8.9213e-05, 1.6112e-05, 1.4114e-04, 5.5403e-05, 2.3771e-05, 1.8333e-05,
         7.5898e-05, 6.9925e-05, 3.1403e-05, 2.6243e-05, 3.5096e-04, 1.0560e-04,
         2.3398e-05, 1.0910e-04, 2.2172e-04, 6.9779e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.2531e-04, 1.1502e-04, 8.9213e-05],
        [1.4121e-04, 3.4982e-05, 1.6112e-05],
        [2.4940e-04, 1.8743e-04, 1.4114e-04],
        [3.3557e-04, 1.8680e-03, 5.5403e-05],
        [1.4565e-04, 3.8380e-05, 2.3771e-05],
        [4.5421e-05, 9.6694e-06, 1.8333e-05],
        [2.7240e-04, 1.7374e-04, 7.5898e-05],
        [3.0228e-04, 1.0457e-04, 6.9925e-05],
        [1.1118e-04, 2.9281e-05, 3.1403e-05],
        [1.2452e-04, 3.3618e-05, 2.6243e-05],
        [3.5524e-04, 2.8608e-04, 3.5096e-04],
        [7.5427e-04, 4.4939e-04, 1.0560e-04],
        [2.4330e-04, 2.0600e-04, 2.3398e-05],
        [2.1248e-03, 3.2357e-04, 1.0910e-04],
        [7.4099e-04, 8.9137e-04, 2.2172e-04],
        [2.4262e-04, 1.9632e-04, 6.9779e-05]], device='cuda:0')
Batch: 4 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.7400e-04],
        [2.5863e-04],
        [1.4936e-04],
        [3.8424e-05],
        [1.7404e-04],
        [2.6067e-05],
        [6.0847e-05],
        [1.2641e-03],
        [1.1281e-04],
        [4.1015e-04],
        [1.0468e-04],
        [2.0687e-04],
        [4.8661e-04],
        [5.8103e-06],
        [1.7720e-04],
        [2.0498e-04]], device='cuda:0')/tensor([[2.7400e-04, 2.5863e-04, 1.4936e-04, 3.8424e-05, 1.7404e-04, 2.6067e-05,
         6.0847e-05, 1.2641e-03, 1.1281e-04, 4.1015e-04, 1.0468e-04, 2.0687e-04,
         4.8661e-04, 5.8103e-06, 1.7720e-04, 2.0498e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[3.4192e-05],
        [7.7762e-05],
        [9.7698e-05],
        [6.6229e-07],
        [6.2716e-05],
        [2.0509e-06],
        [1.5935e-06],
        [1.2305e-04],
        [6.8678e-05],
        [1.0005e-04],
        [8.0718e-06],
        [3.6174e-05],
        [3.3453e-04],
        [9.1617e-08],
        [8.0203e-06],
        [3.3693e-04]], device='cuda:0')/tensor([[3.4192e-05, 7.7762e-05, 9.7698e-05, 6.6229e-07, 6.2716e-05, 2.0509e-06,
         1.5935e-06, 1.2305e-04, 6.8678e-05, 1.0005e-04, 8.0718e-06, 3.6174e-05,
         3.3453e-04, 9.1617e-08, 8.0203e-06, 3.3693e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[1.1340e-05],
        [5.9747e-05],
        [2.1037e-05],
        [7.4190e-06],
        [5.8348e-05],
        [2.4514e-06],
        [1.6398e-06],
        [3.1688e-05],
        [3.1710e-05],
        [2.6816e-05],
        [1.8025e-05],
        [9.7756e-05],
        [9.0213e-05],
        [8.8710e-07],
        [1.1293e-05],
        [3.5190e-04]], device='cuda:0')/tensor([[1.1340e-05, 5.9747e-05, 2.1037e-05, 7.4190e-06, 5.8348e-05, 2.4514e-06,
         1.6398e-06, 3.1688e-05, 3.1710e-05, 2.6816e-05, 1.8025e-05, 9.7756e-05,
         9.0213e-05, 8.8710e-07, 1.1293e-05, 3.5190e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.7400e-04, 3.4192e-05, 1.1340e-05],
        [2.5863e-04, 7.7762e-05, 5.9747e-05],
        [1.4936e-04, 9.7698e-05, 2.1037e-05],
        [3.8424e-05, 6.6229e-07, 7.4190e-06],
        [1.7404e-04, 6.2716e-05, 5.8348e-05],
        [2.6067e-05, 2.0509e-06, 2.4514e-06],
        [6.0847e-05, 1.5935e-06, 1.6398e-06],
        [1.2641e-03, 1.2305e-04, 3.1688e-05],
        [1.1281e-04, 6.8678e-05, 3.1710e-05],
        [4.1015e-04, 1.0005e-04, 2.6816e-05],
        [1.0468e-04, 8.0718e-06, 1.8025e-05],
        [2.0687e-04, 3.6174e-05, 9.7756e-05],
        [4.8661e-04, 3.3453e-04, 9.0213e-05],
        [5.8103e-06, 9.1617e-08, 8.8710e-07],
        [1.7720e-04, 8.0203e-06, 1.1293e-05],
        [2.0498e-04, 3.3693e-04, 3.5190e-04]], device='cuda:0')
Batch: 5 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[5.2627e-05],
        [8.2187e-04],
        [1.3577e-04],
        [2.9230e-03],
        [6.1126e-04],
        [7.1156e-04],
        [9.2849e-04],
        [2.9034e-04],
        [1.6483e-03],
        [4.0426e-04],
        [6.1974e-04],
        [3.3331e-04],
        [3.1458e-05],
        [4.1033e-05],
        [1.9992e-04],
        [6.1791e-04]], device='cuda:0')/tensor([[5.2627e-05, 8.2187e-04, 1.3577e-04, 2.9230e-03, 6.1126e-04, 7.1156e-04,
         9.2849e-04, 2.9034e-04, 1.6483e-03, 4.0426e-04, 6.1974e-04, 3.3331e-04,
         3.1458e-05, 4.1033e-05, 1.9992e-04, 6.1791e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.1474e-06],
        [5.0303e-04],
        [5.6806e-04],
        [2.3839e-03],
        [5.9971e-04],
        [9.5139e-04],
        [5.2815e-04],
        [8.6321e-03],
        [9.3388e-04],
        [7.1436e-04],
        [2.5240e-04],
        [5.1013e-05],
        [6.2013e-06],
        [9.8730e-07],
        [4.4341e-04],
        [3.2318e-04]], device='cuda:0')/tensor([[4.1474e-06, 5.0303e-04, 5.6806e-04, 2.3839e-03, 5.9971e-04, 9.5139e-04,
         5.2815e-04, 8.6321e-03, 9.3388e-04, 7.1436e-04, 2.5240e-04, 5.1013e-05,
         6.2013e-06, 9.8730e-07, 4.4341e-04, 3.2318e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[3.8818e-06],
        [3.9370e-04],
        [3.5864e-05],
        [1.2189e-04],
        [1.6282e-04],
        [6.1092e-05],
        [6.8573e-05],
        [1.4375e-04],
        [4.2739e-04],
        [1.9845e-04],
        [1.4330e-04],
        [6.0310e-05],
        [3.9226e-06],
        [9.3720e-06],
        [9.2190e-05],
        [2.9382e-05]], device='cuda:0')/tensor([[3.8818e-06, 3.9370e-04, 3.5864e-05, 1.2189e-04, 1.6282e-04, 6.1092e-05,
         6.8573e-05, 1.4375e-04, 4.2739e-04, 1.9845e-04, 1.4330e-04, 6.0310e-05,
         3.9226e-06, 9.3720e-06, 9.2190e-05, 2.9382e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[5.2627e-05, 4.1474e-06, 3.8818e-06],
        [8.2187e-04, 5.0303e-04, 3.9370e-04],
        [1.3577e-04, 5.6806e-04, 3.5864e-05],
        [2.9230e-03, 2.3839e-03, 1.2189e-04],
        [6.1126e-04, 5.9971e-04, 1.6282e-04],
        [7.1156e-04, 9.5139e-04, 6.1092e-05],
        [9.2849e-04, 5.2815e-04, 6.8573e-05],
        [2.9034e-04, 8.6321e-03, 1.4375e-04],
        [1.6483e-03, 9.3388e-04, 4.2739e-04],
        [4.0426e-04, 7.1436e-04, 1.9845e-04],
        [6.1974e-04, 2.5240e-04, 1.4330e-04],
        [3.3331e-04, 5.1013e-05, 6.0310e-05],
        [3.1458e-05, 6.2013e-06, 3.9226e-06],
        [4.1033e-05, 9.8730e-07, 9.3720e-06],
        [1.9992e-04, 4.4341e-04, 9.2190e-05],
        [6.1791e-04, 3.2318e-04, 2.9382e-05]], device='cuda:0')
Batch: 6 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[2.5587e-04],
        [1.8378e-04],
        [2.5024e-04],
        [8.6547e-04],
        [7.2730e-04],
        [1.4585e-03],
        [3.4355e-04],
        [1.6429e-04],
        [3.0085e-04],
        [5.8299e-05],
        [2.3568e-05],
        [6.5080e-05],
        [1.6637e-05],
        [2.0423e-04],
        [1.3990e-04],
        [1.9521e-04]], device='cuda:0')/tensor([[2.5587e-04, 1.8378e-04, 2.5024e-04, 8.6547e-04, 7.2730e-04, 1.4585e-03,
         3.4355e-04, 1.6429e-04, 3.0085e-04, 5.8299e-05, 2.3568e-05, 6.5080e-05,
         1.6637e-05, 2.0423e-04, 1.3990e-04, 1.9521e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[5.9282e-05],
        [5.1333e-04],
        [5.7609e-05],
        [8.4714e-04],
        [2.2374e-04],
        [2.0585e-04],
        [6.7593e-05],
        [7.7807e-06],
        [4.4785e-04],
        [8.0502e-06],
        [8.4298e-07],
        [7.0038e-07],
        [8.7163e-07],
        [1.1433e-04],
        [1.1618e-05],
        [4.0434e-04]], device='cuda:0')/tensor([[5.9282e-05, 5.1333e-04, 5.7609e-05, 8.4714e-04, 2.2374e-04, 2.0585e-04,
         6.7593e-05, 7.7807e-06, 4.4785e-04, 8.0502e-06, 8.4298e-07, 7.0038e-07,
         8.7163e-07, 1.1433e-04, 1.1618e-05, 4.0434e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.8337e-05],
        [7.1477e-05],
        [4.2206e-04],
        [2.1385e-04],
        [1.3204e-04],
        [1.3509e-04],
        [1.2390e-05],
        [5.5759e-05],
        [3.0527e-04],
        [1.1281e-05],
        [5.3324e-06],
        [5.5299e-06],
        [3.2109e-06],
        [9.6699e-05],
        [2.1007e-05],
        [8.6315e-05]], device='cuda:0')/tensor([[5.8337e-05, 7.1477e-05, 4.2206e-04, 2.1385e-04, 1.3204e-04, 1.3509e-04,
         1.2390e-05, 5.5759e-05, 3.0527e-04, 1.1281e-05, 5.3324e-06, 5.5299e-06,
         3.2109e-06, 9.6699e-05, 2.1007e-05, 8.6315e-05]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[2.5587e-04, 5.9282e-05, 5.8337e-05],
        [1.8378e-04, 5.1333e-04, 7.1477e-05],
        [2.5024e-04, 5.7609e-05, 4.2206e-04],
        [8.6547e-04, 8.4714e-04, 2.1385e-04],
        [7.2730e-04, 2.2374e-04, 1.3204e-04],
        [1.4585e-03, 2.0585e-04, 1.3509e-04],
        [3.4355e-04, 6.7593e-05, 1.2390e-05],
        [1.6429e-04, 7.7807e-06, 5.5759e-05],
        [3.0085e-04, 4.4785e-04, 3.0527e-04],
        [5.8299e-05, 8.0502e-06, 1.1281e-05],
        [2.3568e-05, 8.4298e-07, 5.3324e-06],
        [6.5080e-05, 7.0038e-07, 5.5299e-06],
        [1.6637e-05, 8.7163e-07, 3.2109e-06],
        [2.0423e-04, 1.1433e-04, 9.6699e-05],
        [1.3990e-04, 1.1618e-05, 2.1007e-05],
        [1.9521e-04, 4.0434e-04, 8.6315e-05]], device='cuda:0')
Batch: 7 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([16, 1])
id: [2662] -> tensor([[1.8767e-04],
        [1.8658e-05],
        [9.5224e-04],
        [1.2966e-04],
        [4.1063e-05],
        [2.9487e-04],
        [5.7270e-05],
        [1.6535e-04],
        [6.4956e-04],
        [5.6221e-05],
        [6.1121e-05],
        [4.1931e-05],
        [1.6650e-04],
        [5.2627e-04],
        [6.3446e-04],
        [2.9021e-04]], device='cuda:0')/tensor([[1.8767e-04, 1.8658e-05, 9.5224e-04, 1.2966e-04, 4.1063e-05, 2.9487e-04,
         5.7270e-05, 1.6535e-04, 6.4956e-04, 5.6221e-05, 6.1121e-05, 4.1931e-05,
         1.6650e-04, 5.2627e-04, 6.3446e-04, 2.9021e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([16, 1])
id: [23607] -> tensor([[4.8072e-05],
        [3.3673e-06],
        [4.8081e-04],
        [1.1362e-04],
        [1.2219e-06],
        [1.4755e-04],
        [3.6253e-05],
        [4.0782e-03],
        [1.7379e-04],
        [3.4321e-05],
        [1.7287e-05],
        [2.2962e-06],
        [2.7874e-05],
        [3.7314e-04],
        [5.8991e-05],
        [3.3972e-04]], device='cuda:0')/tensor([[4.8072e-05, 3.3673e-06, 4.8081e-04, 1.1362e-04, 1.2219e-06, 1.4755e-04,
         3.6253e-05, 4.0782e-03, 1.7379e-04, 3.4321e-05, 1.7287e-05, 2.2962e-06,
         2.7874e-05, 3.7314e-04, 5.8991e-05, 3.3972e-04]], device='cuda:0'), torch.Size([1, 16])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([16, 1])
id: [10330] -> tensor([[5.6504e-05],
        [5.4787e-06],
        [2.9462e-04],
        [3.4365e-05],
        [3.2659e-06],
        [6.8210e-05],
        [1.8358e-05],
        [4.1671e-05],
        [3.9632e-05],
        [4.9613e-05],
        [1.6793e-05],
        [4.3731e-06],
        [3.6996e-05],
        [1.9549e-04],
        [5.3478e-05],
        [1.5192e-04]], device='cuda:0')/tensor([[5.6504e-05, 5.4787e-06, 2.9462e-04, 3.4365e-05, 3.2659e-06, 6.8210e-05,
         1.8358e-05, 4.1671e-05, 3.9632e-05, 4.9613e-05, 1.6793e-05, 4.3731e-06,
         3.6996e-05, 1.9549e-04, 5.3478e-05, 1.5192e-04]], device='cuda:0'), torch.Size([1, 16])
answers_probs: tensor([[1.8767e-04, 4.8072e-05, 5.6504e-05],
        [1.8658e-05, 3.3673e-06, 5.4787e-06],
        [9.5224e-04, 4.8081e-04, 2.9462e-04],
        [1.2966e-04, 1.1362e-04, 3.4365e-05],
        [4.1063e-05, 1.2219e-06, 3.2659e-06],
        [2.9487e-04, 1.4755e-04, 6.8210e-05],
        [5.7270e-05, 3.6253e-05, 1.8358e-05],
        [1.6535e-04, 4.0782e-03, 4.1671e-05],
        [6.4956e-04, 1.7379e-04, 3.9632e-05],
        [5.6221e-05, 3.4321e-05, 4.9613e-05],
        [6.1121e-05, 1.7287e-05, 1.6793e-05],
        [4.1931e-05, 2.2962e-06, 4.3731e-06],
        [1.6650e-04, 2.7874e-05, 3.6996e-05],
        [5.2627e-04, 3.7314e-04, 1.9549e-04],
        [6.3446e-04, 5.8991e-05, 5.3478e-05],
        [2.9021e-04, 3.3972e-04, 1.5192e-04]], device='cuda:0')
Batch: 8 , batch size: 16, sample_size: 200
answer  {'input_ids': [2662, 1], 'attention_mask': [1, 1]}
id: [2662, 1] -> [2662]
probs_ shape torch.Size([4, 1])
id: [2662] -> tensor([[1.7652e-04],
        [5.7346e-05],
        [9.3808e-05],
        [2.9457e-04]], device='cuda:0')/tensor([[1.7652e-04, 5.7346e-05, 9.3808e-05, 2.9457e-04]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [23607, 1], 'attention_mask': [1, 1]}
id: [23607, 1] -> [23607]
probs_ shape torch.Size([4, 1])
id: [23607] -> tensor([[4.7735e-05],
        [1.2751e-05],
        [3.0492e-06],
        [4.2471e-03]], device='cuda:0')/tensor([[4.7735e-05, 1.2751e-05, 3.0492e-06, 4.2471e-03]], device='cuda:0'), torch.Size([1, 4])
answer  {'input_ids': [10330, 1], 'attention_mask': [1, 1]}
id: [10330, 1] -> [10330]
probs_ shape torch.Size([4, 1])
id: [10330] -> tensor([[2.4065e-05],
        [1.0788e-05],
        [4.3247e-05],
        [2.9079e-04]], device='cuda:0')/tensor([[2.4065e-05, 1.0788e-05, 4.3247e-05, 2.9079e-04]], device='cuda:0'), torch.Size([1, 4])
answers_probs: tensor([[1.7652e-04, 4.7735e-05, 2.4065e-05],
        [5.7346e-05, 1.2751e-05, 1.0788e-05],
        [9.3808e-05, 3.0492e-06, 4.3247e-05],
        [2.9457e-04, 4.2471e-03, 2.9079e-04]], device='cuda:0')
acc:  0.12878787878787878
Time taken to execute the de NLI task with prompt type identical_modal, variation 5 and batchsize 16: 0:01:02.154600
path ['42', 'de', 'flan', 'NLI', 'identical_modal', 'prompt_id_5']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_de_v13.pickle' as a pickle file.
****End Time: 2023-05-23 16:39:19.152799 Duraction: 3:02:04.024993
