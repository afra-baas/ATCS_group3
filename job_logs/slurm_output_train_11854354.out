Found cached dataset amazon_reviews_multi (/home/lcur1101/.cache/huggingface/datasets/amazon_reviews_multi/en/1.0.0/724e94f4b0c6c405ce7e476a6c5ef4f87db30799ad49f765094cf9770e0f7609)
****Start Time: 2023-06-02_00-37-31
Using MARC dataset for en
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 342.97it/s]
loading model Duration: 0:00:01.735096
Average length of review_body for rows with 1 star: 170.985525
Average length of review_body for rows with 5 star: 151.0092
len of lowest cat:  38553
len of pos_reviews, neg_reviews:  38553 38553
len dataset  77106
len dataset  200
create dataloader Duration: 0:03:39.210125
Loading model bloomz-mt
big model to load
Model bigscience/bloomz-7b1-mt loaded
Available device is cuda
Model device: cuda:0
possible_answers: ['A', 'B']
answer  {'input_ids': [36], 'attention_mask': [1]}
id:[36]
answer  {'input_ids': [37], 'attention_mask': [1]}
id:[37]
summ of probs approach
load model Duration: 0:04:44.697398
prompt_type active has 10 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06]], device='cuda:0') torch.Size([87, 2])
answers_probs just softmax dim 0: tensor([[0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115]], device='cuda:0')
tensor([[0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 5.6744e-05],
        [5.3644e-07, 2.1994e-05],
        [1.4007e-05, 1.4544e-05],
        [2.5630e-06, 4.7028e-05],
        [1.4901e-06, 4.5180e-05],
        [1.3947e-05, 5.4240e-06],
        [8.9407e-07, 3.9399e-05],
        [9.4771e-06, 3.3379e-06],
        [7.7486e-07, 2.5570e-05],
        [2.6822e-06, 3.5763e-07],
        [3.9160e-05, 2.3961e-05],
        [7.1526e-07, 2.1219e-05],
        [1.7285e-06, 4.4167e-05],
        [2.9683e-05, 1.6510e-05],
        [1.7107e-05, 1.1027e-05],
        [1.3351e-05, 4.5300e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0425, 0.0824],
        [0.0424, 0.0826],
        [0.0676, 0.0518],
        [0.0436, 0.0803],
        [0.0427, 0.0819],
        [0.0850, 0.0412],
        [0.0423, 0.0827],
        [0.0867, 0.0404],
        [0.0426, 0.0821],
        [0.1000, 0.0350],
        [0.0769, 0.0455],
        [0.0427, 0.0819],
        [0.0430, 0.0815],
        [0.0787, 0.0445],
        [0.0760, 0.0461],
        [0.0873, 0.0401]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.398506
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0802e-05, 6.0201e-06],
        [4.7922e-05, 3.1173e-05],
        [5.0068e-06, 5.9545e-05],
        [1.3411e-05, 6.4969e-06],
        [1.1921e-07, 1.4544e-05],
        [2.3723e-05, 1.5318e-05],
        [1.0550e-05, 5.2452e-05],
        [1.2994e-05, 7.6294e-06],
        [2.1756e-05, 1.2338e-05],
        [5.9605e-07, 2.5570e-05],
        [5.0068e-06, 6.1691e-05],
        [1.8775e-05, 1.8299e-05],
        [2.1935e-05, 1.4246e-05],
        [1.1325e-05, 6.9141e-06],
        [3.7551e-06, 4.3809e-05],
        [4.1723e-07, 5.8413e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0888, 0.0406],
        [0.0750, 0.0481],
        [0.0442, 0.0816],
        [0.0802, 0.0450],
        [0.0412, 0.0875],
        [0.0751, 0.0481],
        [0.0484, 0.0746],
        [0.0768, 0.0470],
        [0.0774, 0.0466],
        [0.0418, 0.0862],
        [0.0441, 0.0818],
        [0.0679, 0.0532],
        [0.0750, 0.0481],
        [0.0761, 0.0474],
        [0.0443, 0.0815],
        [0.0437, 0.0825]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.342366
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6226e-06, 4.4167e-05],
        [4.2319e-06, 7.1526e-07],
        [1.6630e-05, 1.0192e-05],
        [2.1756e-05, 6.5565e-06],
        [2.1696e-05, 1.0073e-05],
        [1.1325e-06, 4.2617e-05],
        [1.2577e-05, 4.4703e-06],
        [1.2517e-06, 2.8968e-05],
        [2.2650e-06, 5.0068e-05],
        [3.3557e-05, 2.4199e-05],
        [3.8564e-05, 1.8656e-05],
        [2.4021e-05, 1.3411e-05],
        [6.5565e-07, 3.3498e-05],
        [4.1604e-05, 4.5359e-05],
        [2.7239e-05, 1.4544e-05],
        [3.0994e-06, 4.9770e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0409, 0.0867],
        [0.0909, 0.0390],
        [0.0719, 0.0493],
        [0.0834, 0.0425],
        [0.0765, 0.0463],
        [0.0397, 0.0893],
        [0.0808, 0.0438],
        [0.0403, 0.0880],
        [0.0404, 0.0878],
        [0.0691, 0.0513],
        [0.0758, 0.0467],
        [0.0734, 0.0483],
        [0.0394, 0.0899],
        [0.0624, 0.0568],
        [0.0742, 0.0478],
        [0.0410, 0.0865]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.406959
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.7432e-05],
        [1.0133e-06, 4.2379e-05],
        [7.7486e-07, 3.8087e-05],
        [2.7001e-05, 1.0312e-05],
        [4.2319e-06, 7.3552e-05],
        [3.0816e-05, 2.2709e-05],
        [1.1921e-06, 3.6120e-05],
        [2.1458e-05, 1.0550e-05],
        [4.4703e-06, 6.6936e-05],
        [2.6226e-06, 6.4492e-05],
        [2.5570e-05, 1.1504e-05],
        [1.7881e-06, 4.2617e-05],
        [4.1723e-06, 6.5148e-05],
        [5.9605e-08, 3.8743e-06],
        [2.0027e-05, 7.2122e-06],
        [1.4365e-05, 1.0604e-04]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0476, 0.0752],
        [0.0479, 0.0747],
        [0.0477, 0.0750],
        [0.0965, 0.0371],
        [0.0494, 0.0725],
        [0.0832, 0.0430],
        [0.0483, 0.0741],
        [0.0915, 0.0391],
        [0.0498, 0.0719],
        [0.0487, 0.0736],
        [0.0933, 0.0384],
        [0.0487, 0.0735],
        [0.0497, 0.0720],
        [0.0475, 0.0754],
        [0.0976, 0.0367],
        [0.0527, 0.0679]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.222081
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8537e-05, 9.1791e-06],
        [1.2398e-05, 7.3910e-06],
        [3.2842e-05, 1.6272e-05],
        [5.3644e-07, 3.1650e-05],
        [1.5676e-05, 6.8545e-06],
        [1.0729e-06, 4.4227e-05],
        [1.0371e-05, 7.5579e-05],
        [1.9372e-05, 7.4506e-06],
        [8.9407e-07, 3.2187e-05],
        [1.6928e-05, 7.9870e-06],
        [1.7881e-07, 2.0981e-05],
        [0.0000e+00, 1.9073e-06],
        [1.4305e-06, 2.9564e-05],
        [5.1260e-06, 7.2598e-05],
        [5.1856e-06, 6.1452e-05],
        [7.7486e-07, 2.9027e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0878, 0.0405],
        [0.0841, 0.0422],
        [0.0878, 0.0405],
        [0.0457, 0.0777],
        [0.0902, 0.0394],
        [0.0460, 0.0772],
        [0.0507, 0.0701],
        [0.0926, 0.0384],
        [0.0462, 0.0769],
        [0.0887, 0.0401],
        [0.0453, 0.0784],
        [0.0450, 0.0790],
        [0.0471, 0.0755],
        [0.0480, 0.0740],
        [0.0486, 0.0731],
        [0.0462, 0.0770]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.316667
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-07, 9.7752e-06],
        [1.4544e-05, 1.0908e-05],
        [2.5153e-05, 2.0027e-05],
        [1.6689e-05, 8.5235e-06],
        [3.2485e-05, 3.0279e-05],
        [2.1458e-06, 5.4121e-05],
        [2.4080e-05, 1.8060e-05],
        [2.5034e-06, 6.0380e-05],
        [2.5511e-05, 1.0073e-05],
        [3.8564e-05, 1.9670e-05],
        [2.0087e-05, 7.2122e-06],
        [5.3644e-07, 2.4736e-05],
        [1.3351e-05, 7.9870e-06],
        [4.2319e-06, 7.7486e-07],
        [2.7239e-05, 6.2346e-05],
        [4.1723e-07, 2.5749e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0401, 0.0894],
        [0.0690, 0.0520],
        [0.0680, 0.0528],
        [0.0755, 0.0475],
        [0.0653, 0.0549],
        [0.0405, 0.0887],
        [0.0690, 0.0520],
        [0.0405, 0.0885],
        [0.0798, 0.0450],
        [0.0755, 0.0475],
        [0.0813, 0.0441],
        [0.0398, 0.0902],
        [0.0728, 0.0493],
        [0.0907, 0.0396],
        [0.0528, 0.0680],
        [0.0396, 0.0906]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.385588
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1425e-05, 1.9431e-05],
        [3.2663e-05, 1.6272e-05],
        [6.1393e-06, 8.9169e-05],
        [1.6630e-05, 6.8545e-06],
        [5.7817e-06, 7.2420e-05],
        [2.9802e-07, 2.0862e-05],
        [8.1062e-06, 3.9339e-06],
        [2.8551e-05, 6.8486e-05],
        [1.3709e-06, 3.6240e-05],
        [1.5378e-05, 2.0564e-05],
        [5.4181e-05, 2.7239e-05],
        [2.3842e-07, 1.5795e-05],
        [5.0664e-06, 7.1526e-07],
        [3.4809e-05, 2.0444e-05],
        [9.7156e-06, 6.1274e-05],
        [1.6809e-05, 1.5080e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0788, 0.0454],
        [0.0778, 0.0460],
        [0.0425, 0.0841],
        [0.0810, 0.0442],
        [0.0430, 0.0833],
        [0.0405, 0.0885],
        [0.0782, 0.0458],
        [0.0535, 0.0668],
        [0.0414, 0.0865],
        [0.0612, 0.0585],
        [0.0776, 0.0461],
        [0.0405, 0.0884],
        [0.0958, 0.0374],
        [0.0749, 0.0478],
        [0.0457, 0.0782],
        [0.0676, 0.0530]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.321548
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 4.4823e-05],
        [3.7551e-06, 7.6413e-05],
        [9.5367e-07, 4.1604e-05],
        [5.3644e-07, 2.1756e-05],
        [3.5763e-07, 2.1279e-05],
        [8.3447e-07, 3.2842e-05],
        [2.9147e-05, 1.8537e-05],
        [1.8597e-05, 8.7619e-06],
        [5.9605e-07, 3.3140e-05],
        [5.9605e-07, 3.6299e-05],
        [3.7134e-05, 2.7180e-05],
        [1.1921e-07, 5.3048e-06],
        [2.6584e-05, 1.6928e-05],
        [1.1921e-07, 1.3530e-05],
        [1.6809e-05, 6.8545e-06],
        [3.6836e-05, 2.6345e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0479, 0.0749],
        [0.0488, 0.0735],
        [0.0476, 0.0753],
        [0.0477, 0.0752],
        [0.0473, 0.0758],
        [0.0477, 0.0752],
        [0.0857, 0.0418],
        [0.0918, 0.0390],
        [0.0473, 0.0757],
        [0.0473, 0.0758],
        [0.0829, 0.0433],
        [0.0476, 0.0754],
        [0.0857, 0.0418],
        [0.0469, 0.0764],
        [0.0947, 0.0379],
        [0.0833, 0.0430]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.273764
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 2.9802e-07],
        [2.2709e-05, 1.7643e-05],
        [2.1458e-06, 5.5671e-05],
        [1.6630e-05, 1.3709e-05],
        [1.1325e-06, 4.1783e-05],
        [1.4305e-05, 1.1206e-05],
        [2.3246e-06, 5.0187e-05],
        [8.9407e-07, 3.1054e-05],
        [3.3379e-05, 4.6372e-05],
        [1.8477e-06, 3.5167e-05],
        [2.0266e-06, 6.0380e-05],
        [4.6492e-06, 9.9838e-05],
        [4.5896e-05, 1.7285e-05],
        [1.5497e-06, 6.1691e-05],
        [1.2517e-05, 4.2319e-06],
        [7.5102e-06, 9.9778e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1074, 0.0330],
        [0.0772, 0.0460],
        [0.0456, 0.0777],
        [0.0761, 0.0466],
        [0.0451, 0.0786],
        [0.0770, 0.0461],
        [0.0460, 0.0772],
        [0.0452, 0.0785],
        [0.0668, 0.0531],
        [0.0462, 0.0768],
        [0.0454, 0.0781],
        [0.0460, 0.0772],
        [0.0909, 0.0390],
        [0.0451, 0.0787],
        [0.0928, 0.0382],
        [0.0472, 0.0752]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.296022
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1458e-06, 5.6088e-05],
        [1.7881e-07, 1.9133e-05],
        [4.1723e-07, 5.3644e-06],
        [8.2850e-06, 2.6822e-06],
        [2.9206e-06, 6.9737e-05],
        [2.4855e-05, 1.8775e-05],
        [1.4305e-06, 4.4346e-05],
        [4.1723e-07, 3.9935e-05],
        [4.1246e-05, 5.0545e-05],
        [2.1875e-05, 5.6028e-06],
        [1.7881e-06, 4.1008e-05],
        [2.0862e-06, 7.1764e-05],
        [7.8082e-06, 4.1127e-06],
        [2.1756e-05, 1.2100e-05],
        [1.1921e-06, 3.7849e-05],
        [2.4438e-06, 5.8174e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0475, 0.0751],
        [0.0462, 0.0772],
        [0.0492, 0.0725],
        [0.0974, 0.0366],
        [0.0476, 0.0748],
        [0.0809, 0.0441],
        [0.0472, 0.0755],
        [0.0462, 0.0771],
        [0.0717, 0.0497],
        [0.1014, 0.0351],
        [0.0477, 0.0747],
        [0.0471, 0.0757],
        [0.0881, 0.0405],
        [0.0870, 0.0410],
        [0.0472, 0.0756],
        [0.0476, 0.0748]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.518410
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7088e-05, 2.5809e-05],
        [2.8491e-05, 3.7730e-05],
        [1.4305e-05, 7.5698e-06],
        [4.1127e-06, 8.2314e-05],
        [7.1526e-07, 2.4915e-05],
        [1.3769e-05, 4.2319e-06],
        [1.5497e-06, 2.7895e-05],
        [1.6689e-06, 5.3227e-05],
        [1.3888e-05, 1.2755e-05],
        [2.6584e-05, 1.8418e-05],
        [3.1650e-05, 6.6996e-05],
        [1.7226e-05, 1.6451e-05],
        [9.5367e-07, 6.7294e-05],
        [1.9848e-05, 2.7955e-05],
        [3.8147e-06, 1.6689e-06],
        [1.9670e-06, 5.6684e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0802, 0.0452],
        [0.0647, 0.0561],
        [0.0809, 0.0449],
        [0.0441, 0.0823],
        [0.0432, 0.0839],
        [0.0904, 0.0402],
        [0.0443, 0.0819],
        [0.0433, 0.0837],
        [0.0708, 0.0512],
        [0.0759, 0.0478],
        [0.0580, 0.0626],
        [0.0701, 0.0517],
        [0.0426, 0.0851],
        [0.0637, 0.0570],
        [0.0843, 0.0430],
        [0.0435, 0.0834]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.431174
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 3.4273e-05],
        [5.3644e-07, 1.3530e-05],
        [3.0458e-05, 1.2696e-05],
        [1.9729e-05, 8.1658e-06],
        [1.1265e-05, 8.2254e-06],
        [4.6611e-05, 1.7703e-05],
        [6.9737e-06, 9.8050e-05],
        [2.5034e-05, 1.5557e-05],
        [2.3246e-06, 4.8995e-05],
        [2.6822e-06, 6.3717e-05],
        [8.9407e-07, 3.7670e-05],
        [3.6359e-06, 5.5611e-05],
        [1.8895e-05, 1.0848e-05],
        [3.1173e-05, 1.2398e-05],
        [3.8147e-05, 3.6120e-05],
        [2.7657e-05, 3.0398e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0423, 0.0845],
        [0.0428, 0.0836],
        [0.0834, 0.0429],
        [0.0836, 0.0428],
        [0.0734, 0.0487],
        [0.0850, 0.0421],
        [0.0440, 0.0813],
        [0.0763, 0.0469],
        [0.0431, 0.0830],
        [0.0429, 0.0834],
        [0.0422, 0.0849],
        [0.0438, 0.0817],
        [0.0777, 0.0460],
        [0.0842, 0.0425],
        [0.0688, 0.0520],
        [0.0663, 0.0539]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.400930
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.9802e-05, 1.6093e-05],
        [3.5763e-07, 3.4034e-05],
        [2.0742e-05, 8.7023e-06],
        [1.1444e-05, 6.6996e-05],
        [3.1590e-06, 4.1723e-07],
        [1.2875e-05, 6.7949e-06],
        [1.9193e-05, 8.4043e-06],
        [2.0266e-05, 1.7107e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1351, 0.1070],
        [0.0713, 0.2026],
        [0.1427, 0.1012],
        [0.0816, 0.1770],
        [0.1707, 0.0846],
        [0.1358, 0.1064],
        [0.1414, 0.1021],
        [0.1214, 0.1190]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.204365
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 0 and batchsize 16: 0:00:04.540959
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06],
        [6.4969e-06, 6.6161e-06]], device='cuda:0') torch.Size([95, 2])
answers_probs just softmax dim 0: tensor([[0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105]], device='cuda:0')
tensor([[0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105],
        [0.0105, 0.0105]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1875e-05, 7.9274e-06],
        [4.7684e-07, 3.2783e-05],
        [2.3425e-05, 1.0550e-05],
        [1.5616e-05, 6.3181e-06],
        [3.1590e-06, 7.7486e-07],
        [1.0729e-06, 3.9697e-05],
        [3.3021e-05, 2.0504e-05],
        [1.6510e-05, 8.0466e-06],
        [1.7285e-06, 3.9041e-05],
        [5.9605e-07, 2.0623e-05],
        [4.7684e-07, 1.9073e-05],
        [1.5795e-05, 5.7817e-06],
        [1.6689e-06, 4.1842e-05],
        [9.3579e-06, 7.9453e-05],
        [8.9407e-07, 2.4498e-05],
        [1.6570e-05, 6.9737e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0848, 0.0412],
        [0.0413, 0.0847],
        [0.0811, 0.0431],
        [0.0829, 0.0422],
        [0.0908, 0.0385],
        [0.0418, 0.0837],
        [0.0754, 0.0464],
        [0.0797, 0.0439],
        [0.0424, 0.0823],
        [0.0418, 0.0835],
        [0.0417, 0.0838],
        [0.0846, 0.0413],
        [0.0423, 0.0827],
        [0.0452, 0.0773],
        [0.0421, 0.0829],
        [0.0822, 0.0425]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.388460
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 2.4438e-05],
        [9.4771e-06, 6.8545e-06],
        [1.6689e-05, 3.8743e-06],
        [1.1921e-07, 1.6212e-05],
        [3.5763e-07, 5.1856e-06],
        [7.7486e-07, 3.2008e-05],
        [2.3484e-05, 1.0729e-05],
        [1.6749e-05, 9.2387e-06],
        [1.0848e-05, 5.6028e-06],
        [4.1723e-07, 2.6166e-05],
        [1.4901e-06, 3.9577e-05],
        [2.1040e-05, 2.3305e-05],
        [1.7881e-07, 1.5616e-05],
        [1.2577e-05, 5.5432e-06],
        [6.5565e-07, 5.4240e-05],
        [1.4424e-05, 3.9339e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0816],
        [0.0749, 0.0469],
        [0.0943, 0.0372],
        [0.0422, 0.0832],
        [0.0447, 0.0786],
        [0.0429, 0.0818],
        [0.0832, 0.0422],
        [0.0798, 0.0440],
        [0.0810, 0.0433],
        [0.0426, 0.0825],
        [0.0434, 0.0808],
        [0.0673, 0.0521],
        [0.0424, 0.0829],
        [0.0839, 0.0419],
        [0.0424, 0.0828],
        [0.0919, 0.0382]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.346136
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.8418e-05],
        [2.5928e-05, 3.8326e-05],
        [1.7881e-06, 4.2260e-05],
        [8.9407e-06, 5.2452e-06],
        [6.2585e-06, 7.6592e-05],
        [3.3379e-06, 5.7101e-05],
        [1.6510e-05, 8.7619e-06],
        [1.2517e-06, 2.9743e-05],
        [2.1398e-05, 1.2517e-05],
        [7.2122e-06, 2.4438e-06],
        [2.5094e-05, 5.4836e-05],
        [1.1921e-07, 1.1802e-05],
        [1.5736e-05, 4.5300e-06],
        [1.0729e-05, 1.0371e-05],
        [3.3379e-06, 1.2517e-06],
        [1.2934e-05, 1.0252e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0413, 0.0870],
        [0.0610, 0.0589],
        [0.0424, 0.0846],
        [0.0765, 0.0469],
        [0.0439, 0.0817],
        [0.0430, 0.0834],
        [0.0783, 0.0459],
        [0.0424, 0.0846],
        [0.0766, 0.0469],
        [0.0860, 0.0418],
        [0.0558, 0.0644],
        [0.0411, 0.0873],
        [0.0885, 0.0405],
        [0.0677, 0.0530],
        [0.0843, 0.0426],
        [0.0712, 0.0505]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.432742
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.6560e-06, 5.4836e-06],
        [1.7881e-07, 1.3590e-05],
        [1.8477e-06, 4.8518e-05],
        [1.0133e-06, 3.3736e-05],
        [8.8811e-06, 2.6822e-06],
        [1.2457e-05, 1.1146e-05],
        [3.7551e-06, 5.9605e-07],
        [1.5497e-06, 4.9055e-05],
        [1.9073e-05, 1.1623e-05],
        [2.2650e-06, 3.7730e-05],
        [1.3709e-06, 4.6611e-05],
        [1.5199e-05, 8.1062e-06],
        [4.7684e-07, 1.9729e-05],
        [1.2636e-05, 7.4506e-06],
        [2.9981e-05, 1.0192e-05],
        [5.3644e-07, 2.7120e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0784, 0.0446],
        [0.0420, 0.0834],
        [0.0430, 0.0814],
        [0.0427, 0.0821],
        [0.0894, 0.0392],
        [0.0703, 0.0498],
        [0.0983, 0.0356],
        [0.0427, 0.0819],
        [0.0772, 0.0454],
        [0.0439, 0.0798],
        [0.0427, 0.0821],
        [0.0796, 0.0440],
        [0.0424, 0.0825],
        [0.0778, 0.0450],
        [0.0874, 0.0401],
        [0.0423, 0.0829]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.406239
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 5.1081e-05],
        [1.4603e-05, 1.9014e-05],
        [9.4175e-06, 3.1590e-06],
        [6.5565e-07, 2.7895e-05],
        [2.7418e-06, 4.3333e-05],
        [1.5497e-06, 4.8578e-05],
        [2.2411e-05, 8.2850e-06],
        [1.2279e-05, 6.2585e-06],
        [8.9407e-07, 3.4392e-05],
        [2.3842e-07, 1.7762e-05],
        [2.3842e-07, 1.4365e-05],
        [4.0531e-06, 5.0843e-05],
        [2.8014e-05, 2.6941e-05],
        [3.7551e-06, 6.5565e-07],
        [7.1526e-07, 3.2723e-05],
        [1.5259e-05, 1.1861e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0450, 0.0787],
        [0.0679, 0.0521],
        [0.0930, 0.0380],
        [0.0450, 0.0786],
        [0.0467, 0.0758],
        [0.0454, 0.0780],
        [0.0913, 0.0387],
        [0.0853, 0.0415],
        [0.0451, 0.0784],
        [0.0446, 0.0794],
        [0.0447, 0.0791],
        [0.0474, 0.0747],
        [0.0733, 0.0483],
        [0.1031, 0.0343],
        [0.0450, 0.0787],
        [0.0772, 0.0458]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.386797
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4424e-05, 1.3292e-05],
        [1.9670e-06, 5.2273e-05],
        [1.6272e-05, 6.0797e-06],
        [2.8610e-06, 2.9802e-07],
        [4.1127e-06, 6.1274e-05],
        [4.1723e-07, 1.9848e-05],
        [8.7619e-06, 4.5419e-05],
        [1.2875e-05, 6.5565e-06],
        [2.9027e-05, 2.4617e-05],
        [1.4424e-05, 1.4663e-05],
        [4.3511e-06, 6.5267e-05],
        [2.4259e-05, 1.3709e-05],
        [3.0398e-06, 6.2943e-05],
        [1.7881e-07, 1.6212e-05],
        [2.3901e-05, 5.4777e-05],
        [3.4571e-06, 6.1393e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0724, 0.0494],
        [0.0446, 0.0802],
        [0.0891, 0.0402],
        [0.1064, 0.0336],
        [0.0458, 0.0781],
        [0.0439, 0.0815],
        [0.0506, 0.0708],
        [0.0834, 0.0429],
        [0.0739, 0.0484],
        [0.0706, 0.0507],
        [0.0458, 0.0782],
        [0.0815, 0.0439],
        [0.0450, 0.0795],
        [0.0435, 0.0823],
        [0.0583, 0.0614],
        [0.0454, 0.0789]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.322014
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-07, 3.2604e-05],
        [1.7285e-06, 4.8339e-05],
        [2.8074e-05, 1.9014e-05],
        [2.1994e-05, 2.7597e-05],
        [1.7762e-05, 9.2387e-06],
        [1.5914e-05, 8.7023e-06],
        [3.8743e-06, 4.8399e-05],
        [7.0930e-06, 3.4571e-06],
        [2.9802e-07, 2.1160e-05],
        [1.2875e-05, 6.3777e-06],
        [1.7285e-06, 4.4703e-05],
        [2.8729e-05, 9.1791e-06],
        [4.1723e-07, 2.6047e-05],
        [5.9605e-07, 1.8358e-05],
        [1.7285e-06, 1.7881e-07],
        [3.6716e-05, 1.6928e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0405, 0.0868],
        [0.0415, 0.0846],
        [0.0728, 0.0482],
        [0.0625, 0.0562],
        [0.0774, 0.0453],
        [0.0766, 0.0459],
        [0.0432, 0.0813],
        [0.0786, 0.0447],
        [0.0407, 0.0863],
        [0.0783, 0.0449],
        [0.0416, 0.0843],
        [0.0856, 0.0410],
        [0.0407, 0.0862],
        [0.0414, 0.0848],
        [0.0993, 0.0354],
        [0.0795, 0.0442]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.348614
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8610e-05, 1.1742e-05],
        [1.9073e-06, 3.9816e-05],
        [1.1921e-06, 5.0366e-05],
        [1.2517e-06, 3.4034e-05],
        [7.7486e-07, 3.1471e-05],
        [2.9802e-06, 3.8385e-05],
        [2.5630e-06, 2.3842e-07],
        [8.9407e-07, 4.1187e-05],
        [1.6928e-05, 1.0431e-05],
        [1.1921e-07, 1.2755e-05],
        [2.3425e-05, 1.2040e-05],
        [1.2517e-06, 2.4140e-05],
        [8.7023e-06, 2.9802e-06],
        [1.3709e-05, 8.1658e-06],
        [7.2122e-06, 5.2571e-05],
        [7.1526e-07, 2.6464e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0894, 0.0392],
        [0.0460, 0.0762],
        [0.0450, 0.0779],
        [0.0456, 0.0769],
        [0.0450, 0.0778],
        [0.0473, 0.0742],
        [0.1098, 0.0319],
        [0.0449, 0.0780],
        [0.0816, 0.0429],
        [0.0444, 0.0790],
        [0.0851, 0.0412],
        [0.0462, 0.0759],
        [0.0926, 0.0379],
        [0.0823, 0.0426],
        [0.0496, 0.0707],
        [0.0451, 0.0777]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.407797
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0312e-05, 7.2718e-06],
        [1.7107e-05, 8.2254e-06],
        [2.1458e-06, 3.7551e-05],
        [6.5565e-07, 3.1352e-05],
        [5.3644e-07, 3.1471e-05],
        [2.1398e-05, 4.8161e-05],
        [1.3113e-06, 2.7001e-05],
        [2.8253e-05, 3.6895e-05],
        [7.7486e-07, 2.9862e-05],
        [2.2590e-05, 1.4961e-05],
        [3.5763e-07, 1.9193e-05],
        [2.9206e-06, 3.5763e-07],
        [2.3842e-07, 8.1658e-06],
        [2.1815e-05, 1.0788e-05],
        [1.8597e-05, 6.7353e-06],
        [1.6570e-05, 1.3411e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0752, 0.0473],
        [0.0821, 0.0433],
        [0.0441, 0.0805],
        [0.0427, 0.0832],
        [0.0425, 0.0836],
        [0.0569, 0.0625],
        [0.0438, 0.0811],
        [0.0645, 0.0551],
        [0.0429, 0.0829],
        [0.0763, 0.0466],
        [0.0426, 0.0834],
        [0.1019, 0.0349],
        [0.0430, 0.0826],
        [0.0816, 0.0435],
        [0.0871, 0.0408],
        [0.0727, 0.0489]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.379820
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2187e-06, 3.5763e-07],
        [1.3053e-05, 1.5914e-05],
        [1.2696e-05, 7.2122e-06],
        [2.3127e-05, 1.6391e-05],
        [2.8253e-05, 1.3232e-05],
        [1.7285e-05, 7.8678e-06],
        [9.8944e-06, 5.9605e-06],
        [5.6624e-06, 7.9453e-05],
        [2.9802e-07, 2.2173e-05],
        [2.4438e-06, 5.4300e-05],
        [2.9802e-07, 2.8670e-05],
        [1.0371e-05, 5.2452e-06],
        [7.7486e-07, 2.8610e-05],
        [1.0788e-05, 3.5167e-06],
        [3.5167e-05, 1.8954e-05],
        [1.5676e-05, 5.7220e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0919, 0.0387],
        [0.0586, 0.0607],
        [0.0707, 0.0503],
        [0.0671, 0.0530],
        [0.0738, 0.0482],
        [0.0743, 0.0479],
        [0.0697, 0.0510],
        [0.0399, 0.0891],
        [0.0378, 0.0939],
        [0.0390, 0.0912],
        [0.0377, 0.0942],
        [0.0726, 0.0490],
        [0.0383, 0.0927],
        [0.0794, 0.0448],
        [0.0715, 0.0497],
        [0.0777, 0.0458]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.342765
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 2.9802e-07],
        [5.3644e-07, 3.0816e-05],
        [6.5565e-07, 2.1219e-05],
        [1.0133e-06, 3.7134e-05],
        [1.8597e-05, 1.3411e-05],
        [1.4305e-05, 5.5432e-06],
        [1.7285e-06, 3.9399e-05],
        [2.3127e-05, 1.9789e-05],
        [2.7716e-05, 1.7047e-05],
        [1.8358e-05, 1.1504e-05],
        [1.3590e-05, 5.1856e-06],
        [9.1195e-06, 6.5744e-05],
        [1.4842e-05, 5.1856e-06],
        [1.4901e-06, 3.3915e-05],
        [1.7464e-05, 1.2040e-05],
        [1.9848e-05, 1.4484e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0949, 0.0375],
        [0.0395, 0.0900],
        [0.0400, 0.0888],
        [0.0399, 0.0891],
        [0.0694, 0.0512],
        [0.0798, 0.0445],
        [0.0405, 0.0878],
        [0.0666, 0.0534],
        [0.0721, 0.0493],
        [0.0718, 0.0495],
        [0.0801, 0.0444],
        [0.0439, 0.0810],
        [0.0815, 0.0436],
        [0.0405, 0.0878],
        [0.0702, 0.0506],
        [0.0692, 0.0514]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.385429
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4974e-05, 1.1325e-05],
        [1.2994e-05, 5.8413e-06],
        [3.2783e-06, 7.6175e-05],
        [7.1526e-07, 2.6345e-05],
        [1.0133e-06, 2.9027e-05],
        [2.5928e-05, 1.4544e-05],
        [2.2054e-05, 1.1086e-05],
        [3.5763e-07, 5.2452e-06],
        [2.0266e-06, 3.9339e-05],
        [2.0862e-05, 1.3173e-05],
        [2.1040e-05, 8.8215e-06],
        [8.0466e-06, 5.0247e-05],
        [1.1325e-06, 3.7193e-05],
        [3.6359e-06, 5.0008e-05],
        [1.2398e-05, 1.0014e-05],
        [1.6093e-06, 5.6386e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0868, 0.0412],
        [0.0869, 0.0411],
        [0.0454, 0.0787],
        [0.0448, 0.0799],
        [0.0451, 0.0793],
        [0.0828, 0.0432],
        [0.0848, 0.0421],
        [0.0465, 0.0769],
        [0.0458, 0.0781],
        [0.0805, 0.0444],
        [0.0882, 0.0405],
        [0.0501, 0.0714],
        [0.0449, 0.0796],
        [0.0467, 0.0766],
        [0.0758, 0.0472],
        [0.0448, 0.0797]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.515418
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.2875e-05, 5.6624e-06],
        [2.6226e-06, 5.3644e-07],
        [4.4107e-06, 5.6446e-05],
        [6.5565e-07, 3.2425e-05],
        [1.4901e-06, 4.3631e-05],
        [2.3246e-06, 5.7876e-05],
        [4.0531e-06, 5.5075e-05],
        [2.0862e-06, 5.3704e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1894, 0.0748],
        [0.2169, 0.0653],
        [0.1017, 0.1394],
        [0.0965, 0.1469],
        [0.0977, 0.1450],
        [0.0983, 0.1442],
        [0.1013, 0.1399],
        [0.0982, 0.1444]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.174815
acc:  0.955
Time taken to execute the en SA task with prompt type active, variation 1 and batchsize 16: 0:00:04.854010
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05]], device='cuda:0') torch.Size([100, 2])
answers_probs just softmax dim 0: tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2888e-05, 1.5974e-05],
        [3.8147e-06, 1.4305e-06],
        [1.9729e-05, 1.9908e-05],
        [1.2279e-05, 6.7353e-06],
        [1.3530e-05, 1.2755e-05],
        [2.6345e-05, 1.2755e-05],
        [1.7285e-06, 4.7624e-05],
        [1.0133e-06, 3.8803e-05],
        [7.1526e-07, 3.6240e-05],
        [2.6226e-06, 6.5506e-05],
        [1.1921e-07, 1.8179e-05],
        [2.9802e-07, 2.7597e-05],
        [8.9407e-07, 4.0174e-05],
        [1.0133e-05, 7.4804e-05],
        [3.1531e-05, 2.2888e-05],
        [2.6226e-06, 4.9591e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0812, 0.0443],
        [0.0933, 0.0386],
        [0.0742, 0.0485],
        [0.0860, 0.0419],
        [0.0754, 0.0477],
        [0.0884, 0.0407],
        [0.0467, 0.0771],
        [0.0462, 0.0779],
        [0.0460, 0.0783],
        [0.0469, 0.0768],
        [0.0454, 0.0793],
        [0.0456, 0.0790],
        [0.0461, 0.0781],
        [0.0508, 0.0709],
        [0.0805, 0.0447],
        [0.0474, 0.0760]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.459813
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 4.5538e-05],
        [3.0994e-06, 6.2823e-05],
        [9.5367e-07, 3.4451e-05],
        [1.3530e-05, 6.7949e-06],
        [2.6226e-06, 7.4089e-05],
        [4.1127e-06, 4.7684e-07],
        [3.3438e-05, 1.5438e-05],
        [1.9312e-05, 2.0206e-05],
        [1.9729e-05, 1.6510e-05],
        [1.1325e-06, 2.7835e-05],
        [3.1292e-05, 3.5167e-05],
        [1.5795e-05, 9.2983e-06],
        [5.9605e-08, 1.6332e-05],
        [1.2875e-05, 2.5272e-05],
        [6.5565e-07, 4.2260e-05],
        [2.4676e-05, 6.3419e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0442, 0.0810],
        [0.0453, 0.0791],
        [0.0444, 0.0807],
        [0.0841, 0.0426],
        [0.0447, 0.0801],
        [0.1059, 0.0338],
        [0.0857, 0.0418],
        [0.0705, 0.0509],
        [0.0745, 0.0481],
        [0.0450, 0.0797],
        [0.0692, 0.0518],
        [0.0811, 0.0442],
        [0.0434, 0.0826],
        [0.0606, 0.0592],
        [0.0439, 0.0817],
        [0.0572, 0.0627]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.344665
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8372e-05, 1.7464e-05],
        [2.8133e-05, 2.4617e-05],
        [1.4305e-06, 5.4657e-05],
        [8.3447e-07, 4.6909e-05],
        [9.2387e-06, 7.5400e-05],
        [4.7684e-07, 3.0279e-05],
        [4.7684e-07, 3.5107e-05],
        [1.6153e-05, 6.5565e-06],
        [1.4186e-05, 5.9605e-06],
        [1.9073e-05, 7.9274e-06],
        [1.6332e-05, 7.9870e-06],
        [2.9802e-07, 8.2850e-06],
        [1.0729e-06, 4.8101e-05],
        [5.5432e-06, 9.2208e-05],
        [2.3484e-05, 1.9789e-05],
        [1.2517e-06, 5.4300e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0820, 0.0435],
        [0.0753, 0.0474],
        [0.0453, 0.0787],
        [0.0449, 0.0793],
        [0.0492, 0.0724],
        [0.0448, 0.0795],
        [0.0447, 0.0796],
        [0.0899, 0.0396],
        [0.0893, 0.0399],
        [0.0895, 0.0398],
        [0.0864, 0.0412],
        [0.0457, 0.0780],
        [0.0451, 0.0790],
        [0.0467, 0.0763],
        [0.0760, 0.0469],
        [0.0452, 0.0789]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.345082
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 6.5148e-05],
        [2.2173e-05, 1.9729e-05],
        [7.1526e-07, 4.9651e-05],
        [2.3842e-07, 3.2842e-05],
        [3.5763e-07, 2.7061e-05],
        [1.1921e-07, 1.5140e-05],
        [2.1696e-05, 2.2769e-05],
        [1.5974e-05, 9.7752e-06],
        [2.3842e-06, 6.5625e-05],
        [4.7684e-07, 3.6120e-05],
        [2.2590e-05, 1.5557e-05],
        [3.0220e-05, 1.4365e-05],
        [1.1027e-05, 6.0439e-05],
        [2.5034e-06, 4.1723e-07],
        [1.6570e-05, 1.0371e-05],
        [2.7955e-05, 1.7643e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0440, 0.0810],
        [0.0729, 0.0489],
        [0.0435, 0.0818],
        [0.0432, 0.0824],
        [0.0435, 0.0819],
        [0.0433, 0.0823],
        [0.0699, 0.0509],
        [0.0798, 0.0446],
        [0.0445, 0.0801],
        [0.0435, 0.0819],
        [0.0776, 0.0459],
        [0.0845, 0.0421],
        [0.0501, 0.0711],
        [0.1011, 0.0352],
        [0.0794, 0.0449],
        [0.0792, 0.0449]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.321791
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.9472e-06, 8.6725e-05],
        [1.3530e-05, 6.3777e-06],
        [1.6153e-05, 1.4842e-05],
        [2.8610e-05, 5.2571e-05],
        [9.0599e-06, 3.1590e-06],
        [1.7405e-05, 1.4007e-05],
        [8.3447e-07, 4.0114e-05],
        [2.5630e-06, 5.3883e-05],
        [4.1723e-07, 2.3127e-05],
        [5.3644e-07, 1.6928e-05],
        [1.2577e-05, 5.4836e-06],
        [3.3975e-06, 9.7573e-05],
        [1.3113e-06, 5.4538e-05],
        [3.3855e-05, 1.3888e-05],
        [1.2517e-06, 4.5180e-05],
        [9.5367e-07, 3.7432e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0475, 0.0754],
        [0.0887, 0.0403],
        [0.0757, 0.0472],
        [0.0640, 0.0559],
        [0.0944, 0.0379],
        [0.0783, 0.0457],
        [0.0459, 0.0779],
        [0.0471, 0.0760],
        [0.0458, 0.0781],
        [0.0464, 0.0771],
        [0.0902, 0.0396],
        [0.0465, 0.0769],
        [0.0460, 0.0777],
        [0.0914, 0.0391],
        [0.0462, 0.0774],
        [0.0461, 0.0776]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.406832
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 4.9770e-05],
        [9.5367e-07, 3.8981e-05],
        [6.5565e-07, 3.3200e-05],
        [1.7285e-06, 6.2346e-05],
        [1.5140e-05, 8.5831e-06],
        [1.3888e-05, 4.8876e-06],
        [1.6153e-05, 9.4175e-06],
        [2.1279e-05, 4.9889e-05],
        [1.2934e-05, 6.0797e-06],
        [3.9339e-06, 6.4373e-05],
        [1.1325e-06, 3.7491e-05],
        [1.6093e-06, 3.5822e-05],
        [5.9605e-07, 2.9862e-05],
        [3.5763e-07, 6.6757e-06],
        [8.8215e-06, 9.0599e-05],
        [2.6762e-05, 5.4538e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0746],
        [0.0488, 0.0743],
        [0.0486, 0.0747],
        [0.0490, 0.0741],
        [0.0903, 0.0402],
        [0.0999, 0.0363],
        [0.0897, 0.0405],
        [0.0643, 0.0565],
        [0.0941, 0.0386],
        [0.0505, 0.0719],
        [0.0491, 0.0739],
        [0.0498, 0.0729],
        [0.0486, 0.0747],
        [0.0502, 0.0724],
        [0.0521, 0.0697],
        [0.0663, 0.0548]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.520021
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6226e-06, 2.9802e-07],
        [4.7684e-07, 2.5392e-05],
        [1.8179e-05, 1.4842e-05],
        [1.9670e-06, 5.0962e-05],
        [1.1921e-07, 1.3709e-05],
        [1.6093e-06, 6.0081e-05],
        [1.1623e-05, 1.1861e-05],
        [2.0266e-06, 6.5625e-05],
        [1.7881e-06, 4.4286e-05],
        [2.1696e-05, 1.5259e-05],
        [1.7881e-06, 3.2425e-05],
        [1.2577e-05, 1.5914e-05],
        [3.5763e-07, 2.8670e-05],
        [2.3842e-07, 1.0431e-05],
        [3.4094e-05, 2.6166e-05],
        [1.3947e-05, 1.0073e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1117, 0.0321],
        [0.0463, 0.0774],
        [0.0789, 0.0455],
        [0.0472, 0.0760],
        [0.0459, 0.0782],
        [0.0467, 0.0768],
        [0.0746, 0.0481],
        [0.0469, 0.0765],
        [0.0473, 0.0759],
        [0.0818, 0.0438],
        [0.0479, 0.0749],
        [0.0707, 0.0507],
        [0.0461, 0.0779],
        [0.0465, 0.0771],
        [0.0801, 0.0448],
        [0.0813, 0.0441]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.383921
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.6240e-05],
        [2.0981e-05, 1.9252e-05],
        [2.9683e-05, 3.0398e-05],
        [2.0266e-06, 4.2200e-05],
        [7.0930e-06, 4.3511e-06],
        [1.8358e-05, 8.3447e-06],
        [5.9605e-07, 2.5451e-05],
        [2.0027e-05, 8.0466e-06],
        [3.3379e-06, 6.2406e-05],
        [3.3975e-06, 6.7174e-05],
        [1.4484e-05, 8.4043e-06],
        [5.5432e-06, 7.7486e-07],
        [2.8610e-06, 5.2392e-05],
        [1.2517e-06, 4.1962e-05],
        [5.3644e-07, 3.3081e-05],
        [8.9407e-06, 5.8413e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0431, 0.0822],
        [0.0713, 0.0497],
        [0.0694, 0.0511],
        [0.0443, 0.0799],
        [0.0787, 0.0450],
        [0.0842, 0.0421],
        [0.0433, 0.0818],
        [0.0864, 0.0410],
        [0.0445, 0.0795],
        [0.0444, 0.0797],
        [0.0797, 0.0444],
        [0.1018, 0.0348],
        [0.0446, 0.0794],
        [0.0436, 0.0813],
        [0.0430, 0.0823],
        [0.0775, 0.0457]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.344081
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6822e-05, 2.1577e-05],
        [3.9339e-06, 9.1195e-05],
        [1.6272e-05, 1.2100e-05],
        [3.2425e-05, 1.9193e-05],
        [2.9325e-05, 4.2677e-05],
        [1.4305e-06, 2.0623e-05],
        [1.8656e-05, 5.8413e-06],
        [1.7285e-05, 1.0669e-05],
        [3.5107e-05, 2.9564e-05],
        [1.3769e-05, 1.5676e-05],
        [2.0921e-05, 1.4007e-05],
        [2.9862e-05, 2.0862e-05],
        [3.5763e-07, 3.0816e-05],
        [1.7881e-07, 2.1100e-05],
        [1.0431e-05, 4.1127e-06],
        [2.1994e-05, 1.1146e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0671, 0.0545],
        [0.0402, 0.0911],
        [0.0684, 0.0535],
        [0.0722, 0.0506],
        [0.0579, 0.0632],
        [0.0411, 0.0890],
        [0.0825, 0.0443],
        [0.0715, 0.0511],
        [0.0663, 0.0552],
        [0.0615, 0.0595],
        [0.0701, 0.0521],
        [0.0694, 0.0527],
        [0.0390, 0.0938],
        [0.0389, 0.0941],
        [0.0790, 0.0463],
        [0.0748, 0.0489]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.341233
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5795e-05, 1.0431e-05],
        [1.7881e-07, 1.6451e-05],
        [6.5565e-07, 2.5332e-05],
        [5.3644e-07, 3.8803e-05],
        [4.7088e-06, 7.7486e-07],
        [2.2769e-05, 1.4126e-05],
        [1.0133e-06, 4.5240e-05],
        [1.8537e-05, 1.0252e-05],
        [2.3961e-05, 1.0192e-05],
        [1.1802e-05, 1.1086e-05],
        [1.1325e-06, 8.9407e-05],
        [2.8014e-06, 6.7651e-05],
        [4.1723e-07, 2.5570e-05],
        [2.9206e-06, 4.9710e-05],
        [1.3530e-05, 1.7345e-05],
        [3.0994e-06, 7.5936e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0814, 0.0437],
        [0.0451, 0.0789],
        [0.0457, 0.0777],
        [0.0452, 0.0786],
        [0.1052, 0.0338],
        [0.0827, 0.0430],
        [0.0456, 0.0780],
        [0.0849, 0.0419],
        [0.0899, 0.0395],
        [0.0747, 0.0476],
        [0.0452, 0.0787],
        [0.0464, 0.0766],
        [0.0453, 0.0785],
        [0.0471, 0.0754],
        [0.0691, 0.0514],
        [0.0464, 0.0767]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.410074
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.7313e-05, 1.9670e-05],
        [7.1526e-07, 3.2425e-05],
        [1.6987e-05, 1.0788e-05],
        [2.0266e-06, 4.6670e-05],
        [8.9407e-07, 3.2008e-05],
        [1.0371e-05, 9.5963e-06],
        [1.7881e-06, 3.9816e-05],
        [2.3901e-05, 1.2219e-05],
        [1.2457e-05, 7.4506e-06],
        [3.3319e-05, 2.6345e-05],
        [2.3842e-07, 1.6451e-05],
        [3.0994e-06, 2.3842e-07],
        [3.5763e-07, 4.4107e-05],
        [9.4771e-06, 6.4969e-06],
        [1.4842e-05, 6.4373e-06],
        [1.0192e-05, 6.6161e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0759, 0.0467],
        [0.0403, 0.0880],
        [0.0727, 0.0488],
        [0.0411, 0.0863],
        [0.0405, 0.0875],
        [0.0663, 0.0535],
        [0.0412, 0.0862],
        [0.0765, 0.0464],
        [0.0738, 0.0481],
        [0.0690, 0.0515],
        [0.0400, 0.0887],
        [0.0999, 0.0355],
        [0.0398, 0.0892],
        [0.0714, 0.0497],
        [0.0792, 0.0448],
        [0.0723, 0.0491]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.427795
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1338e-05, 2.8491e-05],
        [2.3842e-06, 5.1260e-05],
        [3.2604e-05, 4.6670e-05],
        [1.7941e-05, 6.7949e-06],
        [1.0073e-05, 4.5300e-06],
        [1.1981e-05, 6.3777e-06],
        [5.3644e-07, 2.4319e-05],
        [7.9274e-06, 6.2764e-05],
        [1.9372e-05, 2.0325e-05],
        [1.7226e-05, 1.7762e-05],
        [1.9670e-06, 7.0274e-05],
        [2.9802e-06, 6.8069e-05],
        [2.4140e-05, 1.3471e-05],
        [4.6492e-06, 7.7486e-07],
        [1.2159e-05, 3.9935e-06],
        [1.6034e-05, 7.0333e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0592, 0.0607],
        [0.0403, 0.0892],
        [0.0582, 0.0618],
        [0.0797, 0.0451],
        [0.0769, 0.0468],
        [0.0741, 0.0485],
        [0.0394, 0.0912],
        [0.0431, 0.0833],
        [0.0628, 0.0572],
        [0.0631, 0.0570],
        [0.0396, 0.0907],
        [0.0402, 0.0894],
        [0.0733, 0.0491],
        [0.0909, 0.0396],
        [0.0819, 0.0439],
        [0.0773, 0.0465]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.393158
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.9802e-07, 2.5451e-05],
        [8.9407e-07, 4.1068e-05],
        [1.7881e-07, 1.8179e-05],
        [1.2577e-05, 5.6028e-06],
        [1.3113e-06, 6.0618e-05],
        [2.1279e-05, 1.5736e-05],
        [2.6822e-06, 4.1723e-07],
        [1.6749e-05, 1.0252e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0838, 0.1659],
        [0.0846, 0.1643],
        [0.0836, 0.1662],
        [0.1654, 0.0840],
        [0.0846, 0.1643],
        [0.1472, 0.0944],
        [0.1968, 0.0706],
        [0.1540, 0.0902]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.184927
acc:  0.975
Time taken to execute the en SA task with prompt type active, variation 2 and batchsize 16: 0:00:04.899478
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06],
        [8.6427e-06, 9.2387e-06]], device='cuda:0') torch.Size([107, 2])
answers_probs just softmax dim 0: tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 2.5332e-05],
        [3.4571e-06, 1.4305e-06],
        [5.3644e-07, 2.3901e-05],
        [2.5094e-05, 8.6427e-06],
        [5.2452e-06, 6.5506e-05],
        [7.1526e-07, 2.6882e-05],
        [3.4571e-06, 5.3585e-05],
        [1.3173e-05, 4.4107e-06],
        [3.9995e-05, 2.5630e-05],
        [2.1636e-05, 1.0550e-05],
        [7.1526e-07, 4.3690e-05],
        [6.3777e-06, 9.3400e-05],
        [2.9206e-06, 7.2539e-05],
        [9.5367e-07, 4.2915e-05],
        [1.2636e-05, 9.5367e-06],
        [1.7881e-06, 6.3479e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0464, 0.0765],
        [0.0914, 0.0388],
        [0.0460, 0.0771],
        [0.0948, 0.0375],
        [0.0485, 0.0732],
        [0.0462, 0.0768],
        [0.0479, 0.0742],
        [0.0953, 0.0373],
        [0.0828, 0.0428],
        [0.0882, 0.0402],
        [0.0458, 0.0775],
        [0.0480, 0.0739],
        [0.0468, 0.0758],
        [0.0460, 0.0771],
        [0.0796, 0.0446],
        [0.0463, 0.0767]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.464354
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8908e-05, 2.2352e-05],
        [0.0000e+00, 2.0862e-06],
        [3.6120e-05, 1.6034e-05],
        [2.9027e-05, 1.5378e-05],
        [2.4557e-05, 7.6175e-05],
        [1.0729e-05, 8.7738e-05],
        [1.2517e-06, 5.5850e-05],
        [1.8060e-05, 1.3828e-05],
        [5.0068e-06, 9.2328e-05],
        [2.2411e-05, 1.1146e-05],
        [3.3855e-05, 1.7583e-05],
        [1.8656e-05, 2.2888e-05],
        [1.9193e-05, 1.6809e-05],
        [3.4571e-06, 5.1439e-05],
        [1.9133e-05, 1.9312e-05],
        [2.2411e-05, 1.1981e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0712, 0.0513],
        [0.0405, 0.0902],
        [0.0810, 0.0451],
        [0.0779, 0.0469],
        [0.0517, 0.0707],
        [0.0452, 0.0809],
        [0.0414, 0.0882],
        [0.0714, 0.0512],
        [0.0426, 0.0857],
        [0.0790, 0.0462],
        [0.0782, 0.0467],
        [0.0635, 0.0576],
        [0.0690, 0.0529],
        [0.0431, 0.0847],
        [0.0666, 0.0548],
        [0.0777, 0.0470]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.325484
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0398e-06, 7.3135e-05],
        [2.8014e-06, 7.1526e-07],
        [4.5300e-06, 8.5235e-05],
        [1.7643e-05, 8.0466e-06],
        [1.4424e-05, 1.0645e-04],
        [1.3113e-06, 5.8770e-05],
        [2.8908e-05, 1.1981e-05],
        [3.6180e-05, 1.3530e-05],
        [5.3108e-05, 3.2961e-05],
        [3.8743e-05, 1.8001e-05],
        [2.9802e-05, 1.9372e-05],
        [3.5763e-07, 3.2902e-05],
        [1.5497e-06, 6.0439e-05],
        [1.0133e-06, 4.0710e-05],
        [2.5570e-05, 2.9206e-05],
        [2.8849e-05, 1.7226e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0421, 0.0843],
        [0.0897, 0.0395],
        [0.0425, 0.0834],
        [0.0803, 0.0441],
        [0.0455, 0.0779],
        [0.0413, 0.0858],
        [0.0820, 0.0433],
        [0.0837, 0.0424],
        [0.0749, 0.0473],
        [0.0800, 0.0443],
        [0.0741, 0.0478],
        [0.0409, 0.0868],
        [0.0414, 0.0856],
        [0.0414, 0.0856],
        [0.0645, 0.0550],
        [0.0756, 0.0469]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.381896
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2338e-05, 6.7353e-06],
        [4.3690e-05, 1.5557e-05],
        [6.5565e-07, 2.5094e-05],
        [3.3915e-05, 2.0087e-05],
        [9.3579e-06, 4.5300e-06],
        [1.7881e-07, 1.4901e-05],
        [9.4771e-06, 6.3300e-05],
        [2.5630e-06, 2.3842e-07],
        [1.1742e-05, 3.8743e-06],
        [1.6212e-05, 1.5438e-05],
        [3.1590e-06, 7.1228e-05],
        [1.5676e-05, 7.0930e-06],
        [1.6868e-05, 1.0610e-05],
        [4.3511e-05, 1.9789e-05],
        [1.7285e-06, 6.0678e-05],
        [3.5346e-05, 1.9968e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0705, 0.0505],
        [0.0772, 0.0462],
        [0.0379, 0.0941],
        [0.0692, 0.0515],
        [0.0724, 0.0492],
        [0.0374, 0.0954],
        [0.0420, 0.0847],
        [0.0921, 0.0387],
        [0.0783, 0.0455],
        [0.0616, 0.0578],
        [0.0385, 0.0925],
        [0.0735, 0.0485],
        [0.0682, 0.0522],
        [0.0734, 0.0485],
        [0.0379, 0.0939],
        [0.0699, 0.0509]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.425589
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 3.0935e-05],
        [2.3842e-07, 2.0504e-05],
        [4.0770e-05, 2.2888e-05],
        [1.1802e-05, 7.2718e-06],
        [8.7619e-06, 2.9802e-06],
        [5.3644e-07, 1.4246e-05],
        [2.5034e-06, 4.7684e-05],
        [2.0385e-05, 8.1658e-06],
        [1.1563e-05, 4.4703e-06],
        [5.9605e-07, 3.3140e-05],
        [9.5367e-07, 4.0650e-05],
        [2.2888e-05, 1.2636e-05],
        [1.1325e-06, 4.4465e-05],
        [2.0027e-05, 9.4771e-06],
        [2.9802e-05, 1.1027e-05],
        [1.4424e-05, 9.8944e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0418, 0.0844],
        [0.0406, 0.0869],
        [0.0761, 0.0463],
        [0.0745, 0.0473],
        [0.0846, 0.0417],
        [0.0416, 0.0847],
        [0.0422, 0.0836],
        [0.0819, 0.0430],
        [0.0825, 0.0427],
        [0.0408, 0.0863],
        [0.0410, 0.0859],
        [0.0764, 0.0461],
        [0.0411, 0.0857],
        [0.0791, 0.0446],
        [0.0832, 0.0423],
        [0.0726, 0.0485]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.409379
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3411e-05, 8.4639e-06],
        [4.4048e-05, 1.3947e-05],
        [5.7220e-06, 8.2672e-05],
        [1.8775e-05, 4.6492e-06],
        [1.4305e-06, 4.2677e-05],
        [2.1458e-06, 4.8041e-05],
        [2.9206e-06, 7.3612e-05],
        [1.2517e-06, 3.0756e-05],
        [3.9935e-06, 7.7486e-07],
        [2.3961e-05, 1.4901e-05],
        [2.0146e-05, 1.3530e-05],
        [3.3975e-06, 5.4717e-05],
        [1.3113e-06, 4.3869e-05],
        [1.6987e-05, 1.7285e-05],
        [1.7703e-05, 7.4506e-06],
        [1.9014e-05, 7.5698e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0732, 0.0480],
        [0.0848, 0.0415],
        [0.0423, 0.0831],
        [0.0884, 0.0398],
        [0.0410, 0.0859],
        [0.0414, 0.0850],
        [0.0412, 0.0854],
        [0.0412, 0.0853],
        [0.0916, 0.0384],
        [0.0735, 0.0479],
        [0.0721, 0.0488],
        [0.0420, 0.0836],
        [0.0408, 0.0861],
        [0.0651, 0.0540],
        [0.0802, 0.0439],
        [0.0811, 0.0434]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.390825
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0862e-06, 5.8055e-05],
        [1.4246e-05, 7.6890e-06],
        [5.3644e-07, 2.3782e-05],
        [3.8743e-06, 5.7042e-05],
        [1.0848e-05, 6.2943e-05],
        [2.0266e-06, 5.9247e-05],
        [1.6868e-05, 8.3447e-06],
        [1.9073e-06, 1.7881e-07],
        [3.3915e-05, 7.1824e-05],
        [4.2439e-05, 3.9279e-05],
        [1.4305e-06, 4.1246e-05],
        [2.2113e-05, 1.5438e-05],
        [2.9802e-07, 1.9550e-05],
        [2.0266e-05, 1.6928e-05],
        [4.5896e-06, 8.2791e-05],
        [1.6630e-05, 1.3530e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0448, 0.0800],
        [0.0829, 0.0432],
        [0.0443, 0.0810],
        [0.0461, 0.0777],
        [0.0501, 0.0715],
        [0.0447, 0.0801],
        [0.0845, 0.0424],
        [0.1080, 0.0332],
        [0.0597, 0.0601],
        [0.0728, 0.0492],
        [0.0448, 0.0800],
        [0.0780, 0.0459],
        [0.0439, 0.0815],
        [0.0746, 0.0480],
        [0.0456, 0.0785],
        [0.0751, 0.0477]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.300337
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.1062e-06, 9.5725e-05],
        [3.2544e-05, 4.6611e-05],
        [2.3842e-07, 7.0333e-06],
        [4.1723e-07, 3.6299e-05],
        [2.8431e-05, 1.4961e-05],
        [4.7684e-06, 8.2195e-05],
        [7.3910e-06, 9.9480e-05],
        [4.2379e-05, 4.7684e-05],
        [4.2617e-05, 2.1577e-05],
        [1.3947e-05, 4.8876e-06],
        [1.0133e-06, 3.2067e-05],
        [2.1935e-05, 6.6757e-06],
        [1.7881e-06, 4.0352e-05],
        [1.4305e-06, 3.8385e-05],
        [8.9407e-07, 2.7478e-05],
        [1.4901e-06, 4.5180e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0719],
        [0.0697, 0.0516],
        [0.0477, 0.0753],
        [0.0467, 0.0769],
        [0.0889, 0.0404],
        [0.0488, 0.0736],
        [0.0495, 0.0726],
        [0.0739, 0.0486],
        [0.0897, 0.0401],
        [0.0968, 0.0371],
        [0.0476, 0.0754],
        [0.0994, 0.0361],
        [0.0482, 0.0746],
        [0.0479, 0.0750],
        [0.0477, 0.0754],
        [0.0477, 0.0753]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.345432
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5213e-05, 1.5199e-05],
        [1.4782e-05, 9.2387e-06],
        [1.7166e-05, 8.4043e-06],
        [2.7418e-06, 4.8697e-05],
        [2.8193e-05, 6.0141e-05],
        [1.9073e-06, 4.1366e-05],
        [1.5318e-05, 8.1658e-06],
        [2.0206e-05, 9.0599e-06],
        [1.8477e-06, 5.7936e-05],
        [1.8239e-05, 8.7023e-06],
        [3.8922e-05, 4.8816e-05],
        [1.1921e-06, 1.8239e-05],
        [1.2696e-05, 3.9935e-06],
        [2.3723e-05, 1.3828e-05],
        [3.5763e-07, 1.1623e-05],
        [5.3644e-07, 2.9147e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0754, 0.0476],
        [0.0748, 0.0480],
        [0.0791, 0.0454],
        [0.0426, 0.0843],
        [0.0556, 0.0646],
        [0.0422, 0.0850],
        [0.0776, 0.0463],
        [0.0806, 0.0446],
        [0.0417, 0.0862],
        [0.0795, 0.0452],
        [0.0630, 0.0570],
        [0.0430, 0.0836],
        [0.0864, 0.0415],
        [0.0760, 0.0472],
        [0.0416, 0.0863],
        [0.0411, 0.0873]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.342220
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 2.7299e-05],
        [2.0146e-05, 7.2718e-06],
        [4.2081e-05, 3.7670e-05],
        [1.1325e-06, 7.3791e-05],
        [7.7486e-07, 3.8147e-05],
        [8.3447e-07, 3.5346e-05],
        [2.9802e-07, 6.7949e-06],
        [4.7684e-07, 2.8372e-05],
        [5.0068e-06, 8.0943e-05],
        [8.3447e-07, 3.6716e-05],
        [5.9605e-07, 3.8624e-05],
        [2.5809e-05, 1.9312e-05],
        [2.1458e-06, 5.1200e-05],
        [2.3305e-05, 1.9312e-05],
        [3.9339e-06, 6.6459e-05],
        [7.9870e-06, 4.1723e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0727],
        [0.1015, 0.0358],
        [0.0825, 0.0440],
        [0.0494, 0.0735],
        [0.0496, 0.0731],
        [0.0498, 0.0729],
        [0.0508, 0.0715],
        [0.0495, 0.0734],
        [0.0516, 0.0704],
        [0.0498, 0.0730],
        [0.0494, 0.0735],
        [0.0862, 0.0421],
        [0.0507, 0.0717],
        [0.0841, 0.0432],
        [0.0515, 0.0706],
        [0.0939, 0.0387]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.518385
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6716e-05, 2.3186e-05],
        [4.6492e-06, 6.3956e-05],
        [1.0967e-05, 5.9605e-06],
        [3.2008e-05, 1.5616e-05],
        [7.1526e-07, 3.2127e-05],
        [2.0862e-06, 4.8935e-05],
        [5.9605e-06, 7.1645e-05],
        [1.3113e-06, 4.1485e-05],
        [1.8716e-05, 6.5565e-06],
        [2.7537e-05, 1.8775e-05],
        [2.3842e-07, 1.6689e-05],
        [1.3709e-06, 5.1856e-05],
        [1.5259e-05, 5.7817e-06],
        [2.8014e-06, 6.2287e-05],
        [1.7881e-06, 1.7881e-07],
        [2.3842e-07, 2.0444e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0785, 0.0445],
        [0.0455, 0.0768],
        [0.0813, 0.0430],
        [0.0833, 0.0420],
        [0.0435, 0.0804],
        [0.0443, 0.0789],
        [0.0459, 0.0761],
        [0.0439, 0.0797],
        [0.0892, 0.0392],
        [0.0771, 0.0454],
        [0.0431, 0.0810],
        [0.0436, 0.0801],
        [0.0878, 0.0398],
        [0.0444, 0.0787],
        [0.1056, 0.0331],
        [0.0430, 0.0812]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.383037
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7001e-05, 9.8348e-06],
        [2.1756e-05, 9.0003e-06],
        [2.9802e-07, 2.1338e-05],
        [3.5763e-07, 2.5213e-05],
        [2.9922e-05, 1.3351e-05],
        [1.9372e-05, 7.2122e-06],
        [3.2365e-05, 2.5213e-05],
        [2.1756e-05, 9.8944e-06],
        [1.7881e-06, 4.4644e-05],
        [2.7239e-05, 1.4961e-05],
        [2.5034e-06, 5.9783e-05],
        [2.5630e-06, 5.8413e-05],
        [2.3842e-07, 1.9193e-05],
        [4.1723e-06, 7.1526e-07],
        [1.1921e-06, 4.3571e-05],
        [7.1526e-07, 3.4511e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0853, 0.0408],
        [0.0832, 0.0419],
        [0.0416, 0.0838],
        [0.0416, 0.0837],
        [0.0819, 0.0425],
        [0.0850, 0.0410],
        [0.0719, 0.0484],
        [0.0815, 0.0427],
        [0.0426, 0.0817],
        [0.0782, 0.0445],
        [0.0427, 0.0816],
        [0.0428, 0.0814],
        [0.0415, 0.0839],
        [0.0963, 0.0362],
        [0.0421, 0.0827],
        [0.0418, 0.0832]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.411663
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[8.6427e-06, 6.4373e-05],
        [4.1723e-06, 5.5790e-05],
        [2.2471e-05, 9.7156e-06],
        [1.1921e-07, 1.4961e-05],
        [3.0994e-06, 3.5763e-07],
        [2.8193e-05, 1.4663e-05],
        [1.6570e-05, 5.1856e-06],
        [1.6093e-06, 2.9922e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0880, 0.1571],
        [0.0838, 0.1650],
        [0.1571, 0.0880],
        [0.0788, 0.1755],
        [0.1916, 0.0722],
        [0.1509, 0.0916],
        [0.1674, 0.0826],
        [0.0823, 0.1681]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.215236
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 3 and batchsize 16: 0:00:04.929890
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06],
        [9.9540e-06, 8.6427e-06]], device='cuda:0') torch.Size([99, 2])
answers_probs just softmax dim 0: tensor([[0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101]], device='cuda:0')
tensor([[0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101],
        [0.0101, 0.0101]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8743e-06, 8.3447e-07],
        [2.9206e-06, 7.3493e-05],
        [1.7047e-05, 6.3777e-05],
        [2.8610e-06, 4.9949e-05],
        [2.1279e-05, 1.6928e-05],
        [1.1325e-06, 5.7757e-05],
        [4.9174e-05, 3.4630e-05],
        [4.2915e-06, 6.0976e-05],
        [1.0133e-06, 1.4842e-05],
        [4.3511e-06, 6.5804e-05],
        [1.1921e-06, 3.8147e-05],
        [4.3571e-05, 1.8895e-05],
        [2.2054e-06, 5.5373e-05],
        [1.9193e-05, 2.5451e-05],
        [1.7464e-05, 6.4969e-06],
        [3.5703e-05, 4.0174e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1005, 0.0358],
        [0.0459, 0.0784],
        [0.0545, 0.0660],
        [0.0466, 0.0772],
        [0.0770, 0.0467],
        [0.0450, 0.0799],
        [0.0794, 0.0453],
        [0.0471, 0.0763],
        [0.0471, 0.0764],
        [0.0470, 0.0766],
        [0.0455, 0.0791],
        [0.0887, 0.0406],
        [0.0459, 0.0784],
        [0.0678, 0.0530],
        [0.0915, 0.0393],
        [0.0707, 0.0509]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.303383
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1086e-05, 3.6359e-06],
        [5.5552e-05, 5.1379e-05],
        [2.0266e-06, 1.7881e-07],
        [2.3305e-05, 1.6630e-05],
        [1.1981e-05, 5.6028e-06],
        [3.5048e-05, 2.5094e-05],
        [2.3842e-07, 1.0133e-05],
        [1.5378e-05, 5.0664e-06],
        [5.3644e-07, 3.4750e-05],
        [1.5497e-05, 4.5300e-06],
        [2.3842e-07, 2.2352e-05],
        [1.6510e-05, 6.3777e-06],
        [4.1723e-07, 2.5928e-05],
        [1.7941e-05, 7.6890e-06],
        [2.8908e-05, 1.5616e-05],
        [2.0266e-06, 5.6267e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0779, 0.0452],
        [0.0617, 0.0570],
        [0.0920, 0.0383],
        [0.0658, 0.0535],
        [0.0725, 0.0485],
        [0.0657, 0.0536],
        [0.0376, 0.0937],
        [0.0779, 0.0452],
        [0.0373, 0.0945],
        [0.0796, 0.0442],
        [0.0371, 0.0949],
        [0.0755, 0.0466],
        [0.0373, 0.0944],
        [0.0739, 0.0476],
        [0.0703, 0.0501],
        [0.0380, 0.0926]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.383461
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 6.4075e-05],
        [1.3709e-06, 3.5822e-05],
        [2.4259e-05, 1.4842e-05],
        [2.3842e-06, 5.5730e-05],
        [2.9802e-07, 3.5763e-05],
        [2.2769e-05, 9.1195e-06],
        [2.1338e-05, 1.1802e-05],
        [9.8944e-06, 7.1347e-05],
        [2.6822e-06, 4.7445e-05],
        [3.5763e-07, 2.7180e-05],
        [4.3571e-05, 2.0742e-05],
        [4.1723e-07, 2.8789e-05],
        [3.9756e-05, 3.2723e-05],
        [3.5167e-06, 4.8101e-05],
        [3.3975e-06, 5.9605e-07],
        [7.8082e-06, 3.5167e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0438, 0.0805],
        [0.0447, 0.0790],
        [0.0801, 0.0441],
        [0.0449, 0.0786],
        [0.0434, 0.0813],
        [0.0879, 0.0401],
        [0.0820, 0.0430],
        [0.0486, 0.0725],
        [0.0454, 0.0777],
        [0.0436, 0.0809],
        [0.0848, 0.0416],
        [0.0437, 0.0808],
        [0.0745, 0.0473],
        [0.0461, 0.0765],
        [0.1008, 0.0350],
        [0.0858, 0.0411]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.318038
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0398e-06, 6.7353e-05],
        [1.0729e-06, 4.7863e-05],
        [4.9472e-06, 6.2644e-05],
        [2.0444e-05, 6.7353e-06],
        [2.1160e-05, 9.1791e-06],
        [1.9670e-06, 6.1214e-05],
        [5.9605e-07, 2.3007e-05],
        [1.0371e-05, 7.1943e-05],
        [2.6643e-05, 1.6570e-05],
        [2.3842e-07, 5.3644e-06],
        [1.1325e-06, 5.9128e-05],
        [2.5392e-05, 1.9133e-05],
        [1.5736e-05, 8.1658e-06],
        [5.9605e-07, 3.7909e-05],
        [1.8477e-05, 7.1526e-06],
        [3.7491e-05, 1.6868e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0785],
        [0.0442, 0.0802],
        [0.0465, 0.0762],
        [0.0917, 0.0386],
        [0.0868, 0.0408],
        [0.0446, 0.0795],
        [0.0443, 0.0799],
        [0.0490, 0.0723],
        [0.0800, 0.0443],
        [0.0451, 0.0786],
        [0.0440, 0.0805],
        [0.0764, 0.0464],
        [0.0835, 0.0424],
        [0.0439, 0.0807],
        [0.0888, 0.0399],
        [0.0861, 0.0411]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.522735
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2783e-06, 6.4611e-05],
        [1.1325e-06, 4.3631e-05],
        [1.4305e-06, 2.7657e-05],
        [3.8147e-06, 5.0783e-05],
        [2.5034e-06, 6.9737e-05],
        [1.8477e-05, 9.9540e-06],
        [3.1590e-06, 5.7340e-05],
        [9.5963e-06, 5.1856e-06],
        [1.2934e-05, 1.5497e-05],
        [2.9266e-05, 2.5809e-05],
        [3.8147e-06, 9.5367e-07],
        [4.1723e-07, 3.8445e-05],
        [1.1325e-06, 3.1114e-05],
        [2.4140e-05, 2.7776e-05],
        [2.0623e-05, 7.3910e-06],
        [2.6464e-05, 1.6153e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0791],
        [0.0442, 0.0810],
        [0.0453, 0.0791],
        [0.0462, 0.0774],
        [0.0446, 0.0802],
        [0.0825, 0.0434],
        [0.0454, 0.0788],
        [0.0825, 0.0434],
        [0.0679, 0.0527],
        [0.0733, 0.0488],
        [0.0959, 0.0373],
        [0.0436, 0.0821],
        [0.0446, 0.0802],
        [0.0686, 0.0522],
        [0.0900, 0.0398],
        [0.0802, 0.0446]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.387661
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 2.4319e-05],
        [2.4259e-05, 6.8545e-05],
        [2.0921e-05, 9.4771e-06],
        [5.3644e-06, 9.4295e-05],
        [8.3447e-07, 3.4988e-05],
        [4.5896e-06, 5.9605e-07],
        [2.0266e-05, 1.0371e-05],
        [1.1921e-07, 1.3113e-05],
        [1.3113e-06, 4.3213e-05],
        [1.7881e-06, 3.5584e-05],
        [4.2915e-06, 5.3883e-05],
        [9.9540e-06, 5.5134e-05],
        [2.7299e-05, 1.0252e-05],
        [1.5914e-05, 1.2219e-05],
        [7.1526e-07, 2.3544e-05],
        [1.7643e-05, 1.9073e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0788],
        [0.0576, 0.0618],
        [0.0882, 0.0404],
        [0.0468, 0.0761],
        [0.0454, 0.0785],
        [0.1074, 0.0331],
        [0.0859, 0.0415],
        [0.0447, 0.0796],
        [0.0457, 0.0780],
        [0.0465, 0.0766],
        [0.0477, 0.0746],
        [0.0517, 0.0689],
        [0.0917, 0.0388],
        [0.0781, 0.0456],
        [0.0457, 0.0780],
        [0.0717, 0.0497]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.408924
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4438e-06, 5.8949e-05],
        [3.9339e-06, 1.4305e-06],
        [4.9472e-06, 6.5327e-05],
        [5.9605e-08, 1.3113e-05],
        [1.8060e-05, 1.0550e-05],
        [7.4506e-06, 8.9526e-05],
        [8.9407e-07, 2.7716e-05],
        [7.1526e-07, 3.6776e-05],
        [4.1723e-07, 2.3067e-05],
        [2.6345e-05, 1.2875e-05],
        [2.4080e-05, 1.5914e-05],
        [1.3113e-06, 5.0008e-05],
        [1.3709e-05, 1.2577e-05],
        [2.7418e-05, 1.7583e-05],
        [8.7619e-06, 3.1590e-06],
        [1.6391e-05, 4.6492e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0437, 0.0810],
        [0.0874, 0.0405],
        [0.0450, 0.0785],
        [0.0422, 0.0839],
        [0.0789, 0.0448],
        [0.0453, 0.0780],
        [0.0433, 0.0817],
        [0.0428, 0.0827],
        [0.0427, 0.0828],
        [0.0822, 0.0430],
        [0.0766, 0.0461],
        [0.0431, 0.0821],
        [0.0707, 0.0500],
        [0.0772, 0.0458],
        [0.0875, 0.0404],
        [0.0915, 0.0387]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.432979
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.2292e-05],
        [1.9073e-06, 2.9802e-07],
        [2.0683e-05, 1.5616e-05],
        [2.9802e-07, 1.7941e-05],
        [2.8431e-05, 1.0610e-05],
        [1.7881e-07, 1.7583e-05],
        [1.2815e-05, 7.3910e-06],
        [3.6240e-05, 2.4915e-05],
        [2.9981e-05, 1.8179e-05],
        [1.7881e-07, 1.7405e-05],
        [2.0266e-06, 6.9797e-05],
        [2.1935e-05, 1.2219e-05],
        [3.0816e-05, 1.4007e-05],
        [1.7285e-06, 3.3021e-05],
        [1.3888e-05, 1.0908e-05],
        [4.2856e-05, 3.0875e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0404, 0.0879],
        [0.0937, 0.0379],
        [0.0698, 0.0509],
        [0.0401, 0.0885],
        [0.0817, 0.0434],
        [0.0399, 0.0891],
        [0.0744, 0.0477],
        [0.0714, 0.0498],
        [0.0735, 0.0483],
        [0.0399, 0.0891],
        [0.0406, 0.0875],
        [0.0750, 0.0473],
        [0.0785, 0.0452],
        [0.0415, 0.0856],
        [0.0691, 0.0514],
        [0.0706, 0.0503]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.327774
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1948e-05, 1.9073e-05],
        [8.9407e-07, 3.8445e-05],
        [1.3113e-06, 4.5955e-05],
        [1.1921e-07, 1.5140e-05],
        [4.2319e-06, 7.1764e-05],
        [3.1233e-05, 1.3649e-05],
        [1.6689e-05, 9.5963e-06],
        [8.3447e-07, 3.6418e-05],
        [2.3246e-06, 3.8743e-05],
        [4.5300e-06, 7.7486e-07],
        [3.6120e-05, 1.7464e-05],
        [8.4639e-06, 8.6844e-05],
        [1.3351e-05, 1.0312e-05],
        [4.3511e-06, 5.8353e-05],
        [1.7226e-05, 6.7353e-06],
        [1.8418e-05, 8.2254e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0772, 0.0456],
        [0.0422, 0.0834],
        [0.0424, 0.0830],
        [0.0416, 0.0847],
        [0.0436, 0.0807],
        [0.0827, 0.0426],
        [0.0778, 0.0452],
        [0.0422, 0.0835],
        [0.0437, 0.0807],
        [0.0969, 0.0363],
        [0.0809, 0.0435],
        [0.0451, 0.0781],
        [0.0725, 0.0486],
        [0.0442, 0.0796],
        [0.0847, 0.0416],
        [0.0823, 0.0428]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.392241
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-05, 1.7941e-05],
        [2.5094e-05, 7.0333e-06],
        [1.3232e-05, 4.5896e-06],
        [3.9339e-06, 6.4969e-05],
        [3.5763e-07, 1.8477e-05],
        [2.3842e-06, 6.4671e-05],
        [7.1526e-07, 2.6286e-05],
        [4.3750e-05, 2.3782e-05],
        [2.7418e-06, 2.3842e-07],
        [3.0816e-05, 1.1981e-05],
        [4.3511e-06, 7.2896e-05],
        [1.1325e-06, 4.1783e-05],
        [2.2173e-05, 1.0908e-05],
        [1.3232e-05, 5.2452e-06],
        [4.5240e-05, 4.0233e-05],
        [5.3644e-07, 2.3842e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0730, 0.0477],
        [0.0854, 0.0408],
        [0.0822, 0.0424],
        [0.0414, 0.0841],
        [0.0399, 0.0874],
        [0.0405, 0.0859],
        [0.0402, 0.0867],
        [0.0747, 0.0466],
        [0.0981, 0.0355],
        [0.0803, 0.0433],
        [0.0414, 0.0842],
        [0.0401, 0.0867],
        [0.0764, 0.0456],
        [0.0800, 0.0435],
        [0.0664, 0.0525],
        [0.0400, 0.0871]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.427104
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 1.6689e-05],
        [4.0114e-05, 1.6451e-05],
        [1.4305e-06, 5.5909e-05],
        [1.5140e-05, 6.1989e-06],
        [3.8743e-06, 6.2227e-05],
        [6.5565e-07, 3.5346e-05],
        [3.1173e-05, 1.3173e-05],
        [1.5616e-05, 8.2850e-06],
        [1.7881e-07, 1.8775e-05],
        [2.1458e-06, 4.1068e-05],
        [1.6689e-06, 5.5373e-05],
        [3.8624e-05, 4.8041e-05],
        [1.1325e-06, 4.0233e-05],
        [2.2948e-05, 1.1206e-05],
        [1.0133e-06, 3.6597e-05],
        [2.5690e-05, 1.8060e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0455, 0.0782],
        [0.0899, 0.0396],
        [0.0454, 0.0784],
        [0.0899, 0.0395],
        [0.0469, 0.0758],
        [0.0451, 0.0789],
        [0.0894, 0.0398],
        [0.0850, 0.0418],
        [0.0447, 0.0796],
        [0.0465, 0.0765],
        [0.0456, 0.0781],
        [0.0691, 0.0515],
        [0.0455, 0.0782],
        [0.0866, 0.0411],
        [0.0455, 0.0783],
        [0.0796, 0.0447]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.407189
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 2.6762e-05],
        [7.6294e-06, 7.6532e-05],
        [1.2815e-05, 6.7353e-06],
        [5.6028e-06, 7.8559e-05],
        [3.0458e-05, 1.6570e-05],
        [1.1444e-05, 6.6161e-06],
        [1.4126e-05, 1.0341e-04],
        [5.0485e-05, 2.0862e-05],
        [5.9605e-07, 2.5868e-05],
        [3.0994e-06, 3.5763e-07],
        [3.1531e-05, 4.4107e-05],
        [8.9407e-07, 3.8862e-05],
        [1.9431e-05, 1.0550e-05],
        [3.8147e-06, 6.7711e-05],
        [2.2352e-05, 2.1696e-05],
        [3.0041e-05, 1.4842e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0417, 0.0854],
        [0.0444, 0.0802],
        [0.0781, 0.0456],
        [0.0433, 0.0822],
        [0.0775, 0.0460],
        [0.0764, 0.0466],
        [0.0457, 0.0779],
        [0.0823, 0.0433],
        [0.0415, 0.0859],
        [0.0994, 0.0358],
        [0.0615, 0.0579],
        [0.0415, 0.0859],
        [0.0775, 0.0460],
        [0.0428, 0.0833],
        [0.0673, 0.0529],
        [0.0792, 0.0450]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.381577
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.3975e-06, 3.5763e-07],
        [6.5565e-07, 3.8981e-05],
        [2.8551e-05, 6.4850e-05],
        [6.5565e-07, 3.1888e-05],
        [3.1531e-05, 5.4061e-05],
        [1.7285e-06, 4.7922e-05],
        [5.3525e-05, 1.8060e-05],
        [5.0008e-05, 3.4094e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.2014, 0.0699],
        [0.0829, 0.1699],
        [0.1106, 0.1273],
        [0.0831, 0.1693],
        [0.1178, 0.1195],
        [0.0844, 0.1669],
        [0.1721, 0.0818],
        [0.1477, 0.0953]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.201715
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 4 and batchsize 16: 0:00:04.910111
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06]], device='cuda:0') torch.Size([114, 2])
answers_probs just softmax dim 0: tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1815e-05, 1.1683e-05],
        [2.2948e-05, 1.8299e-05],
        [1.0192e-05, 8.3804e-05],
        [3.2783e-06, 6.1154e-05],
        [9.5367e-07, 4.1068e-05],
        [1.4901e-06, 4.5300e-05],
        [2.1458e-05, 1.5199e-05],
        [2.5630e-06, 6.2943e-05],
        [1.3947e-05, 1.0908e-05],
        [2.9027e-05, 5.6863e-05],
        [1.3113e-06, 1.7881e-07],
        [1.3471e-05, 4.8876e-06],
        [3.1114e-05, 1.7881e-05],
        [1.1742e-05, 4.6492e-06],
        [1.9014e-05, 9.0599e-06],
        [1.7405e-05, 1.0788e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0734, 0.0490],
        [0.0668, 0.0538],
        [0.0427, 0.0842],
        [0.0403, 0.0892],
        [0.0392, 0.0918],
        [0.0395, 0.0909],
        [0.0687, 0.0523],
        [0.0398, 0.0903],
        [0.0671, 0.0536],
        [0.0537, 0.0670],
        [0.0923, 0.0389],
        [0.0797, 0.0451],
        [0.0722, 0.0498],
        [0.0784, 0.0459],
        [0.0754, 0.0477],
        [0.0710, 0.0506]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.358322
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7703e-05, 1.9014e-05],
        [1.5497e-06, 2.3842e-07],
        [7.6890e-06, 9.2089e-05],
        [3.8564e-05, 4.7266e-05],
        [1.2934e-05, 4.7088e-06],
        [4.3511e-06, 8.9526e-05],
        [2.8789e-05, 9.4175e-06],
        [2.4319e-05, 2.7537e-05],
        [1.1325e-06, 3.6478e-05],
        [2.2292e-05, 6.6757e-06],
        [1.8001e-05, 1.4126e-05],
        [2.3544e-05, 1.3709e-05],
        [1.1921e-06, 3.4571e-05],
        [3.0994e-06, 5.5373e-05],
        [3.7551e-05, 2.4438e-05],
        [2.9743e-05, 1.9193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0621, 0.0578],
        [0.0912, 0.0394],
        [0.0414, 0.0867],
        [0.0601, 0.0598],
        [0.0798, 0.0450],
        [0.0402, 0.0894],
        [0.0815, 0.0441],
        [0.0613, 0.0586],
        [0.0395, 0.0909],
        [0.0828, 0.0434],
        [0.0672, 0.0535],
        [0.0721, 0.0498],
        [0.0396, 0.0906],
        [0.0404, 0.0888],
        [0.0703, 0.0511],
        [0.0704, 0.0510]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.221015
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 4.5061e-05],
        [2.7478e-05, 2.2233e-05],
        [5.2452e-06, 8.2314e-05],
        [1.6451e-05, 1.4842e-05],
        [1.8895e-05, 9.1195e-06],
        [2.5034e-05, 1.5438e-05],
        [4.3392e-05, 2.3603e-05],
        [3.6955e-06, 5.3108e-05],
        [4.7565e-05, 2.9087e-05],
        [1.8060e-05, 1.3649e-05],
        [1.6749e-05, 1.0014e-05],
        [2.3782e-05, 7.2181e-05],
        [2.3246e-05, 1.2755e-05],
        [1.7345e-05, 8.5235e-06],
        [5.8413e-06, 6.7651e-05],
        [1.0133e-06, 1.6093e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0413, 0.0884],
        [0.0692, 0.0528],
        [0.0423, 0.0864],
        [0.0674, 0.0542],
        [0.0782, 0.0467],
        [0.0739, 0.0494],
        [0.0761, 0.0480],
        [0.0425, 0.0860],
        [0.0741, 0.0493],
        [0.0704, 0.0519],
        [0.0745, 0.0491],
        [0.0510, 0.0716],
        [0.0760, 0.0481],
        [0.0779, 0.0469],
        [0.0431, 0.0847],
        [0.0423, 0.0865]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.342553
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2577e-05, 4.2915e-06],
        [2.9206e-06, 5.3048e-05],
        [3.0756e-05, 4.1366e-05],
        [5.3644e-07, 3.3438e-05],
        [8.9407e-07, 2.8551e-05],
        [1.9252e-05, 1.4305e-05],
        [2.3842e-07, 6.1989e-06],
        [1.7703e-05, 8.7023e-06],
        [1.6689e-05, 7.3314e-06],
        [6.5565e-07, 2.3901e-05],
        [2.1696e-05, 9.1791e-06],
        [2.0862e-06, 6.0141e-05],
        [2.0325e-05, 9.0599e-06],
        [3.5763e-07, 3.9577e-05],
        [3.5942e-05, 2.0325e-05],
        [2.8729e-05, 1.5259e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0863, 0.0411],
        [0.0432, 0.0822],
        [0.0627, 0.0565],
        [0.0416, 0.0853],
        [0.0422, 0.0840],
        [0.0727, 0.0488],
        [0.0425, 0.0835],
        [0.0801, 0.0443],
        [0.0821, 0.0432],
        [0.0421, 0.0843],
        [0.0827, 0.0429],
        [0.0424, 0.0838],
        [0.0818, 0.0434],
        [0.0413, 0.0858],
        [0.0776, 0.0457],
        [0.0787, 0.0451]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.347918
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5616e-05, 6.6757e-06],
        [1.7881e-07, 6.6161e-06],
        [1.9550e-05, 2.0623e-05],
        [3.6657e-05, 3.4392e-05],
        [4.9472e-06, 8.3208e-05],
        [5.3644e-07, 3.1769e-05],
        [3.2187e-05, 1.7524e-05],
        [1.7285e-06, 6.1512e-05],
        [7.2122e-06, 9.3162e-05],
        [3.5763e-07, 3.5584e-05],
        [2.2769e-05, 1.1981e-05],
        [8.9407e-07, 4.1127e-05],
        [7.5102e-06, 6.3598e-05],
        [2.9802e-07, 2.3901e-05],
        [2.5094e-05, 1.7822e-05],
        [1.3709e-06, 4.5002e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0944, 0.0383],
        [0.0481, 0.0753],
        [0.0762, 0.0475],
        [0.0785, 0.0461],
        [0.0496, 0.0731],
        [0.0477, 0.0760],
        [0.0896, 0.0404],
        [0.0482, 0.0752],
        [0.0504, 0.0719],
        [0.0473, 0.0765],
        [0.0902, 0.0401],
        [0.0479, 0.0756],
        [0.0521, 0.0695],
        [0.0474, 0.0763],
        [0.0841, 0.0431],
        [0.0483, 0.0750]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.354159
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 6.2585e-06],
        [4.4703e-06, 7.7486e-05],
        [2.5034e-06, 6.0439e-05],
        [1.7881e-07, 1.5736e-05],
        [4.7684e-07, 2.3603e-05],
        [1.1444e-05, 7.2122e-06],
        [1.7285e-06, 6.0380e-05],
        [3.0398e-05, 2.3484e-05],
        [3.1710e-05, 6.6578e-05],
        [4.2915e-06, 5.8889e-05],
        [2.0266e-06, 6.3658e-05],
        [2.5928e-05, 1.7941e-05],
        [1.7881e-06, 5.6386e-05],
        [1.3113e-06, 4.5002e-05],
        [1.3351e-05, 6.6757e-05],
        [2.1458e-06, 5.2750e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0536, 0.0696],
        [0.0545, 0.0683],
        [0.0537, 0.0694],
        [0.0522, 0.0714],
        [0.0527, 0.0708],
        [0.0954, 0.0391],
        [0.0531, 0.0702],
        [0.0908, 0.0411],
        [0.0713, 0.0523],
        [0.0553, 0.0674],
        [0.0533, 0.0700],
        [0.0932, 0.0400],
        [0.0532, 0.0700],
        [0.0531, 0.0702],
        [0.0610, 0.0611],
        [0.0537, 0.0694]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.278213
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0398e-06, 6.6102e-05],
        [3.0518e-05, 1.3530e-05],
        [1.3769e-05, 9.3579e-06],
        [4.6074e-05, 2.1577e-05],
        [7.1526e-07, 3.9935e-05],
        [2.2650e-06, 6.1452e-05],
        [5.9605e-07, 3.9876e-05],
        [1.4901e-05, 1.2696e-05],
        [3.2365e-05, 1.2159e-05],
        [8.8215e-06, 6.0976e-05],
        [3.2663e-05, 1.4603e-05],
        [2.2054e-06, 5.0962e-05],
        [7.1526e-07, 3.4690e-05],
        [8.3447e-07, 3.6240e-05],
        [2.7418e-06, 5.9605e-07],
        [2.3842e-07, 1.6570e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0782],
        [0.0862, 0.0409],
        [0.0782, 0.0450],
        [0.0852, 0.0414],
        [0.0439, 0.0803],
        [0.0447, 0.0789],
        [0.0438, 0.0805],
        [0.0740, 0.0476],
        [0.0892, 0.0395],
        [0.0489, 0.0720],
        [0.0861, 0.0409],
        [0.0449, 0.0784],
        [0.0440, 0.0801],
        [0.0441, 0.0799],
        [0.0980, 0.0359],
        [0.0437, 0.0806]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.391937
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7088e-06, 7.4148e-05],
        [2.3842e-06, 5.2094e-05],
        [1.7464e-05, 6.5565e-06],
        [1.5497e-06, 3.6061e-05],
        [5.0664e-06, 6.3539e-05],
        [1.0133e-06, 4.3869e-05],
        [1.0729e-06, 4.0174e-05],
        [1.8179e-05, 2.3901e-05],
        [1.5676e-05, 6.9141e-06],
        [3.2425e-05, 1.9372e-05],
        [1.2815e-05, 8.7619e-06],
        [1.7285e-06, 2.3842e-07],
        [2.0027e-05, 1.1325e-05],
        [4.1425e-05, 1.2934e-05],
        [1.5497e-06, 5.0664e-05],
        [3.5644e-05, 1.5855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0424, 0.0831],
        [0.0417, 0.0844],
        [0.0826, 0.0426],
        [0.0416, 0.0846],
        [0.0430, 0.0819],
        [0.0408, 0.0862],
        [0.0410, 0.0859],
        [0.0615, 0.0572],
        [0.0799, 0.0441],
        [0.0747, 0.0472],
        [0.0723, 0.0487],
        [0.0962, 0.0366],
        [0.0756, 0.0466],
        [0.0856, 0.0412],
        [0.0411, 0.0856],
        [0.0798, 0.0441]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.346808
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-05, 1.0002e-04],
        [1.1921e-07, 1.4067e-05],
        [5.3644e-07, 2.9564e-05],
        [2.6226e-06, 4.9412e-05],
        [2.3305e-05, 8.2254e-06],
        [5.9605e-07, 4.1127e-05],
        [2.5630e-05, 1.6153e-05],
        [1.3113e-06, 2.7597e-05],
        [4.1723e-07, 2.8372e-05],
        [2.9802e-06, 7.3195e-05],
        [2.2650e-06, 1.0133e-06],
        [1.8477e-06, 5.8591e-05],
        [4.0770e-05, 1.1683e-05],
        [1.8358e-05, 7.0333e-06],
        [7.1526e-07, 2.8133e-05],
        [2.9504e-05, 1.4305e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0705],
        [0.0448, 0.0785],
        [0.0452, 0.0778],
        [0.0467, 0.0753],
        [0.0930, 0.0378],
        [0.0451, 0.0781],
        [0.0821, 0.0429],
        [0.0465, 0.0757],
        [0.0451, 0.0781],
        [0.0462, 0.0762],
        [0.0887, 0.0397],
        [0.0458, 0.0768],
        [0.0967, 0.0364],
        [0.0916, 0.0384],
        [0.0455, 0.0773],
        [0.0871, 0.0404]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.463286
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0610e-05, 6.3777e-06],
        [3.0398e-06, 4.7326e-05],
        [3.1531e-05, 1.8239e-05],
        [2.3842e-07, 1.8895e-05],
        [1.4126e-05, 8.8811e-06],
        [1.3113e-06, 4.2975e-05],
        [1.8477e-06, 4.4644e-05],
        [1.1861e-05, 3.7551e-06],
        [5.1260e-06, 6.8307e-05],
        [9.0599e-06, 3.7551e-06],
        [1.8239e-05, 1.7047e-05],
        [2.4855e-05, 1.0848e-05],
        [2.2411e-05, 1.2875e-05],
        [2.7418e-06, 7.0274e-05],
        [4.1723e-07, 1.2994e-05],
        [1.9550e-05, 5.3644e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0753, 0.0471],
        [0.0428, 0.0828],
        [0.0759, 0.0467],
        [0.0408, 0.0868],
        [0.0745, 0.0476],
        [0.0415, 0.0853],
        [0.0419, 0.0845],
        [0.0861, 0.0411],
        [0.0432, 0.0820],
        [0.0817, 0.0434],
        [0.0676, 0.0524],
        [0.0808, 0.0438],
        [0.0761, 0.0466],
        [0.0418, 0.0847],
        [0.0416, 0.0852],
        [0.0883, 0.0401]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.413702
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2159e-05, 5.4240e-06],
        [2.3842e-07, 2.0504e-05],
        [4.5896e-06, 6.0439e-05],
        [9.3579e-06, 6.4969e-06],
        [2.3842e-07, 2.2292e-05],
        [1.1861e-05, 4.4107e-06],
        [5.1856e-06, 7.9274e-05],
        [1.8179e-05, 6.0797e-06],
        [1.1742e-05, 1.4424e-05],
        [2.8014e-05, 1.4782e-05],
        [4.1485e-05, 3.7432e-05],
        [2.2054e-06, 4.5717e-05],
        [1.7881e-07, 5.4240e-06],
        [1.7881e-07, 1.5676e-05],
        [1.6749e-05, 7.8082e-06],
        [2.6703e-05, 9.5367e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0815, 0.0435],
        [0.0413, 0.0859],
        [0.0438, 0.0810],
        [0.0737, 0.0482],
        [0.0413, 0.0860],
        [0.0846, 0.0419],
        [0.0434, 0.0817],
        [0.0864, 0.0411],
        [0.0640, 0.0555],
        [0.0786, 0.0452],
        [0.0691, 0.0514],
        [0.0428, 0.0830],
        [0.0422, 0.0842],
        [0.0413, 0.0859],
        [0.0808, 0.0439],
        [0.0853, 0.0416]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.523831
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5094e-05, 1.4186e-05],
        [1.2517e-06, 5.6088e-05],
        [1.1325e-06, 5.3406e-05],
        [1.5020e-05, 6.0201e-06],
        [7.1526e-07, 2.9206e-05],
        [2.9802e-07, 2.6047e-05],
        [1.0133e-05, 5.3048e-06],
        [2.6226e-06, 5.8115e-05],
        [1.3411e-05, 8.2254e-06],
        [1.7881e-07, 2.1994e-05],
        [1.0729e-06, 4.6611e-05],
        [3.2187e-06, 6.5565e-07],
        [9.5367e-07, 6.6161e-05],
        [1.8775e-05, 8.1062e-06],
        [8.6427e-06, 4.4703e-06],
        [1.4305e-06, 5.8770e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0818, 0.0428],
        [0.0441, 0.0793],
        [0.0441, 0.0794],
        [0.0882, 0.0397],
        [0.0442, 0.0791],
        [0.0437, 0.0801],
        [0.0833, 0.0420],
        [0.0451, 0.0776],
        [0.0803, 0.0436],
        [0.0435, 0.0804],
        [0.0442, 0.0792],
        [0.0991, 0.0353],
        [0.0438, 0.0799],
        [0.0868, 0.0403],
        [0.0835, 0.0419],
        [0.0442, 0.0791]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.416567
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[8.9407e-07, 4.3631e-05],
        [2.1338e-05, 9.4771e-06],
        [3.2604e-05, 4.2498e-05],
        [5.9605e-08, 3.0398e-06],
        [2.9564e-05, 1.1921e-05],
        [7.1526e-07, 3.6359e-05],
        [4.7684e-07, 2.4378e-05],
        [2.8789e-05, 1.4663e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0880, 0.1613],
        [0.1723, 0.0823],
        [0.1331, 0.1066],
        [0.0879, 0.1614],
        [0.1758, 0.0807],
        [0.0879, 0.1614],
        [0.0879, 0.1614],
        [0.1672, 0.0848]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.120588
acc:  0.965
Time taken to execute the en SA task with prompt type active, variation 5 and batchsize 16: 0:00:04.594162
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06]], device='cuda:0') torch.Size([109, 2])
answers_probs just softmax dim 0: tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4438e-05, 1.7583e-05],
        [6.1393e-06, 5.1916e-05],
        [3.3498e-05, 4.5776e-05],
        [7.3314e-06, 4.9829e-05],
        [2.9922e-05, 1.6928e-05],
        [1.9670e-06, 1.7881e-07],
        [2.6405e-05, 3.8981e-05],
        [4.2319e-06, 6.9261e-05],
        [7.0930e-06, 3.8147e-06],
        [1.0133e-06, 3.6001e-05],
        [1.1683e-05, 9.2387e-06],
        [2.5630e-06, 4.5359e-05],
        [6.3777e-06, 3.7551e-06],
        [1.4842e-05, 6.8545e-06],
        [1.0729e-06, 3.2961e-05],
        [4.1723e-07, 3.3438e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0740, 0.0484],
        [0.0460, 0.0779],
        [0.0631, 0.0568],
        [0.0470, 0.0762],
        [0.0784, 0.0457],
        [0.1035, 0.0346],
        [0.0620, 0.0579],
        [0.0438, 0.0818],
        [0.0793, 0.0452],
        [0.0425, 0.0843],
        [0.0723, 0.0496],
        [0.0437, 0.0821],
        [0.0777, 0.0462],
        [0.0820, 0.0437],
        [0.0427, 0.0839],
        [0.0419, 0.0856]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.438254
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4842e-05, 9.5963e-06],
        [5.7220e-06, 7.9274e-05],
        [3.0935e-05, 1.5438e-05],
        [2.0683e-05, 9.1791e-06],
        [5.9605e-07, 4.1783e-05],
        [1.0312e-05, 6.9141e-06],
        [8.3447e-07, 2.9504e-05],
        [2.1815e-05, 6.3658e-05],
        [1.0908e-05, 1.1384e-05],
        [1.7285e-05, 5.0068e-06],
        [1.2994e-05, 7.1526e-06],
        [1.4365e-05, 6.2585e-06],
        [2.8610e-06, 5.3644e-07],
        [1.6689e-06, 4.9710e-05],
        [2.3484e-05, 1.2577e-05],
        [5.9605e-07, 3.3140e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0706, 0.0506],
        [0.0411, 0.0868],
        [0.0749, 0.0476],
        [0.0769, 0.0464],
        [0.0390, 0.0915],
        [0.0700, 0.0510],
        [0.0395, 0.0903],
        [0.0496, 0.0719],
        [0.0627, 0.0569],
        [0.0835, 0.0427],
        [0.0733, 0.0487],
        [0.0772, 0.0462],
        [0.0892, 0.0400],
        [0.0397, 0.0898],
        [0.0737, 0.0484],
        [0.0391, 0.0912]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.407026
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.8944e-06, 6.1989e-06],
        [1.3769e-05, 1.1981e-05],
        [1.7881e-07, 1.8299e-05],
        [3.2783e-06, 5.3644e-07],
        [7.7486e-07, 3.3081e-05],
        [3.8147e-06, 5.5432e-05],
        [2.3842e-07, 2.1160e-05],
        [2.0266e-06, 6.1154e-05],
        [1.7285e-06, 3.8922e-05],
        [3.0398e-06, 5.1320e-05],
        [2.5034e-06, 4.1544e-05],
        [8.3447e-07, 3.3617e-05],
        [2.6464e-05, 2.9325e-05],
        [1.1086e-05, 4.2915e-06],
        [4.7684e-07, 1.8716e-05],
        [6.4373e-06, 2.6226e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0842, 0.0422],
        [0.0777, 0.0457],
        [0.0460, 0.0773],
        [0.1075, 0.0330],
        [0.0466, 0.0763],
        [0.0485, 0.0732],
        [0.0460, 0.0772],
        [0.0470, 0.0756],
        [0.0475, 0.0748],
        [0.0481, 0.0738],
        [0.0482, 0.0737],
        [0.0466, 0.0762],
        [0.0731, 0.0486],
        [0.0936, 0.0380],
        [0.0467, 0.0761],
        [0.0926, 0.0384]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.414904
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9491e-05, 1.5795e-05],
        [1.3113e-06, 3.3379e-05],
        [1.7047e-05, 6.2585e-06],
        [1.8835e-05, 1.1981e-05],
        [1.6689e-05, 9.0599e-06],
        [6.5565e-07, 2.9922e-05],
        [3.0756e-05, 1.4186e-05],
        [1.6987e-05, 7.7486e-06],
        [9.7156e-06, 4.4703e-06],
        [1.7881e-06, 4.7505e-05],
        [2.3842e-07, 5.5432e-06],
        [1.8954e-05, 1.8060e-05],
        [8.9407e-07, 3.3975e-05],
        [1.3709e-05, 1.3888e-05],
        [1.6093e-05, 9.4771e-06],
        [3.2187e-05, 1.3828e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0671, 0.0537],
        [0.0401, 0.0899],
        [0.0803, 0.0449],
        [0.0712, 0.0507],
        [0.0739, 0.0488],
        [0.0395, 0.0914],
        [0.0766, 0.0471],
        [0.0768, 0.0470],
        [0.0766, 0.0471],
        [0.0401, 0.0900],
        [0.0403, 0.0896],
        [0.0645, 0.0559],
        [0.0396, 0.0910],
        [0.0635, 0.0568],
        [0.0725, 0.0497],
        [0.0777, 0.0464]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.545684
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4186e-05, 5.0664e-06],
        [1.9908e-05, 1.5140e-05],
        [2.0266e-06, 5.3585e-05],
        [3.5763e-07, 2.4199e-05],
        [2.3603e-05, 4.2081e-05],
        [1.5676e-05, 8.9407e-06],
        [9.1791e-06, 5.4836e-06],
        [5.9605e-07, 2.3663e-05],
        [1.3292e-05, 1.6809e-05],
        [3.0994e-06, 4.7147e-05],
        [2.3842e-07, 1.7822e-05],
        [5.3644e-07, 3.1888e-05],
        [2.0444e-05, 1.2994e-05],
        [2.9206e-06, 4.1723e-07],
        [1.2517e-06, 4.8816e-05],
        [1.7881e-07, 1.6212e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0906, 0.0392],
        [0.0766, 0.0464],
        [0.0450, 0.0790],
        [0.0440, 0.0807],
        [0.0621, 0.0572],
        [0.0820, 0.0433],
        [0.0811, 0.0438],
        [0.0445, 0.0799],
        [0.0675, 0.0527],
        [0.0461, 0.0770],
        [0.0440, 0.0808],
        [0.0441, 0.0806],
        [0.0800, 0.0444],
        [0.1041, 0.0341],
        [0.0445, 0.0799],
        [0.0439, 0.0810]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.281509
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1444e-05, 6.4373e-06],
        [1.6093e-06, 2.3842e-07],
        [1.1921e-06, 2.5630e-05],
        [1.3113e-06, 4.7147e-05],
        [2.3842e-07, 5.1260e-06],
        [1.1504e-05, 1.0490e-05],
        [3.1590e-05, 3.7193e-05],
        [1.0133e-06, 4.1187e-05],
        [1.3888e-05, 2.1994e-05],
        [1.3709e-06, 5.0724e-05],
        [3.3379e-06, 6.2525e-05],
        [1.2755e-05, 1.2159e-05],
        [2.1458e-06, 6.1452e-05],
        [2.3842e-07, 9.2387e-06],
        [2.9802e-07, 3.3915e-05],
        [1.8477e-06, 3.6597e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0902, 0.0402],
        [0.1136, 0.0319],
        [0.0497, 0.0729],
        [0.0488, 0.0742],
        [0.0497, 0.0729],
        [0.0802, 0.0452],
        [0.0752, 0.0481],
        [0.0487, 0.0744],
        [0.0700, 0.0517],
        [0.0488, 0.0742],
        [0.0500, 0.0724],
        [0.0793, 0.0457],
        [0.0492, 0.0737],
        [0.0487, 0.0743],
        [0.0480, 0.0755],
        [0.0499, 0.0726]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.350938
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0669e-05, 7.3314e-06],
        [8.3447e-07, 2.5094e-05],
        [1.7881e-06, 3.7670e-05],
        [5.9605e-07, 3.3200e-05],
        [2.8729e-05, 2.0564e-05],
        [2.1756e-05, 1.9491e-05],
        [2.6703e-05, 1.8358e-05],
        [1.8835e-05, 1.3769e-05],
        [1.4305e-06, 3.9637e-05],
        [3.3975e-06, 6.5863e-05],
        [8.9407e-07, 4.3333e-05],
        [1.7881e-07, 1.8239e-05],
        [1.9670e-06, 2.3842e-07],
        [2.4498e-05, 1.5080e-05],
        [1.2457e-05, 1.3649e-05],
        [1.5974e-05, 8.4639e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0756, 0.0473],
        [0.0432, 0.0828],
        [0.0437, 0.0817],
        [0.0425, 0.0840],
        [0.0749, 0.0477],
        [0.0708, 0.0504],
        [0.0756, 0.0473],
        [0.0745, 0.0480],
        [0.0433, 0.0826],
        [0.0439, 0.0814],
        [0.0426, 0.0838],
        [0.0422, 0.0847],
        [0.1020, 0.0350],
        [0.0776, 0.0460],
        [0.0673, 0.0530],
        [0.0803, 0.0445]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.351405
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0014e-05, 8.1241e-05],
        [1.3113e-05, 7.5102e-06],
        [3.5763e-07, 1.2636e-05],
        [2.3842e-07, 2.9624e-05],
        [1.8775e-05, 1.6570e-05],
        [9.5367e-07, 3.4988e-05],
        [1.4663e-05, 8.0466e-06],
        [1.5378e-05, 1.4663e-05],
        [1.0490e-05, 3.9935e-06],
        [1.4901e-06, 4.9353e-05],
        [2.8610e-06, 4.0650e-05],
        [1.7047e-05, 1.0312e-05],
        [1.3113e-06, 5.0187e-05],
        [8.3447e-07, 6.4135e-05],
        [1.0371e-05, 4.2915e-06],
        [4.7684e-07, 3.1769e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0497, 0.0720],
        [0.0841, 0.0425],
        [0.0458, 0.0782],
        [0.0449, 0.0797],
        [0.0758, 0.0472],
        [0.0457, 0.0783],
        [0.0849, 0.0421],
        [0.0743, 0.0482],
        [0.0919, 0.0389],
        [0.0459, 0.0780],
        [0.0476, 0.0752],
        [0.0831, 0.0431],
        [0.0457, 0.0783],
        [0.0451, 0.0793],
        [0.0904, 0.0396],
        [0.0452, 0.0792]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.410545
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.2200e-05, 3.1829e-05],
        [1.7881e-07, 7.0333e-06],
        [1.0133e-06, 5.1498e-05],
        [2.7537e-05, 1.3530e-05],
        [1.5080e-05, 6.1393e-06],
        [3.5763e-07, 2.3305e-05],
        [1.3113e-06, 3.7432e-05],
        [1.6391e-05, 8.3447e-06],
        [7.7486e-07, 3.3617e-05],
        [5.7220e-06, 8.8692e-05],
        [2.8610e-06, 6.9201e-05],
        [7.6890e-06, 6.8963e-05],
        [2.3842e-07, 2.4080e-05],
        [4.7684e-07, 2.2113e-05],
        [9.5367e-07, 5.1379e-05],
        [2.3067e-05, 2.2888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0853, 0.0424],
        [0.0495, 0.0732],
        [0.0492, 0.0736],
        [0.0943, 0.0384],
        [0.0982, 0.0368],
        [0.0490, 0.0739],
        [0.0499, 0.0725],
        [0.0936, 0.0387],
        [0.0493, 0.0733],
        [0.0513, 0.0706],
        [0.0502, 0.0721],
        [0.0533, 0.0678],
        [0.0487, 0.0743],
        [0.0493, 0.0734],
        [0.0491, 0.0736],
        [0.0797, 0.0454]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.352519
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4915e-05, 6.0201e-05],
        [1.7941e-05, 2.2650e-05],
        [4.2319e-06, 8.6367e-05],
        [5.9605e-07, 2.2233e-05],
        [2.8729e-05, 2.1696e-05],
        [1.8477e-06, 5.7340e-05],
        [2.2888e-05, 1.2815e-05],
        [4.7684e-07, 2.3901e-05],
        [4.7684e-07, 2.0683e-05],
        [2.2054e-06, 3.9876e-05],
        [2.3186e-05, 1.1027e-05],
        [2.7776e-05, 1.6093e-05],
        [2.0444e-05, 1.3292e-05],
        [1.9848e-05, 8.8215e-06],
        [9.0599e-06, 7.6890e-06],
        [0.0000e+00, 1.9670e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0578, 0.0624],
        [0.0672, 0.0538],
        [0.0452, 0.0798],
        [0.0443, 0.0815],
        [0.0763, 0.0473],
        [0.0445, 0.0811],
        [0.0820, 0.0441],
        [0.0440, 0.0820],
        [0.0441, 0.0818],
        [0.0455, 0.0794],
        [0.0850, 0.0425],
        [0.0813, 0.0444],
        [0.0791, 0.0456],
        [0.0863, 0.0419],
        [0.0741, 0.0487],
        [0.0432, 0.0837]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.324309
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8743e-06, 6.6340e-05],
        [9.5367e-06, 3.9339e-06],
        [7.7486e-07, 4.1604e-05],
        [8.5235e-06, 5.6028e-06],
        [9.3579e-06, 4.0531e-06],
        [1.5974e-05, 1.7822e-05],
        [3.5763e-07, 2.1517e-05],
        [1.9789e-05, 1.0133e-05],
        [3.2663e-05, 1.7762e-05],
        [1.7881e-07, 1.7524e-05],
        [1.1325e-06, 3.9220e-05],
        [6.5565e-07, 3.3379e-05],
        [8.5235e-06, 5.5850e-05],
        [2.6822e-06, 8.3447e-07],
        [1.5497e-06, 4.9174e-05],
        [9.1195e-06, 5.9605e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0794],
        [0.0859, 0.0414],
        [0.0431, 0.0824],
        [0.0774, 0.0459],
        [0.0851, 0.0418],
        [0.0679, 0.0523],
        [0.0430, 0.0826],
        [0.0820, 0.0433],
        [0.0809, 0.0439],
        [0.0428, 0.0831],
        [0.0435, 0.0816],
        [0.0432, 0.0823],
        [0.0483, 0.0735],
        [0.0908, 0.0391],
        [0.0437, 0.0814],
        [0.0775, 0.0458]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.459966
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8133e-05, 2.1935e-05],
        [1.3173e-05, 8.6427e-06],
        [3.8743e-06, 5.8115e-05],
        [1.2159e-05, 5.6624e-06],
        [2.0802e-05, 1.3649e-05],
        [1.1921e-07, 1.3351e-05],
        [1.7881e-07, 1.3769e-05],
        [4.5896e-06, 7.8499e-05],
        [5.9605e-07, 3.4630e-05],
        [3.3379e-06, 5.4300e-05],
        [9.5367e-07, 2.5928e-05],
        [1.4603e-05, 9.3579e-06],
        [1.3411e-05, 7.3910e-06],
        [1.1563e-05, 6.7353e-06],
        [2.5630e-06, 5.6982e-05],
        [1.4305e-06, 1.7881e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0739, 0.0479],
        [0.0770, 0.0460],
        [0.0448, 0.0790],
        [0.0833, 0.0425],
        [0.0770, 0.0460],
        [0.0425, 0.0833],
        [0.0427, 0.0830],
        [0.0445, 0.0796],
        [0.0428, 0.0827],
        [0.0446, 0.0793],
        [0.0436, 0.0811],
        [0.0775, 0.0457],
        [0.0802, 0.0441],
        [0.0792, 0.0447],
        [0.0440, 0.0805],
        [0.1024, 0.0346]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.308570
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.1921e-07, 1.2517e-05],
        [1.8835e-05, 1.4007e-05],
        [2.1815e-05, 1.3232e-05],
        [2.1636e-05, 1.6570e-05],
        [7.1526e-07, 1.3769e-05],
        [2.1398e-05, 4.7088e-05],
        [2.1696e-05, 9.5367e-06],
        [1.3411e-05, 8.1658e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0795, 0.1842],
        [0.1398, 0.1048],
        [0.1468, 0.0998],
        [0.1388, 0.1055],
        [0.0828, 0.1770],
        [0.1077, 0.1360],
        [0.1578, 0.0928],
        [0.1467, 0.0999]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.150263
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 6 and batchsize 16: 0:00:04.811776
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_6']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06],
        [7.3910e-06, 7.1526e-06]], device='cuda:0') torch.Size([156, 2])
answers_probs just softmax dim 0: tensor([[0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064]], device='cuda:0')
tensor([[0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064],
        [0.0064, 0.0064]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 7 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 2.0504e-05],
        [2.2054e-06, 3.6538e-05],
        [3.3975e-06, 5.3644e-07],
        [9.5367e-07, 4.1366e-05],
        [2.2471e-05, 1.2040e-05],
        [1.3113e-06, 4.5478e-05],
        [2.4855e-05, 1.2100e-05],
        [3.6478e-05, 1.9372e-05],
        [2.6524e-05, 1.1563e-05],
        [5.9605e-07, 2.4736e-05],
        [1.7881e-06, 4.2796e-05],
        [1.9014e-05, 1.3292e-05],
        [2.1219e-05, 5.0068e-06],
        [1.5438e-05, 5.8413e-06],
        [1.0848e-05, 4.4107e-06],
        [1.3828e-05, 8.9407e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0387, 0.0907],
        [0.0402, 0.0874],
        [0.0900, 0.0390],
        [0.0388, 0.0905],
        [0.0728, 0.0483],
        [0.0390, 0.0900],
        [0.0743, 0.0472],
        [0.0729, 0.0482],
        [0.0761, 0.0461],
        [0.0388, 0.0904],
        [0.0395, 0.0889],
        [0.0683, 0.0514],
        [0.0852, 0.0412],
        [0.0784, 0.0448],
        [0.0772, 0.0455],
        [0.0696, 0.0504]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.288729
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 4.3690e-05],
        [1.4663e-05, 6.6757e-06],
        [1.3888e-05, 5.2452e-06],
        [2.9802e-05, 1.5616e-05],
        [4.7684e-07, 2.2888e-05],
        [1.3411e-05, 4.7684e-06],
        [2.0325e-05, 7.5698e-06],
        [3.9458e-05, 2.3007e-05],
        [8.3447e-07, 3.2783e-05],
        [1.6868e-05, 6.9141e-06],
        [2.4438e-05, 1.0014e-05],
        [1.0729e-06, 3.3617e-05],
        [2.2054e-06, 3.6120e-05],
        [7.7486e-07, 2.5511e-05],
        [1.8477e-06, 4.3809e-05],
        [4.0531e-06, 7.7486e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0403, 0.0864],
        [0.0775, 0.0450],
        [0.0806, 0.0433],
        [0.0751, 0.0464],
        [0.0398, 0.0876],
        [0.0815, 0.0428],
        [0.0808, 0.0432],
        [0.0733, 0.0476],
        [0.0400, 0.0872],
        [0.0792, 0.0440],
        [0.0792, 0.0440],
        [0.0402, 0.0867],
        [0.0413, 0.0844],
        [0.0402, 0.0868],
        [0.0406, 0.0859],
        [0.0903, 0.0386]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.436788
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 2.5928e-05],
        [1.8954e-05, 1.0252e-05],
        [1.9848e-05, 1.4544e-05],
        [2.9445e-05, 1.0192e-05],
        [5.9605e-07, 2.4021e-05],
        [1.3709e-05, 3.9339e-06],
        [1.5795e-05, 1.1742e-05],
        [1.1325e-06, 6.1035e-05],
        [6.5565e-07, 2.7180e-05],
        [1.2517e-06, 3.5107e-05],
        [2.2352e-05, 3.0279e-05],
        [1.9670e-05, 1.0610e-05],
        [1.5497e-06, 3.9577e-05],
        [1.4603e-05, 4.0531e-06],
        [4.1127e-06, 4.7684e-07],
        [1.1921e-07, 1.2100e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0411, 0.0850],
        [0.0765, 0.0456],
        [0.0712, 0.0490],
        [0.0841, 0.0415],
        [0.0410, 0.0852],
        [0.0870, 0.0401],
        [0.0710, 0.0492],
        [0.0407, 0.0857],
        [0.0409, 0.0853],
        [0.0414, 0.0844],
        [0.0612, 0.0571],
        [0.0766, 0.0456],
        [0.0415, 0.0841],
        [0.0875, 0.0399],
        [0.0980, 0.0356],
        [0.0404, 0.0865]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.415415
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 8.1658e-06],
        [2.3246e-06, 4.1544e-05],
        [2.5392e-05, 1.0669e-05],
        [2.7418e-06, 5.1677e-05],
        [2.0385e-05, 9.1195e-06],
        [2.4557e-05, 6.9141e-06],
        [1.0371e-05, 6.3598e-05],
        [1.1981e-05, 5.1260e-06],
        [1.7881e-06, 4.5776e-05],
        [1.6510e-05, 5.3644e-06],
        [6.5565e-07, 2.8014e-05],
        [1.8239e-05, 1.1146e-05],
        [2.2292e-05, 1.7107e-05],
        [1.6749e-05, 4.2915e-06],
        [7.7486e-07, 2.7835e-05],
        [1.5795e-05, 2.0564e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0415, 0.0851],
        [0.0420, 0.0842],
        [0.0805, 0.0439],
        [0.0419, 0.0844],
        [0.0795, 0.0445],
        [0.0869, 0.0407],
        [0.0458, 0.0772],
        [0.0802, 0.0441],
        [0.0413, 0.0855],
        [0.0847, 0.0417],
        [0.0407, 0.0868],
        [0.0741, 0.0477],
        [0.0701, 0.0504],
        [0.0883, 0.0400],
        [0.0409, 0.0864],
        [0.0615, 0.0575]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.409573
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4571e-06, 5.6088e-05],
        [2.4438e-06, 4.5180e-05],
        [2.6703e-05, 2.3961e-05],
        [2.8610e-06, 4.7684e-07],
        [3.2187e-06, 6.3241e-05],
        [1.3947e-05, 9.5963e-06],
        [1.7881e-07, 1.2696e-05],
        [3.4571e-06, 4.3273e-05],
        [1.2815e-05, 4.4107e-06],
        [5.3644e-07, 2.1279e-05],
        [5.2452e-06, 7.7367e-05],
        [3.2783e-06, 4.1306e-05],
        [3.0458e-05, 2.8372e-05],
        [2.0862e-05, 7.0333e-06],
        [2.1160e-05, 6.5565e-06],
        [1.7107e-05, 5.4240e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0433, 0.0810],
        [0.0430, 0.0815],
        [0.0693, 0.0507],
        [0.0964, 0.0364],
        [0.0429, 0.0818],
        [0.0739, 0.0475],
        [0.0415, 0.0846],
        [0.0440, 0.0797],
        [0.0860, 0.0408],
        [0.0419, 0.0837],
        [0.0436, 0.0806],
        [0.0440, 0.0797],
        [0.0686, 0.0511],
        [0.0864, 0.0406],
        [0.0877, 0.0400],
        [0.0874, 0.0402]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.408175
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-06, 1.4305e-06],
        [2.3842e-07, 2.3544e-05],
        [1.9252e-05, 6.9737e-06],
        [2.8014e-06, 6.2644e-05],
        [1.1027e-05, 3.1590e-06],
        [5.9605e-07, 2.4676e-05],
        [1.4305e-06, 4.1544e-05],
        [1.3947e-05, 4.5896e-06],
        [1.6868e-05, 6.1393e-06],
        [1.1921e-06, 4.7445e-05],
        [1.9073e-06, 4.5478e-05],
        [7.1526e-07, 2.9206e-05],
        [4.7684e-07, 2.4796e-05],
        [1.8239e-05, 1.2338e-05],
        [3.0398e-06, 6.7770e-05],
        [3.3975e-06, 3.3975e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0926, 0.0378],
        [0.0444, 0.0787],
        [0.0916, 0.0382],
        [0.0459, 0.0762],
        [0.0957, 0.0366],
        [0.0450, 0.0777],
        [0.0455, 0.0769],
        [0.0933, 0.0375],
        [0.0915, 0.0382],
        [0.0451, 0.0776],
        [0.0458, 0.0764],
        [0.0450, 0.0777],
        [0.0448, 0.0780],
        [0.0798, 0.0438],
        [0.0459, 0.0762],
        [0.0482, 0.0726]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.482549
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7345e-05, 7.0930e-06],
        [7.7486e-06, 7.6294e-05],
        [3.5763e-07, 1.9491e-05],
        [1.7166e-05, 4.7088e-06],
        [1.5676e-05, 1.1206e-05],
        [3.3617e-05, 2.1875e-05],
        [2.8014e-06, 4.5776e-05],
        [4.1723e-07, 3.3081e-05],
        [2.5392e-05, 1.1206e-05],
        [2.6822e-06, 5.3644e-05],
        [5.9605e-07, 2.3663e-05],
        [1.4961e-05, 6.9141e-06],
        [1.2159e-05, 3.7551e-06],
        [1.0729e-05, 5.8413e-06],
        [1.1325e-05, 4.7684e-06],
        [2.4438e-06, 1.3590e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0803, 0.0441],
        [0.0433, 0.0818],
        [0.0402, 0.0881],
        [0.0865, 0.0409],
        [0.0707, 0.0500],
        [0.0723, 0.0489],
        [0.0418, 0.0846],
        [0.0400, 0.0885],
        [0.0790, 0.0448],
        [0.0414, 0.0855],
        [0.0405, 0.0875],
        [0.0782, 0.0452],
        [0.0847, 0.0418],
        [0.0754, 0.0469],
        [0.0798, 0.0444],
        [0.0460, 0.0770]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.391894
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 2.4080e-05],
        [9.0599e-06, 2.8014e-06],
        [2.0862e-06, 4.7684e-05],
        [1.2934e-05, 6.1393e-06],
        [1.1921e-06, 3.3617e-05],
        [2.5570e-05, 1.3769e-05],
        [2.7120e-05, 5.3525e-05],
        [4.2915e-06, 6.0976e-05],
        [4.0531e-06, 6.2048e-05],
        [3.8743e-06, 4.7624e-05],
        [2.9206e-05, 1.1683e-05],
        [1.5080e-05, 3.9339e-06],
        [4.7684e-07, 2.7061e-05],
        [2.8729e-05, 1.0014e-05],
        [3.5763e-06, 4.1723e-07],
        [1.4305e-06, 3.8803e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0421, 0.0826],
        [0.0872, 0.0399],
        [0.0424, 0.0821],
        [0.0801, 0.0435],
        [0.0420, 0.0827],
        [0.0778, 0.0447],
        [0.0569, 0.0612],
        [0.0434, 0.0802],
        [0.0432, 0.0805],
        [0.0438, 0.0794],
        [0.0830, 0.0419],
        [0.0898, 0.0387],
        [0.0413, 0.0842],
        [0.0853, 0.0408],
        [0.0995, 0.0350],
        [0.0421, 0.0826]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.434676
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.8120e-05],
        [2.8372e-05, 2.4259e-05],
        [2.1219e-05, 6.3181e-06],
        [3.2187e-06, 5.3287e-05],
        [2.5034e-06, 4.9770e-05],
        [4.7684e-07, 2.7776e-05],
        [5.3644e-07, 8.9407e-06],
        [4.7684e-07, 1.3292e-05],
        [2.4080e-05, 8.8811e-06],
        [1.0729e-05, 2.0266e-06],
        [1.5795e-05, 5.6624e-06],
        [1.8179e-05, 1.3947e-05],
        [2.1815e-05, 1.0073e-05],
        [1.7881e-07, 1.4067e-05],
        [2.5928e-05, 8.2850e-06],
        [2.5213e-05, 1.8895e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0400, 0.0875],
        [0.0679, 0.0516],
        [0.0856, 0.0409],
        [0.0419, 0.0835],
        [0.0416, 0.0843],
        [0.0403, 0.0869],
        [0.0419, 0.0835],
        [0.0410, 0.0854],
        [0.0822, 0.0426],
        [0.0919, 0.0381],
        [0.0827, 0.0423],
        [0.0698, 0.0502],
        [0.0785, 0.0446],
        [0.0401, 0.0873],
        [0.0845, 0.0414],
        [0.0702, 0.0499]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.577944
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.3511e-06, 5.9605e-07],
        [1.4961e-05, 1.1563e-05],
        [1.9073e-06, 3.6836e-05],
        [1.0848e-05, 2.9206e-06],
        [2.4915e-05, 1.0729e-05],
        [4.7684e-06, 6.4194e-05],
        [1.6689e-05, 6.3181e-06],
        [1.5736e-05, 1.1802e-05],
        [1.8477e-06, 5.0247e-05],
        [2.3842e-07, 1.6451e-05],
        [2.0862e-06, 4.1783e-05],
        [2.3842e-07, 1.4424e-05],
        [1.6212e-05, 4.8339e-05],
        [1.3769e-05, 5.7936e-05],
        [1.6689e-06, 4.0233e-05],
        [2.0921e-05, 1.1921e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1009, 0.0350],
        [0.0736, 0.0480],
        [0.0440, 0.0803],
        [0.0921, 0.0384],
        [0.0842, 0.0419],
        [0.0449, 0.0787],
        [0.0865, 0.0409],
        [0.0742, 0.0477],
        [0.0434, 0.0814],
        [0.0425, 0.0832],
        [0.0439, 0.0805],
        [0.0426, 0.0830],
        [0.0538, 0.0656],
        [0.0507, 0.0696],
        [0.0436, 0.0811],
        [0.0792, 0.0446]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.470713
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.8280e-06, 5.5432e-05],
        [1.5140e-05, 9.2387e-06],
        [1.3530e-05, 5.8413e-06],
        [2.4676e-05, 8.1062e-06],
        [1.9670e-06, 4.1783e-05],
        [7.1526e-07, 3.7432e-05],
        [1.7881e-07, 1.8060e-05],
        [1.2517e-06, 3.9518e-05],
        [9.9540e-06, 4.5896e-06],
        [3.3379e-06, 2.9802e-07],
        [2.0862e-06, 3.1114e-05],
        [1.0729e-06, 4.1544e-05],
        [1.6689e-06, 2.9206e-05],
        [2.2292e-05, 4.9531e-05],
        [1.7881e-07, 1.5616e-05],
        [1.9550e-05, 8.0466e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0467, 0.0750],
        [0.0801, 0.0437],
        [0.0866, 0.0404],
        [0.0914, 0.0383],
        [0.0450, 0.0777],
        [0.0439, 0.0798],
        [0.0435, 0.0805],
        [0.0444, 0.0788],
        [0.0854, 0.0410],
        [0.1078, 0.0324],
        [0.0459, 0.0763],
        [0.0442, 0.0792],
        [0.0455, 0.0770],
        [0.0587, 0.0596],
        [0.0436, 0.0803],
        [0.0874, 0.0400]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.480093
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1829e-05, 1.0729e-05],
        [3.5882e-05, 3.1650e-05],
        [3.9339e-06, 4.1723e-07],
        [8.6427e-06, 4.7743e-05],
        [1.7345e-05, 6.5565e-06],
        [1.4246e-05, 4.7684e-06],
        [2.8908e-05, 3.0756e-05],
        [3.2783e-06, 4.8101e-05],
        [2.2888e-05, 8.4043e-06],
        [2.3246e-06, 3.4750e-05],
        [8.3447e-07, 2.3127e-05],
        [2.2054e-06, 5.1260e-05],
        [1.4961e-05, 5.4240e-06],
        [2.3842e-07, 2.4378e-05],
        [1.1921e-06, 3.5882e-05],
        [2.1994e-05, 1.2517e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0827, 0.0425],
        [0.0666, 0.0527],
        [0.0966, 0.0363],
        [0.0456, 0.0770],
        [0.0808, 0.0434],
        [0.0828, 0.0424],
        [0.0635, 0.0553],
        [0.0417, 0.0842],
        [0.0813, 0.0432],
        [0.0417, 0.0842],
        [0.0405, 0.0866],
        [0.0408, 0.0861],
        [0.0815, 0.0431],
        [0.0395, 0.0888],
        [0.0404, 0.0869],
        [0.0740, 0.0474]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.409682
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.7551e-06, 6.2764e-05],
        [5.9605e-07, 3.7074e-05],
        [8.8215e-06, 6.4492e-05],
        [5.3644e-07, 2.7299e-05],
        [3.2306e-05, 1.1444e-05],
        [1.0729e-06, 3.4153e-05],
        [1.3411e-05, 5.2452e-06],
        [3.5763e-07, 6.4969e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1012, 0.1415],
        [0.0972, 0.1473],
        [0.1079, 0.1327],
        [0.0976, 0.1468],
        [0.2002, 0.0715],
        [0.0986, 0.1452],
        [0.1964, 0.0729],
        [0.1008, 0.1421]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.220210
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 7 and batchsize 16: 0:00:05.442322
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_7']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06],
        [7.2718e-06, 6.3777e-06]], device='cuda:0') torch.Size([127, 2])
answers_probs just softmax dim 0: tensor([[0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079]], device='cuda:0')
tensor([[0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 8 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 1.9193e-05],
        [1.8477e-06, 1.1921e-07],
        [2.3842e-07, 1.6451e-05],
        [4.2319e-06, 2.0862e-06],
        [4.8280e-06, 1.7285e-06],
        [1.3113e-06, 3.4451e-05],
        [1.2457e-05, 1.6987e-05],
        [1.7881e-07, 1.3292e-05],
        [7.7486e-07, 2.2292e-05],
        [1.9073e-06, 4.2856e-05],
        [6.1393e-06, 3.4571e-06],
        [4.7684e-07, 2.6524e-05],
        [3.4571e-06, 3.8385e-05],
        [2.3842e-07, 1.8120e-05],
        [1.0788e-05, 8.1062e-06],
        [1.6391e-05, 1.6987e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0450, 0.0785],
        [0.1127, 0.0313],
        [0.0447, 0.0790],
        [0.0860, 0.0410],
        [0.0920, 0.0384],
        [0.0457, 0.0773],
        [0.0672, 0.0525],
        [0.0446, 0.0791],
        [0.0455, 0.0775],
        [0.0460, 0.0768],
        [0.0835, 0.0423],
        [0.0448, 0.0788],
        [0.0478, 0.0738],
        [0.0446, 0.0791],
        [0.0779, 0.0453],
        [0.0720, 0.0491]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.400697
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.2994e-05],
        [7.5698e-06, 4.0531e-06],
        [1.1325e-06, 2.5749e-05],
        [4.7684e-07, 1.8895e-05],
        [4.9472e-06, 3.2187e-06],
        [3.8743e-06, 1.8477e-06],
        [1.2159e-05, 5.3048e-06],
        [1.7881e-07, 1.4067e-05],
        [7.1526e-06, 2.9802e-06],
        [8.4043e-06, 3.0994e-06],
        [7.9870e-06, 3.9339e-06],
        [1.1921e-06, 3.1352e-05],
        [2.3842e-07, 1.6451e-05],
        [7.5102e-06, 5.7817e-06],
        [5.6624e-06, 3.4571e-06],
        [3.2187e-06, 4.1723e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0390, 0.0902],
        [0.0739, 0.0477],
        [0.0402, 0.0877],
        [0.0395, 0.0892],
        [0.0706, 0.0499],
        [0.0758, 0.0465],
        [0.0772, 0.0456],
        [0.0390, 0.0903],
        [0.0780, 0.0451],
        [0.0799, 0.0440],
        [0.0752, 0.0468],
        [0.0399, 0.0881],
        [0.0391, 0.0901],
        [0.0677, 0.0520],
        [0.0716, 0.0491],
        [0.0933, 0.0377]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.348982
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.8413e-06, 2.6822e-06],
        [2.9802e-07, 2.2233e-05],
        [3.5763e-06, 4.7684e-07],
        [5.7220e-06, 5.4240e-06],
        [5.9605e-08, 8.2254e-06],
        [1.7881e-07, 1.4186e-05],
        [7.7486e-06, 3.7551e-06],
        [4.7684e-07, 2.3961e-05],
        [4.1723e-07, 1.4722e-05],
        [2.9802e-07, 2.5392e-05],
        [6.4969e-06, 2.0266e-06],
        [1.1742e-05, 1.1683e-05],
        [1.1384e-05, 2.5511e-05],
        [5.9605e-08, 1.1325e-05],
        [8.9407e-07, 2.2411e-05],
        [8.6427e-06, 4.8280e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0854, 0.0412],
        [0.0436, 0.0807],
        [0.1041, 0.0338],
        [0.0719, 0.0490],
        [0.0434, 0.0812],
        [0.0436, 0.0808],
        [0.0844, 0.0417],
        [0.0439, 0.0802],
        [0.0443, 0.0796],
        [0.0436, 0.0809],
        [0.0923, 0.0382],
        [0.0711, 0.0495],
        [0.0586, 0.0601],
        [0.0433, 0.0814],
        [0.0447, 0.0787],
        [0.0818, 0.0431]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.438531
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 3.7491e-05],
        [7.5698e-06, 5.3048e-06],
        [3.6955e-06, 1.2517e-06],
        [4.1723e-07, 2.5213e-05],
        [2.3842e-07, 1.4007e-05],
        [2.8014e-06, 2.9802e-07],
        [6.5565e-06, 3.7551e-06],
        [1.2577e-05, 7.5698e-06],
        [3.5763e-07, 1.7047e-05],
        [8.2850e-06, 6.2585e-06],
        [5.3048e-06, 2.7478e-05],
        [4.7684e-07, 1.9193e-05],
        [5.6624e-06, 2.5034e-06],
        [4.5300e-06, 2.1458e-06],
        [5.9605e-08, 7.5698e-06],
        [1.0490e-05, 5.2452e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0409, 0.0860],
        [0.0717, 0.0490],
        [0.0841, 0.0418],
        [0.0405, 0.0869],
        [0.0405, 0.0868],
        [0.0983, 0.0358],
        [0.0752, 0.0468],
        [0.0743, 0.0473],
        [0.0406, 0.0865],
        [0.0704, 0.0500],
        [0.0468, 0.0751],
        [0.0408, 0.0862],
        [0.0797, 0.0441],
        [0.0785, 0.0448],
        [0.0401, 0.0876],
        [0.0776, 0.0453]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.409394
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.3910e-06, 3.3975e-06],
        [4.1723e-07, 2.2054e-05],
        [2.8014e-06, 4.3154e-05],
        [2.0266e-06, 1.1921e-07],
        [5.4836e-06, 2.9206e-06],
        [1.1921e-07, 1.1086e-05],
        [2.1458e-06, 2.5630e-05],
        [9.5367e-07, 2.6703e-05],
        [1.0073e-05, 1.0729e-05],
        [5.3644e-07, 2.6643e-05],
        [4.4703e-06, 2.4438e-06],
        [3.5763e-07, 2.0444e-05],
        [6.8545e-06, 5.0664e-06],
        [5.9605e-06, 5.1856e-06],
        [6.0201e-06, 5.4836e-06],
        [5.6624e-06, 2.8610e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0814, 0.0435],
        [0.0418, 0.0848],
        [0.0436, 0.0813],
        [0.1055, 0.0336],
        [0.0788, 0.0450],
        [0.0415, 0.0855],
        [0.0443, 0.0800],
        [0.0425, 0.0835],
        [0.0666, 0.0532],
        [0.0419, 0.0847],
        [0.0783, 0.0453],
        [0.0417, 0.0849],
        [0.0729, 0.0486],
        [0.0701, 0.0506],
        [0.0693, 0.0512],
        [0.0797, 0.0445]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.440994
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2100e-05, 2.5988e-05],
        [4.1723e-06, 1.4901e-06],
        [6.5565e-07, 2.4915e-05],
        [9.2983e-06, 5.2452e-06],
        [2.7418e-06, 1.4305e-06],
        [3.5763e-07, 1.9193e-05],
        [6.3777e-06, 1.5497e-06],
        [4.1723e-07, 2.6524e-05],
        [1.1921e-07, 1.2040e-05],
        [7.6294e-06, 4.7088e-06],
        [4.4703e-06, 2.7299e-05],
        [5.9605e-08, 1.0431e-05],
        [8.8215e-06, 4.8280e-06],
        [5.4240e-06, 2.2650e-06],
        [6.3777e-06, 3.1590e-06],
        [6.5565e-07, 3.0994e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0561, 0.0631],
        [0.0852, 0.0415],
        [0.0419, 0.0844],
        [0.0773, 0.0457],
        [0.0787, 0.0449],
        [0.0415, 0.0851],
        [0.0912, 0.0388],
        [0.0414, 0.0853],
        [0.0412, 0.0858],
        [0.0757, 0.0467],
        [0.0470, 0.0753],
        [0.0410, 0.0861],
        [0.0779, 0.0454],
        [0.0826, 0.0428],
        [0.0796, 0.0444],
        [0.0417, 0.0849]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.482022
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.3471e-05],
        [4.6492e-06, 4.7684e-06],
        [2.3842e-07, 1.7464e-05],
        [6.3181e-06, 2.0266e-06],
        [5.4240e-06, 6.0797e-06],
        [1.3769e-05, 6.8545e-06],
        [5.9605e-06, 2.0862e-06],
        [1.1921e-07, 1.0610e-05],
        [6.9737e-06, 4.4107e-06],
        [7.7486e-06, 1.1384e-05],
        [2.3842e-07, 1.9193e-05],
        [1.9073e-06, 4.0472e-05],
        [2.9802e-07, 1.9372e-05],
        [1.0550e-05, 4.1723e-06],
        [5.9009e-06, 1.9073e-06],
        [1.9073e-06, 1.7881e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0398, 0.0882],
        [0.0641, 0.0548],
        [0.0397, 0.0885],
        [0.0834, 0.0421],
        [0.0627, 0.0560],
        [0.0763, 0.0460],
        [0.0821, 0.0428],
        [0.0396, 0.0887],
        [0.0722, 0.0486],
        [0.0587, 0.0598],
        [0.0396, 0.0886],
        [0.0409, 0.0858],
        [0.0397, 0.0884],
        [0.0801, 0.0438],
        [0.0833, 0.0421],
        [0.0976, 0.0360]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.349272
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 2.6405e-05],
        [1.0908e-05, 4.5300e-06],
        [4.1723e-07, 8.0466e-06],
        [5.4836e-06, 2.2054e-06],
        [9.6560e-06, 8.3447e-06],
        [1.1325e-06, 2.2888e-05],
        [5.6624e-06, 1.3113e-06],
        [1.0729e-05, 6.7949e-06],
        [1.1325e-06, 2.7120e-05],
        [4.1723e-07, 3.5167e-05],
        [5.3644e-06, 2.6226e-06],
        [5.3644e-07, 1.6272e-05],
        [1.3709e-06, 2.8014e-05],
        [1.1921e-07, 1.2457e-05],
        [2.3842e-07, 1.2875e-05],
        [4.7684e-07, 2.4915e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0761],
        [0.0916, 0.0386],
        [0.0475, 0.0745],
        [0.0922, 0.0384],
        [0.0772, 0.0458],
        [0.0473, 0.0747],
        [0.1017, 0.0348],
        [0.0833, 0.0425],
        [0.0470, 0.0752],
        [0.0457, 0.0774],
        [0.0884, 0.0400],
        [0.0466, 0.0759],
        [0.0473, 0.0747],
        [0.0456, 0.0776],
        [0.0460, 0.0769],
        [0.0460, 0.0769]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.320823
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.3649e-05],
        [9.5367e-06, 4.3511e-06],
        [1.3769e-05, 5.3048e-06],
        [5.9605e-06, 3.4571e-06],
        [3.5763e-07, 1.9491e-05],
        [1.4305e-06, 3.4869e-05],
        [1.7881e-07, 1.3649e-05],
        [1.1921e-07, 6.1989e-06],
        [3.4571e-06, 3.3259e-05],
        [1.1921e-07, 1.7524e-05],
        [1.7881e-07, 1.5020e-05],
        [3.5763e-07, 7.0930e-06],
        [4.1723e-06, 3.6359e-06],
        [5.3048e-06, 2.8610e-06],
        [1.1265e-05, 5.4836e-06],
        [7.1526e-07, 2.9385e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0463, 0.0771],
        [0.0912, 0.0391],
        [0.0944, 0.0378],
        [0.0864, 0.0413],
        [0.0467, 0.0764],
        [0.0477, 0.0747],
        [0.0465, 0.0767],
        [0.0467, 0.0763],
        [0.0504, 0.0708],
        [0.0462, 0.0772],
        [0.0464, 0.0768],
        [0.0481, 0.0741],
        [0.0783, 0.0456],
        [0.0878, 0.0406],
        [0.0899, 0.0397],
        [0.0470, 0.0759]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.392320
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.8835e-05],
        [3.5763e-06, 2.7418e-06],
        [3.8743e-06, 2.1458e-06],
        [5.1260e-06, 2.3842e-06],
        [4.3511e-06, 1.9670e-06],
        [1.1683e-05, 5.0068e-06],
        [2.9802e-07, 1.2875e-05],
        [1.1921e-07, 9.0599e-06],
        [4.7684e-07, 2.4259e-05],
        [1.2517e-05, 6.5565e-06],
        [1.2815e-05, 5.0068e-06],
        [1.3113e-06, 3.6240e-05],
        [4.7684e-07, 2.1219e-05],
        [8.6427e-06, 5.0068e-06],
        [1.1921e-07, 1.7822e-05],
        [4.2915e-06, 1.4901e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0407, 0.0865],
        [0.0712, 0.0494],
        [0.0769, 0.0457],
        [0.0800, 0.0440],
        [0.0805, 0.0437],
        [0.0814, 0.0432],
        [0.0413, 0.0851],
        [0.0410, 0.0859],
        [0.0412, 0.0854],
        [0.0779, 0.0452],
        [0.0830, 0.0424],
        [0.0419, 0.0841],
        [0.0413, 0.0852],
        [0.0761, 0.0462],
        [0.0407, 0.0865],
        [0.0849, 0.0414]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.435207
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 3.9637e-05],
        [7.3314e-06, 2.5630e-06],
        [1.1921e-07, 1.7703e-05],
        [5.9605e-08, 8.8215e-06],
        [4.2319e-06, 1.4305e-06],
        [1.3947e-05, 1.7524e-05],
        [8.2850e-06, 6.9141e-06],
        [2.9802e-07, 1.5080e-05],
        [1.0133e-06, 3.1412e-05],
        [9.7156e-06, 1.3053e-05],
        [3.8743e-06, 2.9802e-05],
        [3.5763e-06, 1.0729e-06],
        [7.4506e-06, 2.4438e-06],
        [2.3842e-07, 5.7817e-06],
        [6.5565e-07, 2.4855e-05],
        [7.1526e-07, 2.6941e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0776],
        [0.0928, 0.0382],
        [0.0445, 0.0797],
        [0.0445, 0.0797],
        [0.0933, 0.0380],
        [0.0689, 0.0515],
        [0.0763, 0.0465],
        [0.0451, 0.0787],
        [0.0456, 0.0778],
        [0.0677, 0.0524],
        [0.0496, 0.0715],
        [0.0954, 0.0372],
        [0.0939, 0.0378],
        [0.0460, 0.0771],
        [0.0454, 0.0782],
        [0.0454, 0.0782]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.550885
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 1.9073e-05],
        [7.1526e-07, 2.3782e-05],
        [5.9605e-08, 1.0431e-05],
        [1.3530e-05, 9.2983e-06],
        [4.8280e-06, 1.6093e-06],
        [2.3842e-07, 1.6868e-05],
        [2.3842e-07, 1.4782e-05],
        [5.9605e-08, 1.0252e-05],
        [1.1206e-05, 8.7023e-06],
        [5.6624e-06, 2.6226e-06],
        [8.3447e-06, 3.9339e-06],
        [1.3053e-05, 2.7359e-05],
        [4.1723e-06, 4.1127e-06],
        [5.9009e-06, 2.5630e-06],
        [3.6359e-06, 7.7486e-07],
        [1.0133e-06, 3.2067e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0433, 0.0817],
        [0.0427, 0.0828],
        [0.0417, 0.0848],
        [0.0750, 0.0471],
        [0.0878, 0.0403],
        [0.0421, 0.0841],
        [0.0421, 0.0839],
        [0.0417, 0.0848],
        [0.0728, 0.0486],
        [0.0822, 0.0430],
        [0.0819, 0.0432],
        [0.0573, 0.0617],
        [0.0686, 0.0515],
        [0.0833, 0.0425],
        [0.0946, 0.0374],
        [0.0428, 0.0827]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.409982
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.4571e-06, 4.7684e-07],
        [2.3842e-07, 1.2636e-05],
        [2.0862e-06, 3.3915e-05],
        [1.2517e-06, 2.7239e-05],
        [4.9472e-06, 3.7551e-06],
        [7.7486e-06, 2.7418e-06],
        [8.1062e-06, 4.4703e-06],
        [9.5367e-07, 2.5570e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1953, 0.0712],
        [0.0826, 0.1683],
        [0.0859, 0.1618],
        [0.0847, 0.1641],
        [0.1432, 0.0971],
        [0.1697, 0.0819],
        [0.1545, 0.0900],
        [0.0841, 0.1654]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.221301
acc:  0.955
Time taken to execute the en SA task with prompt type active, variation 8 and batchsize 16: 0:00:05.215686
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_8']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06]], device='cuda:0') torch.Size([124, 2])
answers_probs just softmax dim 0: tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA active 9 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 5.6863e-05],
        [8.7023e-06, 8.1718e-05],
        [1.9670e-06, 2.3842e-07],
        [1.5497e-05, 1.0490e-05],
        [2.7716e-05, 1.3471e-05],
        [2.0802e-05, 9.7156e-06],
        [2.1517e-05, 1.2279e-05],
        [2.1458e-06, 5.2273e-05],
        [2.4498e-05, 2.4676e-05],
        [2.7359e-05, 1.7941e-05],
        [1.4067e-05, 5.5432e-06],
        [9.5367e-06, 6.7949e-06],
        [1.1921e-06, 5.2214e-05],
        [4.7684e-07, 3.8207e-05],
        [3.5763e-07, 3.7909e-05],
        [2.9802e-06, 6.0856e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0415, 0.0852],
        [0.0447, 0.0792],
        [0.0989, 0.0358],
        [0.0736, 0.0481],
        [0.0795, 0.0445],
        [0.0802, 0.0441],
        [0.0767, 0.0462],
        [0.0422, 0.0839],
        [0.0667, 0.0530],
        [0.0742, 0.0477],
        [0.0831, 0.0426],
        [0.0727, 0.0487],
        [0.0415, 0.0853],
        [0.0411, 0.0862],
        [0.0409, 0.0864],
        [0.0425, 0.0833]], device='cuda:0')
 Batch: 0 of active classification Duration: 0:00:00.362112
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3173e-05, 1.4484e-05],
        [1.1921e-06, 5.6982e-05],
        [2.8908e-05, 1.3649e-05],
        [1.8001e-05, 1.4544e-05],
        [1.6689e-06, 6.2168e-05],
        [3.1590e-06, 5.9605e-07],
        [3.3975e-06, 5.8413e-05],
        [1.7881e-07, 9.8348e-06],
        [6.5565e-07, 3.0696e-05],
        [1.1921e-07, 1.9670e-05],
        [1.2398e-05, 6.0201e-06],
        [2.1219e-05, 1.5914e-05],
        [8.2850e-06, 5.1260e-06],
        [2.0325e-05, 1.2934e-05],
        [7.7486e-07, 2.7716e-05],
        [5.4836e-06, 9.1493e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0691, 0.0515],
        [0.0438, 0.0812],
        [0.0846, 0.0420],
        [0.0746, 0.0477],
        [0.0440, 0.0807],
        [0.0995, 0.0357],
        [0.0453, 0.0784],
        [0.0437, 0.0814],
        [0.0438, 0.0812],
        [0.0432, 0.0824],
        [0.0841, 0.0423],
        [0.0760, 0.0468],
        [0.0796, 0.0447],
        [0.0791, 0.0450],
        [0.0441, 0.0807],
        [0.0454, 0.0783]], device='cuda:0')
 Batch: 1 of active classification Duration: 0:00:00.327254
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 3.9101e-05],
        [2.9802e-07, 2.4676e-05],
        [2.1040e-05, 2.7061e-05],
        [1.7881e-07, 1.9252e-05],
        [1.5259e-05, 1.3769e-05],
        [1.8120e-05, 1.6212e-05],
        [1.6689e-06, 4.1306e-05],
        [1.7345e-05, 1.4961e-05],
        [2.1875e-05, 1.3947e-05],
        [3.5763e-07, 2.6405e-05],
        [2.5630e-06, 6.5029e-05],
        [1.1563e-05, 7.0333e-06],
        [2.6822e-06, 7.7486e-07],
        [5.9605e-08, 1.1683e-05],
        [4.1723e-07, 3.7849e-05],
        [1.9431e-05, 1.3590e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0797],
        [0.0450, 0.0799],
        [0.0689, 0.0522],
        [0.0449, 0.0801],
        [0.0753, 0.0478],
        [0.0754, 0.0477],
        [0.0463, 0.0778],
        [0.0761, 0.0473],
        [0.0820, 0.0439],
        [0.0451, 0.0798],
        [0.0462, 0.0779],
        [0.0829, 0.0434],
        [0.0967, 0.0372],
        [0.0447, 0.0805],
        [0.0450, 0.0800],
        [0.0802, 0.0449]], device='cuda:0')
 Batch: 2 of active classification Duration: 0:00:00.398026
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 2.4080e-05],
        [1.5736e-05, 5.2452e-06],
        [1.1921e-07, 1.7703e-05],
        [1.4305e-05, 1.1325e-05],
        [1.0133e-06, 4.2796e-05],
        [7.7486e-06, 8.7798e-05],
        [4.7684e-07, 2.0623e-05],
        [1.5378e-05, 2.3067e-05],
        [2.5034e-06, 2.9802e-07],
        [1.7881e-07, 1.5378e-05],
        [1.3113e-06, 5.8174e-05],
        [2.6047e-05, 1.2100e-05],
        [4.5896e-06, 5.2094e-05],
        [1.7881e-06, 5.4896e-05],
        [2.4617e-05, 2.0742e-05],
        [4.7684e-07, 3.6538e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0467, 0.0760],
        [0.0970, 0.0366],
        [0.0461, 0.0770],
        [0.0801, 0.0443],
        [0.0469, 0.0757],
        [0.0497, 0.0714],
        [0.0469, 0.0757],
        [0.0684, 0.0519],
        [0.1120, 0.0317],
        [0.0464, 0.0766],
        [0.0468, 0.0758],
        [0.0907, 0.0391],
        [0.0497, 0.0715],
        [0.0473, 0.0751],
        [0.0789, 0.0450],
        [0.0464, 0.0765]], device='cuda:0')
 Batch: 3 of active classification Duration: 0:00:00.411211
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7464e-05, 6.8545e-06],
        [2.8014e-05, 5.2691e-05],
        [1.7583e-05, 7.9870e-06],
        [8.3447e-07, 5.0545e-05],
        [3.9935e-06, 5.9605e-07],
        [1.7285e-06, 3.8743e-05],
        [2.3901e-05, 6.1095e-05],
        [1.2815e-05, 5.3644e-06],
        [2.9802e-07, 2.6524e-05],
        [5.9605e-08, 1.2994e-05],
        [1.8477e-06, 5.9962e-05],
        [1.1325e-05, 5.0664e-06],
        [1.2279e-05, 7.2122e-06],
        [1.4901e-06, 4.9293e-05],
        [1.6987e-05, 9.8348e-06],
        [2.3186e-05, 1.5557e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0823, 0.0430],
        [0.0568, 0.0623],
        [0.0799, 0.0443],
        [0.0408, 0.0867],
        [0.0959, 0.0369],
        [0.0419, 0.0844],
        [0.0532, 0.0665],
        [0.0813, 0.0435],
        [0.0406, 0.0872],
        [0.0403, 0.0877],
        [0.0414, 0.0855],
        [0.0801, 0.0442],
        [0.0754, 0.0469],
        [0.0414, 0.0856],
        [0.0757, 0.0468],
        [0.0731, 0.0484]], device='cuda:0')
 Batch: 4 of active classification Duration: 0:00:00.433924
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-06, 3.1590e-06],
        [7.6890e-06, 2.5034e-06],
        [1.0252e-05, 5.9605e-06],
        [1.6689e-06, 6.8009e-05],
        [2.2769e-05, 6.2883e-05],
        [2.4438e-06, 2.3842e-07],
        [2.3067e-05, 1.0371e-05],
        [1.2517e-05, 8.3447e-06],
        [2.5034e-06, 7.5638e-05],
        [1.3232e-05, 4.7684e-06],
        [2.2709e-05, 1.2815e-05],
        [1.0014e-05, 6.8843e-05],
        [1.7881e-05, 1.5676e-05],
        [1.1921e-07, 1.4246e-05],
        [2.6524e-05, 1.2934e-05],
        [1.9014e-05, 1.3053e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0765, 0.0470],
        [0.0777, 0.0462],
        [0.0688, 0.0522],
        [0.0374, 0.0960],
        [0.0477, 0.0754],
        [0.0909, 0.0395],
        [0.0729, 0.0493],
        [0.0666, 0.0539],
        [0.0377, 0.0952],
        [0.0762, 0.0471],
        [0.0693, 0.0519],
        [0.0415, 0.0866],
        [0.0623, 0.0577],
        [0.0369, 0.0975],
        [0.0716, 0.0502],
        [0.0661, 0.0543]], device='cuda:0')
 Batch: 5 of active classification Duration: 0:00:00.442167
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 5.2691e-05],
        [4.7684e-07, 4.1425e-05],
        [2.8908e-05, 2.1160e-05],
        [4.7684e-07, 3.8207e-05],
        [1.3947e-05, 4.5300e-06],
        [1.7881e-07, 2.1875e-05],
        [3.4988e-05, 2.7895e-05],
        [3.8147e-06, 6.5565e-07],
        [2.1279e-05, 1.2219e-05],
        [1.0014e-05, 1.1623e-05],
        [2.4498e-05, 6.2108e-05],
        [9.9540e-06, 7.1526e-06],
        [1.6689e-06, 3.8803e-05],
        [2.9802e-07, 2.0862e-05],
        [2.5630e-06, 6.6221e-05],
        [2.6822e-06, 5.0604e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0789],
        [0.0444, 0.0804],
        [0.0781, 0.0456],
        [0.0444, 0.0803],
        [0.0933, 0.0382],
        [0.0442, 0.0806],
        [0.0765, 0.0466],
        [0.1030, 0.0346],
        [0.0828, 0.0431],
        [0.0697, 0.0512],
        [0.0582, 0.0613],
        [0.0785, 0.0454],
        [0.0457, 0.0780],
        [0.0445, 0.0802],
        [0.0455, 0.0783],
        [0.0461, 0.0773]], device='cuda:0')
 Batch: 6 of active classification Duration: 0:00:00.417970
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7226e-05, 9.7752e-06],
        [1.3232e-05, 6.0201e-06],
        [1.0133e-06, 3.5822e-05],
        [3.4571e-06, 5.6446e-05],
        [2.1100e-05, 1.4365e-05],
        [1.8239e-05, 8.6427e-06],
        [1.3113e-06, 3.7134e-05],
        [1.1325e-06, 4.6372e-05],
        [1.8358e-05, 1.2159e-05],
        [3.1590e-06, 2.9802e-07],
        [2.0802e-05, 9.5367e-06],
        [7.7486e-07, 4.7088e-05],
        [2.3842e-07, 3.6657e-05],
        [2.4915e-05, 1.8775e-05],
        [3.5763e-07, 2.5451e-05],
        [8.9407e-07, 4.1604e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0791, 0.0444],
        [0.0831, 0.0422],
        [0.0429, 0.0817],
        [0.0442, 0.0792],
        [0.0757, 0.0463],
        [0.0823, 0.0426],
        [0.0432, 0.0811],
        [0.0428, 0.0820],
        [0.0762, 0.0460],
        [0.1042, 0.0337],
        [0.0829, 0.0423],
        [0.0425, 0.0826],
        [0.0420, 0.0834],
        [0.0739, 0.0475],
        [0.0424, 0.0828],
        [0.0427, 0.0822]], device='cuda:0')
 Batch: 7 of active classification Duration: 0:00:00.355945
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0192e-05, 5.3644e-06],
        [2.9206e-06, 7.2658e-05],
        [1.1921e-07, 1.6391e-05],
        [1.3769e-05, 1.7941e-05],
        [3.2842e-05, 1.5914e-05],
        [1.6212e-05, 8.8811e-06],
        [3.6955e-06, 7.0453e-05],
        [1.3053e-05, 5.6028e-06],
        [1.9133e-05, 7.8082e-06],
        [1.7881e-06, 1.2398e-05],
        [1.8179e-05, 1.3530e-05],
        [9.2983e-06, 3.4571e-06],
        [1.5497e-06, 5.1558e-05],
        [1.2696e-05, 7.7486e-06],
        [1.0073e-05, 4.4703e-06],
        [1.5140e-05, 6.3181e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0730, 0.0493],
        [0.0394, 0.0914],
        [0.0382, 0.0943],
        [0.0585, 0.0615],
        [0.0743, 0.0484],
        [0.0723, 0.0498],
        [0.0398, 0.0904],
        [0.0763, 0.0472],
        [0.0771, 0.0467],
        [0.0430, 0.0838],
        [0.0673, 0.0535],
        [0.0786, 0.0458],
        [0.0390, 0.0923],
        [0.0705, 0.0511],
        [0.0758, 0.0475],
        [0.0768, 0.0469]], device='cuda:0')
 Batch: 8 of active classification Duration: 0:00:00.347741
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 2.4736e-05],
        [3.9339e-06, 6.9380e-05],
        [9.5367e-07, 5.0545e-05],
        [2.5988e-05, 4.2200e-05],
        [3.3498e-05, 4.1664e-05],
        [7.1526e-07, 3.6299e-05],
        [2.3782e-05, 2.3246e-05],
        [2.3842e-06, 4.9949e-05],
        [9.6560e-06, 4.8280e-06],
        [3.5763e-07, 3.0100e-05],
        [3.3438e-05, 1.3530e-05],
        [1.2398e-05, 5.4836e-06],
        [1.7881e-07, 2.3901e-05],
        [2.3842e-07, 7.5698e-06],
        [3.6955e-06, 6.1929e-05],
        [1.3888e-05, 7.2718e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0464, 0.0776],
        [0.0483, 0.0746],
        [0.0466, 0.0773],
        [0.0670, 0.0538],
        [0.0714, 0.0504],
        [0.0466, 0.0773],
        [0.0759, 0.0475],
        [0.0479, 0.0753],
        [0.0891, 0.0404],
        [0.0463, 0.0778],
        [0.0932, 0.0386],
        [0.0915, 0.0394],
        [0.0461, 0.0782],
        [0.0472, 0.0764],
        [0.0484, 0.0744],
        [0.0882, 0.0409]], device='cuda:0')
 Batch: 9 of active classification Duration: 0:00:00.390260
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4140e-05, 1.1384e-05],
        [2.7299e-05, 4.2319e-05],
        [1.1504e-05, 1.1086e-05],
        [1.7881e-07, 5.6624e-06],
        [2.2650e-06, 6.0320e-05],
        [4.1723e-07, 3.5644e-05],
        [1.7166e-05, 9.7752e-06],
        [1.5378e-05, 5.9605e-06],
        [5.3644e-07, 2.4915e-05],
        [1.5795e-05, 5.7817e-06],
        [5.3644e-07, 3.2663e-05],
        [2.9683e-05, 3.8087e-05],
        [4.1723e-07, 3.0875e-05],
        [7.5698e-06, 3.6359e-06],
        [7.7486e-07, 3.3855e-05],
        [1.0312e-05, 4.1723e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0827, 0.0430],
        [0.0621, 0.0574],
        [0.0698, 0.0510],
        [0.0432, 0.0824],
        [0.0435, 0.0819],
        [0.0424, 0.0839],
        [0.0793, 0.0449],
        [0.0862, 0.0413],
        [0.0428, 0.0832],
        [0.0872, 0.0408],
        [0.0426, 0.0836],
        [0.0650, 0.0548],
        [0.0425, 0.0838],
        [0.0824, 0.0432],
        [0.0429, 0.0830],
        [0.0855, 0.0417]], device='cuda:0')
 Batch: 10 of active classification Duration: 0:00:00.553883
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 6.4552e-05],
        [1.3113e-06, 4.9889e-05],
        [1.0729e-06, 2.6882e-05],
        [1.0133e-06, 5.2035e-05],
        [1.4067e-05, 3.7551e-06],
        [5.9605e-07, 4.1962e-05],
        [2.9802e-07, 5.8413e-06],
        [2.9802e-06, 8.8811e-05],
        [1.1325e-06, 4.6492e-05],
        [1.1742e-05, 6.7949e-06],
        [1.7285e-06, 3.6895e-05],
        [3.2783e-06, 7.2658e-05],
        [1.2517e-06, 5.1916e-05],
        [1.0490e-05, 9.4771e-06],
        [2.3842e-07, 2.3067e-05],
        [4.6492e-06, 8.4519e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0526, 0.0699],
        [0.0535, 0.0686],
        [0.0542, 0.0678],
        [0.0532, 0.0691],
        [0.1149, 0.0320],
        [0.0529, 0.0694],
        [0.0548, 0.0671],
        [0.0539, 0.0682],
        [0.0534, 0.0688],
        [0.0983, 0.0374],
        [0.0546, 0.0673],
        [0.0545, 0.0674],
        [0.0534, 0.0688],
        [0.0882, 0.0416],
        [0.0527, 0.0697],
        [0.0550, 0.0668]], device='cuda:0')
 Batch: 11 of active classification Duration: 0:00:00.358067
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.0133e-06, 5.1498e-05],
        [3.2723e-05, 1.6987e-05],
        [1.5438e-05, 1.5795e-05],
        [2.3842e-07, 3.4213e-05],
        [2.8610e-06, 5.3644e-07],
        [1.4663e-05, 9.1195e-06],
        [6.7949e-06, 6.2704e-05],
        [2.9802e-07, 2.0862e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0858, 0.1644],
        [0.1625, 0.0868],
        [0.1379, 0.1023],
        [0.0847, 0.1665],
        [0.1953, 0.0722],
        [0.1558, 0.0905],
        [0.0928, 0.1520],
        [0.0853, 0.1653]], device='cuda:0')
 Batch: 12 of active classification Duration: 0:00:00.184687
acc:  0.96
Time taken to execute the en SA task with prompt type active, variation 9 and batchsize 16: 0:00:04.998902
path ['42', 'en', 'bloomz-mt', 'SA', 'active', 'prompt_id_9']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type passive has 10 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06],
        [6.8545e-06, 7.9274e-06]], device='cuda:0') torch.Size([98, 2])
answers_probs just softmax dim 0: tensor([[0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102]], device='cuda:0')
tensor([[0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102],
        [0.0102, 0.0102]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0087e-05, 9.4771e-06],
        [2.3842e-05, 1.6630e-05],
        [3.5763e-07, 6.5565e-06],
        [8.9407e-07, 3.5107e-05],
        [3.9935e-06, 8.4281e-05],
        [9.5367e-07, 4.2915e-05],
        [2.1636e-05, 6.3777e-06],
        [5.7220e-06, 8.4102e-05],
        [1.8954e-05, 8.1062e-06],
        [2.5988e-05, 3.3855e-05],
        [5.3644e-07, 2.5868e-05],
        [2.3842e-06, 6.5267e-05],
        [3.0398e-06, 5.1856e-05],
        [1.0729e-06, 4.8518e-05],
        [1.5795e-05, 8.1658e-06],
        [2.3901e-05, 1.5199e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0872, 0.0409],
        [0.0797, 0.0448],
        [0.0466, 0.0766],
        [0.0453, 0.0787],
        [0.0463, 0.0771],
        [0.0452, 0.0789],
        [0.0957, 0.0373],
        [0.0471, 0.0757],
        [0.0891, 0.0400],
        [0.0682, 0.0523],
        [0.0451, 0.0791],
        [0.0458, 0.0779],
        [0.0467, 0.0763],
        [0.0452, 0.0789],
        [0.0855, 0.0417],
        [0.0815, 0.0438]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.358584
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7418e-06, 4.6849e-05],
        [1.2517e-05, 5.1260e-06],
        [3.5107e-05, 2.6286e-05],
        [4.8876e-06, 6.3002e-05],
        [1.6630e-05, 7.5102e-06],
        [1.2457e-05, 4.5896e-06],
        [7.5698e-06, 1.0908e-04],
        [8.9407e-07, 6.6757e-05],
        [2.8789e-05, 6.7472e-05],
        [1.1921e-06, 3.0398e-05],
        [1.9729e-05, 7.8678e-06],
        [1.1921e-06, 4.5061e-05],
        [4.1723e-07, 6.1989e-06],
        [2.3246e-06, 3.5763e-07],
        [4.1723e-07, 3.4750e-05],
        [1.1623e-05, 7.7486e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0444, 0.0795],
        [0.0853, 0.0413],
        [0.0744, 0.0474],
        [0.0451, 0.0782],
        [0.0836, 0.0422],
        [0.0872, 0.0404],
        [0.0448, 0.0787],
        [0.0425, 0.0829],
        [0.0566, 0.0623],
        [0.0436, 0.0809],
        [0.0858, 0.0411],
        [0.0431, 0.0819],
        [0.0447, 0.0789],
        [0.0999, 0.0353],
        [0.0425, 0.0830],
        [0.0765, 0.0461]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.352291
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1160e-05, 1.7941e-05],
        [2.9802e-07, 7.5102e-06],
        [1.1563e-05, 7.8082e-06],
        [4.2319e-06, 6.7174e-05],
        [4.1246e-05, 2.5809e-05],
        [1.7285e-06, 3.6597e-05],
        [3.4571e-06, 5.5134e-05],
        [3.0875e-05, 1.6272e-05],
        [1.2994e-05, 8.5831e-06],
        [1.6332e-05, 1.5199e-05],
        [2.4438e-06, 5.0843e-05],
        [3.5167e-06, 7.3671e-05],
        [3.2067e-05, 5.1260e-05],
        [5.3644e-07, 3.6359e-05],
        [1.0192e-05, 6.6042e-05],
        [2.5749e-05, 1.8835e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0763, 0.0479],
        [0.0461, 0.0792],
        [0.0807, 0.0453],
        [0.0471, 0.0776],
        [0.0821, 0.0445],
        [0.0464, 0.0787],
        [0.0471, 0.0776],
        [0.0855, 0.0427],
        [0.0811, 0.0451],
        [0.0745, 0.0490],
        [0.0465, 0.0786],
        [0.0465, 0.0786],
        [0.0652, 0.0560],
        [0.0450, 0.0811],
        [0.0507, 0.0720],
        [0.0791, 0.0462]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.354803
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5094e-05, 1.4663e-05],
        [3.5167e-06, 4.1723e-07],
        [5.9605e-07, 3.4153e-05],
        [7.9870e-06, 1.0467e-04],
        [1.5140e-05, 7.7486e-06],
        [2.7359e-05, 6.6638e-05],
        [2.3842e-07, 2.2650e-05],
        [2.5034e-06, 6.2168e-05],
        [4.7684e-07, 2.6107e-05],
        [4.4703e-06, 7.3254e-05],
        [1.6689e-05, 1.2040e-04],
        [3.6776e-05, 2.1458e-05],
        [2.4855e-05, 2.0146e-05],
        [2.0862e-06, 6.1214e-05],
        [3.2306e-05, 7.1704e-05],
        [8.3447e-07, 3.9876e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0855, 0.0420],
        [0.1112, 0.0323],
        [0.0463, 0.0776],
        [0.0488, 0.0735],
        [0.0881, 0.0407],
        [0.0609, 0.0590],
        [0.0460, 0.0781],
        [0.0473, 0.0759],
        [0.0463, 0.0775],
        [0.0482, 0.0745],
        [0.0514, 0.0699],
        [0.0855, 0.0420],
        [0.0790, 0.0454],
        [0.0470, 0.0764],
        [0.0621, 0.0579],
        [0.0464, 0.0773]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.329518
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 1.4603e-05],
        [3.0041e-05, 2.0325e-05],
        [3.5763e-07, 3.8087e-05],
        [7.5102e-06, 4.2915e-06],
        [1.3530e-05, 1.3828e-05],
        [3.4451e-05, 1.9014e-05],
        [1.6809e-05, 1.8299e-05],
        [4.7684e-06, 9.9123e-05],
        [2.0027e-05, 1.3113e-05],
        [9.5367e-07, 3.4332e-05],
        [1.1325e-06, 3.6418e-05],
        [1.7881e-06, 3.1352e-05],
        [2.0921e-05, 1.1623e-05],
        [1.4901e-06, 4.5598e-05],
        [1.7226e-05, 9.0599e-06],
        [2.3842e-07, 2.0325e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0789],
        [0.0797, 0.0452],
        [0.0443, 0.0813],
        [0.0830, 0.0434],
        [0.0720, 0.0501],
        [0.0836, 0.0431],
        [0.0709, 0.0509],
        [0.0460, 0.0784],
        [0.0804, 0.0449],
        [0.0451, 0.0799],
        [0.0453, 0.0797],
        [0.0463, 0.0778],
        [0.0835, 0.0432],
        [0.0453, 0.0795],
        [0.0846, 0.0426],
        [0.0444, 0.0811]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.414706
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.6551e-05, 2.5511e-05],
        [1.3113e-06, 1.8120e-05],
        [1.4067e-05, 1.2040e-05],
        [2.8551e-05, 2.4259e-05],
        [1.6093e-05, 1.1265e-05],
        [1.5199e-05, 8.2850e-06],
        [5.9605e-07, 2.3961e-05],
        [2.0027e-05, 1.2517e-05],
        [4.3511e-06, 7.0453e-05],
        [1.0133e-06, 4.3392e-05],
        [2.7239e-05, 1.1802e-05],
        [1.1921e-07, 1.5140e-05],
        [3.8743e-05, 1.9193e-05],
        [2.9802e-07, 1.7047e-05],
        [2.3246e-06, 6.1989e-05],
        [1.7881e-06, 5.5015e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0825, 0.0435],
        [0.0462, 0.0775],
        [0.0741, 0.0484],
        [0.0742, 0.0483],
        [0.0778, 0.0460],
        [0.0826, 0.0434],
        [0.0443, 0.0809],
        [0.0800, 0.0448],
        [0.0458, 0.0782],
        [0.0442, 0.0811],
        [0.0869, 0.0413],
        [0.0436, 0.0823],
        [0.0844, 0.0425],
        [0.0440, 0.0815],
        [0.0448, 0.0800],
        [0.0446, 0.0804]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.328443
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.6492e-06, 6.2287e-05],
        [1.5736e-05, 6.9141e-06],
        [1.4305e-06, 4.5657e-05],
        [2.9802e-07, 1.1802e-05],
        [3.6895e-05, 4.6313e-05],
        [2.3603e-05, 1.6749e-05],
        [2.2650e-06, 6.3837e-05],
        [3.9637e-05, 1.6630e-05],
        [2.0325e-05, 6.7949e-06],
        [5.8413e-06, 7.7486e-05],
        [2.0266e-06, 4.4048e-05],
        [2.9802e-07, 1.9550e-05],
        [0.0000e+00, 2.1458e-06],
        [1.7464e-05, 9.4175e-06],
        [2.0266e-06, 6.8903e-05],
        [3.6895e-05, 2.8968e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0477, 0.0749],
        [0.0891, 0.0401],
        [0.0458, 0.0779],
        [0.0456, 0.0784],
        [0.0693, 0.0516],
        [0.0798, 0.0448],
        [0.0460, 0.0776],
        [0.0900, 0.0397],
        [0.0941, 0.0380],
        [0.0477, 0.0749],
        [0.0465, 0.0769],
        [0.0451, 0.0791],
        [0.0445, 0.0803],
        [0.0852, 0.0419],
        [0.0458, 0.0781],
        [0.0779, 0.0459]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.322802
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9789e-05, 1.0312e-05],
        [2.1994e-05, 1.8358e-05],
        [1.8656e-05, 9.2387e-06],
        [7.7486e-07, 2.6882e-05],
        [4.1842e-05, 1.6630e-05],
        [1.0550e-05, 6.5207e-05],
        [1.6391e-05, 1.1861e-05],
        [3.3975e-05, 3.2127e-05],
        [1.9491e-05, 8.5235e-06],
        [1.4663e-05, 2.0862e-05],
        [6.5565e-07, 2.7835e-05],
        [1.8835e-05, 1.8001e-05],
        [2.3067e-05, 1.1206e-05],
        [2.9206e-06, 2.9802e-07],
        [1.0431e-05, 7.8201e-05],
        [2.2590e-05, 1.0133e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0713, 0.0511],
        [0.0638, 0.0572],
        [0.0722, 0.0505],
        [0.0380, 0.0959],
        [0.0756, 0.0482],
        [0.0425, 0.0858],
        [0.0660, 0.0552],
        [0.0618, 0.0590],
        [0.0741, 0.0492],
        [0.0559, 0.0653],
        [0.0378, 0.0964],
        [0.0616, 0.0591],
        [0.0725, 0.0503],
        [0.0916, 0.0398],
        [0.0416, 0.0877],
        [0.0737, 0.0494]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.417456
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 6.3181e-05],
        [7.1526e-07, 3.6716e-05],
        [1.9133e-05, 3.0518e-05],
        [2.7239e-05, 1.6928e-05],
        [1.9073e-06, 4.5836e-05],
        [1.6391e-05, 1.5259e-05],
        [3.6359e-06, 1.5497e-06],
        [1.3709e-06, 4.8816e-05],
        [2.3246e-06, 5.2273e-05],
        [1.7583e-05, 6.8545e-06],
        [1.8895e-05, 7.7486e-06],
        [1.5497e-06, 3.2067e-05],
        [1.7405e-05, 1.8656e-05],
        [8.8215e-06, 3.2187e-06],
        [1.4901e-06, 3.7849e-05],
        [1.3113e-06, 4.1425e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0444, 0.0805],
        [0.0442, 0.0809],
        [0.0637, 0.0561],
        [0.0803, 0.0445],
        [0.0451, 0.0792],
        [0.0727, 0.0491],
        [0.0874, 0.0409],
        [0.0445, 0.0802],
        [0.0452, 0.0790],
        [0.0890, 0.0402],
        [0.0881, 0.0406],
        [0.0454, 0.0788],
        [0.0702, 0.0509],
        [0.0902, 0.0396],
        [0.0450, 0.0794],
        [0.0447, 0.0800]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.446149
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9683e-05, 1.8299e-05],
        [4.2319e-06, 7.7486e-07],
        [1.3113e-05, 8.7023e-06],
        [1.2934e-05, 7.2718e-06],
        [1.1563e-05, 4.4107e-06],
        [8.9407e-07, 3.8207e-05],
        [1.4722e-05, 1.2279e-05],
        [3.5763e-07, 2.4915e-05],
        [9.5367e-07, 4.1246e-05],
        [5.9605e-07, 2.3603e-05],
        [2.7418e-06, 6.4850e-05],
        [4.2737e-05, 3.1054e-05],
        [1.5497e-06, 6.0022e-05],
        [1.0729e-06, 4.4405e-05],
        [8.0466e-06, 4.3511e-06],
        [2.7299e-05, 1.2398e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0756, 0.0468],
        [0.0948, 0.0373],
        [0.0743, 0.0476],
        [0.0772, 0.0458],
        [0.0840, 0.0421],
        [0.0417, 0.0848],
        [0.0702, 0.0503],
        [0.0413, 0.0856],
        [0.0417, 0.0848],
        [0.0417, 0.0847],
        [0.0424, 0.0833],
        [0.0727, 0.0486],
        [0.0418, 0.0846],
        [0.0417, 0.0848],
        [0.0779, 0.0454],
        [0.0810, 0.0436]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.417055
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 5.9009e-06],
        [8.3447e-07, 3.2842e-05],
        [2.4676e-05, 2.0623e-05],
        [1.7881e-06, 4.4644e-05],
        [1.1146e-05, 5.0068e-06],
        [5.1260e-06, 6.3181e-05],
        [1.4901e-05, 1.0252e-05],
        [2.3842e-07, 1.8060e-05],
        [1.3769e-05, 1.5438e-05],
        [6.5565e-06, 9.3043e-05],
        [3.2306e-05, 3.2544e-05],
        [3.0994e-06, 7.1645e-05],
        [5.9605e-07, 3.2008e-05],
        [9.5367e-07, 3.3796e-05],
        [1.1146e-05, 9.4175e-06],
        [2.3246e-06, 5.7399e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0511, 0.0717],
        [0.0490, 0.0748],
        [0.0824, 0.0444],
        [0.0497, 0.0737],
        [0.0953, 0.0384],
        [0.0515, 0.0711],
        [0.0865, 0.0424],
        [0.0484, 0.0756],
        [0.0766, 0.0478],
        [0.0511, 0.0718],
        [0.0787, 0.0466],
        [0.0498, 0.0735],
        [0.0487, 0.0752],
        [0.0491, 0.0746],
        [0.0822, 0.0446],
        [0.0497, 0.0737]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.525521
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1233e-05, 2.4498e-05],
        [1.3411e-05, 8.1062e-06],
        [8.9407e-07, 3.4451e-05],
        [2.6822e-05, 1.9610e-05],
        [1.7881e-07, 1.3828e-05],
        [2.5034e-06, 6.0856e-05],
        [2.9743e-05, 1.3232e-05],
        [2.7299e-05, 3.2723e-05],
        [2.7418e-06, 4.8399e-05],
        [2.6941e-05, 1.9073e-05],
        [4.0114e-05, 4.8757e-05],
        [3.6478e-05, 2.4676e-05],
        [2.3246e-06, 5.2273e-05],
        [3.5167e-06, 5.3644e-07],
        [2.0981e-05, 1.4663e-05],
        [1.9968e-05, 6.4969e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0683, 0.0528],
        [0.0727, 0.0495],
        [0.0400, 0.0901],
        [0.0695, 0.0519],
        [0.0395, 0.0912],
        [0.0406, 0.0888],
        [0.0779, 0.0462],
        [0.0615, 0.0586],
        [0.0411, 0.0876],
        [0.0700, 0.0515],
        [0.0612, 0.0588],
        [0.0708, 0.0509],
        [0.0407, 0.0885],
        [0.0929, 0.0388],
        [0.0703, 0.0513],
        [0.0829, 0.0434]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.308050
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.0266e-05, 1.2517e-05],
        [2.5630e-06, 1.2517e-05],
        [2.9802e-07, 2.1636e-05],
        [6.5565e-07, 3.7074e-05],
        [2.0564e-05, 1.1683e-05],
        [2.6822e-06, 7.1049e-05],
        [1.2279e-05, 7.2718e-06],
        [1.3113e-05, 5.1260e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1556, 0.0919],
        [0.0994, 0.1438],
        [0.0850, 0.1682],
        [0.0853, 0.1675],
        [0.1586, 0.0901],
        [0.0869, 0.1644],
        [0.1571, 0.0910],
        [0.1721, 0.0831]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.186632
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 0 and batchsize 16: 0:00:04.777352
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06],
        [6.1393e-06, 7.2122e-06]], device='cuda:0') torch.Size([105, 2])
answers_probs just softmax dim 0: tensor([[0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095]], device='cuda:0')
tensor([[0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5167e-06, 4.1902e-05],
        [2.2233e-05, 1.4782e-05],
        [2.5153e-05, 2.8491e-05],
        [2.4438e-06, 5.2631e-05],
        [3.6955e-06, 4.1723e-07],
        [1.3351e-05, 6.4969e-06],
        [7.7486e-07, 2.3961e-05],
        [2.3365e-05, 5.3942e-05],
        [9.5367e-07, 3.7909e-05],
        [1.1325e-06, 3.8683e-05],
        [1.5736e-05, 8.0466e-06],
        [2.5034e-05, 2.2829e-05],
        [4.1723e-07, 2.3663e-05],
        [2.6047e-05, 1.3828e-05],
        [2.4438e-05, 1.2696e-05],
        [1.9491e-05, 2.6405e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0442, 0.0811],
        [0.0746, 0.0481],
        [0.0654, 0.0548],
        [0.0428, 0.0838],
        [0.1006, 0.0357],
        [0.0802, 0.0447],
        [0.0422, 0.0849],
        [0.0554, 0.0648],
        [0.0420, 0.0855],
        [0.0421, 0.0852],
        [0.0793, 0.0452],
        [0.0691, 0.0519],
        [0.0417, 0.0861],
        [0.0787, 0.0456],
        [0.0791, 0.0454],
        [0.0626, 0.0573]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.358348
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5140e-05, 1.2577e-05],
        [1.4722e-05, 3.6955e-06],
        [9.8944e-06, 6.9201e-05],
        [7.1526e-07, 2.3425e-05],
        [1.8001e-05, 1.4365e-05],
        [2.6584e-05, 1.2577e-05],
        [1.0133e-06, 3.1829e-05],
        [3.0398e-06, 4.7028e-05],
        [3.6359e-06, 5.0604e-05],
        [1.2457e-05, 5.7817e-06],
        [2.9802e-07, 1.8299e-05],
        [1.7881e-07, 1.6570e-05],
        [2.5034e-06, 5.8413e-05],
        [2.5630e-06, 5.3644e-07],
        [8.9407e-07, 3.8445e-05],
        [3.2604e-05, 2.0564e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0744, 0.0475],
        [0.0959, 0.0368],
        [0.0489, 0.0723],
        [0.0444, 0.0796],
        [0.0752, 0.0470],
        [0.0850, 0.0416],
        [0.0445, 0.0795],
        [0.0458, 0.0771],
        [0.0461, 0.0766],
        [0.0853, 0.0414],
        [0.0438, 0.0806],
        [0.0436, 0.0811],
        [0.0449, 0.0786],
        [0.0986, 0.0358],
        [0.0441, 0.0801],
        [0.0796, 0.0444]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.311038
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3723e-05, 2.6941e-05],
        [1.1921e-06, 2.5153e-05],
        [1.5736e-05, 4.3511e-06],
        [3.2008e-05, 1.2755e-05],
        [2.3842e-06, 6.6161e-05],
        [4.7684e-07, 3.2663e-05],
        [1.1921e-06, 3.4571e-05],
        [5.3644e-07, 2.8193e-05],
        [2.1577e-05, 1.2875e-05],
        [1.9431e-05, 1.1981e-05],
        [4.1723e-07, 5.7220e-06],
        [4.3511e-06, 6.8903e-05],
        [3.8743e-06, 5.8532e-05],
        [9.5367e-07, 3.4392e-05],
        [1.7285e-06, 3.6716e-05],
        [1.6093e-05, 7.1526e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0727, 0.0491],
        [0.0476, 0.0750],
        [0.0996, 0.0358],
        [0.0930, 0.0384],
        [0.0471, 0.0758],
        [0.0462, 0.0773],
        [0.0471, 0.0759],
        [0.0464, 0.0770],
        [0.0851, 0.0419],
        [0.0845, 0.0423],
        [0.0487, 0.0733],
        [0.0483, 0.0739],
        [0.0484, 0.0737],
        [0.0468, 0.0764],
        [0.0476, 0.0750],
        [0.0909, 0.0393]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.354563
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2100e-05, 1.1563e-05],
        [2.2054e-05, 8.7023e-06],
        [8.4043e-06, 5.3167e-05],
        [2.3842e-07, 1.3769e-05],
        [2.1040e-05, 7.9274e-06],
        [4.7684e-07, 5.5432e-06],
        [3.9518e-05, 1.9431e-05],
        [2.2352e-05, 1.6868e-05],
        [2.3246e-05, 9.2983e-06],
        [1.7285e-06, 4.5240e-05],
        [2.5451e-05, 1.3411e-05],
        [3.5763e-06, 6.6638e-05],
        [1.6689e-05, 9.8944e-06],
        [3.9339e-06, 4.8220e-05],
        [1.4305e-06, 3.3975e-05],
        [1.3530e-05, 1.0967e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0680, 0.0528],
        [0.0835, 0.0430],
        [0.0467, 0.0769],
        [0.0414, 0.0866],
        [0.0842, 0.0426],
        [0.0441, 0.0814],
        [0.0797, 0.0451],
        [0.0720, 0.0498],
        [0.0832, 0.0431],
        [0.0423, 0.0849],
        [0.0784, 0.0458],
        [0.0429, 0.0837],
        [0.0763, 0.0470],
        [0.0439, 0.0817],
        [0.0424, 0.0846],
        [0.0708, 0.0507]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.524685
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 2.1100e-05],
        [5.3644e-07, 3.0398e-05],
        [1.4544e-05, 1.0908e-05],
        [8.9407e-07, 2.7895e-05],
        [3.6955e-06, 1.6093e-06],
        [1.0908e-05, 6.1393e-06],
        [1.2338e-05, 7.1526e-06],
        [1.5855e-05, 1.4126e-05],
        [5.3644e-07, 2.7597e-05],
        [1.1146e-05, 7.2122e-06],
        [1.4901e-06, 2.3365e-05],
        [1.1444e-05, 3.7551e-06],
        [1.7881e-06, 4.6849e-05],
        [2.0266e-06, 6.4194e-05],
        [4.4107e-06, 6.8188e-05],
        [8.9407e-07, 2.8133e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0791],
        [0.0452, 0.0791],
        [0.0786, 0.0454],
        [0.0458, 0.0780],
        [0.0891, 0.0401],
        [0.0842, 0.0424],
        [0.0836, 0.0427],
        [0.0753, 0.0474],
        [0.0453, 0.0789],
        [0.0815, 0.0438],
        [0.0471, 0.0758],
        [0.0943, 0.0379],
        [0.0461, 0.0775],
        [0.0458, 0.0780],
        [0.0472, 0.0757],
        [0.0458, 0.0780]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.469716
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-06, 1.1742e-05],
        [2.8610e-06, 6.4552e-05],
        [1.2040e-05, 6.1989e-06],
        [1.1921e-06, 3.2306e-05],
        [5.3644e-07, 3.2544e-05],
        [7.2718e-06, 3.2187e-06],
        [3.1888e-05, 4.2915e-05],
        [1.7345e-05, 5.9605e-06],
        [1.7881e-06, 5.3644e-05],
        [2.3842e-07, 1.8895e-05],
        [1.5438e-05, 9.0003e-06],
        [2.0802e-05, 1.0371e-05],
        [2.0921e-05, 1.0371e-05],
        [1.9789e-05, 1.2040e-05],
        [1.3113e-06, 5.4419e-05],
        [2.0862e-06, 4.6372e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0500, 0.0713],
        [0.0442, 0.0806],
        [0.0820, 0.0435],
        [0.0439, 0.0812],
        [0.0431, 0.0828],
        [0.0847, 0.0421],
        [0.0649, 0.0549],
        [0.0892, 0.0400],
        [0.0438, 0.0815],
        [0.0429, 0.0831],
        [0.0797, 0.0447],
        [0.0826, 0.0432],
        [0.0827, 0.0431],
        [0.0789, 0.0452],
        [0.0434, 0.0822],
        [0.0442, 0.0806]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.329897
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5438e-05, 5.0664e-06],
        [1.0490e-05, 4.1723e-06],
        [2.3842e-07, 1.8418e-05],
        [1.7285e-06, 3.7432e-05],
        [4.1723e-06, 6.3121e-05],
        [4.8280e-06, 6.9261e-05],
        [4.7684e-07, 2.1398e-05],
        [1.8179e-05, 8.2254e-06],
        [1.1921e-06, 4.9889e-05],
        [1.9073e-05, 9.7156e-06],
        [1.4901e-06, 3.1948e-05],
        [2.6226e-06, 4.0233e-05],
        [2.2650e-06, 4.6730e-05],
        [4.1127e-06, 7.1526e-07],
        [3.2783e-06, 6.1274e-05],
        [1.9789e-05, 1.3053e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0935, 0.0376],
        [0.0900, 0.0390],
        [0.0446, 0.0788],
        [0.0460, 0.0764],
        [0.0468, 0.0750],
        [0.0470, 0.0748],
        [0.0450, 0.0781],
        [0.0876, 0.0401],
        [0.0451, 0.0780],
        [0.0854, 0.0411],
        [0.0460, 0.0763],
        [0.0468, 0.0751],
        [0.0461, 0.0762],
        [0.1032, 0.0340],
        [0.0463, 0.0759],
        [0.0804, 0.0437]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.420024
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-07, 9.5963e-06],
        [1.8775e-05, 1.6272e-05],
        [4.8280e-06, 6.2406e-05],
        [8.9407e-07, 6.3658e-05],
        [1.0312e-05, 5.0068e-06],
        [2.8610e-06, 4.6432e-05],
        [2.9981e-05, 2.1398e-05],
        [3.3379e-06, 4.9412e-05],
        [1.2398e-05, 7.5698e-06],
        [7.8678e-06, 2.7418e-06],
        [7.1526e-07, 2.2769e-05],
        [1.6272e-05, 6.5565e-06],
        [2.6405e-05, 9.5963e-06],
        [1.6034e-05, 7.8082e-06],
        [1.9670e-06, 1.7881e-07],
        [1.3530e-05, 5.6028e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0392, 0.0900],
        [0.0650, 0.0543],
        [0.0408, 0.0863],
        [0.0385, 0.0915],
        [0.0745, 0.0473],
        [0.0403, 0.0875],
        [0.0681, 0.0518],
        [0.0405, 0.0871],
        [0.0707, 0.0499],
        [0.0798, 0.0442],
        [0.0392, 0.0900],
        [0.0775, 0.0455],
        [0.0792, 0.0445],
        [0.0745, 0.0473],
        [0.0951, 0.0371],
        [0.0771, 0.0457]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.388436
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1458e-06, 5.3465e-05],
        [1.2517e-06, 3.5882e-05],
        [2.3603e-05, 1.7166e-05],
        [9.5367e-06, 3.3379e-06],
        [1.1265e-05, 6.6161e-06],
        [4.1723e-07, 3.6836e-05],
        [2.2054e-06, 4.1604e-05],
        [9.8944e-06, 3.0398e-06],
        [5.3644e-07, 2.6286e-05],
        [2.0862e-06, 4.1425e-05],
        [1.3769e-05, 8.4043e-06],
        [1.4901e-06, 2.6584e-05],
        [2.2173e-05, 1.6987e-05],
        [1.7881e-07, 1.3769e-05],
        [2.6822e-06, 2.9802e-07],
        [1.0133e-06, 3.4928e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0446, 0.0785],
        [0.0444, 0.0789],
        [0.0766, 0.0457],
        [0.0901, 0.0389],
        [0.0806, 0.0435],
        [0.0434, 0.0807],
        [0.0451, 0.0776],
        [0.0923, 0.0380],
        [0.0438, 0.0800],
        [0.0450, 0.0778],
        [0.0799, 0.0438],
        [0.0453, 0.0774],
        [0.0756, 0.0463],
        [0.0435, 0.0805],
        [0.1056, 0.0332],
        [0.0442, 0.0793]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.433137
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.3579e-06, 6.1691e-05],
        [1.4901e-06, 4.7863e-05],
        [1.6510e-05, 9.4771e-06],
        [2.2650e-06, 3.5763e-07],
        [2.7299e-05, 6.1035e-05],
        [6.6161e-06, 8.0347e-05],
        [2.3246e-05, 1.3053e-05],
        [3.5763e-07, 2.9266e-05],
        [1.4782e-05, 6.3777e-06],
        [7.7486e-07, 3.4988e-05],
        [2.4378e-05, 3.7730e-05],
        [9.2983e-06, 3.1590e-06],
        [2.3842e-07, 1.5557e-05],
        [1.0729e-06, 3.7491e-05],
        [7.7486e-07, 2.5272e-05],
        [7.7486e-07, 3.3259e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0507, 0.0701],
        [0.0458, 0.0776],
        [0.0839, 0.0424],
        [0.1054, 0.0337],
        [0.0605, 0.0587],
        [0.0480, 0.0741],
        [0.0843, 0.0421],
        [0.0450, 0.0790],
        [0.0894, 0.0398],
        [0.0454, 0.0783],
        [0.0658, 0.0540],
        [0.0937, 0.0379],
        [0.0451, 0.0788],
        [0.0457, 0.0778],
        [0.0458, 0.0776],
        [0.0455, 0.0782]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.329170
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6332e-05, 6.8545e-06],
        [6.4969e-06, 9.4533e-05],
        [3.5763e-07, 6.3181e-06],
        [1.4424e-05, 1.3232e-05],
        [5.3644e-07, 2.1517e-05],
        [2.2054e-06, 5.2869e-05],
        [1.8477e-06, 5.1081e-05],
        [1.6451e-05, 1.7226e-05],
        [2.6584e-05, 1.1981e-05],
        [1.0252e-05, 8.1778e-05],
        [1.3351e-05, 6.6757e-06],
        [1.5140e-05, 6.3181e-06],
        [1.3530e-05, 4.8280e-06],
        [4.4703e-06, 7.9691e-05],
        [3.1233e-05, 2.6107e-05],
        [1.6153e-05, 1.4603e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0836, 0.0430],
        [0.0441, 0.0816],
        [0.0436, 0.0825],
        [0.0696, 0.0517],
        [0.0423, 0.0849],
        [0.0430, 0.0836],
        [0.0428, 0.0840],
        [0.0673, 0.0534],
        [0.0823, 0.0437],
        [0.0462, 0.0778],
        [0.0805, 0.0447],
        [0.0837, 0.0430],
        [0.0863, 0.0416],
        [0.0436, 0.0825],
        [0.0712, 0.0505],
        [0.0699, 0.0515]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.351382
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5346e-05, 1.7345e-05],
        [5.3644e-07, 2.2292e-05],
        [3.6955e-06, 1.0133e-06],
        [4.7684e-07, 2.5570e-05],
        [1.9610e-05, 4.9293e-05],
        [1.6570e-05, 6.4969e-06],
        [1.5974e-05, 5.7220e-06],
        [1.6928e-05, 1.1921e-05],
        [1.5259e-05, 5.6028e-06],
        [1.0729e-06, 4.2081e-05],
        [2.8014e-05, 1.1623e-05],
        [2.9802e-07, 1.4126e-05],
        [1.6272e-05, 2.2233e-05],
        [3.0398e-05, 2.2054e-05],
        [1.9848e-05, 8.8811e-06],
        [1.3530e-05, 6.8545e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0728, 0.0493],
        [0.0381, 0.0943],
        [0.0816, 0.0440],
        [0.0379, 0.0948],
        [0.0495, 0.0726],
        [0.0764, 0.0471],
        [0.0778, 0.0462],
        [0.0670, 0.0537],
        [0.0774, 0.0464],
        [0.0382, 0.0941],
        [0.0755, 0.0476],
        [0.0380, 0.0945],
        [0.0568, 0.0632],
        [0.0665, 0.0541],
        [0.0743, 0.0484],
        [0.0723, 0.0497]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.391873
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.2902e-05, 2.2292e-05],
        [2.3425e-05, 1.3769e-05],
        [2.5630e-06, 5.9962e-05],
        [9.5367e-07, 3.3915e-05],
        [1.1325e-06, 3.6061e-05],
        [5.0068e-06, 8.3447e-07],
        [1.6451e-05, 6.9141e-06],
        [1.6153e-05, 4.0531e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1355, 0.1029],
        [0.1401, 0.0995],
        [0.0778, 0.1792],
        [0.0767, 0.1817],
        [0.0770, 0.1811],
        [0.1759, 0.0792],
        [0.1509, 0.0924],
        [0.1660, 0.0840]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.204054
acc:  0.96
Time taken to execute the en SA task with prompt type passive, variation 1 and batchsize 16: 0:00:04.881636
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06],
        [6.2585e-06, 7.2718e-06]], device='cuda:0') torch.Size([110, 2])
answers_probs just softmax dim 0: tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0398e-06, 5.0485e-05],
        [3.6359e-06, 7.9751e-05],
        [1.5497e-06, 4.9233e-05],
        [4.5896e-06, 9.1314e-05],
        [5.9605e-07, 3.4928e-05],
        [2.1100e-05, 5.4240e-05],
        [9.4771e-06, 8.9407e-06],
        [3.5763e-07, 9.0003e-06],
        [4.1127e-06, 4.5240e-05],
        [3.7551e-06, 7.7784e-05],
        [1.3769e-05, 1.2100e-05],
        [9.5367e-07, 3.9518e-05],
        [2.0921e-05, 1.3411e-05],
        [2.9683e-05, 1.6272e-05],
        [2.6941e-05, 1.9550e-05],
        [3.3975e-06, 6.6221e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0512, 0.0719],
        [0.0505, 0.0728],
        [0.0499, 0.0738],
        [0.0507, 0.0725],
        [0.0492, 0.0748],
        [0.0640, 0.0575],
        [0.0809, 0.0455],
        [0.0502, 0.0732],
        [0.0526, 0.0700],
        [0.0506, 0.0727],
        [0.0823, 0.0447],
        [0.0495, 0.0743],
        [0.0889, 0.0414],
        [0.0923, 0.0399],
        [0.0863, 0.0426],
        [0.0508, 0.0725]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.376578
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 2.3246e-05],
        [2.8849e-05, 1.5557e-05],
        [2.9802e-07, 3.0756e-05],
        [1.8835e-05, 1.0967e-05],
        [4.1723e-07, 1.2219e-05],
        [1.4126e-05, 1.0312e-05],
        [1.1921e-06, 4.4525e-05],
        [1.3709e-06, 5.9962e-05],
        [1.1861e-05, 1.2577e-05],
        [1.3173e-05, 1.3173e-05],
        [5.9605e-07, 1.6153e-05],
        [3.5763e-07, 2.1517e-05],
        [1.7881e-07, 1.5318e-05],
        [1.9073e-06, 5.6148e-05],
        [2.3842e-07, 2.0146e-05],
        [2.8670e-05, 3.9518e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0500, 0.0732],
        [0.0929, 0.0394],
        [0.0490, 0.0747],
        [0.0913, 0.0401],
        [0.0502, 0.0729],
        [0.0865, 0.0423],
        [0.0498, 0.0734],
        [0.0496, 0.0737],
        [0.0788, 0.0464],
        [0.0800, 0.0457],
        [0.0503, 0.0727],
        [0.0493, 0.0741],
        [0.0491, 0.0745],
        [0.0501, 0.0729],
        [0.0491, 0.0745],
        [0.0739, 0.0495]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.419397
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0027e-05, 1.1504e-05],
        [9.7156e-06, 7.8797e-05],
        [8.9407e-07, 2.9862e-05],
        [2.2709e-05, 1.3471e-05],
        [1.9610e-05, 5.5432e-06],
        [1.0133e-06, 4.2140e-05],
        [1.9073e-06, 3.4928e-05],
        [1.6689e-06, 5.6565e-05],
        [1.7226e-05, 9.1791e-06],
        [3.5763e-07, 6.8545e-06],
        [8.1062e-06, 3.5763e-06],
        [3.6359e-06, 5.8413e-05],
        [1.3947e-05, 8.0466e-06],
        [4.5896e-06, 6.4611e-05],
        [1.1086e-05, 9.8348e-06],
        [1.2100e-05, 1.3590e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0804, 0.0446],
        [0.0475, 0.0754],
        [0.0438, 0.0817],
        [0.0798, 0.0449],
        [0.0929, 0.0386],
        [0.0436, 0.0822],
        [0.0449, 0.0799],
        [0.0438, 0.0818],
        [0.0818, 0.0438],
        [0.0448, 0.0801],
        [0.0852, 0.0420],
        [0.0452, 0.0794],
        [0.0803, 0.0446],
        [0.0455, 0.0788],
        [0.0724, 0.0495],
        [0.0682, 0.0525]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.552922
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3365e-05, 1.0967e-05],
        [1.2457e-05, 1.0550e-05],
        [2.1815e-05, 1.4424e-05],
        [1.2636e-05, 4.7684e-06],
        [1.7345e-05, 7.3910e-06],
        [1.0908e-05, 5.5432e-06],
        [1.3888e-05, 6.0201e-06],
        [3.5167e-06, 3.5763e-07],
        [4.1723e-06, 5.5373e-05],
        [1.3471e-05, 8.1062e-06],
        [9.5367e-06, 5.0843e-05],
        [2.0862e-05, 1.7047e-05],
        [1.2517e-06, 4.2081e-05],
        [7.1526e-07, 2.6286e-05],
        [2.2829e-05, 1.9073e-05],
        [9.5367e-07, 3.1412e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0740, 0.0486],
        [0.0644, 0.0558],
        [0.0684, 0.0525],
        [0.0775, 0.0464],
        [0.0756, 0.0476],
        [0.0727, 0.0494],
        [0.0753, 0.0477],
        [0.0929, 0.0387],
        [0.0402, 0.0894],
        [0.0700, 0.0514],
        [0.0439, 0.0819],
        [0.0650, 0.0553],
        [0.0386, 0.0932],
        [0.0385, 0.0934],
        [0.0646, 0.0556],
        [0.0386, 0.0931]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.359566
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1994e-05, 1.4782e-05],
        [2.2054e-06, 2.3842e-07],
        [3.2902e-05, 2.0444e-05],
        [3.3259e-05, 1.6332e-05],
        [3.1233e-05, 1.3769e-05],
        [2.3842e-07, 1.9312e-05],
        [2.3425e-05, 1.1384e-05],
        [1.9670e-06, 4.5896e-05],
        [2.2054e-06, 4.1723e-05],
        [4.1723e-06, 6.6161e-05],
        [5.9605e-07, 2.5690e-05],
        [2.2054e-06, 4.9949e-05],
        [2.4438e-05, 1.4246e-05],
        [4.1723e-07, 4.3154e-05],
        [1.2994e-05, 9.7752e-06],
        [7.0930e-06, 9.9123e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0757, 0.0465],
        [0.1027, 0.0343],
        [0.0772, 0.0457],
        [0.0814, 0.0433],
        [0.0834, 0.0423],
        [0.0421, 0.0836],
        [0.0816, 0.0432],
        [0.0434, 0.0812],
        [0.0438, 0.0805],
        [0.0442, 0.0798],
        [0.0426, 0.0827],
        [0.0434, 0.0811],
        [0.0783, 0.0450],
        [0.0420, 0.0838],
        [0.0737, 0.0478],
        [0.0445, 0.0792]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.392978
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.3140e-05],
        [3.6478e-05, 3.9756e-05],
        [2.5034e-06, 3.5763e-07],
        [2.0862e-06, 3.4511e-05],
        [2.0862e-06, 6.1512e-05],
        [3.5763e-07, 2.5749e-05],
        [3.2842e-05, 2.5392e-05],
        [8.2254e-06, 4.2319e-06],
        [1.7285e-06, 4.6909e-05],
        [4.7684e-07, 3.1769e-05],
        [2.0027e-05, 1.9550e-05],
        [1.4961e-05, 1.9491e-05],
        [3.3319e-05, 1.7941e-05],
        [1.0133e-06, 3.4153e-05],
        [1.5914e-05, 7.6890e-06],
        [2.4498e-05, 1.8179e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0833],
        [0.0679, 0.0527],
        [0.1009, 0.0354],
        [0.0445, 0.0803],
        [0.0435, 0.0822],
        [0.0427, 0.0838],
        [0.0740, 0.0483],
        [0.0814, 0.0439],
        [0.0436, 0.0820],
        [0.0427, 0.0837],
        [0.0698, 0.0512],
        [0.0650, 0.0550],
        [0.0806, 0.0444],
        [0.0433, 0.0826],
        [0.0826, 0.0433],
        [0.0747, 0.0479]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.350520
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3365e-05, 6.3539e-05],
        [1.0669e-05, 7.8082e-06],
        [1.1921e-07, 1.9789e-05],
        [5.0664e-06, 7.7486e-07],
        [1.6212e-05, 9.2387e-06],
        [3.5763e-07, 1.9312e-05],
        [2.7776e-05, 4.3392e-05],
        [4.1306e-05, 2.5034e-05],
        [1.0729e-06, 4.2737e-05],
        [8.9407e-07, 3.5107e-05],
        [2.1398e-05, 9.1195e-06],
        [1.1921e-06, 4.6074e-05],
        [1.4305e-06, 4.0829e-05],
        [1.7107e-05, 2.5272e-05],
        [1.6809e-05, 7.3910e-06],
        [4.2319e-06, 7.7665e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0559, 0.0638],
        [0.0761, 0.0469],
        [0.0430, 0.0830],
        [0.1017, 0.0351],
        [0.0808, 0.0442],
        [0.0435, 0.0820],
        [0.0631, 0.0565],
        [0.0796, 0.0448],
        [0.0438, 0.0815],
        [0.0438, 0.0815],
        [0.0861, 0.0414],
        [0.0438, 0.0815],
        [0.0442, 0.0808],
        [0.0640, 0.0558],
        [0.0856, 0.0417],
        [0.0450, 0.0793]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.348931
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.0174e-05, 2.1338e-05],
        [3.4571e-05, 2.5511e-05],
        [2.0266e-06, 4.3452e-05],
        [1.8895e-05, 1.7762e-05],
        [1.4544e-05, 1.2040e-05],
        [2.5213e-05, 1.1742e-05],
        [1.6689e-06, 4.0770e-05],
        [1.5080e-05, 1.3292e-05],
        [1.0610e-05, 6.5565e-06],
        [1.2517e-06, 5.5313e-05],
        [3.3021e-05, 2.3782e-05],
        [2.1815e-05, 1.8477e-05],
        [1.1325e-06, 7.3671e-05],
        [4.5300e-06, 7.1526e-07],
        [8.3447e-07, 3.3975e-05],
        [5.9605e-07, 2.7537e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0778, 0.0461],
        [0.0720, 0.0498],
        [0.0424, 0.0847],
        [0.0678, 0.0529],
        [0.0700, 0.0513],
        [0.0801, 0.0448],
        [0.0421, 0.0852],
        [0.0689, 0.0521],
        [0.0752, 0.0477],
        [0.0414, 0.0866],
        [0.0724, 0.0495],
        [0.0696, 0.0515],
        [0.0411, 0.0872],
        [0.0961, 0.0373],
        [0.0415, 0.0865],
        [0.0414, 0.0867]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.419501
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-07, 2.1756e-05],
        [1.7524e-05, 6.7353e-06],
        [0.0000e+00, 2.6822e-06],
        [2.6822e-06, 6.7234e-05],
        [5.9605e-07, 3.7432e-05],
        [2.0623e-05, 1.3828e-05],
        [4.7684e-07, 2.1577e-05],
        [1.7941e-05, 9.5963e-06],
        [5.9605e-07, 2.7478e-05],
        [2.7418e-06, 6.7472e-05],
        [1.3530e-05, 1.4544e-05],
        [5.0664e-06, 7.0751e-05],
        [1.6272e-05, 5.1856e-06],
        [9.7752e-06, 6.3777e-06],
        [1.1325e-06, 5.4538e-05],
        [1.4901e-06, 4.4584e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0468, 0.0763],
        [0.0951, 0.0376],
        [0.0462, 0.0774],
        [0.0480, 0.0745],
        [0.0469, 0.0762],
        [0.0840, 0.0425],
        [0.0472, 0.0757],
        [0.0886, 0.0403],
        [0.0472, 0.0757],
        [0.0480, 0.0744],
        [0.0748, 0.0478],
        [0.0494, 0.0724],
        [0.0986, 0.0362],
        [0.0846, 0.0422],
        [0.0471, 0.0758],
        [0.0477, 0.0749]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.329072
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-06, 5.6922e-05],
        [1.7941e-05, 7.2122e-06],
        [1.4186e-05, 7.8678e-06],
        [3.2604e-05, 1.3590e-05],
        [1.1921e-06, 4.5359e-05],
        [1.6332e-05, 8.2850e-06],
        [2.8133e-05, 3.0398e-05],
        [1.7643e-05, 1.2696e-05],
        [2.5630e-06, 3.5763e-07],
        [8.3447e-07, 3.3557e-05],
        [1.7703e-05, 1.1802e-05],
        [1.0967e-05, 6.7353e-06],
        [1.4305e-06, 3.9458e-05],
        [7.3910e-06, 9.2804e-05],
        [1.8477e-06, 5.8055e-05],
        [1.8477e-06, 6.5386e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0417, 0.0848],
        [0.0828, 0.0427],
        [0.0772, 0.0458],
        [0.0822, 0.0431],
        [0.0416, 0.0850],
        [0.0788, 0.0449],
        [0.0656, 0.0539],
        [0.0726, 0.0488],
        [0.0976, 0.0363],
        [0.0416, 0.0851],
        [0.0739, 0.0479],
        [0.0754, 0.0469],
        [0.0420, 0.0842],
        [0.0437, 0.0810],
        [0.0418, 0.0846],
        [0.0417, 0.0849]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.311908
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.7220e-06, 7.4983e-05],
        [4.7684e-07, 2.7955e-05],
        [3.9995e-05, 3.0160e-05],
        [3.1650e-05, 1.8299e-05],
        [8.3447e-07, 4.1902e-05],
        [1.1325e-06, 4.1962e-05],
        [2.9206e-06, 2.3842e-07],
        [1.9670e-06, 5.4955e-05],
        [2.1756e-05, 1.6570e-05],
        [3.6359e-06, 6.8128e-05],
        [3.0398e-05, 6.6936e-05],
        [3.5763e-07, 2.7597e-05],
        [2.0504e-05, 1.6987e-05],
        [7.1526e-07, 4.4048e-05],
        [1.3232e-05, 5.6624e-06],
        [2.9445e-05, 2.8789e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0468, 0.0762],
        [0.0443, 0.0804],
        [0.0770, 0.0462],
        [0.0821, 0.0434],
        [0.0444, 0.0802],
        [0.0447, 0.0797],
        [0.1098, 0.0324],
        [0.0451, 0.0790],
        [0.0768, 0.0464],
        [0.0458, 0.0777],
        [0.0595, 0.0598],
        [0.0441, 0.0807],
        [0.0753, 0.0473],
        [0.0443, 0.0805],
        [0.0877, 0.0406],
        [0.0722, 0.0493]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.435851
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-06, 4.3988e-05],
        [3.4034e-05, 2.3007e-05],
        [3.5286e-05, 4.5657e-05],
        [1.7881e-07, 1.7107e-05],
        [2.3305e-05, 1.1206e-05],
        [2.3603e-05, 2.9385e-05],
        [6.4373e-06, 3.5167e-06],
        [1.0967e-05, 6.9201e-05],
        [2.5630e-06, 6.7174e-05],
        [5.3644e-07, 2.4319e-05],
        [1.5855e-05, 8.7619e-06],
        [1.4663e-05, 5.7220e-06],
        [1.7524e-05, 2.0325e-05],
        [3.9935e-06, 7.2539e-05],
        [1.6093e-06, 3.7432e-05],
        [3.5167e-06, 4.7684e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0821],
        [0.0753, 0.0475],
        [0.0641, 0.0558],
        [0.0419, 0.0854],
        [0.0815, 0.0439],
        [0.0647, 0.0553],
        [0.0792, 0.0452],
        [0.0475, 0.0752],
        [0.0430, 0.0832],
        [0.0424, 0.0844],
        [0.0789, 0.0453],
        [0.0851, 0.0420],
        [0.0659, 0.0543],
        [0.0437, 0.0819],
        [0.0432, 0.0828],
        [0.1000, 0.0358]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.396212
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.2994e-05, 6.4909e-05],
        [3.0994e-06, 4.7684e-07],
        [2.0146e-05, 1.0192e-05],
        [2.9802e-06, 4.4525e-05],
        [2.5034e-05, 1.9193e-05],
        [2.6584e-05, 2.3603e-05],
        [3.1590e-06, 5.2989e-05],
        [1.1563e-05, 9.7811e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0969, 0.1479],
        [0.1950, 0.0735],
        [0.1593, 0.0900],
        [0.0873, 0.1641],
        [0.1444, 0.0992],
        [0.1392, 0.1029],
        [0.0867, 0.1652],
        [0.0911, 0.1572]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.218246
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 2 and batchsize 16: 0:00:04.927712
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06],
        [7.6294e-06, 9.0599e-06]], device='cuda:0') torch.Size([114, 2])
answers_probs just softmax dim 0: tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3901e-05, 1.5795e-05],
        [5.9605e-07, 2.7061e-05],
        [4.1842e-05, 3.1590e-05],
        [2.0683e-05, 1.6510e-05],
        [6.5565e-07, 2.7597e-05],
        [3.3081e-05, 1.4544e-05],
        [4.3511e-06, 6.2764e-05],
        [2.2948e-05, 1.2755e-05],
        [1.0729e-06, 3.8862e-05],
        [7.1526e-07, 3.5763e-05],
        [8.3447e-07, 2.8729e-05],
        [4.7684e-07, 2.7537e-05],
        [1.1921e-07, 6.3777e-06],
        [1.9491e-05, 1.8477e-05],
        [3.1710e-05, 6.8724e-05],
        [1.3590e-05, 5.1856e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0809, 0.0445],
        [0.0453, 0.0795],
        [0.0783, 0.0460],
        [0.0773, 0.0466],
        [0.0453, 0.0794],
        [0.0887, 0.0406],
        [0.0473, 0.0761],
        [0.0843, 0.0427],
        [0.0455, 0.0791],
        [0.0452, 0.0797],
        [0.0456, 0.0790],
        [0.0451, 0.0799],
        [0.0451, 0.0798],
        [0.0740, 0.0486],
        [0.0608, 0.0592],
        [0.0914, 0.0394]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.284863
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5167e-06, 4.1723e-07],
        [2.3842e-05, 2.6405e-05],
        [1.1921e-06, 7.8738e-05],
        [9.1791e-06, 5.4002e-05],
        [2.1219e-05, 8.5831e-06],
        [1.3947e-05, 5.2452e-06],
        [1.3709e-06, 2.9802e-05],
        [1.8418e-05, 8.1062e-06],
        [5.0068e-06, 7.2241e-05],
        [3.0100e-05, 1.6749e-05],
        [1.3113e-06, 4.8101e-05],
        [3.4571e-06, 8.7619e-05],
        [9.4175e-06, 4.5896e-06],
        [7.6294e-06, 1.1277e-04],
        [1.7226e-05, 7.5102e-06],
        [8.9407e-06, 5.9426e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0995, 0.0355],
        [0.0654, 0.0539],
        [0.0413, 0.0854],
        [0.0470, 0.0750],
        [0.0829, 0.0425],
        [0.0841, 0.0419],
        [0.0425, 0.0830],
        [0.0815, 0.0433],
        [0.0434, 0.0812],
        [0.0773, 0.0456],
        [0.0418, 0.0844],
        [0.0423, 0.0835],
        [0.0797, 0.0443],
        [0.0433, 0.0814],
        [0.0816, 0.0432],
        [0.0464, 0.0761]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.394840
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1384e-05, 6.1989e-06],
        [1.9729e-05, 6.4373e-06],
        [5.9605e-07, 3.8147e-05],
        [1.7881e-06, 4.2498e-05],
        [9.3579e-06, 6.0260e-05],
        [2.2650e-06, 4.1842e-05],
        [4.4107e-06, 8.5831e-05],
        [2.0087e-05, 1.9968e-05],
        [1.6689e-06, 6.0499e-05],
        [1.9550e-05, 9.9540e-06],
        [4.2558e-05, 2.6405e-05],
        [5.1856e-06, 8.0824e-05],
        [2.3663e-05, 1.2875e-05],
        [2.1815e-05, 7.0930e-06],
        [2.6584e-05, 2.0683e-05],
        [2.9802e-06, 4.1723e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0762, 0.0464],
        [0.0848, 0.0417],
        [0.0405, 0.0874],
        [0.0415, 0.0852],
        [0.0456, 0.0776],
        [0.0420, 0.0843],
        [0.0419, 0.0845],
        [0.0659, 0.0537],
        [0.0410, 0.0864],
        [0.0774, 0.0457],
        [0.0739, 0.0479],
        [0.0424, 0.0835],
        [0.0762, 0.0464],
        [0.0848, 0.0417],
        [0.0700, 0.0506],
        [0.0959, 0.0369]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.398845
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 4.2260e-05],
        [1.8299e-05, 1.6391e-05],
        [3.4690e-05, 7.2360e-05],
        [1.4305e-06, 4.2558e-05],
        [2.3842e-07, 1.9073e-05],
        [8.4043e-06, 1.0657e-04],
        [3.6180e-05, 2.3901e-05],
        [4.4107e-06, 8.4400e-05],
        [4.1664e-05, 1.9073e-05],
        [1.6451e-05, 1.1957e-04],
        [4.4048e-05, 2.3365e-05],
        [1.8001e-05, 2.4796e-05],
        [1.3113e-06, 3.7551e-05],
        [2.5511e-05, 1.5855e-05],
        [2.2054e-06, 5.7042e-05],
        [2.9206e-06, 2.9802e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0444, 0.0805],
        [0.0735, 0.0487],
        [0.0600, 0.0597],
        [0.0448, 0.0799],
        [0.0439, 0.0815],
        [0.0466, 0.0767],
        [0.0792, 0.0452],
        [0.0456, 0.0786],
        [0.0861, 0.0416],
        [0.0489, 0.0731],
        [0.0833, 0.0430],
        [0.0660, 0.0542],
        [0.0448, 0.0798],
        [0.0803, 0.0446],
        [0.0450, 0.0795],
        [0.1074, 0.0333]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.439121
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8477e-06, 5.3585e-05],
        [3.5942e-05, 3.5703e-05],
        [3.1114e-05, 1.7285e-05],
        [2.2590e-05, 1.8001e-05],
        [2.1100e-05, 5.5432e-06],
        [1.3232e-05, 7.0930e-06],
        [4.6372e-05, 4.6015e-05],
        [2.2292e-05, 9.5367e-06],
        [1.8954e-05, 9.5963e-06],
        [8.9407e-07, 3.8505e-05],
        [1.0729e-06, 3.7372e-05],
        [2.3246e-06, 4.5002e-05],
        [4.5896e-06, 7.7486e-07],
        [3.8385e-05, 2.6405e-05],
        [1.5438e-05, 9.9540e-06],
        [1.8835e-05, 1.4007e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0384, 0.0944],
        [0.0613, 0.0591],
        [0.0706, 0.0513],
        [0.0648, 0.0559],
        [0.0819, 0.0442],
        [0.0712, 0.0509],
        [0.0613, 0.0591],
        [0.0748, 0.0484],
        [0.0721, 0.0502],
        [0.0380, 0.0954],
        [0.0382, 0.0949],
        [0.0390, 0.0929],
        [0.0873, 0.0415],
        [0.0671, 0.0539],
        [0.0682, 0.0531],
        [0.0659, 0.0550]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.420883
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6597e-05, 4.8101e-05],
        [1.8001e-05, 8.8811e-06],
        [1.9670e-06, 5.8293e-05],
        [2.1636e-05, 1.1325e-05],
        [1.8477e-06, 5.2750e-05],
        [5.9605e-07, 1.6212e-05],
        [1.9670e-06, 4.2677e-05],
        [3.8147e-06, 6.7532e-05],
        [4.4703e-06, 4.9353e-05],
        [3.0637e-05, 1.9014e-05],
        [1.5378e-05, 8.4043e-06],
        [1.6272e-05, 1.6570e-05],
        [1.4544e-05, 1.5736e-05],
        [1.4901e-06, 3.9816e-05],
        [2.0266e-06, 6.7413e-05],
        [3.0160e-05, 2.4438e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0684, 0.0532],
        [0.0867, 0.0419],
        [0.0458, 0.0793],
        [0.0855, 0.0425],
        [0.0459, 0.0792],
        [0.0460, 0.0791],
        [0.0464, 0.0784],
        [0.0468, 0.0777],
        [0.0482, 0.0754],
        [0.0822, 0.0442],
        [0.0847, 0.0429],
        [0.0728, 0.0499],
        [0.0717, 0.0507],
        [0.0460, 0.0790],
        [0.0457, 0.0796],
        [0.0771, 0.0471]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.418261
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-06, 2.3842e-07],
        [3.0696e-05, 1.9193e-05],
        [8.3447e-07, 2.5749e-05],
        [4.1127e-06, 7.6473e-05],
        [2.8014e-06, 4.3511e-05],
        [1.4663e-05, 5.2452e-06],
        [2.8551e-05, 1.9908e-05],
        [2.0862e-06, 4.3452e-05],
        [1.8477e-05, 1.4186e-05],
        [9.8348e-06, 4.4107e-06],
        [2.1875e-05, 8.1658e-06],
        [3.9279e-05, 1.9729e-05],
        [3.1710e-05, 1.4544e-05],
        [8.1658e-06, 2.9802e-06],
        [2.2233e-05, 1.5557e-05],
        [2.0862e-06, 3.9518e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0914, 0.0390],
        [0.0683, 0.0522],
        [0.0381, 0.0936],
        [0.0388, 0.0918],
        [0.0392, 0.0909],
        [0.0771, 0.0463],
        [0.0665, 0.0536],
        [0.0386, 0.0923],
        [0.0650, 0.0549],
        [0.0736, 0.0484],
        [0.0764, 0.0466],
        [0.0718, 0.0497],
        [0.0732, 0.0487],
        [0.0768, 0.0464],
        [0.0665, 0.0536],
        [0.0388, 0.0919]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.397028
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 3.2544e-05],
        [4.5300e-06, 6.8486e-05],
        [2.1100e-05, 9.8944e-06],
        [2.5034e-06, 5.8889e-05],
        [1.2040e-05, 7.7486e-06],
        [1.0133e-06, 3.2187e-05],
        [2.2650e-06, 5.8174e-05],
        [5.9605e-08, 4.0531e-06],
        [4.0054e-05, 2.6464e-05],
        [1.3709e-06, 4.9710e-05],
        [1.7822e-05, 8.4043e-06],
        [1.9729e-05, 8.7023e-06],
        [6.5565e-07, 4.3869e-05],
        [1.7881e-06, 5.7340e-05],
        [2.0325e-05, 9.0599e-06],
        [4.7684e-07, 2.7061e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0467, 0.0763],
        [0.0486, 0.0734],
        [0.0901, 0.0395],
        [0.0475, 0.0749],
        [0.0839, 0.0425],
        [0.0470, 0.0757],
        [0.0474, 0.0752],
        [0.0463, 0.0769],
        [0.0833, 0.0427],
        [0.0469, 0.0760],
        [0.0900, 0.0396],
        [0.0913, 0.0390],
        [0.0463, 0.0769],
        [0.0470, 0.0757],
        [0.0911, 0.0391],
        [0.0464, 0.0767]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.323975
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-05, 1.0431e-05],
        [1.3947e-05, 5.0664e-06],
        [2.5630e-06, 6.3956e-05],
        [2.2054e-05, 1.1504e-05],
        [1.4305e-06, 4.1366e-05],
        [1.1325e-06, 3.9518e-05],
        [1.2577e-05, 7.4506e-06],
        [3.5763e-07, 1.1384e-05],
        [2.4259e-05, 6.9678e-05],
        [8.3447e-07, 3.9160e-05],
        [7.7486e-07, 2.3484e-05],
        [6.5565e-07, 3.0994e-05],
        [4.2319e-06, 9.2089e-05],
        [2.9802e-07, 2.0146e-05],
        [9.4771e-06, 8.1122e-05],
        [3.5763e-07, 6.8545e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0858, 0.0425],
        [0.1023, 0.0356],
        [0.0511, 0.0714],
        [0.0948, 0.0385],
        [0.0508, 0.0718],
        [0.0505, 0.0722],
        [0.0921, 0.0396],
        [0.0507, 0.0720],
        [0.0636, 0.0573],
        [0.0502, 0.0727],
        [0.0507, 0.0719],
        [0.0502, 0.0727],
        [0.0513, 0.0710],
        [0.0499, 0.0732],
        [0.0546, 0.0669],
        [0.0516, 0.0706]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.551010
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.9908e-05],
        [4.2915e-06, 5.4002e-05],
        [4.6492e-06, 6.3658e-05],
        [1.4484e-05, 5.5432e-06],
        [2.9802e-07, 2.0504e-05],
        [5.3644e-07, 2.5809e-05],
        [4.8220e-05, 1.9312e-05],
        [3.2187e-06, 7.2062e-05],
        [1.8179e-05, 1.2517e-05],
        [1.3113e-06, 4.5240e-05],
        [3.0935e-05, 1.9670e-05],
        [2.9683e-05, 1.5497e-05],
        [5.3644e-07, 1.1027e-05],
        [7.0333e-06, 1.0473e-04],
        [4.6849e-05, 2.4855e-05],
        [1.8775e-05, 1.0967e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0441, 0.0807],
        [0.0471, 0.0756],
        [0.0468, 0.0760],
        [0.0902, 0.0395],
        [0.0444, 0.0802],
        [0.0446, 0.0798],
        [0.0893, 0.0399],
        [0.0457, 0.0780],
        [0.0791, 0.0450],
        [0.0450, 0.0791],
        [0.0806, 0.0442],
        [0.0844, 0.0422],
        [0.0458, 0.0777],
        [0.0466, 0.0764],
        [0.0841, 0.0424],
        [0.0822, 0.0433]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.330513
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-06, 5.4657e-05],
        [3.5763e-07, 6.5565e-06],
        [2.7180e-05, 1.8835e-05],
        [3.5763e-06, 5.1796e-05],
        [7.1526e-07, 3.6716e-05],
        [7.7486e-07, 2.5392e-05],
        [2.8610e-05, 2.3723e-05],
        [3.3021e-05, 1.3888e-05],
        [2.1636e-05, 9.2387e-06],
        [1.4305e-06, 6.4731e-05],
        [3.4392e-05, 3.0339e-05],
        [2.8372e-05, 1.3053e-05],
        [2.6822e-06, 7.3731e-05],
        [4.6670e-05, 2.2948e-05],
        [4.3750e-05, 1.8954e-05],
        [1.1921e-06, 4.9293e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0789],
        [0.0448, 0.0796],
        [0.0767, 0.0465],
        [0.0453, 0.0786],
        [0.0433, 0.0823],
        [0.0438, 0.0814],
        [0.0734, 0.0485],
        [0.0859, 0.0415],
        [0.0856, 0.0416],
        [0.0434, 0.0821],
        [0.0723, 0.0493],
        [0.0843, 0.0423],
        [0.0440, 0.0810],
        [0.0831, 0.0429],
        [0.0854, 0.0417],
        [0.0435, 0.0819]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.356030
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 3.4094e-05],
        [1.7881e-07, 1.6332e-05],
        [4.2915e-06, 1.7285e-06],
        [4.2915e-05, 2.1577e-05],
        [4.5419e-05, 4.9829e-05],
        [1.0133e-06, 4.5121e-05],
        [2.0206e-05, 6.9737e-06],
        [2.3842e-07, 1.5199e-05],
        [1.4365e-05, 8.8215e-06],
        [5.3644e-05, 3.4392e-05],
        [2.0444e-05, 7.9870e-06],
        [5.8413e-06, 8.5711e-05],
        [1.3649e-05, 7.2122e-06],
        [3.5763e-07, 3.2008e-05],
        [1.5497e-06, 3.3617e-05],
        [3.3200e-05, 4.7922e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0420, 0.0847],
        [0.0420, 0.0847],
        [0.0848, 0.0420],
        [0.0809, 0.0440],
        [0.0670, 0.0531],
        [0.0425, 0.0838],
        [0.0874, 0.0407],
        [0.0422, 0.0843],
        [0.0772, 0.0461],
        [0.0764, 0.0466],
        [0.0853, 0.0417],
        [0.0443, 0.0803],
        [0.0800, 0.0445],
        [0.0420, 0.0847],
        [0.0434, 0.0819],
        [0.0626, 0.0569]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.468335
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.0206e-05, 1.7047e-05],
        [3.0041e-05, 1.2219e-05],
        [3.2067e-05, 1.9312e-05],
        [1.9252e-05, 2.1100e-05],
        [1.1921e-07, 5.7220e-06],
        [2.0266e-06, 3.1888e-05],
        [1.1921e-07, 1.3471e-05],
        [6.5565e-07, 2.3067e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1515, 0.0951],
        [0.1793, 0.0803],
        [0.1644, 0.0876],
        [0.1419, 0.1015],
        [0.0899, 0.1602],
        [0.0935, 0.1541],
        [0.0889, 0.1621],
        [0.0906, 0.1591]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.176056
acc:  0.975
Time taken to execute the en SA task with prompt type passive, variation 3 and batchsize 16: 0:00:04.976590
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06],
        [6.7353e-06, 6.3181e-06]], device='cuda:0') torch.Size([122, 2])
answers_probs just softmax dim 0: tensor([[0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082]], device='cuda:0')
tensor([[0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082],
        [0.0082, 0.0082]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2875e-05, 7.9870e-06],
        [4.7684e-07, 3.0637e-05],
        [2.2590e-05, 1.8418e-05],
        [2.8014e-06, 2.9802e-07],
        [1.8895e-05, 1.0431e-05],
        [1.7762e-05, 1.3411e-05],
        [2.7418e-06, 5.6326e-05],
        [1.6093e-06, 5.5134e-05],
        [2.3425e-05, 3.9220e-05],
        [1.8537e-05, 1.0133e-05],
        [5.9605e-08, 1.2815e-05],
        [2.9802e-07, 1.8060e-05],
        [1.7881e-05, 9.6560e-06],
        [1.9133e-05, 1.4663e-05],
        [2.5272e-05, 1.1384e-05],
        [7.9274e-06, 3.9339e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0718, 0.0499],
        [0.0393, 0.0910],
        [0.0672, 0.0533],
        [0.0956, 0.0374],
        [0.0738, 0.0485],
        [0.0685, 0.0523],
        [0.0406, 0.0882],
        [0.0398, 0.0898],
        [0.0563, 0.0636],
        [0.0739, 0.0484],
        [0.0389, 0.0920],
        [0.0394, 0.0909],
        [0.0741, 0.0483],
        [0.0682, 0.0525],
        [0.0772, 0.0464],
        [0.0755, 0.0474]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.365991
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-06, 5.6326e-05],
        [9.8348e-06, 6.3181e-06],
        [1.1325e-06, 4.6253e-05],
        [2.8610e-05, 2.1398e-05],
        [1.1921e-07, 1.7166e-05],
        [2.9802e-07, 2.1815e-05],
        [2.0564e-05, 1.1742e-05],
        [1.8060e-05, 9.9540e-06],
        [1.4246e-05, 8.7023e-06],
        [7.1526e-07, 5.0724e-05],
        [2.0266e-06, 1.3709e-05],
        [2.0504e-05, 1.3411e-05],
        [1.4544e-05, 5.9009e-06],
        [1.3709e-05, 4.1723e-06],
        [2.0266e-06, 5.9545e-05],
        [1.2517e-06, 5.2869e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0440, 0.0807],
        [0.0780, 0.0456],
        [0.0434, 0.0818],
        [0.0752, 0.0473],
        [0.0427, 0.0832],
        [0.0430, 0.0827],
        [0.0802, 0.0443],
        [0.0808, 0.0440],
        [0.0789, 0.0451],
        [0.0430, 0.0827],
        [0.0482, 0.0737],
        [0.0776, 0.0458],
        [0.0864, 0.0412],
        [0.0913, 0.0389],
        [0.0438, 0.0811],
        [0.0434, 0.0819]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.355677
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5557e-05, 1.3828e-05],
        [2.9802e-07, 2.1279e-05],
        [9.5367e-07, 3.3557e-05],
        [2.0146e-05, 1.2636e-05],
        [1.3113e-06, 4.7684e-05],
        [1.4305e-06, 5.5850e-05],
        [1.9670e-06, 4.5419e-05],
        [6.4373e-06, 6.2883e-05],
        [1.1325e-06, 4.3690e-05],
        [1.4007e-05, 6.1989e-06],
        [1.5974e-05, 1.6451e-05],
        [2.0564e-05, 1.9789e-05],
        [8.9407e-07, 4.5180e-05],
        [1.6391e-05, 5.7638e-05],
        [1.2934e-05, 1.3053e-05],
        [1.0133e-06, 1.7703e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0806, 0.0455],
        [0.0481, 0.0763],
        [0.0488, 0.0752],
        [0.0877, 0.0418],
        [0.0487, 0.0753],
        [0.0486, 0.0754],
        [0.0495, 0.0742],
        [0.0521, 0.0705],
        [0.0487, 0.0754],
        [0.0949, 0.0387],
        [0.0777, 0.0472],
        [0.0790, 0.0465],
        [0.0484, 0.0758],
        [0.0592, 0.0620],
        [0.0780, 0.0470],
        [0.0501, 0.0732]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.356771
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2769e-05, 1.8120e-05],
        [1.6093e-06, 4.6015e-05],
        [8.9407e-07, 5.2094e-05],
        [2.1875e-05, 1.6093e-05],
        [4.7684e-07, 3.5167e-05],
        [1.4901e-06, 3.5048e-05],
        [2.7061e-05, 5.0962e-05],
        [1.4901e-05, 5.9009e-06],
        [2.3842e-07, 2.4617e-05],
        [2.1636e-05, 1.5974e-05],
        [2.0146e-05, 1.5914e-05],
        [1.5497e-06, 5.7876e-05],
        [3.1590e-06, 6.5088e-05],
        [4.4107e-06, 5.9605e-07],
        [9.1195e-06, 4.7088e-06],
        [2.9981e-05, 3.2723e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0738, 0.0484],
        [0.0437, 0.0817],
        [0.0430, 0.0831],
        [0.0752, 0.0475],
        [0.0428, 0.0834],
        [0.0440, 0.0811],
        [0.0598, 0.0597],
        [0.0865, 0.0413],
        [0.0427, 0.0837],
        [0.0751, 0.0475],
        [0.0739, 0.0483],
        [0.0434, 0.0823],
        [0.0443, 0.0807],
        [0.1020, 0.0350],
        [0.0817, 0.0437],
        [0.0682, 0.0524]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.358752
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-05, 1.2815e-05],
        [1.1504e-05, 5.3644e-06],
        [3.5763e-07, 2.3425e-05],
        [1.7881e-07, 1.8716e-05],
        [4.7684e-07, 3.1352e-05],
        [1.2040e-05, 3.9339e-06],
        [2.9802e-07, 2.3484e-05],
        [2.1338e-05, 5.9426e-05],
        [2.0742e-05, 1.0014e-05],
        [1.7881e-07, 1.9252e-05],
        [1.0014e-05, 5.9009e-06],
        [1.3173e-05, 8.7619e-06],
        [3.8147e-06, 5.9605e-07],
        [1.0371e-05, 7.0930e-06],
        [2.3842e-07, 2.2709e-05],
        [2.9802e-07, 2.6226e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0786, 0.0447],
        [0.0816, 0.0430],
        [0.0419, 0.0838],
        [0.0416, 0.0843],
        [0.0419, 0.0838],
        [0.0877, 0.0400],
        [0.0418, 0.0840],
        [0.0537, 0.0653],
        [0.0810, 0.0434],
        [0.0416, 0.0843],
        [0.0774, 0.0454],
        [0.0752, 0.0467],
        [0.0980, 0.0358],
        [0.0747, 0.0470],
        [0.0417, 0.0842],
        [0.0417, 0.0841]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.419028
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5630e-06, 7.6175e-05],
        [2.5868e-05, 1.5199e-05],
        [1.3709e-05, 1.6153e-05],
        [1.2875e-05, 5.5432e-06],
        [1.1086e-05, 1.2338e-05],
        [2.6226e-06, 4.9293e-05],
        [1.7881e-07, 5.5432e-06],
        [2.9802e-07, 2.0325e-05],
        [1.7464e-05, 6.8545e-06],
        [1.7464e-05, 1.3173e-05],
        [1.3173e-05, 6.9141e-06],
        [1.0133e-06, 4.0412e-05],
        [2.7061e-05, 1.5080e-05],
        [1.7881e-07, 2.8193e-05],
        [1.6749e-05, 8.7619e-06],
        [2.4199e-05, 1.8418e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0420, 0.0856],
        [0.0764, 0.0471],
        [0.0644, 0.0559],
        [0.0819, 0.0439],
        [0.0653, 0.0551],
        [0.0428, 0.0841],
        [0.0420, 0.0857],
        [0.0413, 0.0871],
        [0.0834, 0.0431],
        [0.0719, 0.0500],
        [0.0784, 0.0459],
        [0.0417, 0.0863],
        [0.0773, 0.0465],
        [0.0409, 0.0879],
        [0.0784, 0.0459],
        [0.0718, 0.0501]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.395817
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8597e-05, 1.6689e-05],
        [9.5367e-07, 4.7088e-05],
        [5.9605e-08, 1.6093e-05],
        [1.4484e-05, 1.4484e-05],
        [1.5497e-06, 3.7313e-05],
        [1.3649e-05, 6.6757e-06],
        [2.5630e-06, 4.7684e-07],
        [7.7486e-06, 7.4685e-05],
        [8.3447e-07, 4.0174e-05],
        [1.8477e-05, 7.7486e-06],
        [1.1742e-05, 4.4107e-06],
        [2.3842e-07, 2.5749e-05],
        [1.4901e-05, 1.1265e-05],
        [1.7881e-07, 2.8789e-05],
        [3.2783e-05, 4.6194e-05],
        [1.3709e-05, 5.9009e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0700, 0.0507],
        [0.0421, 0.0841],
        [0.0415, 0.0855],
        [0.0681, 0.0521],
        [0.0430, 0.0825],
        [0.0809, 0.0438],
        [0.0960, 0.0369],
        [0.0454, 0.0781],
        [0.0422, 0.0841],
        [0.0836, 0.0424],
        [0.0855, 0.0415],
        [0.0417, 0.0850],
        [0.0730, 0.0486],
        [0.0416, 0.0853],
        [0.0626, 0.0567],
        [0.0831, 0.0427]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.328947
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-05, 8.0466e-06],
        [9.5367e-07, 4.9531e-05],
        [1.1921e-06, 2.8193e-05],
        [3.3379e-06, 4.7684e-07],
        [2.2650e-06, 4.4227e-05],
        [2.9802e-07, 1.9729e-05],
        [1.4067e-05, 4.6492e-06],
        [1.7881e-07, 1.4901e-05],
        [1.4126e-05, 7.8082e-06],
        [7.7486e-07, 4.6194e-05],
        [6.0797e-06, 8.3387e-05],
        [2.9802e-07, 3.6001e-05],
        [1.2279e-05, 8.0466e-06],
        [1.8120e-05, 1.4305e-05],
        [1.1623e-05, 8.5831e-06],
        [8.9407e-07, 3.8445e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0847, 0.0415],
        [0.0443, 0.0794],
        [0.0453, 0.0777],
        [0.1044, 0.0337],
        [0.0457, 0.0770],
        [0.0442, 0.0797],
        [0.0923, 0.0381],
        [0.0440, 0.0799],
        [0.0829, 0.0425],
        [0.0442, 0.0796],
        [0.0466, 0.0756],
        [0.0439, 0.0802],
        [0.0796, 0.0442],
        [0.0761, 0.0463],
        [0.0773, 0.0455],
        [0.0445, 0.0791]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.441673
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 3.5405e-05],
        [8.9407e-07, 2.4498e-05],
        [3.4153e-05, 1.6153e-05],
        [5.3644e-07, 2.9147e-05],
        [2.9206e-06, 1.1325e-06],
        [1.3351e-05, 4.6492e-06],
        [1.1921e-07, 1.7405e-05],
        [1.6689e-06, 5.4240e-05],
        [2.4259e-05, 2.4259e-05],
        [7.1526e-07, 3.1769e-05],
        [1.0133e-06, 5.2392e-05],
        [1.9431e-05, 7.9870e-06],
        [5.9605e-07, 3.1471e-05],
        [1.3113e-05, 9.7752e-06],
        [9.8348e-06, 2.8014e-06],
        [3.5763e-07, 2.9504e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0443, 0.0793],
        [0.0452, 0.0777],
        [0.0860, 0.0408],
        [0.0444, 0.0791],
        [0.0896, 0.0392],
        [0.0915, 0.0384],
        [0.0439, 0.0800],
        [0.0449, 0.0782],
        [0.0719, 0.0488],
        [0.0446, 0.0788],
        [0.0444, 0.0790],
        [0.0886, 0.0396],
        [0.0444, 0.0790],
        [0.0773, 0.0454],
        [0.0949, 0.0370],
        [0.0441, 0.0796]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.484813
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5392e-05, 1.2577e-05],
        [1.1921e-06, 4.8339e-05],
        [2.8133e-05, 2.3127e-05],
        [1.7703e-05, 1.2279e-05],
        [1.8239e-05, 6.1393e-06],
        [2.2590e-05, 1.3113e-05],
        [3.5763e-07, 2.0921e-05],
        [8.2254e-06, 2.9206e-06],
        [1.7881e-07, 1.0252e-05],
        [1.3709e-06, 3.9279e-05],
        [3.1590e-05, 1.5616e-05],
        [3.3915e-05, 2.7061e-05],
        [2.0862e-05, 1.0669e-05],
        [1.1921e-07, 1.2398e-05],
        [4.0531e-06, 7.4923e-05],
        [1.9073e-06, 1.7881e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0755, 0.0467],
        [0.0396, 0.0889],
        [0.0669, 0.0526],
        [0.0698, 0.0505],
        [0.0817, 0.0431],
        [0.0728, 0.0484],
        [0.0393, 0.0896],
        [0.0809, 0.0435],
        [0.0393, 0.0895],
        [0.0400, 0.0881],
        [0.0755, 0.0466],
        [0.0674, 0.0522],
        [0.0749, 0.0470],
        [0.0390, 0.0902],
        [0.0407, 0.0865],
        [0.0965, 0.0365]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.401634
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.2888e-05],
        [1.7881e-07, 5.4836e-06],
        [2.7120e-05, 1.4424e-05],
        [2.1398e-05, 2.6226e-05],
        [3.5763e-07, 3.7074e-05],
        [1.4007e-05, 9.8348e-06],
        [1.1444e-05, 1.0848e-05],
        [1.5140e-05, 1.1921e-05],
        [1.9073e-06, 4.1425e-05],
        [6.5565e-07, 3.6538e-05],
        [1.2994e-05, 5.5432e-06],
        [5.9605e-08, 1.3888e-05],
        [1.0729e-06, 5.0843e-05],
        [1.1325e-06, 4.4227e-05],
        [1.4782e-05, 2.4557e-05],
        [9.4771e-06, 3.6359e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0456, 0.0789],
        [0.0460, 0.0783],
        [0.0857, 0.0421],
        [0.0699, 0.0515],
        [0.0450, 0.0800],
        [0.0803, 0.0449],
        [0.0745, 0.0483],
        [0.0781, 0.0462],
        [0.0466, 0.0773],
        [0.0454, 0.0794],
        [0.0899, 0.0401],
        [0.0448, 0.0804],
        [0.0455, 0.0791],
        [0.0457, 0.0788],
        [0.0650, 0.0555],
        [0.0919, 0.0392]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.554366
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7345e-05, 7.9274e-06],
        [3.5763e-07, 2.6107e-05],
        [1.4901e-06, 3.6597e-05],
        [4.7684e-07, 3.8981e-05],
        [2.6286e-05, 1.9431e-05],
        [2.3901e-05, 5.1439e-05],
        [3.0100e-05, 4.3094e-05],
        [1.9073e-06, 2.3842e-07],
        [6.5565e-07, 2.7657e-05],
        [7.7486e-07, 3.5703e-05],
        [4.7684e-07, 5.6148e-05],
        [4.7684e-07, 2.5988e-05],
        [1.7583e-05, 5.5432e-06],
        [3.1531e-05, 1.7405e-05],
        [3.6359e-06, 7.8142e-05],
        [2.9802e-07, 2.5988e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0890, 0.0397],
        [0.0454, 0.0779],
        [0.0466, 0.0759],
        [0.0454, 0.0780],
        [0.0796, 0.0444],
        [0.0615, 0.0575],
        [0.0676, 0.0523],
        [0.1090, 0.0324],
        [0.0459, 0.0771],
        [0.0458, 0.0773],
        [0.0452, 0.0783],
        [0.0456, 0.0775],
        [0.0958, 0.0369],
        [0.0854, 0.0414],
        [0.0468, 0.0755],
        [0.0453, 0.0780]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.316051
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.4305e-06, 5.6624e-05],
        [7.7486e-07, 4.9055e-05],
        [7.5698e-06, 5.4479e-05],
        [2.9802e-06, 7.1526e-07],
        [1.8477e-06, 4.7684e-05],
        [3.5763e-07, 3.4273e-05],
        [2.2650e-06, 6.5804e-05],
        [5.9605e-07, 3.7134e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1078, 0.1356],
        [0.1068, 0.1368],
        [0.1188, 0.1230],
        [0.2356, 0.0620],
        [0.1092, 0.1339],
        [0.1063, 0.1375],
        [0.1087, 0.1344],
        [0.1068, 0.1368]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.155851
acc:  0.97
Time taken to execute the en SA task with prompt type passive, variation 4 and batchsize 16: 0:00:04.956134
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06],
        [5.6624e-06, 6.5565e-06]], device='cuda:0') torch.Size([119, 2])
answers_probs just softmax dim 0: tensor([[0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084]], device='cuda:0')
tensor([[0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7418e-06, 2.9802e-07],
        [5.3644e-07, 3.6359e-05],
        [3.5763e-07, 2.2411e-05],
        [3.6955e-06, 5.5313e-05],
        [1.6630e-05, 1.5378e-05],
        [1.9133e-05, 8.3447e-06],
        [1.0848e-05, 1.1444e-05],
        [4.1723e-07, 2.9206e-05],
        [3.0696e-05, 1.9848e-05],
        [1.1325e-06, 4.8995e-05],
        [2.8610e-05, 4.6372e-05],
        [1.9491e-05, 7.9870e-06],
        [1.7881e-07, 2.0087e-05],
        [3.5763e-07, 2.3723e-05],
        [4.1723e-06, 8.0228e-05],
        [2.2054e-06, 5.8532e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1102, 0.0322],
        [0.0454, 0.0782],
        [0.0454, 0.0781],
        [0.0476, 0.0746],
        [0.0752, 0.0472],
        [0.0897, 0.0396],
        [0.0728, 0.0488],
        [0.0454, 0.0783],
        [0.0821, 0.0432],
        [0.0458, 0.0776],
        [0.0655, 0.0542],
        [0.0909, 0.0390],
        [0.0451, 0.0787],
        [0.0454, 0.0782],
        [0.0470, 0.0755],
        [0.0464, 0.0765]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.419775
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1412e-05, 1.8597e-05],
        [1.1921e-07, 1.4067e-05],
        [7.7486e-07, 4.0412e-05],
        [1.1027e-05, 6.9737e-06],
        [4.1723e-07, 2.2829e-05],
        [1.6868e-05, 6.1393e-06],
        [1.3947e-05, 1.2219e-05],
        [1.4484e-05, 1.1384e-05],
        [1.7822e-05, 8.0466e-06],
        [8.5831e-06, 4.2915e-06],
        [1.4305e-06, 4.0472e-05],
        [1.3828e-05, 6.3777e-06],
        [2.6226e-06, 1.7881e-07],
        [4.7684e-07, 3.4511e-05],
        [1.6093e-06, 5.8174e-05],
        [5.9605e-07, 2.6286e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0754, 0.0465],
        [0.0405, 0.0863],
        [0.0410, 0.0854],
        [0.0742, 0.0472],
        [0.0409, 0.0855],
        [0.0837, 0.0418],
        [0.0685, 0.0511],
        [0.0704, 0.0497],
        [0.0801, 0.0437],
        [0.0783, 0.0447],
        [0.0416, 0.0841],
        [0.0797, 0.0439],
        [0.1025, 0.0341],
        [0.0408, 0.0859],
        [0.0413, 0.0848],
        [0.0411, 0.0852]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.445190
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3365e-05, 1.1921e-05],
        [1.8060e-05, 7.2122e-06],
        [2.1398e-05, 1.0490e-05],
        [7.7486e-07, 4.0293e-05],
        [6.8545e-06, 3.2187e-06],
        [2.3067e-05, 1.0133e-05],
        [1.0788e-05, 7.4506e-06],
        [5.3644e-07, 1.2040e-05],
        [3.8326e-05, 4.4823e-05],
        [3.0398e-06, 8.7202e-05],
        [2.9802e-07, 2.5213e-05],
        [3.1829e-05, 2.2411e-05],
        [1.2398e-05, 6.1393e-06],
        [8.3447e-07, 3.6955e-05],
        [2.3186e-05, 1.9491e-05],
        [2.1338e-05, 1.3173e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0752, 0.0479],
        [0.0793, 0.0455],
        [0.0759, 0.0475],
        [0.0395, 0.0911],
        [0.0766, 0.0470],
        [0.0777, 0.0464],
        [0.0701, 0.0514],
        [0.0405, 0.0890],
        [0.0615, 0.0586],
        [0.0401, 0.0898],
        [0.0393, 0.0918],
        [0.0698, 0.0516],
        [0.0758, 0.0476],
        [0.0397, 0.0908],
        [0.0668, 0.0539],
        [0.0720, 0.0500]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.330425
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.6987e-05],
        [5.4240e-06, 9.3222e-05],
        [2.1458e-06, 6.5625e-05],
        [3.5763e-07, 2.8729e-05],
        [2.2054e-06, 6.0022e-05],
        [2.9802e-07, 3.5346e-05],
        [9.2387e-06, 3.2187e-06],
        [1.4424e-05, 7.0930e-06],
        [1.1921e-07, 1.3769e-05],
        [2.0385e-05, 1.3590e-05],
        [2.4319e-05, 1.7524e-05],
        [4.2319e-06, 5.9605e-07],
        [1.3947e-05, 5.0664e-06],
        [1.3113e-06, 5.2750e-05],
        [1.7285e-06, 4.8339e-05],
        [1.3828e-05, 1.6093e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0440, 0.0798],
        [0.0460, 0.0763],
        [0.0450, 0.0781],
        [0.0441, 0.0796],
        [0.0451, 0.0778],
        [0.0439, 0.0799],
        [0.0914, 0.0384],
        [0.0851, 0.0412],
        [0.0439, 0.0799],
        [0.0794, 0.0442],
        [0.0779, 0.0451],
        [0.1046, 0.0336],
        [0.0907, 0.0387],
        [0.0446, 0.0787],
        [0.0451, 0.0779],
        [0.0691, 0.0508]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.418229
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 6.6161e-06],
        [2.1994e-05, 2.6524e-05],
        [1.0610e-05, 8.5831e-06],
        [2.6226e-06, 6.8784e-05],
        [3.6955e-06, 7.0274e-05],
        [2.3127e-05, 1.2755e-05],
        [1.7226e-05, 4.5896e-06],
        [1.9789e-05, 1.1742e-05],
        [2.3127e-05, 8.6427e-06],
        [3.7074e-05, 1.6451e-05],
        [2.3842e-07, 2.6286e-05],
        [1.4305e-06, 5.7757e-05],
        [5.9605e-07, 2.6464e-05],
        [5.9605e-08, 1.2398e-05],
        [7.7486e-07, 2.7120e-05],
        [9.5367e-07, 3.7789e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0762],
        [0.0696, 0.0510],
        [0.0768, 0.0462],
        [0.0459, 0.0774],
        [0.0465, 0.0763],
        [0.0842, 0.0421],
        [0.0974, 0.0364],
        [0.0828, 0.0428],
        [0.0916, 0.0388],
        [0.0884, 0.0401],
        [0.0446, 0.0795],
        [0.0453, 0.0783],
        [0.0452, 0.0785],
        [0.0444, 0.0799],
        [0.0455, 0.0781],
        [0.0453, 0.0783]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.359410
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 3.1292e-05],
        [7.5102e-06, 6.7770e-05],
        [2.3842e-07, 2.4557e-05],
        [3.8743e-06, 6.1750e-05],
        [7.4506e-06, 2.1458e-06],
        [2.5690e-05, 1.0729e-05],
        [2.1875e-05, 1.2875e-05],
        [3.3975e-06, 3.5763e-07],
        [1.7881e-07, 1.8477e-05],
        [2.5034e-06, 4.5002e-05],
        [1.1921e-06, 5.0426e-05],
        [9.8348e-06, 3.1590e-06],
        [1.6391e-05, 1.4126e-05],
        [7.1526e-07, 3.0160e-05],
        [1.8656e-05, 9.0003e-06],
        [1.3947e-05, 6.6757e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0843],
        [0.0449, 0.0775],
        [0.0410, 0.0848],
        [0.0431, 0.0807],
        [0.0883, 0.0394],
        [0.0822, 0.0423],
        [0.0762, 0.0456],
        [0.1004, 0.0346],
        [0.0410, 0.0848],
        [0.0428, 0.0812],
        [0.0416, 0.0837],
        [0.0866, 0.0402],
        [0.0695, 0.0500],
        [0.0416, 0.0837],
        [0.0797, 0.0436],
        [0.0799, 0.0435]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.399086
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.5698e-06, 2.3246e-06],
        [1.1683e-05, 6.3181e-06],
        [1.1861e-05, 6.0201e-06],
        [2.8610e-05, 1.1623e-05],
        [1.5676e-05, 7.6294e-06],
        [1.6093e-06, 5.1916e-05],
        [2.3842e-07, 1.0848e-05],
        [5.9605e-07, 6.2883e-05],
        [2.4617e-05, 6.5923e-05],
        [9.6560e-06, 5.8115e-05],
        [3.5882e-05, 1.3113e-05],
        [3.5763e-07, 2.0683e-05],
        [2.9206e-06, 6.5565e-07],
        [8.3447e-07, 3.4153e-05],
        [2.3961e-05, 3.6538e-05],
        [1.5378e-05, 3.3379e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0837, 0.0420],
        [0.0745, 0.0472],
        [0.0756, 0.0465],
        [0.0793, 0.0444],
        [0.0763, 0.0461],
        [0.0401, 0.0877],
        [0.0398, 0.0884],
        [0.0393, 0.0895],
        [0.0511, 0.0688],
        [0.0449, 0.0784],
        [0.0810, 0.0434],
        [0.0396, 0.0888],
        [0.0882, 0.0399],
        [0.0399, 0.0882],
        [0.0579, 0.0608],
        [0.0886, 0.0397]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.404160
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 4.9233e-05],
        [2.7418e-06, 6.1393e-05],
        [1.0908e-05, 3.4571e-06],
        [2.9862e-05, 1.1444e-05],
        [2.5630e-06, 1.4782e-05],
        [2.9624e-05, 3.1531e-05],
        [4.2915e-06, 5.9187e-05],
        [3.7909e-05, 2.3186e-05],
        [8.7023e-06, 8.1420e-05],
        [2.4438e-05, 1.2577e-05],
        [5.9605e-07, 3.4034e-05],
        [2.5928e-05, 2.2352e-05],
        [1.7583e-05, 9.7156e-06],
        [2.5988e-05, 9.7752e-06],
        [4.1723e-07, 3.1888e-05],
        [2.3246e-06, 4.5180e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0427, 0.0836],
        [0.0439, 0.0813],
        [0.0899, 0.0397],
        [0.0867, 0.0412],
        [0.0488, 0.0732],
        [0.0683, 0.0523],
        [0.0450, 0.0793],
        [0.0782, 0.0456],
        [0.0463, 0.0770],
        [0.0814, 0.0438],
        [0.0428, 0.0834],
        [0.0720, 0.0496],
        [0.0801, 0.0445],
        [0.0870, 0.0410],
        [0.0426, 0.0837],
        [0.0442, 0.0808]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.351915
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 4.3035e-05],
        [1.0133e-06, 4.5717e-05],
        [1.4424e-05, 8.6427e-06],
        [1.2696e-05, 6.0797e-06],
        [6.5565e-07, 3.0518e-05],
        [1.4067e-05, 2.2352e-05],
        [1.5855e-05, 9.1791e-06],
        [1.8656e-05, 6.0797e-06],
        [1.0729e-06, 4.9710e-05],
        [1.6689e-06, 4.8518e-05],
        [2.8789e-05, 1.2636e-05],
        [4.7684e-07, 4.0174e-05],
        [1.3113e-06, 3.2008e-05],
        [1.4305e-06, 2.0087e-05],
        [3.6359e-06, 6.5029e-05],
        [1.4901e-06, 5.4538e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0473, 0.0756],
        [0.0472, 0.0758],
        [0.0863, 0.0414],
        [0.0908, 0.0394],
        [0.0472, 0.0758],
        [0.0680, 0.0526],
        [0.0870, 0.0411],
        [0.0982, 0.0364],
        [0.0472, 0.0758],
        [0.0478, 0.0749],
        [0.0926, 0.0387],
        [0.0467, 0.0765],
        [0.0481, 0.0745],
        [0.0494, 0.0725],
        [0.0487, 0.0735],
        [0.0474, 0.0754]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.358007
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7107e-05, 6.9141e-06],
        [1.4484e-05, 5.0664e-06],
        [1.5080e-05, 7.5698e-06],
        [9.5367e-06, 5.3048e-06],
        [1.6689e-06, 4.5538e-05],
        [1.0431e-05, 5.8413e-06],
        [1.0133e-06, 5.0426e-05],
        [1.6093e-06, 5.9307e-05],
        [1.8060e-05, 1.4544e-05],
        [1.1921e-06, 2.8074e-05],
        [1.5199e-05, 4.4107e-06],
        [2.0862e-06, 5.2691e-05],
        [1.2517e-05, 4.3511e-06],
        [3.5763e-07, 7.8678e-06],
        [3.5763e-07, 2.5570e-05],
        [6.6161e-06, 5.9366e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0842, 0.0418],
        [0.0866, 0.0406],
        [0.0803, 0.0438],
        [0.0785, 0.0448],
        [0.0428, 0.0822],
        [0.0784, 0.0449],
        [0.0421, 0.0835],
        [0.0424, 0.0830],
        [0.0718, 0.0490],
        [0.0430, 0.0818],
        [0.0896, 0.0393],
        [0.0429, 0.0820],
        [0.0867, 0.0406],
        [0.0431, 0.0816],
        [0.0419, 0.0840],
        [0.0456, 0.0771]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.357702
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.7285e-05],
        [2.3544e-05, 1.3709e-05],
        [3.0637e-05, 1.9670e-05],
        [5.5432e-06, 8.9705e-05],
        [9.5367e-07, 4.0650e-05],
        [1.3351e-05, 5.7220e-06],
        [2.3127e-05, 5.8651e-05],
        [2.1338e-05, 1.4246e-05],
        [2.3544e-05, 1.1742e-05],
        [3.5763e-07, 6.7353e-06],
        [1.1921e-06, 5.2869e-05],
        [1.6034e-05, 5.0664e-06],
        [2.5034e-06, 5.0604e-05],
        [3.5703e-05, 1.8954e-05],
        [1.6689e-05, 5.7817e-06],
        [1.3709e-06, 4.7207e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0418, 0.0849],
        [0.0776, 0.0458],
        [0.0758, 0.0468],
        [0.0437, 0.0812],
        [0.0422, 0.0842],
        [0.0831, 0.0428],
        [0.0547, 0.0649],
        [0.0751, 0.0473],
        [0.0804, 0.0442],
        [0.0434, 0.0819],
        [0.0422, 0.0842],
        [0.0882, 0.0403],
        [0.0432, 0.0821],
        [0.0793, 0.0448],
        [0.0867, 0.0410],
        [0.0424, 0.0837]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.558780
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9339e-06, 1.3709e-06],
        [2.0266e-06, 5.2452e-05],
        [4.9472e-06, 6.9678e-05],
        [3.5107e-05, 3.9220e-05],
        [2.4855e-05, 1.1504e-05],
        [4.1127e-06, 7.4863e-05],
        [1.9014e-05, 8.7619e-06],
        [3.2246e-05, 1.3769e-05],
        [1.0014e-05, 3.1590e-06],
        [8.6427e-06, 3.8743e-06],
        [2.4796e-05, 5.9009e-05],
        [2.3842e-07, 4.0829e-05],
        [2.4498e-05, 1.8477e-05],
        [2.0266e-06, 4.4167e-05],
        [4.7684e-07, 3.3617e-05],
        [3.2783e-06, 7.6354e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0868, 0.0410],
        [0.0429, 0.0829],
        [0.0442, 0.0805],
        [0.0663, 0.0536],
        [0.0819, 0.0434],
        [0.0435, 0.0816],
        [0.0820, 0.0434],
        [0.0833, 0.0427],
        [0.0884, 0.0402],
        [0.0824, 0.0431],
        [0.0556, 0.0640],
        [0.0416, 0.0855],
        [0.0731, 0.0486],
        [0.0432, 0.0823],
        [0.0419, 0.0848],
        [0.0431, 0.0825]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.478232
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.4484e-05, 1.3709e-05],
        [2.4855e-05, 1.4246e-05],
        [1.0133e-05, 5.6028e-06],
        [2.0266e-06, 4.1664e-05],
        [3.5763e-07, 8.1062e-06],
        [2.0444e-05, 7.0930e-06],
        [1.7881e-07, 1.8775e-05],
        [2.9802e-07, 3.4094e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1432, 0.0993],
        [0.1618, 0.0879],
        [0.1631, 0.0872],
        [0.0897, 0.1585],
        [0.0894, 0.1591],
        [0.1800, 0.0790],
        [0.0865, 0.1644],
        [0.0864, 0.1646]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.160940
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 5 and batchsize 16: 0:00:05.060214
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06],
        [5.7220e-06, 5.9605e-06]], device='cuda:0') torch.Size([107, 2])
answers_probs just softmax dim 0: tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9206e-06, 2.9802e-07],
        [1.3113e-06, 5.2989e-05],
        [6.5565e-07, 3.7611e-05],
        [1.7881e-05, 3.3677e-05],
        [1.5378e-05, 1.0967e-05],
        [1.3590e-05, 7.4506e-06],
        [1.2279e-05, 6.7949e-06],
        [1.3173e-05, 1.3888e-05],
        [3.2783e-06, 5.8055e-05],
        [5.3644e-07, 2.4259e-05],
        [2.2709e-05, 1.1206e-05],
        [1.4603e-05, 5.7817e-06],
        [2.0564e-05, 1.3590e-05],
        [4.7684e-07, 3.6180e-05],
        [1.5676e-05, 1.5914e-05],
        [1.9372e-05, 9.5963e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0965, 0.0371],
        [0.0399, 0.0898],
        [0.0396, 0.0904],
        [0.0551, 0.0650],
        [0.0698, 0.0513],
        [0.0743, 0.0482],
        [0.0741, 0.0483],
        [0.0634, 0.0565],
        [0.0411, 0.0872],
        [0.0398, 0.0900],
        [0.0761, 0.0471],
        [0.0797, 0.0449],
        [0.0711, 0.0504],
        [0.0395, 0.0908],
        [0.0640, 0.0560],
        [0.0760, 0.0471]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.402286
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0921e-05, 9.8944e-06],
        [1.1921e-06, 4.6968e-05],
        [1.3590e-05, 7.8678e-06],
        [8.9407e-07, 3.5465e-05],
        [2.4199e-05, 4.4465e-05],
        [2.8014e-06, 5.7936e-05],
        [1.7643e-05, 1.4901e-05],
        [1.1027e-05, 6.4373e-06],
        [6.5565e-07, 2.9325e-05],
        [4.2319e-06, 7.8976e-05],
        [5.3644e-07, 4.0352e-05],
        [2.0146e-05, 2.6643e-05],
        [2.2054e-06, 2.9802e-07],
        [2.0146e-05, 5.5134e-05],
        [2.9802e-07, 2.1517e-05],
        [1.3709e-06, 4.4286e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0882, 0.0407],
        [0.0458, 0.0783],
        [0.0842, 0.0426],
        [0.0458, 0.0783],
        [0.0636, 0.0564],
        [0.0468, 0.0766],
        [0.0769, 0.0467],
        [0.0841, 0.0427],
        [0.0457, 0.0785],
        [0.0470, 0.0763],
        [0.0453, 0.0792],
        [0.0688, 0.0522],
        [0.1079, 0.0332],
        [0.0584, 0.0614],
        [0.0453, 0.0791],
        [0.0461, 0.0779]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.284943
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1802e-05, 1.7583e-05],
        [2.8610e-06, 7.6294e-05],
        [3.4571e-06, 6.9439e-05],
        [4.7684e-07, 2.3544e-05],
        [2.3842e-07, 8.5235e-06],
        [2.9802e-07, 3.9101e-05],
        [4.1723e-07, 2.5094e-05],
        [2.0266e-06, 4.2439e-05],
        [1.5497e-06, 5.1916e-05],
        [1.5259e-05, 1.5497e-05],
        [2.9802e-06, 6.2764e-05],
        [2.8074e-05, 1.2457e-05],
        [1.4305e-06, 2.9504e-05],
        [2.1279e-05, 5.0247e-05],
        [7.9870e-06, 7.1526e-06],
        [6.5565e-07, 3.9339e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0765, 0.0486],
        [0.0531, 0.0700],
        [0.0537, 0.0692],
        [0.0523, 0.0711],
        [0.0526, 0.0706],
        [0.0516, 0.0720],
        [0.0521, 0.0714],
        [0.0536, 0.0693],
        [0.0527, 0.0705],
        [0.0841, 0.0442],
        [0.0536, 0.0694],
        [0.1024, 0.0363],
        [0.0537, 0.0693],
        [0.0690, 0.0539],
        [0.0868, 0.0428],
        [0.0521, 0.0714]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.280020
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 2.4796e-05],
        [1.6093e-06, 3.7193e-05],
        [2.9027e-05, 1.7226e-05],
        [1.6689e-06, 5.2512e-05],
        [2.3842e-07, 1.6630e-05],
        [1.7285e-06, 5.7638e-05],
        [1.4126e-05, 9.4771e-06],
        [9.2983e-06, 6.1393e-06],
        [2.2054e-05, 2.1338e-05],
        [1.0908e-05, 9.9540e-06],
        [1.8775e-05, 1.4544e-05],
        [1.1027e-05, 7.0333e-06],
        [8.5235e-06, 4.8876e-06],
        [4.1723e-07, 5.9009e-06],
        [2.3842e-07, 2.9862e-05],
        [9.5963e-06, 8.5056e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0803],
        [0.0460, 0.0789],
        [0.0826, 0.0439],
        [0.0455, 0.0797],
        [0.0447, 0.0811],
        [0.0454, 0.0799],
        [0.0802, 0.0452],
        [0.0805, 0.0450],
        [0.0733, 0.0495],
        [0.0744, 0.0487],
        [0.0775, 0.0468],
        [0.0812, 0.0447],
        [0.0833, 0.0435],
        [0.0471, 0.0770],
        [0.0444, 0.0816],
        [0.0488, 0.0743]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.554802
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4901e-06, 4.8161e-05],
        [1.3530e-05, 7.0930e-06],
        [1.9073e-06, 6.7472e-05],
        [2.3842e-07, 1.5914e-05],
        [1.1921e-07, 1.5974e-05],
        [2.0862e-05, 1.5020e-05],
        [3.5763e-07, 2.8074e-05],
        [3.1590e-06, 3.9220e-05],
        [1.7881e-07, 2.0683e-05],
        [4.7684e-07, 1.3530e-05],
        [1.4901e-06, 5.8055e-05],
        [7.1526e-07, 3.0458e-05],
        [5.7817e-06, 8.7202e-05],
        [8.9407e-07, 3.5346e-05],
        [3.1114e-05, 1.5914e-05],
        [6.1989e-06, 5.4479e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0539, 0.0685],
        [0.1008, 0.0366],
        [0.0538, 0.0687],
        [0.0531, 0.0696],
        [0.0527, 0.0701],
        [0.0936, 0.0395],
        [0.0530, 0.0697],
        [0.0564, 0.0655],
        [0.0528, 0.0700],
        [0.0541, 0.0683],
        [0.0536, 0.0689],
        [0.0535, 0.0690],
        [0.0557, 0.0664],
        [0.0536, 0.0689],
        [0.1014, 0.0364],
        [0.0579, 0.0638]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.421005
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 5.2214e-05],
        [1.8299e-05, 9.6560e-06],
        [1.1921e-06, 5.9724e-05],
        [1.1563e-05, 4.9472e-06],
        [2.8074e-05, 2.3603e-05],
        [7.6294e-06, 4.5896e-05],
        [2.0325e-05, 1.3769e-05],
        [1.6987e-05, 1.3232e-05],
        [3.8743e-06, 5.3644e-07],
        [1.1921e-06, 4.2379e-05],
        [2.9802e-07, 2.0981e-05],
        [3.1173e-05, 1.7345e-05],
        [1.0669e-05, 9.7752e-06],
        [7.6890e-06, 2.8014e-06],
        [2.8610e-05, 1.3411e-05],
        [1.1146e-05, 6.4373e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0387, 0.0927],
        [0.0729, 0.0492],
        [0.0386, 0.0929],
        [0.0763, 0.0470],
        [0.0652, 0.0550],
        [0.0437, 0.0821],
        [0.0688, 0.0522],
        [0.0665, 0.0540],
        [0.0912, 0.0394],
        [0.0389, 0.0922],
        [0.0384, 0.0934],
        [0.0720, 0.0498],
        [0.0638, 0.0562],
        [0.0788, 0.0455],
        [0.0748, 0.0480],
        [0.0714, 0.0503]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.423089
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9908e-05, 1.6391e-05],
        [1.8895e-05, 1.3590e-05],
        [5.3644e-07, 2.8491e-05],
        [1.1027e-05, 1.0431e-05],
        [1.0669e-05, 5.1856e-06],
        [3.5167e-06, 7.1526e-07],
        [1.1921e-06, 3.6359e-05],
        [7.3910e-06, 5.8174e-05],
        [2.1815e-05, 1.0550e-05],
        [1.3947e-05, 6.3777e-06],
        [6.1989e-06, 2.3842e-06],
        [1.0967e-05, 4.6492e-06],
        [2.2888e-05, 1.3888e-05],
        [1.3530e-05, 6.7353e-06],
        [1.4901e-06, 5.3823e-05],
        [1.0133e-06, 3.2008e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0653, 0.0550],
        [0.0675, 0.0532],
        [0.0384, 0.0934],
        [0.0631, 0.0569],
        [0.0739, 0.0485],
        [0.0866, 0.0414],
        [0.0389, 0.0922],
        [0.0422, 0.0850],
        [0.0740, 0.0485],
        [0.0749, 0.0479],
        [0.0777, 0.0462],
        [0.0761, 0.0471],
        [0.0703, 0.0511],
        [0.0735, 0.0488],
        [0.0387, 0.0926],
        [0.0389, 0.0923]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.400864
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 3.9518e-05],
        [1.6928e-05, 6.4969e-06],
        [1.5616e-05, 5.1856e-06],
        [2.1935e-05, 5.5134e-05],
        [1.2517e-06, 2.9981e-05],
        [1.0014e-05, 6.4373e-06],
        [2.6226e-06, 6.9678e-05],
        [5.3644e-07, 1.8954e-05],
        [7.1526e-07, 2.7537e-05],
        [1.5497e-06, 4.2796e-05],
        [9.2983e-06, 5.4240e-06],
        [1.2398e-05, 2.3186e-05],
        [4.7684e-07, 2.8849e-05],
        [2.7418e-05, 1.3828e-05],
        [3.8147e-06, 1.0729e-06],
        [2.3842e-05, 1.8597e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0437, 0.0815],
        [0.0867, 0.0411],
        [0.0892, 0.0399],
        [0.0560, 0.0636],
        [0.0438, 0.0813],
        [0.0774, 0.0460],
        [0.0437, 0.0816],
        [0.0433, 0.0823],
        [0.0432, 0.0825],
        [0.0436, 0.0817],
        [0.0792, 0.0450],
        [0.0597, 0.0597],
        [0.0428, 0.0832],
        [0.0819, 0.0435],
        [0.0919, 0.0388],
        [0.0739, 0.0482]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.471557
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1636e-05, 2.4319e-05],
        [1.7881e-05, 1.5795e-05],
        [3.6120e-05, 2.7478e-05],
        [2.0862e-06, 2.3842e-07],
        [1.8120e-05, 1.2815e-05],
        [5.2452e-06, 9.5487e-05],
        [7.7486e-07, 3.8505e-05],
        [5.3644e-07, 3.1888e-05],
        [1.5616e-05, 1.0192e-05],
        [1.3709e-06, 3.8803e-05],
        [1.3709e-06, 3.3438e-05],
        [6.3777e-06, 3.3975e-06],
        [1.4722e-05, 1.6034e-05],
        [1.2994e-05, 7.8082e-06],
        [8.3447e-07, 3.1650e-05],
        [5.3644e-07, 2.6226e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0674, 0.0531],
        [0.0716, 0.0500],
        [0.0743, 0.0482],
        [0.1033, 0.0347],
        [0.0756, 0.0473],
        [0.0443, 0.0807],
        [0.0429, 0.0834],
        [0.0428, 0.0836],
        [0.0771, 0.0464],
        [0.0435, 0.0822],
        [0.0438, 0.0817],
        [0.0808, 0.0443],
        [0.0679, 0.0527],
        [0.0786, 0.0455],
        [0.0432, 0.0829],
        [0.0429, 0.0833]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.354773
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.5235e-06, 1.1086e-05],
        [2.3544e-05, 2.7716e-05],
        [3.5167e-06, 5.0306e-05],
        [1.2517e-06, 4.3988e-05],
        [2.3246e-06, 1.7881e-07],
        [1.0133e-06, 3.9697e-05],
        [8.3447e-07, 3.1412e-05],
        [3.1650e-05, 4.5359e-05],
        [1.1027e-05, 1.1563e-05],
        [2.9802e-07, 2.2173e-05],
        [1.4305e-06, 5.1141e-05],
        [5.3644e-07, 3.3140e-05],
        [1.1623e-05, 9.4175e-06],
        [2.9743e-05, 3.9697e-05],
        [8.2850e-06, 3.7551e-06],
        [1.3113e-06, 3.9756e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0693, 0.0520],
        [0.0710, 0.0507],
        [0.0479, 0.0752],
        [0.0461, 0.0781],
        [0.1135, 0.0317],
        [0.0460, 0.0783],
        [0.0460, 0.0783],
        [0.0677, 0.0532],
        [0.0731, 0.0493],
        [0.0455, 0.0792],
        [0.0461, 0.0781],
        [0.0456, 0.0790],
        [0.0779, 0.0462],
        [0.0688, 0.0523],
        [0.0893, 0.0404],
        [0.0463, 0.0778]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.440368
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3828e-05, 8.5831e-06],
        [9.1791e-06, 6.1989e-06],
        [1.6332e-05, 6.8545e-06],
        [7.7486e-07, 6.6459e-05],
        [2.0206e-05, 1.5974e-05],
        [6.6161e-06, 5.9724e-05],
        [1.1325e-06, 4.8459e-05],
        [2.7418e-06, 5.1856e-05],
        [3.2187e-06, 2.9802e-07],
        [1.2517e-06, 4.8399e-05],
        [9.5367e-07, 3.7372e-05],
        [1.0490e-05, 4.5896e-06],
        [2.3365e-05, 1.8895e-05],
        [1.0133e-06, 2.7418e-05],
        [2.5630e-06, 4.7863e-05],
        [1.4007e-05, 6.1989e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0772, 0.0457],
        [0.0757, 0.0466],
        [0.0842, 0.0418],
        [0.0421, 0.0836],
        [0.0728, 0.0484],
        [0.0460, 0.0766],
        [0.0426, 0.0827],
        [0.0438, 0.0805],
        [0.1040, 0.0339],
        [0.0427, 0.0825],
        [0.0427, 0.0825],
        [0.0835, 0.0422],
        [0.0724, 0.0487],
        [0.0432, 0.0816],
        [0.0438, 0.0804],
        [0.0833, 0.0423]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.358587
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1127e-06, 6.8605e-05],
        [3.4571e-06, 8.8096e-05],
        [2.1338e-05, 1.1623e-05],
        [1.5318e-05, 7.6294e-06],
        [8.2850e-06, 3.1590e-06],
        [1.3769e-05, 6.6161e-06],
        [5.7220e-06, 3.2187e-06],
        [2.3901e-05, 2.0444e-05],
        [2.3842e-07, 2.0862e-05],
        [1.0133e-06, 4.4584e-05],
        [2.2054e-06, 4.4227e-05],
        [2.0146e-05, 1.1981e-05],
        [7.1526e-07, 4.0114e-05],
        [2.9206e-06, 6.1095e-05],
        [2.9802e-07, 1.1563e-05],
        [4.1723e-07, 6.1393e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0765],
        [0.0457, 0.0779],
        [0.0841, 0.0424],
        [0.0859, 0.0415],
        [0.0908, 0.0392],
        [0.0865, 0.0412],
        [0.0835, 0.0427],
        [0.0755, 0.0472],
        [0.0445, 0.0800],
        [0.0450, 0.0792],
        [0.0462, 0.0772],
        [0.0825, 0.0432],
        [0.0448, 0.0795],
        [0.0461, 0.0773],
        [0.0452, 0.0789],
        [0.0469, 0.0759]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.358340
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.1921e-05, 6.6757e-06],
        [4.1723e-07, 2.3842e-05],
        [3.0398e-06, 3.5763e-07],
        [2.9802e-06, 7.5281e-05],
        [1.6510e-05, 4.7684e-06],
        [2.4736e-05, 1.4782e-05],
        [1.1921e-07, 1.4603e-05],
        [1.1325e-05, 1.3351e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1456, 0.0958],
        [0.0781, 0.1787],
        [0.1877, 0.0743],
        [0.0797, 0.1750],
        [0.1667, 0.0837],
        [0.1435, 0.0972],
        [0.0773, 0.1804],
        [0.1214, 0.1149]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.122284
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 6 and batchsize 16: 0:00:04.888981
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_6']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06],
        [7.6294e-06, 7.0930e-06]], device='cuda:0') torch.Size([154, 2])
answers_probs just softmax dim 0: tensor([[0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065]], device='cuda:0')
tensor([[0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 7 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 3.1412e-05],
        [1.3709e-05, 5.9605e-06],
        [1.0729e-06, 1.2934e-05],
        [2.3842e-07, 1.9550e-05],
        [6.5565e-07, 2.8789e-05],
        [2.4199e-05, 3.1292e-05],
        [1.2040e-05, 2.4438e-06],
        [3.4928e-05, 1.3232e-05],
        [1.4305e-06, 6.7651e-05],
        [2.6703e-05, 5.8353e-05],
        [1.3113e-06, 3.6955e-05],
        [7.1526e-07, 2.6286e-05],
        [5.9605e-07, 2.5451e-05],
        [1.7881e-07, 1.5795e-05],
        [1.3113e-05, 6.7949e-06],
        [2.0087e-05, 1.4722e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0778],
        [0.0902, 0.0394],
        [0.0485, 0.0733],
        [0.0455, 0.0782],
        [0.0460, 0.0774],
        [0.0695, 0.0512],
        [0.1032, 0.0345],
        [0.0928, 0.0383],
        [0.0459, 0.0775],
        [0.0615, 0.0578],
        [0.0465, 0.0765],
        [0.0462, 0.0771],
        [0.0460, 0.0774],
        [0.0455, 0.0783],
        [0.0869, 0.0410],
        [0.0801, 0.0444]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.342801
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6822e-06, 2.9802e-07],
        [1.0848e-05, 6.7651e-05],
        [1.6332e-05, 6.2585e-06],
        [1.5557e-05, 5.8413e-06],
        [1.2279e-05, 5.3048e-06],
        [2.6047e-05, 1.0014e-05],
        [2.3842e-07, 2.5749e-05],
        [5.7220e-06, 8.6367e-05],
        [2.9802e-06, 4.8399e-05],
        [2.7478e-05, 8.6427e-06],
        [1.7881e-07, 1.4901e-05],
        [2.1458e-06, 4.7505e-05],
        [1.5795e-05, 2.3305e-05],
        [1.9073e-05, 1.1027e-05],
        [1.8477e-06, 2.9564e-05],
        [3.2365e-05, 1.7285e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0965, 0.0364],
        [0.0450, 0.0779],
        [0.0808, 0.0434],
        [0.0811, 0.0432],
        [0.0788, 0.0445],
        [0.0808, 0.0434],
        [0.0396, 0.0886],
        [0.0417, 0.0841],
        [0.0416, 0.0844],
        [0.0839, 0.0418],
        [0.0397, 0.0884],
        [0.0410, 0.0857],
        [0.0587, 0.0597],
        [0.0739, 0.0475],
        [0.0416, 0.0843],
        [0.0753, 0.0466]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.422287
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7464e-05, 6.8545e-06],
        [2.0504e-05, 1.5736e-05],
        [2.1458e-06, 4.3333e-05],
        [2.6286e-05, 1.0788e-05],
        [4.2081e-05, 2.3782e-05],
        [8.9407e-07, 2.9683e-05],
        [3.5167e-06, 3.5763e-07],
        [8.3447e-07, 3.1352e-05],
        [2.1458e-06, 4.7684e-05],
        [2.2292e-05, 1.3649e-05],
        [1.5914e-05, 1.1921e-05],
        [1.2100e-05, 3.9339e-06],
        [3.8743e-06, 3.8505e-05],
        [1.7583e-05, 7.0333e-06],
        [2.2769e-05, 8.1658e-06],
        [7.9274e-06, 8.2850e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0776, 0.0455],
        [0.0666, 0.0530],
        [0.0396, 0.0891],
        [0.0769, 0.0460],
        [0.0717, 0.0493],
        [0.0389, 0.0907],
        [0.0937, 0.0377],
        [0.0388, 0.0910],
        [0.0395, 0.0895],
        [0.0703, 0.0502],
        [0.0670, 0.0527],
        [0.0804, 0.0439],
        [0.0414, 0.0852],
        [0.0773, 0.0457],
        [0.0790, 0.0447],
        [0.0413, 0.0856]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.403609
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8147e-06, 5.1558e-05],
        [1.4961e-05, 4.5300e-06],
        [3.0994e-06, 6.9141e-05],
        [1.1921e-06, 3.8266e-05],
        [2.9802e-07, 1.9073e-05],
        [3.3200e-05, 1.1742e-05],
        [3.1590e-06, 2.9802e-07],
        [1.3947e-05, 8.7619e-06],
        [2.2113e-05, 1.2279e-05],
        [1.7285e-06, 4.2975e-05],
        [3.1233e-05, 1.3351e-05],
        [5.9605e-07, 2.7597e-05],
        [2.7776e-05, 1.4484e-05],
        [1.9610e-05, 8.0466e-06],
        [2.9206e-05, 1.0967e-05],
        [1.6332e-05, 6.2704e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0849],
        [0.0829, 0.0422],
        [0.0402, 0.0871],
        [0.0397, 0.0882],
        [0.0391, 0.0895],
        [0.0805, 0.0434],
        [0.0960, 0.0365],
        [0.0711, 0.0492],
        [0.0732, 0.0478],
        [0.0400, 0.0875],
        [0.0775, 0.0451],
        [0.0393, 0.0890],
        [0.0742, 0.0471],
        [0.0782, 0.0447],
        [0.0796, 0.0439],
        [0.0473, 0.0739]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.480838
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5914e-05, 7.5102e-06],
        [1.4186e-05, 9.8944e-06],
        [1.3113e-05, 3.5167e-06],
        [1.5855e-05, 6.1393e-06],
        [1.6689e-05, 5.7817e-06],
        [7.7486e-07, 3.1829e-05],
        [2.1458e-06, 3.1948e-05],
        [2.9206e-06, 5.3823e-05],
        [4.1723e-07, 1.4186e-05],
        [1.2755e-05, 5.6028e-06],
        [1.4424e-05, 5.1856e-06],
        [1.5795e-05, 8.1658e-06],
        [1.4305e-06, 5.4359e-05],
        [1.7703e-05, 5.0068e-06],
        [2.1994e-05, 1.7822e-05],
        [3.8147e-06, 7.1526e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0715, 0.0495],
        [0.0653, 0.0541],
        [0.0797, 0.0443],
        [0.0745, 0.0474],
        [0.0762, 0.0464],
        [0.0371, 0.0953],
        [0.0386, 0.0916],
        [0.0382, 0.0927],
        [0.0373, 0.0948],
        [0.0726, 0.0487],
        [0.0756, 0.0468],
        [0.0701, 0.0505],
        [0.0372, 0.0951],
        [0.0790, 0.0447],
        [0.0630, 0.0561],
        [0.0841, 0.0420]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.445810
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-06, 4.6849e-05],
        [2.2113e-05, 5.4836e-06],
        [1.1921e-06, 3.7014e-05],
        [2.2650e-05, 7.4506e-06],
        [2.9922e-05, 2.7061e-05],
        [1.7881e-06, 4.3631e-05],
        [7.7486e-07, 2.9147e-05],
        [2.2352e-05, 1.7583e-05],
        [2.7597e-05, 2.1338e-05],
        [6.5565e-07, 2.7001e-05],
        [2.6822e-06, 3.7372e-05],
        [2.3842e-07, 1.4782e-05],
        [5.9605e-08, 3.2187e-06],
        [1.3709e-06, 3.8505e-05],
        [1.0252e-05, 5.2333e-05],
        [1.5676e-05, 7.1526e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0471, 0.0758],
        [0.1012, 0.0353],
        [0.0469, 0.0762],
        [0.0964, 0.0371],
        [0.0768, 0.0465],
        [0.0473, 0.0756],
        [0.0466, 0.0766],
        [0.0795, 0.0449],
        [0.0798, 0.0447],
        [0.0465, 0.0768],
        [0.0486, 0.0735],
        [0.0462, 0.0774],
        [0.0463, 0.0772],
        [0.0470, 0.0760],
        [0.0535, 0.0668],
        [0.0903, 0.0396]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.397787
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.0472e-05, 3.7730e-05],
        [4.7684e-07, 1.1206e-05],
        [2.2650e-06, 5.3585e-05],
        [2.8014e-06, 5.8353e-05],
        [4.0114e-05, 2.2173e-05],
        [2.8431e-05, 1.6987e-05],
        [5.9605e-07, 2.3484e-05],
        [1.2517e-06, 4.4465e-05],
        [1.6093e-06, 4.6492e-05],
        [2.7418e-06, 4.6074e-05],
        [3.4153e-05, 3.1352e-05],
        [2.1756e-05, 1.8179e-05],
        [1.3113e-05, 5.1856e-06],
        [2.8789e-05, 9.6560e-06],
        [2.2650e-06, 4.8816e-05],
        [1.6689e-06, 4.2498e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0750, 0.0479],
        [0.0465, 0.0771],
        [0.0465, 0.0771],
        [0.0468, 0.0767],
        [0.0851, 0.0422],
        [0.0836, 0.0430],
        [0.0458, 0.0784],
        [0.0459, 0.0782],
        [0.0462, 0.0777],
        [0.0473, 0.0760],
        [0.0753, 0.0477],
        [0.0770, 0.0466],
        [0.0915, 0.0392],
        [0.0945, 0.0380],
        [0.0467, 0.0769],
        [0.0464, 0.0774]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.316170
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 2.7776e-05],
        [7.1526e-07, 2.6464e-05],
        [3.9339e-06, 5.8472e-05],
        [2.2054e-06, 5.4717e-05],
        [4.0531e-06, 6.8545e-05],
        [9.9540e-06, 2.6822e-06],
        [2.2471e-05, 1.0848e-05],
        [3.0994e-06, 6.7770e-05],
        [2.6345e-05, 9.2387e-06],
        [1.3292e-05, 5.0664e-06],
        [5.3644e-06, 6.5863e-05],
        [1.1504e-05, 5.3644e-06],
        [4.0531e-06, 5.9605e-07],
        [8.3447e-07, 2.9147e-05],
        [4.1723e-07, 3.3855e-05],
        [5.3644e-06, 6.0260e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0445, 0.0781],
        [0.0443, 0.0785],
        [0.0460, 0.0757],
        [0.0449, 0.0775],
        [0.0457, 0.0762],
        [0.0949, 0.0367],
        [0.0848, 0.0411],
        [0.0451, 0.0772],
        [0.0905, 0.0384],
        [0.0891, 0.0391],
        [0.0466, 0.0748],
        [0.0854, 0.0408],
        [0.1033, 0.0337],
        [0.0444, 0.0784],
        [0.0437, 0.0796],
        [0.0469, 0.0743]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.483808
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.3723e-05],
        [2.9802e-05, 5.6982e-05],
        [5.2452e-06, 7.3314e-05],
        [1.9670e-06, 3.8922e-05],
        [1.0014e-05, 4.9472e-06],
        [7.1526e-07, 4.0591e-05],
        [3.3379e-06, 4.7684e-07],
        [3.1590e-06, 5.6982e-05],
        [4.7684e-07, 2.3842e-05],
        [2.8610e-06, 5.2512e-05],
        [3.5107e-05, 1.2994e-05],
        [2.9027e-05, 3.1412e-05],
        [1.1325e-06, 4.5896e-05],
        [3.0994e-06, 4.2737e-05],
        [2.0802e-05, 8.1062e-06],
        [8.9407e-07, 2.4319e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0762],
        [0.0643, 0.0553],
        [0.0488, 0.0729],
        [0.0479, 0.0743],
        [0.0891, 0.0399],
        [0.0464, 0.0766],
        [0.1094, 0.0325],
        [0.0481, 0.0740],
        [0.0465, 0.0764],
        [0.0480, 0.0740],
        [0.0946, 0.0376],
        [0.0737, 0.0482],
        [0.0467, 0.0761],
        [0.0488, 0.0728],
        [0.0937, 0.0380],
        [0.0473, 0.0752]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.447431
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4571e-06, 4.4107e-05],
        [1.7881e-07, 1.4246e-05],
        [1.4067e-05, 1.0610e-05],
        [4.7684e-07, 7.2122e-06],
        [2.2650e-06, 4.4644e-05],
        [5.9605e-07, 2.9862e-05],
        [2.9802e-07, 2.6643e-05],
        [1.8418e-05, 7.9274e-06],
        [1.9729e-05, 9.1195e-06],
        [8.9407e-07, 2.4855e-05],
        [1.1206e-05, 7.2718e-05],
        [1.6570e-05, 6.0797e-06],
        [7.3314e-06, 4.7088e-05],
        [2.0921e-05, 7.4506e-06],
        [2.3067e-05, 1.2815e-05],
        [1.3530e-05, 5.1260e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0773],
        [0.0432, 0.0821],
        [0.0754, 0.0470],
        [0.0454, 0.0781],
        [0.0447, 0.0792],
        [0.0435, 0.0815],
        [0.0431, 0.0822],
        [0.0858, 0.0413],
        [0.0845, 0.0419],
        [0.0441, 0.0803],
        [0.0487, 0.0727],
        [0.0886, 0.0400],
        [0.0488, 0.0726],
        [0.0891, 0.0398],
        [0.0811, 0.0437],
        [0.0881, 0.0402]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.419952
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5963e-06, 5.3644e-06],
        [2.9385e-05, 2.8253e-05],
        [1.3530e-05, 4.1127e-06],
        [2.3484e-05, 1.4067e-05],
        [1.6093e-06, 5.1558e-05],
        [7.5698e-06, 2.6822e-06],
        [5.0664e-06, 6.6400e-05],
        [4.1723e-07, 2.1458e-05],
        [2.6107e-05, 1.2040e-05],
        [9.5367e-07, 3.4153e-05],
        [2.1279e-05, 7.5102e-06],
        [1.8120e-05, 1.1623e-05],
        [7.1526e-07, 9.3579e-06],
        [1.6570e-05, 1.3411e-05],
        [7.1526e-07, 4.0412e-05],
        [2.5630e-06, 4.4763e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0771, 0.0461],
        [0.0676, 0.0526],
        [0.0874, 0.0407],
        [0.0759, 0.0468],
        [0.0418, 0.0849],
        [0.0850, 0.0418],
        [0.0436, 0.0816],
        [0.0414, 0.0859],
        [0.0805, 0.0442],
        [0.0417, 0.0852],
        [0.0850, 0.0418],
        [0.0747, 0.0476],
        [0.0436, 0.0815],
        [0.0706, 0.0504],
        [0.0413, 0.0860],
        [0.0429, 0.0829]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.583444
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8743e-06, 1.3113e-06],
        [3.6955e-06, 4.7505e-05],
        [2.5153e-05, 9.7752e-06],
        [2.2054e-06, 3.9101e-05],
        [1.3888e-05, 6.3777e-06],
        [2.3365e-05, 1.0610e-05],
        [1.4901e-05, 1.2159e-05],
        [1.4901e-06, 3.8564e-05],
        [1.4603e-05, 5.4836e-06],
        [3.1590e-06, 5.4836e-05],
        [3.7611e-05, 2.7061e-05],
        [4.7684e-07, 2.5153e-05],
        [2.9266e-05, 1.3292e-05],
        [2.3842e-07, 2.0444e-05],
        [4.2319e-06, 7.4506e-05],
        [1.7583e-05, 5.0664e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0838, 0.0421],
        [0.0426, 0.0827],
        [0.0815, 0.0432],
        [0.0419, 0.0842],
        [0.0787, 0.0448],
        [0.0789, 0.0447],
        [0.0688, 0.0512],
        [0.0412, 0.0856],
        [0.0821, 0.0429],
        [0.0419, 0.0841],
        [0.0710, 0.0497],
        [0.0404, 0.0872],
        [0.0789, 0.0447],
        [0.0401, 0.0878],
        [0.0419, 0.0842],
        [0.0862, 0.0409]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.428157
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.3232e-05, 4.6492e-06],
        [1.5378e-05, 5.8413e-06],
        [1.4305e-05, 4.7088e-06],
        [2.5332e-05, 1.2517e-05],
        [2.6584e-05, 1.1981e-05],
        [3.6955e-06, 1.3113e-06],
        [1.8060e-05, 4.9949e-05],
        [1.7881e-06, 4.7684e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1430, 0.1025],
        [0.1408, 0.1040],
        [0.1447, 0.1012],
        [0.1332, 0.1100],
        [0.1359, 0.1078],
        [0.1427, 0.1027],
        [0.0890, 0.1647],
        [0.0707, 0.2071]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.260504
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 7 and batchsize 16: 0:00:05.449468
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_7']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05],
        [8.8811e-06, 1.0371e-05]], device='cuda:0') torch.Size([134, 2])
answers_probs just softmax dim 0: tensor([[0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075]], device='cuda:0')
tensor([[0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075],
        [0.0075, 0.0075]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 8 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 4.0114e-05],
        [4.5896e-06, 7.7486e-07],
        [8.9407e-07, 3.3438e-05],
        [1.8001e-05, 1.1206e-05],
        [2.8610e-06, 4.5776e-05],
        [1.1027e-05, 6.6161e-06],
        [2.5630e-06, 4.7803e-05],
        [6.7949e-06, 7.7486e-06],
        [1.3411e-05, 6.3181e-06],
        [3.2187e-06, 5.8770e-05],
        [7.5698e-06, 3.6359e-06],
        [8.5831e-06, 3.8385e-05],
        [8.9407e-07, 4.1723e-05],
        [7.7486e-07, 2.1636e-05],
        [2.0862e-06, 5.6624e-05],
        [7.3910e-06, 2.3842e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0448, 0.0791],
        [0.1011, 0.0350],
        [0.0441, 0.0803],
        [0.0796, 0.0445],
        [0.0456, 0.0777],
        [0.0803, 0.0441],
        [0.0452, 0.0783],
        [0.0686, 0.0517],
        [0.0848, 0.0418],
        [0.0453, 0.0783],
        [0.0845, 0.0419],
        [0.0516, 0.0687],
        [0.0439, 0.0807],
        [0.0445, 0.0796],
        [0.0445, 0.0795],
        [0.0916, 0.0387]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.437126
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5199e-05, 1.3292e-05],
        [2.1279e-05, 9.4175e-06],
        [1.8418e-05, 9.1195e-06],
        [1.7285e-06, 3.6240e-05],
        [2.1517e-05, 2.6166e-05],
        [1.1921e-07, 1.6630e-05],
        [2.7418e-06, 3.7611e-05],
        [8.0466e-06, 8.2254e-06],
        [1.2517e-06, 3.7014e-05],
        [4.8876e-06, 7.7486e-07],
        [6.1393e-06, 5.0604e-05],
        [1.0490e-05, 9.4771e-06],
        [2.0862e-06, 5.1320e-05],
        [1.3292e-05, 6.9141e-06],
        [1.1384e-05, 5.1856e-06],
        [2.1040e-05, 4.4167e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0695, 0.0518],
        [0.0815, 0.0442],
        [0.0795, 0.0453],
        [0.0426, 0.0845],
        [0.0640, 0.0563],
        [0.0410, 0.0878],
        [0.0436, 0.0826],
        [0.0668, 0.0539],
        [0.0421, 0.0855],
        [0.0966, 0.0373],
        [0.0454, 0.0793],
        [0.0689, 0.0523],
        [0.0424, 0.0850],
        [0.0787, 0.0458],
        [0.0810, 0.0445],
        [0.0563, 0.0640]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.447058
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0921e-05, 9.0599e-06],
        [2.1458e-06, 5.1558e-05],
        [1.1742e-05, 8.8811e-06],
        [1.2517e-06, 3.7193e-05],
        [8.5831e-06, 6.1989e-06],
        [1.1742e-05, 5.9009e-06],
        [2.9802e-07, 2.0921e-05],
        [1.2875e-05, 6.4373e-06],
        [1.7881e-07, 1.3769e-05],
        [6.0201e-06, 3.0398e-06],
        [2.7418e-06, 4.0710e-05],
        [1.2159e-05, 4.5896e-06],
        [8.6427e-06, 3.5167e-06],
        [3.6359e-06, 4.7684e-07],
        [2.5034e-06, 4.9770e-05],
        [6.1393e-06, 3.0994e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0770, 0.0458],
        [0.0399, 0.0885],
        [0.0678, 0.0521],
        [0.0396, 0.0891],
        [0.0685, 0.0515],
        [0.0746, 0.0473],
        [0.0389, 0.0908],
        [0.0747, 0.0473],
        [0.0388, 0.0909],
        [0.0745, 0.0474],
        [0.0408, 0.0864],
        [0.0792, 0.0445],
        [0.0780, 0.0452],
        [0.0928, 0.0380],
        [0.0402, 0.0878],
        [0.0745, 0.0474]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.424393
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5020e-05, 3.4630e-05],
        [4.1723e-07, 3.7491e-05],
        [1.1325e-06, 2.9266e-05],
        [1.6093e-06, 4.8161e-05],
        [3.7551e-06, 6.9439e-05],
        [1.0192e-05, 9.5963e-06],
        [8.8215e-06, 5.1856e-06],
        [1.0729e-06, 4.5896e-05],
        [4.1723e-07, 2.3365e-05],
        [4.1723e-07, 2.0206e-05],
        [1.9073e-05, 2.7955e-05],
        [1.1325e-06, 4.4346e-05],
        [9.2387e-06, 5.0843e-05],
        [3.0398e-06, 3.5763e-07],
        [7.9274e-06, 6.2585e-06],
        [7.4506e-06, 4.2915e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0619, 0.0582],
        [0.0462, 0.0779],
        [0.0475, 0.0759],
        [0.0472, 0.0763],
        [0.0481, 0.0749],
        [0.0765, 0.0471],
        [0.0858, 0.0420],
        [0.0468, 0.0770],
        [0.0465, 0.0774],
        [0.0467, 0.0772],
        [0.0686, 0.0525],
        [0.0469, 0.0769],
        [0.0533, 0.0676],
        [0.1119, 0.0322],
        [0.0799, 0.0451],
        [0.0862, 0.0418]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.364086
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7180e-05, 2.9147e-05],
        [5.9605e-08, 6.9737e-06],
        [1.7762e-05, 1.0967e-05],
        [1.3530e-05, 6.6161e-06],
        [2.3842e-07, 2.9027e-05],
        [1.5914e-05, 1.3947e-05],
        [1.9908e-05, 9.7156e-06],
        [1.2040e-05, 4.2319e-06],
        [3.0398e-06, 5.5492e-05],
        [1.7524e-05, 2.3544e-05],
        [8.1062e-06, 4.7088e-06],
        [1.0192e-05, 3.9339e-06],
        [4.6492e-06, 7.1645e-05],
        [5.3644e-07, 3.9101e-05],
        [1.0133e-06, 3.5644e-05],
        [1.1921e-07, 1.2577e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0679, 0.0526],
        [0.0423, 0.0845],
        [0.0778, 0.0459],
        [0.0821, 0.0435],
        [0.0423, 0.0845],
        [0.0715, 0.0500],
        [0.0821, 0.0435],
        [0.0879, 0.0407],
        [0.0442, 0.0809],
        [0.0643, 0.0556],
        [0.0789, 0.0453],
        [0.0863, 0.0414],
        [0.0446, 0.0802],
        [0.0425, 0.0841],
        [0.0431, 0.0829],
        [0.0423, 0.0844]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.328765
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.9141e-06, 2.5034e-06],
        [7.7486e-07, 3.8743e-05],
        [6.4373e-06, 3.5167e-06],
        [1.1027e-05, 6.8545e-06],
        [8.8811e-06, 5.7220e-06],
        [1.6153e-05, 9.8348e-06],
        [8.9407e-07, 3.8743e-05],
        [1.3113e-06, 4.9710e-05],
        [9.7156e-06, 6.0201e-06],
        [3.5763e-07, 2.3842e-05],
        [9.3579e-06, 4.7684e-06],
        [3.9935e-06, 4.1723e-07],
        [8.9407e-07, 2.4378e-05],
        [4.5300e-06, 6.2108e-05],
        [2.3246e-06, 3.8266e-05],
        [9.8348e-06, 4.1187e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0858, 0.0411],
        [0.0420, 0.0840],
        [0.0787, 0.0449],
        [0.0763, 0.0462],
        [0.0757, 0.0466],
        [0.0767, 0.0460],
        [0.0421, 0.0838],
        [0.0423, 0.0835],
        [0.0764, 0.0462],
        [0.0418, 0.0844],
        [0.0799, 0.0442],
        [0.1019, 0.0346],
        [0.0427, 0.0827],
        [0.0441, 0.0801],
        [0.0436, 0.0809],
        [0.0500, 0.0707]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.415683
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 9.5367e-06],
        [9.5367e-07, 6.3121e-05],
        [2.0683e-05, 1.6212e-05],
        [4.1723e-06, 4.0114e-05],
        [9.1791e-06, 3.2187e-06],
        [4.7684e-07, 2.8133e-05],
        [9.8348e-06, 5.2452e-06],
        [5.6624e-06, 4.6492e-06],
        [5.9605e-06, 5.8532e-05],
        [9.1791e-06, 4.7088e-06],
        [5.9605e-07, 3.1054e-05],
        [2.6822e-06, 4.1842e-05],
        [1.9193e-05, 8.5831e-06],
        [1.0192e-05, 9.1791e-06],
        [9.4175e-06, 3.1590e-06],
        [5.3644e-07, 1.9729e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0446, 0.0799],
        [0.0430, 0.0831],
        [0.0741, 0.0481],
        [0.0465, 0.0767],
        [0.0887, 0.0402],
        [0.0430, 0.0829],
        [0.0812, 0.0439],
        [0.0733, 0.0487],
        [0.0464, 0.0769],
        [0.0820, 0.0435],
        [0.0431, 0.0827],
        [0.0449, 0.0794],
        [0.0845, 0.0422],
        [0.0716, 0.0498],
        [0.0895, 0.0399],
        [0.0435, 0.0821]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.570719
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.8678e-06, 7.0333e-06],
        [2.2769e-05, 1.8597e-05],
        [4.1723e-07, 2.9325e-05],
        [2.9802e-07, 3.1173e-05],
        [5.9605e-07, 2.3425e-05],
        [1.4842e-05, 1.6034e-05],
        [6.0797e-06, 3.2187e-06],
        [1.8477e-06, 3.9399e-05],
        [1.3113e-06, 4.5180e-05],
        [1.0252e-05, 4.3511e-06],
        [1.4305e-06, 5.5134e-05],
        [2.9802e-07, 1.8537e-05],
        [5.3644e-07, 3.4153e-05],
        [6.6757e-06, 3.3379e-06],
        [1.1921e-07, 1.2100e-05],
        [4.1723e-07, 1.1086e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0801, 0.0450],
        [0.0819, 0.0440],
        [0.0479, 0.0753],
        [0.0477, 0.0757],
        [0.0484, 0.0745],
        [0.0764, 0.0472],
        [0.0909, 0.0397],
        [0.0494, 0.0730],
        [0.0486, 0.0743],
        [0.0954, 0.0379],
        [0.0485, 0.0745],
        [0.0480, 0.0752],
        [0.0480, 0.0752],
        [0.0920, 0.0392],
        [0.0477, 0.0756],
        [0.0490, 0.0737]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.404467
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6451e-05, 8.2850e-06],
        [4.1723e-07, 3.2306e-05],
        [2.8014e-06, 1.7881e-07],
        [6.5565e-07, 3.4809e-05],
        [2.3842e-07, 1.1623e-05],
        [9.8944e-06, 5.4836e-06],
        [6.4969e-06, 2.2054e-06],
        [1.3471e-05, 5.4240e-06],
        [1.7226e-05, 1.8358e-05],
        [1.2279e-05, 7.2718e-06],
        [7.1526e-07, 3.1054e-05],
        [5.3644e-07, 3.0875e-05],
        [1.8954e-05, 1.1861e-05],
        [3.5763e-07, 2.2888e-05],
        [2.9802e-07, 2.1100e-05],
        [5.1856e-06, 2.5034e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0778, 0.0448],
        [0.0405, 0.0860],
        [0.1024, 0.0340],
        [0.0408, 0.0855],
        [0.0408, 0.0854],
        [0.0762, 0.0458],
        [0.0844, 0.0413],
        [0.0816, 0.0427],
        [0.0649, 0.0537],
        [0.0750, 0.0465],
        [0.0409, 0.0852],
        [0.0407, 0.0857],
        [0.0740, 0.0471],
        [0.0406, 0.0858],
        [0.0406, 0.0859],
        [0.0786, 0.0444]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.475831
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3649e-05, 9.1791e-06],
        [3.5763e-06, 7.1526e-07],
        [2.0742e-05, 4.1008e-05],
        [1.6093e-06, 5.1439e-05],
        [1.4067e-05, 8.2850e-06],
        [1.2219e-05, 4.5300e-06],
        [1.6093e-06, 2.9206e-05],
        [5.9605e-08, 1.2994e-05],
        [1.7881e-07, 1.5557e-05],
        [9.7156e-06, 3.7551e-06],
        [5.3644e-07, 2.9147e-05],
        [1.0431e-05, 1.6034e-05],
        [1.4901e-06, 3.3677e-05],
        [2.0266e-05, 9.8944e-06],
        [6.3181e-06, 2.7418e-06],
        [1.0133e-06, 2.9147e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0752, 0.0470],
        [0.0952, 0.0372],
        [0.0579, 0.0611],
        [0.0426, 0.0830],
        [0.0776, 0.0456],
        [0.0858, 0.0412],
        [0.0436, 0.0812],
        [0.0416, 0.0851],
        [0.0418, 0.0845],
        [0.0851, 0.0416],
        [0.0421, 0.0840],
        [0.0614, 0.0577],
        [0.0432, 0.0820],
        [0.0810, 0.0437],
        [0.0831, 0.0426],
        [0.0428, 0.0827]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.333703
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.5235e-06, 1.0669e-05],
        [5.9605e-07, 1.7226e-05],
        [1.1921e-05, 7.8082e-06],
        [2.6226e-06, 4.6432e-05],
        [1.1683e-05, 7.5102e-06],
        [5.0664e-06, 1.7285e-06],
        [1.1146e-05, 2.6822e-06],
        [1.1206e-05, 6.7949e-06],
        [1.6928e-05, 7.0930e-06],
        [8.1658e-06, 3.5167e-06],
        [1.6689e-06, 2.9981e-05],
        [2.6822e-06, 7.2360e-05],
        [9.9540e-06, 4.9472e-06],
        [2.9802e-07, 2.5034e-05],
        [1.3053e-05, 1.1384e-05],
        [7.1526e-07, 2.9922e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0615, 0.0579],
        [0.0408, 0.0873],
        [0.0722, 0.0494],
        [0.0416, 0.0856],
        [0.0725, 0.0491],
        [0.0832, 0.0428],
        [0.0883, 0.0403],
        [0.0735, 0.0485],
        [0.0798, 0.0446],
        [0.0794, 0.0449],
        [0.0416, 0.0857],
        [0.0409, 0.0871],
        [0.0770, 0.0463],
        [0.0399, 0.0892],
        [0.0673, 0.0529],
        [0.0404, 0.0882]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.444188
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.0599e-06, 7.4506e-06],
        [2.3842e-07, 2.0027e-05],
        [8.9407e-07, 3.2604e-05],
        [8.1658e-06, 3.2187e-06],
        [3.5763e-07, 2.3663e-05],
        [1.7881e-07, 1.7047e-05],
        [7.1526e-07, 3.7014e-05],
        [2.7418e-06, 5.6088e-05],
        [1.2219e-05, 3.6955e-06],
        [7.7486e-07, 2.9564e-05],
        [1.1802e-05, 8.8215e-06],
        [5.1260e-06, 2.0266e-06],
        [2.2352e-05, 9.5963e-06],
        [3.6359e-06, 6.6936e-05],
        [5.9605e-07, 2.1219e-05],
        [1.0252e-05, 4.7088e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0753, 0.0468],
        [0.0440, 0.0800],
        [0.0447, 0.0788],
        [0.0891, 0.0395],
        [0.0442, 0.0798],
        [0.0440, 0.0801],
        [0.0443, 0.0794],
        [0.0456, 0.0773],
        [0.0937, 0.0376],
        [0.0446, 0.0789],
        [0.0771, 0.0457],
        [0.0891, 0.0395],
        [0.0876, 0.0402],
        [0.0458, 0.0769],
        [0.0447, 0.0788],
        [0.0863, 0.0408]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.485096
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[7.1526e-07, 4.2021e-05],
        [9.5367e-07, 3.6418e-05],
        [1.3411e-05, 8.6427e-06],
        [7.6294e-06, 7.9870e-06],
        [1.1921e-07, 7.9274e-06],
        [9.1195e-06, 4.2915e-06],
        [4.1723e-06, 7.5996e-05],
        [4.7684e-07, 3.0518e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0962, 0.1503],
        [0.0971, 0.1490],
        [0.1738, 0.0832],
        [0.1542, 0.0938],
        [0.0960, 0.1506],
        [0.1868, 0.0774],
        [0.0997, 0.1451],
        [0.0961, 0.1505]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.180694
acc:  0.965
Time taken to execute the en SA task with prompt type passive, variation 8 and batchsize 16: 0:00:05.328437
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_8']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06],
        [7.6890e-06, 8.4639e-06]], device='cuda:0') torch.Size([127, 2])
answers_probs just softmax dim 0: tensor([[0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079]], device='cuda:0')
tensor([[0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079],
        [0.0079, 0.0079]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA passive 9 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-06, 4.2915e-06],
        [2.2650e-06, 7.4863e-05],
        [4.7684e-07, 3.3379e-05],
        [3.5167e-06, 3.5763e-07],
        [1.1325e-06, 5.0545e-05],
        [1.5140e-05, 8.2254e-06],
        [3.5763e-07, 2.5749e-05],
        [3.4571e-06, 7.7426e-05],
        [1.0669e-05, 5.0664e-06],
        [1.9670e-06, 7.5102e-05],
        [2.6226e-05, 1.5795e-05],
        [1.0490e-05, 4.8876e-06],
        [8.9407e-07, 5.1379e-05],
        [1.2159e-05, 5.6028e-06],
        [2.1338e-05, 1.5020e-05],
        [3.7789e-05, 2.7001e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0799, 0.0439],
        [0.0413, 0.0849],
        [0.0407, 0.0862],
        [0.0994, 0.0353],
        [0.0410, 0.0856],
        [0.0767, 0.0458],
        [0.0407, 0.0863],
        [0.0419, 0.0838],
        [0.0790, 0.0444],
        [0.0411, 0.0853],
        [0.0748, 0.0469],
        [0.0793, 0.0442],
        [0.0408, 0.0860],
        [0.0795, 0.0441],
        [0.0721, 0.0486],
        [0.0719, 0.0488]], device='cuda:0')
 Batch: 0 of passive classification Duration: 0:00:00.371238
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 6.7651e-05],
        [2.3544e-05, 1.8954e-05],
        [2.5749e-05, 2.8729e-05],
        [2.0027e-05, 2.0802e-05],
        [1.9670e-06, 4.4525e-05],
        [2.5928e-05, 7.3850e-05],
        [1.0729e-06, 4.6611e-05],
        [4.4107e-06, 6.3598e-05],
        [1.4305e-05, 8.6427e-06],
        [3.3975e-06, 4.7684e-07],
        [2.3305e-05, 1.7464e-05],
        [3.5763e-07, 2.4974e-05],
        [1.0848e-05, 8.7023e-06],
        [3.9935e-05, 2.2769e-05],
        [5.0664e-06, 8.2672e-05],
        [8.9407e-07, 3.0637e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0441, 0.0817],
        [0.0750, 0.0481],
        [0.0691, 0.0521],
        [0.0704, 0.0512],
        [0.0450, 0.0802],
        [0.0559, 0.0645],
        [0.0441, 0.0818],
        [0.0460, 0.0784],
        [0.0804, 0.0449],
        [0.1036, 0.0348],
        [0.0763, 0.0472],
        [0.0437, 0.0825],
        [0.0751, 0.0480],
        [0.0815, 0.0442],
        [0.0457, 0.0790],
        [0.0443, 0.0813]], device='cuda:0')
 Batch: 1 of passive classification Duration: 0:00:00.405398
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.2718e-06, 4.1723e-06],
        [4.1127e-06, 7.1764e-05],
        [7.7486e-07, 3.7789e-05],
        [1.0490e-05, 9.5785e-05],
        [1.0729e-05, 7.5102e-06],
        [5.9605e-07, 4.1306e-05],
        [2.5630e-06, 4.9770e-05],
        [1.3828e-05, 8.3447e-06],
        [3.2783e-06, 3.5763e-07],
        [8.1062e-06, 5.5015e-05],
        [2.6524e-05, 2.2173e-05],
        [1.5259e-05, 2.9445e-05],
        [4.1723e-07, 2.7239e-05],
        [7.7486e-07, 4.2439e-05],
        [3.8147e-06, 7.7903e-05],
        [2.7537e-05, 2.5451e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0847, 0.0424],
        [0.0474, 0.0759],
        [0.0458, 0.0785],
        [0.0495, 0.0726],
        [0.0808, 0.0445],
        [0.0455, 0.0790],
        [0.0471, 0.0763],
        [0.0837, 0.0429],
        [0.1105, 0.0325],
        [0.0510, 0.0704],
        [0.0773, 0.0465],
        [0.0631, 0.0569],
        [0.0455, 0.0789],
        [0.0457, 0.0787],
        [0.0470, 0.0764],
        [0.0754, 0.0476]], device='cuda:0')
 Batch: 2 of passive classification Duration: 0:00:00.362260
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0252e-05, 3.5763e-06],
        [1.1325e-06, 5.7220e-05],
        [2.2054e-06, 5.0187e-05],
        [2.2948e-05, 3.3140e-05],
        [2.4259e-05, 5.9962e-05],
        [1.6093e-06, 5.6088e-05],
        [1.6630e-05, 6.6757e-06],
        [1.9491e-05, 1.7762e-05],
        [2.3544e-05, 1.4842e-05],
        [2.9802e-07, 6.6161e-06],
        [3.5763e-07, 2.4557e-05],
        [1.8358e-05, 1.4722e-05],
        [2.3842e-07, 1.1742e-05],
        [2.0087e-05, 1.2577e-05],
        [3.5763e-07, 2.1517e-05],
        [1.3113e-06, 4.1127e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0940, 0.0384],
        [0.0457, 0.0790],
        [0.0467, 0.0772],
        [0.0674, 0.0535],
        [0.0598, 0.0604],
        [0.0461, 0.0783],
        [0.0914, 0.0394],
        [0.0756, 0.0477],
        [0.0827, 0.0436],
        [0.0468, 0.0771],
        [0.0454, 0.0794],
        [0.0780, 0.0462],
        [0.0457, 0.0789],
        [0.0829, 0.0435],
        [0.0455, 0.0792],
        [0.0462, 0.0781]], device='cuda:0')
 Batch: 3 of passive classification Duration: 0:00:00.556093
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2829e-05, 1.9848e-05],
        [3.0637e-05, 5.7220e-05],
        [3.5048e-05, 6.1989e-05],
        [2.9802e-05, 3.4571e-05],
        [3.3259e-05, 2.0027e-05],
        [1.8954e-05, 1.5199e-05],
        [1.1921e-07, 1.4365e-05],
        [1.5914e-05, 1.7226e-05],
        [1.8239e-05, 8.4639e-06],
        [9.4771e-06, 5.6624e-06],
        [2.2650e-06, 6.5506e-05],
        [1.1027e-05, 9.0599e-06],
        [5.9605e-07, 2.8789e-05],
        [2.3842e-07, 1.6630e-05],
        [6.5565e-07, 1.6987e-05],
        [1.3709e-06, 5.8055e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0739, 0.0495],
        [0.0614, 0.0597],
        [0.0621, 0.0589],
        [0.0688, 0.0532],
        [0.0808, 0.0453],
        [0.0754, 0.0485],
        [0.0437, 0.0838],
        [0.0700, 0.0523],
        [0.0857, 0.0427],
        [0.0810, 0.0452],
        [0.0448, 0.0818],
        [0.0750, 0.0488],
        [0.0442, 0.0828],
        [0.0439, 0.0834],
        [0.0449, 0.0815],
        [0.0443, 0.0826]], device='cuda:0')
 Batch: 4 of passive classification Duration: 0:00:00.442997
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7464e-05, 1.9789e-05],
        [4.1127e-06, 1.8477e-06],
        [1.1444e-05, 6.9976e-05],
        [3.0637e-05, 4.8995e-05],
        [2.9802e-06, 7.7724e-05],
        [5.3644e-07, 4.0352e-05],
        [3.3379e-06, 9.1374e-05],
        [1.9252e-05, 1.0610e-05],
        [2.3842e-07, 4.2439e-05],
        [7.1526e-07, 2.8074e-05],
        [2.0921e-05, 1.5140e-05],
        [2.9802e-07, 3.6657e-05],
        [4.1723e-07, 4.4942e-05],
        [4.1723e-07, 2.9683e-05],
        [2.8908e-05, 2.5749e-05],
        [1.2815e-05, 6.3181e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0736, 0.0492],
        [0.0919, 0.0394],
        [0.0530, 0.0683],
        [0.0677, 0.0535],
        [0.0478, 0.0758],
        [0.0467, 0.0776],
        [0.0477, 0.0759],
        [0.0878, 0.0413],
        [0.0463, 0.0782],
        [0.0472, 0.0767],
        [0.0823, 0.0440],
        [0.0464, 0.0780],
        [0.0465, 0.0779],
        [0.0467, 0.0775],
        [0.0782, 0.0463],
        [0.0900, 0.0402]], device='cuda:0')
 Batch: 5 of passive classification Duration: 0:00:00.488052
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1696e-05, 1.8120e-05],
        [5.3644e-07, 1.2100e-05],
        [5.9605e-08, 1.2696e-05],
        [1.1921e-07, 1.3769e-05],
        [3.0458e-05, 3.4750e-05],
        [2.0027e-05, 8.7619e-06],
        [1.8120e-05, 9.1195e-06],
        [6.5565e-07, 3.2306e-05],
        [2.3842e-07, 2.5988e-05],
        [2.1577e-05, 2.2590e-05],
        [1.2577e-05, 1.4007e-05],
        [5.9605e-07, 3.6120e-05],
        [2.0266e-06, 6.7711e-05],
        [1.6272e-05, 2.5570e-05],
        [1.4842e-05, 1.0192e-05],
        [1.2517e-06, 4.7863e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0786, 0.0463],
        [0.0475, 0.0765],
        [0.0458, 0.0794],
        [0.0460, 0.0791],
        [0.0727, 0.0500],
        [0.0914, 0.0398],
        [0.0886, 0.0410],
        [0.0465, 0.0782],
        [0.0460, 0.0791],
        [0.0743, 0.0490],
        [0.0731, 0.0497],
        [0.0463, 0.0785],
        [0.0469, 0.0775],
        [0.0672, 0.0541],
        [0.0824, 0.0441],
        [0.0467, 0.0778]], device='cuda:0')
 Batch: 6 of passive classification Duration: 0:00:00.334984
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2457e-05, 7.9870e-06],
        [1.9550e-05, 1.3888e-05],
        [1.1325e-06, 5.4181e-05],
        [2.2948e-05, 2.0266e-05],
        [4.8280e-06, 5.4121e-05],
        [1.2517e-06, 5.0724e-05],
        [1.6153e-05, 1.6928e-05],
        [5.9605e-07, 2.8491e-05],
        [8.6427e-06, 6.7115e-05],
        [2.8014e-06, 7.4506e-05],
        [1.7107e-05, 1.0490e-05],
        [3.5167e-06, 8.3327e-05],
        [2.1935e-05, 1.2696e-05],
        [4.1723e-07, 7.3314e-06],
        [3.1888e-05, 1.9193e-05],
        [2.3842e-06, 4.7565e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0835, 0.0436],
        [0.0815, 0.0446],
        [0.0463, 0.0785],
        [0.0772, 0.0471],
        [0.0493, 0.0738],
        [0.0465, 0.0782],
        [0.0740, 0.0492],
        [0.0463, 0.0785],
        [0.0509, 0.0715],
        [0.0471, 0.0773],
        [0.0844, 0.0431],
        [0.0473, 0.0769],
        [0.0855, 0.0425],
        [0.0479, 0.0759],
        [0.0848, 0.0429],
        [0.0476, 0.0764]], device='cuda:0')
 Batch: 7 of passive classification Duration: 0:00:00.397841
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 4.3154e-05],
        [3.5167e-06, 5.5790e-05],
        [1.3709e-06, 4.7684e-05],
        [5.9605e-07, 2.5749e-05],
        [2.0325e-05, 1.3411e-05],
        [1.1921e-06, 2.7835e-05],
        [8.9407e-06, 5.2452e-06],
        [1.3709e-05, 1.0192e-05],
        [1.4901e-06, 5.8889e-05],
        [3.4094e-05, 2.1994e-05],
        [1.6332e-05, 6.3777e-06],
        [2.6226e-06, 5.0128e-05],
        [2.3842e-07, 2.5928e-05],
        [2.9802e-06, 4.1723e-07],
        [5.9605e-07, 2.1756e-05],
        [1.1802e-05, 1.5497e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0448, 0.0792],
        [0.0470, 0.0756],
        [0.0455, 0.0780],
        [0.0453, 0.0784],
        [0.0809, 0.0439],
        [0.0461, 0.0770],
        [0.0831, 0.0427],
        [0.0785, 0.0452],
        [0.0454, 0.0782],
        [0.0813, 0.0437],
        [0.0909, 0.0391],
        [0.0465, 0.0763],
        [0.0447, 0.0795],
        [0.1064, 0.0334],
        [0.0455, 0.0781],
        [0.0682, 0.0520]], device='cuda:0')
 Batch: 8 of passive classification Duration: 0:00:00.421374
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-06, 8.6546e-05],
        [2.3544e-05, 1.3947e-05],
        [8.2254e-06, 1.1730e-04],
        [2.6107e-05, 1.5140e-05],
        [6.5565e-07, 4.9412e-05],
        [1.1921e-07, 1.7405e-05],
        [2.5034e-05, 1.4484e-05],
        [2.1338e-05, 1.8537e-05],
        [2.9445e-05, 2.2233e-05],
        [2.4080e-05, 1.5199e-05],
        [3.5763e-07, 2.4617e-05],
        [7.8678e-06, 7.6175e-05],
        [1.6093e-06, 3.5167e-05],
        [1.6689e-06, 5.4359e-05],
        [1.2994e-05, 8.8215e-06],
        [3.7551e-06, 1.1921e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0453, 0.0791],
        [0.0806, 0.0445],
        [0.0459, 0.0781],
        [0.0810, 0.0443],
        [0.0436, 0.0823],
        [0.0433, 0.0828],
        [0.0811, 0.0442],
        [0.0735, 0.0488],
        [0.0761, 0.0471],
        [0.0794, 0.0451],
        [0.0436, 0.0822],
        [0.0472, 0.0759],
        [0.0450, 0.0798],
        [0.0443, 0.0809],
        [0.0781, 0.0459],
        [0.0919, 0.0390]], device='cuda:0')
 Batch: 9 of passive classification Duration: 0:00:00.405666
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1948e-05, 1.6451e-05],
        [3.3975e-06, 9.0241e-05],
        [1.3709e-06, 4.6492e-05],
        [1.9550e-05, 1.0252e-05],
        [1.1981e-05, 7.7486e-06],
        [1.3709e-06, 6.2466e-05],
        [4.0531e-06, 6.6757e-05],
        [1.1921e-07, 1.9968e-05],
        [8.8811e-06, 3.3975e-06],
        [2.5332e-05, 6.9380e-05],
        [9.1791e-06, 3.8743e-06],
        [1.6034e-05, 5.3644e-06],
        [2.0802e-05, 1.7643e-05],
        [1.6212e-05, 6.7353e-06],
        [1.9372e-05, 1.3947e-05],
        [4.7684e-06, 8.9407e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0738, 0.0482],
        [0.0396, 0.0900],
        [0.0393, 0.0907],
        [0.0735, 0.0484],
        [0.0700, 0.0508],
        [0.0390, 0.0913],
        [0.0404, 0.0881],
        [0.0384, 0.0928],
        [0.0786, 0.0453],
        [0.0499, 0.0714],
        [0.0771, 0.0462],
        [0.0807, 0.0441],
        [0.0655, 0.0543],
        [0.0773, 0.0460],
        [0.0682, 0.0522],
        [0.0886, 0.0402]], device='cuda:0')
 Batch: 10 of passive classification Duration: 0:00:00.423289
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 5.6386e-05],
        [1.6689e-06, 4.9591e-05],
        [1.2994e-05, 8.8215e-06],
        [3.1114e-05, 4.8995e-05],
        [4.2081e-05, 3.9220e-05],
        [2.0266e-06, 5.9545e-05],
        [4.7684e-07, 3.3140e-05],
        [1.4246e-05, 1.1504e-05],
        [4.7684e-07, 3.4451e-05],
        [1.7703e-05, 1.0550e-05],
        [9.5367e-07, 4.0412e-05],
        [2.2650e-06, 4.2081e-05],
        [9.2983e-06, 7.3910e-06],
        [5.0664e-06, 7.5877e-05],
        [2.5153e-05, 2.2888e-05],
        [5.9605e-08, 5.0664e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0483, 0.0758],
        [0.0485, 0.0754],
        [0.0852, 0.0429],
        [0.0693, 0.0528],
        [0.0788, 0.0464],
        [0.0486, 0.0754],
        [0.0477, 0.0768],
        [0.0817, 0.0448],
        [0.0476, 0.0768],
        [0.0879, 0.0416],
        [0.0481, 0.0761],
        [0.0494, 0.0740],
        [0.0820, 0.0446],
        [0.0500, 0.0732],
        [0.0793, 0.0461],
        [0.0475, 0.0770]], device='cuda:0')
 Batch: 11 of passive classification Duration: 0:00:00.252321
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.3842e-07, 2.0325e-05],
        [4.8876e-06, 8.9407e-07],
        [1.4842e-05, 1.9193e-05],
        [4.3631e-05, 6.2943e-05],
        [1.4007e-05, 8.2850e-06],
        [7.1526e-07, 6.8247e-05],
        [1.8179e-05, 2.0921e-05],
        [4.7684e-07, 3.7670e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0851, 0.1685],
        [0.1960, 0.0732],
        [0.1302, 0.1102],
        [0.1267, 0.1132],
        [0.1578, 0.0909],
        [0.0850, 0.1687],
        [0.1340, 0.1071],
        [0.0852, 0.1683]], device='cuda:0')
 Batch: 12 of passive classification Duration: 0:00:00.230761
acc:  0.96
Time taken to execute the en SA task with prompt type passive, variation 9 and batchsize 16: 0:00:05.109108
path ['42', 'en', 'bloomz-mt', 'SA', 'passive', 'prompt_id_9']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type auxiliary has 10 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06]], device='cuda:0') torch.Size([87, 2])
answers_probs just softmax dim 0: tensor([[0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115]], device='cuda:0')
tensor([[0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115],
        [0.0115, 0.0115]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1458e-06, 5.6088e-05],
        [1.1325e-06, 4.2140e-05],
        [3.0994e-06, 5.0187e-05],
        [5.3644e-07, 2.4974e-05],
        [1.6689e-06, 5.3227e-05],
        [2.5511e-05, 1.0073e-05],
        [1.1921e-07, 1.3590e-05],
        [2.4915e-05, 1.5438e-05],
        [1.0729e-05, 4.2915e-06],
        [2.1756e-05, 1.2100e-05],
        [4.7088e-06, 1.0133e-04],
        [4.1723e-07, 5.3644e-06],
        [3.8266e-05, 3.6240e-05],
        [5.0068e-06, 6.1691e-05],
        [2.6584e-05, 1.6928e-05],
        [4.9472e-06, 5.8651e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0475, 0.0756],
        [0.0470, 0.0764],
        [0.0486, 0.0740],
        [0.0468, 0.0768],
        [0.0472, 0.0761],
        [0.0938, 0.0383],
        [0.0462, 0.0778],
        [0.0850, 0.0423],
        [0.0936, 0.0384],
        [0.0871, 0.0413],
        [0.0479, 0.0750],
        [0.0493, 0.0730],
        [0.0766, 0.0469],
        [0.0494, 0.0728],
        [0.0844, 0.0426],
        [0.0495, 0.0726]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.546469
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9729e-05, 8.1658e-06],
        [1.3292e-05, 6.4373e-06],
        [1.1921e-06, 3.7551e-05],
        [1.1325e-06, 4.2677e-05],
        [1.6809e-05, 8.5235e-06],
        [3.0398e-05, 2.2411e-05],
        [2.5034e-05, 1.8895e-05],
        [1.8358e-05, 9.1791e-06],
        [2.1458e-06, 5.4896e-05],
        [3.1650e-05, 6.7532e-05],
        [1.9193e-05, 9.1195e-06],
        [5.3644e-07, 1.3530e-05],
        [4.7565e-05, 3.0935e-05],
        [1.4305e-06, 4.3988e-05],
        [7.5102e-06, 9.9778e-05],
        [7.7486e-07, 2.8789e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0850, 0.0422],
        [0.0822, 0.0436],
        [0.0432, 0.0830],
        [0.0430, 0.0834],
        [0.0813, 0.0441],
        [0.0745, 0.0481],
        [0.0741, 0.0484],
        [0.0816, 0.0439],
        [0.0435, 0.0824],
        [0.0576, 0.0622],
        [0.0825, 0.0434],
        [0.0435, 0.0824],
        [0.0768, 0.0467],
        [0.0432, 0.0829],
        [0.0449, 0.0798],
        [0.0430, 0.0834]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.419379
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2650e-06, 4.8578e-05],
        [2.1935e-05, 1.4246e-05],
        [2.3842e-07, 1.7941e-05],
        [2.8551e-05, 6.8009e-05],
        [1.4186e-05, 7.5698e-06],
        [9.8348e-06, 6.2227e-05],
        [2.0862e-06, 6.1274e-05],
        [2.1458e-06, 5.4240e-05],
        [4.1604e-05, 4.5002e-05],
        [1.4544e-05, 1.0967e-05],
        [2.3842e-07, 6.4373e-06],
        [1.2517e-06, 2.8968e-05],
        [1.6928e-05, 7.9870e-06],
        [2.1517e-05, 1.0490e-05],
        [2.6584e-05, 1.0192e-05],
        [1.9372e-05, 7.4506e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0438, 0.0821],
        [0.0768, 0.0468],
        [0.0424, 0.0847],
        [0.0563, 0.0638],
        [0.0804, 0.0447],
        [0.0480, 0.0749],
        [0.0433, 0.0830],
        [0.0435, 0.0826],
        [0.0677, 0.0531],
        [0.0740, 0.0485],
        [0.0434, 0.0828],
        [0.0436, 0.0823],
        [0.0826, 0.0435],
        [0.0820, 0.0438],
        [0.0862, 0.0417],
        [0.0862, 0.0417]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.359283
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6226e-06, 6.4492e-05],
        [4.2021e-05, 1.9729e-05],
        [8.9407e-07, 3.1054e-05],
        [1.7881e-07, 1.9014e-05],
        [4.4703e-06, 6.7055e-05],
        [4.1723e-07, 2.6166e-05],
        [2.1756e-05, 6.4969e-06],
        [1.7881e-06, 4.1008e-05],
        [1.6689e-05, 6.7353e-06],
        [4.1723e-07, 5.8413e-06],
        [2.0862e-06, 7.0632e-05],
        [2.9445e-05, 1.6391e-05],
        [1.8775e-05, 1.8299e-05],
        [7.1526e-07, 2.4676e-05],
        [1.8477e-06, 3.4869e-05],
        [4.7088e-05, 2.5988e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0472, 0.0754],
        [0.0897, 0.0397],
        [0.0467, 0.0763],
        [0.0458, 0.0777],
        [0.0483, 0.0737],
        [0.0461, 0.0772],
        [0.0981, 0.0363],
        [0.0474, 0.0752],
        [0.0926, 0.0385],
        [0.0485, 0.0734],
        [0.0467, 0.0762],
        [0.0863, 0.0413],
        [0.0754, 0.0473],
        [0.0467, 0.0762],
        [0.0478, 0.0746],
        [0.0865, 0.0412]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.354358
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-05, 5.6624e-06],
        [5.3644e-07, 2.1994e-05],
        [2.0087e-05, 7.2122e-06],
        [8.9407e-07, 3.7372e-05],
        [6.1393e-06, 8.9169e-05],
        [2.3246e-06, 5.0187e-05],
        [3.0875e-05, 1.2398e-05],
        [2.1696e-05, 1.0073e-05],
        [2.5570e-05, 1.1504e-05],
        [0.0000e+00, 1.9073e-06],
        [2.1756e-05, 1.2338e-05],
        [1.6987e-05, 1.0908e-05],
        [2.4080e-05, 1.3292e-05],
        [3.4809e-05, 2.0444e-05],
        [1.1265e-05, 6.9737e-06],
        [2.0564e-05, 1.7285e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0834, 0.0429],
        [0.0385, 0.0928],
        [0.0786, 0.0455],
        [0.0385, 0.0928],
        [0.0401, 0.0891],
        [0.0393, 0.0909],
        [0.0768, 0.0466],
        [0.0745, 0.0480],
        [0.0750, 0.0477],
        [0.0376, 0.0950],
        [0.0713, 0.0502],
        [0.0692, 0.0517],
        [0.0717, 0.0499],
        [0.0707, 0.0506],
        [0.0698, 0.0512],
        [0.0648, 0.0552]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.326091
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1206e-05, 8.2254e-06],
        [1.9014e-05, 8.2850e-06],
        [3.7611e-05, 2.7537e-05],
        [1.8597e-05, 8.7619e-06],
        [5.9605e-07, 2.5034e-05],
        [1.2875e-05, 7.6294e-06],
        [1.4901e-06, 4.5180e-05],
        [5.4181e-05, 2.7061e-05],
        [1.2517e-06, 4.4525e-05],
        [3.8743e-05, 1.8895e-05],
        [2.8014e-06, 2.3842e-07],
        [1.4305e-06, 2.9802e-05],
        [9.5367e-07, 4.1604e-05],
        [5.3644e-07, 2.1756e-05],
        [2.6584e-05, 1.8239e-05],
        [8.9407e-07, 3.1948e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0716, 0.0491],
        [0.0808, 0.0436],
        [0.0717, 0.0491],
        [0.0794, 0.0443],
        [0.0412, 0.0854],
        [0.0754, 0.0467],
        [0.0415, 0.0847],
        [0.0784, 0.0449],
        [0.0414, 0.0851],
        [0.0788, 0.0446],
        [0.1011, 0.0348],
        [0.0421, 0.0835],
        [0.0412, 0.0855],
        [0.0412, 0.0854],
        [0.0728, 0.0483],
        [0.0414, 0.0851]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.425985
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7239e-05, 6.1870e-05],
        [7.8082e-06, 4.1127e-06],
        [1.3232e-05, 4.4703e-06],
        [5.9605e-07, 3.6836e-05],
        [5.9605e-08, 3.8743e-06],
        [2.9802e-07, 9.7752e-06],
        [1.5497e-06, 5.7578e-05],
        [1.6570e-05, 6.8545e-06],
        [1.5497e-06, 6.2644e-05],
        [1.9670e-06, 5.6267e-05],
        [5.1856e-06, 6.1452e-05],
        [1.1921e-06, 3.6657e-05],
        [2.7657e-05, 3.0160e-05],
        [2.3842e-07, 1.5676e-05],
        [1.1921e-07, 1.4544e-05],
        [2.9802e-07, 2.0981e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0668, 0.0543],
        [0.0947, 0.0383],
        [0.1039, 0.0349],
        [0.0500, 0.0726],
        [0.0499, 0.0727],
        [0.0507, 0.0716],
        [0.0505, 0.0719],
        [0.0998, 0.0364],
        [0.0504, 0.0720],
        [0.0509, 0.0713],
        [0.0532, 0.0682],
        [0.0508, 0.0715],
        [0.0793, 0.0457],
        [0.0499, 0.0727],
        [0.0496, 0.0732],
        [0.0499, 0.0727]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.314006
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 4.4882e-05],
        [3.8862e-05, 2.3961e-05],
        [7.7486e-07, 3.8147e-05],
        [4.1723e-06, 7.3016e-05],
        [3.8147e-06, 1.6689e-06],
        [4.1723e-06, 6.5148e-05],
        [1.7285e-06, 4.4227e-05],
        [1.4007e-05, 1.4544e-05],
        [2.7239e-05, 1.4603e-05],
        [2.5630e-06, 4.7445e-05],
        [2.0027e-05, 7.2122e-06],
        [1.2219e-05, 4.4107e-06],
        [3.0041e-05, 1.6093e-05],
        [2.4021e-05, 1.5497e-05],
        [1.3709e-06, 3.6240e-05],
        [3.8564e-05, 1.9848e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0417, 0.0854],
        [0.0756, 0.0471],
        [0.0415, 0.0857],
        [0.0430, 0.0828],
        [0.0816, 0.0436],
        [0.0432, 0.0823],
        [0.0423, 0.0842],
        [0.0665, 0.0535],
        [0.0781, 0.0456],
        [0.0429, 0.0831],
        [0.0849, 0.0419],
        [0.0849, 0.0419],
        [0.0781, 0.0456],
        [0.0748, 0.0476],
        [0.0422, 0.0843],
        [0.0788, 0.0452]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.443739
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0623e-05, 5.9605e-06],
        [8.3447e-07, 3.2842e-05],
        [2.4438e-06, 5.8532e-05],
        [1.0371e-05, 7.4685e-05],
        [9.5367e-07, 6.7830e-05],
        [3.7074e-05, 2.6464e-05],
        [1.2994e-05, 6.8545e-06],
        [1.9073e-06, 1.7881e-07],
        [2.0921e-05, 8.8215e-06],
        [5.9605e-07, 3.6299e-05],
        [3.2246e-05, 3.0279e-05],
        [1.9610e-05, 2.7895e-05],
        [5.1856e-06, 7.3135e-05],
        [6.5565e-07, 3.3498e-05],
        [2.8610e-06, 6.9737e-05],
        [3.2425e-05, 1.6272e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0909, 0.0388],
        [0.0429, 0.0821],
        [0.0436, 0.0809],
        [0.0473, 0.0745],
        [0.0424, 0.0830],
        [0.0750, 0.0470],
        [0.0806, 0.0438],
        [0.1044, 0.0337],
        [0.0846, 0.0417],
        [0.0425, 0.0829],
        [0.0701, 0.0503],
        [0.0632, 0.0557],
        [0.0447, 0.0788],
        [0.0427, 0.0826],
        [0.0435, 0.0809],
        [0.0815, 0.0433]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.315355
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 4.2021e-05],
        [1.6689e-05, 1.3590e-05],
        [3.0458e-05, 1.2696e-05],
        [5.6624e-06, 7.1824e-05],
        [1.3947e-05, 5.4240e-06],
        [1.7226e-05, 1.6451e-05],
        [3.3557e-05, 2.4199e-05],
        [4.2319e-06, 7.1526e-07],
        [4.0948e-05, 5.0128e-05],
        [5.9605e-07, 3.3140e-05],
        [3.6359e-06, 5.5611e-05],
        [1.2517e-05, 4.2319e-06],
        [2.2650e-05, 1.7643e-05],
        [1.2457e-05, 7.4506e-06],
        [7.0333e-06, 9.8586e-05],
        [1.4365e-05, 1.0633e-04]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0405, 0.0887],
        [0.0686, 0.0523],
        [0.0801, 0.0448],
        [0.0425, 0.0844],
        [0.0812, 0.0442],
        [0.0659, 0.0545],
        [0.0707, 0.0508],
        [0.0930, 0.0386],
        [0.0620, 0.0579],
        [0.0402, 0.0892],
        [0.0420, 0.0854],
        [0.0834, 0.0430],
        [0.0693, 0.0518],
        [0.0739, 0.0486],
        [0.0422, 0.0850],
        [0.0445, 0.0806]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.419262
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1127e-06, 8.2314e-05],
        [2.6226e-06, 6.2287e-05],
        [4.1723e-07, 4.0233e-05],
        [3.7551e-06, 4.3571e-05],
        [8.2254e-06, 2.6822e-06],
        [4.2319e-06, 7.7486e-07],
        [4.6670e-05, 1.7583e-05],
        [1.2457e-05, 4.4703e-06],
        [3.5763e-07, 2.1279e-05],
        [1.5914e-05, 6.9737e-06],
        [3.8147e-06, 7.6413e-05],
        [8.9407e-07, 3.9101e-05],
        [2.6226e-06, 4.3213e-05],
        [7.1526e-07, 2.1219e-05],
        [2.5034e-06, 6.0380e-05],
        [1.6749e-05, 1.5020e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0462, 0.0759],
        [0.0458, 0.0764],
        [0.0445, 0.0788],
        [0.0477, 0.0735],
        [0.0936, 0.0374],
        [0.1025, 0.0342],
        [0.0910, 0.0385],
        [0.0919, 0.0381],
        [0.0448, 0.0783],
        [0.0883, 0.0397],
        [0.0462, 0.0759],
        [0.0450, 0.0778],
        [0.0466, 0.0751],
        [0.0455, 0.0770],
        [0.0458, 0.0765],
        [0.0746, 0.0470]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.402597
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5378e-05, 2.0385e-05],
        [1.6630e-05, 1.0192e-05],
        [1.3292e-05, 7.9870e-06],
        [1.0669e-05, 5.2869e-05],
        [2.3961e-05, 1.7941e-05],
        [3.8147e-06, 9.5367e-07],
        [3.5763e-07, 2.4199e-05],
        [1.7881e-06, 4.2617e-05],
        [2.8491e-05, 3.7432e-05],
        [1.1444e-05, 6.6996e-05],
        [9.5367e-07, 3.3975e-05],
        [1.4484e-05, 1.1444e-05],
        [3.2842e-05, 1.6272e-05],
        [1.7881e-07, 2.0981e-05],
        [4.5538e-05, 1.7285e-05],
        [2.9147e-05, 1.8537e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0619, 0.0585],
        [0.0748, 0.0484],
        [0.0752, 0.0482],
        [0.0476, 0.0760],
        [0.0713, 0.0508],
        [0.0896, 0.0404],
        [0.0408, 0.0886],
        [0.0419, 0.0864],
        [0.0620, 0.0584],
        [0.0466, 0.0777],
        [0.0414, 0.0875],
        [0.0704, 0.0514],
        [0.0786, 0.0461],
        [0.0406, 0.0892],
        [0.0831, 0.0436],
        [0.0742, 0.0488]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.398297
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.2650e-06, 5.0068e-05],
        [3.5763e-07, 3.4034e-05],
        [3.1590e-06, 4.1723e-07],
        [2.5153e-05, 2.0027e-05],
        [1.8775e-05, 1.0729e-05],
        [9.4175e-06, 3.3379e-06],
        [1.5497e-06, 2.7895e-05],
        [3.3140e-05, 4.6015e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0817, 0.1726],
        [0.0791, 0.1784],
        [0.1894, 0.0745],
        [0.1366, 0.1033],
        [0.1479, 0.0954],
        [0.1638, 0.0861],
        [0.0825, 0.1710],
        [0.1190, 0.1186]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.212460
acc:  0.965
Time taken to execute the en SA task with prompt type auxiliary, variation 0 and batchsize 16: 0:00:04.959296
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06],
        [6.7353e-06, 7.9274e-06]], device='cuda:0') torch.Size([100, 2])
answers_probs just softmax dim 0: tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.3319e-05],
        [2.0862e-06, 4.6253e-05],
        [3.4571e-06, 5.3644e-05],
        [1.3709e-06, 3.0339e-05],
        [1.5438e-05, 1.2636e-05],
        [5.9605e-07, 1.5616e-05],
        [2.7657e-05, 1.9610e-05],
        [1.7583e-05, 1.2100e-05],
        [1.5080e-05, 8.8215e-06],
        [6.5565e-07, 3.1173e-05],
        [3.6955e-06, 5.4240e-05],
        [1.4126e-05, 4.2319e-06],
        [1.9193e-05, 1.3471e-05],
        [1.9670e-06, 3.8862e-05],
        [5.8413e-06, 9.3818e-05],
        [2.1935e-05, 8.8215e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0795],
        [0.0462, 0.0776],
        [0.0470, 0.0763],
        [0.0462, 0.0776],
        [0.0766, 0.0467],
        [0.0459, 0.0781],
        [0.0794, 0.0451],
        [0.0799, 0.0448],
        [0.0831, 0.0431],
        [0.0451, 0.0794],
        [0.0471, 0.0760],
        [0.0954, 0.0375],
        [0.0796, 0.0450],
        [0.0464, 0.0772],
        [0.0469, 0.0764],
        [0.0902, 0.0397]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.426381
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2934e-05, 6.4969e-06],
        [4.7684e-07, 3.0577e-05],
        [2.8193e-05, 1.5557e-05],
        [2.6107e-05, 6.1631e-05],
        [7.1526e-07, 2.6524e-05],
        [2.2471e-05, 1.2100e-05],
        [1.0729e-05, 3.7551e-06],
        [6.5565e-07, 2.7299e-05],
        [9.8944e-06, 7.8678e-06],
        [5.3644e-07, 1.0073e-05],
        [2.7776e-05, 1.0014e-05],
        [1.2279e-05, 6.5565e-06],
        [2.2650e-06, 5.1260e-05],
        [1.5497e-06, 5.3108e-05],
        [2.4676e-05, 1.8060e-05],
        [1.0192e-05, 1.0371e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0792, 0.0453],
        [0.0413, 0.0868],
        [0.0775, 0.0463],
        [0.0548, 0.0655],
        [0.0418, 0.0859],
        [0.0780, 0.0460],
        [0.0854, 0.0420],
        [0.0417, 0.0861],
        [0.0710, 0.0505],
        [0.0428, 0.0838],
        [0.0849, 0.0423],
        [0.0781, 0.0459],
        [0.0425, 0.0845],
        [0.0419, 0.0857],
        [0.0725, 0.0495],
        [0.0668, 0.0537]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.316276
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.8944e-06, 6.0201e-06],
        [1.8477e-06, 5.3823e-05],
        [1.3649e-05, 4.8876e-06],
        [1.8656e-05, 7.0333e-06],
        [2.0623e-05, 4.9889e-05],
        [1.7464e-05, 1.3709e-05],
        [2.2948e-05, 1.1384e-05],
        [1.1683e-05, 7.8082e-06],
        [2.9802e-07, 6.2585e-06],
        [1.5020e-05, 6.7949e-06],
        [1.6212e-05, 9.1791e-06],
        [1.7226e-05, 1.0967e-05],
        [1.2338e-05, 1.1802e-05],
        [1.7881e-07, 1.7047e-05],
        [5.3644e-07, 3.0339e-05],
        [1.1921e-06, 3.8624e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0733, 0.0492],
        [0.0407, 0.0886],
        [0.0822, 0.0439],
        [0.0813, 0.0443],
        [0.0527, 0.0684],
        [0.0689, 0.0523],
        [0.0768, 0.0469],
        [0.0717, 0.0503],
        [0.0412, 0.0875],
        [0.0783, 0.0460],
        [0.0745, 0.0484],
        [0.0725, 0.0497],
        [0.0656, 0.0549],
        [0.0398, 0.0906],
        [0.0400, 0.0900],
        [0.0405, 0.0889]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.540734
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.0848e-05],
        [1.1921e-06, 5.3406e-05],
        [6.5565e-07, 3.0875e-05],
        [1.3351e-05, 6.4969e-06],
        [1.1921e-07, 1.3351e-05],
        [5.9605e-07, 3.4392e-05],
        [7.8082e-06, 5.4479e-05],
        [9.4771e-06, 3.3975e-06],
        [2.6226e-06, 5.9485e-05],
        [1.9193e-05, 1.0192e-05],
        [2.9802e-07, 2.4259e-05],
        [4.7684e-07, 2.0862e-05],
        [1.3113e-06, 5.2273e-05],
        [3.5763e-07, 3.0577e-05],
        [7.1526e-07, 3.5644e-05],
        [3.5763e-06, 4.1723e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0728],
        [0.0492, 0.0720],
        [0.0492, 0.0721],
        [0.0944, 0.0376],
        [0.0486, 0.0729],
        [0.0490, 0.0723],
        [0.0546, 0.0649],
        [0.1005, 0.0352],
        [0.0502, 0.0705],
        [0.0925, 0.0383],
        [0.0487, 0.0727],
        [0.0492, 0.0720],
        [0.0494, 0.0718],
        [0.0487, 0.0727],
        [0.0491, 0.0721],
        [0.1179, 0.0300]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.356629
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 3.2127e-05],
        [2.5094e-05, 1.6332e-05],
        [2.4199e-05, 6.8903e-05],
        [3.2425e-05, 2.3544e-05],
        [1.6749e-05, 6.9141e-06],
        [2.0266e-06, 4.1425e-05],
        [1.3709e-06, 5.1260e-05],
        [1.6332e-05, 1.1504e-05],
        [1.8477e-06, 4.3333e-05],
        [1.1861e-05, 4.4703e-06],
        [2.3842e-07, 7.5102e-06],
        [4.1723e-07, 2.7716e-05],
        [6.9737e-06, 3.8743e-06],
        [1.6749e-05, 9.8348e-06],
        [6.5565e-06, 8.1897e-05],
        [1.9133e-05, 1.6093e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0439, 0.0820],
        [0.0777, 0.0463],
        [0.0550, 0.0654],
        [0.0757, 0.0475],
        [0.0861, 0.0418],
        [0.0444, 0.0810],
        [0.0435, 0.0827],
        [0.0762, 0.0472],
        [0.0442, 0.0814],
        [0.0877, 0.0410],
        [0.0437, 0.0823],
        [0.0430, 0.0836],
        [0.0806, 0.0446],
        [0.0796, 0.0452],
        [0.0457, 0.0788],
        [0.0730, 0.0493]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.360714
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 4.0770e-05],
        [1.6809e-05, 6.9141e-06],
        [2.2650e-06, 5.8413e-05],
        [3.0398e-06, 4.9889e-05],
        [7.3910e-06, 2.5630e-06],
        [2.5988e-05, 3.4690e-05],
        [2.4080e-05, 1.9491e-05],
        [2.0325e-05, 2.4498e-05],
        [1.3113e-05, 1.1027e-05],
        [1.1921e-06, 4.0352e-05],
        [3.0398e-06, 4.7684e-07],
        [2.0862e-06, 5.8949e-05],
        [1.5497e-06, 4.7743e-05],
        [7.1526e-07, 2.9802e-05],
        [2.7418e-06, 5.0247e-05],
        [2.9802e-07, 3.0100e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0461, 0.0772],
        [0.0907, 0.0393],
        [0.0464, 0.0769],
        [0.0473, 0.0753],
        [0.0939, 0.0380],
        [0.0686, 0.0520],
        [0.0776, 0.0459],
        [0.0703, 0.0507],
        [0.0769, 0.0464],
        [0.0460, 0.0775],
        [0.1060, 0.0336],
        [0.0462, 0.0771],
        [0.0461, 0.0773],
        [0.0457, 0.0779],
        [0.0470, 0.0758],
        [0.0451, 0.0790]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.400198
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 2.1994e-05],
        [2.3842e-07, 1.5676e-05],
        [5.4836e-06, 9.5367e-07],
        [2.4438e-05, 1.1444e-05],
        [8.9407e-06, 8.3983e-05],
        [2.7418e-06, 6.6996e-05],
        [5.9605e-07, 2.6047e-05],
        [1.6689e-05, 1.0133e-05],
        [7.7486e-07, 3.7611e-05],
        [4.7684e-07, 2.3305e-05],
        [1.3173e-05, 4.7684e-06],
        [1.6987e-05, 1.3471e-05],
        [1.7703e-05, 8.1658e-06],
        [1.1086e-05, 7.2718e-06],
        [1.5140e-05, 8.6427e-06],
        [1.7881e-07, 1.6153e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0428, 0.0821],
        [0.0423, 0.0831],
        [0.0978, 0.0360],
        [0.0824, 0.0427],
        [0.0459, 0.0766],
        [0.0434, 0.0811],
        [0.0427, 0.0825],
        [0.0777, 0.0453],
        [0.0426, 0.0826],
        [0.0426, 0.0827],
        [0.0869, 0.0405],
        [0.0729, 0.0483],
        [0.0827, 0.0425],
        [0.0763, 0.0461],
        [0.0788, 0.0446],
        [0.0422, 0.0834]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.336522
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 3.5942e-05],
        [1.3053e-05, 5.9605e-06],
        [2.0266e-06, 4.3392e-05],
        [2.3842e-07, 1.0014e-05],
        [2.9802e-07, 2.1279e-05],
        [4.1127e-06, 7.4267e-05],
        [9.5367e-07, 3.9577e-05],
        [2.5392e-05, 2.2709e-05],
        [2.8253e-05, 3.6538e-05],
        [3.0398e-06, 2.9802e-07],
        [9.5367e-07, 4.0233e-05],
        [9.5367e-07, 4.7326e-05],
        [1.7762e-05, 7.0333e-06],
        [1.5795e-05, 5.5432e-06],
        [1.9014e-05, 9.2983e-06],
        [1.7941e-05, 7.2122e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0431, 0.0812],
        [0.0824, 0.0424],
        [0.0434, 0.0805],
        [0.0425, 0.0823],
        [0.0421, 0.0831],
        [0.0437, 0.0799],
        [0.0425, 0.0823],
        [0.0704, 0.0497],
        [0.0642, 0.0544],
        [0.1032, 0.0339],
        [0.0425, 0.0823],
        [0.0423, 0.0826],
        [0.0849, 0.0411],
        [0.0870, 0.0402],
        [0.0812, 0.0430],
        [0.0847, 0.0413]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.441045
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0014e-05, 5.7817e-06],
        [1.3113e-06, 2.7239e-05],
        [1.2219e-05, 7.9274e-06],
        [4.3511e-06, 2.0266e-06],
        [1.3769e-05, 9.8348e-06],
        [1.7881e-07, 1.9908e-05],
        [1.3709e-06, 4.4107e-05],
        [4.0531e-06, 4.9233e-05],
        [2.6047e-05, 2.4080e-05],
        [2.3663e-05, 1.6093e-05],
        [2.6584e-05, 1.2875e-05],
        [1.2755e-05, 1.1265e-05],
        [7.1526e-07, 3.1173e-05],
        [1.7345e-05, 1.1444e-05],
        [1.1981e-05, 1.1981e-05],
        [3.1114e-05, 1.6272e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0747, 0.0488],
        [0.0415, 0.0878],
        [0.0727, 0.0501],
        [0.0784, 0.0465],
        [0.0710, 0.0513],
        [0.0400, 0.0911],
        [0.0408, 0.0892],
        [0.0428, 0.0852],
        [0.0666, 0.0547],
        [0.0719, 0.0507],
        [0.0777, 0.0469],
        [0.0674, 0.0541],
        [0.0405, 0.0899],
        [0.0724, 0.0503],
        [0.0653, 0.0558],
        [0.0764, 0.0477]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.450648
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8358e-05, 1.6451e-05],
        [9.8348e-06, 8.2850e-06],
        [1.5914e-05, 2.5451e-05],
        [3.4571e-06, 8.8632e-05],
        [2.3246e-06, 6.2227e-05],
        [8.3447e-07, 4.0174e-05],
        [3.0994e-06, 6.5565e-07],
        [2.3246e-06, 6.2287e-05],
        [1.4901e-06, 5.1677e-05],
        [1.5378e-05, 6.7949e-06],
        [1.2815e-05, 7.3910e-06],
        [7.1526e-07, 3.3617e-05],
        [3.5763e-07, 3.8564e-05],
        [1.6689e-06, 4.3452e-05],
        [2.6464e-05, 9.6560e-06],
        [4.1127e-06, 6.1989e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0756, 0.0471],
        [0.0767, 0.0464],
        [0.0655, 0.0544],
        [0.0463, 0.0769],
        [0.0462, 0.0771],
        [0.0455, 0.0783],
        [0.1018, 0.0350],
        [0.0462, 0.0771],
        [0.0459, 0.0777],
        [0.0892, 0.0399],
        [0.0841, 0.0424],
        [0.0455, 0.0782],
        [0.0450, 0.0791],
        [0.0463, 0.0770],
        [0.0928, 0.0384],
        [0.0475, 0.0751]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.316816
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-08, 1.1921e-05],
        [3.1471e-05, 3.5942e-05],
        [2.9802e-07, 2.0146e-05],
        [3.3438e-05, 1.9848e-05],
        [1.9372e-05, 1.0967e-05],
        [1.6630e-05, 1.0550e-05],
        [1.6570e-05, 4.4703e-06],
        [4.5300e-06, 8.3447e-07],
        [2.7835e-05, 1.8656e-05],
        [8.7619e-06, 2.8610e-06],
        [8.8215e-06, 5.2750e-05],
        [1.5795e-05, 6.1393e-06],
        [1.0669e-05, 7.0930e-06],
        [7.3314e-06, 2.8610e-06],
        [4.7684e-07, 3.2723e-05],
        [2.5034e-06, 4.8041e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0374, 0.0953],
        [0.0594, 0.0600],
        [0.0378, 0.0944],
        [0.0698, 0.0511],
        [0.0705, 0.0506],
        [0.0687, 0.0519],
        [0.0819, 0.0436],
        [0.0867, 0.0412],
        [0.0678, 0.0526],
        [0.0792, 0.0451],
        [0.0430, 0.0830],
        [0.0765, 0.0466],
        [0.0679, 0.0525],
        [0.0765, 0.0466],
        [0.0378, 0.0944],
        [0.0391, 0.0911]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.423510
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1086e-05, 6.3777e-06],
        [1.9670e-06, 5.2214e-05],
        [3.8147e-06, 6.6042e-05],
        [1.4544e-05, 1.5736e-05],
        [1.7881e-07, 1.8895e-05],
        [1.1206e-05, 1.4544e-05],
        [2.4438e-05, 1.2457e-05],
        [1.0610e-05, 6.8545e-06],
        [3.1590e-06, 6.3419e-05],
        [1.0133e-06, 3.9160e-05],
        [1.3471e-05, 6.1989e-06],
        [2.8610e-06, 6.6996e-05],
        [3.5763e-07, 1.9372e-05],
        [3.9935e-06, 1.0133e-06],
        [2.6047e-05, 3.7611e-05],
        [2.1815e-05, 1.3769e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0799, 0.0450],
        [0.0439, 0.0818],
        [0.0447, 0.0803],
        [0.0685, 0.0525],
        [0.0427, 0.0840],
        [0.0654, 0.0549],
        [0.0821, 0.0437],
        [0.0777, 0.0462],
        [0.0444, 0.0809],
        [0.0434, 0.0827],
        [0.0840, 0.0428],
        [0.0441, 0.0814],
        [0.0431, 0.0833],
        [0.0940, 0.0382],
        [0.0638, 0.0563],
        [0.0782, 0.0459]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.308301
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[5.3644e-07, 3.1412e-05],
        [7.3314e-06, 5.9545e-05],
        [7.7486e-07, 6.2406e-05],
        [1.1742e-05, 1.2636e-05],
        [9.5367e-07, 2.9504e-05],
        [3.5763e-07, 7.3910e-06],
        [9.9540e-06, 7.4148e-05],
        [4.2319e-06, 6.3062e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1126, 0.1359],
        [0.1235, 0.1238],
        [0.1121, 0.1365],
        [0.1792, 0.0854],
        [0.1142, 0.1339],
        [0.1159, 0.1320],
        [0.1246, 0.1228],
        [0.1179, 0.1298]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.206484
acc:  0.96
Time taken to execute the en SA task with prompt type auxiliary, variation 1 and batchsize 16: 0:00:04.905149
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05]], device='cuda:0') torch.Size([100, 2])
answers_probs just softmax dim 0: tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3975e-06, 9.8228e-05],
        [7.9274e-06, 6.2764e-05],
        [4.7684e-07, 3.5048e-05],
        [8.9407e-06, 5.8413e-06],
        [3.9339e-06, 6.3837e-05],
        [1.6093e-06, 3.6061e-05],
        [2.0266e-06, 6.5148e-05],
        [2.2709e-05, 1.5974e-05],
        [1.4305e-06, 2.0623e-05],
        [2.3723e-05, 1.2040e-05],
        [1.2517e-05, 7.4506e-06],
        [3.5763e-07, 2.8670e-05],
        [1.5795e-05, 1.0431e-05],
        [3.5763e-07, 2.7239e-05],
        [1.7285e-06, 6.1870e-05],
        [2.8610e-06, 5.2392e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0498, 0.0730],
        [0.0539, 0.0674],
        [0.0489, 0.0744],
        [0.0883, 0.0412],
        [0.0511, 0.0712],
        [0.0503, 0.0723],
        [0.0497, 0.0732],
        [0.0867, 0.0419],
        [0.0514, 0.0707],
        [0.0936, 0.0389],
        [0.0902, 0.0403],
        [0.0488, 0.0745],
        [0.0880, 0.0413],
        [0.0488, 0.0745],
        [0.0495, 0.0734],
        [0.0508, 0.0716]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.363206
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1623e-05, 1.1861e-05],
        [2.0027e-05, 8.0466e-06],
        [4.1723e-07, 2.5332e-05],
        [2.9802e-07, 2.5451e-05],
        [1.2279e-05, 6.7353e-06],
        [1.0192e-05, 4.5300e-06],
        [5.4836e-06, 9.2208e-05],
        [7.1526e-07, 3.2425e-05],
        [1.4007e-05, 5.8413e-06],
        [3.8147e-06, 1.4305e-06],
        [1.6749e-05, 1.0312e-05],
        [1.9908e-05, 1.6510e-05],
        [1.0133e-06, 4.5240e-05],
        [2.6226e-06, 4.9591e-05],
        [1.5676e-05, 9.2387e-06],
        [1.7285e-05, 1.7822e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0657, 0.0545],
        [0.0818, 0.0438],
        [0.0407, 0.0879],
        [0.0405, 0.0883],
        [0.0764, 0.0469],
        [0.0801, 0.0447],
        [0.0424, 0.0845],
        [0.0409, 0.0875],
        [0.0811, 0.0441],
        [0.0829, 0.0432],
        [0.0744, 0.0481],
        [0.0692, 0.0517],
        [0.0410, 0.0874],
        [0.0421, 0.0850],
        [0.0752, 0.0476],
        [0.0656, 0.0546]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.475893
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.6240e-05],
        [9.1195e-06, 3.1590e-06],
        [1.9729e-05, 1.9908e-05],
        [1.1683e-05, 8.2850e-06],
        [1.2517e-06, 4.1962e-05],
        [3.3915e-05, 2.5988e-05],
        [1.1325e-06, 8.8036e-05],
        [4.9472e-06, 8.7380e-05],
        [3.9935e-06, 4.7684e-07],
        [2.3842e-07, 3.2127e-05],
        [9.5367e-06, 6.4969e-06],
        [2.5630e-06, 7.2956e-05],
        [2.3842e-06, 5.1618e-05],
        [3.0458e-05, 1.4484e-05],
        [1.1921e-07, 1.4901e-05],
        [2.1160e-05, 1.5497e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0433, 0.0816],
        [0.0894, 0.0395],
        [0.0699, 0.0505],
        [0.0763, 0.0463],
        [0.0438, 0.0807],
        [0.0749, 0.0472],
        [0.0431, 0.0820],
        [0.0449, 0.0787],
        [0.1039, 0.0340],
        [0.0428, 0.0825],
        [0.0771, 0.0458],
        [0.0440, 0.0803],
        [0.0444, 0.0795],
        [0.0837, 0.0422],
        [0.0429, 0.0824],
        [0.0757, 0.0466]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.400294
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 2.5332e-05],
        [1.7405e-05, 1.3888e-05],
        [1.1921e-07, 1.8179e-05],
        [2.9802e-07, 2.7657e-05],
        [1.5140e-05, 8.5831e-06],
        [2.3901e-05, 1.0312e-05],
        [1.8537e-05, 1.0252e-05],
        [1.5974e-05, 9.7752e-06],
        [2.1040e-05, 1.4007e-05],
        [1.2875e-05, 2.5034e-05],
        [1.7285e-06, 4.5121e-05],
        [3.5763e-07, 6.6757e-06],
        [1.7643e-05, 9.5367e-06],
        [1.9372e-05, 2.0325e-05],
        [2.9802e-06, 6.8069e-05],
        [7.7486e-07, 2.5988e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0439, 0.0822],
        [0.0746, 0.0483],
        [0.0430, 0.0838],
        [0.0432, 0.0834],
        [0.0809, 0.0445],
        [0.0860, 0.0419],
        [0.0814, 0.0443],
        [0.0795, 0.0453],
        [0.0779, 0.0463],
        [0.0601, 0.0600],
        [0.0444, 0.0813],
        [0.0450, 0.0801],
        [0.0818, 0.0441],
        [0.0697, 0.0518],
        [0.0446, 0.0808],
        [0.0440, 0.0819]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.539498
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8133e-05, 2.4796e-05],
        [7.1526e-07, 4.9591e-05],
        [2.2173e-05, 1.9550e-05],
        [1.5497e-06, 6.4194e-05],
        [3.3379e-06, 5.9605e-07],
        [1.3113e-06, 5.4181e-05],
        [1.0014e-05, 7.3910e-05],
        [1.9670e-06, 7.0274e-05],
        [2.7001e-05, 2.1696e-05],
        [1.8477e-05, 8.4043e-06],
        [1.3530e-05, 6.4373e-06],
        [2.6822e-06, 4.1723e-07],
        [7.0930e-06, 4.3511e-06],
        [1.3530e-05, 1.7405e-05],
        [1.0371e-05, 9.5963e-06],
        [1.1921e-06, 5.3465e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0677, 0.0526],
        [0.0403, 0.0883],
        [0.0677, 0.0526],
        [0.0407, 0.0875],
        [0.0929, 0.0383],
        [0.0407, 0.0875],
        [0.0448, 0.0795],
        [0.0409, 0.0871],
        [0.0693, 0.0514],
        [0.0791, 0.0450],
        [0.0783, 0.0455],
        [0.0945, 0.0377],
        [0.0739, 0.0482],
        [0.0616, 0.0578],
        [0.0669, 0.0533],
        [0.0407, 0.0876]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.334404
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 4.2260e-05],
        [1.6391e-05, 7.9870e-06],
        [4.7684e-07, 3.0279e-05],
        [1.7881e-06, 3.9816e-05],
        [1.7285e-06, 4.7624e-05],
        [2.3842e-07, 1.0252e-05],
        [2.1279e-05, 4.9889e-05],
        [3.2604e-05, 4.6670e-05],
        [1.1861e-05, 6.3777e-06],
        [5.9605e-07, 2.5392e-05],
        [1.0908e-05, 6.0320e-05],
        [4.1723e-07, 2.2948e-05],
        [4.7684e-07, 9.1195e-06],
        [2.1815e-05, 1.5259e-05],
        [9.5367e-07, 3.9279e-05],
        [1.4067e-05, 6.7949e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0486, 0.0750],
        [0.0937, 0.0389],
        [0.0486, 0.0751],
        [0.0499, 0.0730],
        [0.0495, 0.0736],
        [0.0489, 0.0745],
        [0.0645, 0.0565],
        [0.0721, 0.0505],
        [0.0916, 0.0398],
        [0.0489, 0.0745],
        [0.0557, 0.0654],
        [0.0487, 0.0749],
        [0.0503, 0.0725],
        [0.0861, 0.0423],
        [0.0490, 0.0745],
        [0.0938, 0.0388]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.362574
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2173e-05, 1.1146e-05],
        [3.5763e-07, 1.0431e-05],
        [3.3081e-05, 2.6345e-05],
        [1.6093e-06, 6.0499e-05],
        [1.4305e-05, 8.3447e-06],
        [1.6272e-05, 1.4842e-05],
        [2.8014e-06, 6.7651e-05],
        [1.3590e-05, 1.2636e-05],
        [1.7881e-07, 1.8179e-05],
        [2.4855e-05, 6.3419e-05],
        [6.5565e-07, 3.3200e-05],
        [5.3644e-07, 3.3379e-05],
        [2.1160e-05, 2.8253e-05],
        [2.3246e-05, 1.9848e-05],
        [9.1195e-06, 7.4804e-05],
        [2.9325e-05, 3.0041e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0868, 0.0423],
        [0.0461, 0.0795],
        [0.0779, 0.0471],
        [0.0458, 0.0801],
        [0.0839, 0.0437],
        [0.0753, 0.0487],
        [0.0464, 0.0790],
        [0.0749, 0.0490],
        [0.0451, 0.0814],
        [0.0591, 0.0620],
        [0.0455, 0.0806],
        [0.0453, 0.0809],
        [0.0685, 0.0536],
        [0.0765, 0.0479],
        [0.0497, 0.0738],
        [0.0731, 0.0502]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.363311
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6226e-06, 2.9802e-07],
        [1.7881e-07, 2.1219e-05],
        [1.0729e-06, 5.0128e-05],
        [1.0490e-05, 4.1127e-06],
        [2.3842e-07, 1.6451e-05],
        [1.1325e-06, 2.7835e-05],
        [8.7619e-06, 8.9884e-05],
        [2.3842e-06, 6.5625e-05],
        [3.0994e-06, 7.5340e-05],
        [1.1921e-07, 1.3709e-05],
        [2.6226e-06, 6.6042e-05],
        [8.9407e-07, 4.0531e-05],
        [1.1325e-06, 3.7789e-05],
        [1.6570e-05, 1.0371e-05],
        [3.1769e-05, 2.3246e-05],
        [2.9862e-05, 2.0862e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1153, 0.0308],
        [0.0474, 0.0750],
        [0.0480, 0.0741],
        [0.0963, 0.0369],
        [0.0476, 0.0746],
        [0.0488, 0.0728],
        [0.0513, 0.0692],
        [0.0486, 0.0731],
        [0.0489, 0.0727],
        [0.0474, 0.0750],
        [0.0488, 0.0728],
        [0.0480, 0.0740],
        [0.0484, 0.0735],
        [0.0869, 0.0409],
        [0.0837, 0.0425],
        [0.0846, 0.0420]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.395615
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 2.4498e-05],
        [3.3379e-06, 6.2406e-05],
        [1.4961e-05, 6.4373e-06],
        [3.2365e-05, 1.9193e-05],
        [1.9073e-05, 7.9274e-06],
        [3.4094e-05, 1.4007e-05],
        [5.9605e-08, 1.6332e-05],
        [3.5763e-07, 3.0816e-05],
        [3.5763e-07, 4.4107e-05],
        [3.9935e-06, 9.1791e-05],
        [3.1292e-05, 3.5167e-05],
        [1.7047e-05, 1.0848e-05],
        [5.3644e-07, 3.8803e-05],
        [5.5432e-06, 7.7486e-07],
        [1.7881e-06, 4.4286e-05],
        [1.0133e-06, 3.8803e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0445, 0.0788],
        [0.0457, 0.0767],
        [0.0874, 0.0401],
        [0.0814, 0.0431],
        [0.0881, 0.0398],
        [0.0883, 0.0397],
        [0.0436, 0.0804],
        [0.0440, 0.0798],
        [0.0438, 0.0801],
        [0.0453, 0.0774],
        [0.0696, 0.0504],
        [0.0801, 0.0438],
        [0.0441, 0.0796],
        [0.1045, 0.0336],
        [0.0452, 0.0777],
        [0.0446, 0.0787]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.355098
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0862e-06, 4.3213e-05],
        [2.8610e-05, 5.2571e-05],
        [3.4571e-06, 6.7711e-05],
        [2.1696e-05, 2.2769e-05],
        [1.8477e-05, 1.4961e-05],
        [5.3644e-07, 2.5570e-05],
        [1.3113e-06, 6.1572e-05],
        [1.6093e-05, 1.1981e-05],
        [2.2471e-05, 1.3947e-05],
        [1.2159e-05, 3.9935e-06],
        [1.7881e-06, 3.2485e-05],
        [2.7955e-05, 1.7643e-05],
        [3.7313e-05, 1.9670e-05],
        [2.8431e-05, 1.7524e-05],
        [1.7881e-07, 1.6451e-05],
        [4.6492e-06, 7.7486e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0423, 0.0845],
        [0.0575, 0.0622],
        [0.0425, 0.0843],
        [0.0659, 0.0543],
        [0.0703, 0.0509],
        [0.0413, 0.0867],
        [0.0413, 0.0867],
        [0.0717, 0.0499],
        [0.0750, 0.0478],
        [0.0859, 0.0417],
        [0.0426, 0.0840],
        [0.0747, 0.0480],
        [0.0778, 0.0460],
        [0.0751, 0.0477],
        [0.0409, 0.0876],
        [0.0953, 0.0376]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.402541
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 3.7730e-05],
        [3.4571e-06, 8.9407e-07],
        [1.2577e-05, 1.5914e-05],
        [8.3447e-07, 3.9816e-05],
        [1.6153e-05, 6.5565e-06],
        [9.5367e-07, 3.4213e-05],
        [2.9206e-06, 4.9651e-05],
        [8.3447e-07, 4.6909e-05],
        [3.3677e-05, 1.5438e-05],
        [1.7047e-05, 1.0490e-05],
        [1.3471e-05, 6.7949e-06],
        [3.5048e-05, 2.9266e-05],
        [8.9407e-07, 4.1068e-05],
        [5.9605e-07, 2.9624e-05],
        [3.0994e-06, 6.2823e-05],
        [1.4305e-06, 5.5075e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0454, 0.0783],
        [0.0980, 0.0362],
        [0.0689, 0.0516],
        [0.0452, 0.0786],
        [0.0902, 0.0394],
        [0.0455, 0.0781],
        [0.0468, 0.0759],
        [0.0451, 0.0788],
        [0.0879, 0.0404],
        [0.0823, 0.0432],
        [0.0861, 0.0413],
        [0.0764, 0.0465],
        [0.0452, 0.0785],
        [0.0452, 0.0786],
        [0.0464, 0.0765],
        [0.0454, 0.0782]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.397974
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 3.6240e-05],
        [1.2577e-05, 5.4836e-06],
        [2.9445e-05, 4.3213e-05],
        [1.0729e-06, 4.5538e-05],
        [1.2517e-06, 4.5538e-05],
        [1.6153e-05, 9.4175e-06],
        [2.5988e-05, 1.2636e-05],
        [2.0742e-05, 1.9133e-05],
        [1.0729e-06, 4.7386e-05],
        [2.7061e-05, 5.5015e-05],
        [2.4140e-05, 1.3471e-05],
        [1.2994e-05, 6.0797e-06],
        [3.0994e-06, 2.3842e-07],
        [4.7684e-07, 3.6061e-05],
        [1.3828e-05, 1.5676e-05],
        [1.3769e-05, 9.8348e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0403, 0.0889],
        [0.0792, 0.0452],
        [0.0592, 0.0605],
        [0.0404, 0.0886],
        [0.0406, 0.0883],
        [0.0743, 0.0482],
        [0.0774, 0.0463],
        [0.0664, 0.0539],
        [0.0404, 0.0887],
        [0.0549, 0.0652],
        [0.0750, 0.0477],
        [0.0780, 0.0459],
        [0.0999, 0.0358],
        [0.0400, 0.0895],
        [0.0631, 0.0567],
        [0.0708, 0.0506]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.440550
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.2517e-05, 5.6028e-06],
        [2.5630e-06, 5.4240e-05],
        [1.8656e-05, 5.7817e-06],
        [1.9252e-05, 2.0027e-05],
        [1.9670e-06, 5.0902e-05],
        [1.6034e-05, 7.0333e-06],
        [2.2650e-06, 3.5763e-07],
        [2.2411e-05, 1.5378e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1421, 0.1008],
        [0.0745, 0.1922],
        [0.1528, 0.0937],
        [0.1163, 0.1232],
        [0.0739, 0.1938],
        [0.1427, 0.1004],
        [0.1689, 0.0848],
        [0.1289, 0.1111]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.161404
acc:  0.96
Time taken to execute the en SA task with prompt type auxiliary, variation 2 and batchsize 16: 0:00:05.012957
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06],
        [6.4969e-06, 7.0930e-06]], device='cuda:0') torch.Size([121, 2])
answers_probs just softmax dim 0: tensor([[0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083]], device='cuda:0')
tensor([[0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083],
        [0.0083, 0.0083]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3232e-05, 3.3975e-06],
        [2.9802e-07, 2.3365e-05],
        [1.7881e-07, 2.7478e-05],
        [3.3379e-06, 5.9605e-07],
        [9.7752e-06, 5.3644e-06],
        [2.9802e-07, 2.0981e-05],
        [1.6689e-05, 4.6492e-06],
        [2.0266e-06, 5.8949e-05],
        [1.3709e-05, 4.4107e-06],
        [2.3842e-07, 1.8597e-05],
        [1.9133e-05, 6.8545e-06],
        [2.3842e-06, 6.8367e-05],
        [1.6689e-05, 9.0003e-06],
        [3.1114e-05, 1.3888e-05],
        [4.2140e-05, 3.8624e-05],
        [7.7486e-07, 3.9518e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0866, 0.0400],
        [0.0396, 0.0874],
        [0.0393, 0.0880],
        [0.0913, 0.0379],
        [0.0745, 0.0464],
        [0.0396, 0.0873],
        [0.0854, 0.0405],
        [0.0404, 0.0856],
        [0.0833, 0.0415],
        [0.0396, 0.0874],
        [0.0816, 0.0424],
        [0.0404, 0.0856],
        [0.0748, 0.0462],
        [0.0780, 0.0443],
        [0.0658, 0.0525],
        [0.0398, 0.0868]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.431071
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3186e-05, 1.5557e-05],
        [1.7881e-07, 2.0564e-05],
        [3.1292e-05, 1.2815e-05],
        [5.0664e-06, 7.8380e-05],
        [2.2233e-05, 6.5386e-05],
        [1.5438e-05, 5.9009e-06],
        [1.3709e-05, 7.4506e-06],
        [2.1040e-05, 1.2457e-05],
        [1.9610e-05, 5.0068e-06],
        [1.8299e-05, 9.0599e-06],
        [1.6510e-05, 4.5896e-06],
        [1.4305e-05, 1.1027e-05],
        [2.6822e-06, 4.7684e-05],
        [8.9407e-07, 4.6134e-05],
        [1.6689e-06, 1.1921e-07],
        [1.2279e-05, 5.5432e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0655, 0.0544],
        [0.0363, 0.0981],
        [0.0732, 0.0487],
        [0.0382, 0.0931],
        [0.0464, 0.0768],
        [0.0742, 0.0480],
        [0.0688, 0.0518],
        [0.0675, 0.0528],
        [0.0798, 0.0446],
        [0.0703, 0.0507],
        [0.0787, 0.0452],
        [0.0633, 0.0563],
        [0.0380, 0.0938],
        [0.0367, 0.0971],
        [0.0915, 0.0389],
        [0.0717, 0.0497]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.403831
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.0068e-06, 7.9811e-05],
        [5.9605e-07, 4.3631e-05],
        [3.9935e-06, 7.8261e-05],
        [1.7822e-05, 6.1750e-05],
        [2.3842e-06, 5.0724e-05],
        [2.3842e-07, 1.6510e-05],
        [2.2411e-05, 9.8944e-06],
        [2.0266e-06, 4.0948e-05],
        [1.0431e-05, 7.2122e-06],
        [3.4809e-05, 2.1279e-05],
        [1.3590e-05, 4.2915e-06],
        [8.1658e-06, 3.5167e-06],
        [1.0729e-06, 2.5451e-05],
        [1.3113e-06, 1.7881e-07],
        [9.5367e-07, 6.4790e-05],
        [2.9802e-07, 2.7478e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0755],
        [0.0445, 0.0790],
        [0.0461, 0.0763],
        [0.0549, 0.0640],
        [0.0459, 0.0766],
        [0.0445, 0.0790],
        [0.0879, 0.0400],
        [0.0460, 0.0764],
        [0.0793, 0.0444],
        [0.0817, 0.0431],
        [0.0939, 0.0375],
        [0.0883, 0.0398],
        [0.0457, 0.0769],
        [0.1058, 0.0332],
        [0.0445, 0.0790],
        [0.0444, 0.0793]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.359535
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-05, 1.6153e-05],
        [3.5763e-07, 2.3186e-05],
        [5.9605e-07, 3.3617e-05],
        [2.1458e-06, 1.7881e-07],
        [3.0816e-05, 1.3351e-05],
        [3.3259e-05, 4.4763e-05],
        [8.8811e-06, 6.5744e-05],
        [2.0087e-05, 7.5102e-06],
        [2.9802e-07, 1.9431e-05],
        [4.1723e-07, 2.4796e-05],
        [2.6822e-05, 1.7881e-05],
        [3.9935e-06, 6.8188e-05],
        [5.9605e-07, 3.5703e-05],
        [1.3709e-06, 3.0637e-05],
        [1.7583e-05, 8.8215e-06],
        [3.5763e-07, 2.1338e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0738, 0.0478],
        [0.0443, 0.0796],
        [0.0444, 0.0794],
        [0.1099, 0.0321],
        [0.0877, 0.0402],
        [0.0668, 0.0527],
        [0.0492, 0.0717],
        [0.0904, 0.0390],
        [0.0443, 0.0796],
        [0.0444, 0.0794],
        [0.0795, 0.0443],
        [0.0461, 0.0764],
        [0.0444, 0.0795],
        [0.0456, 0.0774],
        [0.0849, 0.0415],
        [0.0444, 0.0795]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.447924
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0862e-05, 1.2577e-05],
        [3.1590e-06, 5.6922e-05],
        [1.5736e-05, 7.8678e-06],
        [2.3842e-07, 7.2122e-06],
        [3.0279e-05, 1.3471e-05],
        [9.5367e-07, 5.2810e-05],
        [2.3842e-07, 2.2888e-05],
        [2.3842e-07, 2.7776e-05],
        [2.9683e-05, 2.0266e-05],
        [4.7684e-07, 2.2650e-05],
        [1.1504e-05, 5.3644e-06],
        [7.7486e-07, 3.4869e-05],
        [9.5367e-07, 3.4392e-05],
        [4.1723e-07, 2.6405e-05],
        [8.3447e-07, 2.5034e-05],
        [2.3842e-07, 3.3259e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0895, 0.0401],
        [0.0505, 0.0710],
        [0.0934, 0.0384],
        [0.0495, 0.0725],
        [0.0958, 0.0374],
        [0.0488, 0.0735],
        [0.0485, 0.0741],
        [0.0484, 0.0742],
        [0.0869, 0.0413],
        [0.0490, 0.0733],
        [0.0949, 0.0378],
        [0.0490, 0.0732],
        [0.0493, 0.0728],
        [0.0487, 0.0737],
        [0.0495, 0.0724],
        [0.0483, 0.0743]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.402277
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1412e-05, 1.5676e-05],
        [2.0087e-05, 7.5102e-06],
        [1.6093e-06, 6.0141e-05],
        [2.4498e-05, 9.5367e-06],
        [2.8610e-06, 6.5923e-05],
        [1.4305e-06, 5.5850e-05],
        [2.2650e-06, 5.6922e-05],
        [1.5199e-05, 9.3579e-06],
        [2.6226e-06, 2.9802e-07],
        [3.2187e-06, 5.5134e-05],
        [2.4438e-06, 6.3896e-05],
        [2.4021e-05, 1.9491e-05],
        [4.4107e-06, 9.0241e-05],
        [1.4424e-05, 6.9499e-05],
        [2.9266e-05, 1.0908e-05],
        [2.6047e-05, 1.1802e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0791, 0.0444],
        [0.0840, 0.0417],
        [0.0416, 0.0842],
        [0.0833, 0.0421],
        [0.0423, 0.0829],
        [0.0416, 0.0843],
        [0.0422, 0.0832],
        [0.0753, 0.0466],
        [0.0996, 0.0352],
        [0.0429, 0.0818],
        [0.0421, 0.0833],
        [0.0705, 0.0498],
        [0.0425, 0.0825],
        [0.0482, 0.0728],
        [0.0841, 0.0417],
        [0.0807, 0.0434]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.420981
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8835e-05, 1.2815e-05],
        [2.2531e-05, 1.2636e-05],
        [2.3842e-07, 5.3048e-06],
        [5.3644e-07, 3.2663e-05],
        [4.1723e-07, 1.9073e-05],
        [1.2815e-05, 3.3975e-06],
        [1.6689e-06, 2.3842e-07],
        [1.7881e-07, 1.6510e-05],
        [1.1921e-07, 1.5080e-05],
        [1.1504e-05, 8.8811e-06],
        [1.0729e-06, 4.9233e-05],
        [3.5524e-05, 2.4617e-05],
        [8.9407e-07, 3.4213e-05],
        [2.5690e-05, 1.7524e-05],
        [2.9802e-06, 5.3108e-05],
        [3.0160e-05, 5.5909e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0778, 0.0455],
        [0.0814, 0.0434],
        [0.0448, 0.0790],
        [0.0436, 0.0811],
        [0.0438, 0.0807],
        [0.0946, 0.0374],
        [0.1029, 0.0344],
        [0.0434, 0.0815],
        [0.0432, 0.0818],
        [0.0754, 0.0469],
        [0.0438, 0.0807],
        [0.0774, 0.0457],
        [0.0440, 0.0804],
        [0.0777, 0.0455],
        [0.0452, 0.0782],
        [0.0609, 0.0581]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.398961
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3828e-05, 1.4484e-05],
        [1.6689e-06, 5.3823e-05],
        [3.4392e-05, 1.2457e-05],
        [1.7881e-07, 5.3048e-06],
        [3.1352e-05, 1.5497e-05],
        [1.2279e-05, 1.0014e-05],
        [1.1504e-05, 5.2452e-06],
        [1.5378e-05, 7.6294e-06],
        [2.4438e-06, 4.8637e-05],
        [2.7418e-05, 1.0431e-05],
        [4.6492e-06, 7.0810e-05],
        [1.5497e-05, 5.9009e-06],
        [3.3617e-05, 3.8087e-05],
        [2.2352e-05, 7.2122e-06],
        [2.3186e-05, 1.3411e-05],
        [1.3709e-06, 4.9353e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0620, 0.0579],
        [0.0392, 0.0916],
        [0.0793, 0.0453],
        [0.0393, 0.0913],
        [0.0743, 0.0483],
        [0.0660, 0.0544],
        [0.0756, 0.0475],
        [0.0742, 0.0484],
        [0.0399, 0.0899],
        [0.0785, 0.0457],
        [0.0405, 0.0887],
        [0.0785, 0.0457],
        [0.0608, 0.0590],
        [0.0810, 0.0443],
        [0.0717, 0.0501],
        [0.0391, 0.0918]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.560312
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8193e-05, 2.4080e-05],
        [1.9968e-05, 1.0669e-05],
        [1.4901e-06, 4.6074e-05],
        [1.6809e-05, 1.0669e-05],
        [5.9605e-08, 1.1384e-05],
        [1.1921e-06, 1.7703e-05],
        [1.0729e-06, 4.5836e-05],
        [1.1325e-06, 4.3571e-05],
        [1.2517e-06, 4.6968e-05],
        [3.9876e-05, 3.9876e-05],
        [1.7226e-05, 2.1935e-05],
        [1.1921e-07, 1.6630e-05],
        [1.4901e-06, 3.5822e-05],
        [1.4842e-05, 1.4842e-05],
        [2.3842e-07, 2.2173e-05],
        [7.1526e-07, 4.7028e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0833, 0.0440],
        [0.0932, 0.0393],
        [0.0501, 0.0731],
        [0.0896, 0.0409],
        [0.0488, 0.0750],
        [0.0518, 0.0708],
        [0.0497, 0.0737],
        [0.0498, 0.0735],
        [0.0499, 0.0735],
        [0.0801, 0.0457],
        [0.0754, 0.0486],
        [0.0489, 0.0749],
        [0.0506, 0.0725],
        [0.0801, 0.0457],
        [0.0491, 0.0746],
        [0.0493, 0.0743]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.362832
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0669e-05, 4.8876e-06],
        [8.8811e-06, 5.5850e-05],
        [1.5676e-05, 7.3910e-06],
        [2.4199e-05, 3.7789e-05],
        [2.9802e-07, 1.9670e-05],
        [1.1504e-05, 4.8876e-06],
        [5.9605e-08, 1.1027e-05],
        [2.8014e-06, 2.9802e-07],
        [4.7684e-07, 3.4869e-05],
        [1.3769e-05, 4.8876e-06],
        [1.9491e-05, 7.3314e-06],
        [2.4557e-05, 1.2636e-05],
        [2.5630e-06, 4.9293e-05],
        [3.9577e-05, 2.4021e-05],
        [1.1325e-06, 4.2081e-05],
        [8.2850e-06, 3.3975e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0759, 0.0464],
        [0.0438, 0.0803],
        [0.0754, 0.0467],
        [0.0565, 0.0623],
        [0.0388, 0.0907],
        [0.0771, 0.0456],
        [0.0384, 0.0916],
        [0.0943, 0.0373],
        [0.0387, 0.0909],
        [0.0799, 0.0440],
        [0.0790, 0.0445],
        [0.0739, 0.0476],
        [0.0401, 0.0876],
        [0.0712, 0.0494],
        [0.0392, 0.0897],
        [0.0777, 0.0453]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.365759
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9743e-05, 1.4842e-05],
        [2.5034e-06, 6.0737e-05],
        [1.7881e-07, 8.8215e-06],
        [2.9802e-07, 3.1412e-05],
        [2.3425e-05, 1.5378e-05],
        [2.9206e-06, 5.0068e-05],
        [2.7418e-06, 5.1618e-05],
        [1.6630e-05, 6.4373e-06],
        [1.0848e-05, 3.1590e-06],
        [1.2159e-05, 5.9009e-06],
        [8.3447e-07, 3.7789e-05],
        [1.9491e-05, 4.4703e-06],
        [2.2590e-05, 1.1206e-05],
        [3.1590e-06, 5.9724e-05],
        [2.2054e-05, 2.4974e-05],
        [3.2187e-06, 4.1723e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0766, 0.0455],
        [0.0409, 0.0853],
        [0.0401, 0.0870],
        [0.0397, 0.0879],
        [0.0719, 0.0485],
        [0.0415, 0.0840],
        [0.0413, 0.0844],
        [0.0808, 0.0431],
        [0.0853, 0.0409],
        [0.0771, 0.0453],
        [0.0402, 0.0868],
        [0.0887, 0.0393],
        [0.0767, 0.0455],
        [0.0413, 0.0844],
        [0.0628, 0.0555],
        [0.0953, 0.0366]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.443837
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4676e-05, 1.4782e-05],
        [2.2054e-06, 4.7684e-07],
        [4.1723e-07, 2.6822e-05],
        [1.4007e-05, 4.5896e-06],
        [2.2054e-05, 8.4639e-06],
        [1.4305e-05, 8.7023e-06],
        [1.1325e-06, 4.6372e-05],
        [2.0564e-05, 1.4901e-05],
        [2.0266e-06, 6.0380e-05],
        [8.9407e-07, 3.1531e-05],
        [3.5763e-07, 3.2544e-05],
        [5.9605e-08, 1.2100e-05],
        [1.3113e-06, 5.0008e-05],
        [4.7684e-07, 2.5451e-05],
        [2.0444e-05, 1.3113e-05],
        [1.7405e-05, 5.0068e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0774, 0.0451],
        [0.0942, 0.0370],
        [0.0420, 0.0829],
        [0.0879, 0.0397],
        [0.0853, 0.0409],
        [0.0771, 0.0452],
        [0.0424, 0.0822],
        [0.0739, 0.0472],
        [0.0428, 0.0815],
        [0.0426, 0.0819],
        [0.0419, 0.0833],
        [0.0416, 0.0838],
        [0.0425, 0.0821],
        [0.0422, 0.0827],
        [0.0762, 0.0458],
        [0.0900, 0.0387]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.405681
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.6868e-05, 6.7353e-06],
        [1.7822e-05, 6.5565e-06],
        [8.7619e-06, 9.1016e-05],
        [4.1723e-07, 2.9981e-05],
        [1.6093e-06, 5.2869e-05],
        [2.2054e-06, 1.5438e-05],
        [3.3915e-05, 1.3590e-05],
        [2.6822e-06, 5.9545e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1781, 0.0793],
        [0.1810, 0.0780],
        [0.0951, 0.1484],
        [0.0883, 0.1598],
        [0.0898, 0.1573],
        [0.0987, 0.1429],
        [0.1779, 0.0793],
        [0.0910, 0.1551]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.099388
acc:  0.96
Time taken to execute the en SA task with prompt type auxiliary, variation 3 and batchsize 16: 0:00:05.122980
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06],
        [5.0664e-06, 5.3048e-06]], device='cuda:0') torch.Size([114, 2])
answers_probs just softmax dim 0: tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
tensor([[0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088],
        [0.0088, 0.0088]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7822e-05, 8.7023e-06],
        [2.2411e-05, 1.2934e-05],
        [1.8895e-05, 9.1195e-06],
        [1.1861e-05, 3.7551e-06],
        [3.0994e-06, 6.6519e-05],
        [9.5367e-07, 4.1068e-05],
        [8.3447e-07, 3.6776e-05],
        [1.4901e-06, 1.7881e-07],
        [1.5736e-05, 6.6757e-06],
        [2.9802e-07, 2.5868e-05],
        [2.7418e-06, 7.0214e-05],
        [4.9472e-06, 8.3208e-05],
        [5.1260e-06, 7.9453e-05],
        [1.8239e-05, 1.6868e-05],
        [1.1325e-06, 3.6180e-05],
        [1.9014e-05, 9.0599e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0804, 0.0435],
        [0.0774, 0.0452],
        [0.0806, 0.0434],
        [0.0878, 0.0398],
        [0.0429, 0.0814],
        [0.0420, 0.0832],
        [0.0420, 0.0833],
        [0.1003, 0.0349],
        [0.0829, 0.0422],
        [0.0415, 0.0842],
        [0.0426, 0.0820],
        [0.0434, 0.0805],
        [0.0436, 0.0801],
        [0.0691, 0.0506],
        [0.0423, 0.0826],
        [0.0809, 0.0432]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.339003
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-05, 1.5438e-05],
        [2.9504e-05, 1.4305e-05],
        [1.7881e-07, 1.5616e-05],
        [2.3842e-07, 1.6570e-05],
        [3.6955e-06, 5.9605e-07],
        [4.6313e-05, 2.1875e-05],
        [3.0398e-05, 2.3484e-05],
        [1.5795e-05, 6.9737e-06],
        [2.9802e-07, 1.1861e-05],
        [2.5630e-06, 6.2943e-05],
        [3.8564e-05, 4.7207e-05],
        [5.3644e-07, 3.3438e-05],
        [1.2934e-05, 4.7088e-06],
        [1.7405e-05, 1.0788e-05],
        [7.1526e-07, 2.9385e-05],
        [3.6478e-05, 2.0623e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0730, 0.0485],
        [0.0771, 0.0459],
        [0.0398, 0.0890],
        [0.0399, 0.0888],
        [0.0930, 0.0381],
        [0.0775, 0.0457],
        [0.0691, 0.0512],
        [0.0787, 0.0450],
        [0.0403, 0.0879],
        [0.0409, 0.0866],
        [0.0616, 0.0574],
        [0.0399, 0.0886],
        [0.0818, 0.0433],
        [0.0729, 0.0486],
        [0.0402, 0.0879],
        [0.0745, 0.0475]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.354906
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3048e-06, 8.2791e-05],
        [2.3842e-07, 2.2173e-05],
        [2.2471e-05, 6.6757e-06],
        [1.5497e-06, 5.0724e-05],
        [1.2517e-06, 5.6088e-05],
        [4.1425e-05, 1.2934e-05],
        [2.8849e-05, 1.4722e-05],
        [1.7703e-05, 1.9014e-05],
        [6.5565e-07, 2.5928e-05],
        [2.8789e-05, 1.5140e-05],
        [4.1723e-07, 1.2994e-05],
        [2.6226e-06, 4.9710e-05],
        [4.7684e-07, 2.4378e-05],
        [9.2983e-06, 6.4373e-06],
        [4.2915e-06, 8.8274e-05],
        [1.1325e-06, 4.0114e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0484, 0.0734],
        [0.0461, 0.0772],
        [0.0986, 0.0361],
        [0.0470, 0.0757],
        [0.0466, 0.0763],
        [0.0977, 0.0364],
        [0.0884, 0.0402],
        [0.0739, 0.0482],
        [0.0468, 0.0761],
        [0.0878, 0.0405],
        [0.0471, 0.0756],
        [0.0480, 0.0742],
        [0.0465, 0.0765],
        [0.0824, 0.0432],
        [0.0478, 0.0745],
        [0.0469, 0.0759]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.425671
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-05, 7.3314e-06],
        [1.4901e-06, 4.5300e-05],
        [2.1338e-05, 9.5367e-06],
        [2.8789e-05, 9.3579e-06],
        [2.3544e-05, 1.3709e-05],
        [2.4498e-05, 2.7716e-05],
        [1.7881e-07, 5.4240e-06],
        [1.7226e-05, 8.4639e-06],
        [9.0003e-06, 3.7551e-06],
        [8.9407e-07, 4.3631e-05],
        [8.9407e-06, 3.5167e-06],
        [8.8215e-06, 6.0976e-05],
        [5.3644e-07, 2.9325e-05],
        [1.9431e-05, 1.4305e-05],
        [1.3709e-06, 4.3631e-05],
        [2.5094e-05, 1.5914e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0785, 0.0455],
        [0.0404, 0.0883],
        [0.0782, 0.0456],
        [0.0833, 0.0428],
        [0.0737, 0.0484],
        [0.0626, 0.0570],
        [0.0404, 0.0882],
        [0.0766, 0.0466],
        [0.0793, 0.0450],
        [0.0400, 0.0893],
        [0.0803, 0.0444],
        [0.0445, 0.0803],
        [0.0399, 0.0895],
        [0.0697, 0.0512],
        [0.0404, 0.0884],
        [0.0722, 0.0494]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.539594
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2815e-05, 8.8215e-06],
        [1.8477e-06, 5.8591e-05],
        [1.7881e-06, 5.5969e-05],
        [7.1526e-07, 3.6657e-05],
        [1.3351e-05, 8.2254e-06],
        [2.3842e-07, 1.8895e-05],
        [2.0862e-06, 6.0141e-05],
        [1.0133e-06, 4.3571e-05],
        [1.8179e-05, 6.0201e-06],
        [3.1590e-06, 5.5671e-05],
        [1.4901e-05, 1.2696e-05],
        [1.5497e-06, 3.6359e-05],
        [2.5630e-06, 2.9802e-07],
        [7.3910e-06, 6.2823e-05],
        [2.1458e-06, 5.3525e-05],
        [5.9605e-07, 4.1127e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0846, 0.0420],
        [0.0483, 0.0737],
        [0.0483, 0.0737],
        [0.0477, 0.0745],
        [0.0869, 0.0409],
        [0.0474, 0.0750],
        [0.0484, 0.0735],
        [0.0479, 0.0743],
        [0.0992, 0.0358],
        [0.0494, 0.0720],
        [0.0803, 0.0443],
        [0.0488, 0.0729],
        [0.1147, 0.0310],
        [0.0520, 0.0684],
        [0.0487, 0.0731],
        [0.0475, 0.0749]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.355417
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-05, 2.9385e-05],
        [2.9981e-05, 1.2040e-05],
        [4.7684e-07, 2.3961e-05],
        [6.5565e-07, 2.3723e-05],
        [2.5511e-05, 1.4424e-05],
        [2.4676e-05, 1.0848e-05],
        [3.7074e-05, 2.3901e-05],
        [1.3232e-05, 1.0157e-04],
        [3.6657e-05, 3.4451e-05],
        [2.3246e-06, 6.1870e-05],
        [2.5094e-05, 1.7941e-05],
        [2.1398e-05, 1.5318e-05],
        [1.1325e-06, 1.7881e-07],
        [5.0664e-06, 6.7830e-05],
        [2.2769e-05, 1.8179e-05],
        [5.9605e-07, 3.2306e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0734, 0.0488],
        [0.0807, 0.0444],
        [0.0403, 0.0889],
        [0.0406, 0.0882],
        [0.0749, 0.0478],
        [0.0792, 0.0452],
        [0.0726, 0.0493],
        [0.0444, 0.0808],
        [0.0662, 0.0541],
        [0.0410, 0.0874],
        [0.0708, 0.0506],
        [0.0708, 0.0506],
        [0.0937, 0.0382],
        [0.0424, 0.0845],
        [0.0689, 0.0520],
        [0.0402, 0.0890]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.287489
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 2.7597e-05],
        [2.3365e-05, 8.2850e-06],
        [3.0398e-06, 4.7326e-05],
        [1.2457e-05, 5.5432e-06],
        [2.9027e-05, 5.6863e-05],
        [2.1696e-05, 9.1195e-06],
        [1.4961e-05, 6.0201e-06],
        [1.1921e-07, 1.4067e-05],
        [3.2365e-05, 1.2159e-05],
        [4.0472e-05, 1.1623e-05],
        [2.3782e-05, 7.2122e-05],
        [1.8060e-05, 1.3530e-05],
        [4.5896e-06, 6.0439e-05],
        [1.8477e-06, 4.4942e-05],
        [2.7418e-06, 5.9605e-07],
        [2.5034e-06, 5.9962e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0857],
        [0.0824, 0.0429],
        [0.0418, 0.0845],
        [0.0787, 0.0449],
        [0.0552, 0.0640],
        [0.0796, 0.0444],
        [0.0803, 0.0440],
        [0.0397, 0.0890],
        [0.0815, 0.0434],
        [0.0856, 0.0413],
        [0.0505, 0.0700],
        [0.0697, 0.0506],
        [0.0423, 0.0836],
        [0.0410, 0.0862],
        [0.0895, 0.0395],
        [0.0410, 0.0862]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.405382
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 4.5002e-05],
        [3.5763e-07, 3.9577e-05],
        [3.1948e-05, 1.7405e-05],
        [2.5809e-05, 1.7703e-05],
        [2.0266e-06, 6.4194e-05],
        [2.0087e-05, 9.0599e-06],
        [1.3113e-06, 4.4644e-05],
        [4.2915e-06, 5.8889e-05],
        [3.2663e-05, 1.4603e-05],
        [2.0027e-05, 1.1325e-05],
        [1.7643e-05, 6.6161e-06],
        [5.1260e-06, 6.3539e-05],
        [1.6272e-05, 1.4722e-05],
        [1.2755e-05, 4.3511e-06],
        [1.7285e-06, 5.3644e-07],
        [7.2122e-06, 9.3877e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0413, 0.0858],
        [0.0405, 0.0876],
        [0.0766, 0.0462],
        [0.0726, 0.0488],
        [0.0413, 0.0857],
        [0.0799, 0.0443],
        [0.0413, 0.0859],
        [0.0429, 0.0825],
        [0.0800, 0.0443],
        [0.0760, 0.0466],
        [0.0830, 0.0427],
        [0.0432, 0.0820],
        [0.0678, 0.0523],
        [0.0845, 0.0419],
        [0.0860, 0.0412],
        [0.0431, 0.0823]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.400610
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6703e-05, 9.5367e-06],
        [2.3246e-05, 1.2755e-05],
        [1.0729e-06, 4.6611e-05],
        [2.0266e-05, 9.0599e-06],
        [2.2054e-06, 4.5359e-05],
        [2.9802e-06, 7.3791e-05],
        [1.4007e-05, 8.8215e-06],
        [3.2783e-06, 6.0797e-05],
        [7.1526e-07, 3.4928e-05],
        [1.3769e-05, 9.4175e-06],
        [4.4703e-06, 7.7486e-05],
        [3.2604e-05, 4.2558e-05],
        [1.0133e-06, 1.6093e-05],
        [2.3842e-07, 2.2292e-05],
        [5.9605e-07, 3.9518e-05],
        [3.5644e-05, 1.5855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0928, 0.0385],
        [0.0847, 0.0422],
        [0.0454, 0.0786],
        [0.0886, 0.0403],
        [0.0465, 0.0768],
        [0.0462, 0.0774],
        [0.0820, 0.0435],
        [0.0467, 0.0764],
        [0.0453, 0.0788],
        [0.0804, 0.0444],
        [0.0469, 0.0761],
        [0.0685, 0.0521],
        [0.0471, 0.0758],
        [0.0449, 0.0796],
        [0.0451, 0.0792],
        [0.0887, 0.0403]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.354367
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8775e-05, 8.1062e-06],
        [4.3392e-05, 2.3425e-05],
        [3.2187e-06, 6.5565e-07],
        [1.8537e-05, 7.0333e-06],
        [1.3351e-05, 6.6757e-05],
        [3.0518e-05, 4.1366e-05],
        [1.8001e-05, 1.4126e-05],
        [3.6955e-06, 5.3525e-05],
        [1.7285e-06, 6.1512e-05],
        [1.8179e-05, 2.3723e-05],
        [7.1526e-07, 2.8133e-05],
        [4.7684e-06, 7.4685e-05],
        [8.9407e-07, 2.8372e-05],
        [1.7285e-06, 6.0380e-05],
        [3.2187e-05, 1.9193e-05],
        [2.9802e-07, 2.3901e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0859, 0.0416],
        [0.0818, 0.0437],
        [0.0980, 0.0365],
        [0.0882, 0.0405],
        [0.0505, 0.0708],
        [0.0653, 0.0547],
        [0.0748, 0.0478],
        [0.0456, 0.0784],
        [0.0439, 0.0814],
        [0.0659, 0.0542],
        [0.0438, 0.0816],
        [0.0454, 0.0788],
        [0.0440, 0.0812],
        [0.0439, 0.0814],
        [0.0799, 0.0447],
        [0.0432, 0.0826]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.429497
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7239e-05, 2.2054e-05],
        [3.1054e-05, 1.7822e-05],
        [1.6749e-05, 1.0014e-05],
        [4.1127e-05, 3.7432e-05],
        [1.1444e-05, 7.2122e-06],
        [7.6294e-06, 9.2089e-05],
        [2.2650e-06, 1.0133e-06],
        [1.9372e-05, 5.3048e-06],
        [2.9206e-06, 5.2750e-05],
        [4.1723e-07, 2.8372e-05],
        [3.1650e-05, 6.6042e-05],
        [8.9407e-07, 4.2081e-05],
        [1.7285e-06, 4.5061e-05],
        [2.6226e-06, 5.7638e-05],
        [7.1526e-07, 3.9935e-05],
        [1.3947e-05, 1.0908e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0736, 0.0489],
        [0.0799, 0.0450],
        [0.0792, 0.0454],
        [0.0715, 0.0503],
        [0.0782, 0.0460],
        [0.0457, 0.0787],
        [0.0845, 0.0426],
        [0.0928, 0.0388],
        [0.0446, 0.0806],
        [0.0430, 0.0837],
        [0.0585, 0.0615],
        [0.0432, 0.0832],
        [0.0439, 0.0819],
        [0.0442, 0.0814],
        [0.0431, 0.0835],
        [0.0742, 0.0485]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.480968
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0192e-05, 8.3804e-05],
        [5.8413e-06, 6.7651e-05],
        [1.7285e-06, 1.7881e-07],
        [2.3246e-06, 5.1737e-05],
        [9.5367e-07, 6.5625e-05],
        [1.1325e-06, 5.3406e-05],
        [3.0160e-05, 1.9312e-05],
        [3.1531e-05, 1.8239e-05],
        [1.9073e-05, 9.6560e-06],
        [1.6630e-05, 7.7486e-06],
        [3.0518e-05, 1.3530e-05],
        [2.8193e-05, 1.4842e-05],
        [1.1623e-05, 4.6492e-06],
        [1.9491e-05, 2.0564e-05],
        [1.1921e-06, 3.4571e-05],
        [1.1325e-06, 3.0637e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0445, 0.0794],
        [0.0432, 0.0817],
        [0.0988, 0.0358],
        [0.0417, 0.0848],
        [0.0405, 0.0872],
        [0.0407, 0.0867],
        [0.0734, 0.0481],
        [0.0752, 0.0470],
        [0.0775, 0.0456],
        [0.0789, 0.0447],
        [0.0798, 0.0443],
        [0.0768, 0.0460],
        [0.0815, 0.0433],
        [0.0649, 0.0544],
        [0.0413, 0.0856],
        [0.0414, 0.0854]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.443720
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[8.7619e-06, 4.5300e-06],
        [3.5763e-07, 3.5584e-05],
        [2.3842e-07, 2.0504e-05],
        [2.1458e-06, 5.0962e-05],
        [1.7881e-07, 6.6161e-06],
        [2.2829e-05, 1.2159e-05],
        [1.7881e-07, 1.5676e-05],
        [1.4901e-06, 5.9664e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1937, 0.0748],
        [0.1012, 0.1432],
        [0.1014, 0.1429],
        [0.1043, 0.1389],
        [0.1029, 0.1408],
        [0.1924, 0.0753],
        [0.1013, 0.1430],
        [0.1027, 0.1411]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.215411
acc:  0.96
Time taken to execute the en SA task with prompt type auxiliary, variation 4 and batchsize 16: 0:00:05.052787
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06]], device='cuda:0') torch.Size([109, 2])
answers_probs just softmax dim 0: tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 1.1921e-07],
        [1.5378e-05, 6.7353e-06],
        [1.7881e-07, 1.8179e-05],
        [2.4378e-05, 1.7583e-05],
        [5.9605e-07, 2.2411e-05],
        [1.1921e-06, 3.9220e-05],
        [3.5763e-07, 2.3663e-05],
        [4.7684e-07, 1.8716e-05],
        [1.4305e-06, 3.9697e-05],
        [1.0252e-05, 4.2915e-06],
        [1.3709e-06, 3.6895e-05],
        [2.5630e-06, 4.5300e-05],
        [7.7486e-07, 4.1604e-05],
        [1.4186e-05, 5.0664e-06],
        [2.4319e-05, 1.4961e-05],
        [1.1384e-05, 1.0490e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1078, 0.0325],
        [0.0864, 0.0405],
        [0.0435, 0.0804],
        [0.0771, 0.0454],
        [0.0442, 0.0791],
        [0.0444, 0.0788],
        [0.0438, 0.0800],
        [0.0442, 0.0792],
        [0.0446, 0.0784],
        [0.0872, 0.0401],
        [0.0447, 0.0783],
        [0.0455, 0.0769],
        [0.0439, 0.0797],
        [0.0901, 0.0388],
        [0.0801, 0.0437],
        [0.0725, 0.0482]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.407864
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3975e-06, 6.6400e-05],
        [1.2159e-05, 5.7220e-06],
        [4.7684e-07, 2.1875e-05],
        [3.0935e-05, 1.5438e-05],
        [6.5565e-07, 3.0160e-05],
        [2.0444e-05, 1.2875e-05],
        [1.8954e-05, 1.3888e-05],
        [1.3113e-06, 3.7193e-05],
        [4.5896e-06, 7.8499e-05],
        [6.3181e-06, 3.7551e-06],
        [4.2260e-05, 3.1650e-05],
        [1.0490e-05, 3.9935e-06],
        [2.8610e-06, 5.3644e-07],
        [2.6703e-05, 1.8358e-05],
        [1.6928e-05, 9.1791e-06],
        [9.2387e-06, 5.4836e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0398, 0.0901],
        [0.0749, 0.0479],
        [0.0388, 0.0926],
        [0.0739, 0.0486],
        [0.0388, 0.0926],
        [0.0701, 0.0512],
        [0.0676, 0.0531],
        [0.0393, 0.0914],
        [0.0401, 0.0895],
        [0.0710, 0.0505],
        [0.0672, 0.0534],
        [0.0783, 0.0459],
        [0.0881, 0.0408],
        [0.0686, 0.0523],
        [0.0726, 0.0495],
        [0.0711, 0.0505]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.419913
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6987e-05, 7.7486e-06],
        [9.0003e-06, 7.6294e-06],
        [9.5367e-07, 3.4750e-05],
        [3.2663e-05, 1.7762e-05],
        [1.0729e-06, 3.2961e-05],
        [8.3447e-07, 2.4736e-05],
        [1.5199e-05, 6.1989e-06],
        [2.1696e-05, 6.3241e-05],
        [6.9737e-06, 3.8147e-06],
        [1.5497e-05, 1.4663e-05],
        [1.0192e-05, 6.8545e-06],
        [1.2517e-05, 1.3769e-05],
        [3.3379e-06, 6.2048e-05],
        [2.6822e-06, 8.3447e-07],
        [2.6464e-05, 2.9266e-05],
        [1.3709e-05, 1.3888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0780, 0.0469],
        [0.0674, 0.0543],
        [0.0403, 0.0908],
        [0.0750, 0.0488],
        [0.0405, 0.0903],
        [0.0405, 0.0902],
        [0.0798, 0.0458],
        [0.0506, 0.0722],
        [0.0749, 0.0488],
        [0.0656, 0.0558],
        [0.0713, 0.0513],
        [0.0632, 0.0579],
        [0.0413, 0.0886],
        [0.0841, 0.0435],
        [0.0631, 0.0580],
        [0.0645, 0.0567]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.476341
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 3.3736e-05],
        [5.9605e-07, 3.3379e-05],
        [3.8743e-06, 6.6340e-05],
        [1.3173e-05, 8.5235e-06],
        [9.1791e-06, 5.9605e-06],
        [2.0266e-05, 1.0252e-05],
        [2.3186e-05, 1.1027e-05],
        [1.6689e-06, 4.9710e-05],
        [2.3842e-07, 1.7822e-05],
        [3.8147e-06, 5.5432e-05],
        [9.8944e-06, 6.1989e-06],
        [1.3709e-06, 1.7881e-07],
        [1.1921e-06, 2.5630e-05],
        [1.4365e-05, 6.2585e-06],
        [8.5235e-06, 5.5850e-05],
        [1.1683e-05, 9.2387e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0422, 0.0839],
        [0.0424, 0.0834],
        [0.0440, 0.0803],
        [0.0765, 0.0463],
        [0.0764, 0.0463],
        [0.0810, 0.0437],
        [0.0821, 0.0431],
        [0.0431, 0.0822],
        [0.0422, 0.0838],
        [0.0444, 0.0796],
        [0.0771, 0.0459],
        [0.1009, 0.0351],
        [0.0436, 0.0812],
        [0.0836, 0.0423],
        [0.0476, 0.0744],
        [0.0728, 0.0486]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.359860
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 2.1875e-05],
        [2.5034e-06, 4.1544e-05],
        [2.0385e-05, 1.3292e-05],
        [2.1398e-05, 4.6730e-05],
        [4.7684e-07, 2.3901e-05],
        [6.5565e-07, 3.3617e-05],
        [2.9802e-07, 6.9141e-06],
        [1.3053e-05, 7.2718e-06],
        [1.8835e-05, 1.1981e-05],
        [1.1444e-05, 6.4373e-06],
        [5.9605e-07, 2.3723e-05],
        [1.8477e-06, 3.6299e-05],
        [4.7684e-07, 2.0683e-05],
        [1.8835e-05, 1.4007e-05],
        [1.7881e-06, 4.2617e-05],
        [1.3113e-06, 5.0187e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0748],
        [0.0506, 0.0720],
        [0.0875, 0.0416],
        [0.0654, 0.0557],
        [0.0487, 0.0747],
        [0.0487, 0.0747],
        [0.0498, 0.0731],
        [0.0908, 0.0401],
        [0.0880, 0.0413],
        [0.0906, 0.0402],
        [0.0489, 0.0743],
        [0.0501, 0.0726],
        [0.0488, 0.0745],
        [0.0847, 0.0429],
        [0.0497, 0.0732],
        [0.0490, 0.0743]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.314121
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3411e-05, 7.3910e-06],
        [3.5763e-07, 2.4199e-05],
        [1.9610e-05, 1.5855e-05],
        [3.0398e-06, 5.1737e-05],
        [2.7120e-05, 1.3292e-05],
        [7.6890e-06, 6.9737e-05],
        [1.8477e-06, 5.7340e-05],
        [2.1875e-05, 1.6630e-05],
        [2.5630e-06, 5.6922e-05],
        [2.8908e-05, 2.1636e-05],
        [1.3411e-05, 8.1062e-06],
        [8.9407e-07, 4.3690e-05],
        [2.8729e-05, 2.0564e-05],
        [9.5367e-07, 1.6630e-05],
        [4.7684e-07, 2.2411e-05],
        [1.3888e-05, 2.1994e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0843, 0.0431],
        [0.0449, 0.0809],
        [0.0769, 0.0472],
        [0.0467, 0.0776],
        [0.0865, 0.0419],
        [0.0488, 0.0743],
        [0.0456, 0.0795],
        [0.0780, 0.0465],
        [0.0462, 0.0786],
        [0.0783, 0.0463],
        [0.0825, 0.0440],
        [0.0451, 0.0804],
        [0.0792, 0.0458],
        [0.0467, 0.0777],
        [0.0452, 0.0804],
        [0.0651, 0.0557]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.359204
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.9147e-05],
        [2.0266e-06, 5.3585e-05],
        [1.3113e-06, 3.3140e-05],
        [3.2187e-05, 1.3828e-05],
        [4.2319e-06, 6.9261e-05],
        [8.3447e-07, 6.3658e-05],
        [1.7285e-06, 3.8922e-05],
        [1.7881e-06, 3.7670e-05],
        [1.7941e-05, 2.2650e-05],
        [2.7776e-05, 1.6093e-05],
        [2.0862e-06, 2.9802e-07],
        [1.7107e-05, 6.2585e-06],
        [3.3736e-05, 4.6134e-05],
        [8.6427e-06, 5.6624e-06],
        [3.0398e-06, 4.6790e-05],
        [1.7881e-07, 1.7524e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0446, 0.0796],
        [0.0459, 0.0774],
        [0.0460, 0.0772],
        [0.0890, 0.0399],
        [0.0469, 0.0757],
        [0.0448, 0.0792],
        [0.0462, 0.0769],
        [0.0463, 0.0767],
        [0.0688, 0.0516],
        [0.0833, 0.0426],
        [0.1061, 0.0334],
        [0.0920, 0.0386],
        [0.0675, 0.0526],
        [0.0809, 0.0438],
        [0.0470, 0.0755],
        [0.0447, 0.0794]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.407256
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9848e-05, 8.8215e-06],
        [3.1710e-05, 3.7074e-05],
        [1.5497e-06, 4.1008e-05],
        [1.4067e-05, 6.7353e-06],
        [1.0133e-06, 3.6001e-05],
        [2.3842e-07, 5.5432e-06],
        [1.4544e-05, 8.0466e-06],
        [6.5565e-07, 3.3438e-05],
        [1.7881e-07, 1.8239e-05],
        [1.1086e-05, 4.2915e-06],
        [1.0133e-06, 5.1081e-05],
        [1.6630e-05, 8.4043e-06],
        [7.3314e-06, 4.9829e-05],
        [1.1444e-05, 6.7353e-06],
        [7.6294e-06, 2.8014e-06],
        [5.9605e-07, 4.1783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0843, 0.0421],
        [0.0669, 0.0530],
        [0.0437, 0.0811],
        [0.0829, 0.0428],
        [0.0433, 0.0818],
        [0.0439, 0.0807],
        [0.0803, 0.0442],
        [0.0430, 0.0825],
        [0.0426, 0.0833],
        [0.0867, 0.0409],
        [0.0430, 0.0825],
        [0.0819, 0.0433],
        [0.0479, 0.0740],
        [0.0791, 0.0448],
        [0.0876, 0.0405],
        [0.0428, 0.0829]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.566774
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3007e-05, 2.3007e-05],
        [1.7881e-06, 4.7505e-05],
        [1.7285e-05, 1.0490e-05],
        [1.6093e-05, 9.4771e-06],
        [2.3067e-05, 1.2934e-05],
        [4.2319e-06, 8.6367e-05],
        [2.0027e-05, 1.5140e-05],
        [1.5974e-05, 8.4639e-06],
        [2.3842e-07, 2.0862e-05],
        [3.3379e-06, 5.5194e-05],
        [6.1393e-06, 5.1916e-05],
        [1.9670e-06, 1.7881e-07],
        [9.5367e-06, 3.9339e-06],
        [2.8074e-05, 2.1875e-05],
        [1.7881e-07, 1.6093e-05],
        [9.2387e-06, 3.9935e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0645, 0.0552],
        [0.0406, 0.0878],
        [0.0729, 0.0488],
        [0.0734, 0.0485],
        [0.0743, 0.0479],
        [0.0410, 0.0868],
        [0.0692, 0.0515],
        [0.0753, 0.0473],
        [0.0396, 0.0900],
        [0.0414, 0.0859],
        [0.0435, 0.0819],
        [0.0979, 0.0364],
        [0.0795, 0.0448],
        [0.0687, 0.0519],
        [0.0396, 0.0900],
        [0.0787, 0.0453]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.447732
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9670e-06, 4.7684e-07],
        [7.7486e-07, 3.2842e-05],
        [1.8775e-05, 1.6570e-05],
        [2.1100e-05, 1.3828e-05],
        [1.1921e-07, 1.2517e-05],
        [5.7220e-06, 7.9095e-05],
        [1.7285e-05, 5.0068e-06],
        [2.2054e-06, 4.0770e-05],
        [2.3842e-07, 2.4080e-05],
        [2.6405e-05, 3.8981e-05],
        [1.3769e-05, 1.1981e-05],
        [1.4663e-05, 6.7949e-06],
        [5.6624e-06, 8.7976e-05],
        [1.3113e-06, 4.7147e-05],
        [2.1756e-05, 1.9610e-05],
        [2.9683e-05, 1.6928e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0933, 0.0383],
        [0.0427, 0.0837],
        [0.0710, 0.0503],
        [0.0764, 0.0468],
        [0.0421, 0.0848],
        [0.0446, 0.0800],
        [0.0906, 0.0394],
        [0.0439, 0.0813],
        [0.0421, 0.0848],
        [0.0625, 0.0572],
        [0.0712, 0.0502],
        [0.0827, 0.0432],
        [0.0443, 0.0806],
        [0.0429, 0.0833],
        [0.0706, 0.0506],
        [0.0789, 0.0453]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.405361
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8610e-06, 6.8188e-05],
        [1.5676e-05, 8.9407e-06],
        [8.9407e-07, 3.3975e-05],
        [0.0000e+00, 1.9670e-06],
        [2.3842e-07, 9.2387e-06],
        [2.1815e-05, 1.3351e-05],
        [2.3484e-05, 1.2577e-05],
        [1.4484e-05, 9.3579e-06],
        [1.2815e-05, 1.2338e-05],
        [9.9540e-06, 8.1241e-05],
        [2.1875e-05, 9.5367e-06],
        [3.1173e-05, 1.4365e-05],
        [1.4842e-05, 9.6560e-06],
        [2.1458e-06, 6.0916e-05],
        [2.4915e-05, 6.0201e-05],
        [1.5497e-06, 4.9174e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0441, 0.0816],
        [0.0801, 0.0449],
        [0.0435, 0.0828],
        [0.0424, 0.0850],
        [0.0434, 0.0828],
        [0.0788, 0.0457],
        [0.0813, 0.0443],
        [0.0778, 0.0463],
        [0.0705, 0.0510],
        [0.0473, 0.0762],
        [0.0850, 0.0423],
        [0.0840, 0.0428],
        [0.0776, 0.0464],
        [0.0438, 0.0821],
        [0.0568, 0.0634],
        [0.0437, 0.0824]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.334303
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0266e-06, 6.1154e-05],
        [1.5974e-05, 1.7822e-05],
        [1.3709e-06, 5.1558e-05],
        [2.0802e-05, 9.2983e-06],
        [5.3644e-07, 3.2187e-05],
        [5.9605e-07, 3.4392e-05],
        [1.8895e-05, 1.8060e-05],
        [1.3113e-05, 7.5698e-06],
        [5.9605e-08, 4.8876e-06],
        [2.9802e-07, 3.3677e-05],
        [2.3603e-05, 4.2081e-05],
        [1.1921e-07, 1.3232e-05],
        [8.3447e-07, 2.9266e-05],
        [8.3447e-07, 3.3379e-05],
        [1.0133e-06, 4.0591e-05],
        [3.8743e-06, 5.8591e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0520, 0.0707],
        [0.0808, 0.0455],
        [0.0517, 0.0711],
        [0.1006, 0.0366],
        [0.0512, 0.0718],
        [0.0512, 0.0718],
        [0.0840, 0.0438],
        [0.0950, 0.0387],
        [0.0510, 0.0721],
        [0.0508, 0.0724],
        [0.0722, 0.0510],
        [0.0508, 0.0724],
        [0.0518, 0.0710],
        [0.0516, 0.0712],
        [0.0516, 0.0713],
        [0.0536, 0.0686]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.308843
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[8.5235e-06, 3.5763e-06],
        [1.3411e-05, 1.6809e-05],
        [9.5367e-07, 5.1379e-05],
        [1.4901e-06, 4.9353e-05],
        [7.7486e-07, 3.3617e-05],
        [4.7684e-07, 3.1769e-05],
        [1.2517e-06, 4.9233e-05],
        [3.2783e-06, 5.3644e-07]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1830, 0.0766],
        [0.1410, 0.0995],
        [0.0921, 0.1522],
        [0.0932, 0.1505],
        [0.0925, 0.1516],
        [0.0918, 0.1527],
        [0.0927, 0.1512],
        [0.2137, 0.0656]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.228534
acc:  0.965
Time taken to execute the en SA task with prompt type auxiliary, variation 5 and batchsize 16: 0:00:05.057204
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06],
        [7.3910e-06, 6.9141e-06]], device='cuda:0') torch.Size([150, 2])
answers_probs just softmax dim 0: tensor([[0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067]], device='cuda:0')
tensor([[0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067],
        [0.0067, 0.0067]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 3.4630e-05],
        [7.5102e-06, 7.0751e-05],
        [3.3975e-06, 4.0710e-05],
        [3.3975e-06, 4.1306e-05],
        [1.7881e-07, 1.6689e-05],
        [2.2650e-06, 3.5882e-05],
        [1.3590e-05, 1.8120e-05],
        [1.2159e-05, 4.5300e-06],
        [1.8597e-05, 1.3828e-05],
        [4.7684e-07, 2.2471e-05],
        [4.2915e-06, 7.1526e-07],
        [1.3709e-06, 3.5584e-05],
        [9.5367e-07, 3.1531e-05],
        [2.2650e-06, 3.8803e-05],
        [1.3113e-06, 4.5359e-05],
        [1.4901e-06, 3.7253e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0501, 0.0723],
        [0.0542, 0.0668],
        [0.0532, 0.0681],
        [0.0532, 0.0682],
        [0.0498, 0.0728],
        [0.0523, 0.0693],
        [0.0756, 0.0479],
        [0.1021, 0.0355],
        [0.0874, 0.0415],
        [0.0503, 0.0721],
        [0.1161, 0.0312],
        [0.0511, 0.0709],
        [0.0507, 0.0714],
        [0.0521, 0.0696],
        [0.0507, 0.0715],
        [0.0512, 0.0708]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.457242
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0802e-05, 4.4703e-06],
        [2.2650e-06, 4.3452e-05],
        [2.7776e-05, 8.7619e-06],
        [2.0921e-05, 5.9009e-06],
        [1.3411e-05, 2.9206e-06],
        [4.5896e-06, 5.9605e-07],
        [1.5259e-05, 4.2319e-06],
        [1.5855e-05, 4.3392e-05],
        [3.1590e-06, 6.2227e-05],
        [5.9605e-07, 2.4974e-05],
        [1.3769e-05, 5.9605e-06],
        [1.1921e-07, 1.1265e-05],
        [1.6570e-05, 9.8348e-06],
        [8.5831e-06, 4.4644e-05],
        [1.6987e-05, 9.7752e-06],
        [2.6226e-06, 4.4405e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0846, 0.0412],
        [0.0390, 0.0892],
        [0.0794, 0.0438],
        [0.0810, 0.0430],
        [0.0844, 0.0412],
        [0.0900, 0.0387],
        [0.0813, 0.0428],
        [0.0485, 0.0717],
        [0.0390, 0.0893],
        [0.0380, 0.0916],
        [0.0746, 0.0466],
        [0.0375, 0.0927],
        [0.0696, 0.0500],
        [0.0436, 0.0798],
        [0.0701, 0.0497],
        [0.0393, 0.0886]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.478511
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.5809e-05],
        [1.7285e-06, 4.3154e-05],
        [1.3053e-05, 1.0252e-05],
        [1.1921e-07, 1.3769e-05],
        [2.0325e-05, 8.8811e-06],
        [1.0908e-05, 5.5432e-06],
        [1.7285e-06, 3.7551e-05],
        [3.2783e-06, 3.9935e-05],
        [6.9737e-06, 4.2558e-05],
        [2.3603e-05, 1.6510e-05],
        [2.1636e-05, 7.2122e-06],
        [2.4438e-06, 4.8459e-05],
        [1.0610e-05, 3.1590e-06],
        [3.5763e-07, 6.6161e-06],
        [2.2292e-05, 1.0788e-05],
        [1.9073e-06, 3.5107e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0439, 0.0808],
        [0.0447, 0.0794],
        [0.0754, 0.0471],
        [0.0434, 0.0818],
        [0.0863, 0.0411],
        [0.0835, 0.0425],
        [0.0450, 0.0789],
        [0.0464, 0.0765],
        [0.0495, 0.0716],
        [0.0775, 0.0458],
        [0.0911, 0.0390],
        [0.0452, 0.0786],
        [0.0930, 0.0382],
        [0.0453, 0.0784],
        [0.0844, 0.0420],
        [0.0453, 0.0783]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.408153
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8477e-06, 4.2319e-05],
        [3.2187e-06, 4.5896e-05],
        [2.4438e-05, 2.7895e-05],
        [3.3438e-05, 3.0220e-05],
        [1.1563e-05, 3.1590e-06],
        [2.5809e-05, 1.0729e-05],
        [1.1683e-05, 7.2122e-06],
        [2.0146e-05, 9.9540e-06],
        [2.1577e-05, 7.6890e-06],
        [1.1683e-05, 4.7684e-06],
        [3.6955e-06, 4.1723e-07],
        [2.2769e-05, 7.3314e-06],
        [8.3447e-07, 2.6643e-05],
        [1.1921e-05, 9.0599e-06],
        [1.9670e-06, 3.3319e-05],
        [1.3888e-05, 3.5763e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0370, 0.0969],
        [0.0379, 0.0947],
        [0.0566, 0.0634],
        [0.0600, 0.0598],
        [0.0778, 0.0461],
        [0.0719, 0.0499],
        [0.0658, 0.0545],
        [0.0692, 0.0518],
        [0.0741, 0.0484],
        [0.0721, 0.0497],
        [0.0871, 0.0411],
        [0.0755, 0.0474],
        [0.0365, 0.0980],
        [0.0626, 0.0573],
        [0.0375, 0.0956],
        [0.0785, 0.0456]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.444447
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-06, 6.5565e-07],
        [1.3828e-05, 7.5698e-06],
        [1.4305e-06, 4.0412e-05],
        [8.1658e-06, 4.4703e-06],
        [1.3351e-05, 4.1127e-06],
        [1.1265e-05, 3.9935e-06],
        [1.0490e-05, 2.1458e-06],
        [1.4305e-05, 5.9605e-06],
        [1.8477e-05, 6.3777e-06],
        [1.7881e-07, 1.2338e-05],
        [6.5565e-07, 2.4557e-05],
        [1.0848e-05, 4.1127e-06],
        [3.0637e-05, 1.1504e-05],
        [9.2387e-06, 3.8147e-06],
        [2.4617e-05, 2.0742e-05],
        [2.8789e-05, 1.9491e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0821, 0.0440],
        [0.0643, 0.0562],
        [0.0349, 0.1036],
        [0.0643, 0.0562],
        [0.0723, 0.0499],
        [0.0705, 0.0512],
        [0.0773, 0.0467],
        [0.0682, 0.0529],
        [0.0708, 0.0510],
        [0.0342, 0.1057],
        [0.0346, 0.1045],
        [0.0695, 0.0519],
        [0.0697, 0.0518],
        [0.0683, 0.0528],
        [0.0580, 0.0623],
        [0.0611, 0.0591]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.402967
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 2.7657e-05],
        [1.6034e-05, 4.6492e-06],
        [1.9610e-05, 5.3048e-06],
        [1.6212e-05, 4.5300e-06],
        [4.7684e-07, 2.7299e-05],
        [1.6928e-05, 7.6890e-06],
        [1.0133e-06, 3.7253e-05],
        [2.5034e-06, 4.7147e-05],
        [3.0398e-06, 6.5923e-05],
        [1.6093e-06, 4.0889e-05],
        [5.3644e-07, 3.4750e-05],
        [2.9206e-06, 4.8280e-05],
        [2.8610e-06, 2.9802e-07],
        [1.2517e-05, 4.5896e-06],
        [8.0466e-06, 5.7995e-05],
        [6.5565e-07, 2.9504e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0449, 0.0768],
        [0.0922, 0.0374],
        [0.0933, 0.0369],
        [0.0928, 0.0371],
        [0.0432, 0.0797],
        [0.0844, 0.0408],
        [0.0436, 0.0790],
        [0.0446, 0.0771],
        [0.0444, 0.0776],
        [0.0441, 0.0781],
        [0.0431, 0.0799],
        [0.0449, 0.0766],
        [0.1050, 0.0328],
        [0.0882, 0.0390],
        [0.0480, 0.0718],
        [0.0434, 0.0794]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.427935
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0623e-05, 1.2398e-05],
        [5.9605e-07, 2.5094e-05],
        [9.5367e-07, 5.2631e-05],
        [8.9407e-07, 3.6955e-05],
        [9.3579e-06, 5.6922e-05],
        [4.5300e-06, 5.1618e-05],
        [1.1146e-05, 3.3975e-06],
        [1.9073e-06, 3.0041e-05],
        [9.5367e-07, 4.0233e-05],
        [2.1875e-05, 8.5831e-06],
        [7.1526e-07, 2.6524e-05],
        [2.3544e-05, 9.3579e-06],
        [5.3644e-07, 2.1577e-05],
        [4.7684e-07, 8.5235e-06],
        [3.3736e-05, 1.6451e-05],
        [5.1260e-06, 7.1704e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0863, 0.0413],
        [0.0473, 0.0753],
        [0.0471, 0.0758],
        [0.0473, 0.0753],
        [0.0532, 0.0670],
        [0.0501, 0.0711],
        [0.0995, 0.0358],
        [0.0491, 0.0726],
        [0.0473, 0.0754],
        [0.0948, 0.0376],
        [0.0475, 0.0751],
        [0.0945, 0.0377],
        [0.0474, 0.0753],
        [0.0487, 0.0731],
        [0.0905, 0.0394],
        [0.0494, 0.0721]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.405301
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 1.9014e-05],
        [2.3842e-07, 2.3246e-05],
        [3.6478e-05, 2.1458e-05],
        [1.9312e-05, 7.8082e-06],
        [1.3292e-05, 4.2915e-06],
        [1.0729e-05, 9.1791e-06],
        [7.7486e-07, 2.1935e-05],
        [2.6286e-05, 9.6560e-06],
        [1.1504e-05, 4.2319e-06],
        [4.2319e-06, 1.1921e-06],
        [1.3411e-05, 4.9472e-06],
        [1.6093e-06, 3.9101e-05],
        [4.7684e-07, 2.3484e-05],
        [2.3961e-05, 1.3649e-05],
        [1.6689e-05, 6.0797e-06],
        [1.9312e-05, 2.7895e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0382, 0.0930],
        [0.0377, 0.0940],
        [0.0701, 0.0506],
        [0.0761, 0.0466],
        [0.0795, 0.0446],
        [0.0640, 0.0554],
        [0.0386, 0.0918],
        [0.0776, 0.0457],
        [0.0776, 0.0457],
        [0.0815, 0.0435],
        [0.0775, 0.0457],
        [0.0389, 0.0913],
        [0.0381, 0.0931],
        [0.0706, 0.0502],
        [0.0777, 0.0456],
        [0.0562, 0.0631]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.430491
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3530e-05, 5.7220e-06],
        [1.9789e-05, 6.2585e-06],
        [2.1338e-05, 1.4782e-05],
        [3.2187e-06, 3.1292e-05],
        [1.3888e-05, 4.0531e-06],
        [1.1027e-05, 4.3511e-06],
        [1.7881e-07, 1.3530e-05],
        [2.3246e-06, 4.8220e-05],
        [1.1921e-07, 5.3644e-06],
        [1.1325e-06, 3.7074e-05],
        [1.6153e-05, 5.2452e-06],
        [1.0133e-06, 3.1054e-05],
        [3.6359e-06, 5.9545e-05],
        [2.7418e-06, 4.7147e-05],
        [1.2934e-05, 9.0003e-06],
        [5.3644e-07, 2.2888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0860, 0.0408],
        [0.0910, 0.0386],
        [0.0769, 0.0457],
        [0.0467, 0.0751],
        [0.0923, 0.0380],
        [0.0872, 0.0402],
        [0.0431, 0.0814],
        [0.0446, 0.0787],
        [0.0435, 0.0807],
        [0.0438, 0.0800],
        [0.0906, 0.0388],
        [0.0439, 0.0799],
        [0.0451, 0.0778],
        [0.0450, 0.0780],
        [0.0768, 0.0457],
        [0.0436, 0.0806]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.335794
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6212e-05, 1.2398e-05],
        [2.9802e-07, 1.8060e-05],
        [1.8060e-05, 6.5565e-06],
        [4.1127e-06, 5.7399e-05],
        [4.7684e-07, 2.1219e-05],
        [1.3113e-05, 5.4419e-05],
        [1.6093e-06, 4.6968e-05],
        [9.7156e-06, 2.5630e-06],
        [1.0729e-06, 3.2067e-05],
        [4.7684e-07, 2.1875e-05],
        [7.7486e-07, 2.3544e-05],
        [5.9605e-07, 2.6762e-05],
        [2.3842e-07, 1.5616e-05],
        [5.3644e-07, 1.3590e-05],
        [2.4736e-05, 2.1815e-05],
        [4.1723e-07, 3.2783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0869, 0.0417],
        [0.0501, 0.0723],
        [0.1027, 0.0353],
        [0.0527, 0.0687],
        [0.0504, 0.0719],
        [0.0599, 0.0605],
        [0.0510, 0.0711],
        [0.1088, 0.0333],
        [0.0509, 0.0712],
        [0.0504, 0.0719],
        [0.0509, 0.0712],
        [0.0504, 0.0719],
        [0.0500, 0.0724],
        [0.0512, 0.0708],
        [0.0839, 0.0432],
        [0.0499, 0.0726]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.452472
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 3.9220e-05],
        [1.8358e-05, 1.0490e-05],
        [1.3471e-05, 9.5963e-06],
        [1.9252e-05, 9.2387e-06],
        [2.1994e-05, 4.5121e-05],
        [1.1325e-06, 3.4332e-05],
        [2.8431e-05, 2.4319e-05],
        [1.4544e-05, 6.0201e-06],
        [2.2113e-05, 1.0133e-05],
        [1.3709e-06, 3.5942e-05],
        [2.0862e-06, 4.0770e-05],
        [1.2279e-05, 7.8678e-06],
        [9.0003e-06, 3.9339e-06],
        [4.1723e-06, 5.8889e-05],
        [2.3842e-06, 3.1471e-05],
        [5.3644e-07, 9.1195e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0431, 0.0834],
        [0.0789, 0.0456],
        [0.0748, 0.0481],
        [0.0820, 0.0438],
        [0.0579, 0.0621],
        [0.0431, 0.0835],
        [0.0715, 0.0503],
        [0.0847, 0.0425],
        [0.0829, 0.0434],
        [0.0433, 0.0831],
        [0.0438, 0.0821],
        [0.0768, 0.0468],
        [0.0837, 0.0430],
        [0.0446, 0.0806],
        [0.0448, 0.0803],
        [0.0441, 0.0815]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.594549
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-05, 4.4703e-06],
        [1.1921e-06, 3.4988e-05],
        [2.5153e-05, 4.7445e-05],
        [1.1146e-05, 4.2319e-06],
        [3.7551e-06, 5.6803e-05],
        [3.1054e-05, 1.0848e-05],
        [1.3292e-05, 1.0192e-05],
        [4.1723e-07, 2.7359e-05],
        [1.3590e-05, 5.6028e-06],
        [1.6630e-05, 9.1791e-06],
        [2.5034e-06, 5.8949e-05],
        [2.0862e-06, 4.7624e-05],
        [4.1723e-07, 2.2471e-05],
        [4.1723e-07, 1.2636e-05],
        [3.5763e-06, 2.9802e-07],
        [1.7107e-05, 6.7949e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0837, 0.0417],
        [0.0410, 0.0851],
        [0.0561, 0.0622],
        [0.0819, 0.0426],
        [0.0422, 0.0826],
        [0.0833, 0.0419],
        [0.0699, 0.0499],
        [0.0403, 0.0866],
        [0.0806, 0.0433],
        [0.0756, 0.0462],
        [0.0413, 0.0844],
        [0.0414, 0.0843],
        [0.0404, 0.0863],
        [0.0410, 0.0851],
        [0.0999, 0.0349],
        [0.0812, 0.0430]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.491356
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.7881e-07, 1.7166e-05],
        [2.3842e-07, 2.1100e-05],
        [2.3127e-05, 1.0908e-05],
        [4.1723e-06, 4.1723e-07],
        [1.4544e-05, 4.5896e-06],
        [1.1802e-05, 4.5300e-06],
        [2.6703e-05, 1.3113e-05],
        [6.3777e-06, 2.0266e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0684, 0.2053],
        [0.0685, 0.2051],
        [0.1336, 0.1051],
        [0.1681, 0.0836],
        [0.1448, 0.0970],
        [0.1395, 0.1007],
        [0.1324, 0.1061],
        [0.1446, 0.0971]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.229786
acc:  0.955
Time taken to execute the en SA task with prompt type auxiliary, variation 6 and batchsize 16: 0:00:05.579794
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_6']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06]], device='cuda:0') torch.Size([124, 2])
answers_probs just softmax dim 0: tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 7 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-08, 1.1563e-05],
        [1.6689e-06, 3.6895e-05],
        [5.4836e-06, 9.1493e-05],
        [1.8477e-06, 5.9962e-05],
        [1.7881e-07, 2.1875e-05],
        [6.9737e-06, 3.2187e-06],
        [4.7684e-07, 4.1425e-05],
        [3.5763e-07, 3.7611e-05],
        [2.0981e-05, 2.6941e-05],
        [4.7684e-07, 3.5942e-05],
        [1.4544e-05, 1.1384e-05],
        [6.7949e-06, 6.2227e-05],
        [2.3842e-07, 7.5698e-06],
        [3.5763e-07, 2.5272e-05],
        [1.6689e-06, 3.8803e-05],
        [2.0444e-05, 1.2875e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0515, 0.0715],
        [0.0535, 0.0688],
        [0.0543, 0.0679],
        [0.0528, 0.0698],
        [0.0517, 0.0713],
        [0.1016, 0.0363],
        [0.0519, 0.0711],
        [0.0518, 0.0712],
        [0.0794, 0.0464],
        [0.0520, 0.0710],
        [0.0899, 0.0410],
        [0.0566, 0.0651],
        [0.0529, 0.0697],
        [0.0520, 0.0709],
        [0.0534, 0.0690],
        [0.0947, 0.0389]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.407638
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-06, 8.8811e-05],
        [2.4676e-05, 6.2108e-05],
        [4.1723e-07, 3.0875e-05],
        [1.1742e-05, 6.7949e-06],
        [3.2783e-05, 1.6987e-05],
        [2.8670e-05, 2.0981e-05],
        [2.0802e-05, 9.7156e-06],
        [1.1325e-05, 5.0664e-06],
        [2.4319e-05, 1.1384e-05],
        [3.2663e-05, 1.5795e-05],
        [2.9147e-05, 1.3769e-05],
        [2.7716e-05, 5.2571e-05],
        [1.7881e-06, 5.4896e-05],
        [3.9339e-06, 6.9320e-05],
        [4.1723e-07, 1.4246e-05],
        [2.4557e-05, 1.8537e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0411, 0.0879],
        [0.0528, 0.0684],
        [0.0403, 0.0896],
        [0.0749, 0.0482],
        [0.0768, 0.0470],
        [0.0708, 0.0510],
        [0.0786, 0.0459],
        [0.0793, 0.0455],
        [0.0786, 0.0460],
        [0.0780, 0.0463],
        [0.0784, 0.0461],
        [0.0561, 0.0643],
        [0.0410, 0.0880],
        [0.0420, 0.0861],
        [0.0409, 0.0883],
        [0.0703, 0.0514]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.425861
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6955e-06, 7.0453e-05],
        [2.3842e-07, 3.4750e-05],
        [2.3305e-05, 1.5795e-05],
        [1.3113e-06, 4.9889e-05],
        [2.5809e-05, 4.1902e-05],
        [1.5557e-05, 5.9605e-06],
        [2.5034e-06, 7.5638e-05],
        [1.3947e-05, 4.5300e-06],
        [9.0599e-06, 3.1590e-06],
        [1.9729e-05, 1.3649e-05],
        [1.2279e-05, 7.2122e-06],
        [1.2577e-05, 7.6294e-06],
        [2.8610e-06, 2.9802e-07],
        [4.7684e-07, 3.8207e-05],
        [4.5896e-06, 8.3745e-05],
        [1.7226e-05, 9.7752e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0410, 0.0861],
        [0.0392, 0.0899],
        [0.0707, 0.0499],
        [0.0400, 0.0882],
        [0.0571, 0.0618],
        [0.0803, 0.0439],
        [0.0402, 0.0877],
        [0.0829, 0.0426],
        [0.0818, 0.0431],
        [0.0704, 0.0501],
        [0.0732, 0.0482],
        [0.0726, 0.0486],
        [0.0964, 0.0366],
        [0.0395, 0.0894],
        [0.0410, 0.0859],
        [0.0738, 0.0478]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.368152
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5438e-05, 1.5795e-05],
        [1.7881e-07, 5.6624e-06],
        [1.6093e-06, 4.1068e-05],
        [1.3947e-05, 5.4836e-06],
        [1.0312e-05, 4.1723e-06],
        [1.6689e-06, 6.8009e-05],
        [1.2398e-05, 5.9605e-06],
        [1.0133e-06, 5.2452e-05],
        [1.7822e-05, 8.1658e-06],
        [1.7107e-05, 1.4782e-05],
        [1.1325e-06, 4.6432e-05],
        [1.7881e-07, 1.9252e-05],
        [2.4080e-05, 6.1572e-05],
        [1.1921e-06, 5.1141e-05],
        [1.2517e-05, 8.3447e-06],
        [9.9540e-06, 7.1526e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0698, 0.0513],
        [0.0439, 0.0816],
        [0.0442, 0.0810],
        [0.0873, 0.0410],
        [0.0867, 0.0413],
        [0.0436, 0.0822],
        [0.0836, 0.0428],
        [0.0434, 0.0826],
        [0.0845, 0.0424],
        [0.0728, 0.0492],
        [0.0436, 0.0822],
        [0.0430, 0.0834],
        [0.0564, 0.0635],
        [0.0435, 0.0823],
        [0.0776, 0.0462],
        [0.0762, 0.0470]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.566229
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4571e-06, 5.6744e-05],
        [1.0133e-06, 4.2796e-05],
        [9.6560e-06, 4.8280e-06],
        [1.5080e-05, 6.3777e-06],
        [4.7684e-07, 6.4552e-05],
        [1.7941e-05, 1.3292e-05],
        [2.3842e-07, 3.6657e-05],
        [5.9605e-08, 3.8147e-06],
        [1.0073e-05, 4.4107e-06],
        [2.0564e-05, 9.4175e-06],
        [2.5630e-06, 6.6757e-05],
        [1.3113e-06, 5.8651e-05],
        [2.5630e-06, 6.5088e-05],
        [7.7486e-06, 8.7857e-05],
        [2.0921e-05, 1.4246e-05],
        [5.9605e-07, 4.1962e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0485, 0.0736],
        [0.0468, 0.0762],
        [0.0891, 0.0400],
        [0.0924, 0.0386],
        [0.0461, 0.0774],
        [0.0813, 0.0439],
        [0.0461, 0.0774],
        [0.0465, 0.0767],
        [0.0917, 0.0389],
        [0.0908, 0.0393],
        [0.0475, 0.0751],
        [0.0468, 0.0762],
        [0.0475, 0.0750],
        [0.0496, 0.0719],
        [0.0830, 0.0430],
        [0.0464, 0.0769]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.319463
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1683e-05, 1.2338e-05],
        [3.2783e-06, 7.2062e-05],
        [1.8120e-05, 1.6212e-05],
        [3.5763e-07, 2.4915e-05],
        [2.1160e-05, 1.5855e-05],
        [1.6391e-05, 9.0003e-06],
        [1.1921e-06, 5.2631e-05],
        [1.0192e-05, 6.0201e-06],
        [1.8656e-05, 1.2219e-05],
        [1.6689e-06, 6.1691e-05],
        [7.6890e-06, 2.5034e-06],
        [4.7684e-07, 3.8803e-05],
        [2.5034e-06, 2.9802e-07],
        [1.1683e-05, 7.0333e-06],
        [2.9802e-07, 2.6345e-05],
        [2.4498e-05, 2.4676e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0653, 0.0546],
        [0.0419, 0.0850],
        [0.0680, 0.0524],
        [0.0407, 0.0875],
        [0.0711, 0.0501],
        [0.0765, 0.0465],
        [0.0410, 0.0868],
        [0.0752, 0.0473],
        [0.0734, 0.0485],
        [0.0412, 0.0864],
        [0.0853, 0.0417],
        [0.0406, 0.0877],
        [0.0981, 0.0363],
        [0.0749, 0.0475],
        [0.0406, 0.0878],
        [0.0660, 0.0539]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.421518
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 4.6730e-05],
        [2.9206e-06, 3.5763e-07],
        [3.5346e-05, 2.8431e-05],
        [1.1921e-07, 1.6391e-05],
        [8.3447e-07, 5.1320e-05],
        [1.2755e-05, 5.3048e-06],
        [1.3709e-06, 5.6863e-05],
        [1.0073e-05, 1.1683e-05],
        [1.0371e-05, 5.4240e-06],
        [4.5896e-06, 5.2214e-05],
        [2.3365e-05, 1.0550e-05],
        [1.6987e-05, 9.8348e-06],
        [1.5557e-05, 2.3484e-05],
        [1.1921e-07, 1.7822e-05],
        [1.3113e-06, 3.7134e-05],
        [1.4901e-06, 4.9293e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0812],
        [0.1046, 0.0338],
        [0.0747, 0.0474],
        [0.0432, 0.0819],
        [0.0436, 0.0812],
        [0.0870, 0.0407],
        [0.0439, 0.0806],
        [0.0682, 0.0519],
        [0.0827, 0.0428],
        [0.0465, 0.0761],
        [0.0855, 0.0414],
        [0.0808, 0.0438],
        [0.0639, 0.0554],
        [0.0432, 0.0820],
        [0.0444, 0.0797],
        [0.0442, 0.0801]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.405616
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 2.7716e-05],
        [2.4021e-05, 2.3425e-05],
        [1.1325e-06, 4.6492e-05],
        [1.1921e-06, 5.7459e-05],
        [2.3842e-07, 2.3067e-05],
        [7.7486e-07, 3.4153e-05],
        [4.7684e-07, 2.4080e-05],
        [2.7359e-05, 1.7941e-05],
        [4.1723e-07, 3.7849e-05],
        [1.7703e-05, 6.9737e-06],
        [2.9802e-07, 5.8413e-06],
        [2.3842e-06, 5.0366e-05],
        [1.5497e-05, 1.0490e-05],
        [1.4842e-05, 5.2452e-06],
        [5.3644e-07, 2.5153e-05],
        [2.1517e-05, 1.2279e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0476, 0.0751],
        [0.0768, 0.0465],
        [0.0474, 0.0754],
        [0.0473, 0.0757],
        [0.0468, 0.0764],
        [0.0474, 0.0755],
        [0.0472, 0.0757],
        [0.0847, 0.0422],
        [0.0468, 0.0764],
        [0.0949, 0.0377],
        [0.0486, 0.0736],
        [0.0485, 0.0738],
        [0.0841, 0.0425],
        [0.0970, 0.0369],
        [0.0473, 0.0756],
        [0.0876, 0.0409]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.366381
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 3.8743e-05],
        [1.0729e-06, 2.6882e-05],
        [3.9935e-06, 5.9605e-07],
        [2.9206e-06, 7.3195e-05],
        [1.3053e-05, 5.6028e-06],
        [3.5763e-07, 3.0100e-05],
        [8.9407e-07, 4.1306e-05],
        [8.6427e-06, 8.1778e-05],
        [4.7684e-07, 2.0623e-05],
        [2.9206e-06, 5.9903e-05],
        [7.5102e-06, 5.5671e-05],
        [1.4067e-05, 3.7551e-06],
        [1.7881e-07, 9.8348e-06],
        [1.3173e-05, 1.4484e-05],
        [1.1563e-05, 3.8147e-06],
        [1.0550e-05, 9.5367e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0464, 0.0760],
        [0.0462, 0.0763],
        [0.1061, 0.0332],
        [0.0462, 0.0763],
        [0.0895, 0.0394],
        [0.0450, 0.0783],
        [0.0454, 0.0776],
        [0.0489, 0.0720],
        [0.0455, 0.0775],
        [0.0466, 0.0757],
        [0.0501, 0.0704],
        [0.0979, 0.0360],
        [0.0453, 0.0779],
        [0.0716, 0.0492],
        [0.0943, 0.0374],
        [0.0752, 0.0469]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.445659
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.5020e-05],
        [7.1526e-07, 3.6597e-05],
        [2.0862e-06, 2.3842e-07],
        [2.9802e-07, 2.0862e-05],
        [9.1791e-06, 3.4571e-06],
        [1.5378e-05, 1.3769e-05],
        [1.9193e-05, 1.3053e-05],
        [3.3975e-06, 5.8413e-05],
        [1.5497e-06, 5.1141e-05],
        [2.2173e-05, 1.4126e-05],
        [1.2338e-05, 5.4240e-06],
        [8.2850e-06, 5.1260e-06],
        [1.7881e-07, 2.3901e-05],
        [1.4722e-05, 9.1791e-06],
        [1.8001e-05, 1.4544e-05],
        [1.3888e-05, 1.7822e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0405, 0.0879],
        [0.0408, 0.0873],
        [0.0981, 0.0363],
        [0.0406, 0.0877],
        [0.0827, 0.0430],
        [0.0678, 0.0525],
        [0.0725, 0.0491],
        [0.0422, 0.0842],
        [0.0412, 0.0864],
        [0.0737, 0.0483],
        [0.0801, 0.0444],
        [0.0742, 0.0480],
        [0.0403, 0.0883],
        [0.0740, 0.0481],
        [0.0695, 0.0512],
        [0.0620, 0.0574]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.337431
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2829e-05, 1.2934e-05],
        [1.8239e-05, 8.5235e-06],
        [2.7716e-05, 1.3471e-05],
        [1.0133e-05, 6.9082e-05],
        [1.3232e-05, 6.0201e-06],
        [5.9605e-08, 1.2875e-05],
        [2.9802e-07, 2.4676e-05],
        [9.4175e-06, 6.7353e-06],
        [5.9605e-08, 3.6955e-06],
        [3.6955e-06, 1.1623e-05],
        [2.6464e-05, 1.2875e-05],
        [3.3438e-05, 1.3530e-05],
        [2.4438e-05, 2.0623e-05],
        [2.6822e-06, 5.0247e-05],
        [3.6955e-06, 6.1929e-05],
        [2.9802e-07, 2.1040e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0792, 0.0451],
        [0.0827, 0.0432],
        [0.0820, 0.0436],
        [0.0476, 0.0752],
        [0.0832, 0.0430],
        [0.0420, 0.0851],
        [0.0424, 0.0844],
        [0.0750, 0.0477],
        [0.0425, 0.0841],
        [0.0533, 0.0671],
        [0.0820, 0.0436],
        [0.0853, 0.0419],
        [0.0720, 0.0497],
        [0.0440, 0.0812],
        [0.0443, 0.0808],
        [0.0424, 0.0843]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.332507
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7166e-05, 9.7752e-06],
        [2.6405e-05, 1.2279e-05],
        [1.9014e-05, 7.7486e-06],
        [1.0133e-06, 3.6120e-05],
        [2.7299e-05, 4.2617e-05],
        [3.3379e-06, 1.3709e-06],
        [2.1458e-06, 5.1856e-05],
        [6.5565e-07, 3.0935e-05],
        [4.1723e-07, 3.5882e-05],
        [5.9605e-07, 3.9697e-05],
        [3.3498e-05, 4.1962e-05],
        [1.3709e-05, 7.1526e-06],
        [1.5616e-05, 5.2452e-06],
        [1.2338e-05, 7.5102e-06],
        [8.1658e-06, 2.8014e-06],
        [9.1195e-06, 2.6226e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0720, 0.0495],
        [0.0753, 0.0473],
        [0.0775, 0.0460],
        [0.0391, 0.0911],
        [0.0562, 0.0633],
        [0.0773, 0.0461],
        [0.0396, 0.0899],
        [0.0389, 0.0917],
        [0.0385, 0.0925],
        [0.0386, 0.0922],
        [0.0593, 0.0600],
        [0.0734, 0.0485],
        [0.0805, 0.0443],
        [0.0709, 0.0503],
        [0.0801, 0.0444],
        [0.0828, 0.0430]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.484402
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[4.7684e-07, 3.2663e-05],
        [2.1279e-05, 1.2219e-05],
        [1.7881e-05, 1.5676e-05],
        [1.6093e-06, 5.2691e-05],
        [2.9445e-05, 3.8087e-05],
        [1.0133e-06, 5.1081e-05],
        [0.0000e+00, 1.9670e-06],
        [9.5367e-07, 5.0545e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0993, 0.1475],
        [0.1847, 0.0793],
        [0.1667, 0.0878],
        [0.1008, 0.1453],
        [0.1513, 0.0968],
        [0.0998, 0.1468],
        [0.0978, 0.1497],
        [0.0997, 0.1469]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.193904
acc:  0.97
Time taken to execute the en SA task with prompt type auxiliary, variation 7 and batchsize 16: 0:00:05.095529
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_7']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06],
        [9.5963e-06, 7.9274e-06]], device='cuda:0') torch.Size([112, 2])
answers_probs just softmax dim 0: tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 8 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 2.7120e-05],
        [2.0862e-06, 6.5267e-05],
        [1.6451e-05, 8.2850e-06],
        [3.8147e-06, 7.2658e-05],
        [1.5199e-05, 1.0848e-05],
        [1.2577e-05, 1.0669e-05],
        [2.2054e-06, 5.4359e-05],
        [1.1325e-06, 4.5300e-05],
        [1.9550e-05, 1.8179e-05],
        [1.8477e-06, 5.0426e-05],
        [1.7047e-05, 7.9870e-06],
        [5.4836e-06, 1.0729e-06],
        [1.4007e-05, 7.4506e-06],
        [2.1338e-05, 1.8001e-05],
        [9.1195e-06, 3.9339e-06],
        [2.3842e-06, 5.5552e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0424, 0.0839],
        [0.0424, 0.0840],
        [0.0799, 0.0446],
        [0.0432, 0.0824],
        [0.0737, 0.0483],
        [0.0706, 0.0504],
        [0.0427, 0.0833],
        [0.0421, 0.0846],
        [0.0690, 0.0516],
        [0.0426, 0.0836],
        [0.0812, 0.0439],
        [0.0949, 0.0375],
        [0.0790, 0.0451],
        [0.0707, 0.0504],
        [0.0827, 0.0431],
        [0.0428, 0.0832]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.435080
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 3.2067e-05],
        [1.7285e-06, 4.0591e-05],
        [1.1444e-05, 4.2915e-06],
        [1.4365e-05, 1.3292e-05],
        [7.4506e-06, 7.0035e-05],
        [1.3888e-05, 7.5698e-06],
        [3.1590e-06, 6.2644e-05],
        [2.3842e-07, 2.0921e-05],
        [1.2517e-06, 4.3094e-05],
        [3.2783e-05, 1.8239e-05],
        [3.6120e-05, 2.2948e-05],
        [1.4901e-06, 5.9485e-05],
        [2.7001e-05, 5.7638e-05],
        [7.7486e-07, 4.1306e-05],
        [5.9605e-07, 1.7881e-05],
        [1.2577e-05, 7.4625e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0486, 0.0747],
        [0.0490, 0.0742],
        [0.0973, 0.0374],
        [0.0790, 0.0460],
        [0.0517, 0.0702],
        [0.0898, 0.0405],
        [0.0493, 0.0737],
        [0.0475, 0.0764],
        [0.0483, 0.0751],
        [0.0894, 0.0407],
        [0.0866, 0.0419],
        [0.0482, 0.0754],
        [0.0647, 0.0562],
        [0.0479, 0.0759],
        [0.0485, 0.0748],
        [0.0543, 0.0669]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.426065
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8299e-05, 1.4782e-05],
        [1.8120e-05, 9.5367e-06],
        [1.5259e-05, 8.7023e-06],
        [2.1756e-05, 1.8477e-05],
        [1.6868e-05, 1.2755e-05],
        [1.9014e-05, 1.0073e-05],
        [1.3888e-05, 7.4506e-06],
        [3.5763e-07, 3.8922e-05],
        [1.4484e-05, 9.7156e-06],
        [3.2902e-05, 4.5002e-05],
        [1.1921e-07, 5.9605e-06],
        [3.4571e-06, 5.4240e-05],
        [2.1994e-05, 4.9591e-05],
        [7.7486e-07, 4.0054e-05],
        [2.0325e-05, 1.9550e-05],
        [2.4617e-05, 1.4126e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0689, 0.0534],
        [0.0763, 0.0482],
        [0.0749, 0.0491],
        [0.0680, 0.0540],
        [0.0700, 0.0525],
        [0.0762, 0.0483],
        [0.0759, 0.0484],
        [0.0400, 0.0919],
        [0.0721, 0.0510],
        [0.0604, 0.0608],
        [0.0404, 0.0910],
        [0.0421, 0.0874],
        [0.0539, 0.0682],
        [0.0404, 0.0910],
        [0.0659, 0.0557],
        [0.0748, 0.0491]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.331072
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2411e-05, 2.2054e-05],
        [3.5763e-07, 1.9014e-05],
        [2.2650e-06, 4.2558e-05],
        [8.3447e-07, 3.5107e-05],
        [6.5565e-07, 2.8849e-05],
        [8.7023e-06, 5.9009e-06],
        [5.9605e-07, 2.5392e-05],
        [2.8610e-06, 5.9605e-07],
        [1.6689e-05, 2.2113e-05],
        [1.9073e-06, 6.4790e-05],
        [1.2279e-05, 8.0585e-05],
        [4.1723e-06, 5.5671e-05],
        [4.9472e-06, 5.9903e-05],
        [5.3644e-07, 3.5763e-05],
        [3.8683e-05, 5.4955e-05],
        [7.7486e-07, 5.4598e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0816, 0.0449],
        [0.0502, 0.0730],
        [0.0518, 0.0707],
        [0.0504, 0.0727],
        [0.0504, 0.0727],
        [0.0894, 0.0410],
        [0.0504, 0.0727],
        [0.1127, 0.0325],
        [0.0757, 0.0484],
        [0.0507, 0.0723],
        [0.0562, 0.0652],
        [0.0528, 0.0694],
        [0.0532, 0.0689],
        [0.0500, 0.0733],
        [0.0745, 0.0492],
        [0.0500, 0.0733]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.358652
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 3.2187e-05],
        [1.7881e-07, 1.9431e-05],
        [1.8477e-06, 4.1544e-05],
        [1.8477e-06, 4.9651e-05],
        [1.0133e-06, 4.3988e-05],
        [2.1279e-05, 1.9372e-05],
        [1.6093e-06, 8.1062e-05],
        [5.4240e-06, 1.2517e-06],
        [1.1325e-06, 3.9279e-05],
        [3.5405e-05, 2.7120e-05],
        [5.0068e-06, 7.0035e-05],
        [2.1458e-05, 1.6809e-05],
        [4.3631e-05, 4.0650e-05],
        [8.3447e-07, 4.1783e-05],
        [4.6492e-06, 7.2598e-05],
        [2.0325e-05, 1.5855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0495, 0.0731],
        [0.0475, 0.0763],
        [0.0491, 0.0738],
        [0.0488, 0.0742],
        [0.0481, 0.0752],
        [0.0794, 0.0456],
        [0.0480, 0.0755],
        [0.1060, 0.0342],
        [0.0484, 0.0748],
        [0.0829, 0.0437],
        [0.0503, 0.0720],
        [0.0824, 0.0439],
        [0.0790, 0.0459],
        [0.0480, 0.0755],
        [0.0500, 0.0725],
        [0.0825, 0.0439]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.419763
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1127e-06, 8.1658e-05],
        [1.4126e-05, 1.0252e-05],
        [1.1921e-07, 1.4365e-05],
        [2.2173e-05, 1.8001e-05],
        [1.9729e-05, 1.6987e-05],
        [3.3438e-05, 1.6928e-05],
        [1.6093e-05, 1.0729e-05],
        [2.3901e-05, 1.2875e-05],
        [2.1458e-06, 5.6088e-05],
        [1.0610e-05, 5.0902e-05],
        [4.1723e-07, 1.2279e-05],
        [3.5822e-05, 1.8179e-05],
        [1.6630e-05, 2.2173e-05],
        [2.0087e-05, 1.7881e-05],
        [2.5332e-05, 8.5235e-06],
        [3.7551e-06, 4.7684e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0404, 0.0894],
        [0.0688, 0.0525],
        [0.0389, 0.0930],
        [0.0669, 0.0540],
        [0.0660, 0.0548],
        [0.0749, 0.0483],
        [0.0702, 0.0515],
        [0.0738, 0.0490],
        [0.0400, 0.0904],
        [0.0458, 0.0789],
        [0.0398, 0.0907],
        [0.0748, 0.0483],
        [0.0592, 0.0611],
        [0.0654, 0.0552],
        [0.0815, 0.0444],
        [0.0936, 0.0386]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.362041
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4438e-05, 1.3173e-05],
        [3.9458e-05, 1.7524e-05],
        [1.3411e-05, 5.0664e-06],
        [9.5367e-06, 8.1897e-05],
        [2.3842e-06, 3.5584e-05],
        [2.8014e-06, 4.8280e-05],
        [1.2159e-05, 1.4305e-05],
        [1.9789e-05, 9.1195e-06],
        [2.9206e-06, 5.0604e-05],
        [2.5272e-05, 1.5676e-05],
        [1.4305e-06, 4.6074e-05],
        [2.4438e-06, 7.6234e-05],
        [5.3048e-06, 9.0778e-05],
        [2.9802e-07, 7.4506e-06],
        [1.2219e-05, 6.0797e-06],
        [3.2783e-06, 7.8321e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0839, 0.0427],
        [0.0875, 0.0409],
        [0.0905, 0.0395],
        [0.0486, 0.0736],
        [0.0466, 0.0767],
        [0.0463, 0.0774],
        [0.0693, 0.0516],
        [0.0868, 0.0412],
        [0.0462, 0.0774],
        [0.0812, 0.0441],
        [0.0451, 0.0793],
        [0.0452, 0.0792],
        [0.0463, 0.0773],
        [0.0455, 0.0786],
        [0.0854, 0.0419],
        [0.0456, 0.0785]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.564439
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7088e-06, 8.4996e-05],
        [4.6372e-05, 4.9353e-05],
        [3.2544e-05, 1.6510e-05],
        [1.4305e-06, 3.2544e-05],
        [2.8014e-06, 6.6042e-05],
        [2.6941e-05, 2.2650e-05],
        [1.1265e-05, 8.2254e-06],
        [2.9802e-07, 2.0087e-05],
        [2.9802e-05, 3.3796e-05],
        [4.4107e-06, 5.8949e-05],
        [1.8477e-06, 7.0393e-05],
        [4.6492e-06, 1.4901e-06],
        [2.3067e-05, 2.8253e-05],
        [1.3113e-05, 1.6332e-05],
        [4.1723e-07, 2.2352e-05],
        [6.1989e-06, 7.0751e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0473, 0.0771],
        [0.0729, 0.0500],
        [0.0871, 0.0418],
        [0.0468, 0.0779],
        [0.0467, 0.0780],
        [0.0773, 0.0472],
        [0.0800, 0.0456],
        [0.0455, 0.0800],
        [0.0717, 0.0508],
        [0.0481, 0.0758],
        [0.0460, 0.0792],
        [0.0957, 0.0381],
        [0.0704, 0.0518],
        [0.0701, 0.0520],
        [0.0457, 0.0797],
        [0.0486, 0.0749]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.407037
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1756e-05, 1.3947e-05],
        [1.1921e-06, 4.1664e-05],
        [9.5367e-07, 3.8564e-05],
        [6.6161e-06, 8.5652e-05],
        [1.2457e-05, 8.6427e-06],
        [9.5367e-07, 4.1187e-05],
        [6.5565e-07, 2.6703e-05],
        [4.7684e-06, 6.0618e-05],
        [4.4703e-06, 5.4717e-05],
        [1.2994e-05, 7.2122e-06],
        [8.9407e-06, 6.6757e-06],
        [5.7220e-06, 7.9274e-05],
        [3.0398e-06, 5.9605e-07],
        [2.4021e-05, 1.5855e-05],
        [1.1325e-05, 6.1989e-06],
        [1.0133e-06, 3.2723e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0807, 0.0442],
        [0.0451, 0.0791],
        [0.0450, 0.0794],
        [0.0471, 0.0757],
        [0.0792, 0.0451],
        [0.0449, 0.0796],
        [0.0449, 0.0795],
        [0.0472, 0.0757],
        [0.0473, 0.0755],
        [0.0835, 0.0428],
        [0.0778, 0.0459],
        [0.0469, 0.0761],
        [0.1012, 0.0353],
        [0.0801, 0.0446],
        [0.0837, 0.0426],
        [0.0452, 0.0790]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.291291
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-06, 8.3685e-05],
        [1.6689e-06, 5.6088e-05],
        [1.4365e-05, 1.0669e-05],
        [1.7226e-05, 6.6161e-06],
        [1.1027e-05, 6.3777e-06],
        [7.7486e-07, 3.5524e-05],
        [2.3842e-07, 1.9908e-05],
        [2.2650e-05, 1.6272e-05],
        [3.6776e-05, 3.3498e-05],
        [3.5167e-05, 2.2709e-05],
        [1.6212e-05, 7.5102e-06],
        [5.9605e-06, 8.0049e-05],
        [2.6822e-06, 4.7684e-07],
        [9.4175e-06, 9.1672e-05],
        [2.7657e-05, 2.1040e-05],
        [4.1723e-07, 3.0577e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0829],
        [0.0422, 0.0845],
        [0.0727, 0.0490],
        [0.0844, 0.0422],
        [0.0772, 0.0462],
        [0.0419, 0.0851],
        [0.0415, 0.0859],
        [0.0733, 0.0486],
        [0.0691, 0.0515],
        [0.0752, 0.0474],
        [0.0811, 0.0439],
        [0.0439, 0.0811],
        [0.0958, 0.0372],
        [0.0450, 0.0792],
        [0.0723, 0.0493],
        [0.0415, 0.0858]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.364272
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6868e-05, 1.1444e-05],
        [8.9407e-07, 3.9518e-05],
        [1.7881e-07, 1.3888e-05],
        [1.1444e-05, 1.0073e-05],
        [8.5235e-06, 3.2187e-06],
        [6.3777e-06, 5.0724e-05],
        [6.5565e-07, 2.8849e-05],
        [1.7583e-05, 1.1861e-05],
        [1.6332e-05, 1.1921e-05],
        [2.0504e-05, 1.8418e-05],
        [1.1921e-06, 5.3942e-05],
        [2.2888e-05, 3.9577e-05],
        [4.7684e-07, 2.8551e-05],
        [5.1260e-06, 2.2650e-06],
        [2.2829e-05, 1.3530e-05],
        [1.9014e-05, 1.0073e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0746, 0.0485],
        [0.0420, 0.0860],
        [0.0416, 0.0868],
        [0.0700, 0.0517],
        [0.0849, 0.0426],
        [0.0460, 0.0786],
        [0.0420, 0.0860],
        [0.0747, 0.0484],
        [0.0733, 0.0493],
        [0.0696, 0.0519],
        [0.0420, 0.0861],
        [0.0593, 0.0610],
        [0.0418, 0.0865],
        [0.0822, 0.0440],
        [0.0770, 0.0469],
        [0.0790, 0.0457]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.477183
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.6153e-05],
        [6.1393e-06, 3.7551e-06],
        [3.0041e-05, 5.6088e-05],
        [3.1590e-05, 1.5795e-05],
        [2.3603e-05, 1.1742e-05],
        [1.1921e-05, 8.1062e-06],
        [3.9935e-05, 3.4153e-05],
        [1.7762e-05, 1.9848e-05],
        [9.4771e-06, 1.0133e-04],
        [1.5616e-05, 7.8082e-06],
        [2.8610e-06, 4.8518e-05],
        [5.9605e-07, 2.7299e-05],
        [1.3351e-05, 8.6486e-05],
        [4.3511e-06, 7.5281e-05],
        [6.5565e-07, 1.3411e-05],
        [1.0669e-05, 7.3314e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0845],
        [0.0792, 0.0459],
        [0.0603, 0.0603],
        [0.0829, 0.0439],
        [0.0830, 0.0438],
        [0.0772, 0.0471],
        [0.0730, 0.0498],
        [0.0683, 0.0533],
        [0.0464, 0.0785],
        [0.0829, 0.0439],
        [0.0450, 0.0808],
        [0.0435, 0.0836],
        [0.0487, 0.0748],
        [0.0450, 0.0809],
        [0.0446, 0.0816],
        [0.0770, 0.0472]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.331374
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.6359e-06, 5.3644e-07],
        [1.7881e-05, 1.2100e-05],
        [7.3314e-06, 2.7418e-06],
        [2.2054e-06, 6.0856e-05],
        [1.0431e-05, 7.2122e-06],
        [2.3246e-06, 5.9664e-05],
        [7.1526e-07, 2.5451e-05],
        [1.7941e-05, 7.0274e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1926, 0.0731],
        [0.1463, 0.0962],
        [0.1668, 0.0844],
        [0.0835, 0.1687],
        [0.1455, 0.0967],
        [0.0837, 0.1683],
        [0.0828, 0.1700],
        [0.0988, 0.1426]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.219875
acc:  0.965
Time taken to execute the en SA task with prompt type auxiliary, variation 8 and batchsize 16: 0:00:05.008853
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_8']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06],
        [7.2122e-06, 9.7156e-06]], device='cuda:0') torch.Size([110, 2])
answers_probs just softmax dim 0: tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA auxiliary 9 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.0531e-06, 8.8453e-05],
        [1.7881e-06, 5.9605e-05],
        [1.3173e-05, 7.7486e-06],
        [4.8280e-06, 7.7486e-07],
        [2.6703e-05, 1.2398e-05],
        [6.5565e-07, 2.5213e-05],
        [2.3842e-06, 6.0439e-05],
        [7.0333e-06, 3.7551e-06],
        [2.3842e-07, 1.5020e-05],
        [1.7881e-07, 1.9014e-05],
        [1.5855e-05, 9.0003e-06],
        [1.7822e-05, 8.8215e-06],
        [1.3113e-06, 4.8220e-05],
        [2.5928e-05, 1.8239e-05],
        [1.1921e-06, 4.7565e-05],
        [1.1981e-05, 7.2122e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0438, 0.0804],
        [0.0431, 0.0816],
        [0.0786, 0.0448],
        [0.0992, 0.0355],
        [0.0829, 0.0424],
        [0.0430, 0.0819],
        [0.0435, 0.0809],
        [0.0804, 0.0438],
        [0.0426, 0.0827],
        [0.0423, 0.0832],
        [0.0793, 0.0444],
        [0.0818, 0.0430],
        [0.0430, 0.0818],
        [0.0754, 0.0467],
        [0.0429, 0.0820],
        [0.0782, 0.0450]], device='cuda:0')
 Batch: 0 of auxiliary classification Duration: 0:00:00.418284
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0146e-05, 9.1791e-06],
        [1.1504e-05, 1.3173e-05],
        [1.0729e-06, 5.9426e-05],
        [2.1458e-06, 3.8326e-05],
        [1.5020e-05, 9.1195e-06],
        [4.1723e-07, 6.2585e-06],
        [8.9407e-07, 3.8683e-05],
        [3.4571e-06, 8.1897e-05],
        [1.5140e-05, 1.4126e-05],
        [3.5763e-07, 2.3663e-05],
        [2.0504e-05, 1.5974e-05],
        [4.4703e-06, 7.2300e-05],
        [6.5565e-07, 2.7716e-05],
        [1.6212e-05, 6.7353e-06],
        [1.4186e-05, 9.1195e-06],
        [1.2398e-05, 4.6492e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0860, 0.0417],
        [0.0690, 0.0520],
        [0.0440, 0.0814],
        [0.0456, 0.0786],
        [0.0806, 0.0445],
        [0.0461, 0.0778],
        [0.0443, 0.0810],
        [0.0451, 0.0796],
        [0.0726, 0.0494],
        [0.0439, 0.0816],
        [0.0759, 0.0472],
        [0.0459, 0.0782],
        [0.0443, 0.0810],
        [0.0877, 0.0409],
        [0.0795, 0.0451],
        [0.0895, 0.0400]], device='cuda:0')
 Batch: 1 of auxiliary classification Duration: 0:00:00.544020
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1623e-05, 4.5300e-06],
        [1.2517e-06, 3.6538e-05],
        [2.2650e-05, 2.9266e-05],
        [5.1856e-06, 7.0512e-05],
        [7.1526e-07, 3.7372e-05],
        [4.8876e-06, 6.5804e-05],
        [1.5259e-05, 3.9339e-06],
        [1.1206e-05, 6.4969e-06],
        [1.4782e-05, 1.7166e-05],
        [1.2040e-05, 9.5427e-05],
        [4.8280e-06, 8.3447e-07],
        [6.5565e-07, 2.7359e-05],
        [5.9605e-08, 1.2279e-05],
        [4.4346e-05, 3.5346e-05],
        [3.7670e-05, 1.9550e-05],
        [3.9160e-05, 5.0306e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0849, 0.0420],
        [0.0427, 0.0835],
        [0.0639, 0.0558],
        [0.0443, 0.0806],
        [0.0421, 0.0847],
        [0.0443, 0.0805],
        [0.0915, 0.0390],
        [0.0778, 0.0458],
        [0.0656, 0.0543],
        [0.0462, 0.0771],
        [0.0969, 0.0368],
        [0.0423, 0.0843],
        [0.0415, 0.0859],
        [0.0721, 0.0495],
        [0.0798, 0.0447],
        [0.0640, 0.0557]], device='cuda:0')
 Batch: 2 of auxiliary classification Duration: 0:00:00.429938
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-06, 7.2598e-05],
        [1.0252e-05, 8.7023e-06],
        [4.6492e-06, 7.5459e-05],
        [1.2755e-05, 1.2934e-05],
        [1.4186e-05, 7.0930e-06],
        [1.0729e-06, 4.5538e-05],
        [1.9670e-06, 6.2883e-05],
        [6.5565e-07, 3.2604e-05],
        [6.5565e-07, 2.4915e-05],
        [1.1921e-06, 3.8862e-05],
        [3.0100e-05, 2.1160e-05],
        [5.3644e-06, 1.2696e-05],
        [2.4736e-05, 2.5153e-05],
        [2.3723e-05, 1.4067e-05],
        [9.7156e-06, 6.7353e-06],
        [3.2842e-05, 4.6670e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0797],
        [0.0763, 0.0479],
        [0.0471, 0.0777],
        [0.0730, 0.0501],
        [0.0865, 0.0423],
        [0.0455, 0.0805],
        [0.0458, 0.0799],
        [0.0453, 0.0807],
        [0.0456, 0.0802],
        [0.0458, 0.0799],
        [0.0799, 0.0458],
        [0.0598, 0.0612],
        [0.0729, 0.0501],
        [0.0832, 0.0439],
        [0.0802, 0.0456],
        [0.0672, 0.0545]], device='cuda:0')
 Batch: 3 of auxiliary classification Duration: 0:00:00.330512
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4617e-05, 1.3351e-05],
        [8.1062e-06, 6.9022e-05],
        [2.0266e-06, 4.3392e-05],
        [3.2902e-05, 1.4961e-05],
        [2.3901e-05, 1.6987e-05],
        [2.8133e-05, 1.5080e-05],
        [6.5565e-07, 3.7670e-05],
        [3.1114e-05, 2.5213e-05],
        [4.7684e-07, 4.0472e-05],
        [2.9802e-06, 3.5763e-07],
        [3.0994e-06, 6.4194e-05],
        [3.7253e-05, 2.5809e-05],
        [1.4901e-06, 4.9949e-05],
        [2.3842e-07, 1.0967e-05],
        [1.5795e-05, 9.2983e-06],
        [1.1921e-07, 1.9670e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0805, 0.0439],
        [0.0467, 0.0756],
        [0.0440, 0.0803],
        [0.0837, 0.0422],
        [0.0755, 0.0468],
        [0.0807, 0.0438],
        [0.0428, 0.0826],
        [0.0731, 0.0484],
        [0.0426, 0.0830],
        [0.1028, 0.0344],
        [0.0441, 0.0802],
        [0.0760, 0.0465],
        [0.0433, 0.0816],
        [0.0430, 0.0822],
        [0.0790, 0.0448],
        [0.0423, 0.0835]], device='cuda:0')
 Batch: 4 of auxiliary classification Duration: 0:00:00.407821
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4571e-06, 5.1081e-05],
        [1.3649e-05, 7.1526e-06],
        [1.4663e-05, 5.8413e-06],
        [1.6093e-06, 5.5909e-05],
        [3.6955e-06, 6.7353e-05],
        [3.3975e-06, 8.9467e-05],
        [1.0848e-05, 6.4969e-06],
        [2.4140e-05, 1.1802e-05],
        [2.9802e-07, 2.0683e-05],
        [1.1921e-06, 3.0339e-05],
        [2.9206e-06, 7.3195e-05],
        [1.0729e-05, 4.0531e-06],
        [2.9802e-07, 2.4557e-05],
        [1.7881e-05, 6.0797e-06],
        [3.4511e-05, 3.2723e-05],
        [1.8477e-06, 1.1921e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0435, 0.0800],
        [0.0787, 0.0443],
        [0.0835, 0.0417],
        [0.0420, 0.0829],
        [0.0430, 0.0810],
        [0.0424, 0.0822],
        [0.0763, 0.0456],
        [0.0799, 0.0436],
        [0.0414, 0.0841],
        [0.0424, 0.0821],
        [0.0424, 0.0821],
        [0.0844, 0.0413],
        [0.0413, 0.0843],
        [0.0861, 0.0404],
        [0.0682, 0.0510],
        [0.1045, 0.0333]], device='cuda:0')
 Batch: 5 of auxiliary classification Duration: 0:00:00.397725
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8299e-05, 8.3447e-06],
        [2.6226e-06, 4.7505e-05],
        [2.9802e-07, 2.5451e-05],
        [3.6120e-05, 1.6630e-05],
        [1.3709e-06, 3.0041e-05],
        [1.0610e-05, 6.6161e-06],
        [2.7776e-05, 4.1306e-05],
        [2.2054e-06, 4.3452e-05],
        [2.9266e-05, 3.5048e-05],
        [1.6093e-06, 2.0802e-05],
        [3.7014e-05, 1.9968e-05],
        [1.6689e-06, 5.0068e-05],
        [2.4438e-05, 1.8001e-05],
        [5.4836e-06, 8.9407e-05],
        [1.6689e-06, 5.7936e-05],
        [1.0729e-05, 9.0003e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0877, 0.0413],
        [0.0465, 0.0779],
        [0.0446, 0.0812],
        [0.0875, 0.0414],
        [0.0461, 0.0786],
        [0.0817, 0.0444],
        [0.0660, 0.0549],
        [0.0463, 0.0782],
        [0.0695, 0.0521],
        [0.0474, 0.0764],
        [0.0845, 0.0429],
        [0.0456, 0.0795],
        [0.0785, 0.0462],
        [0.0467, 0.0775],
        [0.0454, 0.0798],
        [0.0760, 0.0477]], device='cuda:0')
 Batch: 6 of auxiliary classification Duration: 0:00:00.356668
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5616e-05, 1.6212e-05],
        [1.1921e-07, 1.4246e-05],
        [2.3425e-05, 2.0206e-05],
        [2.5034e-05, 5.9187e-05],
        [1.7345e-05, 1.1027e-05],
        [4.4703e-06, 1.9670e-06],
        [7.7486e-06, 5.7876e-05],
        [1.4246e-05, 2.0444e-05],
        [7.7486e-07, 3.2067e-05],
        [1.9014e-05, 1.0431e-05],
        [3.0816e-05, 5.8055e-05],
        [5.9605e-07, 3.2127e-05],
        [3.8445e-05, 1.6809e-05],
        [1.8835e-05, 7.5102e-06],
        [1.4663e-05, 6.2585e-06],
        [2.3842e-07, 2.0385e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0663, 0.0547],
        [0.0410, 0.0886],
        [0.0695, 0.0523],
        [0.0547, 0.0664],
        [0.0749, 0.0485],
        [0.0813, 0.0446],
        [0.0457, 0.0794],
        [0.0612, 0.0593],
        [0.0416, 0.0873],
        [0.0775, 0.0469],
        [0.0575, 0.0632],
        [0.0414, 0.0878],
        [0.0815, 0.0446],
        [0.0830, 0.0437],
        [0.0819, 0.0443],
        [0.0411, 0.0884]], device='cuda:0')
 Batch: 7 of auxiliary classification Duration: 0:00:00.479218
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 2.6226e-05],
        [5.9009e-06, 9.2208e-05],
        [3.7551e-06, 6.9082e-05],
        [3.5763e-07, 2.3782e-05],
        [2.9802e-07, 4.2975e-05],
        [5.9605e-07, 4.0352e-05],
        [4.7088e-06, 6.1035e-05],
        [2.0623e-05, 1.2934e-05],
        [3.0398e-05, 2.9266e-05],
        [2.4319e-05, 1.2815e-05],
        [4.1723e-07, 2.5272e-05],
        [2.0742e-05, 1.8716e-05],
        [1.6093e-06, 4.6730e-05],
        [2.5868e-05, 6.6042e-05],
        [2.1458e-06, 1.7881e-07],
        [1.3113e-06, 4.3213e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0492, 0.0730],
        [0.0498, 0.0721],
        [0.0494, 0.0727],
        [0.0476, 0.0754],
        [0.0472, 0.0760],
        [0.0476, 0.0754],
        [0.0504, 0.0712],
        [0.0867, 0.0414],
        [0.0780, 0.0460],
        [0.0903, 0.0398],
        [0.0477, 0.0753],
        [0.0793, 0.0452],
        [0.0485, 0.0740],
        [0.0621, 0.0578],
        [0.1180, 0.0304],
        [0.0483, 0.0743]], device='cuda:0')
 Batch: 8 of auxiliary classification Duration: 0:00:00.334866
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4126e-05, 2.7061e-05],
        [1.8477e-05, 1.1742e-05],
        [1.4901e-06, 5.4240e-05],
        [1.5140e-05, 5.1260e-06],
        [1.7226e-05, 1.7524e-05],
        [2.8014e-06, 2.3842e-07],
        [1.6689e-06, 4.2439e-05],
        [4.4703e-06, 7.4208e-05],
        [8.1062e-06, 4.6492e-06],
        [8.3447e-07, 6.9618e-05],
        [1.8120e-05, 1.2815e-05],
        [4.7684e-07, 2.5392e-05],
        [1.0729e-06, 4.1127e-05],
        [2.8849e-05, 2.3365e-05],
        [1.4782e-05, 1.0967e-05],
        [5.9605e-07, 3.3915e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0589, 0.0603],
        [0.0771, 0.0461],
        [0.0430, 0.0827],
        [0.0883, 0.0403],
        [0.0687, 0.0518],
        [0.1051, 0.0338],
        [0.0434, 0.0818],
        [0.0443, 0.0803],
        [0.0790, 0.0450],
        [0.0423, 0.0840],
        [0.0751, 0.0473],
        [0.0426, 0.0834],
        [0.0429, 0.0828],
        [0.0727, 0.0489],
        [0.0742, 0.0479],
        [0.0425, 0.0835]], device='cuda:0')
 Batch: 9 of auxiliary classification Duration: 0:00:00.442424
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 4.1366e-05],
        [5.9605e-07, 1.8954e-05],
        [1.5497e-06, 5.7876e-05],
        [1.7464e-05, 1.7703e-05],
        [2.3365e-05, 1.4842e-05],
        [1.1146e-05, 6.4373e-06],
        [1.9431e-05, 1.3649e-05],
        [1.0729e-06, 3.5405e-05],
        [2.2054e-06, 2.9802e-07],
        [2.2054e-05, 1.2577e-05],
        [1.8001e-05, 7.3314e-06],
        [4.7684e-07, 2.1517e-05],
        [2.1219e-05, 1.6928e-05],
        [1.4901e-06, 5.8830e-05],
        [9.8348e-06, 3.9935e-06],
        [2.5034e-06, 4.5538e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0416, 0.0850],
        [0.0421, 0.0841],
        [0.0419, 0.0845],
        [0.0671, 0.0528],
        [0.0752, 0.0470],
        [0.0769, 0.0460],
        [0.0734, 0.0482],
        [0.0420, 0.0842],
        [0.0985, 0.0359],
        [0.0772, 0.0459],
        [0.0831, 0.0426],
        [0.0417, 0.0848],
        [0.0712, 0.0497],
        [0.0418, 0.0846],
        [0.0831, 0.0426],
        [0.0430, 0.0823]], device='cuda:0')
 Batch: 10 of auxiliary classification Duration: 0:00:00.364849
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4974e-05, 1.2815e-05],
        [1.7762e-05, 8.6427e-06],
        [2.9802e-07, 3.4094e-05],
        [1.4305e-05, 1.3232e-05],
        [1.1921e-07, 1.4663e-05],
        [1.5795e-05, 5.8413e-06],
        [1.7226e-05, 6.0201e-06],
        [2.2650e-06, 4.7445e-05],
        [8.0466e-06, 1.0335e-04],
        [7.1526e-07, 3.8862e-05],
        [1.7881e-06, 4.5478e-05],
        [1.1921e-06, 3.7968e-05],
        [1.8477e-06, 4.6372e-05],
        [5.9605e-07, 1.6391e-05],
        [1.9312e-05, 1.1384e-05],
        [1.0073e-05, 6.5029e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0877, 0.0407],
        [0.0888, 0.0402],
        [0.0457, 0.0781],
        [0.0762, 0.0468],
        [0.0457, 0.0781],
        [0.0940, 0.0379],
        [0.0951, 0.0375],
        [0.0474, 0.0752],
        [0.0487, 0.0733],
        [0.0461, 0.0773],
        [0.0471, 0.0758],
        [0.0467, 0.0764],
        [0.0471, 0.0758],
        [0.0469, 0.0760],
        [0.0850, 0.0420],
        [0.0518, 0.0689]], device='cuda:0')
 Batch: 11 of auxiliary classification Duration: 0:00:00.427925
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.1458e-06, 6.1512e-05],
        [2.9206e-06, 1.5020e-05],
        [2.3186e-05, 2.0444e-05],
        [1.0669e-05, 1.3292e-05],
        [9.2983e-06, 3.8743e-06],
        [7.7486e-07, 4.0233e-05],
        [2.3305e-05, 1.9014e-05],
        [5.3644e-07, 3.5405e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0918, 0.1590],
        [0.1044, 0.1397],
        [0.1510, 0.0966],
        [0.1385, 0.1053],
        [0.1798, 0.0812],
        [0.0904, 0.1613],
        [0.1539, 0.0948],
        [0.0901, 0.1620]], device='cuda:0')
 Batch: 12 of auxiliary classification Duration: 0:00:00.190575
acc:  0.955
Time taken to execute the en SA task with prompt type auxiliary, variation 9 and batchsize 16: 0:00:05.140522
path ['42', 'en', 'bloomz-mt', 'SA', 'auxiliary', 'prompt_id_9']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type modal has 10 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06],
        [6.1989e-06, 8.8811e-06]], device='cuda:0') torch.Size([93, 2])
answers_probs just softmax dim 0: tensor([[0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108]], device='cuda:0')
tensor([[0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108],
        [0.0108, 0.0108]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.2718e-06, 9.0480e-05],
        [2.3842e-06, 4.0412e-05],
        [3.4571e-06, 1.0729e-06],
        [2.5630e-06, 4.2737e-05],
        [1.3709e-06, 2.7120e-05],
        [1.1325e-06, 3.7789e-05],
        [1.5497e-06, 3.5286e-05],
        [5.9605e-07, 2.4617e-05],
        [1.8179e-05, 1.3947e-05],
        [1.9073e-06, 4.5300e-05],
        [3.6359e-06, 6.3300e-05],
        [1.7107e-05, 1.3947e-05],
        [9.4175e-06, 5.2392e-05],
        [2.3842e-07, 1.7345e-05],
        [8.9407e-06, 4.6194e-05],
        [2.3842e-07, 1.9252e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0554, 0.0669],
        [0.0544, 0.0681],
        [0.1103, 0.0336],
        [0.0544, 0.0681],
        [0.0540, 0.0687],
        [0.0530, 0.0700],
        [0.0536, 0.0691],
        [0.0527, 0.0704],
        [0.0906, 0.0409],
        [0.0536, 0.0692],
        [0.0543, 0.0682],
        [0.0892, 0.0415],
        [0.0599, 0.0619],
        [0.0521, 0.0711],
        [0.0605, 0.0613],
        [0.0521, 0.0712]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.408218
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5570e-05, 1.5259e-05],
        [9.0003e-06, 7.5698e-06],
        [1.2219e-05, 6.7353e-06],
        [2.2650e-06, 5.6326e-05],
        [3.5763e-07, 2.1875e-05],
        [4.2915e-06, 5.9843e-05],
        [1.2994e-05, 5.3048e-06],
        [4.4107e-06, 6.8188e-05],
        [1.4961e-05, 6.7353e-06],
        [2.3723e-05, 2.8193e-05],
        [2.1279e-05, 3.2485e-05],
        [4.1723e-07, 6.0201e-06],
        [3.5226e-05, 3.7193e-05],
        [1.4901e-05, 9.4771e-06],
        [5.9605e-07, 2.2829e-05],
        [5.2452e-06, 6.3062e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0799, 0.0455],
        [0.0735, 0.0494],
        [0.0814, 0.0446],
        [0.0444, 0.0818],
        [0.0434, 0.0837],
        [0.0457, 0.0795],
        [0.0869, 0.0418],
        [0.0454, 0.0800],
        [0.0851, 0.0427],
        [0.0674, 0.0539],
        [0.0634, 0.0572],
        [0.0456, 0.0797],
        [0.0695, 0.0523],
        [0.0787, 0.0462],
        [0.0438, 0.0829],
        [0.0461, 0.0788]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.540174
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6987e-05, 1.6868e-05],
        [3.1471e-05, 4.5419e-05],
        [1.0848e-05, 1.1206e-05],
        [1.5676e-05, 1.1027e-05],
        [9.5367e-06, 5.7817e-06],
        [1.9729e-05, 1.4305e-05],
        [2.9802e-07, 9.5367e-06],
        [1.0312e-05, 3.5763e-06],
        [2.7478e-05, 2.7895e-05],
        [1.1146e-05, 5.9605e-06],
        [0.0000e+00, 2.2054e-06],
        [8.4639e-06, 6.1631e-05],
        [1.8477e-05, 1.5318e-05],
        [2.3365e-05, 4.8280e-05],
        [3.0518e-05, 1.7405e-05],
        [8.7619e-06, 2.9802e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0631, 0.0588],
        [0.0575, 0.0645],
        [0.0625, 0.0594],
        [0.0687, 0.0540],
        [0.0712, 0.0521],
        [0.0682, 0.0544],
        [0.0394, 0.0942],
        [0.0803, 0.0462],
        [0.0628, 0.0591],
        [0.0733, 0.0506],
        [0.0382, 0.0971],
        [0.0431, 0.0860],
        [0.0660, 0.0562],
        [0.0529, 0.0701],
        [0.0722, 0.0514],
        [0.0806, 0.0460]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.335290
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9848e-05, 1.1146e-05],
        [3.2127e-05, 2.2471e-05],
        [1.7881e-07, 1.7941e-05],
        [1.3590e-05, 3.8743e-06],
        [2.6226e-06, 3.8266e-05],
        [3.1590e-06, 3.8445e-05],
        [2.4438e-06, 2.3842e-07],
        [2.1458e-06, 5.6148e-05],
        [1.9670e-06, 4.2021e-05],
        [2.9802e-07, 2.0683e-05],
        [2.6524e-05, 1.4663e-05],
        [1.6928e-05, 1.0192e-05],
        [1.1325e-06, 3.1531e-05],
        [2.6584e-05, 1.2279e-05],
        [2.8253e-05, 1.9610e-05],
        [1.2815e-05, 6.9737e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0755, 0.0466],
        [0.0717, 0.0491],
        [0.0402, 0.0875],
        [0.0867, 0.0406],
        [0.0424, 0.0829],
        [0.0430, 0.0819],
        [0.0990, 0.0355],
        [0.0413, 0.0852],
        [0.0416, 0.0845],
        [0.0404, 0.0871],
        [0.0758, 0.0464],
        [0.0743, 0.0474],
        [0.0412, 0.0854],
        [0.0789, 0.0446],
        [0.0718, 0.0490],
        [0.0761, 0.0463]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.428484
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 3.6895e-05],
        [6.5565e-07, 1.8477e-05],
        [1.5736e-05, 6.3777e-06],
        [3.5226e-05, 1.8418e-05],
        [2.8610e-06, 4.2915e-05],
        [6.5565e-07, 2.6822e-05],
        [6.4373e-06, 3.5763e-06],
        [7.7486e-07, 3.6657e-05],
        [1.0133e-06, 3.5346e-05],
        [2.4080e-05, 6.1512e-05],
        [2.6226e-06, 5.7995e-05],
        [9.5367e-06, 3.3975e-06],
        [1.2755e-05, 5.1856e-06],
        [2.9802e-07, 1.4424e-05],
        [5.3644e-07, 1.3709e-05],
        [1.8358e-05, 6.9141e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0784],
        [0.0456, 0.0776],
        [0.0898, 0.0394],
        [0.0850, 0.0416],
        [0.0469, 0.0754],
        [0.0451, 0.0784],
        [0.0838, 0.0422],
        [0.0450, 0.0786],
        [0.0453, 0.0781],
        [0.0584, 0.0606],
        [0.0460, 0.0769],
        [0.0921, 0.0384],
        [0.0897, 0.0394],
        [0.0450, 0.0787],
        [0.0458, 0.0773],
        [0.0911, 0.0388]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.424565
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9935e-06, 7.7486e-07],
        [1.4842e-05, 1.5378e-05],
        [2.3663e-05, 1.0192e-05],
        [2.2650e-06, 5.6088e-05],
        [1.6093e-06, 4.2975e-05],
        [1.3471e-05, 5.1260e-06],
        [7.5698e-06, 5.2691e-05],
        [1.2517e-05, 1.8060e-05],
        [1.0669e-05, 6.1393e-06],
        [1.5378e-05, 6.6161e-06],
        [1.2934e-05, 6.9737e-06],
        [1.5318e-05, 7.2718e-06],
        [1.0669e-05, 9.0182e-05],
        [6.4373e-06, 3.4571e-06],
        [1.6332e-05, 3.8743e-06],
        [1.0014e-05, 3.4571e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0828, 0.0437],
        [0.0586, 0.0618],
        [0.0721, 0.0502],
        [0.0373, 0.0972],
        [0.0372, 0.0974],
        [0.0740, 0.0490],
        [0.0406, 0.0891],
        [0.0540, 0.0671],
        [0.0676, 0.0536],
        [0.0721, 0.0502],
        [0.0686, 0.0528],
        [0.0706, 0.0513],
        [0.0398, 0.0909],
        [0.0687, 0.0527],
        [0.0804, 0.0450],
        [0.0754, 0.0480]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.404534
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9372e-05, 1.1921e-05],
        [2.8014e-06, 5.7340e-05],
        [1.4305e-06, 6.1572e-05],
        [7.7486e-07, 2.8491e-05],
        [1.2517e-06, 4.4346e-05],
        [1.5736e-05, 6.3777e-06],
        [1.3113e-06, 2.4915e-05],
        [3.1590e-06, 3.5763e-07],
        [3.1352e-05, 2.5392e-05],
        [1.4305e-06, 5.1022e-05],
        [2.8014e-06, 4.3452e-05],
        [2.9802e-07, 1.9252e-05],
        [1.2219e-05, 8.0466e-06],
        [3.3379e-06, 7.0930e-05],
        [2.0266e-06, 4.6432e-05],
        [2.1875e-05, 5.7638e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0860, 0.0415],
        [0.0485, 0.0736],
        [0.0474, 0.0754],
        [0.0475, 0.0751],
        [0.0476, 0.0751],
        [0.0943, 0.0379],
        [0.0487, 0.0734],
        [0.1137, 0.0314],
        [0.0804, 0.0444],
        [0.0476, 0.0751],
        [0.0492, 0.0726],
        [0.0470, 0.0760],
        [0.0846, 0.0422],
        [0.0484, 0.0738],
        [0.0483, 0.0740],
        [0.0610, 0.0586]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.337769
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3259e-05, 1.2457e-05],
        [1.2159e-05, 1.0371e-05],
        [1.7047e-05, 1.5199e-05],
        [2.9802e-06, 3.5763e-07],
        [8.9407e-07, 2.4974e-05],
        [7.7486e-07, 2.6464e-05],
        [5.1260e-06, 7.7367e-05],
        [5.3644e-07, 2.7180e-05],
        [8.9407e-06, 5.7220e-06],
        [1.3947e-05, 1.0133e-05],
        [1.0192e-05, 6.3181e-06],
        [5.3644e-07, 2.8729e-05],
        [1.9073e-06, 4.5002e-05],
        [6.8545e-06, 8.7917e-05],
        [9.3579e-06, 5.7817e-06],
        [2.2590e-05, 8.6427e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0841, 0.0421],
        [0.0697, 0.0509],
        [0.0690, 0.0514],
        [0.0993, 0.0357],
        [0.0421, 0.0843],
        [0.0418, 0.0848],
        [0.0433, 0.0820],
        [0.0414, 0.0856],
        [0.0748, 0.0474],
        [0.0725, 0.0489],
        [0.0754, 0.0471],
        [0.0414, 0.0857],
        [0.0423, 0.0838],
        [0.0437, 0.0812],
        [0.0754, 0.0470],
        [0.0838, 0.0423]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.399263
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 3.3796e-05],
        [1.4901e-05, 8.8811e-06],
        [6.5565e-07, 3.2842e-05],
        [1.3947e-05, 6.9141e-06],
        [1.9729e-05, 7.3314e-06],
        [1.0133e-06, 6.7651e-05],
        [3.8743e-06, 5.2691e-05],
        [6.5565e-07, 3.7909e-05],
        [1.4305e-05, 2.2888e-05],
        [2.3484e-05, 1.1742e-05],
        [2.6822e-06, 4.1723e-07],
        [7.1526e-07, 2.3663e-05],
        [7.7486e-07, 3.5286e-05],
        [2.2888e-05, 6.1750e-05],
        [1.3173e-05, 1.5140e-05],
        [9.4771e-06, 4.7684e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0826],
        [0.0788, 0.0451],
        [0.0430, 0.0827],
        [0.0822, 0.0432],
        [0.0874, 0.0407],
        [0.0428, 0.0831],
        [0.0451, 0.0787],
        [0.0429, 0.0829],
        [0.0619, 0.0574],
        [0.0821, 0.0433],
        [0.1001, 0.0355],
        [0.0434, 0.0819],
        [0.0431, 0.0825],
        [0.0552, 0.0643],
        [0.0671, 0.0529],
        [0.0820, 0.0433]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.405412
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2398e-05, 1.0431e-05],
        [9.5367e-07, 3.8207e-05],
        [5.2452e-06, 5.9366e-05],
        [3.3379e-06, 6.2943e-05],
        [1.5497e-06, 5.1558e-05],
        [1.6689e-06, 4.9055e-05],
        [2.1875e-05, 1.9133e-05],
        [1.0729e-06, 3.3855e-05],
        [7.1526e-07, 3.6955e-05],
        [3.7551e-06, 5.9605e-07],
        [1.1921e-07, 1.4842e-05],
        [1.9670e-06, 5.2392e-05],
        [6.9737e-06, 2.3842e-06],
        [3.1471e-05, 2.4319e-05],
        [1.4901e-06, 3.8624e-05],
        [3.5763e-07, 2.2829e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0818, 0.0438],
        [0.0487, 0.0735],
        [0.0516, 0.0694],
        [0.0500, 0.0716],
        [0.0490, 0.0732],
        [0.0491, 0.0729],
        [0.0810, 0.0442],
        [0.0490, 0.0730],
        [0.0485, 0.0739],
        [0.1127, 0.0318],
        [0.0479, 0.0747],
        [0.0493, 0.0726],
        [0.1002, 0.0357],
        [0.0836, 0.0428],
        [0.0493, 0.0726],
        [0.0483, 0.0742]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.428264
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-06, 1.7881e-06],
        [1.6689e-06, 5.8770e-05],
        [4.3511e-06, 6.9141e-05],
        [2.8968e-05, 2.7239e-05],
        [5.9009e-06, 1.9670e-06],
        [6.5565e-07, 2.1696e-05],
        [3.7551e-06, 6.8665e-05],
        [3.2783e-05, 1.2338e-05],
        [8.3447e-07, 2.9743e-05],
        [2.0266e-06, 4.9710e-05],
        [2.1100e-05, 1.6332e-05],
        [2.4199e-05, 1.5616e-05],
        [1.1921e-06, 4.2856e-05],
        [1.2934e-05, 6.1393e-06],
        [1.1325e-06, 3.8683e-05],
        [2.8133e-05, 2.1935e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0857, 0.0415],
        [0.0438, 0.0814],
        [0.0452, 0.0788],
        [0.0713, 0.0500],
        [0.0901, 0.0395],
        [0.0438, 0.0812],
        [0.0448, 0.0794],
        [0.0880, 0.0404],
        [0.0438, 0.0814],
        [0.0443, 0.0804],
        [0.0748, 0.0476],
        [0.0782, 0.0455],
        [0.0437, 0.0814],
        [0.0839, 0.0424],
        [0.0438, 0.0813],
        [0.0747, 0.0477]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.453913
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5259e-05, 4.8280e-06],
        [1.6689e-06, 3.4332e-05],
        [4.1723e-07, 6.2585e-06],
        [1.9073e-06, 2.9862e-05],
        [3.1710e-05, 1.9550e-05],
        [8.9407e-07, 3.0041e-05],
        [4.1723e-07, 3.7193e-05],
        [2.0266e-05, 1.3828e-05],
        [3.3617e-05, 1.6928e-05],
        [1.1325e-06, 3.9279e-05],
        [1.9729e-05, 1.7285e-05],
        [1.0371e-05, 1.1742e-05],
        [3.6955e-06, 4.9055e-05],
        [3.5763e-07, 2.9087e-05],
        [1.7822e-05, 1.0312e-05],
        [1.1504e-05, 8.4639e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0928, 0.0388],
        [0.0455, 0.0791],
        [0.0462, 0.0779],
        [0.0461, 0.0780],
        [0.0806, 0.0446],
        [0.0447, 0.0805],
        [0.0439, 0.0820],
        [0.0786, 0.0457],
        [0.0844, 0.0426],
        [0.0446, 0.0806],
        [0.0739, 0.0486],
        [0.0694, 0.0518],
        [0.0465, 0.0773],
        [0.0439, 0.0819],
        [0.0818, 0.0440],
        [0.0772, 0.0466]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.361406
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[4.1127e-06, 8.4281e-05],
        [1.2815e-05, 6.3181e-06],
        [1.9670e-06, 5.6446e-05],
        [2.9802e-06, 5.3644e-07],
        [1.7524e-05, 1.0073e-05],
        [1.1921e-07, 1.2875e-05],
        [1.9312e-05, 9.0599e-06],
        [2.1338e-05, 1.1861e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0797, 0.1763],
        [0.1487, 0.0945],
        [0.0787, 0.1786],
        [0.1776, 0.0791],
        [0.1436, 0.0979],
        [0.0768, 0.1830],
        [0.1503, 0.0935],
        [0.1447, 0.0971]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.186079
acc:  0.955
Time taken to execute the en SA task with prompt type modal, variation 0 and batchsize 16: 0:00:05.128941
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06],
        [6.9737e-06, 8.7023e-06]], device='cuda:0') torch.Size([103, 2])
answers_probs just softmax dim 0: tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1590e-06, 7.7844e-05],
        [1.3709e-06, 3.4928e-05],
        [1.9908e-05, 1.3471e-05],
        [7.3314e-06, 4.3511e-06],
        [1.7881e-07, 2.0742e-05],
        [2.0504e-05, 1.3053e-05],
        [3.2842e-05, 1.1802e-05],
        [1.5974e-05, 1.0788e-05],
        [1.2517e-06, 4.6909e-05],
        [2.0504e-05, 1.2696e-05],
        [7.7486e-07, 4.1485e-05],
        [1.2517e-05, 1.3471e-05],
        [2.8431e-05, 1.7762e-05],
        [6.5565e-07, 1.7285e-05],
        [2.4438e-06, 5.4777e-05],
        [2.7835e-05, 2.2888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0439, 0.0820],
        [0.0438, 0.0821],
        [0.0766, 0.0470],
        [0.0790, 0.0455],
        [0.0426, 0.0845],
        [0.0777, 0.0463],
        [0.0880, 0.0409],
        [0.0766, 0.0469],
        [0.0433, 0.0831],
        [0.0782, 0.0460],
        [0.0430, 0.0837],
        [0.0683, 0.0527],
        [0.0781, 0.0461],
        [0.0438, 0.0822],
        [0.0440, 0.0817],
        [0.0730, 0.0493]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.430099
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3425e-05, 3.0339e-05],
        [6.0797e-06, 8.7202e-05],
        [6.5565e-07, 3.1352e-05],
        [8.3447e-07, 3.6716e-05],
        [1.2040e-05, 6.7949e-06],
        [7.9870e-06, 4.7684e-06],
        [1.6987e-05, 1.4424e-05],
        [1.5199e-05, 6.3181e-06],
        [1.5020e-05, 4.5300e-06],
        [2.0862e-06, 5.9485e-05],
        [4.1127e-06, 7.5161e-05],
        [1.9014e-05, 9.6560e-06],
        [2.0266e-06, 4.6790e-05],
        [2.2650e-06, 7.1287e-05],
        [1.5438e-05, 1.1325e-05],
        [2.9802e-07, 8.5235e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0665, 0.0538],
        [0.0459, 0.0779],
        [0.0439, 0.0814],
        [0.0440, 0.0813],
        [0.0815, 0.0439],
        [0.0805, 0.0444],
        [0.0739, 0.0484],
        [0.0872, 0.0410],
        [0.0928, 0.0385],
        [0.0445, 0.0803],
        [0.0453, 0.0789],
        [0.0835, 0.0428],
        [0.0449, 0.0797],
        [0.0444, 0.0806],
        [0.0766, 0.0467],
        [0.0445, 0.0804]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.357626
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 3.6597e-05],
        [4.7088e-06, 2.3246e-06],
        [3.5763e-07, 2.9445e-05],
        [2.9802e-07, 3.1173e-05],
        [2.3961e-05, 6.2585e-05],
        [1.1325e-06, 4.8995e-05],
        [7.2718e-06, 2.5034e-06],
        [2.4498e-05, 1.2636e-05],
        [1.3709e-06, 6.2525e-05],
        [1.1921e-06, 4.6670e-05],
        [1.3709e-06, 4.0770e-05],
        [7.7486e-07, 3.9458e-05],
        [1.9133e-05, 8.1658e-06],
        [1.9431e-05, 1.2338e-05],
        [3.9935e-06, 7.6592e-05],
        [2.1100e-05, 1.9372e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0458, 0.0780],
        [0.0885, 0.0403],
        [0.0459, 0.0778],
        [0.0458, 0.0780],
        [0.0598, 0.0597],
        [0.0464, 0.0770],
        [0.0954, 0.0374],
        [0.0877, 0.0407],
        [0.0463, 0.0771],
        [0.0465, 0.0768],
        [0.0468, 0.0762],
        [0.0462, 0.0773],
        [0.0914, 0.0391],
        [0.0836, 0.0427],
        [0.0476, 0.0750],
        [0.0764, 0.0468]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.452646
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.5882e-05],
        [2.8551e-05, 2.6822e-05],
        [2.3842e-07, 2.0266e-05],
        [9.5367e-07, 4.8995e-05],
        [4.2915e-06, 6.4135e-05],
        [2.9802e-07, 7.0930e-06],
        [7.1526e-07, 4.0948e-05],
        [2.6464e-05, 8.4162e-05],
        [2.7418e-05, 1.5378e-05],
        [3.1054e-05, 2.1517e-05],
        [7.1526e-07, 2.9564e-05],
        [2.4378e-05, 1.0192e-05],
        [3.7134e-05, 1.9133e-05],
        [4.1723e-07, 2.5451e-05],
        [2.3842e-07, 1.1086e-05],
        [6.5565e-07, 3.3855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0488, 0.0742],
        [0.0803, 0.0451],
        [0.0485, 0.0747],
        [0.0489, 0.0741],
        [0.0510, 0.0710],
        [0.0499, 0.0726],
        [0.0488, 0.0743],
        [0.0609, 0.0595],
        [0.0910, 0.0398],
        [0.0865, 0.0419],
        [0.0491, 0.0738],
        [0.0970, 0.0373],
        [0.0927, 0.0391],
        [0.0487, 0.0744],
        [0.0490, 0.0740],
        [0.0489, 0.0742]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.548251
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1127e-06, 7.1406e-05],
        [3.7551e-06, 1.0157e-04],
        [2.3246e-06, 5.2869e-05],
        [6.5565e-07, 2.4974e-05],
        [2.3246e-06, 6.0201e-05],
        [4.0531e-06, 6.7413e-05],
        [2.0504e-05, 9.0003e-06],
        [1.8597e-05, 3.0398e-05],
        [1.7762e-05, 9.0003e-06],
        [1.0192e-05, 6.0797e-06],
        [2.0504e-05, 1.6212e-05],
        [1.9670e-05, 1.1384e-05],
        [1.8179e-05, 1.0371e-05],
        [5.0664e-06, 1.0729e-06],
        [2.9504e-05, 2.0921e-05],
        [5.9605e-08, 1.3292e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0437, 0.0816],
        [0.0429, 0.0831],
        [0.0432, 0.0826],
        [0.0425, 0.0840],
        [0.0430, 0.0830],
        [0.0438, 0.0814],
        [0.0830, 0.0430],
        [0.0605, 0.0589],
        [0.0804, 0.0444],
        [0.0775, 0.0460],
        [0.0724, 0.0493],
        [0.0780, 0.0457],
        [0.0783, 0.0456],
        [0.0946, 0.0377],
        [0.0744, 0.0480],
        [0.0416, 0.0858]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.410843
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1384e-05, 6.4969e-06],
        [2.5213e-05, 1.2994e-05],
        [1.5497e-06, 5.3585e-05],
        [1.5497e-06, 5.7340e-05],
        [1.6749e-05, 7.6294e-06],
        [3.3081e-05, 1.6093e-05],
        [2.5034e-06, 4.8161e-05],
        [3.9339e-06, 1.2517e-06],
        [1.2934e-05, 1.0908e-05],
        [2.9385e-05, 1.0550e-05],
        [1.7762e-05, 4.8876e-06],
        [8.3447e-07, 7.2598e-05],
        [1.8477e-06, 5.1737e-05],
        [1.3590e-05, 7.9870e-06],
        [1.0252e-05, 6.6757e-06],
        [1.1921e-06, 3.4332e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0733, 0.0483],
        [0.0750, 0.0472],
        [0.0399, 0.0889],
        [0.0398, 0.0890],
        [0.0770, 0.0460],
        [0.0759, 0.0466],
        [0.0407, 0.0870],
        [0.0828, 0.0428],
        [0.0667, 0.0531],
        [0.0809, 0.0438],
        [0.0849, 0.0417],
        [0.0392, 0.0904],
        [0.0401, 0.0883],
        [0.0728, 0.0487],
        [0.0710, 0.0499],
        [0.0401, 0.0884]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.403981
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 3.8326e-05],
        [2.9802e-07, 2.3067e-05],
        [1.4305e-06, 4.4882e-05],
        [1.6868e-05, 6.6757e-06],
        [1.7881e-07, 1.4961e-05],
        [1.1802e-05, 4.3511e-06],
        [3.0577e-05, 1.5616e-05],
        [1.7881e-07, 2.5034e-05],
        [2.8014e-06, 1.4842e-05],
        [2.9504e-05, 2.7299e-05],
        [1.3709e-06, 3.1292e-05],
        [2.3842e-06, 6.6042e-05],
        [2.7895e-05, 6.9559e-05],
        [1.1921e-07, 1.4246e-05],
        [1.1623e-05, 4.4107e-06],
        [4.7684e-07, 2.3007e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0476, 0.0753],
        [0.0471, 0.0761],
        [0.0480, 0.0747],
        [0.0952, 0.0376],
        [0.0471, 0.0761],
        [0.0966, 0.0371],
        [0.0901, 0.0397],
        [0.0468, 0.0765],
        [0.0545, 0.0657],
        [0.0782, 0.0458],
        [0.0485, 0.0739],
        [0.0482, 0.0744],
        [0.0619, 0.0579],
        [0.0469, 0.0764],
        [0.0960, 0.0373],
        [0.0475, 0.0755]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.337236
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 5.6624e-05],
        [2.6286e-05, 1.7345e-05],
        [1.3888e-05, 1.1563e-05],
        [2.3842e-07, 2.3127e-05],
        [5.9605e-07, 1.3173e-05],
        [1.6093e-06, 5.1498e-05],
        [1.1206e-05, 6.6161e-06],
        [1.1265e-05, 9.8348e-06],
        [2.1100e-05, 1.7345e-05],
        [2.2650e-06, 6.2227e-05],
        [5.3644e-07, 3.5226e-05],
        [1.3471e-05, 6.4969e-06],
        [2.2650e-06, 5.5850e-05],
        [1.8835e-05, 8.1658e-06],
        [1.7881e-07, 2.2471e-05],
        [3.0220e-05, 4.6790e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0453, 0.0797],
        [0.0811, 0.0445],
        [0.0766, 0.0471],
        [0.0449, 0.0804],
        [0.0464, 0.0778],
        [0.0458, 0.0788],
        [0.0833, 0.0433],
        [0.0757, 0.0476],
        [0.0769, 0.0469],
        [0.0460, 0.0784],
        [0.0451, 0.0800],
        [0.0872, 0.0414],
        [0.0462, 0.0781],
        [0.0892, 0.0404],
        [0.0448, 0.0806],
        [0.0657, 0.0549]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.317883
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 3.5763e-07],
        [3.4571e-06, 7.2658e-05],
        [3.4630e-05, 4.6611e-05],
        [1.6093e-06, 5.8174e-05],
        [8.9407e-07, 4.4703e-05],
        [1.0669e-05, 6.6400e-05],
        [2.1875e-05, 1.1861e-05],
        [3.8147e-05, 2.6047e-05],
        [1.0312e-05, 7.9870e-06],
        [5.9605e-07, 3.6836e-05],
        [2.3842e-06, 5.0426e-05],
        [1.8239e-05, 7.9274e-06],
        [1.3590e-05, 1.8001e-05],
        [1.0312e-05, 3.5763e-06],
        [2.0623e-05, 1.2398e-05],
        [2.2113e-05, 1.1861e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0954, 0.0375],
        [0.0416, 0.0860],
        [0.0609, 0.0587],
        [0.0409, 0.0876],
        [0.0406, 0.0882],
        [0.0457, 0.0783],
        [0.0761, 0.0470],
        [0.0720, 0.0497],
        [0.0699, 0.0512],
        [0.0404, 0.0885],
        [0.0416, 0.0860],
        [0.0798, 0.0448],
        [0.0611, 0.0585],
        [0.0836, 0.0428],
        [0.0743, 0.0482],
        [0.0762, 0.0469]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.339230
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 3.0220e-05],
        [4.1723e-07, 3.0756e-05],
        [1.1921e-06, 4.3452e-05],
        [3.6776e-05, 2.0623e-05],
        [1.5736e-05, 7.5102e-06],
        [2.2471e-05, 1.0192e-05],
        [1.4305e-06, 4.8280e-05],
        [2.3842e-07, 1.7047e-05],
        [1.0848e-05, 3.6955e-06],
        [4.4107e-06, 7.0989e-05],
        [1.4901e-06, 2.0504e-05],
        [2.9206e-06, 5.6803e-05],
        [2.1577e-05, 8.0466e-06],
        [3.5763e-06, 7.7486e-05],
        [1.5557e-05, 6.7353e-06],
        [3.0994e-06, 5.5194e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0456, 0.0774],
        [0.0452, 0.0782],
        [0.0458, 0.0771],
        [0.0846, 0.0417],
        [0.0877, 0.0403],
        [0.0887, 0.0398],
        [0.0459, 0.0770],
        [0.0452, 0.0781],
        [0.0940, 0.0376],
        [0.0473, 0.0747],
        [0.0477, 0.0740],
        [0.0468, 0.0754],
        [0.0924, 0.0382],
        [0.0466, 0.0758],
        [0.0896, 0.0394],
        [0.0470, 0.0751]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.357117
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 3.4750e-05],
        [1.8001e-05, 1.0848e-05],
        [6.3181e-06, 9.9182e-05],
        [1.4424e-05, 6.0201e-06],
        [1.6809e-05, 9.4175e-06],
        [3.2187e-06, 7.6413e-05],
        [1.6570e-05, 1.7583e-05],
        [5.9605e-07, 3.9697e-05],
        [3.0398e-06, 4.1723e-07],
        [2.7478e-05, 3.7551e-05],
        [3.0100e-05, 1.8001e-05],
        [8.5831e-06, 3.4571e-06],
        [1.4901e-06, 6.1274e-05],
        [5.9605e-07, 3.6478e-05],
        [1.5795e-05, 1.4603e-05],
        [1.9014e-05, 7.3314e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0404, 0.0880],
        [0.0741, 0.0479],
        [0.0422, 0.0842],
        [0.0804, 0.0442],
        [0.0754, 0.0471],
        [0.0414, 0.0859],
        [0.0645, 0.0551],
        [0.0403, 0.0881],
        [0.0957, 0.0371],
        [0.0606, 0.0586],
        [0.0743, 0.0478],
        [0.0810, 0.0439],
        [0.0407, 0.0873],
        [0.0404, 0.0880],
        [0.0668, 0.0532],
        [0.0818, 0.0435]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.403322
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4842e-05, 7.9274e-06],
        [7.5102e-06, 6.7770e-05],
        [1.3173e-05, 5.0068e-06],
        [1.6093e-06, 5.2154e-05],
        [1.5974e-05, 5.3644e-06],
        [1.6928e-05, 5.8413e-06],
        [3.5763e-07, 2.0385e-05],
        [1.6093e-06, 6.1333e-05],
        [2.6822e-06, 5.2631e-05],
        [3.3498e-05, 2.4319e-05],
        [1.9252e-05, 8.1658e-06],
        [1.5318e-05, 8.4043e-06],
        [6.9141e-06, 9.4473e-05],
        [5.1260e-06, 8.9407e-07],
        [2.6703e-05, 1.3828e-05],
        [1.0848e-05, 8.3447e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0749, 0.0470],
        [0.0431, 0.0816],
        [0.0806, 0.0437],
        [0.0402, 0.0875],
        [0.0826, 0.0427],
        [0.0821, 0.0429],
        [0.0397, 0.0886],
        [0.0401, 0.0879],
        [0.0410, 0.0859],
        [0.0697, 0.0505],
        [0.0788, 0.0447],
        [0.0745, 0.0473],
        [0.0418, 0.0842],
        [0.0915, 0.0385],
        [0.0755, 0.0467],
        [0.0438, 0.0804]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.425025
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.1265e-05, 1.0955e-04],
        [2.2411e-05, 1.7881e-05],
        [4.1723e-07, 4.9889e-05],
        [3.2187e-06, 2.9802e-07],
        [1.2338e-05, 1.3053e-05],
        [3.3796e-05, 3.9518e-05],
        [1.9848e-05, 1.3769e-05],
        [7.7486e-07, 3.0816e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0886, 0.1612],
        [0.1408, 0.1014],
        [0.0814, 0.1755],
        [0.2016, 0.0708],
        [0.1312, 0.1088],
        [0.1280, 0.1116],
        [0.1457, 0.0980],
        [0.0827, 0.1726]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.231527
acc:  0.975
Time taken to execute the en SA task with prompt type modal, variation 1 and batchsize 16: 0:00:05.030208
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05],
        [7.0333e-06, 1.4842e-05]], device='cuda:0') torch.Size([109, 2])
answers_probs just softmax dim 0: tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4736e-05, 2.3246e-05],
        [2.1696e-05, 7.3493e-05],
        [5.1856e-06, 8.9347e-05],
        [1.4722e-05, 9.8944e-06],
        [1.9193e-05, 1.9968e-05],
        [1.9491e-05, 2.0742e-05],
        [1.6391e-05, 9.8348e-06],
        [5.3644e-07, 8.1062e-06],
        [2.3842e-07, 2.4319e-05],
        [1.5557e-05, 8.9407e-06],
        [1.4544e-05, 7.6890e-06],
        [2.9206e-06, 1.3661e-04],
        [2.2650e-06, 5.3167e-05],
        [3.5763e-07, 1.9729e-05],
        [1.5438e-05, 2.4259e-05],
        [1.2398e-05, 7.8678e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0721, 0.0507],
        [0.0541, 0.0676],
        [0.0455, 0.0804],
        [0.0783, 0.0467],
        [0.0703, 0.0520],
        [0.0699, 0.0523],
        [0.0805, 0.0455],
        [0.0458, 0.0798],
        [0.0435, 0.0841],
        [0.0813, 0.0450],
        [0.0829, 0.0441],
        [0.0440, 0.0832],
        [0.0449, 0.0815],
        [0.0439, 0.0834],
        [0.0636, 0.0576],
        [0.0794, 0.0461]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.571523
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.0650e-05, 4.4644e-05],
        [1.5199e-05, 1.0967e-05],
        [5.4836e-06, 1.0210e-04],
        [2.5153e-05, 3.6895e-05],
        [3.5763e-06, 7.1704e-05],
        [2.9802e-06, 5.3644e-07],
        [1.2636e-05, 7.3910e-06],
        [1.1921e-06, 4.6372e-05],
        [2.3842e-07, 2.4974e-05],
        [2.5034e-05, 1.6809e-05],
        [4.0114e-05, 4.0412e-05],
        [2.7895e-05, 3.3438e-05],
        [2.2054e-06, 3.5346e-05],
        [9.7156e-06, 6.4850e-05],
        [5.1260e-06, 7.2658e-05],
        [2.3842e-06, 5.3108e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0713, 0.0510],
        [0.0791, 0.0459],
        [0.0466, 0.0780],
        [0.0664, 0.0547],
        [0.0464, 0.0783],
        [0.1033, 0.0352],
        [0.0832, 0.0437],
        [0.0454, 0.0800],
        [0.0447, 0.0813],
        [0.0805, 0.0451],
        [0.0728, 0.0499],
        [0.0697, 0.0521],
        [0.0469, 0.0774],
        [0.0504, 0.0720],
        [0.0473, 0.0768],
        [0.0462, 0.0786]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.361909
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4080e-05, 1.6332e-05],
        [1.3709e-05, 1.1981e-05],
        [6.5565e-07, 3.2485e-05],
        [2.2650e-06, 8.5890e-05],
        [4.0352e-05, 3.3200e-05],
        [4.1664e-05, 3.6776e-05],
        [2.9802e-06, 2.3842e-07],
        [2.5630e-06, 5.9903e-05],
        [1.3113e-06, 5.0902e-05],
        [1.4007e-05, 2.3842e-05],
        [4.3511e-06, 8.3506e-05],
        [2.1756e-05, 8.3327e-05],
        [1.0192e-05, 7.7486e-06],
        [1.6749e-05, 1.2159e-05],
        [1.2517e-06, 5.2989e-05],
        [2.5988e-05, 3.5524e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0775, 0.0467],
        [0.0728, 0.0497],
        [0.0436, 0.0831],
        [0.0438, 0.0826],
        [0.0739, 0.0489],
        [0.0726, 0.0498],
        [0.1078, 0.0336],
        [0.0445, 0.0813],
        [0.0438, 0.0826],
        [0.0618, 0.0585],
        [0.0449, 0.0806],
        [0.0525, 0.0689],
        [0.0754, 0.0480],
        [0.0762, 0.0475],
        [0.0437, 0.0828],
        [0.0652, 0.0555]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.446653
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8775e-05, 1.0550e-05],
        [2.3842e-07, 1.8954e-05],
        [1.7881e-06, 5.2452e-05],
        [2.8014e-06, 8.2493e-05],
        [4.5896e-06, 9.1374e-05],
        [1.1444e-05, 1.1724e-04],
        [1.8001e-05, 2.4021e-05],
        [1.7405e-05, 1.0252e-05],
        [3.4571e-06, 7.6234e-05],
        [6.7949e-06, 1.2696e-04],
        [2.1994e-05, 1.2815e-05],
        [3.5763e-07, 4.3392e-05],
        [1.3113e-05, 3.6776e-05],
        [4.2319e-06, 5.9605e-07],
        [1.9670e-06, 5.1081e-05],
        [5.0187e-05, 5.6863e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0868, 0.0415],
        [0.0463, 0.0777],
        [0.0473, 0.0761],
        [0.0473, 0.0761],
        [0.0480, 0.0750],
        [0.0500, 0.0720],
        [0.0702, 0.0513],
        [0.0859, 0.0419],
        [0.0478, 0.0753],
        [0.0481, 0.0748],
        [0.0861, 0.0418],
        [0.0461, 0.0780],
        [0.0595, 0.0605],
        [0.1099, 0.0328],
        [0.0475, 0.0758],
        [0.0731, 0.0492]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.401890
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8610e-06, 4.1723e-07],
        [1.3232e-05, 5.1856e-06],
        [3.6240e-05, 4.5836e-05],
        [1.5497e-06, 6.1154e-05],
        [1.1325e-06, 4.2915e-05],
        [1.4782e-05, 1.1146e-05],
        [1.0133e-06, 3.6120e-05],
        [1.7881e-05, 7.9870e-06],
        [1.5736e-05, 1.3173e-05],
        [8.3447e-07, 3.4213e-05],
        [4.7684e-07, 1.7583e-05],
        [1.4305e-06, 4.8518e-05],
        [2.4080e-05, 4.2200e-05],
        [8.2850e-06, 6.0201e-06],
        [1.8358e-05, 2.7537e-05],
        [1.9372e-05, 7.3314e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0980, 0.0365],
        [0.0840, 0.0426],
        [0.0637, 0.0562],
        [0.0420, 0.0852],
        [0.0420, 0.0851],
        [0.0724, 0.0494],
        [0.0421, 0.0850],
        [0.0817, 0.0437],
        [0.0706, 0.0507],
        [0.0419, 0.0853],
        [0.0420, 0.0851],
        [0.0421, 0.0849],
        [0.0589, 0.0607],
        [0.0731, 0.0489],
        [0.0611, 0.0585],
        [0.0846, 0.0423]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.404471
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5914e-05, 1.3649e-05],
        [1.2815e-05, 7.4208e-05],
        [2.4378e-05, 6.4254e-05],
        [2.5034e-06, 4.3571e-05],
        [6.5565e-07, 3.8803e-05],
        [1.8537e-05, 1.5259e-05],
        [2.1160e-05, 3.4869e-05],
        [5.5432e-06, 1.0002e-04],
        [1.7881e-06, 5.7936e-05],
        [1.3709e-06, 4.6670e-05],
        [7.1526e-07, 5.1737e-05],
        [7.1526e-07, 6.3717e-05],
        [4.8280e-06, 1.9670e-06],
        [3.5167e-06, 9.3997e-05],
        [2.0266e-06, 3.9637e-05],
        [3.8147e-06, 6.4135e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0867, 0.0429],
        [0.0586, 0.0634],
        [0.0666, 0.0558],
        [0.0534, 0.0695],
        [0.0514, 0.0722],
        [0.0875, 0.0424],
        [0.0738, 0.0503],
        [0.0533, 0.0697],
        [0.0521, 0.0713],
        [0.0521, 0.0714],
        [0.0513, 0.0724],
        [0.0512, 0.0726],
        [0.1029, 0.0361],
        [0.0524, 0.0708],
        [0.0531, 0.0699],
        [0.0535, 0.0694]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.476299
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-06, 7.1049e-05],
        [6.5565e-07, 4.1068e-05],
        [2.3842e-06, 8.4460e-05],
        [3.4511e-05, 4.7147e-05],
        [3.7849e-05, 3.0637e-05],
        [8.9407e-07, 3.5644e-05],
        [2.1517e-05, 1.1683e-05],
        [1.7881e-06, 6.7115e-05],
        [1.6093e-06, 2.0802e-05],
        [1.0669e-05, 4.8876e-06],
        [1.0014e-05, 1.3101e-04],
        [1.4305e-06, 3.7134e-05],
        [5.9605e-07, 3.9041e-05],
        [7.7486e-07, 4.4227e-05],
        [1.0729e-06, 4.1962e-05],
        [3.3379e-06, 5.2631e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0527, 0.0700],
        [0.0518, 0.0711],
        [0.0525, 0.0703],
        [0.0779, 0.0473],
        [0.0887, 0.0416],
        [0.0523, 0.0705],
        [0.0976, 0.0378],
        [0.0524, 0.0704],
        [0.0548, 0.0672],
        [0.1013, 0.0364],
        [0.0548, 0.0673],
        [0.0530, 0.0696],
        [0.0518, 0.0712],
        [0.0519, 0.0710],
        [0.0523, 0.0704],
        [0.0542, 0.0680]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.361281
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-05, 1.0967e-05],
        [3.7551e-06, 5.4300e-05],
        [4.2319e-06, 1.0455e-04],
        [3.0458e-05, 6.3956e-05],
        [2.0266e-06, 5.5790e-05],
        [1.3947e-05, 7.5698e-06],
        [1.4246e-05, 2.5034e-05],
        [4.7684e-06, 9.8944e-05],
        [2.2113e-05, 1.8895e-05],
        [4.3273e-05, 3.3975e-05],
        [2.4438e-06, 7.2241e-05],
        [8.8811e-06, 3.6359e-06],
        [4.4703e-06, 8.9407e-07],
        [1.0133e-06, 2.9147e-05],
        [1.1265e-05, 8.4639e-06],
        [2.2054e-06, 7.5817e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0781, 0.0461],
        [0.0456, 0.0790],
        [0.0444, 0.0811],
        [0.0590, 0.0611],
        [0.0442, 0.0814],
        [0.0817, 0.0441],
        [0.0614, 0.0587],
        [0.0447, 0.0805],
        [0.0732, 0.0492],
        [0.0748, 0.0481],
        [0.0441, 0.0816],
        [0.0868, 0.0415],
        [0.0983, 0.0366],
        [0.0442, 0.0815],
        [0.0756, 0.0476],
        [0.0439, 0.0820]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.423015
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3975e-06, 6.2108e-05],
        [1.8954e-05, 1.0908e-05],
        [1.3828e-05, 8.2850e-06],
        [4.1127e-06, 8.2493e-05],
        [1.1921e-07, 1.8537e-05],
        [8.3447e-07, 3.0279e-05],
        [9.1791e-06, 7.2122e-06],
        [2.7835e-05, 1.6868e-05],
        [7.9870e-06, 1.1271e-04],
        [2.3246e-06, 6.4969e-05],
        [9.5367e-06, 7.8082e-05],
        [3.5763e-06, 1.1921e-06],
        [1.2875e-05, 8.7023e-06],
        [2.5630e-05, 6.7532e-05],
        [2.9802e-06, 4.3392e-05],
        [2.0862e-06, 7.0155e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0477, 0.0758],
        [0.0855, 0.0423],
        [0.0847, 0.0427],
        [0.0475, 0.0761],
        [0.0456, 0.0793],
        [0.0465, 0.0777],
        [0.0793, 0.0456],
        [0.0845, 0.0428],
        [0.0484, 0.0747],
        [0.0469, 0.0771],
        [0.0505, 0.0716],
        [0.0959, 0.0377],
        [0.0823, 0.0439],
        [0.0597, 0.0606],
        [0.0483, 0.0748],
        [0.0466, 0.0775]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.407099
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.5896e-06, 9.4593e-05],
        [1.7881e-06, 7.4029e-05],
        [1.1921e-06, 4.5240e-05],
        [1.3113e-06, 5.3883e-05],
        [1.7881e-06, 5.5671e-05],
        [2.6345e-05, 3.1769e-05],
        [4.6492e-06, 7.7486e-07],
        [2.5749e-05, 1.9133e-05],
        [1.4067e-05, 1.9312e-05],
        [1.2815e-05, 1.5914e-05],
        [4.1723e-07, 3.0816e-05],
        [2.9624e-05, 6.6280e-05],
        [2.4676e-05, 2.5034e-05],
        [1.5974e-05, 1.5616e-05],
        [9.4175e-06, 1.0908e-05],
        [1.1921e-06, 5.7101e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0471, 0.0775],
        [0.0461, 0.0793],
        [0.0462, 0.0792],
        [0.0461, 0.0793],
        [0.0464, 0.0787],
        [0.0708, 0.0516],
        [0.1060, 0.0345],
        [0.0798, 0.0458],
        [0.0686, 0.0533],
        [0.0703, 0.0520],
        [0.0456, 0.0801],
        [0.0613, 0.0596],
        [0.0739, 0.0494],
        [0.0746, 0.0490],
        [0.0715, 0.0511],
        [0.0459, 0.0796]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.363172
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.2585e-06, 1.2422e-04],
        [3.3557e-05, 4.2796e-05],
        [5.3048e-06, 6.7353e-05],
        [2.3842e-07, 2.3127e-05],
        [1.3709e-06, 6.7532e-05],
        [3.3915e-05, 2.7895e-05],
        [2.1756e-05, 2.3305e-05],
        [9.3579e-06, 8.4043e-06],
        [3.5167e-06, 6.5565e-07],
        [2.3842e-07, 2.1517e-05],
        [6.5565e-07, 3.6955e-05],
        [2.5332e-05, 2.6941e-05],
        [1.7941e-05, 1.8060e-05],
        [1.6570e-05, 1.9968e-05],
        [2.2769e-05, 2.9206e-05],
        [8.4043e-06, 6.5207e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0464, 0.0789],
        [0.0686, 0.0533],
        [0.0476, 0.0769],
        [0.0447, 0.0819],
        [0.0451, 0.0811],
        [0.0765, 0.0478],
        [0.0717, 0.0511],
        [0.0749, 0.0489],
        [0.1027, 0.0356],
        [0.0447, 0.0819],
        [0.0450, 0.0813],
        [0.0718, 0.0510],
        [0.0728, 0.0503],
        [0.0696, 0.0526],
        [0.0685, 0.0534],
        [0.0496, 0.0738]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.406978
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 1.7822e-05],
        [1.5020e-05, 9.0003e-06],
        [2.5034e-05, 3.3438e-05],
        [1.5497e-06, 5.5730e-05],
        [2.7537e-05, 4.2975e-05],
        [2.8491e-05, 2.5332e-05],
        [1.0133e-06, 5.6803e-05],
        [3.7253e-05, 4.3929e-05],
        [2.7478e-05, 2.6405e-05],
        [1.6212e-05, 1.2219e-05],
        [1.5497e-06, 8.3148e-05],
        [1.6928e-05, 1.1802e-05],
        [1.5497e-06, 4.5300e-05],
        [1.9491e-05, 1.0073e-05],
        [8.3447e-07, 4.1902e-05],
        [2.9325e-05, 2.7776e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0820],
        [0.0807, 0.0455],
        [0.0663, 0.0554],
        [0.0444, 0.0827],
        [0.0638, 0.0575],
        [0.0733, 0.0500],
        [0.0440, 0.0835],
        [0.0683, 0.0537],
        [0.0719, 0.0510],
        [0.0764, 0.0480],
        [0.0440, 0.0834],
        [0.0778, 0.0471],
        [0.0446, 0.0822],
        [0.0835, 0.0439],
        [0.0440, 0.0833],
        [0.0722, 0.0508]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.425001
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[7.6294e-06, 4.7684e-06],
        [4.1723e-07, 1.0550e-05],
        [2.7418e-05, 2.2352e-05],
        [1.2636e-05, 7.5102e-06],
        [3.5703e-05, 6.4135e-05],
        [8.3447e-07, 3.8862e-05],
        [2.8074e-05, 2.5392e-05],
        [3.5763e-07, 2.8908e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1588, 0.0920],
        [0.0892, 0.1640],
        [0.1489, 0.0982],
        [0.1607, 0.0910],
        [0.1227, 0.1191],
        [0.0877, 0.1668],
        [0.1451, 0.1007],
        [0.0869, 0.1682]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.213535
acc:  0.955
Time taken to execute the en SA task with prompt type modal, variation 2 and batchsize 16: 0:00:05.278026
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06],
        [6.6161e-06, 9.0599e-06]], device='cuda:0') torch.Size([128, 2])
answers_probs just softmax dim 0: tensor([[0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078]], device='cuda:0')
tensor([[0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7464e-05, 1.3530e-05],
        [1.3411e-05, 1.4246e-05],
        [1.7881e-07, 1.5438e-05],
        [1.6093e-06, 4.0948e-05],
        [1.1325e-06, 4.3929e-05],
        [1.4901e-06, 3.8624e-05],
        [5.3644e-07, 3.0041e-05],
        [1.8954e-05, 1.1325e-05],
        [1.7881e-07, 1.7285e-05],
        [4.1723e-07, 1.9848e-05],
        [9.2983e-06, 8.3447e-06],
        [7.7486e-07, 3.3915e-05],
        [1.6689e-06, 4.5717e-05],
        [9.5963e-06, 1.2517e-05],
        [2.1756e-05, 1.2457e-05],
        [2.9802e-07, 7.3314e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0851, 0.0430],
        [0.0787, 0.0465],
        [0.0490, 0.0747],
        [0.0503, 0.0728],
        [0.0497, 0.0737],
        [0.0503, 0.0728],
        [0.0493, 0.0742],
        [0.0906, 0.0404],
        [0.0490, 0.0748],
        [0.0495, 0.0740],
        [0.0821, 0.0446],
        [0.0496, 0.0739],
        [0.0502, 0.0729],
        [0.0748, 0.0490],
        [0.0915, 0.0400],
        [0.0504, 0.0727]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.414669
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-06, 6.1035e-05],
        [1.2577e-05, 5.6624e-06],
        [2.4199e-05, 3.0339e-05],
        [5.9605e-07, 2.8670e-05],
        [2.9802e-07, 1.5795e-05],
        [1.0848e-05, 1.5259e-05],
        [1.4901e-06, 4.3213e-05],
        [1.4901e-06, 4.0114e-05],
        [3.5763e-07, 2.1517e-05],
        [8.9407e-07, 4.0174e-05],
        [1.1921e-06, 2.6762e-05],
        [1.8597e-05, 1.1444e-05],
        [8.6427e-06, 4.5896e-06],
        [5.4836e-06, 5.7101e-05],
        [2.6822e-06, 3.5763e-07],
        [1.9073e-05, 1.2577e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0467, 0.0763],
        [0.0889, 0.0401],
        [0.0695, 0.0513],
        [0.0455, 0.0783],
        [0.0454, 0.0785],
        [0.0676, 0.0528],
        [0.0461, 0.0773],
        [0.0462, 0.0771],
        [0.0453, 0.0787],
        [0.0456, 0.0782],
        [0.0465, 0.0766],
        [0.0828, 0.0430],
        [0.0857, 0.0416],
        [0.0487, 0.0732],
        [0.1078, 0.0331],
        [0.0815, 0.0438]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.430116
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.2254e-06, 1.2338e-05],
        [3.5763e-07, 2.5392e-05],
        [4.1723e-07, 3.5942e-05],
        [6.4373e-06, 2.2650e-06],
        [1.1623e-05, 7.9274e-06],
        [1.1623e-05, 3.7551e-06],
        [3.5763e-07, 1.2696e-05],
        [6.8545e-06, 4.7982e-05],
        [2.4438e-06, 5.6565e-05],
        [1.7881e-07, 1.4067e-05],
        [7.9274e-06, 5.4240e-06],
        [1.4484e-05, 8.5235e-06],
        [1.2398e-05, 4.4107e-06],
        [2.5034e-06, 4.1366e-05],
        [1.0312e-05, 5.1260e-06],
        [1.3769e-05, 5.1558e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0627, 0.0569],
        [0.0426, 0.0837],
        [0.0425, 0.0839],
        [0.0881, 0.0405],
        [0.0762, 0.0469],
        [0.0895, 0.0399],
        [0.0432, 0.0826],
        [0.0476, 0.0749],
        [0.0438, 0.0815],
        [0.0426, 0.0839],
        [0.0761, 0.0469],
        [0.0789, 0.0452],
        [0.0879, 0.0406],
        [0.0445, 0.0802],
        [0.0820, 0.0435],
        [0.0519, 0.0688]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.451640
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.3590e-05],
        [1.7881e-07, 1.7941e-05],
        [2.0385e-05, 1.5378e-05],
        [7.1526e-07, 5.5075e-05],
        [1.9073e-06, 2.9802e-07],
        [1.9252e-05, 1.1146e-05],
        [1.2696e-05, 1.4067e-05],
        [2.3842e-07, 5.3048e-06],
        [2.2471e-05, 1.8179e-05],
        [7.1526e-07, 3.9339e-05],
        [1.0014e-05, 7.8082e-06],
        [5.9605e-07, 2.0862e-05],
        [1.6332e-05, 1.5080e-05],
        [5.9605e-07, 3.6538e-05],
        [1.2755e-05, 6.7949e-06],
        [7.0333e-06, 2.2054e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0420, 0.0845],
        [0.0421, 0.0844],
        [0.0737, 0.0482],
        [0.0422, 0.0841],
        [0.0989, 0.0359],
        [0.0785, 0.0452],
        [0.0669, 0.0530],
        [0.0435, 0.0816],
        [0.0724, 0.0490],
        [0.0424, 0.0837],
        [0.0731, 0.0486],
        [0.0428, 0.0829],
        [0.0701, 0.0507],
        [0.0423, 0.0839],
        [0.0800, 0.0444],
        [0.0892, 0.0398]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.407684
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-06, 3.5763e-07],
        [5.6028e-06, 2.9802e-06],
        [1.0729e-05, 2.0742e-05],
        [7.8082e-06, 4.3511e-06],
        [1.9670e-06, 3.6895e-05],
        [1.7405e-05, 1.2934e-05],
        [1.1504e-05, 4.7684e-06],
        [1.9610e-05, 1.1146e-05],
        [5.9605e-08, 1.0669e-05],
        [1.0431e-05, 9.0599e-06],
        [5.6624e-06, 3.1590e-06],
        [1.5497e-06, 5.0426e-05],
        [1.1921e-07, 1.5199e-05],
        [1.4901e-06, 3.5465e-05],
        [1.9610e-05, 1.6510e-05],
        [7.9870e-06, 5.2452e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0952, 0.0377],
        [0.0749, 0.0479],
        [0.0548, 0.0655],
        [0.0741, 0.0484],
        [0.0410, 0.0875],
        [0.0692, 0.0519],
        [0.0790, 0.0454],
        [0.0737, 0.0487],
        [0.0392, 0.0916],
        [0.0666, 0.0539],
        [0.0741, 0.0485],
        [0.0402, 0.0894],
        [0.0393, 0.0914],
        [0.0406, 0.0884],
        [0.0671, 0.0535],
        [0.0713, 0.0503]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.423868
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.9274e-06, 3.0994e-06],
        [3.0398e-06, 4.1723e-07],
        [1.7881e-07, 8.1062e-06],
        [8.9407e-07, 3.5703e-05],
        [1.5438e-05, 7.3314e-06],
        [9.5367e-06, 6.4373e-06],
        [6.5565e-07, 3.3081e-05],
        [1.5378e-05, 7.8082e-06],
        [2.3842e-07, 1.8179e-05],
        [9.5963e-06, 4.5896e-06],
        [1.3888e-05, 9.1195e-06],
        [1.9073e-05, 3.1233e-05],
        [1.9073e-06, 5.6565e-05],
        [6.0797e-06, 4.2439e-05],
        [1.2815e-05, 4.1127e-06],
        [2.3842e-07, 1.8060e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0826, 0.0426],
        [0.0970, 0.0363],
        [0.0411, 0.0855],
        [0.0413, 0.0853],
        [0.0793, 0.0444],
        [0.0731, 0.0481],
        [0.0411, 0.0857],
        [0.0782, 0.0450],
        [0.0408, 0.0863],
        [0.0792, 0.0444],
        [0.0736, 0.0478],
        [0.0588, 0.0598],
        [0.0416, 0.0846],
        [0.0456, 0.0771],
        [0.0858, 0.0410],
        [0.0408, 0.0863]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.452555
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.9870e-06, 4.4107e-06],
        [3.5167e-06, 4.7684e-07],
        [2.3246e-06, 5.3048e-05],
        [1.0550e-05, 8.1062e-06],
        [9.5367e-07, 4.0293e-05],
        [3.5763e-07, 2.4021e-05],
        [1.0133e-06, 3.7134e-05],
        [4.1723e-07, 2.4140e-05],
        [2.3842e-07, 2.5868e-05],
        [1.3649e-05, 1.1027e-05],
        [2.3842e-07, 2.5272e-05],
        [1.5080e-05, 1.1921e-05],
        [1.0014e-05, 8.5235e-06],
        [8.3447e-07, 4.2737e-05],
        [9.5367e-07, 2.3007e-05],
        [1.1325e-05, 5.7220e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0849, 0.0418],
        [0.1076, 0.0330],
        [0.0465, 0.0764],
        [0.0785, 0.0453],
        [0.0456, 0.0778],
        [0.0452, 0.0785],
        [0.0458, 0.0776],
        [0.0454, 0.0783],
        [0.0450, 0.0789],
        [0.0775, 0.0458],
        [0.0450, 0.0789],
        [0.0779, 0.0456],
        [0.0765, 0.0464],
        [0.0455, 0.0781],
        [0.0464, 0.0765],
        [0.0866, 0.0410]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.369043
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2650e-06, 2.9802e-07],
        [1.8477e-06, 5.2214e-05],
        [5.9605e-07, 3.9041e-05],
        [1.7881e-07, 2.4557e-05],
        [5.9605e-08, 1.2100e-05],
        [1.7881e-07, 1.8179e-05],
        [9.3579e-06, 4.2915e-06],
        [7.9274e-06, 4.8280e-06],
        [9.5367e-07, 3.8981e-05],
        [2.3842e-07, 2.1875e-05],
        [2.0862e-06, 4.0233e-05],
        [8.9407e-07, 3.4869e-05],
        [1.5497e-06, 3.6001e-05],
        [4.7684e-07, 3.1888e-05],
        [4.4703e-06, 6.1333e-05],
        [1.6689e-05, 1.3709e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1192, 0.0301],
        [0.0510, 0.0704],
        [0.0500, 0.0717],
        [0.0496, 0.0723],
        [0.0495, 0.0725],
        [0.0497, 0.0721],
        [0.0977, 0.0367],
        [0.0917, 0.0391],
        [0.0504, 0.0711],
        [0.0498, 0.0720],
        [0.0517, 0.0693],
        [0.0505, 0.0710],
        [0.0513, 0.0699],
        [0.0500, 0.0717],
        [0.0527, 0.0680],
        [0.0853, 0.0421]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.335747
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.4043e-06, 2.7418e-06],
        [1.5438e-05, 1.3828e-05],
        [1.8477e-06, 5.2691e-05],
        [2.7418e-06, 5.7757e-05],
        [5.3644e-07, 3.6597e-05],
        [1.2338e-05, 9.7156e-06],
        [1.4246e-05, 1.3709e-05],
        [3.5763e-07, 2.6703e-05],
        [1.5736e-05, 1.5199e-05],
        [7.1526e-07, 1.0431e-05],
        [1.1325e-06, 3.8683e-05],
        [7.9274e-06, 4.4703e-06],
        [1.9789e-05, 1.1086e-05],
        [5.9605e-07, 2.7776e-05],
        [1.4365e-05, 3.7014e-05],
        [1.3709e-06, 4.7684e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0955, 0.0379],
        [0.0761, 0.0476],
        [0.0465, 0.0780],
        [0.0470, 0.0771],
        [0.0456, 0.0795],
        [0.0786, 0.0461],
        [0.0748, 0.0484],
        [0.0455, 0.0796],
        [0.0747, 0.0485],
        [0.0479, 0.0756],
        [0.0462, 0.0784],
        [0.0851, 0.0425],
        [0.0852, 0.0425],
        [0.0459, 0.0790],
        [0.0594, 0.0610],
        [0.0462, 0.0784]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.330865
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0266e-06, 1.7881e-07],
        [5.3644e-07, 3.4988e-05],
        [1.1086e-05, 5.8413e-06],
        [3.5763e-07, 1.9550e-05],
        [1.1921e-07, 1.0788e-05],
        [9.9540e-06, 9.7156e-06],
        [1.2279e-05, 9.3579e-06],
        [1.0133e-06, 3.8683e-05],
        [2.9802e-07, 1.6034e-05],
        [6.9737e-06, 6.3181e-06],
        [7.1526e-07, 2.5272e-05],
        [1.5736e-05, 2.3305e-05],
        [9.0599e-06, 6.7949e-06],
        [1.6153e-05, 1.8895e-05],
        [3.7551e-06, 6.9797e-05],
        [1.5616e-05, 3.7134e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1094, 0.0329],
        [0.0443, 0.0812],
        [0.0840, 0.0428],
        [0.0444, 0.0810],
        [0.0441, 0.0816],
        [0.0724, 0.0497],
        [0.0770, 0.0468],
        [0.0448, 0.0804],
        [0.0445, 0.0810],
        [0.0738, 0.0488],
        [0.0449, 0.0802],
        [0.0653, 0.0551],
        [0.0773, 0.0466],
        [0.0692, 0.0520],
        [0.0459, 0.0784],
        [0.0587, 0.0613]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.453437
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2279e-05, 6.7949e-06],
        [4.7684e-07, 2.2352e-05],
        [1.8477e-06, 4.5359e-05],
        [7.6294e-06, 4.8280e-06],
        [8.7023e-06, 1.0729e-05],
        [5.9605e-07, 2.6345e-05],
        [1.6987e-05, 4.4048e-05],
        [2.3842e-07, 1.7643e-05],
        [7.5102e-06, 8.1658e-06],
        [1.8299e-05, 2.1279e-05],
        [8.9407e-06, 3.9339e-06],
        [1.0014e-05, 5.3644e-06],
        [3.5763e-07, 1.9550e-05],
        [9.8348e-06, 7.2718e-06],
        [7.7486e-07, 3.6359e-05],
        [3.1590e-06, 1.1325e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0801, 0.0451],
        [0.0430, 0.0841],
        [0.0438, 0.0826],
        [0.0777, 0.0466],
        [0.0659, 0.0549],
        [0.0430, 0.0840],
        [0.0556, 0.0650],
        [0.0427, 0.0848],
        [0.0680, 0.0532],
        [0.0668, 0.0541],
        [0.0843, 0.0429],
        [0.0807, 0.0448],
        [0.0429, 0.0844],
        [0.0748, 0.0483],
        [0.0430, 0.0841],
        [0.0879, 0.0411]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.495510
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2338e-05, 1.0490e-05],
        [2.9802e-07, 1.8656e-05],
        [1.0610e-05, 5.7220e-06],
        [2.9802e-07, 2.5749e-05],
        [1.7881e-06, 3.6120e-05],
        [1.0073e-05, 4.5896e-06],
        [1.1742e-05, 7.2122e-06],
        [1.1325e-06, 3.1412e-05],
        [1.2457e-05, 9.5963e-06],
        [1.7881e-07, 5.3644e-06],
        [1.6212e-05, 1.7345e-05],
        [1.9491e-05, 1.9193e-05],
        [6.0201e-06, 5.1022e-05],
        [1.1683e-05, 8.2254e-06],
        [4.7684e-07, 2.6166e-05],
        [1.1683e-05, 1.1683e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0739, 0.0492],
        [0.0437, 0.0831],
        [0.0824, 0.0441],
        [0.0435, 0.0835],
        [0.0451, 0.0806],
        [0.0856, 0.0425],
        [0.0800, 0.0455],
        [0.0446, 0.0816],
        [0.0757, 0.0480],
        [0.0445, 0.0818],
        [0.0698, 0.0521],
        [0.0712, 0.0510],
        [0.0478, 0.0760],
        [0.0774, 0.0470],
        [0.0438, 0.0830],
        [0.0710, 0.0512]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.566774
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.0729e-06, 2.8312e-05],
        [2.3842e-07, 1.9670e-05],
        [1.3351e-05, 1.2577e-05],
        [3.6955e-06, 7.1526e-07],
        [1.3173e-05, 6.3777e-06],
        [2.3484e-05, 3.5226e-05],
        [1.4603e-05, 5.6922e-05],
        [2.2650e-06, 6.4135e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0883, 0.1622],
        [0.0861, 0.1662],
        [0.1424, 0.1005],
        [0.1967, 0.0728],
        [0.1670, 0.0858],
        [0.1270, 0.1128],
        [0.1044, 0.1372],
        [0.0881, 0.1626]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.229330
acc:  0.96
Time taken to execute the en SA task with prompt type modal, variation 3 and batchsize 16: 0:00:05.376625
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06],
        [7.7486e-06, 7.0930e-06]], device='cuda:0') torch.Size([119, 2])
answers_probs just softmax dim 0: tensor([[0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084]], device='cuda:0')
tensor([[0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084],
        [0.0084, 0.0084]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 7.0333e-06],
        [3.3855e-05, 1.1981e-05],
        [9.4771e-06, 5.5432e-06],
        [1.7881e-07, 1.8120e-05],
        [1.0729e-06, 4.9651e-05],
        [1.1384e-05, 1.0848e-05],
        [2.1338e-05, 1.3649e-05],
        [7.7486e-07, 3.7253e-05],
        [9.0003e-06, 3.5763e-06],
        [7.5102e-06, 4.5300e-06],
        [1.8060e-05, 6.0201e-06],
        [2.6226e-06, 4.9412e-05],
        [3.1710e-05, 1.1027e-05],
        [1.0848e-05, 3.5763e-06],
        [1.6272e-05, 1.0729e-05],
        [4.1723e-07, 3.4630e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0399, 0.0886],
        [0.0814, 0.0434],
        [0.0731, 0.0483],
        [0.0393, 0.0900],
        [0.0397, 0.0889],
        [0.0649, 0.0544],
        [0.0716, 0.0494],
        [0.0397, 0.0890],
        [0.0796, 0.0444],
        [0.0726, 0.0487],
        [0.0824, 0.0429],
        [0.0409, 0.0864],
        [0.0817, 0.0433],
        [0.0825, 0.0428],
        [0.0711, 0.0497],
        [0.0394, 0.0898]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.406744
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3888e-05, 1.6212e-05],
        [5.9605e-08, 1.3530e-05],
        [3.0160e-05, 4.8935e-05],
        [3.3081e-05, 1.6928e-05],
        [1.4544e-05, 8.9407e-06],
        [2.1756e-05, 8.6427e-06],
        [6.5565e-07, 3.4332e-05],
        [2.8968e-05, 1.4484e-05],
        [5.3048e-06, 9.6738e-05],
        [1.7881e-07, 2.9206e-05],
        [4.7684e-07, 3.3498e-05],
        [7.1526e-07, 4.4823e-05],
        [3.9935e-06, 6.8069e-05],
        [1.7881e-07, 2.6882e-05],
        [2.5034e-06, 2.9802e-07],
        [2.3246e-06, 5.1856e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0705, 0.0502],
        [0.0446, 0.0792],
        [0.0651, 0.0543],
        [0.0861, 0.0411],
        [0.0825, 0.0428],
        [0.0909, 0.0389],
        [0.0453, 0.0781],
        [0.0866, 0.0409],
        [0.0468, 0.0755],
        [0.0447, 0.0791],
        [0.0451, 0.0785],
        [0.0451, 0.0783],
        [0.0470, 0.0753],
        [0.0447, 0.0790],
        [0.1086, 0.0326],
        [0.0464, 0.0762]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.420952
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1265e-05, 3.8147e-06],
        [1.6391e-05, 7.2718e-06],
        [2.8610e-06, 8.2076e-05],
        [1.3113e-06, 4.0591e-05],
        [2.3842e-07, 2.1338e-05],
        [6.7949e-06, 6.6757e-05],
        [1.2517e-06, 5.2214e-05],
        [1.7285e-06, 1.7881e-07],
        [1.5497e-05, 6.8545e-06],
        [1.6093e-06, 5.2214e-05],
        [3.5763e-07, 2.1875e-05],
        [1.6749e-05, 8.3447e-06],
        [3.6359e-06, 8.1480e-05],
        [3.0994e-05, 1.9252e-05],
        [2.0862e-06, 5.5432e-05],
        [3.5763e-07, 3.1888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0929, 0.0376],
        [0.0880, 0.0397],
        [0.0455, 0.0767],
        [0.0454, 0.0769],
        [0.0445, 0.0784],
        [0.0483, 0.0723],
        [0.0450, 0.0775],
        [0.1089, 0.0320],
        [0.0880, 0.0396],
        [0.0453, 0.0770],
        [0.0447, 0.0780],
        [0.0858, 0.0407],
        [0.0459, 0.0760],
        [0.0815, 0.0428],
        [0.0456, 0.0765],
        [0.0445, 0.0784]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.403279
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2577e-05, 7.1526e-06],
        [2.2292e-05, 2.0623e-05],
        [2.3842e-07, 2.1756e-05],
        [1.3113e-06, 3.2723e-05],
        [1.4961e-05, 8.4639e-06],
        [1.9133e-05, 1.8001e-05],
        [8.4639e-06, 4.9472e-06],
        [7.1526e-07, 4.0591e-05],
        [1.3530e-05, 5.0664e-06],
        [1.9372e-05, 1.3292e-05],
        [3.5763e-07, 2.1279e-05],
        [1.1325e-06, 5.2571e-05],
        [1.5378e-05, 8.9407e-06],
        [1.4663e-05, 6.8307e-05],
        [3.6955e-06, 1.7285e-06],
        [1.0490e-05, 1.2636e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0768, 0.0471],
        [0.0682, 0.0530],
        [0.0410, 0.0881],
        [0.0422, 0.0857],
        [0.0769, 0.0470],
        [0.0680, 0.0532],
        [0.0763, 0.0474],
        [0.0413, 0.0876],
        [0.0840, 0.0430],
        [0.0735, 0.0492],
        [0.0413, 0.0876],
        [0.0415, 0.0872],
        [0.0764, 0.0473],
        [0.0484, 0.0747],
        [0.0802, 0.0451],
        [0.0639, 0.0566]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.488964
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.5988e-05],
        [8.3447e-07, 4.7803e-05],
        [1.3113e-06, 3.4153e-05],
        [9.0599e-06, 6.1393e-06],
        [8.7619e-06, 7.7486e-06],
        [3.5167e-06, 4.9055e-05],
        [2.3425e-05, 1.3471e-05],
        [1.3530e-05, 7.3910e-06],
        [2.9802e-07, 1.3471e-05],
        [2.0862e-06, 4.4584e-05],
        [2.0444e-05, 1.2040e-05],
        [3.0220e-05, 2.0444e-05],
        [1.7107e-05, 1.2636e-05],
        [1.7047e-05, 1.3709e-05],
        [1.3590e-05, 7.0333e-06],
        [2.6166e-05, 6.5744e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0421, 0.0862],
        [0.0424, 0.0855],
        [0.0433, 0.0839],
        [0.0757, 0.0479],
        [0.0709, 0.0512],
        [0.0446, 0.0814],
        [0.0787, 0.0461],
        [0.0796, 0.0456],
        [0.0426, 0.0852],
        [0.0436, 0.0832],
        [0.0782, 0.0464],
        [0.0757, 0.0479],
        [0.0741, 0.0490],
        [0.0726, 0.0500],
        [0.0806, 0.0450],
        [0.0554, 0.0655]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.432687
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7418e-06, 7.3731e-05],
        [7.7486e-07, 4.7803e-05],
        [1.7881e-07, 6.0201e-06],
        [1.7881e-06, 6.0558e-05],
        [1.4901e-06, 6.1870e-05],
        [9.5367e-07, 3.7014e-05],
        [5.3644e-07, 3.4511e-05],
        [3.2783e-06, 7.1466e-05],
        [2.3842e-06, 4.7088e-05],
        [1.1206e-05, 8.2254e-06],
        [2.5094e-05, 1.2040e-05],
        [1.1921e-07, 1.5855e-05],
        [1.3411e-05, 7.0333e-06],
        [2.3723e-05, 1.2696e-05],
        [2.3842e-07, 2.0802e-05],
        [5.9605e-07, 4.2796e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0521, 0.0698],
        [0.0511, 0.0712],
        [0.0517, 0.0703],
        [0.0517, 0.0703],
        [0.0515, 0.0707],
        [0.0515, 0.0706],
        [0.0510, 0.0713],
        [0.0525, 0.0693],
        [0.0527, 0.0690],
        [0.0895, 0.0407],
        [0.0988, 0.0368],
        [0.0506, 0.0718],
        [0.0969, 0.0376],
        [0.0964, 0.0377],
        [0.0508, 0.0716],
        [0.0510, 0.0714]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.561395
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-06, 9.0480e-05],
        [4.7684e-07, 2.7418e-05],
        [1.1921e-07, 1.7345e-05],
        [2.9087e-05, 2.8014e-05],
        [3.0577e-05, 1.4782e-05],
        [1.2755e-05, 9.8348e-06],
        [4.1723e-07, 2.0862e-05],
        [2.8312e-05, 2.3067e-05],
        [1.5140e-05, 8.7023e-06],
        [1.7464e-05, 1.5318e-05],
        [1.2517e-06, 5.3644e-05],
        [3.2306e-05, 2.2054e-05],
        [1.3113e-05, 1.4365e-05],
        [1.9252e-05, 7.3910e-06],
        [0.0000e+00, 3.2783e-06],
        [1.1921e-07, 1.2338e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0774],
        [0.0435, 0.0828],
        [0.0431, 0.0836],
        [0.0712, 0.0506],
        [0.0840, 0.0429],
        [0.0753, 0.0479],
        [0.0437, 0.0826],
        [0.0743, 0.0485],
        [0.0808, 0.0446],
        [0.0729, 0.0494],
        [0.0438, 0.0823],
        [0.0776, 0.0465],
        [0.0690, 0.0523],
        [0.0882, 0.0409],
        [0.0428, 0.0842],
        [0.0432, 0.0834]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.316811
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 3.8564e-05],
        [3.3975e-06, 7.2896e-05],
        [8.3447e-07, 2.5868e-05],
        [1.1921e-05, 6.7949e-06],
        [5.9605e-07, 6.7353e-05],
        [1.3053e-05, 9.6560e-06],
        [1.2219e-05, 1.6928e-05],
        [6.6757e-06, 5.7459e-05],
        [4.7684e-07, 3.1590e-05],
        [1.8656e-05, 6.6102e-05],
        [5.9605e-08, 1.2040e-05],
        [1.3232e-05, 1.2100e-05],
        [2.2650e-06, 1.7881e-07],
        [2.1458e-05, 1.3530e-05],
        [9.8348e-06, 3.5763e-06],
        [1.9431e-05, 2.6762e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0437, 0.0817],
        [0.0448, 0.0797],
        [0.0442, 0.0808],
        [0.0810, 0.0441],
        [0.0432, 0.0826],
        [0.0761, 0.0469],
        [0.0652, 0.0548],
        [0.0476, 0.0751],
        [0.0435, 0.0821],
        [0.0534, 0.0669],
        [0.0431, 0.0829],
        [0.0723, 0.0494],
        [0.1083, 0.0330],
        [0.0791, 0.0451],
        [0.0892, 0.0400],
        [0.0653, 0.0547]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.448688
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 2.5332e-05],
        [1.1325e-06, 3.4928e-05],
        [4.1723e-07, 3.1650e-05],
        [5.9605e-08, 1.1086e-05],
        [3.7014e-05, 3.7014e-05],
        [2.4438e-06, 7.8201e-05],
        [6.5565e-07, 3.3498e-05],
        [3.5763e-07, 2.1040e-05],
        [1.3113e-06, 5.4419e-05],
        [3.8743e-06, 5.9605e-07],
        [1.1921e-07, 9.2387e-06],
        [3.2187e-06, 5.9664e-05],
        [1.0133e-06, 3.7968e-05],
        [2.3842e-07, 3.4630e-05],
        [7.2718e-06, 4.1127e-06],
        [1.1921e-07, 1.6510e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0535, 0.0681],
        [0.0538, 0.0678],
        [0.0528, 0.0691],
        [0.0524, 0.0696],
        [0.0859, 0.0425],
        [0.0537, 0.0679],
        [0.0531, 0.0687],
        [0.0530, 0.0688],
        [0.0533, 0.0684],
        [0.1239, 0.0294],
        [0.0528, 0.0691],
        [0.0548, 0.0665],
        [0.0535, 0.0682],
        [0.0525, 0.0695],
        [0.0987, 0.0370],
        [0.0525, 0.0695]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.447733
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 3.4988e-05],
        [1.1981e-05, 4.9472e-06],
        [6.6757e-06, 3.8743e-06],
        [1.4722e-05, 6.0201e-06],
        [1.5497e-06, 5.7280e-05],
        [6.5565e-07, 3.3081e-05],
        [3.5763e-07, 2.6405e-05],
        [1.3828e-05, 2.2650e-05],
        [3.4571e-06, 3.5763e-07],
        [1.8895e-05, 1.3888e-05],
        [2.5928e-05, 4.1068e-05],
        [2.8014e-05, 1.1146e-05],
        [3.3140e-05, 1.9908e-05],
        [2.1279e-05, 1.0073e-05],
        [1.1563e-05, 1.2279e-05],
        [2.9802e-07, 1.7107e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0393, 0.0906],
        [0.0789, 0.0452],
        [0.0732, 0.0487],
        [0.0790, 0.0451],
        [0.0399, 0.0893],
        [0.0396, 0.0899],
        [0.0394, 0.0905],
        [0.0568, 0.0628],
        [0.0962, 0.0370],
        [0.0692, 0.0515],
        [0.0572, 0.0623],
        [0.0795, 0.0448],
        [0.0726, 0.0491],
        [0.0766, 0.0465],
        [0.0631, 0.0565],
        [0.0395, 0.0901]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.365420
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9087e-05, 1.8477e-05],
        [1.4186e-05, 9.8348e-06],
        [2.1160e-05, 1.3351e-05],
        [1.3232e-05, 3.3975e-06],
        [3.0160e-05, 1.9431e-05],
        [1.4305e-06, 4.4703e-05],
        [9.8944e-06, 5.7817e-06],
        [2.0266e-06, 2.9802e-07],
        [6.2585e-06, 8.8811e-05],
        [1.2517e-05, 1.4067e-05],
        [1.0371e-05, 3.9339e-06],
        [2.6226e-05, 1.9193e-05],
        [7.7486e-07, 3.3796e-05],
        [1.7285e-05, 8.3447e-06],
        [8.3447e-07, 4.8220e-05],
        [1.2696e-05, 7.5102e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0677, 0.0534],
        [0.0663, 0.0545],
        [0.0678, 0.0533],
        [0.0813, 0.0444],
        [0.0674, 0.0536],
        [0.0379, 0.0954],
        [0.0690, 0.0523],
        [0.0878, 0.0411],
        [0.0392, 0.0921],
        [0.0588, 0.0614],
        [0.0758, 0.0477],
        [0.0654, 0.0552],
        [0.0375, 0.0962],
        [0.0721, 0.0501],
        [0.0373, 0.0967],
        [0.0688, 0.0525]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.368308
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 2.6643e-05],
        [2.5988e-05, 1.5736e-05],
        [2.8610e-06, 3.5763e-07],
        [4.1723e-07, 2.4021e-05],
        [1.0431e-05, 6.6161e-06],
        [1.8716e-05, 1.1325e-05],
        [3.4571e-06, 7.4804e-05],
        [7.1526e-07, 3.7909e-05],
        [1.7881e-06, 4.1962e-05],
        [1.4901e-06, 3.8862e-05],
        [8.0466e-06, 2.9802e-06],
        [2.7418e-06, 5.6446e-05],
        [7.8082e-06, 5.4538e-05],
        [1.4961e-05, 5.1856e-06],
        [4.7684e-07, 3.6359e-05],
        [1.4901e-06, 4.9055e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0449, 0.0783],
        [0.0826, 0.0425],
        [0.1077, 0.0326],
        [0.0451, 0.0780],
        [0.0817, 0.0430],
        [0.0826, 0.0425],
        [0.0463, 0.0759],
        [0.0451, 0.0778],
        [0.0461, 0.0761],
        [0.0460, 0.0764],
        [0.0919, 0.0382],
        [0.0464, 0.0757],
        [0.0502, 0.0700],
        [0.0931, 0.0377],
        [0.0449, 0.0783],
        [0.0456, 0.0770]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.409122
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.3544e-05, 4.4286e-05],
        [2.7835e-05, 6.7234e-05],
        [1.2100e-05, 6.1989e-06],
        [4.1723e-07, 9.7752e-06],
        [2.4796e-05, 1.7047e-05],
        [1.7285e-06, 6.4492e-05],
        [1.8954e-05, 1.1086e-05],
        [2.4676e-05, 8.8811e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1129, 0.1293],
        [0.1069, 0.1365],
        [0.1545, 0.0944],
        [0.0831, 0.1756],
        [0.1443, 0.1011],
        [0.0819, 0.1782],
        [0.1499, 0.0973],
        [0.1664, 0.0877]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.187505
acc:  0.95
Time taken to execute the en SA task with prompt type modal, variation 4 and batchsize 16: 0:00:05.273731
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06],
        [5.3644e-06, 8.1658e-06]], device='cuda:0') torch.Size([110, 2])
answers_probs just softmax dim 0: tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
tensor([[0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091],
        [0.0091, 0.0091]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0312e-05, 6.1989e-06],
        [1.3053e-05, 3.5763e-06],
        [1.4782e-05, 6.7353e-06],
        [2.9802e-07, 1.7464e-05],
        [7.3314e-06, 6.8009e-05],
        [6.5565e-07, 3.8147e-05],
        [1.1325e-06, 2.4259e-05],
        [2.6226e-06, 5.7220e-05],
        [2.2054e-06, 4.7207e-05],
        [1.1921e-06, 4.5896e-05],
        [9.2387e-06, 5.8413e-06],
        [1.7881e-07, 1.7047e-05],
        [4.1723e-07, 2.6822e-05],
        [2.9802e-07, 1.9550e-05],
        [4.7684e-07, 1.2338e-05],
        [1.0967e-05, 7.8082e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0887, 0.0405],
        [0.1041, 0.0345],
        [0.0944, 0.0380],
        [0.0483, 0.0743],
        [0.0523, 0.0685],
        [0.0483, 0.0743],
        [0.0496, 0.0723],
        [0.0496, 0.0723],
        [0.0496, 0.0723],
        [0.0487, 0.0737],
        [0.0876, 0.0409],
        [0.0480, 0.0748],
        [0.0482, 0.0744],
        [0.0482, 0.0744],
        [0.0493, 0.0728],
        [0.0851, 0.0421]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.291015
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0014e-05, 1.4901e-05],
        [1.5914e-05, 1.2398e-05],
        [1.7107e-05, 8.6427e-06],
        [1.1921e-07, 1.3947e-05],
        [3.6955e-06, 7.3969e-05],
        [1.5318e-05, 1.2994e-05],
        [9.7752e-06, 3.9935e-06],
        [1.0788e-05, 4.4703e-06],
        [2.3246e-06, 5.0068e-05],
        [3.0994e-06, 4.7684e-07],
        [9.5963e-06, 9.8944e-06],
        [6.4373e-06, 3.8743e-06],
        [2.3842e-07, 1.9610e-05],
        [4.6492e-06, 7.9870e-05],
        [1.1265e-05, 6.3181e-06],
        [2.5809e-05, 1.2279e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0577, 0.0622],
        [0.0678, 0.0530],
        [0.0751, 0.0478],
        [0.0390, 0.0922],
        [0.0405, 0.0886],
        [0.0663, 0.0541],
        [0.0786, 0.0457],
        [0.0783, 0.0458],
        [0.0404, 0.0889],
        [0.0919, 0.0391],
        [0.0632, 0.0568],
        [0.0721, 0.0498],
        [0.0391, 0.0918],
        [0.0408, 0.0880],
        [0.0733, 0.0490],
        [0.0761, 0.0472]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.421788
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-06, 5.2691e-05],
        [9.5367e-07, 3.7193e-05],
        [1.0252e-05, 1.3530e-05],
        [1.4484e-05, 9.0599e-06],
        [4.1723e-07, 8.8811e-06],
        [5.7817e-06, 5.4240e-06],
        [8.3447e-06, 6.3777e-06],
        [1.9670e-06, 4.9174e-05],
        [2.8789e-05, 2.5988e-05],
        [1.0133e-06, 4.5359e-05],
        [5.9605e-08, 1.1265e-05],
        [2.9922e-05, 2.4021e-05],
        [8.2850e-06, 5.1856e-06],
        [1.7285e-06, 3.4213e-05],
        [6.5565e-07, 2.9802e-05],
        [6.0201e-06, 4.1127e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0783],
        [0.0463, 0.0788],
        [0.0694, 0.0525],
        [0.0835, 0.0437],
        [0.0472, 0.0772],
        [0.0756, 0.0482],
        [0.0795, 0.0458],
        [0.0469, 0.0777],
        [0.0763, 0.0478],
        [0.0461, 0.0790],
        [0.0454, 0.0803],
        [0.0786, 0.0464],
        [0.0835, 0.0437],
        [0.0473, 0.0770],
        [0.0461, 0.0790],
        [0.0817, 0.0446]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.336144
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-06, 2.8610e-06],
        [7.0930e-06, 7.3314e-06],
        [5.9605e-07, 4.3750e-05],
        [2.3842e-07, 6.9141e-06],
        [9.2983e-06, 1.0133e-05],
        [1.2636e-05, 1.2934e-05],
        [4.4703e-06, 3.9995e-05],
        [1.6093e-06, 4.8518e-05],
        [5.0068e-06, 5.2810e-05],
        [1.3530e-05, 4.9472e-06],
        [2.0266e-06, 3.4332e-05],
        [5.3644e-07, 2.5332e-05],
        [2.9802e-07, 1.7405e-05],
        [1.0133e-06, 2.9445e-05],
        [4.9472e-06, 7.5758e-05],
        [1.1921e-06, 4.3213e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0919, 0.0400],
        [0.0804, 0.0457],
        [0.0498, 0.0737],
        [0.0509, 0.0722],
        [0.0794, 0.0463],
        [0.0806, 0.0456],
        [0.0544, 0.0675],
        [0.0508, 0.0723],
        [0.0536, 0.0685],
        [0.1023, 0.0359],
        [0.0520, 0.0706],
        [0.0502, 0.0731],
        [0.0500, 0.0734],
        [0.0508, 0.0722],
        [0.0523, 0.0702],
        [0.0505, 0.0727]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.402069
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.8954e-05],
        [3.2187e-06, 2.9802e-07],
        [7.7486e-07, 4.2200e-05],
        [1.1683e-05, 6.4373e-06],
        [1.0073e-05, 5.9605e-06],
        [1.1921e-05, 4.4107e-06],
        [1.8835e-05, 1.3888e-05],
        [1.7643e-05, 4.3988e-05],
        [5.9605e-07, 2.7597e-05],
        [5.3644e-07, 2.6286e-05],
        [2.3425e-05, 1.2934e-05],
        [3.1590e-06, 5.5969e-05],
        [2.0266e-06, 3.9220e-05],
        [1.3828e-05, 1.3113e-05],
        [1.1921e-07, 1.5080e-05],
        [7.1526e-07, 2.6882e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0811],
        [0.1074, 0.0329],
        [0.0438, 0.0807],
        [0.0820, 0.0431],
        [0.0806, 0.0438],
        [0.0892, 0.0396],
        [0.0765, 0.0462],
        [0.0573, 0.0617],
        [0.0439, 0.0804],
        [0.0439, 0.0805],
        [0.0819, 0.0431],
        [0.0454, 0.0779],
        [0.0452, 0.0782],
        [0.0719, 0.0492],
        [0.0434, 0.0815],
        [0.0441, 0.0800]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.363591
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.9908e-05],
        [4.5300e-06, 1.7285e-06],
        [1.4901e-06, 4.7386e-05],
        [6.5565e-07, 3.3796e-05],
        [1.1921e-07, 7.6890e-06],
        [2.3961e-05, 1.4544e-05],
        [2.5213e-05, 3.9637e-05],
        [4.1723e-07, 2.3723e-05],
        [6.5565e-06, 3.2187e-06],
        [1.7524e-05, 4.5419e-05],
        [1.4424e-05, 9.2983e-06],
        [3.4571e-06, 9.5367e-07],
        [7.7486e-07, 2.8074e-05],
        [2.6822e-06, 5.4836e-05],
        [1.1325e-06, 3.3617e-05],
        [8.9407e-07, 3.0637e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0460, 0.0778],
        [0.0940, 0.0380],
        [0.0470, 0.0761],
        [0.0465, 0.0770],
        [0.0463, 0.0773],
        [0.0850, 0.0421],
        [0.0673, 0.0532],
        [0.0464, 0.0771],
        [0.0892, 0.0401],
        [0.0602, 0.0594],
        [0.0837, 0.0427],
        [0.0998, 0.0358],
        [0.0468, 0.0764],
        [0.0478, 0.0749],
        [0.0471, 0.0759],
        [0.0469, 0.0763]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.488979
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0788e-05, 6.1393e-06],
        [2.1756e-05, 2.3365e-05],
        [1.1683e-05, 7.9274e-06],
        [9.5367e-07, 3.2127e-05],
        [1.1921e-06, 3.3498e-05],
        [2.0862e-06, 2.3842e-07],
        [5.9605e-08, 1.0729e-05],
        [4.1723e-07, 2.1577e-05],
        [1.7881e-06, 3.5465e-05],
        [1.1921e-07, 1.5855e-05],
        [1.4305e-06, 4.3631e-05],
        [8.9407e-07, 3.1769e-05],
        [1.6451e-05, 1.0908e-05],
        [7.8678e-06, 4.6492e-06],
        [4.7684e-07, 2.8193e-05],
        [1.4305e-05, 7.4506e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0836, 0.0423],
        [0.0716, 0.0494],
        [0.0802, 0.0441],
        [0.0455, 0.0778],
        [0.0457, 0.0774],
        [0.1084, 0.0326],
        [0.0444, 0.0796],
        [0.0450, 0.0786],
        [0.0464, 0.0763],
        [0.0445, 0.0795],
        [0.0456, 0.0776],
        [0.0454, 0.0779],
        [0.0806, 0.0439],
        [0.0828, 0.0427],
        [0.0449, 0.0788],
        [0.0853, 0.0415]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.359351
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-06, 3.3379e-05],
        [1.0729e-05, 1.2994e-05],
        [8.6427e-06, 5.4240e-06],
        [5.3644e-07, 2.4021e-05],
        [7.1526e-07, 3.0994e-05],
        [1.4067e-05, 1.5438e-05],
        [1.9073e-05, 3.9816e-05],
        [4.7684e-07, 2.7955e-05],
        [1.9014e-05, 1.1742e-05],
        [3.3975e-06, 4.7684e-07],
        [3.4571e-06, 5.8889e-05],
        [2.1994e-05, 1.3053e-05],
        [1.6868e-05, 1.1146e-05],
        [1.7881e-07, 2.3663e-05],
        [5.9605e-07, 2.0623e-05],
        [9.8348e-06, 1.1146e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0454, 0.0793],
        [0.0678, 0.0531],
        [0.0798, 0.0451],
        [0.0441, 0.0816],
        [0.0441, 0.0816],
        [0.0695, 0.0518],
        [0.0596, 0.0604],
        [0.0439, 0.0821],
        [0.0801, 0.0450],
        [0.1037, 0.0347],
        [0.0456, 0.0789],
        [0.0808, 0.0445],
        [0.0788, 0.0457],
        [0.0435, 0.0828],
        [0.0444, 0.0811],
        [0.0689, 0.0522]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.445296
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1265e-05, 3.8147e-06],
        [2.1935e-05, 2.5451e-05],
        [1.4603e-05, 8.4639e-06],
        [1.8179e-05, 1.6928e-05],
        [4.1723e-07, 2.8074e-05],
        [9.5367e-07, 4.7207e-05],
        [7.9274e-06, 4.8280e-06],
        [1.6093e-05, 7.5698e-06],
        [2.3842e-07, 6.5565e-06],
        [1.1921e-07, 1.1504e-05],
        [1.7643e-05, 5.3465e-05],
        [2.9802e-07, 2.1338e-05],
        [5.9605e-07, 1.8597e-05],
        [4.8876e-06, 4.0531e-05],
        [1.7881e-07, 1.5914e-05],
        [1.6391e-05, 1.0014e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0939, 0.0383],
        [0.0706, 0.0509],
        [0.0837, 0.0430],
        [0.0746, 0.0482],
        [0.0451, 0.0798],
        [0.0454, 0.0793],
        [0.0828, 0.0435],
        [0.0878, 0.0410],
        [0.0461, 0.0781],
        [0.0449, 0.0801],
        [0.0570, 0.0632],
        [0.0451, 0.0798],
        [0.0459, 0.0785],
        [0.0495, 0.0727],
        [0.0450, 0.0800],
        [0.0827, 0.0435]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.365798
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.0371e-05],
        [1.4603e-05, 2.0266e-05],
        [2.6226e-05, 1.1027e-05],
        [3.5763e-07, 1.7166e-05],
        [1.5676e-05, 1.5080e-05],
        [2.3305e-05, 1.3709e-05],
        [1.4246e-05, 5.9605e-06],
        [1.3709e-06, 4.3750e-05],
        [5.9605e-06, 2.2054e-06],
        [2.0325e-05, 9.1195e-06],
        [1.6212e-05, 1.3888e-05],
        [2.0921e-05, 1.6570e-05],
        [2.8610e-06, 6.5565e-07],
        [1.0729e-06, 2.9206e-05],
        [1.1981e-05, 9.2387e-06],
        [2.3842e-06, 4.3750e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0392, 0.0917],
        [0.0589, 0.0610],
        [0.0784, 0.0459],
        [0.0396, 0.0909],
        [0.0645, 0.0557],
        [0.0727, 0.0494],
        [0.0784, 0.0458],
        [0.0399, 0.0900],
        [0.0804, 0.0447],
        [0.0773, 0.0465],
        [0.0664, 0.0541],
        [0.0677, 0.0531],
        [0.0874, 0.0411],
        [0.0402, 0.0895],
        [0.0682, 0.0527],
        [0.0408, 0.0881]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.405182
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 3.0994e-05],
        [6.5565e-06, 2.9206e-06],
        [6.2585e-06, 2.3842e-06],
        [2.7418e-05, 1.2279e-05],
        [9.3579e-06, 3.7551e-06],
        [1.4305e-05, 5.2691e-05],
        [1.0848e-05, 7.5102e-06],
        [8.6427e-06, 2.9206e-06],
        [2.4498e-05, 1.8060e-05],
        [2.9802e-07, 3.1292e-05],
        [4.7684e-07, 2.9683e-05],
        [2.8014e-06, 6.0678e-05],
        [1.2100e-05, 5.3644e-06],
        [2.0862e-06, 1.7881e-07],
        [1.7881e-05, 1.2934e-05],
        [4.8280e-06, 3.0398e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0370, 0.0964],
        [0.0733, 0.0486],
        [0.0757, 0.0471],
        [0.0732, 0.0487],
        [0.0749, 0.0476],
        [0.0454, 0.0784],
        [0.0663, 0.0538],
        [0.0775, 0.0460],
        [0.0652, 0.0546],
        [0.0370, 0.0962],
        [0.0373, 0.0956],
        [0.0383, 0.0929],
        [0.0734, 0.0486],
        [0.0922, 0.0387],
        [0.0656, 0.0544],
        [0.0678, 0.0526]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.449109
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7418e-06, 6.9201e-05],
        [2.0862e-06, 3.7968e-05],
        [3.5763e-07, 2.6107e-05],
        [9.7752e-06, 5.3048e-06],
        [1.0312e-05, 1.9073e-05],
        [1.0490e-05, 4.2915e-06],
        [1.0133e-06, 6.6400e-05],
        [6.3777e-06, 4.0531e-06],
        [8.3447e-07, 1.4663e-05],
        [1.0729e-06, 4.0472e-05],
        [9.5367e-07, 4.2975e-05],
        [7.1526e-07, 3.2365e-05],
        [3.0220e-05, 3.7551e-05],
        [7.3910e-06, 2.9802e-06],
        [1.9670e-06, 5.5432e-05],
        [1.0729e-05, 9.1195e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0476, 0.0758],
        [0.0483, 0.0747],
        [0.0465, 0.0777],
        [0.0877, 0.0412],
        [0.0651, 0.0554],
        [0.0932, 0.0387],
        [0.0465, 0.0775],
        [0.0845, 0.0427],
        [0.0484, 0.0746],
        [0.0471, 0.0767],
        [0.0469, 0.0770],
        [0.0469, 0.0770],
        [0.0716, 0.0504],
        [0.0935, 0.0386],
        [0.0475, 0.0761],
        [0.0787, 0.0458]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.362887
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.6212e-05, 8.2850e-06],
        [2.1338e-05, 1.5497e-05],
        [3.5763e-07, 5.7817e-06],
        [9.5963e-06, 5.6624e-06],
        [6.7949e-06, 4.4107e-06],
        [6.4969e-06, 4.5061e-05],
        [9.8944e-06, 4.8280e-06],
        [4.1723e-07, 3.2008e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1539, 0.0942],
        [0.1417, 0.1023],
        [0.0841, 0.1722],
        [0.1489, 0.0973],
        [0.1456, 0.0996],
        [0.0900, 0.1609],
        [0.1554, 0.0932],
        [0.0804, 0.1802]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.294814
acc:  0.955
Time taken to execute the en SA task with prompt type modal, variation 5 and batchsize 16: 0:00:05.002642
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06],
        [6.7949e-06, 6.9737e-06]], device='cuda:0') torch.Size([151, 2])
answers_probs just softmax dim 0: tensor([[0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066]], device='cuda:0')
tensor([[0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066],
        [0.0066, 0.0066]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.2352e-05],
        [3.6359e-06, 4.4763e-05],
        [9.5367e-07, 3.0875e-05],
        [4.7684e-07, 2.1398e-05],
        [8.3447e-07, 2.7180e-05],
        [1.1623e-05, 4.9472e-06],
        [1.2338e-05, 3.7551e-06],
        [1.5318e-05, 2.9802e-06],
        [2.8610e-06, 4.9114e-05],
        [1.3411e-05, 4.0054e-05],
        [1.3113e-05, 3.5763e-06],
        [2.5451e-05, 1.7762e-05],
        [5.3644e-07, 9.2387e-06],
        [1.7524e-05, 1.3411e-05],
        [1.0908e-05, 1.8597e-05],
        [1.0669e-05, 2.5630e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0418, 0.0842],
        [0.0440, 0.0799],
        [0.0420, 0.0836],
        [0.0417, 0.0843],
        [0.0420, 0.0836],
        [0.0823, 0.0427],
        [0.0878, 0.0400],
        [0.0942, 0.0373],
        [0.0431, 0.0816],
        [0.0524, 0.0671],
        [0.0895, 0.0393],
        [0.0735, 0.0478],
        [0.0431, 0.0816],
        [0.0719, 0.0489],
        [0.0591, 0.0595],
        [0.0914, 0.0385]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.601294
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 3.3438e-05],
        [8.7023e-06, 4.7088e-06],
        [1.0073e-05, 3.8743e-06],
        [6.0797e-06, 5.0366e-05],
        [4.7684e-07, 2.3186e-05],
        [1.1921e-07, 1.2100e-05],
        [7.3910e-06, 2.3246e-06],
        [1.0550e-05, 2.9206e-06],
        [4.2319e-06, 4.1723e-07],
        [4.1723e-07, 2.1994e-05],
        [8.8811e-06, 3.2783e-06],
        [1.7285e-06, 4.3750e-05],
        [4.7684e-07, 2.0564e-05],
        [1.2994e-05, 5.6028e-06],
        [1.3828e-05, 4.7684e-06],
        [5.9605e-07, 2.1219e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0424, 0.0812],
        [0.0756, 0.0455],
        [0.0814, 0.0423],
        [0.0440, 0.0782],
        [0.0403, 0.0853],
        [0.0399, 0.0862],
        [0.0846, 0.0407],
        [0.0865, 0.0398],
        [0.0982, 0.0350],
        [0.0403, 0.0855],
        [0.0820, 0.0419],
        [0.0411, 0.0838],
        [0.0404, 0.0851],
        [0.0795, 0.0433],
        [0.0831, 0.0414],
        [0.0406, 0.0847]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.433557
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-06, 3.2961e-05],
        [1.2696e-05, 9.9540e-06],
        [8.1658e-06, 7.5698e-06],
        [1.5974e-05, 4.7088e-06],
        [6.1393e-06, 3.5167e-05],
        [1.7107e-05, 1.2100e-05],
        [1.0312e-05, 4.0531e-06],
        [2.0444e-05, 1.7941e-05],
        [1.1325e-06, 3.4571e-05],
        [2.9802e-07, 1.1086e-05],
        [1.6868e-05, 6.0201e-06],
        [2.4855e-05, 8.0466e-06],
        [2.8014e-06, 5.8830e-05],
        [8.4043e-06, 3.5763e-06],
        [3.6359e-06, 4.7684e-07],
        [1.6510e-05, 4.2915e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0385, 0.0924],
        [0.0641, 0.0555],
        [0.0615, 0.0579],
        [0.0792, 0.0449],
        [0.0425, 0.0838],
        [0.0657, 0.0542],
        [0.0750, 0.0475],
        [0.0623, 0.0571],
        [0.0378, 0.0942],
        [0.0376, 0.0948],
        [0.0765, 0.0466],
        [0.0779, 0.0457],
        [0.0383, 0.0930],
        [0.0738, 0.0482],
        [0.0886, 0.0402],
        [0.0809, 0.0440]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.447374
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1219e-05, 7.5102e-06],
        [2.6345e-05, 1.2517e-05],
        [1.9014e-05, 1.3053e-05],
        [5.3644e-07, 3.1650e-05],
        [3.7551e-06, 6.4015e-05],
        [8.7023e-06, 3.3975e-06],
        [2.5272e-05, 9.5367e-06],
        [2.7955e-05, 2.5451e-05],
        [1.6034e-05, 9.8944e-06],
        [1.6689e-06, 2.6405e-05],
        [1.1921e-07, 4.7684e-06],
        [1.0669e-05, 3.5763e-06],
        [1.9252e-05, 8.5831e-06],
        [1.0729e-06, 3.1769e-05],
        [7.1526e-07, 4.7863e-05],
        [2.9802e-07, 1.7881e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0842, 0.0419],
        [0.0792, 0.0445],
        [0.0727, 0.0485],
        [0.0409, 0.0863],
        [0.0425, 0.0830],
        [0.0825, 0.0427],
        [0.0831, 0.0424],
        [0.0679, 0.0520],
        [0.0746, 0.0473],
        [0.0427, 0.0827],
        [0.0412, 0.0856],
        [0.0850, 0.0415],
        [0.0803, 0.0439],
        [0.0415, 0.0849],
        [0.0408, 0.0864],
        [0.0409, 0.0863]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.361825
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4901e-06, 3.5405e-05],
        [1.1921e-07, 1.2934e-05],
        [6.5565e-07, 1.9431e-05],
        [2.0385e-05, 9.1791e-06],
        [1.5199e-05, 7.3910e-06],
        [9.5367e-07, 3.1054e-05],
        [1.4305e-06, 3.7789e-05],
        [1.7881e-07, 1.3828e-05],
        [1.4603e-05, 5.7817e-06],
        [3.6359e-06, 2.9802e-07],
        [4.7684e-07, 2.4617e-05],
        [6.5565e-07, 2.2113e-05],
        [1.6212e-05, 5.3644e-06],
        [1.5616e-05, 5.2452e-06],
        [6.0201e-06, 3.7909e-05],
        [1.1384e-05, 4.8280e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0431, 0.0800],
        [0.0418, 0.0825],
        [0.0428, 0.0806],
        [0.0826, 0.0418],
        [0.0812, 0.0425],
        [0.0427, 0.0809],
        [0.0430, 0.0803],
        [0.0420, 0.0823],
        [0.0848, 0.0407],
        [0.1044, 0.0331],
        [0.0422, 0.0817],
        [0.0427, 0.0809],
        [0.0879, 0.0393],
        [0.0876, 0.0394],
        [0.0475, 0.0726],
        [0.0836, 0.0413]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.408703
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.0797e-06, 6.1095e-05],
        [9.2983e-06, 8.6427e-06],
        [8.1062e-06, 1.4901e-06],
        [1.0252e-05, 4.1723e-06],
        [2.1458e-06, 4.0054e-05],
        [1.0729e-06, 3.8445e-05],
        [8.1062e-06, 3.5167e-06],
        [2.0266e-06, 3.7432e-05],
        [2.2173e-05, 6.4969e-06],
        [5.1260e-06, 1.6093e-06],
        [1.2517e-06, 2.8551e-05],
        [2.7418e-06, 5.5194e-05],
        [5.9605e-07, 2.5928e-05],
        [7.1526e-07, 2.7418e-05],
        [1.1921e-07, 1.5914e-05],
        [4.8876e-06, 1.5497e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0758],
        [0.0703, 0.0494],
        [0.0975, 0.0356],
        [0.0853, 0.0407],
        [0.0441, 0.0788],
        [0.0430, 0.0807],
        [0.0841, 0.0413],
        [0.0441, 0.0788],
        [0.0908, 0.0383],
        [0.0897, 0.0388],
        [0.0437, 0.0795],
        [0.0439, 0.0791],
        [0.0428, 0.0811],
        [0.0430, 0.0809],
        [0.0422, 0.0823],
        [0.0895, 0.0388]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.432653
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8477e-06, 3.5405e-05],
        [2.0206e-05, 4.2856e-05],
        [8.9407e-07, 3.7074e-05],
        [4.7684e-07, 2.3246e-05],
        [1.3411e-05, 5.6624e-06],
        [1.7464e-05, 8.3447e-06],
        [7.0333e-06, 3.1590e-06],
        [2.9802e-07, 2.4617e-05],
        [4.8876e-06, 1.6689e-06],
        [2.3246e-06, 2.7418e-05],
        [2.3842e-07, 1.5676e-05],
        [1.0073e-05, 3.0994e-06],
        [1.4901e-06, 4.0650e-05],
        [1.2517e-06, 3.1769e-05],
        [1.8954e-05, 1.9252e-05],
        [8.8215e-06, 3.7551e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0446, 0.0792],
        [0.0585, 0.0604],
        [0.0435, 0.0813],
        [0.0433, 0.0816],
        [0.0858, 0.0412],
        [0.0835, 0.0423],
        [0.0847, 0.0418],
        [0.0430, 0.0823],
        [0.0895, 0.0395],
        [0.0459, 0.0770],
        [0.0431, 0.0820],
        [0.0912, 0.0388],
        [0.0440, 0.0804],
        [0.0441, 0.0802],
        [0.0697, 0.0507],
        [0.0856, 0.0413]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.496866
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.1658e-06, 3.0398e-06],
        [2.5034e-06, 5.0783e-05],
        [1.3113e-06, 2.4915e-05],
        [1.3113e-06, 2.8849e-05],
        [2.3246e-06, 2.6762e-05],
        [1.9014e-05, 9.0599e-06],
        [1.3113e-06, 3.4094e-05],
        [5.3644e-07, 3.4034e-05],
        [1.1921e-07, 1.5855e-05],
        [1.2517e-06, 3.1352e-05],
        [1.0669e-05, 4.7684e-06],
        [4.4107e-06, 5.9605e-07],
        [1.8477e-06, 4.0650e-05],
        [7.7486e-07, 3.2723e-05],
        [1.0312e-05, 6.9141e-06],
        [3.5763e-07, 1.9729e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0956, 0.0369],
        [0.0483, 0.0730],
        [0.0485, 0.0728],
        [0.0482, 0.0733],
        [0.0500, 0.0707],
        [0.0908, 0.0389],
        [0.0479, 0.0738],
        [0.0468, 0.0754],
        [0.0465, 0.0760],
        [0.0479, 0.0737],
        [0.0921, 0.0384],
        [0.1113, 0.0317],
        [0.0482, 0.0733],
        [0.0472, 0.0748],
        [0.0839, 0.0421],
        [0.0469, 0.0752]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.366468
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 9.4771e-06],
        [1.0669e-05, 8.7023e-06],
        [1.4007e-05, 5.0068e-06],
        [1.7881e-06, 4.1485e-05],
        [1.1683e-05, 3.8743e-06],
        [1.3709e-06, 2.8193e-05],
        [2.9802e-06, 4.8876e-05],
        [1.5378e-05, 6.8545e-06],
        [1.2040e-05, 3.3379e-06],
        [5.9605e-07, 2.2650e-05],
        [9.7156e-06, 4.6611e-05],
        [1.1325e-05, 1.0908e-05],
        [2.8610e-06, 3.4928e-05],
        [1.2517e-06, 3.5942e-05],
        [1.5140e-05, 8.5831e-06],
        [1.0729e-05, 5.7817e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0826],
        [0.0719, 0.0494],
        [0.0866, 0.0410],
        [0.0432, 0.0822],
        [0.0879, 0.0404],
        [0.0434, 0.0818],
        [0.0439, 0.0809],
        [0.0828, 0.0429],
        [0.0907, 0.0392],
        [0.0425, 0.0835],
        [0.0493, 0.0721],
        [0.0690, 0.0515],
        [0.0447, 0.0794],
        [0.0429, 0.0829],
        [0.0785, 0.0453],
        [0.0794, 0.0447]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.423265
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2517e-06, 3.4153e-05],
        [2.9802e-06, 4.8399e-05],
        [1.0669e-05, 3.6359e-06],
        [2.0742e-05, 8.4639e-06],
        [8.5235e-06, 2.6226e-06],
        [1.0133e-05, 4.9472e-06],
        [1.1921e-07, 1.0788e-05],
        [1.0073e-05, 3.3379e-06],
        [3.5167e-06, 2.3842e-07],
        [8.9407e-06, 2.6226e-06],
        [1.9670e-06, 5.0128e-05],
        [1.0788e-05, 3.5167e-06],
        [1.7881e-07, 1.9968e-05],
        [9.1195e-06, 3.5167e-06],
        [9.5367e-07, 2.8849e-05],
        [7.4506e-06, 4.5002e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0389, 0.0885],
        [0.0398, 0.0865],
        [0.0792, 0.0435],
        [0.0765, 0.0450],
        [0.0807, 0.0427],
        [0.0736, 0.0468],
        [0.0380, 0.0906],
        [0.0796, 0.0432],
        [0.0959, 0.0359],
        [0.0814, 0.0423],
        [0.0390, 0.0882],
        [0.0799, 0.0431],
        [0.0379, 0.0908],
        [0.0773, 0.0445],
        [0.0388, 0.0888],
        [0.0433, 0.0795]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.494085
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.4771e-06, 2.3246e-06],
        [1.6809e-05, 9.0599e-06],
        [1.7881e-07, 1.2100e-05],
        [2.1935e-05, 1.0371e-05],
        [1.0133e-06, 2.8908e-05],
        [1.0133e-06, 3.1292e-05],
        [1.9073e-06, 3.8743e-05],
        [4.7684e-07, 9.3579e-06],
        [3.5763e-07, 3.1173e-05],
        [8.4639e-06, 3.1590e-06],
        [1.0133e-06, 3.0220e-05],
        [1.9014e-05, 3.9876e-05],
        [1.8477e-06, 3.7253e-05],
        [7.1526e-07, 2.7657e-05],
        [1.8954e-05, 2.8253e-05],
        [1.1325e-06, 3.6538e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1043, 0.0344],
        [0.0895, 0.0401],
        [0.0474, 0.0756],
        [0.0922, 0.0389],
        [0.0484, 0.0741],
        [0.0482, 0.0743],
        [0.0490, 0.0732],
        [0.0491, 0.0731],
        [0.0473, 0.0758],
        [0.0968, 0.0370],
        [0.0483, 0.0743],
        [0.0646, 0.0555],
        [0.0490, 0.0732],
        [0.0479, 0.0748],
        [0.0698, 0.0513],
        [0.0482, 0.0744]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.408525
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3471e-05, 8.4043e-06],
        [8.9407e-07, 3.4332e-05],
        [4.7684e-07, 1.9848e-05],
        [8.5831e-06, 3.2187e-06],
        [4.5300e-06, 7.7486e-07],
        [6.5565e-07, 2.5451e-05],
        [8.7023e-06, 2.3246e-06],
        [9.4771e-06, 6.3181e-06],
        [4.1723e-07, 1.8418e-05],
        [2.3842e-07, 1.9968e-05],
        [1.9848e-05, 1.2398e-05],
        [1.2219e-05, 7.5698e-06],
        [2.2650e-06, 4.2081e-05],
        [1.0312e-05, 2.8610e-06],
        [1.8954e-05, 6.1393e-06],
        [1.5199e-05, 2.4319e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0713, 0.0492],
        [0.0395, 0.0888],
        [0.0395, 0.0889],
        [0.0798, 0.0440],
        [0.0905, 0.0388],
        [0.0395, 0.0888],
        [0.0849, 0.0414],
        [0.0702, 0.0500],
        [0.0394, 0.0891],
        [0.0390, 0.0900],
        [0.0713, 0.0492],
        [0.0715, 0.0491],
        [0.0406, 0.0865],
        [0.0843, 0.0416],
        [0.0820, 0.0428],
        [0.0566, 0.0620]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.452381
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.4438e-06, 3.8922e-05],
        [2.5570e-05, 2.2411e-05],
        [2.2054e-06, 3.2902e-05],
        [4.6492e-06, 1.0133e-06],
        [1.1325e-05, 8.8215e-06],
        [1.9908e-05, 7.9870e-06],
        [1.3173e-05, 8.4639e-06],
        [3.0220e-05, 1.7464e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0779, 0.1869],
        [0.1251, 0.1164],
        [0.0782, 0.1862],
        [0.1669, 0.0872],
        [0.1288, 0.1130],
        [0.1499, 0.0971],
        [0.1350, 0.1079],
        [0.1384, 0.1052]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.178696
acc:  0.965
Time taken to execute the en SA task with prompt type modal, variation 6 and batchsize 16: 0:00:05.521751
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_6']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06],
        [5.3644e-06, 8.0466e-06]], device='cuda:0') torch.Size([131, 2])
answers_probs just softmax dim 0: tensor([[0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076]], device='cuda:0')
tensor([[0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 7 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9206e-05, 3.1590e-05],
        [1.7881e-07, 2.2173e-05],
        [2.3842e-07, 1.5378e-05],
        [1.7345e-05, 1.0073e-05],
        [9.0003e-06, 5.1260e-06],
        [2.7478e-05, 5.6744e-05],
        [2.5272e-05, 2.4498e-05],
        [2.6226e-06, 3.5763e-07],
        [1.3649e-05, 6.3181e-06],
        [1.6391e-05, 2.0742e-05],
        [5.3644e-07, 3.9458e-05],
        [2.0921e-05, 1.2100e-05],
        [1.0729e-06, 4.9770e-05],
        [8.7619e-06, 8.3447e-06],
        [1.6093e-06, 5.2214e-05],
        [5.9605e-07, 4.7207e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0673, 0.0533],
        [0.0419, 0.0856],
        [0.0422, 0.0849],
        [0.0783, 0.0458],
        [0.0787, 0.0456],
        [0.0576, 0.0622],
        [0.0691, 0.0519],
        [0.1003, 0.0358],
        [0.0824, 0.0435],
        [0.0647, 0.0555],
        [0.0422, 0.0851],
        [0.0784, 0.0458],
        [0.0425, 0.0844],
        [0.0694, 0.0517],
        [0.0429, 0.0837],
        [0.0421, 0.0852]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.434905
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2100e-05, 4.1127e-06],
        [8.3447e-07, 2.8431e-05],
        [1.3709e-06, 5.9068e-05],
        [1.2159e-05, 9.7752e-06],
        [2.4676e-05, 6.6042e-05],
        [1.7583e-05, 1.2875e-05],
        [2.2590e-05, 2.2769e-05],
        [1.1325e-06, 5.3823e-05],
        [1.9848e-05, 1.8239e-05],
        [8.9407e-07, 5.3108e-05],
        [3.3975e-06, 1.4901e-06],
        [2.9922e-05, 4.7445e-05],
        [1.0133e-06, 5.9903e-05],
        [2.0146e-05, 1.6034e-05],
        [1.5438e-05, 6.3777e-06],
        [7.7486e-07, 3.7193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0892, 0.0405],
        [0.0435, 0.0831],
        [0.0433, 0.0836],
        [0.0736, 0.0491],
        [0.0555, 0.0652],
        [0.0753, 0.0480],
        [0.0696, 0.0520],
        [0.0432, 0.0838],
        [0.0712, 0.0508],
        [0.0430, 0.0841],
        [0.0847, 0.0427],
        [0.0622, 0.0581],
        [0.0430, 0.0841],
        [0.0738, 0.0490],
        [0.0858, 0.0421],
        [0.0432, 0.0838]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.493375
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 5.0068e-06],
        [2.3782e-05, 1.8835e-05],
        [1.2696e-05, 7.6294e-06],
        [1.1623e-05, 1.3173e-05],
        [1.8179e-05, 9.8348e-06],
        [2.2471e-05, 1.7524e-05],
        [8.0466e-06, 2.7418e-06],
        [1.9014e-05, 8.5235e-06],
        [2.9802e-05, 1.8358e-05],
        [2.7239e-05, 3.6061e-05],
        [1.8775e-05, 6.2585e-05],
        [5.3644e-07, 4.6611e-05],
        [1.5557e-05, 1.3590e-05],
        [2.8431e-05, 1.8060e-05],
        [1.6212e-05, 2.1458e-05],
        [1.8358e-05, 1.9193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0392, 0.0954],
        [0.0662, 0.0565],
        [0.0707, 0.0528],
        [0.0605, 0.0618],
        [0.0725, 0.0516],
        [0.0664, 0.0563],
        [0.0799, 0.0468],
        [0.0756, 0.0495],
        [0.0703, 0.0532],
        [0.0582, 0.0642],
        [0.0477, 0.0784],
        [0.0383, 0.0976],
        [0.0646, 0.0579],
        [0.0698, 0.0535],
        [0.0583, 0.0642],
        [0.0618, 0.0605]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.564811
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5140e-05, 1.6749e-05],
        [1.6093e-06, 6.0558e-05],
        [1.7881e-07, 2.5630e-05],
        [1.9610e-05, 1.9312e-05],
        [1.3709e-06, 5.1558e-05],
        [2.0087e-05, 3.4153e-05],
        [4.1723e-07, 2.6464e-05],
        [1.9073e-06, 6.9499e-05],
        [4.7684e-07, 1.0073e-05],
        [1.7881e-07, 1.0848e-05],
        [7.4506e-06, 9.3162e-05],
        [8.9407e-07, 5.3525e-05],
        [1.1325e-05, 8.4043e-06],
        [2.1935e-05, 2.0146e-05],
        [3.0994e-06, 8.2552e-05],
        [2.9802e-07, 4.1425e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0826, 0.0451],
        [0.0527, 0.0707],
        [0.0517, 0.0721],
        [0.0850, 0.0438],
        [0.0527, 0.0707],
        [0.0744, 0.0501],
        [0.0522, 0.0714],
        [0.0527, 0.0706],
        [0.0537, 0.0693],
        [0.0522, 0.0714],
        [0.0553, 0.0674],
        [0.0522, 0.0714],
        [0.0912, 0.0409],
        [0.0865, 0.0431],
        [0.0532, 0.0700],
        [0.0517, 0.0720]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.339992
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3888e-05, 1.1981e-05],
        [5.3644e-07, 4.0650e-05],
        [1.4305e-06, 5.5194e-05],
        [1.7047e-05, 1.5259e-05],
        [2.4140e-05, 7.7248e-05],
        [8.3447e-07, 5.6148e-05],
        [2.0981e-05, 2.8014e-05],
        [1.6153e-05, 1.1146e-05],
        [2.7418e-06, 5.2750e-05],
        [7.9870e-06, 3.3975e-06],
        [1.1921e-06, 2.9624e-05],
        [1.9252e-05, 1.6332e-05],
        [1.9670e-06, 3.7611e-05],
        [2.7418e-06, 3.5763e-07],
        [2.1458e-05, 1.5855e-05],
        [1.1921e-07, 1.3471e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0739, 0.0486],
        [0.0438, 0.0821],
        [0.0443, 0.0811],
        [0.0732, 0.0491],
        [0.0548, 0.0655],
        [0.0438, 0.0819],
        [0.0663, 0.0542],
        [0.0780, 0.0460],
        [0.0454, 0.0791],
        [0.0871, 0.0412],
        [0.0449, 0.0800],
        [0.0742, 0.0484],
        [0.0454, 0.0791],
        [0.1046, 0.0343],
        [0.0768, 0.0468],
        [0.0436, 0.0824]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.412316
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9624e-05, 1.9729e-05],
        [3.7551e-06, 5.9605e-07],
        [4.1723e-07, 2.7895e-05],
        [2.8789e-05, 2.6405e-05],
        [4.1723e-07, 4.1366e-05],
        [2.5034e-06, 7.2122e-05],
        [3.5763e-07, 2.8670e-05],
        [1.3709e-05, 1.3471e-05],
        [1.1921e-06, 5.2392e-05],
        [2.1577e-05, 1.2219e-05],
        [2.3842e-07, 2.4736e-05],
        [9.5367e-06, 4.9472e-06],
        [5.9605e-08, 1.3232e-05],
        [1.0133e-06, 4.0829e-05],
        [1.5497e-06, 4.3929e-05],
        [2.3842e-06, 8.4400e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0846, 0.0421],
        [0.1100, 0.0324],
        [0.0471, 0.0757],
        [0.0782, 0.0456],
        [0.0469, 0.0760],
        [0.0480, 0.0743],
        [0.0470, 0.0758],
        [0.0768, 0.0464],
        [0.0474, 0.0751],
        [0.0879, 0.0406],
        [0.0468, 0.0761],
        [0.0896, 0.0397],
        [0.0466, 0.0764],
        [0.0475, 0.0749],
        [0.0480, 0.0742],
        [0.0477, 0.0747]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.449969
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-05, 5.3227e-05],
        [2.6464e-05, 1.3530e-05],
        [1.1325e-06, 1.6034e-05],
        [6.5565e-07, 3.4451e-05],
        [3.0398e-05, 1.8299e-05],
        [9.4175e-06, 1.3888e-05],
        [1.4544e-05, 6.9141e-06],
        [9.2983e-06, 5.3644e-06],
        [1.2338e-05, 7.1526e-06],
        [4.7684e-07, 4.3809e-05],
        [9.5367e-06, 6.9737e-06],
        [9.0003e-06, 6.9141e-05],
        [1.4842e-05, 1.6570e-05],
        [1.7285e-06, 7.1049e-05],
        [2.9802e-07, 2.4796e-05],
        [1.1563e-05, 9.9540e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0626, 0.0582],
        [0.0811, 0.0449],
        [0.0447, 0.0815],
        [0.0426, 0.0854],
        [0.0781, 0.0466],
        [0.0627, 0.0581],
        [0.0824, 0.0442],
        [0.0789, 0.0462],
        [0.0788, 0.0462],
        [0.0423, 0.0861],
        [0.0746, 0.0488],
        [0.0470, 0.0776],
        [0.0671, 0.0543],
        [0.0429, 0.0850],
        [0.0424, 0.0860],
        [0.0716, 0.0509]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.366443
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2517e-05, 7.4506e-06],
        [1.0729e-06, 6.0737e-05],
        [4.1723e-07, 2.5690e-05],
        [1.9431e-05, 1.4663e-05],
        [9.5963e-06, 4.4703e-06],
        [1.4007e-05, 4.1127e-06],
        [3.5763e-07, 3.0935e-05],
        [4.7088e-06, 1.0389e-04],
        [1.3471e-05, 6.4373e-06],
        [6.9141e-06, 7.7486e-05],
        [1.2577e-05, 8.5831e-06],
        [1.7285e-06, 1.7881e-07],
        [2.2769e-05, 1.1981e-05],
        [8.9407e-07, 3.0696e-05],
        [1.4722e-05, 5.9605e-06],
        [4.7684e-07, 3.4809e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0742, 0.0471],
        [0.0403, 0.0867],
        [0.0403, 0.0868],
        [0.0701, 0.0499],
        [0.0784, 0.0446],
        [0.0859, 0.0407],
        [0.0401, 0.0872],
        [0.0414, 0.0845],
        [0.0780, 0.0448],
        [0.0430, 0.0813],
        [0.0718, 0.0487],
        [0.0981, 0.0356],
        [0.0764, 0.0458],
        [0.0408, 0.0858],
        [0.0808, 0.0433],
        [0.0402, 0.0870]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.407856
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 4.8518e-05],
        [1.1921e-07, 1.7822e-05],
        [2.3127e-05, 6.6459e-05],
        [3.4571e-06, 6.1333e-05],
        [7.5102e-06, 5.7876e-05],
        [7.1526e-07, 3.7611e-05],
        [4.1723e-07, 1.3590e-05],
        [1.9670e-06, 8.0407e-05],
        [2.3842e-07, 2.4498e-05],
        [5.3644e-07, 3.3200e-05],
        [2.0266e-06, 4.8459e-05],
        [2.3246e-06, 5.2094e-05],
        [1.6809e-05, 1.2100e-05],
        [2.9802e-07, 4.4465e-05],
        [3.0398e-06, 7.5936e-05],
        [6.1393e-06, 6.1870e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0579, 0.0661],
        [0.0572, 0.0670],
        [0.0735, 0.0521],
        [0.0599, 0.0639],
        [0.0637, 0.0601],
        [0.0579, 0.0662],
        [0.0585, 0.0654],
        [0.0582, 0.0658],
        [0.0573, 0.0668],
        [0.0577, 0.0663],
        [0.0591, 0.0647],
        [0.0593, 0.0646],
        [0.1016, 0.0377],
        [0.0572, 0.0670],
        [0.0590, 0.0649],
        [0.0622, 0.0616]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.447977
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 2.3842e-05],
        [4.7684e-07, 4.3809e-05],
        [3.0398e-06, 2.9802e-07],
        [2.3365e-05, 5.2273e-05],
        [1.2696e-05, 6.3777e-06],
        [1.6749e-05, 1.2100e-05],
        [1.7881e-07, 1.9073e-05],
        [1.8597e-05, 1.5676e-05],
        [1.4305e-06, 6.5684e-05],
        [3.1233e-05, 2.9564e-05],
        [2.3842e-06, 4.4107e-05],
        [7.0930e-06, 3.6955e-06],
        [3.5763e-07, 2.8670e-05],
        [3.3975e-06, 6.5088e-05],
        [2.9802e-07, 2.0862e-05],
        [1.7047e-05, 9.1791e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0442, 0.0803],
        [0.0439, 0.0808],
        [0.1081, 0.0328],
        [0.0592, 0.0600],
        [0.0846, 0.0420],
        [0.0777, 0.0457],
        [0.0439, 0.0809],
        [0.0748, 0.0475],
        [0.0444, 0.0799],
        [0.0727, 0.0488],
        [0.0458, 0.0776],
        [0.0839, 0.0423],
        [0.0440, 0.0807],
        [0.0457, 0.0777],
        [0.0441, 0.0805],
        [0.0833, 0.0426]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.364917
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 4.0650e-05],
        [1.2517e-06, 5.6684e-05],
        [9.9540e-06, 7.3314e-06],
        [7.7486e-06, 4.6492e-06],
        [6.5565e-07, 8.0764e-05],
        [1.1921e-07, 1.8418e-05],
        [1.3232e-05, 2.2173e-05],
        [3.4392e-05, 1.8716e-05],
        [1.0252e-05, 5.7220e-06],
        [3.5763e-06, 6.8247e-05],
        [1.3888e-05, 5.7817e-06],
        [4.7684e-07, 1.9908e-05],
        [2.6107e-05, 2.2531e-05],
        [7.1526e-07, 3.7730e-05],
        [3.6955e-06, 6.5565e-07],
        [7.6890e-06, 5.7817e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0423, 0.0840],
        [0.0428, 0.0832],
        [0.0744, 0.0478],
        [0.0782, 0.0455],
        [0.0422, 0.0843],
        [0.0421, 0.0844],
        [0.0608, 0.0585],
        [0.0800, 0.0445],
        [0.0795, 0.0447],
        [0.0440, 0.0808],
        [0.0848, 0.0419],
        [0.0428, 0.0830],
        [0.0716, 0.0497],
        [0.0426, 0.0834],
        [0.0978, 0.0363],
        [0.0741, 0.0480]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.425051
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 4.4823e-05],
        [2.3842e-07, 3.4690e-05],
        [2.3842e-06, 7.7486e-07],
        [3.1829e-05, 2.1040e-05],
        [1.0133e-06, 4.9591e-05],
        [1.2219e-05, 5.6624e-06],
        [1.1265e-05, 7.4506e-06],
        [5.7220e-06, 1.0395e-04],
        [8.5235e-06, 3.3975e-06],
        [1.4603e-05, 1.7226e-05],
        [1.2338e-05, 1.7643e-05],
        [2.2650e-06, 6.9618e-05],
        [1.9670e-06, 4.8101e-05],
        [1.1921e-07, 1.3888e-05],
        [3.5763e-07, 2.5988e-05],
        [3.0398e-06, 8.9884e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0469, 0.0764],
        [0.0455, 0.0787],
        [0.0961, 0.0373],
        [0.0825, 0.0434],
        [0.0461, 0.0777],
        [0.0895, 0.0400],
        [0.0825, 0.0434],
        [0.0476, 0.0752],
        [0.0923, 0.0388],
        [0.0715, 0.0501],
        [0.0682, 0.0525],
        [0.0466, 0.0768],
        [0.0470, 0.0762],
        [0.0456, 0.0786],
        [0.0458, 0.0782],
        [0.0467, 0.0767]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.411210
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.2531e-05, 1.2696e-05],
        [1.4424e-05, 2.6107e-05],
        [1.9610e-05, 1.4126e-05],
        [5.9605e-07, 1.1027e-05],
        [2.3842e-06, 7.8857e-05],
        [1.1325e-05, 6.0201e-06],
        [3.8147e-06, 7.8797e-05],
        [1.5497e-06, 7.1228e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1695, 0.0856],
        [0.1276, 0.1137],
        [0.1599, 0.0907],
        [0.0941, 0.1542],
        [0.0921, 0.1576],
        [0.1718, 0.0845],
        [0.0936, 0.1549],
        [0.0913, 0.1588]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.159000
acc:  0.945
Time taken to execute the en SA task with prompt type modal, variation 7 and batchsize 16: 0:00:05.293286
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_7']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05],
        [7.1526e-06, 1.3351e-05]], device='cuda:0') torch.Size([112, 2])
answers_probs just softmax dim 0: tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 8 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0266e-06, 6.4790e-05],
        [1.6093e-05, 1.4007e-05],
        [3.5167e-06, 7.7486e-07],
        [6.4969e-06, 1.1134e-04],
        [3.2783e-06, 7.3612e-05],
        [9.1791e-06, 7.9274e-06],
        [8.9407e-07, 3.9637e-05],
        [1.7285e-06, 5.1856e-05],
        [1.3709e-05, 8.1062e-06],
        [9.3579e-06, 7.7486e-06],
        [2.3842e-07, 2.1756e-05],
        [1.0967e-05, 1.2243e-04],
        [1.5140e-05, 8.5711e-05],
        [2.0504e-05, 1.2457e-05],
        [1.1921e-06, 4.1723e-05],
        [1.9014e-05, 1.2577e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0784],
        [0.0760, 0.0474],
        [0.1011, 0.0356],
        [0.0471, 0.0765],
        [0.0465, 0.0774],
        [0.0762, 0.0473],
        [0.0455, 0.0791],
        [0.0460, 0.0783],
        [0.0835, 0.0431],
        [0.0770, 0.0468],
        [0.0450, 0.0800],
        [0.0484, 0.0744],
        [0.0518, 0.0696],
        [0.0830, 0.0434],
        [0.0458, 0.0786],
        [0.0813, 0.0443]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.368172
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8908e-05, 7.7963e-05],
        [2.8610e-06, 4.1723e-07],
        [1.0133e-06, 4.7386e-05],
        [2.9624e-05, 2.1636e-05],
        [3.2187e-06, 6.6996e-05],
        [2.6524e-05, 1.6749e-05],
        [3.3379e-06, 6.7115e-05],
        [1.6570e-05, 2.9504e-05],
        [1.2457e-05, 1.3590e-05],
        [7.7486e-07, 3.5405e-05],
        [2.4080e-05, 2.2650e-05],
        [1.0788e-05, 8.7023e-06],
        [5.1260e-06, 9.2626e-05],
        [1.1623e-05, 6.2585e-06],
        [1.4424e-05, 1.3888e-05],
        [2.1636e-05, 1.9848e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0540, 0.0675],
        [0.0987, 0.0370],
        [0.0421, 0.0866],
        [0.0735, 0.0496],
        [0.0432, 0.0845],
        [0.0761, 0.0479],
        [0.0432, 0.0844],
        [0.0591, 0.0617],
        [0.0665, 0.0548],
        [0.0421, 0.0866],
        [0.0690, 0.0528],
        [0.0717, 0.0509],
        [0.0435, 0.0839],
        [0.0790, 0.0462],
        [0.0686, 0.0531],
        [0.0695, 0.0525]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.405608
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4782e-05, 9.1791e-06],
        [1.4126e-05, 1.0669e-05],
        [2.7418e-06, 4.0233e-05],
        [9.2387e-06, 1.0729e-04],
        [2.9206e-06, 6.9678e-05],
        [2.9802e-07, 2.6584e-05],
        [1.9014e-05, 2.9922e-05],
        [3.6836e-05, 5.1558e-05],
        [5.4836e-06, 6.6042e-05],
        [2.1458e-06, 5.1498e-05],
        [1.6093e-06, 1.7762e-05],
        [5.4836e-06, 1.2147e-04],
        [2.9981e-05, 2.9027e-05],
        [2.6524e-05, 3.3796e-05],
        [1.8060e-05, 1.1563e-05],
        [4.2915e-06, 1.3709e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0833, 0.0440],
        [0.0794, 0.0461],
        [0.0479, 0.0764],
        [0.0486, 0.0752],
        [0.0468, 0.0782],
        [0.0454, 0.0806],
        [0.0663, 0.0552],
        [0.0682, 0.0537],
        [0.0485, 0.0754],
        [0.0468, 0.0783],
        [0.0488, 0.0750],
        [0.0469, 0.0780],
        [0.0747, 0.0490],
        [0.0698, 0.0525],
        [0.0827, 0.0443],
        [0.0959, 0.0382]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.315122
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4305e-05, 2.7418e-05],
        [8.3447e-07, 4.0710e-05],
        [3.7670e-05, 4.2319e-05],
        [1.0788e-05, 1.1176e-04],
        [4.1723e-07, 7.0930e-06],
        [2.3842e-07, 1.9670e-05],
        [2.3663e-05, 1.6928e-05],
        [2.0862e-06, 4.6253e-05],
        [2.6166e-05, 4.2140e-05],
        [1.4663e-05, 5.8055e-05],
        [6.5565e-07, 2.5392e-05],
        [1.2398e-05, 1.3828e-05],
        [2.6882e-05, 8.2791e-05],
        [2.9802e-07, 2.6166e-05],
        [2.3246e-06, 5.4121e-05],
        [3.1590e-05, 6.1393e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0702, 0.0537],
        [0.0508, 0.0741],
        [0.0797, 0.0472],
        [0.0544, 0.0693],
        [0.0526, 0.0716],
        [0.0504, 0.0747],
        [0.0892, 0.0422],
        [0.0520, 0.0724],
        [0.0730, 0.0516],
        [0.0609, 0.0618],
        [0.0511, 0.0738],
        [0.0799, 0.0471],
        [0.0636, 0.0592],
        [0.0504, 0.0748],
        [0.0519, 0.0726],
        [0.0699, 0.0539]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.566998
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3975e-06, 9.7692e-05],
        [2.5988e-05, 1.8299e-05],
        [1.7464e-05, 9.8825e-05],
        [2.5332e-05, 2.2709e-05],
        [1.4007e-05, 3.1233e-05],
        [2.9802e-07, 9.2983e-06],
        [3.0994e-06, 9.5189e-05],
        [1.1981e-05, 2.0683e-05],
        [1.3232e-05, 8.0466e-06],
        [1.2994e-05, 6.8545e-06],
        [4.1127e-05, 3.2783e-05],
        [3.8743e-06, 8.9824e-05],
        [2.3842e-06, 6.1691e-05],
        [1.0550e-05, 9.7990e-05],
        [1.8239e-05, 1.8001e-05],
        [3.2842e-05, 3.0160e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0806],
        [0.0795, 0.0464],
        [0.0514, 0.0717],
        [0.0749, 0.0492],
        [0.0603, 0.0612],
        [0.0456, 0.0808],
        [0.0456, 0.0808],
        [0.0638, 0.0578],
        [0.0824, 0.0448],
        [0.0851, 0.0433],
        [0.0772, 0.0478],
        [0.0461, 0.0800],
        [0.0459, 0.0803],
        [0.0487, 0.0756],
        [0.0732, 0.0504],
        [0.0745, 0.0495]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.287650
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1127e-06, 4.5002e-05],
        [3.4571e-05, 2.9802e-05],
        [3.0994e-06, 4.1723e-07],
        [2.4974e-05, 2.2411e-05],
        [3.9816e-05, 3.2246e-05],
        [1.6749e-05, 1.3888e-05],
        [2.3842e-06, 5.3704e-05],
        [2.1100e-05, 1.2875e-05],
        [8.0466e-06, 4.7684e-06],
        [2.2590e-05, 3.3677e-05],
        [4.1127e-06, 1.1820e-04],
        [2.4021e-05, 5.5790e-05],
        [2.5034e-05, 1.9193e-05],
        [2.1040e-05, 2.5988e-05],
        [1.6749e-05, 1.3173e-05],
        [1.9491e-05, 1.8775e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0422, 0.0880],
        [0.0664, 0.0559],
        [0.0937, 0.0396],
        [0.0657, 0.0565],
        [0.0674, 0.0551],
        [0.0670, 0.0554],
        [0.0405, 0.0917],
        [0.0722, 0.0514],
        [0.0727, 0.0511],
        [0.0580, 0.0641],
        [0.0401, 0.0925],
        [0.0524, 0.0708],
        [0.0683, 0.0543],
        [0.0607, 0.0612],
        [0.0679, 0.0547],
        [0.0646, 0.0575]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.450898
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 4.5180e-05],
        [2.7418e-06, 5.5611e-05],
        [2.2590e-05, 2.8551e-05],
        [4.3511e-06, 7.7486e-07],
        [3.2961e-05, 5.7399e-05],
        [1.0729e-06, 3.7551e-05],
        [9.4771e-06, 6.6459e-05],
        [1.7762e-05, 1.0967e-05],
        [1.7822e-05, 1.1683e-05],
        [1.2457e-05, 8.7857e-05],
        [1.4901e-06, 5.7042e-05],
        [3.3379e-06, 4.3273e-05],
        [1.2815e-05, 2.2709e-05],
        [5.0664e-06, 6.6698e-05],
        [3.0994e-06, 6.8963e-05],
        [4.5419e-05, 4.5061e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0475, 0.0770],
        [0.0483, 0.0756],
        [0.0717, 0.0510],
        [0.1077, 0.0339],
        [0.0664, 0.0551],
        [0.0474, 0.0771],
        [0.0522, 0.0700],
        [0.0855, 0.0427],
        [0.0843, 0.0433],
        [0.0522, 0.0700],
        [0.0473, 0.0773],
        [0.0495, 0.0738],
        [0.0661, 0.0553],
        [0.0495, 0.0739],
        [0.0481, 0.0760],
        [0.0762, 0.0480]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.405549
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0742e-05, 2.2233e-05],
        [7.2718e-06, 5.0664e-06],
        [2.6822e-05, 6.6936e-05],
        [2.1279e-05, 9.8407e-05],
        [1.1325e-06, 3.8862e-05],
        [2.2054e-06, 7.8976e-05],
        [6.0797e-06, 6.9797e-05],
        [7.5698e-06, 9.2983e-05],
        [8.3447e-07, 5.7757e-05],
        [6.1989e-06, 7.4923e-05],
        [2.6822e-06, 6.0737e-05],
        [5.3644e-06, 8.9407e-07],
        [1.6809e-05, 7.6890e-06],
        [2.7537e-05, 2.9325e-05],
        [3.2187e-06, 7.2122e-05],
        [1.0133e-06, 4.7028e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0760, 0.0478],
        [0.0845, 0.0430],
        [0.0624, 0.0582],
        [0.0560, 0.0649],
        [0.0482, 0.0753],
        [0.0482, 0.0754],
        [0.0508, 0.0715],
        [0.0505, 0.0719],
        [0.0475, 0.0764],
        [0.0506, 0.0718],
        [0.0489, 0.0743],
        [0.1105, 0.0329],
        [0.0931, 0.0390],
        [0.0761, 0.0477],
        [0.0489, 0.0742],
        [0.0479, 0.0759]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.430306
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-06, 8.2612e-05],
        [1.3649e-05, 9.8944e-06],
        [5.3048e-06, 1.1325e-06],
        [1.0788e-05, 1.0908e-04],
        [3.2723e-05, 3.3736e-05],
        [7.1526e-07, 2.1100e-05],
        [6.7353e-06, 9.7275e-05],
        [3.2187e-06, 5.3525e-05],
        [6.0201e-06, 8.1301e-05],
        [3.2485e-05, 2.0623e-05],
        [3.2306e-05, 5.2035e-05],
        [3.5226e-05, 3.1590e-05],
        [1.7703e-05, 2.3425e-05],
        [2.0862e-05, 1.1504e-05],
        [3.7551e-06, 6.0976e-05],
        [3.3379e-06, 1.0180e-04]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0461, 0.0788],
        [0.0790, 0.0460],
        [0.1008, 0.0360],
        [0.0484, 0.0751],
        [0.0724, 0.0502],
        [0.0457, 0.0795],
        [0.0472, 0.0770],
        [0.0468, 0.0776],
        [0.0474, 0.0767],
        [0.0815, 0.0446],
        [0.0649, 0.0560],
        [0.0749, 0.0485],
        [0.0680, 0.0534],
        [0.0843, 0.0431],
        [0.0469, 0.0775],
        [0.0457, 0.0796]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.422518
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-05, 1.2589e-04],
        [1.9073e-06, 4.9531e-05],
        [7.7486e-07, 1.8060e-05],
        [3.5763e-06, 8.0824e-05],
        [2.2769e-05, 1.7583e-05],
        [1.4484e-05, 1.4126e-05],
        [4.1544e-05, 3.9339e-05],
        [1.1921e-06, 3.4571e-05],
        [1.1325e-06, 4.8935e-05],
        [1.1444e-05, 9.0957e-05],
        [1.8060e-05, 1.9252e-05],
        [7.1526e-07, 3.6359e-05],
        [1.1623e-05, 7.2718e-06],
        [1.2159e-05, 1.1206e-05],
        [2.5630e-06, 7.1347e-05],
        [2.6107e-05, 1.4007e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0516, 0.0711],
        [0.0480, 0.0764],
        [0.0482, 0.0761],
        [0.0482, 0.0760],
        [0.0813, 0.0451],
        [0.0767, 0.0478],
        [0.0773, 0.0475],
        [0.0478, 0.0767],
        [0.0473, 0.0775],
        [0.0517, 0.0709],
        [0.0750, 0.0489],
        [0.0471, 0.0778],
        [0.0855, 0.0429],
        [0.0778, 0.0471],
        [0.0479, 0.0766],
        [0.0886, 0.0414]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.427629
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3411e-05, 1.2994e-05],
        [1.5736e-05, 1.4007e-04],
        [1.8835e-05, 7.2122e-05],
        [8.1062e-06, 6.4373e-06],
        [4.4703e-06, 6.3658e-05],
        [9.0003e-06, 6.7472e-05],
        [1.8835e-05, 1.2159e-05],
        [2.4915e-05, 2.4676e-05],
        [1.4484e-05, 1.1683e-05],
        [1.6332e-05, 1.3769e-05],
        [5.7817e-06, 2.7418e-06],
        [2.8610e-06, 5.6982e-05],
        [1.9073e-06, 5.7697e-05],
        [1.1146e-05, 9.4175e-06],
        [1.3709e-06, 5.4538e-05],
        [1.6093e-06, 6.0797e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0732, 0.0502],
        [0.0487, 0.0754],
        [0.0542, 0.0678],
        [0.0769, 0.0478],
        [0.0470, 0.0781],
        [0.0495, 0.0742],
        [0.0809, 0.0454],
        [0.0728, 0.0505],
        [0.0766, 0.0480],
        [0.0758, 0.0485],
        [0.0868, 0.0423],
        [0.0462, 0.0796],
        [0.0455, 0.0808],
        [0.0757, 0.0485],
        [0.0451, 0.0814],
        [0.0452, 0.0813]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.480294
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 9.8944e-06],
        [6.5565e-07, 3.5584e-05],
        [1.2875e-05, 1.0192e-05],
        [1.8716e-05, 1.1146e-05],
        [2.0027e-05, 6.3241e-05],
        [2.0921e-05, 2.5034e-05],
        [1.5438e-05, 1.0967e-05],
        [8.2254e-06, 9.4652e-05],
        [1.7285e-06, 6.4552e-05],
        [2.3067e-05, 2.5511e-05],
        [2.6643e-05, 6.1989e-05],
        [2.6226e-06, 7.6890e-05],
        [7.3314e-06, 1.2362e-04],
        [9.5367e-07, 3.8564e-05],
        [9.8348e-06, 8.1062e-06],
        [1.6153e-05, 1.3590e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0477, 0.0775],
        [0.0464, 0.0797],
        [0.0796, 0.0464],
        [0.0852, 0.0433],
        [0.0579, 0.0638],
        [0.0718, 0.0514],
        [0.0817, 0.0452],
        [0.0493, 0.0749],
        [0.0467, 0.0790],
        [0.0732, 0.0504],
        [0.0615, 0.0600],
        [0.0471, 0.0785],
        [0.0482, 0.0767],
        [0.0466, 0.0792],
        [0.0788, 0.0469],
        [0.0784, 0.0471]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.363974
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[6.9737e-06, 9.0897e-05],
        [1.2338e-05, 1.0926e-04],
        [2.1696e-05, 1.5378e-05],
        [7.1526e-07, 1.2994e-05],
        [1.0133e-06, 3.6299e-05],
        [1.3232e-05, 1.5318e-05],
        [1.8537e-05, 2.5153e-05],
        [7.4506e-06, 9.5248e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1048, 0.1427],
        [0.1080, 0.1384],
        [0.1752, 0.0853],
        [0.1028, 0.1454],
        [0.1002, 0.1491],
        [0.1551, 0.0964],
        [0.1491, 0.1002],
        [0.1049, 0.1425]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.125544
acc:  0.96
Time taken to execute the en SA task with prompt type modal, variation 8 and batchsize 16: 0:00:05.065733
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_8']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06],
        [9.1791e-06, 6.3777e-06]], device='cuda:0') torch.Size([115, 2])
answers_probs just softmax dim 0: tensor([[0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087]], device='cuda:0')
tensor([[0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087],
        [0.0087, 0.0087]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA modal 9 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6332e-05, 1.0133e-05],
        [9.5367e-07, 3.0458e-05],
        [3.5763e-06, 4.7684e-07],
        [2.3246e-06, 3.9101e-05],
        [2.9206e-05, 1.6510e-05],
        [3.4034e-05, 7.5519e-05],
        [2.4855e-05, 3.4511e-05],
        [5.9605e-07, 2.7597e-05],
        [4.7684e-07, 1.5080e-05],
        [7.7486e-07, 3.9220e-05],
        [2.4080e-05, 1.9491e-05],
        [2.6762e-05, 2.0385e-05],
        [1.7881e-06, 6.1274e-05],
        [1.1921e-07, 1.6212e-05],
        [2.7180e-05, 2.0206e-05],
        [4.5478e-05, 2.2352e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0790, 0.0453],
        [0.0439, 0.0815],
        [0.1029, 0.0348],
        [0.0451, 0.0795],
        [0.0807, 0.0444],
        [0.0581, 0.0616],
        [0.0647, 0.0553],
        [0.0435, 0.0823],
        [0.0439, 0.0815],
        [0.0434, 0.0824],
        [0.0740, 0.0484],
        [0.0751, 0.0476],
        [0.0438, 0.0817],
        [0.0429, 0.0834],
        [0.0756, 0.0474],
        [0.0833, 0.0430]], device='cuda:0')
 Batch: 0 of modal classification Duration: 0:00:00.341153
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0862e-06, 4.6909e-05],
        [1.6153e-05, 1.5795e-05],
        [2.0087e-05, 7.5758e-05],
        [5.4836e-06, 6.3956e-05],
        [3.4928e-05, 2.9445e-05],
        [1.1325e-05, 6.2048e-05],
        [2.3365e-05, 1.5676e-05],
        [1.4901e-06, 8.4221e-05],
        [2.5749e-05, 9.2983e-06],
        [4.5896e-06, 7.7248e-05],
        [3.1590e-06, 6.5565e-07],
        [3.7313e-05, 2.3544e-05],
        [2.8193e-05, 1.5080e-05],
        [3.8624e-05, 2.6762e-05],
        [1.1921e-05, 7.3910e-06],
        [4.1723e-07, 2.8014e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0424, 0.0850],
        [0.0674, 0.0535],
        [0.0501, 0.0719],
        [0.0440, 0.0820],
        [0.0699, 0.0516],
        [0.0474, 0.0760],
        [0.0739, 0.0488],
        [0.0413, 0.0872],
        [0.0847, 0.0426],
        [0.0430, 0.0839],
        [0.0930, 0.0388],
        [0.0750, 0.0481],
        [0.0780, 0.0462],
        [0.0734, 0.0491],
        [0.0753, 0.0479],
        [0.0412, 0.0874]], device='cuda:0')
 Batch: 1 of modal classification Duration: 0:00:00.317780
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9729e-05, 9.4175e-06],
        [5.3048e-06, 5.0068e-05],
        [1.5199e-05, 5.3644e-06],
        [1.7226e-05, 5.0664e-06],
        [7.7486e-07, 2.9624e-05],
        [2.5213e-05, 7.8082e-06],
        [3.0398e-06, 5.3227e-05],
        [3.3915e-05, 3.2365e-05],
        [1.2815e-05, 4.8399e-05],
        [2.7597e-05, 5.0366e-05],
        [1.0729e-06, 4.6551e-05],
        [2.5630e-06, 2.3842e-07],
        [4.5776e-05, 1.6451e-05],
        [3.5107e-05, 1.3351e-05],
        [3.7551e-05, 3.0398e-05],
        [5.9605e-06, 9.9599e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0747, 0.0474],
        [0.0418, 0.0848],
        [0.0795, 0.0445],
        [0.0822, 0.0431],
        [0.0389, 0.0909],
        [0.0814, 0.0435],
        [0.0401, 0.0884],
        [0.0633, 0.0559],
        [0.0468, 0.0757],
        [0.0541, 0.0655],
        [0.0388, 0.0912],
        [0.0948, 0.0374],
        [0.0792, 0.0447],
        [0.0783, 0.0452],
        [0.0660, 0.0537],
        [0.0402, 0.0882]], device='cuda:0')
 Batch: 2 of modal classification Duration: 0:00:00.412446
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.7551e-06, 7.0989e-05],
        [1.3053e-05, 1.1003e-04],
        [1.3113e-06, 3.8087e-05],
        [1.2577e-05, 4.7684e-06],
        [8.1658e-06, 8.5533e-05],
        [3.8147e-06, 4.7684e-07],
        [2.5630e-06, 4.6194e-05],
        [5.4836e-06, 8.6546e-05],
        [1.7285e-06, 4.5896e-05],
        [1.1921e-06, 4.3154e-05],
        [3.7551e-06, 8.3208e-05],
        [3.8803e-05, 1.7881e-05],
        [1.8895e-05, 1.0014e-05],
        [1.9670e-06, 5.7936e-05],
        [3.2127e-05, 1.9789e-05],
        [1.7405e-05, 1.5497e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0467, 0.0759],
        [0.0494, 0.0717],
        [0.0459, 0.0772],
        [0.0918, 0.0386],
        [0.0485, 0.0731],
        [0.1081, 0.0328],
        [0.0468, 0.0757],
        [0.0472, 0.0752],
        [0.0461, 0.0769],
        [0.0457, 0.0777],
        [0.0464, 0.0764],
        [0.0881, 0.0402],
        [0.0854, 0.0415],
        [0.0459, 0.0772],
        [0.0825, 0.0430],
        [0.0754, 0.0470]], device='cuda:0')
 Batch: 3 of modal classification Duration: 0:00:00.425411
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-06, 5.4479e-05],
        [3.3319e-05, 2.1517e-05],
        [2.6822e-06, 6.6876e-05],
        [3.6597e-05, 1.8537e-05],
        [7.1526e-07, 3.1888e-05],
        [1.4544e-05, 6.9320e-05],
        [2.3842e-07, 6.0201e-06],
        [4.3511e-06, 5.3883e-05],
        [1.7762e-05, 1.0610e-05],
        [2.8610e-06, 3.6359e-05],
        [1.5974e-05, 5.7220e-06],
        [8.3447e-07, 5.7101e-05],
        [1.4305e-06, 4.0531e-05],
        [2.6166e-05, 2.0206e-05],
        [2.3842e-07, 1.9491e-05],
        [1.8299e-05, 7.6294e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0490, 0.0732],
        [0.0830, 0.0432],
        [0.0470, 0.0764],
        [0.0878, 0.0409],
        [0.0462, 0.0776],
        [0.0538, 0.0667],
        [0.0470, 0.0764],
        [0.0487, 0.0737],
        [0.0846, 0.0424],
        [0.0487, 0.0738],
        [0.0945, 0.0380],
        [0.0459, 0.0782],
        [0.0468, 0.0767],
        [0.0795, 0.0451],
        [0.0458, 0.0784],
        [0.0916, 0.0392]], device='cuda:0')
 Batch: 4 of modal classification Duration: 0:00:00.257920
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5167e-06, 6.1810e-05],
        [3.0756e-05, 1.4067e-05],
        [8.2254e-06, 8.3089e-05],
        [7.4506e-06, 8.3983e-05],
        [3.6955e-06, 5.4121e-05],
        [4.0174e-05, 2.9862e-05],
        [1.8001e-05, 2.1875e-05],
        [8.2254e-06, 2.9206e-06],
        [4.2915e-06, 5.9605e-07],
        [4.6492e-06, 7.1645e-05],
        [2.8670e-05, 1.4663e-05],
        [3.7193e-05, 6.0320e-05],
        [1.7881e-05, 1.6153e-05],
        [3.1769e-05, 2.2352e-05],
        [5.1856e-06, 5.6684e-05],
        [1.9252e-05, 1.2040e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0422, 0.0856],
        [0.0794, 0.0455],
        [0.0437, 0.0826],
        [0.0434, 0.0833],
        [0.0426, 0.0848],
        [0.0709, 0.0509],
        [0.0628, 0.0575],
        [0.0836, 0.0432],
        [0.0962, 0.0376],
        [0.0425, 0.0850],
        [0.0774, 0.0466],
        [0.0585, 0.0617],
        [0.0676, 0.0534],
        [0.0719, 0.0502],
        [0.0435, 0.0831],
        [0.0739, 0.0488]], device='cuda:0')
 Batch: 5 of modal classification Duration: 0:00:00.429567
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 6.1393e-06],
        [2.9802e-07, 2.4676e-05],
        [1.4305e-06, 3.6120e-05],
        [5.3644e-07, 4.1246e-05],
        [2.3901e-05, 2.8610e-05],
        [2.0266e-06, 6.7115e-05],
        [1.7047e-05, 8.2254e-06],
        [1.3590e-05, 1.1623e-05],
        [1.2398e-05, 1.3947e-05],
        [3.3379e-06, 6.4969e-05],
        [8.8811e-06, 2.8610e-06],
        [5.9605e-07, 2.8431e-05],
        [2.9802e-06, 6.4909e-05],
        [5.3644e-07, 2.5153e-05],
        [1.7285e-06, 3.5226e-05],
        [3.5763e-07, 1.8716e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0532, 0.0686],
        [0.0497, 0.0734],
        [0.0510, 0.0715],
        [0.0497, 0.0734],
        [0.0774, 0.0471],
        [0.0506, 0.0722],
        [0.0964, 0.0379],
        [0.0842, 0.0433],
        [0.0786, 0.0464],
        [0.0516, 0.0708],
        [0.1046, 0.0349],
        [0.0501, 0.0728],
        [0.0513, 0.0711],
        [0.0501, 0.0728],
        [0.0515, 0.0709],
        [0.0500, 0.0729]], device='cuda:0')
 Batch: 6 of modal classification Duration: 0:00:00.572315
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 6.4731e-05],
        [1.7762e-05, 2.3365e-05],
        [1.9670e-06, 4.7624e-05],
        [3.1590e-05, 2.6822e-05],
        [6.5565e-07, 4.4167e-05],
        [1.2457e-05, 5.1260e-06],
        [9.5367e-07, 3.4809e-05],
        [3.6418e-05, 1.7881e-05],
        [1.9193e-05, 9.1195e-06],
        [1.7881e-07, 2.0087e-05],
        [1.8895e-05, 1.6153e-05],
        [2.5094e-05, 1.4484e-05],
        [1.7881e-06, 5.5194e-05],
        [2.1636e-05, 7.0333e-06],
        [1.9252e-05, 8.3447e-06],
        [5.0664e-06, 5.9605e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0406, 0.0870],
        [0.0603, 0.0586],
        [0.0407, 0.0868],
        [0.0672, 0.0526],
        [0.0397, 0.0890],
        [0.0795, 0.0445],
        [0.0402, 0.0879],
        [0.0765, 0.0462],
        [0.0771, 0.0458],
        [0.0395, 0.0895],
        [0.0671, 0.0527],
        [0.0738, 0.0479],
        [0.0404, 0.0875],
        [0.0832, 0.0424],
        [0.0786, 0.0449],
        [0.0957, 0.0369]], device='cuda:0')
 Batch: 7 of modal classification Duration: 0:00:00.361618
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9073e-06, 3.2723e-05],
        [7.6890e-06, 1.2374e-04],
        [9.2387e-06, 9.6858e-05],
        [1.6630e-05, 1.0014e-05],
        [1.0550e-05, 1.1152e-04],
        [5.9605e-07, 1.4782e-05],
        [1.0252e-05, 5.6028e-06],
        [2.4617e-05, 1.5616e-05],
        [2.2233e-05, 1.1921e-05],
        [3.4153e-05, 4.6313e-05],
        [2.3305e-05, 2.0385e-05],
        [2.3842e-05, 1.6034e-05],
        [2.9206e-06, 5.0545e-05],
        [1.3590e-05, 7.8082e-06],
        [2.2054e-05, 1.0949e-04],
        [1.2457e-05, 9.7752e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0444, 0.0823],
        [0.0445, 0.0821],
        [0.0458, 0.0798],
        [0.0784, 0.0466],
        [0.0458, 0.0798],
        [0.0437, 0.0837],
        [0.0802, 0.0456],
        [0.0775, 0.0472],
        [0.0806, 0.0454],
        [0.0642, 0.0569],
        [0.0716, 0.0510],
        [0.0764, 0.0479],
        [0.0444, 0.0824],
        [0.0793, 0.0461],
        [0.0497, 0.0736],
        [0.0736, 0.0497]], device='cuda:0')
 Batch: 8 of modal classification Duration: 0:00:00.429142
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.7418e-06, 5.4002e-05],
        [2.2352e-05, 1.5736e-05],
        [1.6451e-05, 1.7524e-05],
        [2.7418e-06, 7.4685e-05],
        [1.1325e-06, 4.4942e-05],
        [7.9274e-06, 9.2804e-05],
        [1.5259e-05, 8.7619e-06],
        [4.2021e-05, 1.8954e-05],
        [1.0133e-06, 4.9293e-05],
        [1.9670e-06, 5.0366e-05],
        [0.0000e+00, 2.6226e-06],
        [3.0160e-05, 1.4603e-05],
        [9.5367e-07, 2.7835e-05],
        [2.9206e-06, 7.3195e-05],
        [2.3842e-05, 1.3173e-05],
        [1.8954e-05, 6.5565e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0768],
        [0.0796, 0.0448],
        [0.0718, 0.0497],
        [0.0459, 0.0778],
        [0.0454, 0.0787],
        [0.0479, 0.0745],
        [0.0835, 0.0427],
        [0.0882, 0.0405],
        [0.0452, 0.0790],
        [0.0460, 0.0776],
        [0.0443, 0.0806],
        [0.0868, 0.0411],
        [0.0458, 0.0780],
        [0.0460, 0.0776],
        [0.0843, 0.0423],
        [0.0930, 0.0383]], device='cuda:0')
 Batch: 9 of modal classification Duration: 0:00:00.336809
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7464e-05, 1.9193e-05],
        [2.3723e-05, 1.1861e-05],
        [2.8312e-05, 1.6272e-05],
        [2.3544e-05, 1.0252e-05],
        [2.0385e-05, 1.0431e-05],
        [3.1888e-05, 1.2875e-05],
        [2.4438e-06, 4.8816e-05],
        [1.0788e-05, 7.9513e-05],
        [4.5538e-05, 3.2306e-05],
        [2.0981e-05, 1.9133e-05],
        [1.7822e-05, 1.0252e-05],
        [2.1458e-06, 5.8651e-05],
        [1.9252e-05, 8.6427e-06],
        [6.8545e-06, 6.9737e-05],
        [2.0623e-05, 4.8876e-06],
        [2.9206e-06, 2.3842e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0578, 0.0626],
        [0.0699, 0.0518],
        [0.0677, 0.0535],
        [0.0720, 0.0503],
        [0.0695, 0.0521],
        [0.0732, 0.0495],
        [0.0376, 0.0962],
        [0.0404, 0.0895],
        [0.0644, 0.0562],
        [0.0606, 0.0598],
        [0.0677, 0.0535],
        [0.0372, 0.0974],
        [0.0716, 0.0506],
        [0.0393, 0.0922],
        [0.0806, 0.0449],
        [0.0905, 0.0400]], device='cuda:0')
 Batch: 10 of modal classification Duration: 0:00:00.363003
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9073e-06, 5.0604e-05],
        [2.3842e-06, 4.9889e-05],
        [2.6882e-05, 6.6042e-05],
        [1.5497e-06, 5.6326e-05],
        [1.0133e-06, 3.0518e-05],
        [1.1921e-06, 4.8459e-05],
        [7.7486e-07, 3.6240e-05],
        [2.4438e-06, 1.7881e-07],
        [3.2187e-06, 4.0889e-05],
        [9.7156e-06, 5.5432e-06],
        [1.3113e-06, 4.8637e-05],
        [6.4373e-06, 8.8155e-05],
        [4.6074e-05, 1.6570e-05],
        [1.4126e-05, 7.4506e-06],
        [3.5763e-07, 2.4855e-05],
        [2.0862e-06, 7.5161e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0490, 0.0726],
        [0.0494, 0.0719],
        [0.0631, 0.0564],
        [0.0485, 0.0733],
        [0.0488, 0.0729],
        [0.0484, 0.0735],
        [0.0482, 0.0737],
        [0.1199, 0.0296],
        [0.0508, 0.0700],
        [0.0893, 0.0398],
        [0.0485, 0.0733],
        [0.0505, 0.0703],
        [0.0985, 0.0361],
        [0.0909, 0.0391],
        [0.0479, 0.0742],
        [0.0485, 0.0733]], device='cuda:0')
 Batch: 11 of modal classification Duration: 0:00:00.452737
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.3530e-05, 7.7486e-06],
        [3.3975e-06, 2.9802e-07],
        [4.2617e-05, 4.1604e-05],
        [2.2054e-06, 6.2764e-05],
        [1.9014e-05, 7.3910e-06],
        [1.0133e-06, 3.3319e-05],
        [1.2934e-05, 7.3314e-06],
        [8.3447e-07, 2.0623e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1441, 0.0972],
        [0.1913, 0.0732],
        [0.1265, 0.1107],
        [0.0789, 0.1775],
        [0.1568, 0.0894],
        [0.0786, 0.1783],
        [0.1444, 0.0970],
        [0.0793, 0.1766]], device='cuda:0')
 Batch: 12 of modal classification Duration: 0:00:00.216138
acc:  0.955
Time taken to execute the en SA task with prompt type modal, variation 9 and batchsize 16: 0:00:04.931485
path ['42', 'en', 'bloomz-mt', 'SA', 'modal', 'prompt_id_9']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type common has 7 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06],
        [6.6161e-06, 8.1062e-06]], device='cuda:0') torch.Size([106, 2])
answers_probs just softmax dim 0: tensor([[0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094]], device='cuda:0')
tensor([[0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094],
        [0.0094, 0.0094]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 6.6996e-05],
        [1.5974e-05, 7.3314e-06],
        [4.4107e-06, 2.1458e-06],
        [8.3447e-07, 3.3557e-05],
        [1.2517e-06, 4.2915e-05],
        [1.6689e-06, 5.6982e-05],
        [1.5557e-05, 9.0003e-06],
        [2.9683e-05, 2.3305e-05],
        [6.0797e-06, 7.9513e-05],
        [3.0398e-06, 5.3167e-05],
        [4.1127e-06, 6.4373e-05],
        [3.2008e-05, 2.6345e-05],
        [1.0610e-05, 8.0705e-05],
        [1.5259e-05, 1.3590e-05],
        [2.2650e-06, 5.0902e-05],
        [1.1623e-05, 8.4043e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0455, 0.0795],
        [0.0892, 0.0406],
        [0.0881, 0.0411],
        [0.0461, 0.0786],
        [0.0462, 0.0783],
        [0.0462, 0.0783],
        [0.0847, 0.0427],
        [0.0787, 0.0460],
        [0.0483, 0.0750],
        [0.0474, 0.0763],
        [0.0477, 0.0758],
        [0.0778, 0.0465],
        [0.0505, 0.0717],
        [0.0763, 0.0474],
        [0.0469, 0.0772],
        [0.0803, 0.0451]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.482882
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.7551e-06, 6.9618e-05],
        [2.3246e-06, 4.8578e-05],
        [2.9802e-07, 1.9670e-05],
        [1.1921e-05, 6.4969e-06],
        [1.3709e-06, 3.0398e-05],
        [7.0333e-06, 4.4703e-06],
        [2.3246e-06, 4.4465e-05],
        [4.6492e-06, 1.0729e-06],
        [3.5763e-07, 3.2127e-05],
        [1.9968e-05, 9.0003e-06],
        [7.1526e-07, 3.6240e-05],
        [2.3842e-07, 1.7285e-05],
        [2.0742e-05, 2.8789e-05],
        [5.3644e-07, 3.2663e-05],
        [1.8656e-05, 5.1856e-05],
        [3.5763e-07, 2.4676e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0722],
        [0.0496, 0.0726],
        [0.0481, 0.0748],
        [0.0905, 0.0398],
        [0.0495, 0.0728],
        [0.0873, 0.0412],
        [0.0498, 0.0723],
        [0.1068, 0.0337],
        [0.0479, 0.0751],
        [0.0944, 0.0381],
        [0.0483, 0.0745],
        [0.0480, 0.0749],
        [0.0720, 0.0500],
        [0.0482, 0.0748],
        [0.0617, 0.0583],
        [0.0481, 0.0749]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.427637
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4007e-05, 1.5736e-05],
        [2.1815e-05, 1.7405e-05],
        [8.1658e-06, 5.7697e-05],
        [7.7486e-07, 3.6418e-05],
        [3.5167e-06, 4.1723e-07],
        [1.6689e-06, 4.3988e-05],
        [2.9802e-07, 2.3365e-05],
        [2.3603e-05, 1.6510e-05],
        [2.2054e-06, 5.9962e-05],
        [1.5080e-05, 1.2398e-05],
        [2.3067e-05, 7.3373e-05],
        [1.5378e-05, 7.0930e-06],
        [2.9206e-06, 7.2181e-05],
        [2.7239e-05, 4.0531e-05],
        [1.9431e-05, 2.0027e-05],
        [1.6272e-05, 4.5896e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0663, 0.0542],
        [0.0722, 0.0498],
        [0.0468, 0.0767],
        [0.0423, 0.0851],
        [0.1012, 0.0355],
        [0.0429, 0.0838],
        [0.0419, 0.0858],
        [0.0745, 0.0482],
        [0.0429, 0.0838],
        [0.0716, 0.0502],
        [0.0526, 0.0684],
        [0.0820, 0.0438],
        [0.0430, 0.0836],
        [0.0619, 0.0581],
        [0.0677, 0.0531],
        [0.0903, 0.0398]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.363335
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3246e-06, 6.2943e-05],
        [1.2040e-05, 7.2718e-06],
        [1.1325e-06, 4.3988e-05],
        [2.9624e-05, 1.5855e-05],
        [8.9407e-07, 3.9339e-05],
        [3.3975e-06, 5.3644e-07],
        [7.1526e-07, 3.1769e-05],
        [1.0788e-05, 7.9274e-06],
        [9.2983e-06, 5.7936e-05],
        [1.1921e-07, 1.1384e-05],
        [2.5690e-05, 9.8944e-06],
        [1.3709e-06, 4.1127e-05],
        [2.1160e-05, 1.9729e-05],
        [1.9073e-05, 9.8944e-06],
        [5.9605e-07, 2.6703e-05],
        [1.1921e-07, 1.2875e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0452, 0.0782],
        [0.0813, 0.0435],
        [0.0447, 0.0791],
        [0.0836, 0.0423],
        [0.0446, 0.0793],
        [0.1034, 0.0342],
        [0.0446, 0.0793],
        [0.0776, 0.0456],
        [0.0501, 0.0706],
        [0.0441, 0.0802],
        [0.0898, 0.0394],
        [0.0450, 0.0785],
        [0.0732, 0.0483],
        [0.0842, 0.0420],
        [0.0446, 0.0793],
        [0.0440, 0.0803]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.404909
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 6.3181e-06],
        [5.3644e-07, 2.4617e-05],
        [2.0146e-05, 1.4722e-05],
        [1.6510e-05, 2.8312e-05],
        [8.8215e-06, 3.0398e-06],
        [1.1981e-05, 8.6427e-06],
        [5.3644e-07, 2.9683e-05],
        [7.7486e-07, 3.3557e-05],
        [7.1526e-07, 3.2544e-05],
        [2.9325e-05, 3.6776e-05],
        [4.7684e-07, 3.0756e-05],
        [1.2875e-05, 7.0333e-06],
        [3.2008e-05, 1.8656e-05],
        [5.9605e-07, 2.3663e-05],
        [2.7418e-05, 6.8903e-05],
        [1.9729e-05, 8.5235e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0444, 0.0812],
        [0.0445, 0.0809],
        [0.0777, 0.0464],
        [0.0630, 0.0572],
        [0.0917, 0.0393],
        [0.0779, 0.0463],
        [0.0444, 0.0812],
        [0.0446, 0.0808],
        [0.0445, 0.0809],
        [0.0679, 0.0531],
        [0.0442, 0.0814],
        [0.0832, 0.0433],
        [0.0820, 0.0440],
        [0.0447, 0.0807],
        [0.0579, 0.0622],
        [0.0876, 0.0411]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.288913
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4869e-05, 2.0683e-05],
        [6.5565e-07, 2.5392e-05],
        [1.4663e-05, 5.3048e-06],
        [1.1921e-06, 3.6418e-05],
        [8.3447e-06, 3.3975e-06],
        [2.4974e-05, 1.9014e-05],
        [2.9802e-07, 3.6538e-05],
        [2.9802e-06, 4.7684e-07],
        [1.2279e-05, 1.2577e-05],
        [1.5497e-06, 5.0783e-05],
        [1.7107e-05, 7.9870e-06],
        [7.7486e-07, 2.5034e-05],
        [2.2054e-06, 4.8399e-05],
        [1.7881e-07, 1.4007e-05],
        [9.5367e-07, 4.7743e-05],
        [1.3590e-05, 5.7220e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0782, 0.0448],
        [0.0428, 0.0819],
        [0.0870, 0.0403],
        [0.0431, 0.0814],
        [0.0849, 0.0413],
        [0.0736, 0.0476],
        [0.0421, 0.0833],
        [0.0988, 0.0355],
        [0.0684, 0.0512],
        [0.0430, 0.0815],
        [0.0825, 0.0425],
        [0.0430, 0.0815],
        [0.0436, 0.0804],
        [0.0423, 0.0829],
        [0.0426, 0.0824],
        [0.0843, 0.0416]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.411803
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8014e-06, 6.8903e-05],
        [1.2159e-05, 1.0073e-05],
        [6.1393e-06, 1.0103e-04],
        [8.9407e-07, 4.4167e-05],
        [1.8597e-05, 9.5963e-06],
        [2.5392e-05, 1.2875e-05],
        [1.2517e-06, 2.7955e-05],
        [3.4571e-06, 5.2094e-05],
        [1.4246e-05, 1.7464e-05],
        [7.2718e-06, 6.3181e-05],
        [1.6749e-05, 8.3447e-06],
        [2.3246e-06, 4.5061e-05],
        [1.7762e-05, 1.5557e-05],
        [1.3053e-05, 5.2452e-06],
        [2.5392e-05, 9.9540e-06],
        [2.2054e-06, 3.5763e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0422, 0.0845],
        [0.0701, 0.0508],
        [0.0429, 0.0829],
        [0.0414, 0.0861],
        [0.0784, 0.0454],
        [0.0787, 0.0452],
        [0.0423, 0.0841],
        [0.0431, 0.0825],
        [0.0635, 0.0560],
        [0.0449, 0.0792],
        [0.0790, 0.0451],
        [0.0426, 0.0836],
        [0.0691, 0.0515],
        [0.0827, 0.0430],
        [0.0832, 0.0428],
        [0.0958, 0.0371]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.360491
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.4451e-05],
        [2.0206e-05, 1.1683e-05],
        [3.1590e-06, 8.4162e-05],
        [1.8358e-05, 1.0788e-05],
        [1.1921e-06, 5.6088e-05],
        [1.4365e-05, 4.0531e-06],
        [1.8597e-05, 1.0252e-05],
        [1.4901e-06, 5.1439e-05],
        [3.5763e-07, 6.2585e-06],
        [1.2934e-05, 1.2338e-05],
        [1.6689e-06, 5.5730e-05],
        [2.0564e-05, 8.4639e-06],
        [1.9014e-05, 8.1658e-06],
        [1.8179e-05, 1.1265e-05],
        [1.0729e-06, 3.1173e-05],
        [2.5630e-06, 5.9545e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0824],
        [0.0796, 0.0445],
        [0.0438, 0.0809],
        [0.0793, 0.0447],
        [0.0431, 0.0822],
        [0.0921, 0.0385],
        [0.0805, 0.0440],
        [0.0434, 0.0816],
        [0.0446, 0.0795],
        [0.0704, 0.0503],
        [0.0435, 0.0815],
        [0.0858, 0.0413],
        [0.0850, 0.0417],
        [0.0783, 0.0453],
        [0.0437, 0.0812],
        [0.0440, 0.0805]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.568824
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6822e-06, 6.2108e-05],
        [2.0623e-05, 1.2219e-05],
        [1.3649e-05, 6.8545e-06],
        [5.3644e-07, 3.3617e-05],
        [5.9605e-07, 2.4915e-05],
        [1.0014e-05, 3.8743e-06],
        [5.3644e-07, 2.3425e-05],
        [4.2915e-06, 5.1260e-05],
        [3.2783e-06, 5.4121e-05],
        [4.7684e-06, 6.6578e-05],
        [5.3644e-07, 3.3379e-05],
        [2.9206e-06, 2.9802e-07],
        [2.3842e-07, 1.9431e-05],
        [1.5020e-05, 1.0014e-05],
        [1.0788e-05, 6.7949e-06],
        [1.6272e-05, 9.2983e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0448, 0.0784],
        [0.0806, 0.0436],
        [0.0837, 0.0420],
        [0.0437, 0.0805],
        [0.0440, 0.0799],
        [0.0884, 0.0397],
        [0.0440, 0.0799],
        [0.0465, 0.0757],
        [0.0455, 0.0772],
        [0.0460, 0.0765],
        [0.0437, 0.0805],
        [0.1066, 0.0330],
        [0.0435, 0.0808],
        [0.0784, 0.0449],
        [0.0794, 0.0443],
        [0.0813, 0.0433]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.454609
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 2.1338e-05],
        [1.3471e-05, 9.0003e-06],
        [4.4107e-06, 8.9407e-07],
        [2.2650e-06, 4.8399e-05],
        [8.6427e-06, 8.4043e-05],
        [7.7486e-07, 3.3736e-05],
        [2.3842e-06, 5.7995e-05],
        [4.1723e-07, 1.9789e-05],
        [7.5698e-06, 2.6226e-06],
        [1.7285e-06, 4.3154e-05],
        [1.0729e-06, 4.0770e-05],
        [2.9802e-07, 1.7107e-05],
        [1.7881e-07, 1.8120e-05],
        [1.8179e-05, 7.5102e-06],
        [1.5497e-05, 5.4836e-06],
        [9.5367e-07, 3.0518e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0758],
        [0.0839, 0.0420],
        [0.1058, 0.0333],
        [0.0482, 0.0731],
        [0.0506, 0.0696],
        [0.0471, 0.0747],
        [0.0479, 0.0734],
        [0.0470, 0.0748],
        [0.0968, 0.0364],
        [0.0479, 0.0735],
        [0.0473, 0.0745],
        [0.0469, 0.0751],
        [0.0465, 0.0757],
        [0.0935, 0.0377],
        [0.0965, 0.0365],
        [0.0475, 0.0741]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.432209
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7583e-05, 1.2577e-05],
        [2.8312e-05, 4.1187e-05],
        [2.9802e-07, 1.0908e-05],
        [2.4080e-05, 2.0742e-05],
        [3.5167e-06, 1.1325e-06],
        [3.3975e-06, 6.9320e-05],
        [1.2279e-05, 4.1127e-06],
        [7.2122e-06, 4.4703e-06],
        [2.0564e-05, 8.5831e-06],
        [2.6584e-05, 2.6822e-05],
        [1.9073e-06, 4.8518e-05],
        [1.7226e-05, 1.0788e-05],
        [1.2517e-06, 4.0352e-05],
        [1.4842e-05, 1.6153e-05],
        [3.3379e-06, 5.5611e-05],
        [2.9802e-07, 3.1769e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0733, 0.0492],
        [0.0615, 0.0586],
        [0.0420, 0.0858],
        [0.0700, 0.0515],
        [0.0871, 0.0414],
        [0.0429, 0.0841],
        [0.0865, 0.0417],
        [0.0758, 0.0475],
        [0.0828, 0.0435],
        [0.0673, 0.0536],
        [0.0425, 0.0848],
        [0.0756, 0.0476],
        [0.0421, 0.0855],
        [0.0660, 0.0546],
        [0.0433, 0.0833],
        [0.0413, 0.0873]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.408304
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6391e-05, 1.5974e-05],
        [1.7762e-05, 1.2696e-05],
        [2.3663e-05, 1.7345e-05],
        [1.3411e-05, 6.6161e-06],
        [7.1526e-07, 2.6703e-05],
        [1.5497e-06, 5.9307e-05],
        [2.0564e-05, 1.3530e-05],
        [2.5034e-05, 3.8803e-05],
        [1.3709e-06, 5.0426e-05],
        [3.8743e-06, 1.1325e-06],
        [1.7643e-05, 1.4842e-05],
        [2.4378e-05, 2.3842e-05],
        [3.2783e-06, 6.7174e-05],
        [2.2650e-06, 5.7578e-05],
        [1.6451e-05, 1.3649e-05],
        [2.6762e-05, 1.3888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0667, 0.0546],
        [0.0721, 0.0506],
        [0.0716, 0.0509],
        [0.0786, 0.0464],
        [0.0413, 0.0883],
        [0.0413, 0.0883],
        [0.0735, 0.0496],
        [0.0595, 0.0612],
        [0.0413, 0.0882],
        [0.0872, 0.0418],
        [0.0692, 0.0526],
        [0.0667, 0.0546],
        [0.0421, 0.0865],
        [0.0418, 0.0872],
        [0.0695, 0.0524],
        [0.0777, 0.0469]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.315538
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.4259e-05, 1.2875e-05],
        [7.0333e-06, 1.7285e-06],
        [1.3709e-06, 4.1246e-05],
        [1.1623e-05, 8.2850e-06],
        [2.5928e-05, 1.3947e-05],
        [7.7486e-07, 1.5318e-05],
        [3.0398e-05, 2.2411e-05],
        [2.2531e-05, 1.3590e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1414, 0.1027],
        [0.1642, 0.0884],
        [0.0760, 0.1911],
        [0.1319, 0.1101],
        [0.1410, 0.1030],
        [0.0772, 0.1881],
        [0.1309, 0.1110],
        [0.1373, 0.1058]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.122707
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 0 and batchsize 16: 0:00:05.057812
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05],
        [8.9407e-06, 1.1206e-05]], device='cuda:0') torch.Size([100, 2])
answers_probs just softmax dim 0: tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
tensor([[0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100],
        [0.0100, 0.0100]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.4175e-06, 6.4373e-06],
        [1.3709e-05, 1.5676e-05],
        [1.0908e-05, 6.0320e-05],
        [1.6034e-05, 7.0333e-06],
        [1.1802e-05, 1.1086e-05],
        [7.1526e-07, 3.1948e-05],
        [8.9407e-07, 4.1068e-05],
        [5.9605e-07, 2.5630e-05],
        [1.8537e-05, 1.0252e-05],
        [2.3842e-06, 5.1260e-05],
        [1.5855e-05, 9.6560e-06],
        [3.5763e-07, 2.8491e-05],
        [9.2387e-06, 7.5400e-05],
        [1.5318e-05, 8.5831e-06],
        [1.5795e-05, 1.0431e-05],
        [4.7088e-06, 7.7486e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0744, 0.0481],
        [0.0655, 0.0547],
        [0.0479, 0.0748],
        [0.0823, 0.0435],
        [0.0688, 0.0521],
        [0.0420, 0.0853],
        [0.0420, 0.0853],
        [0.0420, 0.0852],
        [0.0782, 0.0458],
        [0.0430, 0.0834],
        [0.0765, 0.0468],
        [0.0416, 0.0861],
        [0.0458, 0.0782],
        [0.0780, 0.0459],
        [0.0750, 0.0477],
        [0.0970, 0.0369]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.440923
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1981e-05, 6.3777e-06],
        [1.6093e-05, 1.1981e-05],
        [2.3961e-05, 1.2100e-05],
        [1.2457e-05, 1.5855e-05],
        [9.9540e-06, 3.1590e-06],
        [3.1054e-05, 3.5167e-05],
        [2.9802e-07, 2.5213e-05],
        [2.0266e-06, 6.5148e-05],
        [6.5565e-07, 2.5332e-05],
        [1.7881e-06, 3.2485e-05],
        [3.5763e-07, 6.6757e-06],
        [1.2398e-05, 7.4506e-06],
        [5.9605e-07, 2.9862e-05],
        [4.1723e-07, 2.3305e-05],
        [3.5763e-07, 2.7061e-05],
        [2.9683e-05, 3.0398e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0848, 0.0425],
        [0.0783, 0.0460],
        [0.0858, 0.0419],
        [0.0685, 0.0525],
        [0.0943, 0.0382],
        [0.0705, 0.0510],
        [0.0447, 0.0806],
        [0.0455, 0.0791],
        [0.0453, 0.0795],
        [0.0465, 0.0774],
        [0.0464, 0.0775],
        [0.0824, 0.0437],
        [0.0450, 0.0799],
        [0.0449, 0.0801],
        [0.0447, 0.0805],
        [0.0723, 0.0497]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.545980
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0220e-05, 1.4365e-05],
        [1.9372e-05, 2.0325e-05],
        [1.4305e-06, 5.5075e-05],
        [2.8610e-06, 5.1916e-05],
        [2.4438e-05, 6.3419e-05],
        [1.0133e-06, 4.4882e-05],
        [1.7345e-05, 1.3947e-05],
        [1.1921e-07, 1.8299e-05],
        [2.0862e-05, 1.9133e-05],
        [5.3644e-07, 3.8803e-05],
        [3.3379e-06, 6.2406e-05],
        [2.6226e-06, 7.4089e-05],
        [1.2279e-05, 6.7353e-06],
        [0.0000e+00, 2.8610e-06],
        [2.3544e-05, 2.0146e-05],
        [3.3081e-05, 2.6345e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0899, 0.0405],
        [0.0743, 0.0490],
        [0.0468, 0.0778],
        [0.0481, 0.0758],
        [0.0603, 0.0604],
        [0.0466, 0.0781],
        [0.0794, 0.0459],
        [0.0459, 0.0793],
        [0.0769, 0.0474],
        [0.0462, 0.0787],
        [0.0480, 0.0759],
        [0.0472, 0.0771],
        [0.0870, 0.0419],
        [0.0456, 0.0798],
        [0.0782, 0.0466],
        [0.0796, 0.0458]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.340226
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8014e-06, 6.7651e-05],
        [3.0994e-06, 7.5936e-05],
        [1.6153e-05, 6.4969e-06],
        [1.0133e-06, 3.9339e-05],
        [1.7285e-05, 1.7822e-05],
        [1.6391e-05, 7.9870e-06],
        [1.7881e-07, 1.6451e-05],
        [3.3975e-06, 9.8228e-05],
        [1.9670e-06, 7.0810e-05],
        [3.9339e-06, 9.0420e-05],
        [2.4140e-05, 1.3411e-05],
        [3.3975e-06, 7.1526e-07],
        [1.3053e-05, 2.5332e-05],
        [1.0729e-06, 4.5478e-05],
        [1.7881e-07, 1.8060e-05],
        [1.5795e-05, 9.2983e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0764],
        [0.0465, 0.0765],
        [0.0913, 0.0390],
        [0.0459, 0.0776],
        [0.0732, 0.0486],
        [0.0876, 0.0406],
        [0.0452, 0.0787],
        [0.0462, 0.0769],
        [0.0460, 0.0774],
        [0.0466, 0.0763],
        [0.0851, 0.0418],
        [0.1022, 0.0348],
        [0.0628, 0.0566],
        [0.0458, 0.0777],
        [0.0452, 0.0788],
        [0.0839, 0.0424]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.322541
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2517e-06, 4.5180e-05],
        [1.0133e-05, 7.4804e-05],
        [3.5763e-07, 4.4107e-05],
        [3.3975e-06, 6.7174e-05],
        [2.3842e-06, 6.5625e-05],
        [7.7486e-07, 2.5928e-05],
        [2.9206e-06, 4.9710e-05],
        [1.9670e-06, 5.0902e-05],
        [5.4836e-06, 9.2208e-05],
        [2.3842e-07, 1.0431e-05],
        [2.2888e-05, 1.5974e-05],
        [2.9087e-05, 4.2677e-05],
        [3.8147e-06, 1.4305e-06],
        [1.2577e-05, 5.6624e-06],
        [2.5630e-06, 5.3465e-05],
        [1.8358e-05, 8.3447e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0493, 0.0735],
        [0.0540, 0.0670],
        [0.0483, 0.0749],
        [0.0503, 0.0720],
        [0.0497, 0.0729],
        [0.0494, 0.0734],
        [0.0507, 0.0714],
        [0.0498, 0.0728],
        [0.0507, 0.0714],
        [0.0490, 0.0739],
        [0.0864, 0.0419],
        [0.0719, 0.0504],
        [0.0992, 0.0365],
        [0.0956, 0.0379],
        [0.0502, 0.0721],
        [0.0954, 0.0380]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.482046
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9339e-06, 6.3837e-05],
        [1.3471e-05, 1.2636e-05],
        [1.8656e-05, 5.8413e-06],
        [6.5565e-07, 3.6240e-05],
        [7.9274e-06, 6.2764e-05],
        [3.1710e-05, 2.3007e-05],
        [3.3677e-05, 1.5438e-05],
        [7.1526e-07, 4.9591e-05],
        [1.1623e-05, 1.1921e-05],
        [3.3796e-05, 2.5928e-05],
        [1.4842e-05, 6.3777e-06],
        [2.3842e-07, 3.2604e-05],
        [2.9802e-07, 2.7597e-05],
        [3.0994e-06, 6.2823e-05],
        [1.7881e-06, 4.0472e-05],
        [4.2915e-06, 5.9605e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0792],
        [0.0706, 0.0501],
        [0.0903, 0.0392],
        [0.0429, 0.0824],
        [0.0472, 0.0750],
        [0.0752, 0.0470],
        [0.0837, 0.0423],
        [0.0428, 0.0827],
        [0.0691, 0.0512],
        [0.0742, 0.0476],
        [0.0848, 0.0417],
        [0.0425, 0.0833],
        [0.0426, 0.0830],
        [0.0442, 0.0800],
        [0.0440, 0.0804],
        [0.1014, 0.0349]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.358822
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 6.0081e-05],
        [8.8215e-06, 8.9884e-05],
        [1.7226e-05, 1.0610e-05],
        [1.3053e-05, 6.9141e-06],
        [2.9862e-05, 2.1040e-05],
        [9.5367e-07, 3.4451e-05],
        [1.3113e-06, 5.4538e-05],
        [5.3644e-07, 1.6928e-05],
        [1.4305e-05, 8.2850e-06],
        [1.4126e-05, 5.9009e-06],
        [4.9472e-06, 8.6725e-05],
        [1.3113e-06, 6.1154e-05],
        [2.1279e-05, 1.5795e-05],
        [8.9407e-07, 3.2008e-05],
        [1.1742e-05, 8.2850e-06],
        [1.1325e-06, 3.7789e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0458, 0.0783],
        [0.0488, 0.0735],
        [0.0829, 0.0433],
        [0.0859, 0.0418],
        [0.0803, 0.0447],
        [0.0459, 0.0783],
        [0.0457, 0.0785],
        [0.0460, 0.0780],
        [0.0841, 0.0427],
        [0.0904, 0.0397],
        [0.0471, 0.0762],
        [0.0456, 0.0787],
        [0.0793, 0.0453],
        [0.0459, 0.0782],
        [0.0803, 0.0447],
        [0.0460, 0.0781]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.430054
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5497e-06, 6.4194e-05],
        [2.7061e-05, 5.5015e-05],
        [8.9407e-06, 5.8413e-06],
        [1.7881e-05, 6.7353e-06],
        [2.8670e-05, 1.7524e-05],
        [4.1127e-06, 4.7684e-07],
        [2.6643e-05, 2.1577e-05],
        [2.2769e-05, 1.4126e-05],
        [9.2983e-06, 5.8413e-06],
        [1.0192e-05, 6.6161e-06],
        [4.1723e-07, 2.5570e-05],
        [4.7684e-07, 3.5644e-05],
        [1.8179e-05, 1.4842e-05],
        [2.1279e-05, 4.9889e-05],
        [1.3530e-05, 6.7949e-06],
        [1.6689e-05, 1.0431e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0382, 0.0956],
        [0.0519, 0.0704],
        [0.0683, 0.0535],
        [0.0771, 0.0473],
        [0.0694, 0.0526],
        [0.0914, 0.0400],
        [0.0648, 0.0563],
        [0.0692, 0.0528],
        [0.0689, 0.0530],
        [0.0684, 0.0534],
        [0.0379, 0.0963],
        [0.0378, 0.0966],
        [0.0647, 0.0564],
        [0.0503, 0.0726],
        [0.0726, 0.0503],
        [0.0690, 0.0529]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.362867
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-06, 4.4644e-05],
        [2.9206e-06, 4.7684e-07],
        [4.1723e-06, 4.8339e-05],
        [1.7285e-06, 6.2346e-05],
        [1.1325e-06, 8.8692e-05],
        [9.0003e-06, 3.1590e-06],
        [2.1696e-05, 1.5259e-05],
        [1.9908e-05, 7.9870e-06],
        [4.7684e-07, 3.0279e-05],
        [2.8372e-05, 1.7762e-05],
        [2.1994e-05, 1.1146e-05],
        [1.6749e-05, 1.0252e-05],
        [2.3842e-07, 1.6212e-05],
        [1.7285e-06, 4.7624e-05],
        [1.8537e-05, 9.0003e-06],
        [1.8775e-05, 7.7486e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0413, 0.0850],
        [0.0939, 0.0374],
        [0.0430, 0.0816],
        [0.0408, 0.0860],
        [0.0402, 0.0872],
        [0.0833, 0.0421],
        [0.0715, 0.0491],
        [0.0811, 0.0433],
        [0.0404, 0.0869],
        [0.0735, 0.0477],
        [0.0772, 0.0455],
        [0.0739, 0.0475],
        [0.0403, 0.0870],
        [0.0411, 0.0853],
        [0.0779, 0.0450],
        [0.0806, 0.0435]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.414454
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8193e-05, 5.2273e-05],
        [2.0266e-06, 4.2558e-05],
        [3.7372e-05, 1.9670e-05],
        [8.3447e-07, 4.6909e-05],
        [4.7684e-07, 9.1195e-06],
        [2.6822e-06, 4.9531e-05],
        [1.2577e-05, 5.4836e-06],
        [1.2159e-05, 3.9935e-06],
        [2.3723e-05, 1.0192e-05],
        [2.1696e-05, 2.2948e-05],
        [1.3530e-05, 1.7345e-05],
        [8.3447e-07, 3.9518e-05],
        [1.1921e-07, 1.5020e-05],
        [8.9407e-07, 4.0829e-05],
        [1.9431e-05, 2.0206e-05],
        [2.6226e-06, 6.5506e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0629, 0.0572],
        [0.0464, 0.0776],
        [0.0854, 0.0422],
        [0.0451, 0.0798],
        [0.0466, 0.0773],
        [0.0467, 0.0771],
        [0.0890, 0.0405],
        [0.0941, 0.0383],
        [0.0892, 0.0403],
        [0.0721, 0.0499],
        [0.0687, 0.0524],
        [0.0453, 0.0795],
        [0.0447, 0.0806],
        [0.0453, 0.0795],
        [0.0724, 0.0497],
        [0.0461, 0.0781]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.366305
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 1.3113e-05],
        [2.2590e-05, 1.5497e-05],
        [4.7684e-07, 3.5822e-05],
        [1.9789e-05, 1.6391e-05],
        [1.7881e-07, 2.1398e-05],
        [6.5565e-07, 4.2260e-05],
        [5.3644e-07, 2.5749e-05],
        [1.6987e-05, 1.0788e-05],
        [1.0371e-05, 9.5963e-06],
        [2.2054e-05, 1.9610e-05],
        [2.9802e-06, 6.7532e-05],
        [3.5763e-07, 3.0816e-05],
        [5.3644e-07, 3.3319e-05],
        [1.4007e-05, 1.0014e-05],
        [1.1921e-06, 5.3465e-05],
        [5.9605e-07, 2.4498e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0495, 0.0737],
        [0.0872, 0.0418],
        [0.0488, 0.0747],
        [0.0833, 0.0438],
        [0.0486, 0.0750],
        [0.0489, 0.0745],
        [0.0492, 0.0741],
        [0.0888, 0.0410],
        [0.0810, 0.0450],
        [0.0818, 0.0446],
        [0.0503, 0.0725],
        [0.0487, 0.0748],
        [0.0490, 0.0745],
        [0.0863, 0.0422],
        [0.0492, 0.0740],
        [0.0493, 0.0739]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.289868
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.2254e-06, 3.1590e-06],
        [2.8133e-05, 2.4796e-05],
        [3.4153e-05, 1.4007e-05],
        [1.6093e-06, 3.6001e-05],
        [6.5565e-07, 3.3200e-05],
        [3.2604e-05, 4.6670e-05],
        [3.2783e-05, 1.9431e-05],
        [1.1921e-06, 2.7776e-05],
        [1.9729e-05, 1.9908e-05],
        [1.0431e-05, 4.1127e-06],
        [1.3471e-05, 6.3181e-06],
        [2.1160e-05, 2.8014e-05],
        [5.9605e-08, 1.6332e-05],
        [1.6153e-05, 9.4175e-06],
        [9.5367e-07, 3.7432e-05],
        [3.9935e-06, 4.7684e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0797, 0.0448],
        [0.0658, 0.0543],
        [0.0786, 0.0455],
        [0.0404, 0.0885],
        [0.0395, 0.0906],
        [0.0584, 0.0612],
        [0.0725, 0.0493],
        [0.0403, 0.0886],
        [0.0637, 0.0562],
        [0.0793, 0.0451],
        [0.0764, 0.0468],
        [0.0595, 0.0601],
        [0.0388, 0.0920],
        [0.0728, 0.0491],
        [0.0397, 0.0901],
        [0.0946, 0.0378]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.406437
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.6332e-05, 1.4901e-05],
        [3.5107e-05, 2.9325e-05],
        [9.5367e-07, 3.9279e-05],
        [2.0981e-05, 1.4067e-05],
        [1.2517e-06, 4.1962e-05],
        [7.1526e-07, 3.6240e-05],
        [1.1325e-06, 4.8101e-05],
        [3.3379e-06, 4.1723e-07]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1435, 0.0982],
        [0.1466, 0.0960],
        [0.0871, 0.1617],
        [0.1547, 0.0910],
        [0.0875, 0.1608],
        [0.0867, 0.1624],
        [0.0870, 0.1618],
        [0.2068, 0.0681]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.181682
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 1 and batchsize 16: 0:00:04.957549
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06],
        [6.9141e-06, 8.8215e-06]], device='cuda:0') torch.Size([124, 2])
answers_probs just softmax dim 0: tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1398e-05, 1.2219e-05],
        [1.1921e-07, 1.6391e-05],
        [1.6391e-05, 9.0599e-06],
        [3.3200e-05, 4.1664e-05],
        [3.5763e-07, 2.4915e-05],
        [1.5497e-05, 1.0490e-05],
        [2.3842e-07, 3.6955e-05],
        [3.9339e-06, 6.8903e-05],
        [2.9206e-06, 3.5763e-07],
        [1.0133e-06, 5.2452e-05],
        [1.6093e-06, 3.8803e-05],
        [1.6928e-05, 9.7156e-06],
        [1.8358e-05, 1.2159e-05],
        [2.3842e-05, 2.3425e-05],
        [3.3259e-05, 1.3351e-05],
        [1.7703e-05, 6.9141e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0750, 0.0473],
        [0.0400, 0.0888],
        [0.0755, 0.0470],
        [0.0618, 0.0574],
        [0.0402, 0.0882],
        [0.0720, 0.0493],
        [0.0399, 0.0889],
        [0.0419, 0.0848],
        [0.0967, 0.0367],
        [0.0404, 0.0878],
        [0.0413, 0.0860],
        [0.0749, 0.0474],
        [0.0724, 0.0490],
        [0.0657, 0.0540],
        [0.0810, 0.0438],
        [0.0814, 0.0436]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.416073
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 3.5822e-05],
        [2.1875e-05, 1.3947e-05],
        [2.9802e-06, 6.0856e-05],
        [1.3888e-05, 1.7822e-05],
        [1.5438e-05, 1.5795e-05],
        [7.0333e-06, 3.2187e-06],
        [1.7345e-05, 1.4961e-05],
        [1.7822e-05, 8.1062e-06],
        [2.9802e-07, 2.1219e-05],
        [1.5497e-06, 5.1141e-05],
        [1.1742e-05, 6.7949e-06],
        [2.6822e-06, 7.7486e-07],
        [3.6955e-06, 7.0453e-05],
        [7.1526e-07, 2.8670e-05],
        [4.5896e-06, 5.2094e-05],
        [2.2531e-05, 1.2755e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0836],
        [0.0769, 0.0466],
        [0.0438, 0.0820],
        [0.0647, 0.0554],
        [0.0685, 0.0524],
        [0.0829, 0.0433],
        [0.0714, 0.0502],
        [0.0830, 0.0432],
        [0.0423, 0.0847],
        [0.0430, 0.0834],
        [0.0787, 0.0456],
        [0.0907, 0.0395],
        [0.0439, 0.0817],
        [0.0428, 0.0838],
        [0.0453, 0.0792],
        [0.0791, 0.0454]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.413614
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 4.6432e-05],
        [8.3447e-07, 5.1320e-05],
        [4.7684e-07, 3.8207e-05],
        [1.9431e-05, 1.3471e-05],
        [2.6405e-05, 1.2279e-05],
        [1.3113e-06, 5.0604e-05],
        [1.1921e-06, 5.1141e-05],
        [1.7881e-07, 5.6624e-06],
        [1.1921e-06, 5.7876e-05],
        [4.7684e-07, 2.3901e-05],
        [1.1325e-05, 5.0664e-06],
        [3.3975e-06, 5.8889e-05],
        [1.7226e-05, 9.7752e-06],
        [8.7023e-06, 8.1778e-05],
        [3.5763e-07, 2.6405e-05],
        [4.7684e-07, 4.1425e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0511, 0.0710],
        [0.0507, 0.0716],
        [0.0506, 0.0718],
        [0.0901, 0.0403],
        [0.0988, 0.0367],
        [0.0512, 0.0709],
        [0.0511, 0.0711],
        [0.0515, 0.0705],
        [0.0510, 0.0713],
        [0.0509, 0.0713],
        [0.0996, 0.0364],
        [0.0527, 0.0689],
        [0.0945, 0.0384],
        [0.0550, 0.0661],
        [0.0506, 0.0718],
        [0.0505, 0.0719]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.573260
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4901e-06, 4.9293e-05],
        [8.2850e-06, 5.1260e-06],
        [1.0192e-05, 5.9605e-06],
        [2.7716e-05, 1.3471e-05],
        [2.7120e-05, 4.2319e-05],
        [1.7881e-07, 9.8348e-06],
        [4.7684e-07, 3.5942e-05],
        [2.0862e-06, 2.3842e-07],
        [1.7881e-07, 2.3901e-05],
        [1.2517e-05, 8.2850e-06],
        [2.9206e-06, 7.2658e-05],
        [3.2604e-05, 1.5795e-05],
        [1.0312e-05, 5.4240e-06],
        [2.4438e-05, 2.4617e-05],
        [4.7684e-07, 6.5029e-05],
        [2.9445e-05, 3.8087e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0418, 0.0853],
        [0.0753, 0.0474],
        [0.0763, 0.0467],
        [0.0795, 0.0448],
        [0.0600, 0.0594],
        [0.0413, 0.0863],
        [0.0411, 0.0867],
        [0.0995, 0.0358],
        [0.0409, 0.0872],
        [0.0741, 0.0481],
        [0.0422, 0.0845],
        [0.0796, 0.0448],
        [0.0781, 0.0456],
        [0.0668, 0.0534],
        [0.0409, 0.0872],
        [0.0628, 0.0568]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.339488
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 2.6703e-05],
        [1.9133e-05, 7.8082e-06],
        [2.5034e-06, 7.6771e-05],
        [1.3113e-06, 3.7134e-05],
        [2.7359e-05, 1.7941e-05],
        [2.3842e-07, 3.4213e-05],
        [1.7881e-06, 1.7881e-07],
        [4.7684e-07, 3.8207e-05],
        [2.9802e-07, 2.5034e-05],
        [1.1563e-05, 7.0333e-06],
        [1.1921e-07, 1.7822e-05],
        [2.0564e-05, 9.4175e-06],
        [1.0073e-05, 4.4107e-06],
        [2.8908e-05, 2.0981e-05],
        [2.5630e-06, 6.5088e-05],
        [2.1100e-05, 9.8944e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0431, 0.0811],
        [0.0843, 0.0414],
        [0.0428, 0.0816],
        [0.0429, 0.0814],
        [0.0758, 0.0461],
        [0.0417, 0.0837],
        [0.1028, 0.0339],
        [0.0419, 0.0832],
        [0.0419, 0.0833],
        [0.0771, 0.0452],
        [0.0417, 0.0837],
        [0.0822, 0.0424],
        [0.0830, 0.0420],
        [0.0739, 0.0472],
        [0.0430, 0.0811],
        [0.0818, 0.0426]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.410516
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1590e-06, 5.9605e-07],
        [1.5736e-05, 5.2452e-06],
        [1.3053e-05, 5.6028e-06],
        [2.1219e-05, 1.4365e-05],
        [1.3113e-06, 5.8651e-05],
        [2.1458e-06, 5.1558e-05],
        [2.4617e-05, 2.0742e-05],
        [3.2783e-06, 7.2062e-05],
        [2.4140e-05, 1.1444e-05],
        [2.0862e-05, 2.6762e-05],
        [1.9193e-05, 1.3053e-05],
        [5.9605e-08, 1.2875e-05],
        [9.5367e-07, 5.0545e-05],
        [4.1723e-07, 3.8147e-05],
        [2.5988e-05, 4.2200e-05],
        [2.3007e-05, 1.5557e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0937, 0.0380],
        [0.0856, 0.0417],
        [0.0814, 0.0438],
        [0.0734, 0.0486],
        [0.0413, 0.0863],
        [0.0421, 0.0848],
        [0.0695, 0.0513],
        [0.0422, 0.0845],
        [0.0797, 0.0448],
        [0.0626, 0.0569],
        [0.0733, 0.0487],
        [0.0406, 0.0878],
        [0.0412, 0.0866],
        [0.0409, 0.0873],
        [0.0592, 0.0603],
        [0.0734, 0.0486]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.338380
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 3.4153e-05],
        [2.2650e-06, 5.9903e-05],
        [9.6560e-06, 4.8280e-06],
        [9.7752e-06, 3.7551e-06],
        [1.6689e-06, 6.1274e-05],
        [2.4438e-06, 2.3842e-07],
        [1.0133e-06, 4.2796e-05],
        [1.3232e-05, 6.0201e-06],
        [7.3910e-06, 5.5254e-05],
        [1.5497e-05, 2.3246e-05],
        [4.1723e-07, 3.0875e-05],
        [2.0266e-06, 4.6730e-05],
        [1.7881e-05, 1.4544e-05],
        [8.2254e-06, 2.8014e-06],
        [2.3842e-07, 2.2888e-05],
        [1.4305e-05, 1.1325e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0428, 0.0821],
        [0.0435, 0.0809],
        [0.0816, 0.0431],
        [0.0863, 0.0408],
        [0.0430, 0.0817],
        [0.1042, 0.0337],
        [0.0429, 0.0820],
        [0.0833, 0.0422],
        [0.0471, 0.0746],
        [0.0625, 0.0563],
        [0.0425, 0.0828],
        [0.0437, 0.0805],
        [0.0727, 0.0484],
        [0.0883, 0.0398],
        [0.0423, 0.0831],
        [0.0732, 0.0480]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.457676
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 5.1498e-05],
        [1.6093e-06, 5.2273e-05],
        [8.3447e-07, 1.2934e-05],
        [1.5318e-05, 5.8413e-06],
        [2.4676e-05, 6.2048e-05],
        [3.5763e-07, 3.7611e-05],
        [1.2279e-05, 7.2122e-06],
        [2.7776e-05, 5.2691e-05],
        [2.9802e-07, 2.6345e-05],
        [2.0325e-05, 1.2815e-05],
        [1.8477e-06, 5.9962e-05],
        [1.5259e-05, 1.3769e-05],
        [1.1921e-07, 1.9670e-05],
        [1.0133e-05, 6.9380e-05],
        [4.5896e-06, 8.3923e-05],
        [2.9802e-07, 2.0683e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0495, 0.0740],
        [0.0500, 0.0732],
        [0.0516, 0.0710],
        [0.1002, 0.0366],
        [0.0645, 0.0567],
        [0.0490, 0.0747],
        [0.0912, 0.0402],
        [0.0686, 0.0534],
        [0.0491, 0.0746],
        [0.0897, 0.0408],
        [0.0500, 0.0732],
        [0.0821, 0.0446],
        [0.0489, 0.0749],
        [0.0552, 0.0664],
        [0.0511, 0.0716],
        [0.0493, 0.0743]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.320016
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0312e-05, 4.1723e-06],
        [2.9802e-06, 8.8811e-05],
        [1.1563e-05, 3.8147e-06],
        [1.4663e-05, 9.1791e-06],
        [7.7486e-07, 2.7716e-05],
        [6.7949e-06, 6.2704e-05],
        [2.6643e-05, 1.3113e-05],
        [1.6987e-05, 9.8348e-06],
        [2.6822e-06, 5.0247e-05],
        [2.1219e-05, 1.5914e-05],
        [1.2338e-05, 5.9009e-06],
        [3.2723e-05, 1.7107e-05],
        [3.3379e-06, 1.3709e-06],
        [1.3947e-05, 4.4703e-06],
        [1.6689e-06, 4.1664e-05],
        [2.8908e-05, 1.3649e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0757, 0.0473],
        [0.0384, 0.0934],
        [0.0788, 0.0455],
        [0.0687, 0.0522],
        [0.0382, 0.0939],
        [0.0410, 0.0875],
        [0.0726, 0.0494],
        [0.0700, 0.0512],
        [0.0391, 0.0917],
        [0.0658, 0.0545],
        [0.0731, 0.0490],
        [0.0717, 0.0500],
        [0.0755, 0.0475],
        [0.0793, 0.0452],
        [0.0386, 0.0928],
        [0.0733, 0.0489]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.486637
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7285e-06, 3.6895e-05],
        [1.4067e-05, 3.7551e-06],
        [1.1921e-06, 5.2214e-05],
        [1.6689e-06, 6.8009e-05],
        [6.5565e-07, 3.0696e-05],
        [8.9407e-07, 4.1604e-05],
        [3.5763e-07, 2.5272e-05],
        [1.0490e-05, 9.4771e-06],
        [0.0000e+00, 1.9073e-06],
        [3.4988e-05, 2.8074e-05],
        [9.5367e-06, 6.7949e-06],
        [5.3644e-07, 2.5153e-05],
        [5.9605e-08, 1.1563e-05],
        [1.5080e-05, 6.3181e-06],
        [3.6955e-06, 6.1929e-05],
        [9.0003e-06, 3.1590e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0480, 0.0740],
        [0.1011, 0.0351],
        [0.0469, 0.0757],
        [0.0470, 0.0755],
        [0.0469, 0.0758],
        [0.0469, 0.0758],
        [0.0466, 0.0763],
        [0.0776, 0.0458],
        [0.0459, 0.0774],
        [0.0800, 0.0444],
        [0.0823, 0.0432],
        [0.0469, 0.0758],
        [0.0461, 0.0770],
        [0.0929, 0.0382],
        [0.0486, 0.0731],
        [0.0962, 0.0369]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.340204
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3053e-05, 1.4484e-05],
        [1.2815e-05, 5.3644e-06],
        [7.7486e-07, 4.6372e-05],
        [4.7684e-07, 3.2663e-05],
        [1.7881e-07, 1.9252e-05],
        [1.7881e-07, 1.5259e-05],
        [9.9540e-06, 7.1526e-06],
        [5.4836e-06, 9.1553e-05],
        [3.5763e-07, 3.0339e-05],
        [4.7684e-07, 2.0623e-05],
        [7.8082e-06, 8.7798e-05],
        [2.3186e-05, 1.0431e-05],
        [1.7285e-06, 5.4121e-05],
        [1.7881e-05, 1.5676e-05],
        [2.8610e-06, 2.9802e-07],
        [2.2471e-05, 6.2525e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0725, 0.0491],
        [0.0913, 0.0389],
        [0.0459, 0.0775],
        [0.0458, 0.0777],
        [0.0456, 0.0781],
        [0.0457, 0.0779],
        [0.0808, 0.0440],
        [0.0478, 0.0745],
        [0.0457, 0.0779],
        [0.0462, 0.0771],
        [0.0490, 0.0726],
        [0.0900, 0.0395],
        [0.0466, 0.0764],
        [0.0769, 0.0463],
        [0.1117, 0.0319],
        [0.0588, 0.0605]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.371036
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8147e-06, 6.5565e-07],
        [1.7881e-07, 2.1875e-05],
        [1.2338e-05, 5.4240e-06],
        [1.1325e-06, 4.6492e-05],
        [2.4080e-05, 6.1572e-05],
        [2.1279e-05, 1.2219e-05],
        [1.8239e-05, 8.6427e-06],
        [1.7285e-06, 3.8743e-05],
        [4.1723e-07, 3.5882e-05],
        [1.0014e-05, 1.1623e-05],
        [5.9605e-07, 3.9697e-05],
        [2.4736e-05, 1.8656e-05],
        [5.9605e-07, 4.1962e-05],
        [1.3709e-05, 7.1526e-06],
        [1.3709e-06, 5.6863e-05],
        [2.5630e-06, 6.6221e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1021, 0.0348],
        [0.0438, 0.0809],
        [0.0871, 0.0407],
        [0.0445, 0.0797],
        [0.0576, 0.0616],
        [0.0821, 0.0432],
        [0.0857, 0.0414],
        [0.0454, 0.0782],
        [0.0440, 0.0807],
        [0.0691, 0.0514],
        [0.0441, 0.0804],
        [0.0769, 0.0461],
        [0.0441, 0.0804],
        [0.0839, 0.0423],
        [0.0445, 0.0797],
        [0.0451, 0.0786]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.426584
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.3975e-06, 5.5969e-05],
        [1.4067e-05, 5.5432e-06],
        [1.2696e-05, 7.7486e-06],
        [1.7941e-05, 1.3292e-05],
        [9.1791e-06, 3.4571e-06],
        [1.8060e-05, 1.6212e-05],
        [7.1526e-07, 3.6597e-05],
        [3.9935e-06, 5.9605e-07]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0761, 0.1886],
        [0.1473, 0.0975],
        [0.1337, 0.1073],
        [0.1277, 0.1125],
        [0.1486, 0.0966],
        [0.1217, 0.1179],
        [0.0733, 0.1959],
        [0.1716, 0.0837]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.232244
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 2 and batchsize 16: 0:00:05.141206
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06],
        [7.7486e-06, 6.6757e-06]], device='cuda:0') torch.Size([155, 2])
answers_probs just softmax dim 0: tensor([[0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065]], device='cuda:0')
tensor([[0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065],
        [0.0065, 0.0065]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0325e-05, 2.8014e-05],
        [3.3379e-06, 5.6207e-05],
        [6.5565e-07, 2.2054e-05],
        [2.5094e-05, 1.2815e-05],
        [1.9670e-06, 3.6180e-05],
        [1.4901e-06, 3.9577e-05],
        [2.3246e-06, 3.4273e-05],
        [7.1526e-07, 2.4676e-05],
        [6.3181e-06, 6.9678e-05],
        [2.9802e-07, 1.5676e-05],
        [2.0266e-06, 4.2379e-05],
        [1.0252e-05, 4.0531e-06],
        [3.6955e-06, 5.1916e-05],
        [3.5763e-07, 1.7881e-05],
        [3.5763e-06, 4.7684e-07],
        [3.5763e-06, 4.5657e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0742, 0.0486],
        [0.0516, 0.0699],
        [0.0502, 0.0719],
        [0.0945, 0.0382],
        [0.0513, 0.0702],
        [0.0506, 0.0713],
        [0.0519, 0.0694],
        [0.0501, 0.0719],
        [0.0530, 0.0681],
        [0.0497, 0.0726],
        [0.0510, 0.0707],
        [0.0998, 0.0361],
        [0.0521, 0.0692],
        [0.0497, 0.0725],
        [0.1178, 0.0306],
        [0.0524, 0.0688]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.369686
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 1.8418e-05],
        [4.4703e-06, 1.4901e-06],
        [1.2398e-05, 3.0994e-06],
        [3.0398e-06, 3.1292e-05],
        [1.1384e-05, 5.0545e-05],
        [3.3021e-05, 1.1861e-05],
        [1.7881e-07, 1.5855e-05],
        [1.0550e-05, 4.1127e-06],
        [2.0027e-05, 9.0599e-06],
        [5.9605e-07, 3.3796e-05],
        [5.9605e-07, 2.2948e-05],
        [5.9605e-07, 2.1935e-05],
        [1.3828e-05, 1.1206e-05],
        [8.3447e-06, 5.2691e-05],
        [2.4080e-05, 1.6391e-05],
        [2.2709e-05, 6.4969e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0853],
        [0.0856, 0.0411],
        [0.0900, 0.0391],
        [0.0442, 0.0796],
        [0.0486, 0.0724],
        [0.0844, 0.0417],
        [0.0409, 0.0860],
        [0.0830, 0.0424],
        [0.0805, 0.0437],
        [0.0411, 0.0855],
        [0.0415, 0.0848],
        [0.0415, 0.0847],
        [0.0702, 0.0501],
        [0.0463, 0.0759],
        [0.0733, 0.0480],
        [0.0880, 0.0400]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.432684
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-06, 3.7014e-05],
        [1.6332e-05, 1.5378e-05],
        [2.2471e-05, 9.2983e-06],
        [1.6689e-06, 3.5822e-05],
        [1.0192e-05, 3.0994e-06],
        [3.4571e-05, 3.1471e-05],
        [2.5630e-06, 3.9756e-05],
        [4.1723e-07, 9.8944e-06],
        [1.3113e-06, 4.4107e-05],
        [8.9407e-07, 2.8193e-05],
        [1.7881e-07, 2.1338e-05],
        [1.7881e-07, 1.2934e-05],
        [1.0133e-05, 2.0266e-06],
        [1.0252e-05, 4.1723e-06],
        [2.3365e-05, 7.4506e-06],
        [8.4043e-06, 3.8743e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0471, 0.0744],
        [0.0687, 0.0511],
        [0.0832, 0.0422],
        [0.0429, 0.0818],
        [0.0883, 0.0397],
        [0.0692, 0.0507],
        [0.0436, 0.0805],
        [0.0427, 0.0821],
        [0.0422, 0.0831],
        [0.0423, 0.0829],
        [0.0414, 0.0848],
        [0.0416, 0.0844],
        [0.0944, 0.0372],
        [0.0835, 0.0420],
        [0.0876, 0.0401],
        [0.0813, 0.0431]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.431074
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.4043e-06, 3.6955e-06],
        [1.0133e-06, 3.2783e-05],
        [2.3842e-05, 1.6391e-05],
        [1.1563e-05, 4.5896e-06],
        [1.3709e-06, 3.9697e-05],
        [3.0637e-05, 1.1206e-05],
        [1.3769e-05, 6.2585e-06],
        [1.1027e-05, 9.6560e-06],
        [1.6093e-06, 3.9935e-05],
        [1.5140e-05, 6.3777e-06],
        [1.5795e-05, 9.4175e-06],
        [2.5034e-06, 5.5552e-05],
        [3.5763e-07, 1.9133e-05],
        [2.8908e-05, 1.4126e-05],
        [9.5367e-07, 3.2783e-05],
        [3.3379e-06, 2.9802e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0765, 0.0460],
        [0.0394, 0.0893],
        [0.0691, 0.0509],
        [0.0782, 0.0450],
        [0.0395, 0.0890],
        [0.0794, 0.0443],
        [0.0760, 0.0463],
        [0.0651, 0.0540],
        [0.0397, 0.0886],
        [0.0772, 0.0456],
        [0.0715, 0.0492],
        [0.0399, 0.0882],
        [0.0389, 0.0904],
        [0.0748, 0.0470],
        [0.0393, 0.0895],
        [0.0957, 0.0368]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.491121
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-05, 1.0192e-05],
        [2.1696e-05, 6.6161e-06],
        [1.8358e-05, 6.4969e-06],
        [5.9605e-07, 2.4319e-05],
        [5.3644e-07, 2.1398e-05],
        [5.3644e-07, 1.4663e-05],
        [3.6418e-05, 2.0564e-05],
        [2.9802e-07, 2.2531e-05],
        [8.5831e-06, 2.7418e-06],
        [1.0371e-05, 4.3511e-06],
        [1.1683e-05, 3.3379e-06],
        [9.5367e-07, 3.8624e-05],
        [1.0729e-06, 3.1769e-05],
        [2.0504e-05, 1.1027e-05],
        [3.4690e-05, 2.9027e-05],
        [2.0862e-06, 2.8729e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0802, 0.0436],
        [0.0848, 0.0412],
        [0.0825, 0.0424],
        [0.0404, 0.0866],
        [0.0404, 0.0866],
        [0.0408, 0.0857],
        [0.0747, 0.0468],
        [0.0399, 0.0876],
        [0.0841, 0.0416],
        [0.0797, 0.0439],
        [0.0858, 0.0408],
        [0.0404, 0.0866],
        [0.0407, 0.0859],
        [0.0755, 0.0463],
        [0.0679, 0.0515],
        [0.0422, 0.0829]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.486665
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3292e-05, 4.2319e-06],
        [2.1040e-05, 1.1623e-05],
        [1.3530e-05, 5.7817e-06],
        [1.8477e-06, 3.3677e-05],
        [9.5367e-07, 5.0008e-05],
        [4.1723e-07, 2.0504e-05],
        [1.1444e-05, 4.6492e-06],
        [2.0862e-06, 4.6730e-05],
        [1.1861e-05, 8.0466e-06],
        [1.2100e-05, 6.5565e-06],
        [2.1577e-05, 7.4506e-06],
        [1.6391e-05, 1.2100e-05],
        [3.2187e-06, 4.7684e-07],
        [7.1526e-07, 2.3663e-05],
        [2.0206e-05, 9.2387e-06],
        [2.2829e-05, 2.1636e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0793, 0.0448],
        [0.0708, 0.0502],
        [0.0749, 0.0475],
        [0.0391, 0.0908],
        [0.0379, 0.0939],
        [0.0379, 0.0938],
        [0.0757, 0.0470],
        [0.0388, 0.0917],
        [0.0674, 0.0527],
        [0.0711, 0.0500],
        [0.0781, 0.0455],
        [0.0661, 0.0538],
        [0.0888, 0.0400],
        [0.0383, 0.0929],
        [0.0738, 0.0482],
        [0.0621, 0.0572]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.426441
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0027e-05, 1.5140e-05],
        [1.6689e-06, 2.6286e-05],
        [2.3484e-05, 4.9293e-05],
        [1.7881e-07, 1.1683e-05],
        [3.5763e-07, 1.1206e-05],
        [1.7107e-05, 6.1989e-06],
        [9.3579e-06, 6.1989e-05],
        [6.5565e-07, 3.2663e-05],
        [2.8610e-06, 4.1366e-05],
        [2.5451e-05, 2.2292e-05],
        [2.8014e-06, 3.5763e-07],
        [2.0027e-05, 1.4663e-05],
        [1.9014e-05, 3.6955e-06],
        [1.4722e-05, 1.0848e-05],
        [1.4126e-05, 4.4703e-06],
        [1.2338e-05, 4.6492e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0686, 0.0516],
        [0.0412, 0.0859],
        [0.0536, 0.0660],
        [0.0394, 0.0898],
        [0.0400, 0.0884],
        [0.0808, 0.0438],
        [0.0442, 0.0800],
        [0.0396, 0.0894],
        [0.0414, 0.0855],
        [0.0661, 0.0535],
        [0.0942, 0.0376],
        [0.0691, 0.0512],
        [0.0896, 0.0395],
        [0.0690, 0.0513],
        [0.0829, 0.0427],
        [0.0802, 0.0441]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.432242
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3053e-05, 2.1219e-05],
        [7.8082e-06, 2.0266e-06],
        [4.1723e-06, 7.7486e-07],
        [2.2054e-06, 4.3809e-05],
        [2.7418e-06, 4.5836e-05],
        [2.3842e-06, 3.5822e-05],
        [4.1723e-07, 1.8716e-05],
        [1.4246e-05, 5.5432e-06],
        [5.3644e-07, 2.1279e-05],
        [1.7881e-07, 1.2338e-05],
        [1.7166e-05, 7.2122e-06],
        [1.0908e-05, 4.4703e-06],
        [1.1921e-07, 1.1265e-05],
        [1.6689e-06, 3.4451e-05],
        [1.4544e-05, 4.3333e-05],
        [2.4736e-05, 8.4043e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0615, 0.0569],
        [0.0930, 0.0376],
        [0.0977, 0.0358],
        [0.0441, 0.0793],
        [0.0445, 0.0787],
        [0.0447, 0.0782],
        [0.0430, 0.0814],
        [0.0863, 0.0405],
        [0.0431, 0.0812],
        [0.0426, 0.0821],
        [0.0850, 0.0412],
        [0.0854, 0.0410],
        [0.0425, 0.0824],
        [0.0440, 0.0795],
        [0.0540, 0.0647],
        [0.0887, 0.0395]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.454748
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 1.9193e-05],
        [1.4901e-06, 2.4974e-05],
        [1.9431e-05, 8.4043e-06],
        [3.8743e-06, 5.8234e-05],
        [3.1114e-05, 2.2590e-05],
        [1.4424e-05, 6.7353e-06],
        [1.2994e-05, 9.4771e-06],
        [6.7353e-06, 4.1246e-05],
        [1.4186e-05, 4.4703e-06],
        [6.5565e-07, 2.6882e-05],
        [1.2755e-05, 4.7088e-06],
        [1.0848e-05, 3.3975e-06],
        [4.2319e-06, 1.2517e-06],
        [2.6822e-06, 5.7340e-05],
        [1.0967e-05, 4.8280e-06],
        [1.8597e-05, 1.1086e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0393, 0.0905],
        [0.0402, 0.0884],
        [0.0763, 0.0465],
        [0.0404, 0.0879],
        [0.0678, 0.0524],
        [0.0751, 0.0473],
        [0.0677, 0.0525],
        [0.0437, 0.0813],
        [0.0813, 0.0437],
        [0.0389, 0.0913],
        [0.0789, 0.0451],
        [0.0813, 0.0437],
        [0.0822, 0.0432],
        [0.0397, 0.0895],
        [0.0761, 0.0467],
        [0.0711, 0.0500]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.509824
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.3511e-06, 6.6698e-05],
        [2.4080e-05, 3.3677e-05],
        [4.1723e-07, 7.4506e-06],
        [2.6941e-05, 1.1742e-05],
        [1.2577e-05, 4.3511e-06],
        [8.9407e-07, 3.4511e-05],
        [1.9073e-06, 4.2737e-05],
        [1.7881e-06, 3.2425e-05],
        [1.7881e-07, 1.6153e-05],
        [1.1683e-05, 5.9605e-06],
        [1.1206e-05, 9.5963e-06],
        [5.3644e-07, 2.3365e-05],
        [2.6166e-05, 5.3287e-05],
        [2.8312e-05, 1.1563e-05],
        [1.4126e-05, 3.8743e-06],
        [3.5763e-07, 2.8253e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0776],
        [0.0655, 0.0544],
        [0.0455, 0.0782],
        [0.0866, 0.0411],
        [0.0907, 0.0392],
        [0.0442, 0.0804],
        [0.0450, 0.0790],
        [0.0455, 0.0783],
        [0.0436, 0.0816],
        [0.0836, 0.0425],
        [0.0739, 0.0481],
        [0.0441, 0.0806],
        [0.0600, 0.0593],
        [0.0877, 0.0405],
        [0.0946, 0.0376],
        [0.0437, 0.0814]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.427315
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 1.8060e-05],
        [1.8418e-05, 1.0729e-05],
        [2.8014e-06, 3.6955e-05],
        [4.7684e-07, 2.8074e-05],
        [1.0729e-06, 2.9624e-05],
        [1.3113e-06, 3.8087e-05],
        [9.5367e-07, 3.3438e-05],
        [3.5167e-06, 6.1691e-05],
        [5.3644e-07, 1.9193e-05],
        [1.2457e-05, 5.1260e-06],
        [1.9073e-06, 3.7372e-05],
        [3.7551e-06, 5.3704e-05],
        [1.6630e-05, 7.8082e-06],
        [1.1206e-05, 3.3379e-06],
        [4.5300e-06, 6.5565e-07],
        [1.1921e-05, 3.8147e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0448, 0.0778],
        [0.0818, 0.0426],
        [0.0467, 0.0747],
        [0.0442, 0.0788],
        [0.0450, 0.0774],
        [0.0450, 0.0775],
        [0.0447, 0.0779],
        [0.0459, 0.0759],
        [0.0447, 0.0780],
        [0.0883, 0.0394],
        [0.0457, 0.0763],
        [0.0464, 0.0750],
        [0.0859, 0.0406],
        [0.0940, 0.0371],
        [0.1042, 0.0334],
        [0.0928, 0.0376]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.491467
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0550e-05, 4.5896e-06],
        [1.3709e-06, 3.5524e-05],
        [1.3709e-06, 2.8431e-05],
        [2.8849e-05, 9.3579e-06],
        [1.4305e-06, 3.5703e-05],
        [1.5855e-05, 4.5300e-06],
        [8.9407e-07, 2.8074e-05],
        [3.1590e-06, 4.7386e-05],
        [1.9431e-05, 5.7220e-06],
        [1.7881e-07, 1.3173e-05],
        [7.1526e-07, 2.3544e-05],
        [5.9605e-07, 9.4771e-06],
        [2.6345e-05, 9.4771e-06],
        [7.9274e-06, 4.5300e-06],
        [3.7253e-05, 1.8418e-05],
        [1.8477e-05, 6.3181e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0808, 0.0430],
        [0.0418, 0.0832],
        [0.0422, 0.0825],
        [0.0857, 0.0406],
        [0.0418, 0.0831],
        [0.0876, 0.0397],
        [0.0415, 0.0838],
        [0.0429, 0.0812],
        [0.0872, 0.0399],
        [0.0408, 0.0852],
        [0.0415, 0.0839],
        [0.0427, 0.0814],
        [0.0840, 0.0414],
        [0.0761, 0.0457],
        [0.0786, 0.0442],
        [0.0848, 0.0410]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.597392
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.0729e-06, 3.0816e-05],
        [2.4438e-06, 4.4644e-05],
        [1.6212e-05, 1.0014e-05],
        [1.0729e-06, 3.2127e-05],
        [2.1815e-05, 1.0729e-05],
        [3.6955e-06, 5.3644e-07],
        [1.6093e-06, 3.8207e-05],
        [1.7285e-06, 4.2319e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0907, 0.1541],
        [0.0923, 0.1513],
        [0.1627, 0.0859],
        [0.0905, 0.1543],
        [0.1714, 0.0815],
        [0.2099, 0.0666],
        [0.0913, 0.1531],
        [0.0912, 0.1532]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.161212
acc:  0.965
Time taken to execute the en SA task with prompt type common, variation 3 and batchsize 16: 0:00:05.728054
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06],
        [5.6624e-06, 7.0930e-06]], device='cuda:0') torch.Size([128, 2])
answers_probs just softmax dim 0: tensor([[0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078]], device='cuda:0')
tensor([[0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078],
        [0.0078, 0.0078]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.2254e-06, 4.1127e-06],
        [8.5831e-06, 1.0550e-05],
        [2.9802e-07, 1.1981e-05],
        [1.9073e-06, 5.8472e-05],
        [2.3842e-07, 1.9670e-05],
        [1.3709e-05, 8.4639e-06],
        [6.0201e-06, 2.9206e-06],
        [7.1526e-07, 5.9068e-05],
        [1.4901e-06, 3.7551e-05],
        [9.5367e-07, 4.0948e-05],
        [1.8775e-05, 1.4722e-05],
        [2.0027e-05, 1.2219e-05],
        [7.3910e-06, 4.9472e-06],
        [9.5367e-06, 8.1062e-06],
        [8.1658e-06, 4.8280e-06],
        [1.0908e-05, 5.6028e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0797, 0.0452],
        [0.0641, 0.0562],
        [0.0419, 0.0860],
        [0.0422, 0.0854],
        [0.0414, 0.0870],
        [0.0760, 0.0475],
        [0.0802, 0.0449],
        [0.0414, 0.0870],
        [0.0425, 0.0848],
        [0.0419, 0.0861],
        [0.0717, 0.0503],
        [0.0762, 0.0473],
        [0.0745, 0.0484],
        [0.0703, 0.0513],
        [0.0767, 0.0470],
        [0.0792, 0.0455]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.458754
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 4.0233e-05],
        [1.4305e-05, 8.1658e-06],
        [2.0266e-06, 4.1723e-07],
        [2.2650e-06, 4.7565e-05],
        [1.3530e-05, 1.2517e-05],
        [2.3842e-07, 3.0696e-05],
        [4.7684e-07, 3.6776e-05],
        [1.0014e-05, 4.2319e-06],
        [3.5763e-07, 2.5570e-05],
        [1.5080e-05, 1.1563e-05],
        [1.6987e-05, 1.4424e-05],
        [7.1526e-07, 4.2915e-05],
        [1.8775e-05, 2.0981e-05],
        [6.5565e-06, 2.1458e-06],
        [1.3113e-05, 3.8147e-06],
        [2.4199e-05, 3.4153e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0410, 0.0867],
        [0.0759, 0.0468],
        [0.0921, 0.0386],
        [0.0420, 0.0845],
        [0.0675, 0.0526],
        [0.0405, 0.0878],
        [0.0407, 0.0873],
        [0.0811, 0.0438],
        [0.0407, 0.0872],
        [0.0708, 0.0502],
        [0.0690, 0.0515],
        [0.0408, 0.0870],
        [0.0644, 0.0552],
        [0.0853, 0.0416],
        [0.0872, 0.0408],
        [0.0608, 0.0584]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.423919
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1384e-05, 6.9141e-06],
        [1.3053e-05, 8.8811e-06],
        [2.7418e-06, 3.5763e-07],
        [2.9802e-07, 2.5690e-05],
        [2.0385e-05, 1.1444e-05],
        [1.8299e-05, 4.7445e-05],
        [5.9605e-07, 2.6107e-05],
        [5.7220e-06, 6.5207e-05],
        [8.9407e-06, 4.2915e-06],
        [8.3447e-07, 3.9995e-05],
        [1.7881e-07, 2.0325e-05],
        [1.1921e-07, 1.4901e-05],
        [1.2815e-05, 5.6624e-06],
        [2.4080e-05, 2.8789e-05],
        [9.4771e-06, 4.1723e-06],
        [4.7684e-07, 3.3140e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0775, 0.0456],
        [0.0755, 0.0469],
        [0.1008, 0.0351],
        [0.0421, 0.0840],
        [0.0790, 0.0448],
        [0.0550, 0.0643],
        [0.0426, 0.0831],
        [0.0451, 0.0784],
        [0.0818, 0.0432],
        [0.0425, 0.0833],
        [0.0420, 0.0843],
        [0.0419, 0.0843],
        [0.0833, 0.0425],
        [0.0656, 0.0539],
        [0.0833, 0.0424],
        [0.0422, 0.0838]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.453318
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 4.5538e-05],
        [8.3447e-07, 3.9995e-05],
        [1.2219e-05, 9.8944e-06],
        [1.6689e-06, 3.7909e-05],
        [1.6630e-05, 1.6749e-05],
        [2.8610e-06, 6.2287e-05],
        [2.2650e-06, 2.3842e-07],
        [2.3842e-07, 2.2948e-05],
        [1.5855e-05, 8.4639e-06],
        [4.8876e-06, 6.7234e-05],
        [6.5565e-07, 2.9624e-05],
        [2.1994e-05, 1.0908e-05],
        [1.6749e-05, 1.3053e-05],
        [1.3769e-05, 4.4703e-06],
        [2.3842e-07, 2.6703e-05],
        [1.9073e-06, 4.4405e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0446, 0.0790],
        [0.0446, 0.0791],
        [0.0759, 0.0465],
        [0.0456, 0.0774],
        [0.0719, 0.0490],
        [0.0456, 0.0772],
        [0.1080, 0.0327],
        [0.0441, 0.0799],
        [0.0838, 0.0421],
        [0.0467, 0.0754],
        [0.0446, 0.0790],
        [0.0852, 0.0414],
        [0.0766, 0.0460],
        [0.0929, 0.0379],
        [0.0441, 0.0800],
        [0.0455, 0.0775]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.431661
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-06, 4.1425e-05],
        [1.4961e-05, 1.1146e-05],
        [6.7353e-06, 4.6611e-05],
        [2.5034e-06, 1.7881e-07],
        [1.7881e-07, 2.8074e-05],
        [6.4969e-06, 5.5432e-05],
        [2.1040e-05, 1.1981e-05],
        [7.8082e-06, 2.8014e-06],
        [1.3709e-05, 5.6624e-06],
        [1.0192e-05, 7.9274e-06],
        [5.9605e-08, 1.1981e-05],
        [3.5763e-07, 2.0981e-05],
        [4.7684e-07, 2.9922e-05],
        [2.0206e-05, 1.2040e-05],
        [1.6987e-05, 8.1062e-06],
        [1.5557e-05, 1.4961e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0413, 0.0854],
        [0.0712, 0.0495],
        [0.0456, 0.0774],
        [0.1021, 0.0346],
        [0.0404, 0.0873],
        [0.0446, 0.0791],
        [0.0759, 0.0465],
        [0.0838, 0.0421],
        [0.0815, 0.0433],
        [0.0705, 0.0501],
        [0.0404, 0.0874],
        [0.0408, 0.0864],
        [0.0408, 0.0865],
        [0.0751, 0.0470],
        [0.0790, 0.0446],
        [0.0669, 0.0528]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.371605
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8014e-06, 6.0737e-05],
        [2.7418e-06, 6.6280e-05],
        [1.9073e-06, 5.7936e-05],
        [1.7881e-07, 9.0599e-06],
        [1.8477e-06, 4.0650e-05],
        [1.3888e-05, 5.5432e-05],
        [1.6689e-06, 2.3842e-07],
        [7.5698e-06, 5.0128e-05],
        [1.0729e-06, 4.6551e-05],
        [2.6822e-06, 4.5598e-05],
        [1.3530e-05, 5.8413e-06],
        [2.1517e-05, 1.8418e-05],
        [2.4736e-05, 1.9908e-05],
        [1.1325e-05, 8.2850e-06],
        [8.5235e-06, 2.3842e-06],
        [2.0742e-05, 1.1086e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0794],
        [0.0445, 0.0797],
        [0.0442, 0.0803],
        [0.0436, 0.0814],
        [0.0447, 0.0794],
        [0.0523, 0.0679],
        [0.1026, 0.0346],
        [0.0488, 0.0727],
        [0.0438, 0.0811],
        [0.0452, 0.0785],
        [0.0860, 0.0413],
        [0.0733, 0.0484],
        [0.0745, 0.0477],
        [0.0762, 0.0466],
        [0.0935, 0.0380],
        [0.0821, 0.0432]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.409721
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2755e-05, 6.7353e-06],
        [2.2054e-06, 5.3346e-05],
        [1.0133e-06, 4.2260e-05],
        [2.1040e-05, 1.5140e-05],
        [2.0742e-05, 1.1742e-05],
        [1.2696e-05, 6.1393e-06],
        [8.5235e-06, 4.7088e-06],
        [9.8348e-06, 4.0531e-06],
        [5.3644e-07, 3.0637e-05],
        [4.1723e-07, 7.6890e-06],
        [1.0729e-05, 8.7619e-06],
        [1.4305e-06, 5.3465e-05],
        [1.2338e-05, 6.0201e-06],
        [4.7684e-07, 2.5868e-05],
        [2.9802e-07, 2.1219e-05],
        [1.1444e-05, 5.3048e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0790, 0.0450],
        [0.0427, 0.0833],
        [0.0420, 0.0847],
        [0.0734, 0.0484],
        [0.0777, 0.0458],
        [0.0805, 0.0442],
        [0.0781, 0.0455],
        [0.0833, 0.0427],
        [0.0417, 0.0852],
        [0.0432, 0.0823],
        [0.0712, 0.0500],
        [0.0421, 0.0844],
        [0.0804, 0.0443],
        [0.0418, 0.0851],
        [0.0416, 0.0855],
        [0.0813, 0.0438]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.334746
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 6.7949e-06],
        [1.7881e-07, 1.5259e-05],
        [1.1921e-07, 1.6570e-05],
        [1.6093e-06, 5.4538e-05],
        [2.9802e-07, 2.0921e-05],
        [2.3842e-07, 2.0504e-05],
        [1.1325e-05, 1.0371e-05],
        [1.6689e-06, 4.4525e-05],
        [5.9605e-07, 3.1054e-05],
        [1.1742e-05, 4.3511e-06],
        [1.7881e-07, 1.6868e-05],
        [1.2517e-06, 3.3438e-05],
        [1.7881e-07, 1.9670e-05],
        [1.9729e-05, 1.3471e-05],
        [8.1062e-06, 4.7684e-06],
        [8.4639e-06, 4.5896e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0503, 0.0718],
        [0.0492, 0.0734],
        [0.0489, 0.0737],
        [0.0500, 0.0721],
        [0.0493, 0.0732],
        [0.0492, 0.0734],
        [0.0819, 0.0441],
        [0.0504, 0.0716],
        [0.0495, 0.0729],
        [0.1008, 0.0358],
        [0.0491, 0.0735],
        [0.0504, 0.0716],
        [0.0490, 0.0736],
        [0.0880, 0.0410],
        [0.0912, 0.0396],
        [0.0929, 0.0388]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.412538
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1742e-05, 1.9073e-05],
        [7.1526e-07, 2.8372e-05],
        [8.0466e-06, 4.1723e-06],
        [1.6093e-06, 4.4167e-05],
        [1.5855e-05, 1.4186e-05],
        [7.0333e-06, 5.9605e-06],
        [2.9802e-07, 1.9550e-05],
        [1.1623e-05, 5.6624e-06],
        [4.1723e-07, 4.1366e-05],
        [1.3113e-06, 3.4213e-05],
        [1.3590e-05, 1.3113e-05],
        [2.8014e-06, 2.9802e-07],
        [1.3113e-06, 3.2902e-05],
        [5.3644e-07, 4.0233e-05],
        [1.6630e-05, 2.1994e-05],
        [1.6689e-06, 4.9829e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0646, 0.0554],
        [0.0453, 0.0791],
        [0.0853, 0.0420],
        [0.0457, 0.0783],
        [0.0748, 0.0478],
        [0.0759, 0.0472],
        [0.0448, 0.0798],
        [0.0865, 0.0414],
        [0.0446, 0.0803],
        [0.0458, 0.0781],
        [0.0735, 0.0487],
        [0.1090, 0.0328],
        [0.0459, 0.0780],
        [0.0447, 0.0800],
        [0.0679, 0.0527],
        [0.0456, 0.0785]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.425737
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-06, 2.2054e-06],
        [2.9802e-07, 2.1398e-05],
        [7.9870e-06, 1.1623e-05],
        [2.3842e-06, 7.0691e-05],
        [1.7285e-06, 4.2677e-05],
        [1.8477e-06, 4.7207e-05],
        [1.1921e-07, 1.1742e-05],
        [2.3842e-07, 2.0146e-05],
        [1.2517e-05, 9.4771e-06],
        [9.5367e-07, 4.7684e-05],
        [1.8775e-05, 1.7762e-05],
        [1.3888e-05, 8.5235e-06],
        [1.0192e-05, 6.3777e-06],
        [2.8014e-06, 8.9407e-07],
        [1.3232e-05, 1.2040e-05],
        [1.4901e-05, 5.9903e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0945, 0.0380],
        [0.0440, 0.0816],
        [0.0652, 0.0551],
        [0.0448, 0.0801],
        [0.0451, 0.0796],
        [0.0451, 0.0797],
        [0.0438, 0.0819],
        [0.0439, 0.0818],
        [0.0767, 0.0468],
        [0.0443, 0.0811],
        [0.0726, 0.0495],
        [0.0807, 0.0445],
        [0.0803, 0.0447],
        [0.0926, 0.0388],
        [0.0733, 0.0490],
        [0.0530, 0.0678]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.499932
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 4.3809e-05],
        [9.7752e-06, 6.0201e-06],
        [3.5763e-07, 1.8716e-05],
        [9.5963e-06, 6.3181e-06],
        [1.4126e-05, 3.3796e-05],
        [1.7881e-07, 4.7088e-06],
        [1.0967e-05, 1.3828e-05],
        [1.9073e-06, 5.8234e-05],
        [1.1086e-05, 3.3379e-06],
        [1.6570e-05, 3.5107e-05],
        [6.5565e-07, 4.5478e-05],
        [1.6093e-06, 4.7565e-05],
        [1.9908e-05, 1.0550e-05],
        [7.7486e-07, 3.4928e-05],
        [1.2815e-05, 1.0312e-05],
        [5.9605e-07, 3.6597e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0464, 0.0780],
        [0.0845, 0.0429],
        [0.0464, 0.0781],
        [0.0832, 0.0435],
        [0.0611, 0.0593],
        [0.0472, 0.0767],
        [0.0708, 0.0511],
        [0.0470, 0.0771],
        [0.0981, 0.0369],
        [0.0627, 0.0577],
        [0.0462, 0.0784],
        [0.0470, 0.0770],
        [0.0875, 0.0414],
        [0.0465, 0.0779],
        [0.0792, 0.0457],
        [0.0462, 0.0783]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.571412
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.5226e-05],
        [1.6451e-05, 1.6570e-05],
        [9.0599e-06, 4.2915e-06],
        [6.4969e-06, 3.3379e-06],
        [1.3053e-05, 8.4639e-06],
        [7.7486e-07, 4.1664e-05],
        [1.7524e-05, 1.5497e-05],
        [1.7881e-07, 2.0623e-05],
        [2.9802e-07, 2.8908e-05],
        [4.1723e-07, 2.3842e-05],
        [7.5698e-06, 7.6890e-06],
        [1.3709e-06, 1.7881e-07],
        [1.0133e-06, 4.2915e-05],
        [9.9540e-06, 7.5102e-06],
        [1.7285e-06, 3.9935e-05],
        [6.5565e-07, 2.2888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0441, 0.0806],
        [0.0713, 0.0498],
        [0.0854, 0.0416],
        [0.0839, 0.0424],
        [0.0795, 0.0447],
        [0.0441, 0.0806],
        [0.0736, 0.0483],
        [0.0437, 0.0813],
        [0.0438, 0.0812],
        [0.0441, 0.0806],
        [0.0711, 0.0500],
        [0.1049, 0.0339],
        [0.0443, 0.0802],
        [0.0766, 0.0464],
        [0.0451, 0.0787],
        [0.0445, 0.0798]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.369215
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.9802e-07, 2.8729e-05],
        [1.9252e-05, 3.0816e-05],
        [3.5763e-07, 1.8060e-05],
        [2.2054e-06, 2.9802e-07],
        [8.9407e-07, 2.4855e-05],
        [5.9605e-08, 1.3232e-05],
        [9.3579e-06, 1.0371e-05],
        [3.5167e-06, 7.4923e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0953, 0.1498],
        [0.1385, 0.1031],
        [0.0961, 0.1485],
        [0.2276, 0.0627],
        [0.0976, 0.1462],
        [0.0947, 0.1507],
        [0.1515, 0.0942],
        [0.0986, 0.1447]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.163827
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 4 and batchsize 16: 0:00:05.343252
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06],
        [7.5698e-06, 9.8944e-06]], device='cuda:0') torch.Size([101, 2])
answers_probs just softmax dim 0: tensor([[0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099]], device='cuda:0')
tensor([[0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099],
        [0.0099, 0.0099]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 4.0293e-05],
        [7.8082e-06, 4.5300e-06],
        [4.3511e-06, 5.1439e-05],
        [7.1526e-07, 6.2525e-05],
        [1.7047e-05, 6.3777e-06],
        [3.2187e-06, 2.9802e-07],
        [1.1921e-05, 3.9339e-06],
        [1.6093e-06, 5.8532e-05],
        [2.9802e-07, 1.1504e-05],
        [2.7955e-05, 1.6570e-05],
        [2.2709e-05, 9.8944e-06],
        [1.6212e-05, 1.3113e-05],
        [2.8610e-06, 4.3869e-05],
        [1.0192e-05, 7.6294e-06],
        [1.1921e-06, 2.9743e-05],
        [6.5565e-07, 3.3259e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0423, 0.0828],
        [0.0776, 0.0451],
        [0.0446, 0.0785],
        [0.0417, 0.0839],
        [0.0854, 0.0410],
        [0.1030, 0.0340],
        [0.0874, 0.0400],
        [0.0423, 0.0827],
        [0.0423, 0.0828],
        [0.0772, 0.0453],
        [0.0827, 0.0423],
        [0.0717, 0.0488],
        [0.0438, 0.0799],
        [0.0730, 0.0479],
        [0.0429, 0.0817],
        [0.0420, 0.0833]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.455273
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.0930e-06, 2.4438e-06],
        [1.5974e-05, 1.5616e-05],
        [2.1756e-05, 1.3173e-05],
        [1.5914e-05, 6.5565e-06],
        [2.1458e-06, 4.9591e-05],
        [4.1723e-07, 1.8001e-05],
        [4.1723e-07, 2.3544e-05],
        [4.2915e-06, 2.1458e-06],
        [1.1146e-05, 9.2387e-05],
        [1.5497e-05, 7.1526e-06],
        [1.6093e-05, 1.0729e-05],
        [4.2319e-06, 6.4373e-05],
        [1.4365e-05, 7.3314e-06],
        [1.2517e-06, 4.3273e-05],
        [1.7881e-07, 2.2948e-05],
        [2.3603e-05, 1.4663e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0859, 0.0415],
        [0.0677, 0.0527],
        [0.0761, 0.0468],
        [0.0829, 0.0430],
        [0.0426, 0.0838],
        [0.0418, 0.0854],
        [0.0415, 0.0858],
        [0.0795, 0.0448],
        [0.0455, 0.0784],
        [0.0809, 0.0441],
        [0.0744, 0.0479],
        [0.0434, 0.0821],
        [0.0791, 0.0450],
        [0.0420, 0.0849],
        [0.0411, 0.0866],
        [0.0756, 0.0471]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.487412
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1086e-05, 6.4373e-06],
        [1.0371e-05, 3.7551e-06],
        [3.4213e-05, 1.6928e-05],
        [5.9605e-07, 3.2544e-05],
        [8.3447e-07, 3.3081e-05],
        [4.5300e-06, 5.3644e-07],
        [2.5690e-05, 5.5730e-05],
        [1.3530e-05, 8.4043e-06],
        [1.6510e-05, 1.0312e-05],
        [3.7551e-06, 5.1737e-05],
        [2.4736e-05, 1.3649e-05],
        [1.6689e-06, 4.6253e-05],
        [2.0206e-05, 1.5140e-05],
        [3.6776e-05, 2.3007e-05],
        [1.7762e-05, 7.7486e-06],
        [2.5153e-05, 1.5974e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0698, 0.0517],
        [0.0773, 0.0467],
        [0.0724, 0.0499],
        [0.0378, 0.0956],
        [0.0380, 0.0950],
        [0.0907, 0.0398],
        [0.0508, 0.0710],
        [0.0687, 0.0525],
        [0.0686, 0.0526],
        [0.0397, 0.0910],
        [0.0706, 0.0511],
        [0.0384, 0.0940],
        [0.0657, 0.0550],
        [0.0686, 0.0526],
        [0.0744, 0.0485],
        [0.0684, 0.0528]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.363173
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0385e-05, 1.7166e-05],
        [7.1526e-07, 3.5107e-05],
        [1.0729e-06, 4.0174e-05],
        [1.4365e-05, 1.7047e-05],
        [1.1921e-05, 1.2219e-05],
        [2.3842e-07, 2.3067e-05],
        [1.2398e-05, 1.2815e-05],
        [8.3447e-07, 2.8312e-05],
        [1.3649e-05, 4.8876e-06],
        [1.7285e-06, 4.8935e-05],
        [1.8656e-05, 8.3447e-06],
        [1.8775e-05, 1.0133e-05],
        [1.3649e-05, 8.2254e-06],
        [6.5565e-07, 1.7345e-05],
        [3.9935e-06, 7.1526e-05],
        [3.0994e-06, 4.8697e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0758, 0.0476],
        [0.0449, 0.0803],
        [0.0452, 0.0798],
        [0.0696, 0.0518],
        [0.0721, 0.0500],
        [0.0445, 0.0811],
        [0.0720, 0.0501],
        [0.0453, 0.0796],
        [0.0919, 0.0392],
        [0.0456, 0.0791],
        [0.0879, 0.0410],
        [0.0843, 0.0428],
        [0.0822, 0.0439],
        [0.0457, 0.0790],
        [0.0464, 0.0777],
        [0.0467, 0.0771]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.431337
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 8.9407e-06],
        [2.2113e-05, 1.2696e-05],
        [6.5565e-07, 2.3723e-05],
        [2.8968e-05, 9.9540e-06],
        [1.9848e-05, 1.2279e-05],
        [1.3351e-05, 1.0550e-05],
        [2.3246e-06, 5.7161e-05],
        [4.4107e-06, 6.9320e-05],
        [1.4782e-05, 1.4007e-05],
        [8.3447e-07, 3.4750e-05],
        [2.2054e-06, 4.8280e-05],
        [9.8348e-06, 6.0201e-06],
        [2.2113e-05, 8.8811e-06],
        [6.8545e-06, 8.4937e-05],
        [3.0398e-05, 3.9637e-05],
        [1.4663e-05, 4.4703e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0432, 0.0828],
        [0.0781, 0.0459],
        [0.0425, 0.0843],
        [0.0870, 0.0411],
        [0.0767, 0.0467],
        [0.0723, 0.0495],
        [0.0430, 0.0833],
        [0.0439, 0.0816],
        [0.0691, 0.0518],
        [0.0423, 0.0846],
        [0.0432, 0.0829],
        [0.0769, 0.0466],
        [0.0844, 0.0424],
        [0.0446, 0.0803],
        [0.0638, 0.0561],
        [0.0890, 0.0402]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.364640
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 2.5928e-05],
        [1.0133e-06, 4.5776e-05],
        [1.5974e-05, 9.4175e-06],
        [1.5855e-05, 4.2915e-06],
        [2.1756e-05, 1.1683e-05],
        [2.3842e-07, 1.6689e-05],
        [4.7684e-07, 2.9624e-05],
        [5.0068e-06, 8.9407e-07],
        [1.9670e-06, 5.0962e-05],
        [6.5565e-07, 3.4392e-05],
        [6.3777e-06, 8.7023e-05],
        [1.4663e-05, 7.2122e-06],
        [8.2254e-06, 4.4107e-06],
        [1.4365e-05, 5.7817e-06],
        [1.6212e-05, 8.8215e-06],
        [2.7180e-05, 2.4974e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0407, 0.0862],
        [0.0408, 0.0859],
        [0.0749, 0.0468],
        [0.0878, 0.0400],
        [0.0766, 0.0458],
        [0.0405, 0.0866],
        [0.0406, 0.0864],
        [0.0933, 0.0376],
        [0.0415, 0.0846],
        [0.0407, 0.0862],
        [0.0428, 0.0820],
        [0.0781, 0.0449],
        [0.0766, 0.0458],
        [0.0815, 0.0430],
        [0.0763, 0.0459],
        [0.0673, 0.0521]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.434139
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4378e-05, 3.4094e-05],
        [1.6093e-06, 3.9458e-05],
        [7.1526e-07, 2.7955e-05],
        [3.5763e-07, 7.0333e-06],
        [2.7418e-06, 6.5207e-05],
        [1.8120e-05, 1.0669e-05],
        [3.2187e-06, 6.7115e-05],
        [6.5565e-07, 3.6836e-05],
        [1.2398e-05, 9.4771e-06],
        [1.4901e-06, 4.3094e-05],
        [1.8477e-06, 5.9664e-05],
        [2.0802e-05, 1.5795e-05],
        [1.1742e-05, 9.3579e-06],
        [1.0133e-06, 3.6359e-05],
        [2.0266e-06, 4.8816e-05],
        [2.6941e-05, 4.0412e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0740, 0.0498],
        [0.0507, 0.0727],
        [0.0500, 0.0737],
        [0.0512, 0.0720],
        [0.0508, 0.0726],
        [0.0915, 0.0403],
        [0.0510, 0.0722],
        [0.0496, 0.0743],
        [0.0859, 0.0429],
        [0.0504, 0.0731],
        [0.0502, 0.0734],
        [0.0861, 0.0428],
        [0.0851, 0.0433],
        [0.0501, 0.0736],
        [0.0507, 0.0726],
        [0.0727, 0.0507]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.545452
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5630e-06, 5.9009e-05],
        [2.9802e-07, 2.2769e-05],
        [8.9407e-07, 3.9697e-05],
        [2.3842e-06, 4.8637e-05],
        [3.0458e-05, 2.0266e-05],
        [2.5868e-05, 2.1577e-05],
        [4.7088e-06, 1.0133e-06],
        [1.4305e-06, 4.1664e-05],
        [7.3910e-06, 5.9843e-05],
        [1.7464e-05, 6.4969e-06],
        [3.5763e-07, 3.4571e-05],
        [2.6226e-06, 4.2796e-05],
        [1.9073e-05, 9.5367e-06],
        [2.7120e-05, 1.4186e-05],
        [1.3113e-06, 4.5836e-05],
        [5.9605e-07, 3.5346e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0470, 0.0754],
        [0.0457, 0.0776],
        [0.0461, 0.0769],
        [0.0473, 0.0751],
        [0.0822, 0.0431],
        [0.0778, 0.0456],
        [0.1027, 0.0345],
        [0.0466, 0.0761],
        [0.0504, 0.0705],
        [0.0935, 0.0379],
        [0.0456, 0.0779],
        [0.0478, 0.0742],
        [0.0879, 0.0404],
        [0.0870, 0.0408],
        [0.0464, 0.0765],
        [0.0459, 0.0774]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.412685
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-06, 6.5804e-05],
        [2.3842e-07, 2.0802e-05],
        [1.7881e-06, 5.7817e-05],
        [3.9339e-06, 6.6876e-05],
        [3.6955e-06, 5.3644e-07],
        [8.8215e-06, 3.3975e-06],
        [2.0027e-05, 7.9870e-06],
        [2.4021e-05, 7.1228e-05],
        [1.6689e-06, 5.0843e-05],
        [1.4305e-06, 5.1260e-05],
        [2.0623e-05, 5.6922e-05],
        [1.6212e-05, 2.5511e-05],
        [1.9193e-05, 1.2100e-05],
        [2.3842e-06, 5.6863e-05],
        [3.6597e-05, 1.9729e-05],
        [7.7486e-07, 2.9624e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0765],
        [0.0447, 0.0797],
        [0.0456, 0.0782],
        [0.0468, 0.0762],
        [0.1059, 0.0336],
        [0.0911, 0.0391],
        [0.0904, 0.0394],
        [0.0569, 0.0626],
        [0.0457, 0.0781],
        [0.0455, 0.0784],
        [0.0577, 0.0618],
        [0.0652, 0.0546],
        [0.0817, 0.0436],
        [0.0461, 0.0774],
        [0.0847, 0.0421],
        [0.0454, 0.0786]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.407974
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9339e-06, 9.3043e-05],
        [2.9802e-07, 2.0027e-05],
        [2.3842e-07, 1.9729e-05],
        [1.1921e-07, 1.4067e-05],
        [1.0908e-05, 5.5373e-05],
        [2.5094e-05, 2.5094e-05],
        [1.8477e-06, 3.9518e-05],
        [1.6749e-05, 8.2254e-06],
        [1.0431e-05, 5.7161e-05],
        [1.6093e-06, 3.0816e-05],
        [3.0994e-06, 4.7684e-07],
        [1.0848e-05, 6.0797e-06],
        [1.8358e-05, 9.5963e-06],
        [9.2983e-06, 6.5506e-05],
        [1.1742e-05, 1.1146e-05],
        [1.0431e-05, 6.6161e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0453, 0.0791],
        [0.0442, 0.0811],
        [0.0440, 0.0814],
        [0.0439, 0.0816],
        [0.0513, 0.0698],
        [0.0718, 0.0499],
        [0.0455, 0.0787],
        [0.0851, 0.0421],
        [0.0508, 0.0706],
        [0.0457, 0.0783],
        [0.1035, 0.0346],
        [0.0826, 0.0434],
        [0.0839, 0.0427],
        [0.0493, 0.0727],
        [0.0727, 0.0493],
        [0.0803, 0.0446]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.412621
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-06, 5.0306e-05],
        [7.1526e-07, 2.7239e-05],
        [2.1994e-05, 1.0610e-05],
        [2.9206e-06, 4.8101e-05],
        [3.1471e-05, 2.2888e-05],
        [1.4901e-06, 3.3975e-05],
        [3.2663e-05, 1.5557e-05],
        [6.4373e-06, 7.6652e-05],
        [1.6689e-06, 4.5359e-05],
        [1.9550e-05, 1.1504e-05],
        [4.1723e-07, 7.0930e-06],
        [1.3709e-05, 6.5565e-06],
        [2.2054e-06, 4.6849e-05],
        [4.4703e-06, 6.0439e-05],
        [1.4901e-06, 3.7551e-05],
        [3.0637e-05, 1.4007e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0771],
        [0.0466, 0.0770],
        [0.0891, 0.0402],
        [0.0481, 0.0746],
        [0.0810, 0.0443],
        [0.0473, 0.0757],
        [0.0894, 0.0401],
        [0.0491, 0.0731],
        [0.0470, 0.0762],
        [0.0852, 0.0421],
        [0.0480, 0.0747],
        [0.0893, 0.0401],
        [0.0475, 0.0755],
        [0.0486, 0.0737],
        [0.0472, 0.0760],
        [0.0902, 0.0397]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.367651
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-07, 4.3988e-05],
        [1.0848e-05, 3.5763e-06],
        [2.8670e-05, 1.8477e-05],
        [3.4571e-06, 6.3062e-05],
        [2.3842e-06, 6.4671e-05],
        [1.0133e-06, 3.9816e-05],
        [2.0504e-05, 9.8348e-06],
        [2.4617e-05, 1.1623e-05],
        [3.4571e-06, 5.9605e-07],
        [1.1921e-07, 1.3649e-05],
        [1.6570e-05, 7.1526e-06],
        [2.2650e-05, 2.8193e-05],
        [1.5140e-05, 4.6492e-06],
        [1.9848e-05, 1.4484e-05],
        [3.5763e-07, 2.7835e-05],
        [2.7895e-05, 1.0133e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0389, 0.0904],
        [0.0817, 0.0430],
        [0.0707, 0.0497],
        [0.0406, 0.0866],
        [0.0399, 0.0880],
        [0.0395, 0.0890],
        [0.0757, 0.0464],
        [0.0759, 0.0463],
        [0.0903, 0.0389],
        [0.0388, 0.0904],
        [0.0774, 0.0454],
        [0.0601, 0.0584],
        [0.0827, 0.0424],
        [0.0686, 0.0512],
        [0.0390, 0.0901],
        [0.0802, 0.0438]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.293966
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[4.1127e-06, 4.7684e-07],
        [7.7486e-07, 2.5451e-05],
        [1.9073e-05, 7.3910e-06],
        [3.1292e-05, 3.6001e-05],
        [1.7881e-07, 1.5080e-05],
        [1.6987e-05, 7.9870e-06],
        [1.0848e-05, 4.0531e-06],
        [1.2517e-06, 3.9339e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1854, 0.0750],
        [0.0779, 0.1784],
        [0.1556, 0.0894],
        [0.1205, 0.1154],
        [0.0766, 0.1817],
        [0.1494, 0.0931],
        [0.1567, 0.0887],
        [0.0780, 0.1782]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.209417
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 5 and batchsize 16: 0:00:05.201991
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06],
        [5.9009e-06, 6.3181e-06]], device='cuda:0') torch.Size([109, 2])
answers_probs just softmax dim 0: tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
tensor([[0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092],
        [0.0092, 0.0092]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA common 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2365e-05, 1.7762e-05],
        [1.7881e-07, 1.6212e-05],
        [2.5630e-06, 5.6922e-05],
        [1.9491e-05, 1.5676e-05],
        [1.8477e-06, 5.6863e-05],
        [1.3113e-06, 5.0187e-05],
        [2.4140e-05, 1.4961e-05],
        [7.0333e-06, 3.8147e-06],
        [1.3113e-06, 4.7147e-05],
        [2.3484e-05, 1.2577e-05],
        [8.3447e-07, 2.4915e-05],
        [1.4007e-05, 5.0068e-06],
        [2.3842e-07, 2.4080e-05],
        [2.1577e-05, 4.6730e-05],
        [1.0133e-06, 4.1187e-05],
        [1.9670e-06, 4.7684e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0821, 0.0432],
        [0.0435, 0.0815],
        [0.0449, 0.0789],
        [0.0749, 0.0473],
        [0.0444, 0.0798],
        [0.0441, 0.0803],
        [0.0798, 0.0444],
        [0.0823, 0.0431],
        [0.0442, 0.0802],
        [0.0825, 0.0430],
        [0.0445, 0.0798],
        [0.0899, 0.0394],
        [0.0435, 0.0816],
        [0.0590, 0.0601],
        [0.0441, 0.0804],
        [0.0962, 0.0368]], device='cuda:0')
 Batch: 0 of common classification Duration: 0:00:00.418929
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.3915e-05],
        [2.0683e-05, 9.1791e-06],
        [4.2319e-06, 8.6367e-05],
        [4.7684e-07, 2.0683e-05],
        [2.6762e-05, 1.8358e-05],
        [3.8743e-06, 6.6459e-05],
        [1.4484e-05, 9.3579e-06],
        [2.0266e-06, 5.3585e-05],
        [1.0371e-05, 6.9737e-06],
        [1.3888e-05, 1.2040e-05],
        [7.7486e-07, 3.2783e-05],
        [1.9789e-05, 8.8811e-06],
        [3.3379e-06, 5.4300e-05],
        [3.0935e-05, 1.5318e-05],
        [1.6093e-06, 2.3842e-07],
        [2.7537e-05, 1.3530e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0859],
        [0.0808, 0.0438],
        [0.0424, 0.0836],
        [0.0414, 0.0856],
        [0.0732, 0.0484],
        [0.0427, 0.0829],
        [0.0742, 0.0477],
        [0.0419, 0.0844],
        [0.0735, 0.0482],
        [0.0691, 0.0512],
        [0.0414, 0.0856],
        [0.0806, 0.0439],
        [0.0429, 0.0826],
        [0.0789, 0.0449],
        [0.0966, 0.0366],
        [0.0791, 0.0448]], device='cuda:0')
 Batch: 1 of common classification Duration: 0:00:00.364720
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6762e-05, 2.9624e-05],
        [3.9339e-06, 5.8949e-05],
        [1.5497e-06, 4.9174e-05],
        [6.5565e-07, 2.9922e-05],
        [3.8147e-06, 5.5432e-05],
        [1.8477e-06, 3.7134e-05],
        [1.3411e-05, 1.6809e-05],
        [1.8835e-05, 1.3769e-05],
        [4.7684e-07, 2.2113e-05],
        [9.4175e-06, 4.1127e-06],
        [1.9670e-06, 2.3842e-07],
        [8.9407e-07, 4.3333e-05],
        [2.3842e-07, 1.8060e-05],
        [4.7684e-07, 2.4199e-05],
        [1.0133e-06, 3.6001e-05],
        [1.3709e-06, 5.0783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0774, 0.0465],
        [0.0513, 0.0702],
        [0.0497, 0.0725],
        [0.0492, 0.0731],
        [0.0514, 0.0700],
        [0.0505, 0.0712],
        [0.0751, 0.0479],
        [0.0859, 0.0419],
        [0.0492, 0.0731],
        [0.0966, 0.0372],
        [0.1176, 0.0306],
        [0.0492, 0.0732],
        [0.0488, 0.0737],
        [0.0491, 0.0733],
        [0.0495, 0.0727],
        [0.0495, 0.0728]], device='cuda:0')
 Batch: 2 of common classification Duration: 0:00:00.367672
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0266e-06, 6.1691e-05],
        [1.1921e-07, 1.3351e-05],
        [2.4915e-05, 6.0201e-05],
        [2.3842e-07, 9.2387e-06],
        [2.0444e-05, 1.3292e-05],
        [2.0027e-05, 1.5259e-05],
        [2.6226e-06, 3.5763e-07],
        [1.7881e-07, 1.3769e-05],
        [1.7285e-05, 5.0068e-06],
        [1.8775e-05, 1.6570e-05],
        [4.7684e-07, 3.2008e-05],
        [8.3447e-07, 3.3617e-05],
        [2.8610e-06, 4.0710e-05],
        [1.1265e-05, 6.3777e-06],
        [2.1756e-05, 1.9491e-05],
        [1.3888e-05, 2.1815e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0440, 0.0811],
        [0.0430, 0.0830],
        [0.0571, 0.0625],
        [0.0437, 0.0817],
        [0.0781, 0.0457],
        [0.0752, 0.0475],
        [0.1027, 0.0347],
        [0.0432, 0.0827],
        [0.0925, 0.0386],
        [0.0725, 0.0492],
        [0.0432, 0.0825],
        [0.0437, 0.0818],
        [0.0455, 0.0784],
        [0.0807, 0.0442],
        [0.0722, 0.0494],
        [0.0629, 0.0568]], device='cuda:0')
 Batch: 3 of common classification Duration: 0:00:00.406011
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5914e-05, 1.7583e-05],
        [4.2260e-05, 3.1650e-05],
        [9.5367e-07, 3.4451e-05],
        [1.2875e-05, 1.2398e-05],
        [1.9848e-05, 1.0133e-05],
        [1.0014e-05, 8.1241e-05],
        [1.1384e-05, 1.0490e-05],
        [6.3777e-06, 3.7551e-06],
        [1.9670e-06, 1.7881e-07],
        [4.5896e-06, 7.8499e-05],
        [9.7156e-06, 4.5300e-06],
        [1.7285e-06, 3.8922e-05],
        [1.4544e-05, 7.9870e-06],
        [3.3975e-06, 6.6400e-05],
        [1.7881e-06, 3.7670e-05],
        [9.8348e-06, 6.1989e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0640, 0.0561],
        [0.0705, 0.0509],
        [0.0409, 0.0878],
        [0.0663, 0.0542],
        [0.0772, 0.0465],
        [0.0444, 0.0808],
        [0.0670, 0.0536],
        [0.0747, 0.0481],
        [0.0996, 0.0361],
        [0.0421, 0.0854],
        [0.0788, 0.0456],
        [0.0415, 0.0865],
        [0.0759, 0.0473],
        [0.0418, 0.0859],
        [0.0417, 0.0862],
        [0.0735, 0.0489]], device='cuda:0')
 Batch: 4 of common classification Duration: 0:00:00.454147
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6928e-05, 9.1791e-06],
        [1.3113e-06, 3.3677e-05],
        [2.2054e-06, 4.0770e-05],
        [7.7486e-07, 4.1664e-05],
        [6.1393e-06, 5.1916e-05],
        [9.1195e-06, 5.9009e-06],
        [3.5763e-07, 2.4199e-05],
        [2.1815e-05, 1.3232e-05],
        [1.5974e-05, 8.4639e-06],
        [1.5259e-05, 6.6161e-06],
        [1.2040e-05, 5.6624e-06],
        [1.3113e-05, 8.6427e-06],
        [3.5763e-07, 1.2636e-05],
        [3.5763e-07, 2.3663e-05],
        [9.5367e-07, 5.1379e-05],
        [3.3379e-06, 6.2525e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0843, 0.0423],
        [0.0458, 0.0780],
        [0.0464, 0.0769],
        [0.0449, 0.0795],
        [0.0490, 0.0729],
        [0.0809, 0.0441],
        [0.0447, 0.0798],
        [0.0821, 0.0435],
        [0.0847, 0.0421],
        [0.0885, 0.0403],
        [0.0870, 0.0410],
        [0.0805, 0.0443],
        [0.0453, 0.0788],
        [0.0447, 0.0798],
        [0.0449, 0.0795],
        [0.0464, 0.0770]], device='cuda:0')
 Batch: 5 of common classification Duration: 0:00:00.433557
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5140e-05, 6.1989e-06],
        [1.6689e-06, 4.9710e-05],
        [1.7881e-07, 1.8477e-05],
        [1.4901e-06, 4.9770e-05],
        [2.3842e-07, 2.0981e-05],
        [1.1921e-06, 2.5630e-05],
        [2.8133e-05, 2.1935e-05],
        [5.3644e-07, 3.1650e-05],
        [1.5795e-05, 9.0003e-06],
        [4.2319e-06, 6.8665e-05],
        [1.3113e-06, 3.7491e-05],
        [1.3709e-06, 1.7881e-07],
        [3.0994e-05, 1.4305e-05],
        [1.3053e-05, 7.2718e-06],
        [1.3709e-05, 1.3888e-05],
        [5.9605e-07, 4.1783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0889, 0.0397],
        [0.0451, 0.0781],
        [0.0441, 0.0799],
        [0.0450, 0.0783],
        [0.0442, 0.0798],
        [0.0457, 0.0772],
        [0.0767, 0.0460],
        [0.0444, 0.0793],
        [0.0826, 0.0427],
        [0.0463, 0.0761],
        [0.0452, 0.0780],
        [0.1059, 0.0333],
        [0.0866, 0.0407],
        [0.0831, 0.0424],
        [0.0718, 0.0491],
        [0.0443, 0.0795]], device='cuda:0')
 Batch: 6 of common classification Duration: 0:00:00.361133
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0398e-06, 4.6790e-05],
        [8.3447e-07, 2.9504e-05],
        [1.8835e-05, 1.4007e-05],
        [3.3736e-05, 4.6134e-05],
        [1.8477e-06, 1.2398e-05],
        [1.7285e-06, 4.6790e-05],
        [8.6427e-06, 5.6624e-06],
        [1.3411e-05, 7.3910e-06],
        [7.7486e-07, 3.3617e-05],
        [1.6987e-05, 7.6890e-06],
        [8.9407e-07, 3.3975e-05],
        [8.5235e-06, 3.5763e-06],
        [2.9802e-07, 3.3915e-05],
        [6.5565e-07, 3.3200e-05],
        [3.0398e-06, 5.1320e-05],
        [1.7881e-07, 1.2755e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0495, 0.0729],
        [0.0479, 0.0754],
        [0.0827, 0.0437],
        [0.0711, 0.0508],
        [0.0530, 0.0681],
        [0.0483, 0.0748],
        [0.0853, 0.0424],
        [0.0888, 0.0407],
        [0.0477, 0.0758],
        [0.0927, 0.0389],
        [0.0478, 0.0756],
        [0.0942, 0.0383],
        [0.0470, 0.0768],
        [0.0475, 0.0760],
        [0.0493, 0.0733],
        [0.0472, 0.0765]], device='cuda:0')
 Batch: 7 of common classification Duration: 0:00:00.342046
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7941e-05, 2.2650e-05],
        [2.3842e-07, 6.3181e-06],
        [1.6570e-05, 8.4043e-06],
        [2.1696e-05, 9.5367e-06],
        [7.7486e-06, 6.8963e-05],
        [1.3113e-05, 7.5698e-06],
        [1.1921e-06, 3.9220e-05],
        [2.1458e-06, 6.2346e-05],
        [2.1875e-05, 1.6630e-05],
        [2.6166e-05, 3.8981e-05],
        [8.3447e-07, 6.3658e-05],
        [1.8835e-05, 1.1981e-05],
        [1.2517e-06, 4.8816e-05],
        [1.4901e-05, 9.5963e-06],
        [1.7047e-05, 1.0312e-05],
        [1.1444e-05, 6.7353e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0640, 0.0566],
        [0.0427, 0.0850],
        [0.0799, 0.0454],
        [0.0824, 0.0440],
        [0.0455, 0.0797],
        [0.0775, 0.0467],
        [0.0424, 0.0856],
        [0.0425, 0.0852],
        [0.0726, 0.0499],
        [0.0615, 0.0590],
        [0.0417, 0.0870],
        [0.0758, 0.0478],
        [0.0422, 0.0859],
        [0.0756, 0.0480],
        [0.0767, 0.0473],
        [0.0772, 0.0470]], device='cuda:0')
 Batch: 8 of common classification Duration: 0:00:00.363269
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8908e-05, 2.1815e-05],
        [2.0146e-05, 1.2696e-05],
        [1.1146e-05, 7.0930e-06],
        [2.9922e-05, 1.6928e-05],
        [4.1723e-07, 3.3438e-05],
        [4.1723e-07, 2.1875e-05],
        [2.7776e-05, 1.6093e-05],
        [2.1815e-05, 6.3181e-05],
        [2.3067e-05, 2.2888e-05],
        [1.1921e-07, 1.2636e-05],
        [3.2783e-06, 5.3644e-07],
        [9.1195e-06, 5.4240e-06],
        [9.0003e-06, 7.6294e-06],
        [1.3709e-06, 3.6359e-05],
        [3.2187e-05, 1.3828e-05],
        [1.7881e-07, 1.8239e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0701, 0.0512],
        [0.0732, 0.0491],
        [0.0730, 0.0492],
        [0.0751, 0.0478],
        [0.0401, 0.0895],
        [0.0404, 0.0889],
        [0.0747, 0.0481],
        [0.0512, 0.0701],
        [0.0655, 0.0548],
        [0.0400, 0.0897],
        [0.0936, 0.0384],
        [0.0742, 0.0484],
        [0.0681, 0.0527],
        [0.0411, 0.0874],
        [0.0798, 0.0450],
        [0.0400, 0.0897]], device='cuda:0')
 Batch: 9 of common classification Duration: 0:00:00.433705
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7107e-05, 6.2585e-06],
        [5.9605e-07, 2.3663e-05],
        [1.4663e-05, 6.7353e-06],
        [5.7220e-06, 8.8692e-05],
        [1.7881e-07, 7.0333e-06],
        [1.7881e-06, 4.2617e-05],
        [9.5367e-07, 2.5690e-05],
        [1.2517e-05, 1.3709e-05],
        [2.3603e-05, 4.2081e-05],
        [5.6624e-06, 7.8499e-05],
        [1.0729e-06, 3.2485e-05],
        [1.0133e-06, 5.1498e-05],
        [1.3530e-05, 8.2254e-06],
        [2.4438e-05, 1.7583e-05],
        [3.1590e-05, 3.6895e-05],
        [8.5831e-06, 5.5850e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0954, 0.0381],
        [0.0470, 0.0774],
        [0.0910, 0.0400],
        [0.0487, 0.0747],
        [0.0470, 0.0774],
        [0.0478, 0.0762],
        [0.0475, 0.0765],
        [0.0739, 0.0492],
        [0.0657, 0.0554],
        [0.0491, 0.0742],
        [0.0474, 0.0768],
        [0.0468, 0.0778],
        [0.0854, 0.0426],
        [0.0821, 0.0443],
        [0.0728, 0.0500],
        [0.0524, 0.0694]], device='cuda:0')
 Batch: 10 of common classification Duration: 0:00:00.368729
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.9624e-05],
        [5.9605e-07, 3.3140e-05],
        [1.0192e-05, 7.9274e-06],
        [1.7881e-07, 1.7405e-05],
        [2.2888e-05, 1.2815e-05],
        [2.8729e-05, 2.0385e-05],
        [1.0371e-05, 4.2915e-06],
        [1.8954e-05, 1.8060e-05],
        [1.4305e-06, 3.9637e-05],
        [1.5378e-05, 1.4663e-05],
        [2.5630e-06, 4.5657e-05],
        [2.0981e-05, 1.3649e-05],
        [2.3186e-05, 1.0967e-05],
        [2.3842e-07, 5.5432e-06],
        [6.4373e-06, 2.6226e-06],
        [1.4365e-05, 6.3181e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0406, 0.0884],
        [0.0410, 0.0875],
        [0.0707, 0.0508],
        [0.0407, 0.0882],
        [0.0765, 0.0469],
        [0.0723, 0.0496],
        [0.0817, 0.0439],
        [0.0672, 0.0534],
        [0.0417, 0.0860],
        [0.0672, 0.0534],
        [0.0425, 0.0845],
        [0.0738, 0.0486],
        [0.0794, 0.0452],
        [0.0420, 0.0855],
        [0.0820, 0.0438],
        [0.0807, 0.0445]], device='cuda:0')
 Batch: 11 of common classification Duration: 0:00:00.570674
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[9.5367e-06, 3.8743e-06],
        [1.6093e-05, 9.5367e-06],
        [1.1742e-05, 9.2983e-06],
        [5.9605e-07, 3.4094e-05],
        [1.7881e-07, 5.1260e-06],
        [2.5034e-06, 4.1604e-05],
        [1.0490e-05, 3.9935e-06],
        [2.8610e-06, 6.9201e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1715, 0.0827],
        [0.1578, 0.0899],
        [0.1472, 0.0964],
        [0.0857, 0.1656],
        [0.0871, 0.1628],
        [0.0892, 0.1591],
        [0.1738, 0.0816],
        [0.0877, 0.1619]], device='cuda:0')
 Batch: 12 of common classification Duration: 0:00:00.132921
acc:  0.96
Time taken to execute the en SA task with prompt type common, variation 6 and batchsize 16: 0:00:05.033216
path ['42', 'en', 'bloomz-mt', 'SA', 'common', 'prompt_id_6']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type rare_synonyms has 7 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06],
        [8.4639e-06, 9.0599e-06]], device='cuda:0') torch.Size([107, 2])
answers_probs just softmax dim 0: tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6047e-05, 1.2994e-05],
        [1.3828e-05, 1.2279e-05],
        [2.0862e-06, 5.6505e-05],
        [1.9968e-05, 8.5831e-06],
        [3.6657e-05, 2.1756e-05],
        [4.5300e-06, 7.1526e-07],
        [8.3447e-07, 3.6359e-05],
        [6.7353e-06, 2.5034e-06],
        [3.5763e-07, 2.0921e-05],
        [2.5272e-05, 1.3769e-05],
        [2.4438e-06, 4.4048e-05],
        [1.1325e-06, 3.6120e-05],
        [2.4438e-06, 4.2975e-05],
        [5.9605e-07, 2.7537e-05],
        [1.0729e-06, 4.0829e-05],
        [2.1696e-05, 2.1696e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0819, 0.0431],
        [0.0714, 0.0494],
        [0.0435, 0.0810],
        [0.0846, 0.0417],
        [0.0787, 0.0448],
        [0.0997, 0.0354],
        [0.0430, 0.0821],
        [0.0871, 0.0405],
        [0.0427, 0.0825],
        [0.0803, 0.0439],
        [0.0443, 0.0796],
        [0.0433, 0.0814],
        [0.0443, 0.0795],
        [0.0429, 0.0822],
        [0.0431, 0.0818],
        [0.0693, 0.0509]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.454654
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.0599e-06, 6.1810e-05],
        [1.2696e-05, 7.2122e-06],
        [2.2173e-05, 1.5974e-05],
        [7.7486e-07, 2.9206e-05],
        [2.6226e-05, 2.0266e-05],
        [2.0266e-05, 2.5272e-05],
        [2.7418e-06, 5.8711e-05],
        [1.7583e-05, 2.2173e-05],
        [3.7432e-05, 2.4140e-05],
        [2.1696e-05, 1.9252e-05],
        [2.3067e-05, 1.2159e-05],
        [2.4736e-05, 1.4305e-05],
        [7.3910e-06, 6.4433e-05],
        [1.1921e-07, 7.6890e-06],
        [1.3113e-06, 3.6359e-05],
        [1.7881e-07, 2.3484e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0488, 0.0747],
        [0.0813, 0.0449],
        [0.0768, 0.0475],
        [0.0441, 0.0827],
        [0.0755, 0.0483],
        [0.0670, 0.0544],
        [0.0449, 0.0812],
        [0.0669, 0.0545],
        [0.0789, 0.0462],
        [0.0730, 0.0500],
        [0.0827, 0.0441],
        [0.0810, 0.0451],
        [0.0476, 0.0766],
        [0.0436, 0.0836],
        [0.0445, 0.0820],
        [0.0433, 0.0843]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.293643
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1815e-05, 1.1742e-05],
        [1.1861e-05, 7.2718e-06],
        [1.0729e-06, 2.8610e-05],
        [1.4961e-05, 8.1062e-06],
        [1.9372e-05, 2.0325e-05],
        [2.0146e-05, 5.0247e-05],
        [1.4603e-05, 7.9274e-06],
        [2.0266e-06, 4.9353e-05],
        [3.1114e-05, 2.4617e-05],
        [1.7881e-07, 1.6034e-05],
        [5.3644e-07, 8.6427e-06],
        [1.4901e-06, 3.0577e-05],
        [3.0696e-05, 1.4484e-05],
        [1.2100e-05, 3.9935e-06],
        [2.7359e-05, 3.6299e-05],
        [1.1325e-05, 5.7220e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0764, 0.0475],
        [0.0741, 0.0489],
        [0.0413, 0.0877],
        [0.0763, 0.0475],
        [0.0650, 0.0558],
        [0.0531, 0.0683],
        [0.0762, 0.0475],
        [0.0415, 0.0874],
        [0.0697, 0.0520],
        [0.0403, 0.0899],
        [0.0423, 0.0858],
        [0.0418, 0.0868],
        [0.0787, 0.0461],
        [0.0846, 0.0429],
        [0.0613, 0.0592],
        [0.0775, 0.0468]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.565245
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8014e-06, 2.3842e-07],
        [7.7486e-07, 3.4809e-05],
        [1.8418e-05, 9.9540e-06],
        [1.1384e-05, 1.0192e-05],
        [1.9550e-05, 1.7107e-05],
        [1.4961e-05, 6.3181e-06],
        [1.9729e-05, 1.3411e-05],
        [1.1921e-06, 3.6299e-05],
        [1.2398e-05, 4.8280e-06],
        [8.9407e-07, 4.7088e-05],
        [3.1590e-06, 5.5969e-05],
        [3.2187e-06, 6.3598e-05],
        [2.5630e-06, 5.9605e-05],
        [1.5616e-05, 6.7949e-05],
        [2.2411e-05, 1.6272e-05],
        [1.9848e-05, 1.9848e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1023, 0.0349],
        [0.0416, 0.0857],
        [0.0779, 0.0458],
        [0.0690, 0.0517],
        [0.0694, 0.0514],
        [0.0822, 0.0434],
        [0.0738, 0.0483],
        [0.0420, 0.0849],
        [0.0836, 0.0426],
        [0.0415, 0.0860],
        [0.0429, 0.0830],
        [0.0427, 0.0835],
        [0.0424, 0.0841],
        [0.0491, 0.0727],
        [0.0726, 0.0491],
        [0.0671, 0.0531]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.452805
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1875e-05, 1.4782e-05],
        [1.7285e-06, 4.9233e-05],
        [1.6332e-05, 1.7405e-05],
        [5.9605e-07, 3.3915e-05],
        [1.3232e-05, 5.7817e-06],
        [7.1526e-07, 2.9385e-05],
        [4.7684e-07, 8.0466e-06],
        [1.4305e-06, 6.4731e-05],
        [8.9407e-07, 3.3498e-05],
        [2.7597e-05, 1.4186e-05],
        [1.8477e-06, 5.4181e-05],
        [1.3947e-05, 8.5235e-06],
        [1.6093e-05, 6.1989e-06],
        [2.9802e-06, 7.0930e-05],
        [1.6034e-05, 1.1384e-05],
        [3.4213e-05, 2.9504e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0788, 0.0455],
        [0.0449, 0.0799],
        [0.0704, 0.0509],
        [0.0441, 0.0812],
        [0.0870, 0.0412],
        [0.0444, 0.0807],
        [0.0459, 0.0781],
        [0.0443, 0.0809],
        [0.0445, 0.0805],
        [0.0839, 0.0427],
        [0.0448, 0.0800],
        [0.0807, 0.0444],
        [0.0893, 0.0402],
        [0.0451, 0.0794],
        [0.0778, 0.0461],
        [0.0742, 0.0483]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.370129
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0027e-05, 1.0133e-05],
        [1.9550e-05, 9.4771e-06],
        [8.4639e-06, 7.7784e-05],
        [1.4901e-06, 4.2021e-05],
        [2.4438e-06, 2.9802e-07],
        [3.8743e-06, 6.6996e-05],
        [2.9802e-07, 2.2411e-05],
        [9.8348e-06, 3.7551e-06],
        [9.8348e-06, 2.6822e-06],
        [4.1723e-07, 4.5717e-05],
        [1.6034e-05, 4.2558e-05],
        [1.5616e-05, 6.3181e-06],
        [2.7537e-05, 3.0458e-05],
        [2.1398e-05, 1.2457e-05],
        [4.0531e-06, 8.1301e-05],
        [1.7226e-05, 1.2994e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0763, 0.0464],
        [0.0770, 0.0460],
        [0.0433, 0.0817],
        [0.0406, 0.0871],
        [0.0957, 0.0370],
        [0.0415, 0.0853],
        [0.0398, 0.0889],
        [0.0809, 0.0437],
        [0.0861, 0.0411],
        [0.0396, 0.0893],
        [0.0516, 0.0685],
        [0.0800, 0.0442],
        [0.0631, 0.0561],
        [0.0739, 0.0479],
        [0.0412, 0.0859],
        [0.0694, 0.0510]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.339948
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.5226e-05],
        [6.0201e-06, 8.2791e-05],
        [4.7684e-07, 2.3127e-05],
        [1.1325e-06, 3.3617e-05],
        [2.0266e-05, 3.6120e-05],
        [1.4305e-06, 1.9670e-05],
        [2.0981e-05, 1.4186e-05],
        [5.9605e-07, 2.4199e-05],
        [1.1921e-06, 4.2677e-05],
        [2.3842e-07, 2.5094e-05],
        [7.9274e-06, 5.8234e-05],
        [1.7285e-06, 5.6326e-05],
        [1.3709e-06, 4.6790e-05],
        [1.3351e-05, 5.8413e-06],
        [3.5763e-07, 1.9014e-05],
        [1.5438e-05, 1.2219e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0523, 0.0708],
        [0.0549, 0.0674],
        [0.0524, 0.0707],
        [0.0530, 0.0698],
        [0.0735, 0.0503],
        [0.0549, 0.0674],
        [0.0932, 0.0397],
        [0.0526, 0.0704],
        [0.0527, 0.0702],
        [0.0518, 0.0714],
        [0.0579, 0.0640],
        [0.0529, 0.0700],
        [0.0528, 0.0701],
        [0.1029, 0.0360],
        [0.0523, 0.0708],
        [0.0897, 0.0413]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.363923
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3649e-05, 9.2983e-06],
        [5.3644e-07, 3.7849e-05],
        [3.8147e-06, 4.7684e-07],
        [1.7226e-05, 1.0610e-05],
        [1.9670e-06, 5.8472e-05],
        [1.4901e-05, 1.2338e-05],
        [4.7684e-07, 2.1279e-05],
        [1.4305e-06, 2.9147e-05],
        [1.7881e-07, 1.3173e-05],
        [1.6093e-06, 6.0558e-05],
        [8.1658e-06, 3.0398e-06],
        [1.7881e-05, 9.7752e-06],
        [2.5153e-05, 4.0889e-05],
        [1.4305e-06, 2.6226e-05],
        [2.2173e-05, 9.8348e-06],
        [1.0431e-05, 7.2122e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0746, 0.0475],
        [0.0417, 0.0849],
        [0.1001, 0.0354],
        [0.0764, 0.0463],
        [0.0425, 0.0833],
        [0.0711, 0.0498],
        [0.0421, 0.0842],
        [0.0431, 0.0821],
        [0.0417, 0.0849],
        [0.0422, 0.0839],
        [0.0853, 0.0415],
        [0.0786, 0.0451],
        [0.0603, 0.0588],
        [0.0434, 0.0817],
        [0.0823, 0.0430],
        [0.0744, 0.0476]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.413218
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 3.3855e-05],
        [1.0729e-06, 4.6968e-05],
        [2.0266e-06, 4.1604e-05],
        [5.9605e-07, 3.4690e-05],
        [8.9407e-07, 4.0889e-05],
        [2.0325e-05, 1.9372e-05],
        [4.1723e-07, 2.7180e-05],
        [6.5565e-07, 3.2485e-05],
        [5.3048e-06, 2.0862e-06],
        [1.1921e-05, 8.2850e-06],
        [1.1921e-06, 3.0756e-05],
        [2.6822e-06, 6.7472e-05],
        [1.4901e-05, 9.1195e-06],
        [1.7881e-07, 2.0027e-05],
        [4.1723e-07, 1.2934e-05],
        [2.1994e-05, 1.0073e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0496, 0.0728],
        [0.0495, 0.0729],
        [0.0507, 0.0712],
        [0.0492, 0.0733],
        [0.0495, 0.0730],
        [0.0808, 0.0447],
        [0.0492, 0.0735],
        [0.0494, 0.0731],
        [0.0992, 0.0364],
        [0.0873, 0.0414],
        [0.0503, 0.0719],
        [0.0503, 0.0718],
        [0.0900, 0.0401],
        [0.0488, 0.0739],
        [0.0500, 0.0723],
        [0.0961, 0.0376]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.493640
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4676e-05, 2.0146e-05],
        [5.9605e-07, 3.7491e-05],
        [1.4067e-05, 6.3181e-06],
        [2.3186e-05, 3.2902e-05],
        [1.3113e-06, 7.7546e-05],
        [2.0862e-06, 5.3346e-05],
        [1.4484e-05, 6.6757e-06],
        [1.5080e-05, 8.1062e-06],
        [1.9670e-06, 4.4167e-05],
        [3.3975e-06, 5.2750e-05],
        [7.1526e-07, 2.5511e-05],
        [1.7345e-05, 1.0133e-05],
        [3.4571e-05, 7.9811e-05],
        [4.7684e-06, 8.9407e-07],
        [1.6332e-05, 1.7345e-05],
        [1.6510e-05, 1.1086e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0712, 0.0504],
        [0.0417, 0.0861],
        [0.0819, 0.0439],
        [0.0621, 0.0578],
        [0.0418, 0.0860],
        [0.0427, 0.0842],
        [0.0815, 0.0441],
        [0.0787, 0.0456],
        [0.0429, 0.0838],
        [0.0436, 0.0823],
        [0.0422, 0.0851],
        [0.0772, 0.0465],
        [0.0556, 0.0646],
        [0.0954, 0.0377],
        [0.0667, 0.0538],
        [0.0747, 0.0481]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.426845
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1444e-05, 7.0930e-06],
        [8.9407e-07, 3.1114e-05],
        [1.0669e-05, 6.6161e-06],
        [1.4544e-05, 2.5332e-05],
        [2.0623e-05, 9.5367e-06],
        [5.3644e-07, 1.6391e-05],
        [6.3777e-06, 1.0079e-04],
        [7.1526e-07, 3.1710e-05],
        [1.6034e-05, 1.2636e-05],
        [1.5497e-06, 5.1618e-05],
        [1.8954e-05, 1.5378e-05],
        [2.9802e-07, 2.3365e-05],
        [1.9133e-05, 7.0333e-06],
        [1.5140e-05, 1.7166e-05],
        [1.1444e-05, 9.0599e-06],
        [5.3644e-07, 3.3557e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0798, 0.0453],
        [0.0442, 0.0817],
        [0.0798, 0.0453],
        [0.0620, 0.0583],
        [0.0853, 0.0424],
        [0.0444, 0.0813],
        [0.0457, 0.0791],
        [0.0440, 0.0821],
        [0.0753, 0.0480],
        [0.0443, 0.0816],
        [0.0747, 0.0483],
        [0.0436, 0.0829],
        [0.0894, 0.0404],
        [0.0688, 0.0526],
        [0.0752, 0.0481],
        [0.0437, 0.0827]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.436251
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4901e-05, 7.8678e-06],
        [9.5367e-07, 3.2187e-05],
        [2.9743e-05, 1.3947e-05],
        [3.8743e-06, 5.2273e-05],
        [3.3379e-06, 4.1723e-07],
        [6.8545e-06, 7.1466e-05],
        [1.8179e-05, 1.0192e-05],
        [2.0266e-06, 3.6895e-05],
        [3.1590e-06, 4.9293e-05],
        [7.0333e-06, 3.9935e-06],
        [1.6928e-05, 1.2875e-05],
        [1.4424e-05, 1.4782e-05],
        [2.9802e-07, 2.7061e-05],
        [3.4571e-06, 7.1645e-05],
        [5.3644e-07, 3.1352e-05],
        [4.4107e-06, 6.8486e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0838, 0.0424],
        [0.0448, 0.0793],
        [0.0860, 0.0413],
        [0.0466, 0.0762],
        [0.1059, 0.0336],
        [0.0475, 0.0748],
        [0.0826, 0.0430],
        [0.0459, 0.0775],
        [0.0462, 0.0769],
        [0.0824, 0.0431],
        [0.0768, 0.0463],
        [0.0713, 0.0498],
        [0.0440, 0.0807],
        [0.0456, 0.0780],
        [0.0443, 0.0803],
        [0.0462, 0.0768]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.426848
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.6359e-06, 7.2718e-05],
        [1.8477e-06, 4.1783e-05],
        [2.7418e-06, 3.5763e-07],
        [1.7345e-05, 7.5102e-06],
        [9.4175e-06, 5.3108e-05],
        [2.2948e-05, 1.8477e-05],
        [1.3709e-06, 3.8147e-05],
        [1.6868e-05, 4.0531e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0826, 0.1682],
        [0.0821, 0.1691],
        [0.1907, 0.0728],
        [0.1582, 0.0878],
        [0.0915, 0.1517],
        [0.1370, 0.1014],
        [0.0815, 0.1704],
        [0.1763, 0.0788]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.211331
acc:  0.96
Time taken to execute the en SA task with prompt type rare_synonyms, variation 0 and batchsize 16: 0:00:05.263870
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06],
        [9.2983e-06, 9.6560e-06]], device='cuda:0') torch.Size([107, 2])
answers_probs just softmax dim 0: tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
tensor([[0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093],
        [0.0093, 0.0093]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-06, 6.7353e-05],
        [2.1696e-05, 1.3053e-05],
        [1.3709e-06, 3.1352e-05],
        [3.3975e-06, 5.9605e-07],
        [4.7326e-05, 6.4194e-05],
        [2.7537e-05, 1.7226e-05],
        [8.9407e-07, 4.4465e-05],
        [6.7949e-06, 8.1897e-05],
        [1.9431e-05, 1.5736e-05],
        [3.1114e-05, 2.4438e-05],
        [3.6418e-05, 1.6451e-05],
        [8.9407e-07, 3.2425e-05],
        [7.7486e-07, 3.1948e-05],
        [7.1526e-07, 5.8353e-05],
        [2.0146e-05, 9.6560e-06],
        [4.1604e-05, 2.1219e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0426, 0.0835],
        [0.0771, 0.0462],
        [0.0431, 0.0826],
        [0.0967, 0.0368],
        [0.0631, 0.0564],
        [0.0764, 0.0466],
        [0.0421, 0.0845],
        [0.0446, 0.0798],
        [0.0718, 0.0496],
        [0.0723, 0.0492],
        [0.0823, 0.0433],
        [0.0424, 0.0839],
        [0.0423, 0.0842],
        [0.0418, 0.0851],
        [0.0812, 0.0438],
        [0.0801, 0.0444]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.376482
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.3259e-05, 3.1948e-05],
        [3.3140e-05, 1.4722e-05],
        [2.4438e-06, 5.0604e-05],
        [1.1802e-05, 7.0333e-06],
        [8.3447e-07, 4.6492e-05],
        [1.4544e-05, 8.2850e-06],
        [2.8968e-05, 1.4722e-05],
        [3.9935e-06, 1.1921e-06],
        [9.5367e-07, 5.7280e-05],
        [3.5763e-07, 2.4140e-05],
        [1.0729e-06, 4.3631e-05],
        [1.7881e-07, 1.9372e-05],
        [1.0729e-06, 3.5644e-05],
        [1.5676e-05, 1.7107e-05],
        [2.1696e-05, 1.5855e-05],
        [1.9789e-05, 1.1623e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0695, 0.0513],
        [0.0834, 0.0428],
        [0.0437, 0.0816],
        [0.0781, 0.0457],
        [0.0425, 0.0840],
        [0.0789, 0.0452],
        [0.0810, 0.0440],
        [0.0902, 0.0396],
        [0.0424, 0.0841],
        [0.0424, 0.0842],
        [0.0428, 0.0834],
        [0.0421, 0.0847],
        [0.0430, 0.0830],
        [0.0673, 0.0530],
        [0.0744, 0.0480],
        [0.0784, 0.0455]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.410093
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-06, 4.7684e-05],
        [1.8060e-05, 8.3447e-06],
        [2.8610e-06, 8.2493e-05],
        [1.7881e-06, 4.5896e-05],
        [1.9312e-05, 1.1623e-05],
        [3.2187e-05, 5.7340e-05],
        [8.3447e-07, 4.1425e-05],
        [4.1723e-07, 7.6294e-06],
        [1.0252e-05, 7.0095e-05],
        [5.4240e-06, 7.5698e-05],
        [3.1412e-05, 1.8895e-05],
        [5.9605e-07, 3.3677e-05],
        [1.2517e-06, 4.9293e-05],
        [1.6332e-05, 1.4186e-05],
        [1.8477e-06, 8.9407e-05],
        [1.4901e-06, 4.3988e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0504, 0.0727],
        [0.0975, 0.0376],
        [0.0509, 0.0721],
        [0.0511, 0.0718],
        [0.0918, 0.0399],
        [0.0705, 0.0520],
        [0.0502, 0.0731],
        [0.0518, 0.0708],
        [0.0559, 0.0656],
        [0.0526, 0.0697],
        [0.0919, 0.0399],
        [0.0501, 0.0732],
        [0.0504, 0.0727],
        [0.0840, 0.0436],
        [0.0502, 0.0730],
        [0.0508, 0.0721]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.566425
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5438e-05, 1.7881e-05],
        [1.6630e-05, 9.8944e-06],
        [6.7949e-06, 9.1910e-05],
        [2.1458e-05, 7.9274e-06],
        [7.1526e-07, 3.0279e-05],
        [1.4961e-05, 7.8082e-06],
        [4.7684e-07, 1.6570e-05],
        [1.6332e-05, 1.9252e-05],
        [2.9802e-07, 2.2411e-05],
        [4.8876e-06, 1.0705e-04],
        [1.3411e-05, 5.6624e-06],
        [4.7684e-07, 8.8811e-06],
        [3.9339e-06, 6.3419e-05],
        [3.3855e-05, 2.6762e-05],
        [2.1875e-05, 1.0967e-05],
        [1.2875e-05, 1.5259e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0672, 0.0536],
        [0.0792, 0.0455],
        [0.0453, 0.0796],
        [0.0878, 0.0411],
        [0.0433, 0.0833],
        [0.0816, 0.0442],
        [0.0435, 0.0829],
        [0.0669, 0.0539],
        [0.0429, 0.0841],
        [0.0442, 0.0816],
        [0.0855, 0.0422],
        [0.0445, 0.0810],
        [0.0449, 0.0804],
        [0.0740, 0.0488],
        [0.0824, 0.0438],
        [0.0669, 0.0539]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.374240
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0339e-05, 5.1260e-05],
        [1.7226e-05, 1.1861e-05],
        [2.4855e-05, 1.5080e-05],
        [1.2517e-06, 4.4107e-05],
        [2.2531e-05, 1.9431e-05],
        [5.8413e-06, 5.8889e-05],
        [1.8120e-05, 1.0490e-05],
        [1.0788e-05, 4.2319e-06],
        [1.5497e-06, 4.8995e-05],
        [2.0862e-05, 1.2457e-05],
        [1.0908e-05, 7.6294e-06],
        [1.6987e-05, 7.5102e-06],
        [1.3709e-06, 5.1618e-05],
        [2.8014e-06, 8.5652e-05],
        [4.3511e-06, 1.7881e-06],
        [2.9206e-06, 5.8711e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0586, 0.0615],
        [0.0731, 0.0493],
        [0.0753, 0.0478],
        [0.0416, 0.0867],
        [0.0692, 0.0521],
        [0.0443, 0.0815],
        [0.0762, 0.0473],
        [0.0829, 0.0435],
        [0.0417, 0.0865],
        [0.0756, 0.0477],
        [0.0728, 0.0495],
        [0.0809, 0.0446],
        [0.0415, 0.0869],
        [0.0417, 0.0864],
        [0.0821, 0.0439],
        [0.0424, 0.0850]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.492508
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 4.7982e-05],
        [1.6212e-05, 1.8954e-05],
        [2.4915e-05, 2.1160e-05],
        [1.3709e-06, 5.3823e-05],
        [1.4901e-06, 5.6088e-05],
        [6.0797e-06, 8.0347e-05],
        [3.5167e-06, 8.0228e-05],
        [2.5332e-05, 1.9133e-05],
        [1.3053e-05, 1.1504e-05],
        [1.7405e-05, 8.6427e-06],
        [4.0352e-05, 4.8995e-05],
        [2.2233e-05, 1.1027e-05],
        [3.9339e-06, 4.7684e-07],
        [3.5763e-07, 2.0146e-05],
        [1.6749e-05, 1.0252e-05],
        [1.1325e-06, 4.5717e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0833],
        [0.0667, 0.0536],
        [0.0722, 0.0495],
        [0.0431, 0.0830],
        [0.0432, 0.0829],
        [0.0451, 0.0793],
        [0.0439, 0.0816],
        [0.0744, 0.0481],
        [0.0716, 0.0500],
        [0.0821, 0.0436],
        [0.0661, 0.0542],
        [0.0821, 0.0436],
        [0.1026, 0.0349],
        [0.0428, 0.0836],
        [0.0782, 0.0457],
        [0.0431, 0.0830]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.366160
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5318e-05, 1.0848e-05],
        [2.3544e-05, 2.8849e-05],
        [2.9802e-06, 4.0412e-05],
        [1.5557e-05, 7.8321e-05],
        [1.6689e-06, 7.2956e-05],
        [1.1742e-05, 8.4639e-06],
        [1.0788e-05, 6.7949e-06],
        [5.0664e-06, 8.3447e-07],
        [1.6689e-06, 6.3956e-05],
        [2.3842e-07, 2.6822e-05],
        [8.3447e-06, 5.3048e-06],
        [1.1027e-05, 4.7088e-06],
        [3.5763e-07, 4.1127e-05],
        [1.3113e-06, 3.5286e-05],
        [2.4676e-05, 2.1100e-05],
        [1.8001e-05, 8.4639e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0740, 0.0483],
        [0.0646, 0.0553],
        [0.0442, 0.0810],
        [0.0487, 0.0735],
        [0.0422, 0.0848],
        [0.0737, 0.0485],
        [0.0761, 0.0470],
        [0.0973, 0.0368],
        [0.0423, 0.0846],
        [0.0416, 0.0860],
        [0.0760, 0.0471],
        [0.0831, 0.0430],
        [0.0416, 0.0860],
        [0.0427, 0.0837],
        [0.0707, 0.0506],
        [0.0814, 0.0439]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.451696
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8716e-05, 1.2636e-05],
        [1.8656e-05, 1.9729e-05],
        [5.5432e-06, 7.5102e-05],
        [3.2961e-05, 2.2113e-05],
        [3.2008e-05, 2.3782e-05],
        [3.4690e-05, 4.3511e-05],
        [5.3644e-07, 3.7014e-05],
        [1.3709e-06, 4.6194e-05],
        [2.6762e-05, 1.6868e-05],
        [4.3750e-05, 2.0504e-05],
        [1.9670e-06, 6.1393e-05],
        [1.3113e-06, 5.4300e-05],
        [4.1723e-07, 2.9564e-05],
        [3.4571e-06, 6.5565e-07],
        [3.6359e-06, 6.4850e-05],
        [7.7486e-07, 4.5836e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0790, 0.0453],
        [0.0707, 0.0506],
        [0.0466, 0.0768],
        [0.0791, 0.0452],
        [0.0772, 0.0464],
        [0.0678, 0.0528],
        [0.0441, 0.0811],
        [0.0448, 0.0799],
        [0.0803, 0.0446],
        [0.0859, 0.0416],
        [0.0449, 0.0798],
        [0.0445, 0.0804],
        [0.0441, 0.0811],
        [0.1008, 0.0355],
        [0.0459, 0.0780],
        [0.0442, 0.0809]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.340747
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9339e-06, 4.7684e-07],
        [1.1921e-06, 4.4227e-05],
        [2.8729e-05, 5.0783e-05],
        [1.8775e-05, 9.8944e-06],
        [2.3782e-05, 1.7524e-05],
        [1.2994e-05, 9.2506e-05],
        [2.6405e-05, 2.3663e-05],
        [1.8954e-05, 8.7619e-06],
        [5.0068e-06, 8.3625e-05],
        [2.4438e-05, 5.2154e-05],
        [2.3782e-05, 1.6868e-05],
        [1.0669e-05, 9.0599e-06],
        [3.1590e-06, 5.4300e-05],
        [1.4901e-06, 5.3883e-05],
        [6.5565e-07, 3.5405e-05],
        [3.2425e-05, 1.7524e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1001, 0.0360],
        [0.0421, 0.0856],
        [0.0589, 0.0612],
        [0.0790, 0.0457],
        [0.0730, 0.0494],
        [0.0464, 0.0777],
        [0.0695, 0.0519],
        [0.0813, 0.0444],
        [0.0434, 0.0831],
        [0.0564, 0.0639],
        [0.0736, 0.0490],
        [0.0705, 0.0512],
        [0.0433, 0.0832],
        [0.0421, 0.0856],
        [0.0418, 0.0863],
        [0.0785, 0.0459]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.363387
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 5.5730e-05],
        [5.9605e-07, 3.3200e-05],
        [2.0504e-05, 8.7023e-06],
        [2.9325e-05, 1.4484e-05],
        [1.6272e-05, 8.3923e-05],
        [1.9789e-05, 1.2994e-05],
        [4.3154e-05, 2.8312e-05],
        [1.4842e-05, 6.2466e-05],
        [3.1590e-06, 2.9802e-07],
        [4.7684e-07, 3.6120e-05],
        [2.6226e-06, 4.0412e-05],
        [6.0201e-06, 1.0186e-04],
        [5.1260e-06, 8.1599e-05],
        [1.2517e-06, 3.4332e-05],
        [2.8610e-06, 7.1704e-05],
        [2.8729e-05, 1.5616e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0792],
        [0.0448, 0.0792],
        [0.0888, 0.0399],
        [0.0859, 0.0413],
        [0.0518, 0.0685],
        [0.0805, 0.0441],
        [0.0805, 0.0441],
        [0.0533, 0.0665],
        [0.1097, 0.0323],
        [0.0446, 0.0795],
        [0.0468, 0.0758],
        [0.0465, 0.0762],
        [0.0467, 0.0760],
        [0.0456, 0.0778],
        [0.0457, 0.0775],
        [0.0841, 0.0422]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.451502
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1040e-05, 1.4246e-05],
        [1.5676e-05, 7.9274e-06],
        [1.5497e-06, 5.3227e-05],
        [2.3246e-06, 7.4863e-05],
        [5.0664e-06, 1.0133e-06],
        [1.0550e-05, 6.8545e-06],
        [2.3842e-07, 1.7405e-05],
        [1.9252e-05, 8.7023e-06],
        [1.8537e-05, 1.0669e-05],
        [2.0862e-06, 7.6056e-05],
        [2.7418e-06, 3.9399e-05],
        [4.6492e-06, 6.3896e-05],
        [1.5497e-06, 4.1842e-05],
        [2.1398e-05, 1.3292e-05],
        [2.1040e-05, 1.0788e-05],
        [3.1292e-05, 2.3246e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0738, 0.0482],
        [0.0789, 0.0450],
        [0.0418, 0.0850],
        [0.0419, 0.0848],
        [0.0935, 0.0380],
        [0.0745, 0.0477],
        [0.0412, 0.0863],
        [0.0809, 0.0439],
        [0.0767, 0.0464],
        [0.0417, 0.0851],
        [0.0434, 0.0819],
        [0.0435, 0.0817],
        [0.0421, 0.0844],
        [0.0753, 0.0472],
        [0.0787, 0.0451],
        [0.0721, 0.0493]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.426893
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6464e-05, 1.1563e-05],
        [3.6657e-05, 2.7657e-05],
        [2.4498e-05, 2.0325e-05],
        [2.5749e-05, 1.3888e-05],
        [1.9193e-05, 1.3590e-05],
        [8.9407e-07, 4.3273e-05],
        [5.9605e-08, 6.2585e-06],
        [3.5048e-05, 2.2590e-05],
        [3.6359e-06, 5.5373e-05],
        [3.4571e-06, 8.6188e-05],
        [1.5676e-05, 2.5094e-05],
        [3.6955e-06, 7.7069e-05],
        [3.0398e-06, 6.9320e-05],
        [1.2219e-05, 1.1325e-05],
        [8.3447e-07, 3.7134e-05],
        [1.1325e-06, 4.3392e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0893, 0.0406],
        [0.0787, 0.0460],
        [0.0769, 0.0471],
        [0.0852, 0.0425],
        [0.0799, 0.0453],
        [0.0454, 0.0798],
        [0.0449, 0.0807],
        [0.0818, 0.0443],
        [0.0473, 0.0765],
        [0.0463, 0.0783],
        [0.0654, 0.0554],
        [0.0466, 0.0778],
        [0.0464, 0.0781],
        [0.0748, 0.0485],
        [0.0455, 0.0796],
        [0.0457, 0.0794]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.337725
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.3842e-07, 2.5392e-05],
        [1.1921e-07, 1.9073e-05],
        [2.9922e-05, 2.3842e-05],
        [4.4107e-06, 6.1750e-05],
        [4.7684e-06, 8.0407e-05],
        [4.0531e-06, 7.9811e-05],
        [1.7107e-05, 6.3181e-06],
        [6.5565e-07, 1.7047e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1004, 0.1449],
        [0.1001, 0.1454],
        [0.1736, 0.0838],
        [0.1064, 0.1368],
        [0.1052, 0.1383],
        [0.1044, 0.1394],
        [0.2065, 0.0705],
        [0.1033, 0.1409]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.232080
acc:  0.96
Time taken to execute the en SA task with prompt type rare_synonyms, variation 1 and batchsize 16: 0:00:05.205142
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06],
        [7.4506e-06, 7.1526e-06]], device='cuda:0') torch.Size([132, 2])
answers_probs just softmax dim 0: tensor([[0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076]], device='cuda:0')
tensor([[0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076],
        [0.0076, 0.0076]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.7684e-07, 3.6001e-05],
        [1.3947e-05, 1.0252e-05],
        [4.1723e-07, 2.2531e-05],
        [1.4722e-05, 1.1921e-05],
        [4.7684e-07, 3.1650e-05],
        [1.5259e-05, 1.4126e-05],
        [1.7881e-07, 1.9312e-05],
        [5.3644e-07, 3.0696e-05],
        [7.1526e-07, 3.5703e-05],
        [5.3644e-07, 3.7193e-05],
        [3.5763e-06, 1.0133e-06],
        [1.0133e-06, 3.7968e-05],
        [3.5763e-07, 2.4021e-05],
        [1.4722e-05, 6.8545e-06],
        [4.2439e-05, 5.1200e-05],
        [2.9802e-07, 4.0412e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0481, 0.0749],
        [0.0844, 0.0426],
        [0.0483, 0.0745],
        [0.0824, 0.0437],
        [0.0481, 0.0748],
        [0.0797, 0.0451],
        [0.0479, 0.0752],
        [0.0482, 0.0746],
        [0.0484, 0.0744],
        [0.0481, 0.0748],
        [0.1034, 0.0348],
        [0.0487, 0.0739],
        [0.0481, 0.0748],
        [0.0938, 0.0384],
        [0.0746, 0.0482],
        [0.0478, 0.0753]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.495968
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8491e-05, 1.6868e-05],
        [2.3842e-07, 1.9073e-05],
        [5.1260e-06, 8.7619e-05],
        [2.7537e-05, 5.6028e-05],
        [2.0325e-05, 1.8120e-05],
        [1.3649e-05, 9.0599e-06],
        [2.8253e-05, 1.7405e-05],
        [1.0967e-05, 7.0930e-06],
        [8.3447e-07, 3.6120e-05],
        [2.0862e-06, 5.8115e-05],
        [2.3842e-07, 5.7817e-06],
        [2.6584e-05, 2.0206e-05],
        [1.1384e-05, 5.9605e-06],
        [5.9605e-08, 1.1444e-05],
        [1.4901e-06, 3.7491e-05],
        [2.2113e-05, 2.3723e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0815, 0.0446],
        [0.0440, 0.0825],
        [0.0459, 0.0790],
        [0.0604, 0.0601],
        [0.0738, 0.0492],
        [0.0793, 0.0458],
        [0.0807, 0.0450],
        [0.0798, 0.0455],
        [0.0445, 0.0817],
        [0.0450, 0.0807],
        [0.0452, 0.0803],
        [0.0767, 0.0473],
        [0.0838, 0.0433],
        [0.0437, 0.0831],
        [0.0452, 0.0804],
        [0.0704, 0.0516]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.576927
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6928e-05, 1.2755e-05],
        [2.4855e-05, 5.6922e-05],
        [3.3438e-05, 2.7955e-05],
        [1.5736e-05, 7.8678e-06],
        [6.9141e-06, 4.2319e-06],
        [1.0669e-05, 7.0930e-06],
        [2.6464e-05, 1.5080e-05],
        [2.3246e-06, 2.3842e-07],
        [2.9802e-07, 2.7835e-05],
        [2.3544e-05, 1.5438e-05],
        [1.6153e-05, 5.6028e-06],
        [1.4305e-06, 5.0843e-05],
        [2.2113e-05, 2.6882e-05],
        [2.5272e-05, 3.7670e-05],
        [1.4305e-06, 6.1989e-05],
        [1.9968e-05, 1.9789e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0666, 0.0549],
        [0.0510, 0.0717],
        [0.0649, 0.0564],
        [0.0733, 0.0499],
        [0.0700, 0.0523],
        [0.0687, 0.0533],
        [0.0712, 0.0514],
        [0.0933, 0.0392],
        [0.0381, 0.0962],
        [0.0689, 0.0531],
        [0.0791, 0.0463],
        [0.0387, 0.0946],
        [0.0591, 0.0619],
        [0.0563, 0.0650],
        [0.0385, 0.0950],
        [0.0622, 0.0588]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.406526
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.2948e-05],
        [1.5259e-05, 7.8678e-06],
        [1.0908e-05, 1.0967e-05],
        [1.2815e-05, 5.1260e-06],
        [9.0599e-06, 3.6955e-06],
        [9.1791e-06, 8.4579e-05],
        [1.6093e-06, 4.8757e-05],
        [2.4736e-05, 5.7042e-05],
        [1.3113e-06, 4.5121e-05],
        [1.5080e-05, 1.0431e-05],
        [1.6689e-06, 2.9206e-05],
        [1.3709e-06, 4.9651e-05],
        [9.5963e-06, 5.7817e-06],
        [2.0862e-06, 4.3869e-05],
        [3.9935e-06, 4.7684e-07],
        [9.2983e-06, 7.9870e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0424, 0.0841],
        [0.0801, 0.0445],
        [0.0682, 0.0522],
        [0.0846, 0.0421],
        [0.0842, 0.0423],
        [0.0457, 0.0780],
        [0.0427, 0.0833],
        [0.0560, 0.0635],
        [0.0426, 0.0836],
        [0.0748, 0.0476],
        [0.0437, 0.0815],
        [0.0425, 0.0837],
        [0.0773, 0.0461],
        [0.0433, 0.0822],
        [0.1011, 0.0352],
        [0.0709, 0.0502]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.456251
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.1981e-05],
        [8.9407e-07, 3.2604e-05],
        [1.2577e-05, 6.5565e-06],
        [1.0133e-06, 4.9233e-05],
        [5.3644e-07, 4.2319e-05],
        [5.3644e-07, 2.2888e-05],
        [1.0729e-06, 5.1677e-05],
        [9.9540e-06, 1.3053e-05],
        [5.3644e-07, 2.7955e-05],
        [2.4259e-05, 1.6451e-05],
        [6.5565e-07, 9.1195e-06],
        [2.2650e-06, 6.8009e-05],
        [2.2590e-05, 1.8120e-05],
        [1.4722e-05, 1.5676e-05],
        [1.6034e-05, 1.1742e-05],
        [4.1127e-06, 8.1003e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0488, 0.0750],
        [0.0496, 0.0738],
        [0.0931, 0.0393],
        [0.0493, 0.0743],
        [0.0489, 0.0748],
        [0.0494, 0.0741],
        [0.0493, 0.0743],
        [0.0744, 0.0492],
        [0.0492, 0.0744],
        [0.0876, 0.0418],
        [0.0516, 0.0709],
        [0.0499, 0.0734],
        [0.0841, 0.0435],
        [0.0783, 0.0467],
        [0.0860, 0.0425],
        [0.0507, 0.0722]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.323135
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3113e-06, 4.4465e-05],
        [1.3709e-05, 5.1856e-06],
        [3.0458e-05, 3.2723e-05],
        [1.8477e-06, 5.9605e-05],
        [6.7353e-06, 4.2319e-06],
        [1.7881e-07, 2.2769e-05],
        [2.3246e-06, 4.2617e-05],
        [5.8413e-06, 5.0724e-05],
        [1.7881e-07, 1.8835e-05],
        [4.1723e-07, 2.5153e-05],
        [1.0908e-05, 4.8280e-06],
        [2.9206e-06, 2.3842e-07],
        [2.3723e-05, 1.2398e-05],
        [2.3842e-07, 3.1114e-05],
        [1.7464e-05, 8.5831e-06],
        [7.8678e-06, 6.6161e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0430, 0.0816],
        [0.0864, 0.0407],
        [0.0677, 0.0519],
        [0.0431, 0.0815],
        [0.0773, 0.0455],
        [0.0421, 0.0834],
        [0.0440, 0.0798],
        [0.0463, 0.0758],
        [0.0422, 0.0832],
        [0.0425, 0.0827],
        [0.0836, 0.0420],
        [0.1054, 0.0333],
        [0.0806, 0.0436],
        [0.0421, 0.0834],
        [0.0817, 0.0430],
        [0.0720, 0.0488]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.406545
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8074e-05, 4.1783e-05],
        [1.9550e-05, 1.7405e-05],
        [2.0504e-05, 1.4305e-05],
        [1.0133e-06, 4.7863e-05],
        [5.9605e-08, 4.3511e-06],
        [1.5378e-05, 1.1742e-05],
        [2.0385e-05, 1.6928e-05],
        [3.1888e-05, 3.0875e-05],
        [1.6093e-06, 3.6716e-05],
        [1.2219e-05, 1.1921e-05],
        [1.4961e-05, 6.8545e-06],
        [5.0068e-06, 6.4790e-05],
        [4.1723e-06, 6.3837e-05],
        [1.7345e-05, 1.5557e-05],
        [3.0994e-06, 5.2810e-05],
        [1.2279e-05, 9.1791e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0635, 0.0579],
        [0.0721, 0.0509],
        [0.0766, 0.0480],
        [0.0434, 0.0847],
        [0.0431, 0.0853],
        [0.0749, 0.0490],
        [0.0734, 0.0501],
        [0.0706, 0.0520],
        [0.0443, 0.0829],
        [0.0705, 0.0521],
        [0.0844, 0.0436],
        [0.0457, 0.0805],
        [0.0452, 0.0813],
        [0.0720, 0.0510],
        [0.0449, 0.0818],
        [0.0753, 0.0488]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.259012
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 6.3121e-05],
        [2.7478e-05, 1.7583e-05],
        [2.1040e-05, 1.3769e-05],
        [1.6391e-05, 2.2709e-05],
        [1.9670e-06, 2.3842e-07],
        [1.1384e-05, 8.1658e-06],
        [3.2783e-06, 7.8857e-05],
        [1.1921e-07, 1.2398e-05],
        [2.6226e-05, 1.5497e-05],
        [4.1723e-07, 2.5511e-05],
        [2.9802e-06, 5.0485e-05],
        [9.5367e-07, 4.7326e-05],
        [1.5497e-05, 1.0073e-05],
        [2.1458e-06, 4.0174e-05],
        [1.3113e-06, 3.3498e-05],
        [8.7619e-06, 5.8413e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0817],
        [0.0793, 0.0449],
        [0.0789, 0.0451],
        [0.0656, 0.0543],
        [0.1052, 0.0339],
        [0.0772, 0.0461],
        [0.0449, 0.0794],
        [0.0435, 0.0818],
        [0.0808, 0.0441],
        [0.0438, 0.0813],
        [0.0456, 0.0781],
        [0.0440, 0.0810],
        [0.0790, 0.0451],
        [0.0454, 0.0785],
        [0.0448, 0.0795],
        [0.0786, 0.0453]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.369239
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0339e-05, 2.3603e-05],
        [1.6689e-06, 5.7757e-05],
        [1.0133e-06, 2.9683e-05],
        [4.1723e-07, 2.4080e-05],
        [2.3961e-05, 1.2994e-05],
        [1.7881e-06, 6.1691e-05],
        [4.1723e-06, 8.6963e-05],
        [1.4305e-06, 4.3094e-05],
        [2.1994e-05, 1.9372e-05],
        [2.8849e-05, 5.8353e-05],
        [2.0266e-06, 1.7881e-07],
        [1.6153e-05, 1.6034e-05],
        [9.7752e-06, 6.1989e-06],
        [1.6451e-05, 6.6161e-06],
        [1.7881e-07, 1.6451e-05],
        [2.6226e-06, 4.6670e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0761, 0.0467],
        [0.0446, 0.0798],
        [0.0448, 0.0794],
        [0.0441, 0.0806],
        [0.0829, 0.0429],
        [0.0446, 0.0797],
        [0.0454, 0.0784],
        [0.0448, 0.0794],
        [0.0738, 0.0482],
        [0.0604, 0.0589],
        [0.1087, 0.0327],
        [0.0716, 0.0497],
        [0.0800, 0.0445],
        [0.0885, 0.0402],
        [0.0438, 0.0811],
        [0.0457, 0.0778]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.414442
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2398e-05, 1.6212e-05],
        [1.6451e-05, 1.4603e-05],
        [7.1526e-07, 2.2948e-05],
        [1.0908e-05, 5.7817e-06],
        [1.6689e-06, 4.6313e-05],
        [8.3447e-07, 4.6194e-05],
        [1.0610e-05, 4.7684e-06],
        [4.6492e-06, 7.5638e-05],
        [4.7684e-07, 1.2219e-05],
        [2.6822e-06, 4.6670e-05],
        [2.9802e-07, 1.1802e-05],
        [4.1127e-06, 5.6684e-05],
        [1.3232e-05, 7.3314e-06],
        [1.4246e-05, 6.4373e-06],
        [1.8001e-05, 1.1861e-05],
        [1.2517e-06, 4.1962e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0694, 0.0519],
        [0.0764, 0.0471],
        [0.0463, 0.0777],
        [0.0864, 0.0417],
        [0.0466, 0.0773],
        [0.0458, 0.0787],
        [0.0896, 0.0402],
        [0.0476, 0.0756],
        [0.0467, 0.0771],
        [0.0475, 0.0758],
        [0.0461, 0.0781],
        [0.0481, 0.0748],
        [0.0856, 0.0421],
        [0.0895, 0.0402],
        [0.0822, 0.0438],
        [0.0463, 0.0778]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.450628
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4021e-05, 2.1875e-05],
        [2.4438e-05, 1.3173e-05],
        [2.1577e-05, 1.2279e-05],
        [1.5676e-05, 7.2718e-06],
        [4.7684e-07, 3.4750e-05],
        [1.2457e-05, 6.8545e-06],
        [2.2650e-06, 7.0453e-05],
        [5.9605e-07, 3.8445e-05],
        [2.0266e-06, 5.3823e-05],
        [1.4722e-05, 2.2590e-05],
        [8.1658e-06, 5.0426e-05],
        [1.7881e-07, 1.4782e-05],
        [5.3644e-07, 3.1233e-05],
        [1.9789e-05, 1.2457e-05],
        [3.9935e-06, 6.5565e-07],
        [7.7486e-07, 4.3631e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0722, 0.0492],
        [0.0820, 0.0434],
        [0.0809, 0.0439],
        [0.0847, 0.0419],
        [0.0434, 0.0819],
        [0.0816, 0.0436],
        [0.0442, 0.0805],
        [0.0435, 0.0818],
        [0.0444, 0.0801],
        [0.0635, 0.0560],
        [0.0492, 0.0722],
        [0.0433, 0.0821],
        [0.0435, 0.0817],
        [0.0791, 0.0450],
        [0.1010, 0.0352],
        [0.0436, 0.0816]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.432714
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.4639e-06, 5.1260e-06],
        [2.3544e-05, 3.6776e-05],
        [5.9605e-08, 3.8147e-06],
        [1.0312e-05, 6.3002e-05],
        [9.7156e-06, 7.1526e-06],
        [2.3246e-06, 6.6578e-05],
        [4.7684e-07, 3.0458e-05],
        [3.6359e-06, 6.7234e-05],
        [2.7716e-05, 1.6570e-05],
        [8.2850e-06, 9.8348e-05],
        [4.1723e-07, 2.1100e-05],
        [3.1590e-06, 6.9380e-05],
        [7.8082e-06, 6.7592e-05],
        [2.4438e-06, 6.8069e-05],
        [7.8678e-06, 3.7551e-06],
        [1.4901e-06, 4.8280e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0907, 0.0404],
        [0.0719, 0.0510],
        [0.0494, 0.0742],
        [0.0560, 0.0654],
        [0.0866, 0.0423],
        [0.0503, 0.0728],
        [0.0494, 0.0742],
        [0.0512, 0.0716],
        [0.0910, 0.0403],
        [0.0526, 0.0697],
        [0.0496, 0.0739],
        [0.0508, 0.0721],
        [0.0540, 0.0679],
        [0.0504, 0.0728],
        [0.0958, 0.0383],
        [0.0501, 0.0731]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.339351
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.8610e-05, 1.4722e-05],
        [8.2254e-06, 7.3075e-05],
        [1.4782e-05, 1.7643e-05],
        [2.8014e-06, 5.0008e-05],
        [3.0518e-05, 1.5795e-05],
        [2.0444e-05, 1.7464e-05],
        [2.3842e-06, 1.7881e-07],
        [1.1802e-05, 7.2718e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1411, 0.1026],
        [0.0807, 0.1795],
        [0.1150, 0.1259],
        [0.0769, 0.1883],
        [0.1409, 0.1027],
        [0.1251, 0.1158],
        [0.1849, 0.0783],
        [0.1354, 0.1069]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.237974
acc:  0.96
Time taken to execute the en SA task with prompt type rare_synonyms, variation 2 and batchsize 16: 0:00:05.184313
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05],
        [3.5763e-06, 1.8835e-05]], device='cuda:0') torch.Size([165, 2])
answers_probs just softmax dim 0: tensor([[0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061]], device='cuda:0')
tensor([[0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061],
        [0.0061, 0.0061]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.5896e-06, 7.3850e-05],
        [2.7418e-06, 5.3227e-05],
        [8.3447e-07, 3.3617e-05],
        [9.4175e-06, 3.2008e-05],
        [1.6689e-06, 4.8816e-05],
        [1.0729e-06, 5.1677e-05],
        [1.2755e-05, 3.2842e-05],
        [1.4365e-05, 1.7345e-05],
        [1.1623e-05, 2.2769e-05],
        [6.5565e-07, 9.7156e-06],
        [2.0742e-05, 2.0742e-05],
        [1.7285e-06, 2.9266e-05],
        [2.1458e-05, 2.8372e-05],
        [2.4617e-05, 2.0564e-05],
        [2.8729e-05, 5.4955e-05],
        [5.3644e-06, 5.2333e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0523, 0.0722],
        [0.0518, 0.0729],
        [0.0505, 0.0747],
        [0.0619, 0.0610],
        [0.0510, 0.0741],
        [0.0503, 0.0750],
        [0.0652, 0.0579],
        [0.0776, 0.0487],
        [0.0691, 0.0546],
        [0.0525, 0.0719],
        [0.0813, 0.0464],
        [0.0521, 0.0724],
        [0.0758, 0.0498],
        [0.0850, 0.0444],
        [0.0695, 0.0543],
        [0.0541, 0.0698]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.442760
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6987e-05, 1.6093e-05],
        [1.6868e-05, 6.4731e-05],
        [5.3644e-06, 4.8995e-05],
        [5.3644e-07, 2.9922e-05],
        [9.5367e-07, 6.5029e-05],
        [2.7895e-05, 7.4685e-05],
        [1.1086e-05, 2.3603e-05],
        [8.9407e-07, 2.8968e-05],
        [1.3828e-05, 5.8711e-05],
        [2.9266e-05, 3.0875e-05],
        [7.7486e-07, 4.8816e-05],
        [1.0788e-05, 1.4722e-05],
        [4.4703e-06, 1.0729e-06],
        [8.8215e-06, 9.5129e-05],
        [1.0133e-06, 3.6418e-05],
        [9.8944e-06, 2.3305e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0802, 0.0464],
        [0.0590, 0.0630],
        [0.0530, 0.0702],
        [0.0488, 0.0761],
        [0.0487, 0.0764],
        [0.0630, 0.0590],
        [0.0661, 0.0563],
        [0.0494, 0.0752],
        [0.0581, 0.0640],
        [0.0781, 0.0476],
        [0.0487, 0.0763],
        [0.0732, 0.0508],
        [0.1075, 0.0346],
        [0.0522, 0.0712],
        [0.0493, 0.0754],
        [0.0646, 0.0575]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.463813
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3961e-05, 5.6982e-05],
        [1.1921e-06, 4.1902e-05],
        [1.4246e-05, 5.4121e-05],
        [2.5690e-05, 1.1683e-05],
        [1.3113e-05, 2.1636e-05],
        [1.6093e-06, 1.9491e-05],
        [1.2219e-05, 4.1723e-05],
        [6.2585e-06, 6.1035e-05],
        [1.4305e-06, 4.9829e-05],
        [2.4438e-06, 5.7340e-05],
        [2.2829e-05, 2.8670e-05],
        [1.2398e-05, 6.2883e-05],
        [7.9274e-06, 6.6042e-05],
        [1.9908e-05, 2.6226e-05],
        [1.5497e-06, 4.6015e-05],
        [1.7881e-06, 4.4048e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0672, 0.0561],
        [0.0514, 0.0734],
        [0.0615, 0.0613],
        [0.0994, 0.0379],
        [0.0729, 0.0517],
        [0.0539, 0.0699],
        [0.0627, 0.0602],
        [0.0548, 0.0688],
        [0.0514, 0.0734],
        [0.0520, 0.0724],
        [0.0778, 0.0484],
        [0.0589, 0.0640],
        [0.0556, 0.0678],
        [0.0769, 0.0490],
        [0.0516, 0.0730],
        [0.0520, 0.0726]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.429245
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1875e-05, 2.0862e-05],
        [2.1815e-05, 2.2531e-05],
        [2.6226e-06, 5.0247e-05],
        [1.7285e-06, 5.7161e-05],
        [1.3769e-05, 1.7941e-05],
        [1.3590e-05, 2.2709e-05],
        [7.7486e-07, 3.4809e-05],
        [6.5565e-07, 2.9385e-05],
        [8.1658e-06, 1.4782e-05],
        [1.3113e-06, 1.2934e-05],
        [1.4305e-05, 2.6286e-05],
        [1.0133e-06, 3.8743e-05],
        [9.7156e-06, 3.5107e-05],
        [2.5094e-05, 3.5107e-05],
        [1.5497e-06, 4.4763e-05],
        [3.5763e-07, 2.0325e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0826, 0.0456],
        [0.0809, 0.0466],
        [0.0520, 0.0725],
        [0.0510, 0.0740],
        [0.0764, 0.0493],
        [0.0720, 0.0524],
        [0.0506, 0.0745],
        [0.0506, 0.0745],
        [0.0706, 0.0534],
        [0.0543, 0.0695],
        [0.0704, 0.0535],
        [0.0508, 0.0742],
        [0.0615, 0.0613],
        [0.0751, 0.0502],
        [0.0512, 0.0737],
        [0.0503, 0.0749]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.602352
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6987e-05, 1.3530e-05],
        [1.0312e-05, 2.0862e-05],
        [4.1723e-07, 3.1769e-05],
        [2.5034e-06, 5.5671e-05],
        [1.9073e-06, 6.6638e-05],
        [2.0266e-06, 4.4465e-05],
        [1.9073e-06, 5.1916e-05],
        [2.1458e-06, 4.0829e-05],
        [1.3709e-06, 4.3750e-05],
        [1.8895e-05, 4.2856e-05],
        [1.5378e-05, 1.8001e-05],
        [4.0531e-06, 4.7684e-07],
        [3.6359e-06, 2.3842e-05],
        [6.5565e-07, 3.5763e-05],
        [1.0133e-06, 2.7716e-05],
        [2.3842e-07, 2.1160e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0873, 0.0420],
        [0.0697, 0.0527],
        [0.0507, 0.0724],
        [0.0522, 0.0702],
        [0.0515, 0.0713],
        [0.0523, 0.0702],
        [0.0519, 0.0708],
        [0.0526, 0.0697],
        [0.0516, 0.0711],
        [0.0680, 0.0540],
        [0.0793, 0.0462],
        [0.1224, 0.0300],
        [0.0571, 0.0642],
        [0.0510, 0.0720],
        [0.0518, 0.0708],
        [0.0506, 0.0725]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.502028
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.4506e-06, 3.7014e-05],
        [9.1791e-06, 2.9087e-05],
        [8.3447e-07, 4.6551e-05],
        [3.7491e-05, 2.1696e-05],
        [1.9670e-06, 5.4657e-05],
        [5.9605e-07, 3.1829e-05],
        [2.9802e-06, 5.9366e-05],
        [3.9339e-06, 8.9407e-07],
        [2.1160e-05, 2.1994e-05],
        [1.8001e-05, 3.0577e-05],
        [1.3113e-06, 3.9577e-05],
        [1.6272e-05, 2.7716e-05],
        [2.5511e-05, 5.0724e-05],
        [2.1458e-06, 5.2631e-05],
        [2.9802e-06, 4.4465e-05],
        [1.3113e-06, 4.0948e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0568, 0.0649],
        [0.0611, 0.0603],
        [0.0489, 0.0754],
        [0.0905, 0.0407],
        [0.0497, 0.0741],
        [0.0489, 0.0753],
        [0.0504, 0.0731],
        [0.1085, 0.0340],
        [0.0785, 0.0470],
        [0.0696, 0.0530],
        [0.0496, 0.0743],
        [0.0696, 0.0530],
        [0.0671, 0.0549],
        [0.0500, 0.0738],
        [0.0512, 0.0720],
        [0.0496, 0.0744]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.450753
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3292e-05, 1.9550e-05],
        [1.6689e-06, 4.7266e-05],
        [1.6689e-06, 4.3273e-05],
        [1.3113e-06, 5.4240e-05],
        [5.8413e-06, 1.0729e-04],
        [3.3021e-05, 3.9518e-05],
        [1.9431e-05, 5.0843e-05],
        [7.3910e-06, 6.7711e-05],
        [2.2292e-05, 2.7537e-05],
        [1.5557e-05, 3.1710e-05],
        [4.1246e-05, 3.2127e-05],
        [2.4438e-06, 5.2154e-05],
        [1.0133e-06, 1.3053e-05],
        [1.8358e-05, 1.7822e-05],
        [1.2159e-05, 2.5928e-05],
        [2.1338e-05, 4.3809e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0717, 0.0526],
        [0.0495, 0.0762],
        [0.0497, 0.0759],
        [0.0490, 0.0770],
        [0.0504, 0.0749],
        [0.0754, 0.0500],
        [0.0631, 0.0598],
        [0.0528, 0.0714],
        [0.0748, 0.0504],
        [0.0665, 0.0567],
        [0.0839, 0.0449],
        [0.0500, 0.0754],
        [0.0514, 0.0733],
        [0.0795, 0.0475],
        [0.0658, 0.0573],
        [0.0664, 0.0568]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.405455
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3411e-05, 2.1935e-05],
        [9.5367e-07, 3.6240e-05],
        [2.1994e-05, 2.9862e-05],
        [4.2319e-06, 5.6386e-05],
        [7.6890e-06, 2.2590e-05],
        [3.1590e-06, 5.7757e-05],
        [1.6749e-05, 1.7405e-05],
        [2.3067e-05, 4.6551e-05],
        [6.9141e-06, 2.0862e-06],
        [3.1590e-06, 3.1531e-05],
        [2.4438e-06, 4.4703e-05],
        [1.0729e-06, 2.8551e-05],
        [3.3379e-05, 3.3379e-05],
        [1.3530e-05, 1.6749e-05],
        [4.7684e-07, 3.3557e-05],
        [1.2994e-05, 3.1173e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0684, 0.0544],
        [0.0480, 0.0775],
        [0.0715, 0.0521],
        [0.0502, 0.0742],
        [0.0603, 0.0617],
        [0.0493, 0.0755],
        [0.0764, 0.0487],
        [0.0652, 0.0571],
        [0.1009, 0.0369],
        [0.0513, 0.0726],
        [0.0493, 0.0755],
        [0.0485, 0.0767],
        [0.0772, 0.0483],
        [0.0732, 0.0509],
        [0.0475, 0.0785],
        [0.0628, 0.0593]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.455679
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.9472e-06, 7.7128e-05],
        [5.3644e-07, 2.6464e-05],
        [4.1723e-07, 1.1265e-05],
        [2.5988e-05, 2.5213e-05],
        [2.5094e-05, 4.0472e-05],
        [1.7285e-06, 4.0948e-05],
        [2.2769e-05, 7.2360e-05],
        [2.4438e-06, 5.4359e-05],
        [2.8610e-06, 5.4300e-05],
        [1.2636e-05, 1.8120e-05],
        [6.2585e-06, 8.4043e-05],
        [3.5763e-07, 2.9504e-05],
        [2.1219e-05, 6.2346e-05],
        [2.3842e-06, 5.6386e-05],
        [2.6047e-05, 2.1100e-05],
        [1.3709e-06, 4.5180e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0549, 0.0688],
        [0.0527, 0.0716],
        [0.0536, 0.0705],
        [0.0859, 0.0440],
        [0.0758, 0.0498],
        [0.0538, 0.0701],
        [0.0657, 0.0575],
        [0.0540, 0.0699],
        [0.0544, 0.0695],
        [0.0780, 0.0484],
        [0.0554, 0.0681],
        [0.0523, 0.0722],
        [0.0666, 0.0566],
        [0.0538, 0.0701],
        [0.0898, 0.0420],
        [0.0532, 0.0709]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.436644
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2187e-06, 6.8605e-05],
        [1.4484e-05, 1.6928e-05],
        [3.0279e-05, 6.0737e-05],
        [1.8775e-05, 3.5942e-05],
        [1.5616e-05, 5.0485e-05],
        [1.0133e-06, 3.7074e-05],
        [1.6689e-05, 2.5868e-05],
        [2.9802e-07, 1.8358e-05],
        [8.3447e-06, 3.4392e-05],
        [1.5855e-05, 1.0014e-05],
        [2.7418e-06, 6.5207e-05],
        [1.7524e-05, 1.4782e-05],
        [5.9605e-07, 3.3259e-05],
        [1.4544e-05, 1.1384e-05],
        [6.0201e-06, 9.7573e-05],
        [5.9009e-06, 2.5630e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0478, 0.0775],
        [0.0725, 0.0511],
        [0.0637, 0.0581],
        [0.0644, 0.0575],
        [0.0579, 0.0640],
        [0.0469, 0.0789],
        [0.0676, 0.0548],
        [0.0464, 0.0798],
        [0.0555, 0.0667],
        [0.0843, 0.0439],
        [0.0476, 0.0778],
        [0.0786, 0.0471],
        [0.0465, 0.0796],
        [0.0801, 0.0463],
        [0.0484, 0.0765],
        [0.0918, 0.0404]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.547791
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 4.7207e-05],
        [2.4676e-05, 4.1008e-05],
        [2.1696e-05, 3.4630e-05],
        [1.3053e-05, 1.4663e-05],
        [1.8477e-06, 3.6657e-05],
        [1.1325e-05, 3.9458e-05],
        [6.0201e-06, 7.0274e-05],
        [2.1040e-05, 3.5763e-05],
        [2.4438e-06, 5.7340e-05],
        [4.7088e-06, 6.6400e-05],
        [1.2517e-06, 4.1306e-05],
        [1.6749e-05, 3.9279e-05],
        [1.0729e-06, 3.5584e-05],
        [7.1526e-07, 1.4484e-05],
        [1.8656e-05, 1.9848e-05],
        [4.7684e-07, 2.8968e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0521, 0.0728],
        [0.0743, 0.0510],
        [0.0751, 0.0505],
        [0.0818, 0.0463],
        [0.0536, 0.0707],
        [0.0638, 0.0594],
        [0.0553, 0.0686],
        [0.0740, 0.0512],
        [0.0532, 0.0712],
        [0.0546, 0.0695],
        [0.0526, 0.0721],
        [0.0689, 0.0550],
        [0.0526, 0.0721],
        [0.0535, 0.0708],
        [0.0829, 0.0457],
        [0.0519, 0.0730]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.496937
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4365e-05, 1.0192e-05],
        [2.3842e-06, 5.1141e-05],
        [1.3113e-06, 4.2319e-05],
        [6.6161e-06, 9.2804e-05],
        [1.8477e-06, 4.3511e-05],
        [1.4901e-06, 3.6180e-05],
        [1.1146e-05, 1.1861e-05],
        [1.5497e-05, 1.5020e-05],
        [1.3351e-05, 1.4365e-05],
        [1.3113e-06, 4.4346e-05],
        [2.2173e-05, 2.4199e-05],
        [1.1921e-06, 5.2869e-05],
        [1.2875e-05, 9.2387e-06],
        [5.9009e-06, 8.6665e-05],
        [1.3947e-05, 1.4603e-05],
        [5.9009e-06, 1.0133e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0800, 0.0454],
        [0.0466, 0.0779],
        [0.0460, 0.0790],
        [0.0477, 0.0762],
        [0.0465, 0.0782],
        [0.0464, 0.0783],
        [0.0724, 0.0502],
        [0.0741, 0.0490],
        [0.0722, 0.0503],
        [0.0459, 0.0791],
        [0.0719, 0.0505],
        [0.0456, 0.0796],
        [0.0798, 0.0455],
        [0.0475, 0.0764],
        [0.0727, 0.0500],
        [0.1047, 0.0347]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.503304
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.0623e-05, 3.5584e-05],
        [1.7881e-07, 6.0797e-06],
        [1.2338e-05, 5.7101e-05],
        [1.1325e-06, 5.1081e-05],
        [1.5020e-05, 1.5974e-05],
        [7.0333e-06, 6.0081e-05],
        [7.5102e-06, 2.7418e-05],
        [1.1384e-05, 1.2040e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1403, 0.1079],
        [0.1000, 0.1514],
        [0.1161, 0.1304],
        [0.0993, 0.1525],
        [0.1578, 0.0960],
        [0.1079, 0.1403],
        [0.1205, 0.1257],
        [0.1580, 0.0958]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.223042
acc:  0.925
Time taken to execute the en SA task with prompt type rare_synonyms, variation 3 and batchsize 16: 0:00:05.975788
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05],
        [5.3048e-06, 1.2159e-05]], device='cuda:0') torch.Size([130, 2])
answers_probs just softmax dim 0: tensor([[0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077]], device='cuda:0')
tensor([[0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077],
        [0.0077, 0.0077]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.8299e-05],
        [5.1856e-06, 4.0531e-06],
        [1.0014e-05, 1.3053e-05],
        [6.5565e-07, 2.9147e-05],
        [1.1146e-05, 4.5896e-06],
        [7.2122e-06, 6.6757e-06],
        [1.2517e-06, 2.5690e-05],
        [9.9540e-06, 9.0003e-06],
        [6.7353e-06, 4.8280e-06],
        [6.4373e-06, 1.0490e-05],
        [7.1526e-07, 2.4498e-05],
        [2.3246e-06, 4.6849e-05],
        [1.0073e-05, 8.4639e-06],
        [9.5367e-07, 3.1829e-05],
        [7.7486e-07, 2.7478e-05],
        [4.2319e-06, 7.1526e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0827],
        [0.0754, 0.0478],
        [0.0664, 0.0543],
        [0.0440, 0.0820],
        [0.0874, 0.0413],
        [0.0723, 0.0498],
        [0.0451, 0.0800],
        [0.0727, 0.0496],
        [0.0770, 0.0468],
        [0.0629, 0.0573],
        [0.0443, 0.0814],
        [0.0451, 0.0799],
        [0.0741, 0.0487],
        [0.0443, 0.0814],
        [0.0442, 0.0815],
        [0.1012, 0.0356]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.434807
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0908e-05, 1.4126e-05],
        [5.5432e-06, 4.5300e-06],
        [1.5497e-05, 1.1981e-05],
        [5.3644e-07, 3.2604e-05],
        [1.1325e-06, 2.7299e-05],
        [4.7684e-07, 2.4021e-05],
        [8.3447e-07, 3.0220e-05],
        [2.2054e-06, 4.1723e-05],
        [6.2585e-06, 3.3975e-06],
        [8.8215e-06, 1.4246e-05],
        [6.9737e-06, 3.4034e-05],
        [1.2517e-06, 2.9981e-05],
        [5.9605e-07, 3.6895e-05],
        [9.5963e-06, 1.5855e-05],
        [5.3644e-07, 1.6093e-05],
        [5.4240e-06, 3.3975e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0731, 0.0504],
        [0.0820, 0.0450],
        [0.0831, 0.0443],
        [0.0480, 0.0767],
        [0.0492, 0.0749],
        [0.0482, 0.0764],
        [0.0486, 0.0759],
        [0.0497, 0.0741],
        [0.0904, 0.0408],
        [0.0693, 0.0532],
        [0.0560, 0.0657],
        [0.0492, 0.0749],
        [0.0480, 0.0767],
        [0.0689, 0.0535],
        [0.0488, 0.0755],
        [0.0874, 0.0421]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.452734
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.7949e-06, 5.4240e-06],
        [1.1444e-05, 1.5736e-05],
        [1.1921e-06, 3.7670e-05],
        [7.0930e-06, 6.9737e-06],
        [2.0862e-06, 3.7670e-05],
        [8.7619e-06, 7.3910e-06],
        [9.7156e-06, 6.1393e-06],
        [3.5763e-07, 2.1935e-05],
        [1.1921e-07, 6.0201e-06],
        [3.0994e-06, 4.3929e-05],
        [1.4365e-05, 2.7001e-05],
        [1.1921e-05, 1.7583e-05],
        [1.3113e-06, 3.6001e-05],
        [9.4175e-06, 2.1219e-05],
        [3.5763e-07, 2.0921e-05],
        [1.2040e-05, 4.1783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0820, 0.0454],
        [0.0717, 0.0519],
        [0.0485, 0.0768],
        [0.0779, 0.0478],
        [0.0496, 0.0751],
        [0.0809, 0.0460],
        [0.0868, 0.0429],
        [0.0478, 0.0779],
        [0.0480, 0.0776],
        [0.0503, 0.0741],
        [0.0666, 0.0559],
        [0.0705, 0.0528],
        [0.0487, 0.0764],
        [0.0640, 0.0582],
        [0.0478, 0.0778],
        [0.0588, 0.0633]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.343932
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6955e-06, 4.8697e-05],
        [8.3447e-07, 3.0041e-05],
        [9.6560e-06, 3.4571e-05],
        [9.5367e-07, 3.3200e-05],
        [8.3447e-07, 2.8372e-05],
        [2.7418e-06, 1.5020e-05],
        [9.6560e-06, 1.0073e-05],
        [9.5963e-06, 6.7353e-06],
        [8.7619e-06, 1.2279e-05],
        [5.3048e-06, 5.9009e-06],
        [2.3842e-07, 2.1577e-05],
        [2.3842e-07, 1.6332e-05],
        [8.4043e-06, 9.4175e-06],
        [1.2636e-05, 1.9848e-05],
        [6.7949e-06, 7.3314e-06],
        [1.3709e-06, 2.4617e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0514, 0.0728],
        [0.0492, 0.0760],
        [0.0595, 0.0628],
        [0.0492, 0.0759],
        [0.0492, 0.0759],
        [0.0558, 0.0669],
        [0.0781, 0.0479],
        [0.0861, 0.0434],
        [0.0726, 0.0515],
        [0.0768, 0.0486],
        [0.0484, 0.0772],
        [0.0485, 0.0770],
        [0.0767, 0.0487],
        [0.0706, 0.0529],
        [0.0774, 0.0483],
        [0.0504, 0.0741]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.367684
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8358e-05, 1.7226e-05],
        [7.1526e-07, 2.1040e-05],
        [1.4901e-06, 4.1246e-05],
        [3.0994e-06, 5.6326e-05],
        [8.7619e-06, 4.0531e-06],
        [3.0398e-06, 3.7432e-05],
        [1.2696e-05, 1.8358e-05],
        [8.3447e-07, 3.7134e-05],
        [1.1325e-06, 2.7835e-05],
        [6.6161e-06, 4.4107e-06],
        [2.1458e-06, 3.8028e-05],
        [1.1921e-07, 6.3181e-06],
        [5.3644e-07, 2.6345e-05],
        [1.2219e-05, 1.7464e-05],
        [8.8215e-06, 9.2983e-06],
        [6.4373e-06, 4.6492e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0788, 0.0466],
        [0.0486, 0.0755],
        [0.0487, 0.0754],
        [0.0495, 0.0741],
        [0.0932, 0.0394],
        [0.0507, 0.0724],
        [0.0708, 0.0519],
        [0.0481, 0.0764],
        [0.0489, 0.0751],
        [0.0857, 0.0428],
        [0.0496, 0.0740],
        [0.0479, 0.0766],
        [0.0480, 0.0765],
        [0.0710, 0.0517],
        [0.0765, 0.0480],
        [0.0840, 0.0437]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.364836
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.3777e-06, 8.4043e-06],
        [1.3113e-06, 2.6226e-05],
        [3.5763e-07, 1.8895e-05],
        [6.0201e-06, 7.0930e-06],
        [1.6093e-06, 3.8981e-05],
        [8.1062e-06, 3.8147e-06],
        [8.3447e-07, 4.1187e-05],
        [2.4438e-06, 4.7266e-05],
        [1.1861e-05, 1.0908e-05],
        [9.2983e-06, 6.6757e-06],
        [1.2517e-06, 2.5988e-05],
        [8.8215e-06, 7.3314e-06],
        [3.8147e-06, 5.3644e-07],
        [8.5235e-06, 5.9605e-06],
        [8.3447e-07, 4.0829e-05],
        [6.4373e-06, 3.9339e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0652, 0.0551],
        [0.0444, 0.0809],
        [0.0432, 0.0832],
        [0.0670, 0.0536],
        [0.0441, 0.0815],
        [0.0836, 0.0430],
        [0.0432, 0.0831],
        [0.0445, 0.0807],
        [0.0713, 0.0504],
        [0.0758, 0.0474],
        [0.0444, 0.0810],
        [0.0731, 0.0491],
        [0.1018, 0.0353],
        [0.0763, 0.0471],
        [0.0432, 0.0831],
        [0.0788, 0.0456]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.456808
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 1.8239e-05],
        [1.5497e-06, 3.4809e-05],
        [4.7684e-07, 2.4736e-05],
        [4.7684e-07, 1.1146e-05],
        [8.2850e-06, 8.5235e-06],
        [4.1723e-07, 2.6703e-05],
        [4.6492e-06, 6.6638e-05],
        [1.2934e-05, 1.5616e-05],
        [1.2994e-05, 1.0014e-05],
        [3.5763e-07, 1.6093e-05],
        [7.2122e-06, 4.0531e-06],
        [1.0729e-06, 2.7835e-05],
        [8.7619e-06, 1.9491e-05],
        [1.9073e-06, 3.2067e-05],
        [7.0930e-06, 3.6359e-06],
        [1.1444e-05, 7.1526e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0488, 0.0750],
        [0.0488, 0.0749],
        [0.0477, 0.0767],
        [0.0488, 0.0750],
        [0.0766, 0.0477],
        [0.0475, 0.0769],
        [0.0500, 0.0732],
        [0.0736, 0.0497],
        [0.0823, 0.0444],
        [0.0478, 0.0764],
        [0.0888, 0.0412],
        [0.0486, 0.0753],
        [0.0638, 0.0573],
        [0.0495, 0.0739],
        [0.0907, 0.0403],
        [0.0866, 0.0422]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.408411
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-05, 1.7941e-05],
        [8.3447e-07, 3.2723e-05],
        [2.1458e-06, 4.3213e-05],
        [7.7486e-06, 6.6161e-06],
        [5.3644e-07, 1.8001e-05],
        [3.8743e-06, 4.6611e-05],
        [7.9274e-06, 2.1219e-05],
        [1.1444e-05, 1.1504e-05],
        [1.1921e-06, 3.0577e-05],
        [9.3579e-06, 1.3173e-05],
        [2.9206e-06, 3.6895e-05],
        [1.1027e-05, 1.2517e-05],
        [7.7486e-07, 3.5226e-05],
        [2.9206e-06, 1.2517e-05],
        [9.9540e-06, 1.4365e-05],
        [1.2279e-05, 1.4663e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0706, 0.0533],
        [0.0491, 0.0766],
        [0.0502, 0.0749],
        [0.0822, 0.0458],
        [0.0493, 0.0762],
        [0.0517, 0.0727],
        [0.0629, 0.0598],
        [0.0789, 0.0477],
        [0.0497, 0.0756],
        [0.0726, 0.0518],
        [0.0516, 0.0729],
        [0.0765, 0.0491],
        [0.0490, 0.0768],
        [0.0579, 0.0650],
        [0.0722, 0.0521],
        [0.0756, 0.0498]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.341313
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-06, 3.4332e-05],
        [7.7486e-07, 2.1338e-05],
        [7.2718e-06, 2.9445e-05],
        [2.9206e-06, 5.6207e-05],
        [8.4639e-06, 5.2452e-06],
        [2.0266e-06, 5.1260e-05],
        [5.7817e-06, 4.9472e-06],
        [9.1791e-06, 1.3828e-05],
        [1.5497e-06, 3.4690e-05],
        [4.2319e-06, 1.0133e-06],
        [1.7881e-06, 3.5763e-05],
        [6.6757e-06, 1.1086e-05],
        [1.0729e-06, 3.1233e-05],
        [5.1260e-06, 8.9407e-06],
        [1.2577e-05, 3.3677e-05],
        [4.1723e-07, 2.1577e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0738],
        [0.0492, 0.0749],
        [0.0579, 0.0636],
        [0.0499, 0.0738],
        [0.0881, 0.0418],
        [0.0494, 0.0747],
        [0.0814, 0.0452],
        [0.0708, 0.0520],
        [0.0496, 0.0743],
        [0.1065, 0.0346],
        [0.0498, 0.0739],
        [0.0692, 0.0533],
        [0.0491, 0.0750],
        [0.0684, 0.0539],
        [0.0624, 0.0591],
        [0.0484, 0.0761]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.437254
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.2387e-06, 1.2100e-05],
        [1.0729e-06, 2.8133e-05],
        [1.1325e-06, 3.5048e-05],
        [4.7684e-07, 2.2113e-05],
        [1.0014e-05, 1.0312e-05],
        [5.7220e-06, 7.8082e-06],
        [1.0490e-05, 1.5080e-05],
        [9.8944e-06, 1.0669e-05],
        [1.4305e-06, 2.3007e-05],
        [6.7949e-06, 6.7949e-06],
        [3.0398e-06, 5.1916e-05],
        [8.9407e-07, 3.3259e-05],
        [3.8147e-06, 1.1325e-06],
        [6.4969e-06, 5.7220e-06],
        [5.4240e-06, 5.2869e-05],
        [1.6093e-06, 2.7776e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0710, 0.0519],
        [0.0477, 0.0772],
        [0.0475, 0.0776],
        [0.0470, 0.0784],
        [0.0753, 0.0489],
        [0.0702, 0.0525],
        [0.0694, 0.0531],
        [0.0745, 0.0495],
        [0.0488, 0.0755],
        [0.0759, 0.0486],
        [0.0486, 0.0758],
        [0.0472, 0.0780],
        [0.0995, 0.0370],
        [0.0783, 0.0471],
        [0.0505, 0.0730],
        [0.0486, 0.0758]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.340510
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 3.1829e-05],
        [7.9870e-06, 9.5367e-06],
        [1.0133e-06, 3.3438e-05],
        [6.1989e-06, 2.8014e-06],
        [1.0669e-05, 5.2452e-06],
        [9.6560e-06, 1.3947e-05],
        [1.2398e-05, 2.6405e-05],
        [6.7353e-06, 3.8207e-05],
        [9.8348e-06, 1.1861e-05],
        [6.3181e-06, 1.1384e-05],
        [9.1791e-06, 1.3709e-05],
        [4.7684e-06, 2.2650e-06],
        [1.0610e-05, 9.2983e-06],
        [5.9605e-07, 2.9266e-05],
        [5.6028e-06, 3.9518e-05],
        [2.8610e-06, 5.7220e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0453, 0.0817],
        [0.0686, 0.0540],
        [0.0448, 0.0827],
        [0.0865, 0.0428],
        [0.0850, 0.0435],
        [0.0654, 0.0566],
        [0.0598, 0.0618],
        [0.0505, 0.0733],
        [0.0684, 0.0541],
        [0.0621, 0.0596],
        [0.0649, 0.0570],
        [0.0856, 0.0432],
        [0.0741, 0.0500],
        [0.0443, 0.0835],
        [0.0492, 0.0752],
        [0.0456, 0.0812]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.492467
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4007e-05, 2.5094e-05],
        [3.5167e-06, 5.6148e-05],
        [2.5034e-06, 4.7803e-05],
        [5.3644e-07, 2.5392e-05],
        [7.6294e-06, 9.4175e-06],
        [6.5565e-06, 6.6757e-06],
        [1.1921e-05, 1.1206e-05],
        [3.0994e-06, 4.9531e-05],
        [5.0068e-06, 2.0266e-06],
        [2.2054e-06, 3.7670e-05],
        [3.5763e-07, 2.6762e-05],
        [6.5565e-07, 2.3842e-05],
        [7.7486e-07, 3.8803e-05],
        [8.2254e-06, 9.2387e-06],
        [1.0729e-06, 4.9829e-05],
        [6.1393e-06, 6.6757e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0685, 0.0539],
        [0.0508, 0.0727],
        [0.0503, 0.0734],
        [0.0489, 0.0756],
        [0.0749, 0.0493],
        [0.0785, 0.0470],
        [0.0801, 0.0461],
        [0.0508, 0.0727],
        [0.0975, 0.0379],
        [0.0506, 0.0730],
        [0.0485, 0.0761],
        [0.0492, 0.0751],
        [0.0488, 0.0757],
        [0.0766, 0.0482],
        [0.0489, 0.0755],
        [0.0773, 0.0478]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.297128
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[7.7486e-07, 9.4175e-06],
        [4.1127e-06, 4.4048e-05],
        [9.5367e-06, 7.2122e-06],
        [7.5698e-06, 7.3314e-06],
        [3.0994e-06, 3.9399e-05],
        [1.9073e-06, 3.2365e-05],
        [6.5565e-06, 6.6161e-06],
        [1.2696e-05, 2.0564e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0995, 0.1500],
        [0.1005, 0.1486],
        [0.1630, 0.0916],
        [0.1533, 0.0974],
        [0.0992, 0.1505],
        [0.0975, 0.1531],
        [0.1518, 0.0984],
        [0.1351, 0.1105]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.300714
acc:  0.965
Time taken to execute the en SA task with prompt type rare_synonyms, variation 4 and batchsize 16: 0:00:05.054235
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05],
        [7.9870e-06, 1.3649e-05]], device='cuda:0') torch.Size([124, 2])
answers_probs just softmax dim 0: tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
tensor([[0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081],
        [0.0081, 0.0081]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2723e-05, 2.3782e-05],
        [2.8014e-06, 7.8142e-05],
        [6.5565e-07, 3.6061e-05],
        [7.5102e-06, 5.1856e-06],
        [1.3113e-06, 4.6492e-05],
        [1.7405e-05, 1.0669e-05],
        [1.9073e-06, 6.6102e-05],
        [2.3842e-07, 1.8001e-05],
        [5.1260e-06, 1.9073e-06],
        [8.9407e-06, 8.0109e-05],
        [4.5300e-06, 6.4373e-05],
        [1.6987e-05, 7.6890e-06],
        [2.3663e-05, 8.5771e-05],
        [2.1160e-05, 2.1636e-05],
        [1.5616e-05, 9.2983e-06],
        [2.0862e-05, 2.6166e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0772, 0.0469],
        [0.0448, 0.0808],
        [0.0440, 0.0822],
        [0.0781, 0.0463],
        [0.0445, 0.0814],
        [0.0804, 0.0450],
        [0.0445, 0.0814],
        [0.0438, 0.0826],
        [0.0896, 0.0404],
        [0.0478, 0.0757],
        [0.0462, 0.0784],
        [0.0861, 0.0420],
        [0.0537, 0.0674],
        [0.0709, 0.0510],
        [0.0810, 0.0447],
        [0.0674, 0.0537]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.497399
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-06, 8.1658e-05],
        [1.0133e-06, 4.4763e-05],
        [9.8348e-06, 3.6359e-06],
        [2.3842e-06, 5.4359e-05],
        [1.8477e-05, 1.2517e-05],
        [1.4424e-05, 1.4663e-05],
        [2.5034e-06, 4.2140e-05],
        [5.9605e-07, 8.8215e-06],
        [1.6093e-06, 4.7684e-05],
        [1.4305e-06, 3.9279e-05],
        [1.7047e-05, 6.5565e-06],
        [2.0742e-05, 9.4771e-06],
        [1.4186e-05, 2.0742e-05],
        [1.6093e-06, 5.7638e-05],
        [1.4961e-05, 6.7949e-06],
        [1.6093e-06, 5.2750e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0770],
        [0.0456, 0.0785],
        [0.0925, 0.0387],
        [0.0465, 0.0770],
        [0.0809, 0.0442],
        [0.0732, 0.0489],
        [0.0472, 0.0759],
        [0.0475, 0.0754],
        [0.0461, 0.0777],
        [0.0462, 0.0775],
        [0.0918, 0.0390],
        [0.0886, 0.0404],
        [0.0669, 0.0535],
        [0.0458, 0.0781],
        [0.0887, 0.0404],
        [0.0459, 0.0779]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.370082
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.1114e-05, 5.3704e-05],
        [2.5213e-05, 1.6510e-05],
        [1.1384e-05, 4.2319e-06],
        [1.4961e-05, 5.1856e-06],
        [3.5763e-07, 2.4080e-05],
        [2.6226e-05, 1.2398e-05],
        [9.5367e-07, 3.6180e-05],
        [1.3351e-05, 8.8811e-06],
        [1.2755e-05, 6.5744e-05],
        [3.1590e-06, 2.9802e-07],
        [5.2452e-06, 6.3300e-05],
        [1.9848e-05, 1.8597e-05],
        [1.3590e-05, 1.0848e-05],
        [1.9014e-05, 1.3351e-05],
        [1.5497e-06, 4.6611e-05],
        [2.0862e-06, 6.8188e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0570, 0.0627],
        [0.0723, 0.0494],
        [0.0819, 0.0436],
        [0.0830, 0.0430],
        [0.0401, 0.0891],
        [0.0779, 0.0459],
        [0.0405, 0.0882],
        [0.0720, 0.0496],
        [0.0465, 0.0769],
        [0.0985, 0.0363],
        [0.0426, 0.0838],
        [0.0662, 0.0540],
        [0.0689, 0.0519],
        [0.0711, 0.0503],
        [0.0408, 0.0876],
        [0.0407, 0.0878]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.458225
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8789e-05, 1.6153e-05],
        [1.4901e-06, 3.9876e-05],
        [4.8876e-06, 5.3644e-07],
        [3.4928e-05, 3.4392e-05],
        [2.5153e-05, 7.5042e-05],
        [1.8954e-05, 2.1994e-05],
        [1.2517e-06, 5.5432e-05],
        [1.9610e-05, 8.6427e-06],
        [3.2485e-05, 2.8253e-05],
        [2.9027e-05, 3.3140e-05],
        [5.9605e-07, 3.4094e-05],
        [2.8014e-06, 6.9082e-05],
        [1.1563e-05, 3.6359e-06],
        [1.6272e-05, 1.1802e-05],
        [4.8876e-06, 8.8632e-05],
        [8.9407e-07, 4.1485e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0781, 0.0458],
        [0.0426, 0.0839],
        [0.1013, 0.0353],
        [0.0681, 0.0525],
        [0.0529, 0.0677],
        [0.0654, 0.0547],
        [0.0421, 0.0851],
        [0.0824, 0.0434],
        [0.0702, 0.0509],
        [0.0656, 0.0545],
        [0.0418, 0.0855],
        [0.0428, 0.0836],
        [0.0880, 0.0406],
        [0.0734, 0.0487],
        [0.0433, 0.0825],
        [0.0420, 0.0851]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.371098
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5034e-06, 6.0320e-05],
        [8.3447e-07, 2.9564e-05],
        [1.3709e-06, 3.6955e-05],
        [1.8775e-05, 4.2677e-05],
        [3.8862e-05, 2.0325e-05],
        [1.3292e-05, 5.9009e-06],
        [2.2650e-06, 3.6657e-05],
        [2.0862e-06, 6.1333e-05],
        [9.5963e-06, 4.8280e-06],
        [5.3644e-07, 5.5969e-05],
        [4.7684e-06, 1.3709e-06],
        [1.5020e-05, 6.4969e-06],
        [3.5763e-07, 2.7180e-05],
        [8.7619e-06, 1.1569e-04],
        [1.3947e-05, 8.5831e-06],
        [6.5565e-07, 4.8697e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0461, 0.0770],
        [0.0455, 0.0780],
        [0.0459, 0.0774],
        [0.0601, 0.0591],
        [0.0854, 0.0416],
        [0.0885, 0.0401],
        [0.0469, 0.0756],
        [0.0458, 0.0776],
        [0.0861, 0.0412],
        [0.0447, 0.0794],
        [0.0963, 0.0369],
        [0.0890, 0.0399],
        [0.0449, 0.0791],
        [0.0475, 0.0747],
        [0.0823, 0.0432],
        [0.0449, 0.0791]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.414236
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0444e-05, 1.3292e-05],
        [2.3842e-07, 2.0087e-05],
        [1.8477e-06, 7.6354e-05],
        [2.3842e-06, 6.3121e-05],
        [1.2934e-05, 8.2850e-06],
        [7.7486e-07, 4.2319e-05],
        [7.1526e-07, 3.4690e-05],
        [1.1683e-05, 9.0003e-06],
        [5.9605e-07, 9.0003e-06],
        [4.4703e-06, 9.5904e-05],
        [1.2517e-06, 3.6776e-05],
        [2.7299e-05, 7.0870e-05],
        [1.8716e-05, 7.7486e-06],
        [2.3901e-05, 1.7345e-05],
        [1.3113e-06, 4.6611e-05],
        [5.7220e-06, 1.0306e-04]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0877, 0.0415],
        [0.0484, 0.0752],
        [0.0490, 0.0743],
        [0.0496, 0.0734],
        [0.0880, 0.0414],
        [0.0487, 0.0747],
        [0.0488, 0.0746],
        [0.0842, 0.0432],
        [0.0509, 0.0715],
        [0.0500, 0.0728],
        [0.0494, 0.0736],
        [0.0632, 0.0576],
        [0.0970, 0.0375],
        [0.0854, 0.0426],
        [0.0492, 0.0740],
        [0.0504, 0.0722]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.370154
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1444e-05, 1.1194e-04],
        [1.5974e-05, 7.2122e-06],
        [3.9339e-06, 7.8142e-05],
        [2.3842e-07, 6.7949e-06],
        [8.9407e-07, 3.2783e-05],
        [2.2650e-05, 1.4782e-05],
        [3.0994e-06, 5.7578e-05],
        [1.1921e-06, 5.5909e-05],
        [2.8670e-05, 3.7134e-05],
        [1.6093e-06, 4.8816e-05],
        [1.4305e-05, 5.7220e-06],
        [2.5034e-06, 5.8949e-05],
        [1.4126e-05, 8.3983e-05],
        [2.3007e-05, 1.7643e-05],
        [5.3644e-06, 6.7174e-05],
        [1.4544e-05, 2.0087e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0516, 0.0708],
        [0.0936, 0.0390],
        [0.0493, 0.0741],
        [0.0486, 0.0751],
        [0.0483, 0.0757],
        [0.0861, 0.0424],
        [0.0495, 0.0738],
        [0.0480, 0.0761],
        [0.0726, 0.0503],
        [0.0485, 0.0753],
        [0.0960, 0.0380],
        [0.0489, 0.0746],
        [0.0543, 0.0673],
        [0.0828, 0.0441],
        [0.0506, 0.0722],
        [0.0715, 0.0511]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.318178
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-06, 5.9664e-05],
        [2.3842e-07, 2.5511e-05],
        [1.0729e-06, 4.6253e-05],
        [1.4305e-06, 7.0870e-05],
        [1.9431e-05, 9.0003e-06],
        [4.8876e-06, 8.7738e-05],
        [2.3305e-05, 1.3173e-05],
        [4.1723e-07, 1.4544e-05],
        [5.2452e-06, 8.3447e-07],
        [1.1027e-05, 1.1921e-05],
        [2.4438e-06, 5.7042e-05],
        [8.5831e-06, 5.9605e-06],
        [2.3723e-05, 1.8477e-05],
        [9.5963e-06, 6.3181e-06],
        [2.0862e-06, 7.6294e-05],
        [1.0431e-05, 8.3387e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0455, 0.0784],
        [0.0447, 0.0798],
        [0.0453, 0.0787],
        [0.0451, 0.0790],
        [0.0877, 0.0407],
        [0.0467, 0.0764],
        [0.0838, 0.0425],
        [0.0455, 0.0783],
        [0.1049, 0.0340],
        [0.0716, 0.0498],
        [0.0461, 0.0773],
        [0.0798, 0.0446],
        [0.0776, 0.0459],
        [0.0809, 0.0441],
        [0.0454, 0.0784],
        [0.0495, 0.0721]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.450660
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0683e-05, 1.1802e-05],
        [4.5300e-06, 7.7903e-05],
        [6.5565e-07, 3.4571e-05],
        [1.1504e-05, 1.2398e-05],
        [3.5763e-07, 3.6538e-05],
        [1.1504e-05, 7.0333e-06],
        [2.2590e-05, 2.1040e-05],
        [2.3723e-05, 1.8239e-05],
        [4.4107e-06, 8.9645e-05],
        [3.9935e-06, 4.1723e-07],
        [9.5367e-07, 4.6551e-05],
        [2.4676e-05, 1.3292e-05],
        [4.8876e-06, 8.4162e-05],
        [1.2875e-05, 8.1658e-06],
        [2.2709e-05, 1.1086e-05],
        [2.1458e-06, 6.2108e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0780, 0.0456],
        [0.0436, 0.0816],
        [0.0420, 0.0847],
        [0.0668, 0.0533],
        [0.0417, 0.0854],
        [0.0767, 0.0464],
        [0.0692, 0.0514],
        [0.0726, 0.0490],
        [0.0432, 0.0823],
        [0.1020, 0.0349],
        [0.0421, 0.0845],
        [0.0790, 0.0450],
        [0.0436, 0.0816],
        [0.0761, 0.0468],
        [0.0808, 0.0440],
        [0.0427, 0.0834]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.369469
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.0797e-06, 1.5318e-05],
        [1.9014e-05, 1.5378e-05],
        [4.0531e-06, 7.4744e-05],
        [3.2008e-05, 1.7703e-05],
        [2.2531e-05, 3.9518e-05],
        [1.4305e-06, 4.8995e-05],
        [1.2040e-05, 1.4067e-05],
        [5.3644e-07, 3.4273e-05],
        [2.0742e-05, 7.9870e-06],
        [2.1100e-05, 2.7716e-05],
        [1.9312e-05, 2.4378e-05],
        [2.8431e-05, 5.5671e-05],
        [3.6955e-06, 9.3341e-05],
        [1.7881e-06, 1.0866e-04],
        [1.9073e-06, 6.7770e-05],
        [8.3447e-06, 1.0926e-04]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0609, 0.0606],
        [0.0797, 0.0463],
        [0.0483, 0.0764],
        [0.0873, 0.0423],
        [0.0659, 0.0560],
        [0.0472, 0.0782],
        [0.0727, 0.0507],
        [0.0466, 0.0792],
        [0.0944, 0.0391],
        [0.0707, 0.0522],
        [0.0714, 0.0517],
        [0.0643, 0.0574],
        [0.0476, 0.0775],
        [0.0466, 0.0792],
        [0.0471, 0.0783],
        [0.0492, 0.0750]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.335831
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1563e-05, 1.6212e-05],
        [2.3842e-07, 2.6107e-05],
        [8.3447e-07, 4.9949e-05],
        [6.9737e-06, 1.2004e-04],
        [8.9407e-07, 9.4771e-06],
        [1.7405e-05, 1.4544e-05],
        [8.2254e-06, 3.0994e-06],
        [3.1292e-05, 1.3173e-05],
        [1.6689e-06, 4.6253e-05],
        [8.3447e-07, 3.0994e-05],
        [4.7684e-07, 2.6166e-05],
        [1.7226e-05, 2.1279e-05],
        [8.9407e-07, 3.6299e-05],
        [3.0637e-05, 4.8161e-05],
        [1.4424e-05, 1.0848e-05],
        [3.6597e-05, 3.3855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0686, 0.0530],
        [0.0457, 0.0797],
        [0.0460, 0.0791],
        [0.0478, 0.0761],
        [0.0493, 0.0738],
        [0.0780, 0.0467],
        [0.0936, 0.0389],
        [0.0915, 0.0398],
        [0.0469, 0.0777],
        [0.0465, 0.0784],
        [0.0461, 0.0790],
        [0.0708, 0.0514],
        [0.0464, 0.0785],
        [0.0668, 0.0545],
        [0.0801, 0.0455],
        [0.0761, 0.0478]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.573780
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4332e-05, 2.1160e-05],
        [1.9491e-05, 4.4107e-06],
        [7.1526e-07, 4.2140e-05],
        [3.5763e-06, 4.7684e-07],
        [2.8610e-05, 2.5630e-05],
        [1.9670e-05, 1.6570e-05],
        [3.0041e-05, 3.0994e-05],
        [2.5034e-06, 6.2644e-05],
        [1.6451e-05, 1.2636e-05],
        [1.9789e-05, 8.9407e-06],
        [3.3379e-06, 6.4492e-05],
        [2.0802e-05, 1.5020e-05],
        [2.9802e-06, 6.0499e-05],
        [2.0862e-06, 6.7830e-05],
        [1.1921e-06, 4.8101e-05],
        [2.5630e-06, 3.7849e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0761, 0.0467],
        [0.0926, 0.0383],
        [0.0417, 0.0852],
        [0.0990, 0.0358],
        [0.0695, 0.0511],
        [0.0705, 0.0503],
        [0.0670, 0.0530],
        [0.0426, 0.0834],
        [0.0722, 0.0492],
        [0.0816, 0.0435],
        [0.0431, 0.0825],
        [0.0733, 0.0485],
        [0.0430, 0.0827],
        [0.0422, 0.0841],
        [0.0420, 0.0846],
        [0.0437, 0.0813]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.427012
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[3.2783e-06, 3.5763e-07],
        [2.5511e-05, 1.7166e-05],
        [2.3723e-05, 2.3365e-05],
        [2.0981e-05, 1.4544e-05],
        [1.6987e-05, 1.1563e-05],
        [3.6120e-05, 3.6418e-05],
        [1.8477e-06, 5.6684e-05],
        [1.9670e-06, 5.0306e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1856, 0.0780],
        [0.1370, 0.1057],
        [0.1247, 0.1161],
        [0.1360, 0.1064],
        [0.1366, 0.1060],
        [0.1240, 0.1168],
        [0.0778, 0.1861],
        [0.0782, 0.1850]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.127489
acc:  0.97
Time taken to execute the en SA task with prompt type rare_synonyms, variation 5 and batchsize 16: 0:00:05.099709
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06],
        [6.5565e-06, 9.5367e-06]], device='cuda:0') torch.Size([112, 2])
answers_probs just softmax dim 0: tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
tensor([[0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089],
        [0.0089, 0.0089]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA rare_synonyms 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5570e-05, 1.7285e-05],
        [1.0967e-05, 8.3566e-05],
        [1.1921e-06, 4.4703e-05],
        [1.3351e-05, 5.4240e-06],
        [4.7684e-07, 1.3888e-05],
        [9.5367e-07, 4.5180e-05],
        [1.7881e-06, 6.2168e-05],
        [1.3649e-05, 7.5102e-06],
        [1.7285e-06, 3.9279e-05],
        [3.5167e-06, 5.7638e-05],
        [1.8477e-06, 6.6578e-05],
        [2.2650e-06, 4.6074e-05],
        [1.4961e-05, 6.7949e-06],
        [2.3007e-05, 9.4771e-06],
        [8.4043e-06, 5.1856e-06],
        [1.3232e-05, 8.0466e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0793, 0.0449],
        [0.0490, 0.0727],
        [0.0448, 0.0795],
        [0.0889, 0.0401],
        [0.0451, 0.0790],
        [0.0446, 0.0799],
        [0.0449, 0.0794],
        [0.0832, 0.0428],
        [0.0455, 0.0783],
        [0.0462, 0.0771],
        [0.0449, 0.0794],
        [0.0458, 0.0779],
        [0.0868, 0.0410],
        [0.0886, 0.0402],
        [0.0810, 0.0440],
        [0.0813, 0.0438]], device='cuda:0')
 Batch: 0 of rare_synonyms classification Duration: 0:00:00.440158
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-06, 4.9651e-05],
        [1.8477e-06, 2.3842e-07],
        [7.7486e-07, 2.4736e-05],
        [8.3447e-07, 3.0875e-05],
        [2.4199e-05, 1.2159e-05],
        [9.0599e-06, 5.4121e-05],
        [7.5102e-06, 9.3699e-05],
        [1.0908e-05, 6.4969e-06],
        [2.3842e-07, 2.0921e-05],
        [2.6226e-06, 7.4923e-05],
        [2.3842e-07, 2.2650e-05],
        [4.4107e-06, 7.9155e-05],
        [1.6034e-05, 7.5102e-06],
        [2.3723e-05, 1.7226e-05],
        [8.3447e-07, 2.9325e-05],
        [4.7684e-07, 5.0783e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0730],
        [0.1129, 0.0315],
        [0.0480, 0.0742],
        [0.0478, 0.0745],
        [0.0906, 0.0393],
        [0.0537, 0.0662],
        [0.0501, 0.0710],
        [0.0871, 0.0409],
        [0.0471, 0.0756],
        [0.0481, 0.0739],
        [0.0470, 0.0757],
        [0.0491, 0.0725],
        [0.0920, 0.0387],
        [0.0831, 0.0428],
        [0.0478, 0.0744],
        [0.0470, 0.0758]], device='cuda:0')
 Batch: 1 of rare_synonyms classification Duration: 0:00:00.411665
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3709e-06, 6.3300e-05],
        [2.0802e-05, 1.4186e-05],
        [3.8624e-05, 2.2173e-05],
        [1.7703e-05, 8.5831e-06],
        [3.2783e-06, 7.3016e-05],
        [4.1723e-07, 2.7180e-05],
        [3.2723e-05, 2.4319e-05],
        [4.3988e-05, 1.9372e-05],
        [1.8477e-06, 4.9889e-05],
        [1.7881e-07, 1.5259e-05],
        [1.8597e-05, 1.0848e-05],
        [1.4365e-05, 8.0466e-06],
        [1.6689e-06, 3.9220e-05],
        [4.7684e-06, 7.1466e-05],
        [4.1723e-07, 1.4663e-05],
        [3.0994e-06, 5.3644e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0824],
        [0.0761, 0.0464],
        [0.0792, 0.0446],
        [0.0823, 0.0429],
        [0.0438, 0.0806],
        [0.0426, 0.0829],
        [0.0745, 0.0474],
        [0.0840, 0.0420],
        [0.0435, 0.0812],
        [0.0425, 0.0832],
        [0.0789, 0.0447],
        [0.0797, 0.0443],
        [0.0437, 0.0808],
        [0.0447, 0.0790],
        [0.0432, 0.0818],
        [0.0984, 0.0359]], device='cuda:0')
 Batch: 2 of rare_synonyms classification Duration: 0:00:00.412499
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6120e-05, 1.9014e-05],
        [1.8597e-05, 1.1742e-05],
        [3.5942e-05, 1.6987e-05],
        [2.6822e-06, 6.8963e-05],
        [5.9605e-07, 3.5107e-05],
        [3.5167e-06, 5.5492e-05],
        [3.4571e-06, 1.3113e-06],
        [1.7881e-07, 2.0921e-05],
        [3.9339e-06, 1.0204e-04],
        [1.5497e-06, 3.0994e-05],
        [2.1577e-05, 2.3663e-05],
        [1.0133e-06, 4.6313e-05],
        [5.3644e-07, 2.9624e-05],
        [9.7156e-06, 3.7551e-06],
        [1.3828e-05, 9.2983e-06],
        [2.9743e-05, 5.4717e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0838, 0.0427],
        [0.0804, 0.0445],
        [0.0859, 0.0417],
        [0.0452, 0.0791],
        [0.0443, 0.0808],
        [0.0462, 0.0774],
        [0.0899, 0.0398],
        [0.0439, 0.0815],
        [0.0452, 0.0792],
        [0.0457, 0.0783],
        [0.0701, 0.0510],
        [0.0445, 0.0804],
        [0.0443, 0.0807],
        [0.0896, 0.0399],
        [0.0792, 0.0452],
        [0.0619, 0.0578]], device='cuda:0')
 Batch: 3 of rare_synonyms classification Duration: 0:00:00.483290
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 4.7028e-05],
        [1.0133e-06, 3.0339e-05],
        [1.1921e-06, 1.9372e-05],
        [8.1658e-06, 6.2823e-05],
        [1.0908e-05, 6.6757e-05],
        [1.7822e-05, 1.5855e-05],
        [2.6047e-05, 2.1279e-05],
        [1.5259e-05, 1.5378e-05],
        [3.3557e-05, 2.5153e-05],
        [1.2517e-06, 7.9572e-05],
        [5.4836e-06, 9.7573e-05],
        [2.8968e-05, 2.7418e-05],
        [2.6643e-05, 2.0742e-05],
        [1.7703e-05, 6.7353e-06],
        [3.0696e-05, 1.9372e-05],
        [1.1742e-05, 6.8545e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0433, 0.0843],
        [0.0439, 0.0831],
        [0.0451, 0.0810],
        [0.0477, 0.0765],
        [0.0489, 0.0746],
        [0.0722, 0.0506],
        [0.0737, 0.0495],
        [0.0700, 0.0522],
        [0.0753, 0.0485],
        [0.0432, 0.0845],
        [0.0448, 0.0814],
        [0.0711, 0.0513],
        [0.0746, 0.0489],
        [0.0877, 0.0416],
        [0.0785, 0.0465],
        [0.0800, 0.0456]], device='cuda:0')
 Batch: 4 of rare_synonyms classification Duration: 0:00:00.366403
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 3.6538e-05],
        [2.6882e-05, 1.3113e-05],
        [2.5034e-06, 6.3896e-05],
        [1.5140e-05, 7.9870e-06],
        [6.0201e-06, 1.0312e-04],
        [2.7061e-05, 1.4246e-05],
        [2.5034e-06, 7.4089e-05],
        [1.7881e-06, 2.9802e-07],
        [2.7418e-06, 7.8976e-05],
        [2.9564e-05, 1.5438e-05],
        [1.8775e-05, 1.6212e-05],
        [4.2379e-05, 3.0994e-05],
        [1.0729e-06, 4.1664e-05],
        [2.0146e-05, 2.1935e-05],
        [2.8312e-05, 1.2755e-05],
        [2.6286e-05, 3.3021e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0407, 0.0878],
        [0.0785, 0.0456],
        [0.0416, 0.0859],
        [0.0771, 0.0464],
        [0.0423, 0.0845],
        [0.0772, 0.0464],
        [0.0414, 0.0864],
        [0.0944, 0.0379],
        [0.0414, 0.0863],
        [0.0773, 0.0463],
        [0.0685, 0.0522],
        [0.0714, 0.0501],
        [0.0411, 0.0870],
        [0.0647, 0.0553],
        [0.0798, 0.0448],
        [0.0624, 0.0573]], device='cuda:0')
 Batch: 5 of rare_synonyms classification Duration: 0:00:00.359881
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 4.4942e-05],
        [4.5896e-06, 8.6606e-05],
        [2.0385e-05, 1.1027e-05],
        [4.8041e-05, 5.7936e-05],
        [8.3447e-07, 4.3988e-05],
        [2.1219e-05, 9.5367e-06],
        [2.9802e-07, 1.6391e-05],
        [2.6345e-05, 1.9550e-05],
        [2.7895e-05, 1.9908e-05],
        [2.4438e-06, 7.1526e-07],
        [3.6061e-05, 3.9935e-05],
        [8.3447e-07, 5.5790e-05],
        [1.7881e-07, 1.8060e-05],
        [2.5868e-05, 1.6332e-05],
        [1.6689e-06, 5.7340e-05],
        [1.5795e-05, 9.1195e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0428, 0.0836],
        [0.0444, 0.0807],
        [0.0807, 0.0443],
        [0.0664, 0.0539],
        [0.0430, 0.0833],
        [0.0841, 0.0426],
        [0.0429, 0.0834],
        [0.0749, 0.0478],
        [0.0756, 0.0473],
        [0.0914, 0.0391],
        [0.0678, 0.0528],
        [0.0428, 0.0836],
        [0.0426, 0.0840],
        [0.0779, 0.0460],
        [0.0434, 0.0825],
        [0.0795, 0.0450]], device='cuda:0')
 Batch: 6 of rare_synonyms classification Duration: 0:00:00.408363
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9431e-05, 1.1504e-05],
        [2.5630e-05, 5.8651e-05],
        [4.6790e-05, 3.6418e-05],
        [3.1590e-06, 4.1723e-07],
        [1.8299e-05, 1.0073e-05],
        [1.2577e-05, 1.0616e-04],
        [1.0729e-06, 4.6551e-05],
        [1.1921e-06, 4.2737e-05],
        [4.5896e-06, 8.1420e-05],
        [1.0133e-06, 4.8876e-05],
        [2.1517e-05, 1.0550e-05],
        [1.0729e-06, 3.7968e-05],
        [7.7486e-07, 3.4928e-05],
        [3.4153e-05, 3.2365e-05],
        [2.5630e-05, 1.6570e-05],
        [7.1526e-07, 2.8193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0812, 0.0440],
        [0.0587, 0.0608],
        [0.0760, 0.0469],
        [0.1048, 0.0341],
        [0.0826, 0.0432],
        [0.0482, 0.0741],
        [0.0443, 0.0805],
        [0.0445, 0.0802],
        [0.0457, 0.0781],
        [0.0442, 0.0807],
        [0.0847, 0.0421],
        [0.0445, 0.0801],
        [0.0443, 0.0806],
        [0.0724, 0.0493],
        [0.0795, 0.0449],
        [0.0444, 0.0804]], device='cuda:0')
 Batch: 7 of rare_synonyms classification Duration: 0:00:00.364909
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.8678e-06, 1.1468e-04],
        [4.2319e-06, 6.0618e-05],
        [1.5736e-05, 9.0599e-06],
        [1.4305e-06, 5.0962e-05],
        [2.3901e-05, 6.7353e-06],
        [3.4153e-05, 7.6413e-05],
        [3.7014e-05, 3.0220e-05],
        [3.5763e-07, 3.0696e-05],
        [2.3246e-06, 6.0499e-05],
        [1.6987e-05, 7.3910e-06],
        [1.0729e-06, 4.2439e-05],
        [2.0027e-05, 1.3113e-05],
        [1.7881e-06, 5.8174e-05],
        [3.3021e-05, 1.8656e-05],
        [1.4305e-06, 6.8665e-05],
        [4.0531e-06, 9.5367e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0473, 0.0760],
        [0.0474, 0.0759],
        [0.0837, 0.0430],
        [0.0456, 0.0789],
        [0.0968, 0.0371],
        [0.0604, 0.0595],
        [0.0770, 0.0467],
        [0.0449, 0.0801],
        [0.0461, 0.0781],
        [0.0891, 0.0404],
        [0.0455, 0.0791],
        [0.0812, 0.0443],
        [0.0457, 0.0787],
        [0.0841, 0.0428],
        [0.0453, 0.0794],
        [0.0598, 0.0601]], device='cuda:0')
 Batch: 8 of rare_synonyms classification Duration: 0:00:00.334311
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2650e-06, 4.8757e-05],
        [7.1526e-07, 3.5942e-05],
        [1.1921e-06, 5.1200e-05],
        [2.1994e-05, 1.2815e-05],
        [9.5367e-07, 4.7743e-05],
        [1.6689e-05, 1.0550e-05],
        [1.5497e-06, 6.2883e-05],
        [3.5763e-07, 7.3910e-06],
        [3.0756e-05, 4.9531e-05],
        [1.4305e-06, 4.6849e-05],
        [1.9491e-05, 2.9027e-05],
        [5.7817e-06, 9.1076e-05],
        [7.9274e-06, 3.2783e-06],
        [1.5318e-05, 1.7762e-05],
        [4.7088e-06, 6.5923e-05],
        [7.1526e-07, 3.4511e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0506, 0.0725],
        [0.0493, 0.0743],
        [0.0495, 0.0740],
        [0.0910, 0.0403],
        [0.0493, 0.0743],
        [0.0893, 0.0410],
        [0.0496, 0.0739],
        [0.0507, 0.0723],
        [0.0710, 0.0516],
        [0.0498, 0.0735],
        [0.0723, 0.0507],
        [0.0514, 0.0714],
        [0.0982, 0.0373],
        [0.0769, 0.0477],
        [0.0517, 0.0709],
        [0.0494, 0.0742]], device='cuda:0')
 Batch: 9 of rare_synonyms classification Duration: 0:00:00.568753
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8683e-05, 5.3287e-05],
        [2.3842e-07, 1.9968e-05],
        [1.8477e-06, 4.1008e-05],
        [3.4571e-06, 5.4061e-05],
        [1.7285e-06, 5.9187e-05],
        [2.2352e-05, 2.2650e-05],
        [7.1526e-07, 3.0041e-05],
        [3.2783e-06, 7.1526e-07],
        [1.0729e-05, 4.8280e-06],
        [1.6689e-06, 4.7922e-05],
        [4.0293e-05, 1.8716e-05],
        [3.0160e-05, 2.0742e-05],
        [1.0848e-05, 9.0599e-06],
        [3.9697e-05, 2.9743e-05],
        [2.1517e-05, 9.5963e-06],
        [9.5367e-07, 4.3213e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0636, 0.0562],
        [0.0423, 0.0845],
        [0.0436, 0.0819],
        [0.0444, 0.0805],
        [0.0430, 0.0831],
        [0.0686, 0.0520],
        [0.0428, 0.0836],
        [0.0949, 0.0376],
        [0.0833, 0.0429],
        [0.0432, 0.0827],
        [0.0827, 0.0432],
        [0.0755, 0.0473],
        [0.0720, 0.0496],
        [0.0740, 0.0483],
        [0.0834, 0.0428],
        [0.0427, 0.0837]], device='cuda:0')
 Batch: 10 of rare_synonyms classification Duration: 0:00:00.427883
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.5809e-05, 2.2054e-05],
        [1.8537e-05, 1.1444e-05],
        [9.4771e-06, 4.9472e-06],
        [4.1723e-07, 2.6047e-05],
        [4.1723e-06, 7.1466e-05],
        [2.3007e-05, 1.9193e-05],
        [1.6689e-06, 3.3915e-05],
        [1.6630e-05, 2.0981e-05],
        [1.9014e-05, 7.9870e-06],
        [4.3869e-05, 2.3484e-05],
        [4.2796e-05, 2.2352e-05],
        [3.9935e-06, 7.1526e-07],
        [2.9802e-07, 3.2008e-05],
        [2.3842e-07, 2.3723e-05],
        [6.5565e-07, 2.8253e-05],
        [2.1517e-05, 1.0967e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0683, 0.0521],
        [0.0740, 0.0482],
        [0.0769, 0.0463],
        [0.0405, 0.0880],
        [0.0421, 0.0846],
        [0.0688, 0.0518],
        [0.0418, 0.0853],
        [0.0620, 0.0575],
        [0.0806, 0.0442],
        [0.0765, 0.0466],
        [0.0769, 0.0464],
        [0.0931, 0.0383],
        [0.0402, 0.0886],
        [0.0403, 0.0885],
        [0.0408, 0.0874],
        [0.0773, 0.0461]], device='cuda:0')
 Batch: 11 of rare_synonyms classification Duration: 0:00:00.433791
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[4.7088e-06, 7.6532e-05],
        [1.6093e-06, 4.5240e-05],
        [2.7537e-05, 1.2815e-05],
        [2.2829e-05, 2.0623e-05],
        [1.4305e-06, 2.3842e-07],
        [1.3471e-05, 6.3777e-06],
        [1.4961e-05, 7.0930e-06],
        [1.6689e-05, 1.2934e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0767, 0.1882],
        [0.0749, 0.1927],
        [0.1432, 0.1008],
        [0.1224, 0.1179],
        [0.1705, 0.0846],
        [0.1426, 0.1012],
        [0.1426, 0.1012],
        [0.1271, 0.1135]], device='cuda:0')
 Batch: 12 of rare_synonyms classification Duration: 0:00:00.124972
acc:  0.965
Time taken to execute the en SA task with prompt type rare_synonyms, variation 6 and batchsize 16: 0:00:05.153635
path ['42', 'en', 'bloomz-mt', 'SA', 'rare_synonyms', 'prompt_id_6']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

prompt_type identical_modal has 10 prompts in it
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06],
        [4.9472e-06, 5.9605e-06]], device='cuda:0') torch.Size([102, 2])
answers_probs just softmax dim 0: tensor([[0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098]], device='cuda:0')
tensor([[0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 0 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.7486e-07, 4.3392e-05],
        [2.1040e-05, 2.9445e-05],
        [1.9550e-05, 1.7226e-05],
        [1.2696e-05, 8.5831e-06],
        [1.2934e-05, 6.6757e-06],
        [1.1504e-05, 6.3181e-06],
        [8.2850e-06, 5.6624e-06],
        [8.8215e-06, 5.2571e-05],
        [1.0192e-05, 3.5167e-06],
        [1.8477e-06, 2.3842e-07],
        [2.9802e-05, 2.0802e-05],
        [3.5763e-07, 3.5286e-05],
        [3.5763e-06, 5.7697e-05],
        [1.4305e-05, 2.3067e-05],
        [2.5630e-05, 1.4961e-05],
        [9.7752e-06, 3.5763e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0381, 0.0953],
        [0.0568, 0.0639],
        [0.0638, 0.0570],
        [0.0681, 0.0534],
        [0.0725, 0.0501],
        [0.0715, 0.0509],
        [0.0679, 0.0535],
        [0.0433, 0.0840],
        [0.0788, 0.0461],
        [0.0909, 0.0400],
        [0.0675, 0.0538],
        [0.0379, 0.0960],
        [0.0397, 0.0915],
        [0.0549, 0.0661],
        [0.0705, 0.0516],
        [0.0779, 0.0466]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.341633
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3292e-05, 3.9339e-06],
        [3.7551e-06, 5.6624e-05],
        [2.4080e-05, 4.7922e-05],
        [3.2663e-05, 2.1100e-05],
        [1.8477e-06, 3.7372e-05],
        [8.3447e-07, 3.5584e-05],
        [2.2709e-05, 1.3530e-05],
        [1.4305e-06, 5.9485e-05],
        [1.6570e-05, 1.0192e-05],
        [7.7486e-07, 3.6240e-05],
        [3.6359e-06, 1.5497e-06],
        [3.9339e-06, 6.8605e-05],
        [2.7776e-05, 1.5974e-05],
        [3.1590e-06, 6.7174e-05],
        [6.9141e-06, 2.4438e-06],
        [6.5565e-07, 3.7074e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0924, 0.0385],
        [0.0454, 0.0782],
        [0.0597, 0.0596],
        [0.0784, 0.0453],
        [0.0448, 0.0794],
        [0.0437, 0.0814],
        [0.0799, 0.0445],
        [0.0437, 0.0813],
        [0.0793, 0.0448],
        [0.0436, 0.0815],
        [0.0861, 0.0413],
        [0.0451, 0.0789],
        [0.0806, 0.0441],
        [0.0447, 0.0796],
        [0.0894, 0.0398],
        [0.0434, 0.0818]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.456281
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-07, 1.9848e-05],
        [2.6226e-06, 1.2636e-05],
        [2.8312e-05, 2.1219e-05],
        [1.8537e-05, 1.3232e-05],
        [3.5763e-06, 6.7294e-05],
        [1.7881e-07, 1.8597e-05],
        [2.1875e-05, 6.0797e-05],
        [1.7285e-06, 4.8876e-05],
        [1.5140e-05, 1.7822e-05],
        [8.9407e-06, 5.0664e-06],
        [1.7226e-05, 1.4722e-05],
        [9.7156e-06, 6.1393e-06],
        [1.9133e-05, 1.1623e-05],
        [1.2934e-05, 8.7619e-06],
        [1.6749e-05, 1.7405e-05],
        [3.8147e-06, 6.4075e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0428, 0.0857],
        [0.0504, 0.0728],
        [0.0752, 0.0488],
        [0.0761, 0.0483],
        [0.0446, 0.0822],
        [0.0428, 0.0857],
        [0.0553, 0.0664],
        [0.0439, 0.0836],
        [0.0672, 0.0546],
        [0.0803, 0.0457],
        [0.0728, 0.0504],
        [0.0783, 0.0469],
        [0.0791, 0.0464],
        [0.0770, 0.0477],
        [0.0693, 0.0530],
        [0.0449, 0.0818]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.341021
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.2187e-05, 1.7107e-05],
        [1.9670e-06, 4.0472e-05],
        [2.2352e-05, 1.6630e-05],
        [2.9802e-05, 1.1742e-05],
        [4.7684e-07, 3.6716e-05],
        [2.6941e-05, 2.8193e-05],
        [2.9802e-07, 3.1710e-05],
        [2.3365e-05, 1.0550e-05],
        [4.1723e-07, 2.6643e-05],
        [2.3842e-07, 2.0266e-05],
        [2.9802e-07, 6.9141e-06],
        [1.1921e-06, 5.9962e-05],
        [2.7418e-06, 4.2021e-05],
        [1.7703e-05, 1.6093e-05],
        [5.0664e-06, 8.8811e-05],
        [8.3447e-07, 6.4194e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0900, 0.0400],
        [0.0491, 0.0734],
        [0.0831, 0.0434],
        [0.0960, 0.0375],
        [0.0475, 0.0759],
        [0.0764, 0.0472],
        [0.0473, 0.0762],
        [0.0933, 0.0386],
        [0.0476, 0.0757],
        [0.0474, 0.0760],
        [0.0488, 0.0738],
        [0.0478, 0.0754],
        [0.0498, 0.0723],
        [0.0791, 0.0456],
        [0.0494, 0.0729],
        [0.0475, 0.0759]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.360964
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9670e-06, 5.8949e-05],
        [7.1526e-07, 3.9160e-05],
        [1.0133e-06, 3.6001e-05],
        [1.0073e-05, 6.6161e-06],
        [5.9605e-07, 3.6836e-05],
        [9.5367e-07, 3.8564e-05],
        [1.0967e-05, 9.5665e-05],
        [6.5565e-07, 2.7478e-05],
        [1.3351e-05, 7.2718e-06],
        [4.1723e-07, 1.0490e-05],
        [1.2517e-05, 1.2338e-05],
        [3.2961e-05, 2.6047e-05],
        [1.9968e-05, 1.7464e-05],
        [6.2585e-06, 8.9109e-05],
        [1.6510e-05, 3.8147e-06],
        [7.1526e-07, 2.9802e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0481, 0.0750],
        [0.0474, 0.0760],
        [0.0478, 0.0753],
        [0.0851, 0.0423],
        [0.0473, 0.0762],
        [0.0477, 0.0756],
        [0.0516, 0.0699],
        [0.0476, 0.0756],
        [0.0889, 0.0405],
        [0.0484, 0.0745],
        [0.0770, 0.0468],
        [0.0814, 0.0443],
        [0.0794, 0.0454],
        [0.0497, 0.0725],
        [0.1049, 0.0344],
        [0.0477, 0.0756]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.256465
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2829e-05, 1.4067e-05],
        [4.1723e-06, 6.5923e-05],
        [1.6510e-05, 9.2387e-06],
        [3.9935e-06, 7.7486e-07],
        [4.6492e-06, 8.2076e-05],
        [8.1062e-06, 5.5432e-06],
        [1.2398e-05, 5.0664e-06],
        [3.8743e-06, 8.7738e-05],
        [1.4365e-05, 5.7817e-06],
        [1.4186e-05, 6.3181e-06],
        [2.0862e-06, 6.1870e-05],
        [1.5497e-06, 3.5286e-05],
        [2.3842e-07, 9.8944e-06],
        [1.6153e-05, 7.0930e-06],
        [1.4722e-05, 4.6492e-06],
        [1.7285e-06, 5.8651e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0732, 0.0480],
        [0.0418, 0.0840],
        [0.0748, 0.0469],
        [0.0910, 0.0386],
        [0.0416, 0.0844],
        [0.0714, 0.0492],
        [0.0801, 0.0438],
        [0.0411, 0.0854],
        [0.0804, 0.0437],
        [0.0787, 0.0446],
        [0.0407, 0.0862],
        [0.0411, 0.0854],
        [0.0403, 0.0870],
        [0.0789, 0.0445],
        [0.0843, 0.0417],
        [0.0405, 0.0866]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.416557
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 3.1352e-05],
        [1.4007e-05, 7.6294e-06],
        [2.7418e-05, 1.5020e-05],
        [1.1921e-06, 3.4869e-05],
        [1.7583e-05, 1.2457e-05],
        [1.0014e-05, 3.5167e-06],
        [1.1325e-05, 6.6757e-06],
        [2.6882e-05, 2.5272e-05],
        [3.3557e-05, 2.6166e-05],
        [5.3644e-07, 2.6345e-05],
        [1.5676e-05, 9.8348e-06],
        [1.0133e-06, 4.6372e-05],
        [3.5763e-06, 5.3644e-05],
        [2.9206e-06, 6.9022e-05],
        [3.0398e-06, 9.5367e-07],
        [2.5630e-06, 6.1274e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0422, 0.0846],
        [0.0788, 0.0453],
        [0.0787, 0.0454],
        [0.0426, 0.0837],
        [0.0740, 0.0482],
        [0.0864, 0.0413],
        [0.0774, 0.0461],
        [0.0690, 0.0517],
        [0.0723, 0.0493],
        [0.0421, 0.0848],
        [0.0762, 0.0468],
        [0.0421, 0.0847],
        [0.0439, 0.0813],
        [0.0429, 0.0831],
        [0.0883, 0.0404],
        [0.0429, 0.0831]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.407011
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 2.3842e-05],
        [2.6822e-06, 5.4181e-05],
        [2.2650e-06, 4.3154e-05],
        [7.1526e-07, 2.8610e-05],
        [1.6332e-05, 1.1921e-05],
        [5.9605e-07, 3.3557e-05],
        [7.1526e-07, 3.0696e-05],
        [4.7684e-07, 2.2113e-05],
        [4.1723e-07, 2.9802e-05],
        [1.1623e-05, 6.6161e-06],
        [2.5630e-06, 4.7207e-05],
        [2.0862e-06, 4.7982e-05],
        [3.2783e-06, 4.1723e-07],
        [1.0133e-06, 3.8981e-05],
        [8.5235e-06, 7.6294e-06],
        [1.1146e-05, 9.0003e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0492, 0.0730],
        [0.0502, 0.0716],
        [0.0503, 0.0714],
        [0.0491, 0.0732],
        [0.0854, 0.0421],
        [0.0487, 0.0737],
        [0.0490, 0.0733],
        [0.0489, 0.0734],
        [0.0485, 0.0740],
        [0.0906, 0.0397],
        [0.0504, 0.0712],
        [0.0499, 0.0720],
        [0.1163, 0.0309],
        [0.0491, 0.0731],
        [0.0812, 0.0443],
        [0.0833, 0.0431]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.405299
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.2319e-06, 6.9439e-05],
        [1.4901e-06, 2.9683e-05],
        [6.9141e-06, 5.5432e-05],
        [1.6093e-06, 5.1200e-05],
        [2.9802e-07, 2.3961e-05],
        [1.9073e-06, 5.6744e-05],
        [1.0967e-05, 1.2755e-05],
        [9.8348e-06, 6.5565e-06],
        [3.3379e-06, 4.1723e-07],
        [1.1921e-07, 1.3530e-05],
        [1.1861e-05, 1.3053e-05],
        [1.7583e-05, 6.7949e-06],
        [1.4901e-06, 5.1916e-05],
        [1.2517e-06, 5.7817e-05],
        [1.7285e-05, 6.6757e-06],
        [1.5438e-05, 5.4836e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0460, 0.0766],
        [0.0456, 0.0774],
        [0.0485, 0.0726],
        [0.0448, 0.0787],
        [0.0440, 0.0802],
        [0.0449, 0.0786],
        [0.0690, 0.0511],
        [0.0792, 0.0445],
        [0.1057, 0.0334],
        [0.0438, 0.0804],
        [0.0699, 0.0504],
        [0.0894, 0.0395],
        [0.0447, 0.0789],
        [0.0444, 0.0795],
        [0.0894, 0.0394],
        [0.0909, 0.0388]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.366472
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2948e-05, 9.8944e-06],
        [2.1756e-05, 1.9491e-05],
        [3.3557e-05, 5.0008e-05],
        [2.9802e-07, 2.0504e-05],
        [3.2008e-05, 3.7730e-05],
        [2.9325e-05, 2.2531e-05],
        [1.7881e-07, 1.3947e-05],
        [1.9848e-05, 9.6560e-06],
        [2.6226e-06, 2.3842e-07],
        [4.1723e-07, 2.4676e-05],
        [1.5199e-05, 1.7464e-05],
        [1.3709e-06, 4.0710e-05],
        [1.1623e-05, 1.7703e-05],
        [2.1696e-05, 2.7657e-05],
        [2.3603e-05, 5.7995e-05],
        [2.4438e-06, 4.4942e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0835, 0.0435],
        [0.0703, 0.0516],
        [0.0620, 0.0585],
        [0.0421, 0.0862],
        [0.0657, 0.0553],
        [0.0730, 0.0497],
        [0.0420, 0.0864],
        [0.0813, 0.0446],
        [0.1038, 0.0350],
        [0.0422, 0.0860],
        [0.0661, 0.0549],
        [0.0429, 0.0846],
        [0.0617, 0.0588],
        [0.0644, 0.0563],
        [0.0554, 0.0655],
        [0.0437, 0.0831]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.450029
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 2.1458e-05],
        [6.2585e-06, 2.3842e-06],
        [2.5570e-05, 1.3173e-05],
        [1.5497e-05, 7.3910e-06],
        [3.8147e-06, 6.5565e-07],
        [8.8811e-06, 3.6359e-06],
        [8.7619e-06, 6.9916e-05],
        [1.1325e-06, 4.0710e-05],
        [1.2517e-06, 2.7061e-05],
        [1.1146e-05, 4.5896e-06],
        [5.3644e-07, 2.1815e-05],
        [7.1526e-07, 3.7372e-05],
        [9.1195e-06, 3.5763e-06],
        [2.3842e-07, 2.1517e-05],
        [1.8835e-05, 1.3173e-05],
        [1.6093e-05, 8.5235e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0403, 0.0869],
        [0.0812, 0.0432],
        [0.0761, 0.0460],
        [0.0774, 0.0452],
        [0.0923, 0.0379],
        [0.0800, 0.0438],
        [0.0440, 0.0797],
        [0.0404, 0.0867],
        [0.0411, 0.0852],
        [0.0799, 0.0439],
        [0.0403, 0.0869],
        [0.0401, 0.0874],
        [0.0807, 0.0434],
        [0.0398, 0.0881],
        [0.0709, 0.0494],
        [0.0756, 0.0463]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.437421
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.4901e-05],
        [1.7881e-06, 5.5015e-05],
        [1.2398e-05, 6.7949e-06],
        [2.9981e-05, 1.1027e-05],
        [3.5763e-07, 5.7220e-06],
        [1.2279e-05, 1.0967e-05],
        [1.7941e-05, 1.3649e-05],
        [1.8477e-06, 4.7445e-05],
        [1.9073e-06, 4.7266e-05],
        [2.2054e-06, 6.1274e-05],
        [1.5378e-05, 1.0014e-05],
        [6.1989e-06, 3.6955e-06],
        [2.3842e-07, 1.5378e-05],
        [1.3649e-05, 6.7353e-06],
        [1.5497e-06, 5.0902e-05],
        [3.1233e-05, 1.5676e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0432, 0.0825],
        [0.0443, 0.0806],
        [0.0819, 0.0436],
        [0.0891, 0.0401],
        [0.0455, 0.0785],
        [0.0728, 0.0491],
        [0.0757, 0.0472],
        [0.0445, 0.0801],
        [0.0446, 0.0800],
        [0.0444, 0.0804],
        [0.0786, 0.0454],
        [0.0803, 0.0445],
        [0.0436, 0.0819],
        [0.0838, 0.0426],
        [0.0442, 0.0808],
        [0.0835, 0.0428]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.556581
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.6405e-05, 6.9559e-05],
        [1.5497e-06, 4.3154e-05],
        [1.5616e-05, 9.5963e-06],
        [5.9605e-07, 3.5107e-05],
        [2.3246e-06, 4.3750e-05],
        [2.3842e-07, 1.7941e-05],
        [2.3544e-05, 1.2517e-05],
        [3.5763e-07, 8.4639e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1284, 0.1139],
        [0.1010, 0.1449],
        [0.1812, 0.0808],
        [0.0992, 0.1475],
        [0.1026, 0.1426],
        [0.0988, 0.1481],
        [0.1873, 0.0781],
        [0.1016, 0.1441]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.162760
acc:  0.965
Time taken to execute the en SA task with prompt type identical_modal, variation 0 and batchsize 16: 0:00:04.977625
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_0']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06],
        [5.7817e-06, 7.3910e-06]], device='cuda:0') torch.Size([104, 2])
answers_probs just softmax dim 0: tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 1 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1027e-05, 1.0610e-05],
        [1.1623e-05, 4.1723e-06],
        [1.5259e-05, 8.8811e-06],
        [1.1921e-06, 4.7863e-05],
        [1.0133e-06, 3.8981e-05],
        [1.7285e-06, 4.1485e-05],
        [5.9605e-08, 4.3511e-06],
        [2.4438e-06, 4.3929e-05],
        [1.5318e-05, 1.4484e-05],
        [4.1723e-07, 2.6226e-05],
        [2.3425e-05, 1.4305e-05],
        [1.8597e-05, 4.7088e-06],
        [1.7881e-07, 1.5736e-05],
        [1.3769e-05, 1.1265e-05],
        [8.5831e-06, 1.1426e-04],
        [2.2769e-05, 2.0385e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0721, 0.0496],
        [0.0905, 0.0395],
        [0.0815, 0.0439],
        [0.0444, 0.0805],
        [0.0445, 0.0805],
        [0.0451, 0.0793],
        [0.0439, 0.0814],
        [0.0457, 0.0783],
        [0.0725, 0.0494],
        [0.0440, 0.0812],
        [0.0806, 0.0444],
        [0.0963, 0.0372],
        [0.0438, 0.0816],
        [0.0751, 0.0476],
        [0.0465, 0.0770],
        [0.0735, 0.0487]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.322870
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.8505e-05, 3.1173e-05],
        [1.9372e-05, 8.1062e-06],
        [2.0325e-05, 1.3530e-05],
        [2.3186e-05, 1.1504e-05],
        [2.6941e-05, 1.1861e-05],
        [5.1856e-06, 1.0061e-04],
        [4.3511e-06, 7.7307e-05],
        [7.9274e-06, 9.9599e-05],
        [1.1325e-06, 4.4107e-05],
        [9.1791e-06, 6.5207e-05],
        [8.9407e-07, 2.3961e-05],
        [1.6272e-05, 7.0930e-06],
        [3.3557e-05, 2.4736e-05],
        [2.9206e-06, 9.5367e-07],
        [2.6882e-05, 3.5107e-05],
        [2.1458e-06, 5.9962e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0712, 0.0504],
        [0.0829, 0.0432],
        [0.0747, 0.0480],
        [0.0800, 0.0448],
        [0.0821, 0.0437],
        [0.0430, 0.0833],
        [0.0432, 0.0830],
        [0.0441, 0.0813],
        [0.0420, 0.0853],
        [0.0464, 0.0773],
        [0.0425, 0.0844],
        [0.0822, 0.0436],
        [0.0729, 0.0492],
        [0.0871, 0.0412],
        [0.0632, 0.0567],
        [0.0424, 0.0845]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.406764
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4961e-05, 1.6689e-05],
        [5.1856e-06, 6.8486e-05],
        [3.7074e-05, 4.4405e-05],
        [2.5451e-05, 2.3365e-05],
        [8.9407e-07, 2.8193e-05],
        [2.8670e-05, 1.7643e-05],
        [2.6822e-06, 5.9605e-07],
        [1.0908e-05, 6.4969e-06],
        [3.5465e-05, 2.8729e-05],
        [1.6928e-05, 1.9908e-05],
        [4.7684e-06, 6.1810e-05],
        [2.0921e-05, 1.5795e-05],
        [3.8862e-05, 2.1815e-05],
        [2.3127e-05, 9.4771e-06],
        [7.7486e-07, 2.7239e-05],
        [4.2915e-06, 7.8619e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0638, 0.0571],
        [0.0427, 0.0854],
        [0.0627, 0.0581],
        [0.0670, 0.0544],
        [0.0410, 0.0889],
        [0.0739, 0.0493],
        [0.0902, 0.0404],
        [0.0744, 0.0490],
        [0.0691, 0.0527],
        [0.0630, 0.0579],
        [0.0427, 0.0853],
        [0.0703, 0.0518],
        [0.0755, 0.0483],
        [0.0809, 0.0451],
        [0.0409, 0.0891],
        [0.0419, 0.0870]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.258236
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9610e-05, 1.4007e-05],
        [3.5763e-07, 1.2696e-05],
        [2.9206e-06, 6.5565e-07],
        [1.1802e-05, 8.5235e-06],
        [3.6478e-05, 2.7955e-05],
        [1.7524e-05, 2.8253e-05],
        [5.3644e-07, 4.3631e-05],
        [1.0133e-06, 4.4644e-05],
        [1.8477e-06, 4.5717e-05],
        [2.6166e-05, 1.6630e-05],
        [1.1981e-05, 4.4703e-06],
        [2.3842e-06, 6.6161e-05],
        [8.3447e-07, 3.4034e-05],
        [1.8954e-05, 8.8811e-06],
        [2.5034e-06, 6.4850e-05],
        [3.6955e-06, 5.5611e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0772, 0.0462],
        [0.0443, 0.0805],
        [0.0974, 0.0366],
        [0.0770, 0.0463],
        [0.0758, 0.0470],
        [0.0631, 0.0564],
        [0.0436, 0.0817],
        [0.0440, 0.0809],
        [0.0448, 0.0796],
        [0.0794, 0.0449],
        [0.0892, 0.0399],
        [0.0446, 0.0799],
        [0.0441, 0.0808],
        [0.0851, 0.0419],
        [0.0447, 0.0797],
        [0.0458, 0.0777]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.319472
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1265e-05, 4.5896e-06],
        [2.7418e-06, 6.3241e-05],
        [1.1325e-06, 3.7253e-05],
        [3.7551e-06, 4.9949e-05],
        [4.5896e-06, 7.7307e-05],
        [1.2577e-05, 1.4603e-05],
        [1.0788e-05, 6.0678e-05],
        [1.0729e-06, 4.8578e-05],
        [6.4373e-06, 8.1182e-05],
        [1.5736e-05, 9.1195e-06],
        [1.0431e-05, 7.3910e-06],
        [6.5565e-07, 4.2379e-05],
        [1.9073e-06, 1.7881e-07],
        [8.3447e-07, 2.7478e-05],
        [2.6286e-05, 2.0683e-05],
        [6.5565e-07, 2.8491e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0922, 0.0387],
        [0.0472, 0.0756],
        [0.0466, 0.0765],
        [0.0486, 0.0735],
        [0.0479, 0.0745],
        [0.0719, 0.0496],
        [0.0527, 0.0678],
        [0.0463, 0.0771],
        [0.0487, 0.0732],
        [0.0853, 0.0418],
        [0.0813, 0.0439],
        [0.0460, 0.0776],
        [0.1130, 0.0316],
        [0.0466, 0.0765],
        [0.0793, 0.0450],
        [0.0463, 0.0770]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.405912
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 4.6909e-05],
        [1.7285e-06, 6.4194e-05],
        [1.4305e-06, 4.6015e-05],
        [4.8876e-06, 7.1108e-05],
        [3.3379e-06, 5.5134e-05],
        [1.3947e-05, 1.0073e-05],
        [4.0531e-06, 7.7486e-07],
        [2.9802e-07, 2.1398e-05],
        [1.9133e-05, 1.2517e-05],
        [2.3842e-07, 2.2233e-05],
        [2.8610e-06, 4.9412e-05],
        [2.0862e-06, 7.2777e-05],
        [6.3181e-06, 9.6500e-05],
        [1.4305e-06, 4.6790e-05],
        [2.4259e-05, 1.8299e-05],
        [2.7418e-06, 6.8665e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0513, 0.0708],
        [0.0509, 0.0713],
        [0.0511, 0.0710],
        [0.0529, 0.0686],
        [0.0525, 0.0691],
        [0.0887, 0.0409],
        [0.1148, 0.0316],
        [0.0503, 0.0722],
        [0.0908, 0.0400],
        [0.0501, 0.0724],
        [0.0524, 0.0693],
        [0.0510, 0.0712],
        [0.0527, 0.0688],
        [0.0511, 0.0710],
        [0.0877, 0.0414],
        [0.0515, 0.0704]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.434346
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1325e-06, 7.5221e-05],
        [1.3709e-06, 3.2604e-05],
        [2.0862e-06, 3.4690e-05],
        [4.5896e-06, 7.6652e-05],
        [1.3649e-05, 8.2254e-06],
        [2.8610e-06, 5.3823e-05],
        [1.8716e-05, 9.9540e-06],
        [1.5557e-05, 2.4676e-05],
        [6.5565e-07, 1.4186e-05],
        [1.5199e-05, 1.1861e-05],
        [1.1921e-06, 5.0008e-05],
        [2.3842e-06, 5.5015e-05],
        [2.0862e-05, 1.4663e-05],
        [2.8610e-06, 4.8280e-05],
        [3.2127e-05, 3.5524e-05],
        [1.9848e-05, 1.3411e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0469, 0.0778],
        [0.0481, 0.0759],
        [0.0489, 0.0746],
        [0.0489, 0.0747],
        [0.0863, 0.0423],
        [0.0486, 0.0751],
        [0.0888, 0.0411],
        [0.0681, 0.0537],
        [0.0483, 0.0756],
        [0.0811, 0.0450],
        [0.0473, 0.0772],
        [0.0482, 0.0758],
        [0.0832, 0.0439],
        [0.0489, 0.0747],
        [0.0743, 0.0491],
        [0.0840, 0.0435]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.430547
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4305e-06, 5.3644e-05],
        [1.9610e-05, 1.1265e-05],
        [2.9922e-05, 2.3842e-05],
        [8.9407e-07, 4.1008e-05],
        [4.7684e-07, 2.7299e-05],
        [1.5557e-05, 1.4842e-05],
        [2.3007e-05, 2.1279e-05],
        [2.3246e-06, 6.6102e-05],
        [9.5367e-07, 3.3736e-05],
        [3.7014e-05, 1.5438e-05],
        [2.5034e-06, 1.2338e-05],
        [3.4809e-05, 1.3828e-05],
        [2.5272e-05, 5.3465e-05],
        [3.2783e-05, 3.2544e-05],
        [1.0729e-06, 3.5405e-05],
        [1.7881e-07, 1.7583e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0793],
        [0.0841, 0.0431],
        [0.0778, 0.0466],
        [0.0455, 0.0796],
        [0.0453, 0.0800],
        [0.0744, 0.0488],
        [0.0749, 0.0484],
        [0.0461, 0.0786],
        [0.0458, 0.0791],
        [0.0903, 0.0402],
        [0.0528, 0.0687],
        [0.0912, 0.0398],
        [0.0614, 0.0590],
        [0.0736, 0.0493],
        [0.0459, 0.0790],
        [0.0450, 0.0805]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.339326
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0431e-05, 7.7844e-05],
        [7.9274e-06, 3.0398e-06],
        [9.5367e-07, 4.2796e-05],
        [6.0201e-06, 8.7440e-05],
        [1.1265e-05, 3.9339e-06],
        [2.5392e-05, 7.5817e-05],
        [4.1723e-07, 5.9605e-06],
        [1.3292e-05, 1.2219e-05],
        [1.1444e-05, 4.2319e-06],
        [1.3590e-05, 1.5616e-05],
        [8.3447e-07, 4.3094e-05],
        [2.8729e-05, 7.3433e-05],
        [1.2100e-05, 8.1062e-06],
        [6.5565e-07, 3.1352e-05],
        [2.3246e-06, 6.3002e-05],
        [1.8120e-05, 9.1791e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0484, 0.0745],
        [0.0887, 0.0407],
        [0.0440, 0.0820],
        [0.0459, 0.0786],
        [0.0903, 0.0399],
        [0.0553, 0.0652],
        [0.0459, 0.0785],
        [0.0725, 0.0498],
        [0.0893, 0.0404],
        [0.0685, 0.0526],
        [0.0439, 0.0822],
        [0.0570, 0.0633],
        [0.0783, 0.0461],
        [0.0439, 0.0821],
        [0.0446, 0.0809],
        [0.0836, 0.0432]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.557073
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.8678e-06, 4.9472e-06],
        [1.3173e-05, 8.4043e-06],
        [3.3379e-06, 4.1723e-07],
        [3.2783e-06, 5.3048e-05],
        [1.8239e-05, 6.3181e-06],
        [1.8477e-05, 9.2387e-06],
        [3.2187e-06, 7.4565e-05],
        [5.3644e-06, 6.8963e-05],
        [2.3842e-07, 1.6451e-05],
        [2.4438e-06, 4.4703e-05],
        [1.3709e-06, 4.0591e-05],
        [2.0862e-06, 6.3360e-05],
        [1.4305e-05, 1.1152e-04],
        [1.1325e-06, 3.7134e-05],
        [1.4305e-06, 4.6968e-05],
        [2.8610e-06, 5.9187e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0851, 0.0417],
        [0.0848, 0.0418],
        [0.1120, 0.0317],
        [0.0488, 0.0727],
        [0.0968, 0.0367],
        [0.0897, 0.0396],
        [0.0480, 0.0739],
        [0.0495, 0.0717],
        [0.0467, 0.0760],
        [0.0485, 0.0732],
        [0.0476, 0.0746],
        [0.0476, 0.0746],
        [0.0516, 0.0688],
        [0.0474, 0.0748],
        [0.0474, 0.0748],
        [0.0482, 0.0736]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.408168
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 1.7762e-05],
        [3.4153e-05, 2.1338e-05],
        [2.8610e-06, 6.9261e-05],
        [3.3677e-05, 4.9412e-05],
        [4.7684e-07, 3.6597e-05],
        [1.6809e-05, 1.1981e-05],
        [1.5318e-05, 6.6161e-06],
        [3.5763e-07, 8.2254e-06],
        [2.9802e-07, 2.2948e-05],
        [2.5511e-05, 1.1563e-05],
        [1.4663e-05, 8.1658e-06],
        [1.9789e-05, 2.1577e-05],
        [2.3842e-05, 1.8001e-05],
        [1.5557e-05, 4.9472e-06],
        [2.0385e-05, 1.8656e-05],
        [3.8922e-05, 2.7835e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0405, 0.0894],
        [0.0735, 0.0493],
        [0.0413, 0.0876],
        [0.0596, 0.0608],
        [0.0402, 0.0900],
        [0.0712, 0.0508],
        [0.0799, 0.0453],
        [0.0414, 0.0874],
        [0.0402, 0.0900],
        [0.0791, 0.0458],
        [0.0755, 0.0480],
        [0.0641, 0.0565],
        [0.0702, 0.0516],
        [0.0849, 0.0427],
        [0.0670, 0.0541],
        [0.0712, 0.0509]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.368651
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.9605e-07, 3.4928e-05],
        [3.9935e-06, 8.2850e-05],
        [2.8610e-06, 4.7684e-07],
        [2.7418e-05, 1.9133e-05],
        [2.8968e-05, 1.6153e-05],
        [1.0788e-05, 7.1526e-06],
        [2.0623e-05, 1.9193e-05],
        [1.7464e-05, 8.2850e-06],
        [1.7762e-05, 1.0073e-05],
        [3.2783e-05, 1.9252e-05],
        [2.4438e-06, 5.4657e-05],
        [1.5914e-05, 7.3910e-06],
        [1.2279e-05, 7.9870e-06],
        [2.2054e-05, 1.7047e-05],
        [3.5763e-07, 2.2292e-05],
        [7.7486e-07, 3.9160e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0391, 0.0919],
        [0.0402, 0.0893],
        [0.0906, 0.0397],
        [0.0693, 0.0519],
        [0.0730, 0.0492],
        [0.0701, 0.0512],
        [0.0645, 0.0557],
        [0.0757, 0.0474],
        [0.0728, 0.0494],
        [0.0722, 0.0498],
        [0.0401, 0.0896],
        [0.0761, 0.0472],
        [0.0705, 0.0510],
        [0.0676, 0.0532],
        [0.0390, 0.0920],
        [0.0392, 0.0917]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.410653
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.8477e-06, 7.5102e-05],
        [2.3603e-05, 3.4034e-05],
        [2.8074e-05, 6.7294e-05],
        [3.2544e-05, 1.7405e-05],
        [3.5763e-06, 4.1723e-07],
        [1.8775e-05, 7.6890e-06],
        [3.7134e-05, 1.9729e-05],
        [1.9073e-06, 3.2783e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0773, 0.1851],
        [0.1137, 0.1259],
        [0.1013, 0.1413],
        [0.1448, 0.0988],
        [0.1848, 0.0774],
        [0.1534, 0.0933],
        [0.1450, 0.0987],
        [0.0797, 0.1795]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.213595
acc:  0.97
Time taken to execute the en SA task with prompt type identical_modal, variation 1 and batchsize 16: 0:00:04.896449
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_1']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06],
        [8.4043e-06, 7.6890e-06]], device='cuda:0') torch.Size([102, 2])
answers_probs just softmax dim 0: tensor([[0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098]], device='cuda:0')
tensor([[0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098],
        [0.0098, 0.0098]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 2 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.4043e-06, 1.0979e-04],
        [4.0531e-06, 6.4135e-05],
        [2.8610e-06, 2.3842e-07],
        [1.6332e-05, 1.3649e-05],
        [1.7762e-05, 8.5831e-06],
        [1.9073e-06, 6.8307e-05],
        [7.7486e-07, 4.1425e-05],
        [2.6822e-06, 7.1347e-05],
        [1.4305e-06, 4.5240e-05],
        [3.0339e-05, 7.1168e-05],
        [1.0967e-05, 5.2691e-05],
        [1.6093e-06, 4.6432e-05],
        [1.1981e-05, 7.8678e-06],
        [6.5565e-07, 3.9220e-05],
        [2.7359e-05, 2.8431e-05],
        [1.4961e-05, 9.6560e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0481, 0.0746],
        [0.0475, 0.0755],
        [0.1127, 0.0318],
        [0.0772, 0.0464],
        [0.0879, 0.0408],
        [0.0460, 0.0779],
        [0.0456, 0.0786],
        [0.0464, 0.0772],
        [0.0462, 0.0777],
        [0.0604, 0.0594],
        [0.0532, 0.0674],
        [0.0463, 0.0774],
        [0.0819, 0.0438],
        [0.0455, 0.0788],
        [0.0731, 0.0490],
        [0.0822, 0.0436]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.457991
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3067e-05, 3.1531e-05],
        [4.7684e-07, 6.4969e-06],
        [1.7285e-06, 5.4479e-05],
        [1.3709e-06, 5.7876e-05],
        [7.1526e-07, 2.3007e-05],
        [1.2815e-05, 1.4007e-05],
        [4.1723e-07, 4.8637e-05],
        [1.8537e-05, 1.1861e-05],
        [1.9014e-05, 7.1526e-06],
        [2.0266e-06, 3.8207e-05],
        [1.4544e-05, 1.1444e-05],
        [3.4332e-05, 2.6524e-05],
        [1.1921e-07, 1.5140e-05],
        [1.1861e-05, 1.4544e-05],
        [1.7166e-05, 7.1526e-06],
        [2.4736e-05, 1.8954e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0660, 0.0549],
        [0.0463, 0.0783],
        [0.0446, 0.0813],
        [0.0442, 0.0819],
        [0.0446, 0.0813],
        [0.0697, 0.0520],
        [0.0436, 0.0831],
        [0.0795, 0.0456],
        [0.0894, 0.0405],
        [0.0455, 0.0797],
        [0.0757, 0.0479],
        [0.0760, 0.0477],
        [0.0436, 0.0832],
        [0.0677, 0.0535],
        [0.0876, 0.0414],
        [0.0761, 0.0476]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.559081
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.1338e-05],
        [1.3173e-05, 1.1092e-04],
        [2.5034e-06, 4.6611e-05],
        [1.2577e-05, 2.2113e-05],
        [2.9802e-07, 8.1062e-06],
        [8.3447e-07, 3.6955e-05],
        [2.6286e-05, 3.5942e-05],
        [1.6391e-05, 2.7835e-05],
        [1.0312e-05, 7.5102e-06],
        [1.7107e-05, 8.0466e-06],
        [2.3842e-07, 1.6451e-05],
        [3.5822e-05, 1.8418e-05],
        [3.0100e-05, 1.9133e-05],
        [3.5167e-05, 2.5332e-05],
        [3.5763e-06, 8.4877e-05],
        [1.4305e-06, 4.3213e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0458, 0.0796],
        [0.0504, 0.0724],
        [0.0477, 0.0765],
        [0.0651, 0.0560],
        [0.0470, 0.0777],
        [0.0463, 0.0787],
        [0.0692, 0.0528],
        [0.0657, 0.0556],
        [0.0809, 0.0451],
        [0.0895, 0.0408],
        [0.0460, 0.0793],
        [0.0878, 0.0416],
        [0.0836, 0.0437],
        [0.0811, 0.0450],
        [0.0472, 0.0773],
        [0.0468, 0.0780]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.369076
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.6359e-06, 8.4162e-05],
        [9.5367e-06, 9.1791e-06],
        [2.1696e-05, 1.6272e-05],
        [5.3644e-07, 2.8074e-05],
        [6.5565e-07, 2.6941e-05],
        [1.7881e-07, 2.1756e-05],
        [2.1875e-05, 1.8299e-05],
        [9.4771e-06, 6.8545e-06],
        [3.9935e-06, 7.2241e-05],
        [5.1856e-06, 1.0717e-04],
        [2.9206e-06, 6.0618e-05],
        [2.4974e-05, 5.2094e-05],
        [3.5763e-07, 2.5332e-05],
        [3.6955e-05, 2.0266e-05],
        [5.1856e-06, 1.1384e-05],
        [3.2187e-06, 7.8797e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0499, 0.0738],
        [0.0796, 0.0462],
        [0.0847, 0.0434],
        [0.0488, 0.0755],
        [0.0490, 0.0751],
        [0.0482, 0.0763],
        [0.0825, 0.0446],
        [0.0855, 0.0431],
        [0.0504, 0.0730],
        [0.0501, 0.0735],
        [0.0501, 0.0735],
        [0.0662, 0.0556],
        [0.0485, 0.0759],
        [0.0913, 0.0403],
        [0.0654, 0.0563],
        [0.0498, 0.0740]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.323674
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1981e-05, 1.4424e-05],
        [9.8944e-06, 4.3511e-06],
        [9.7156e-06, 7.3373e-05],
        [1.2279e-05, 5.3048e-06],
        [2.6226e-06, 7.0810e-05],
        [7.0930e-06, 4.6492e-06],
        [1.9670e-06, 5.1200e-05],
        [2.2829e-05, 1.4424e-05],
        [2.5153e-05, 1.6868e-05],
        [1.7166e-05, 1.2457e-05],
        [6.4373e-06, 4.4703e-06],
        [4.2915e-06, 7.1526e-07],
        [7.7486e-07, 4.6909e-05],
        [2.9802e-07, 2.3663e-05],
        [3.2544e-05, 2.4557e-05],
        [2.3842e-07, 2.0504e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0629, 0.0570],
        [0.0800, 0.0448],
        [0.0449, 0.0798],
        [0.0803, 0.0446],
        [0.0414, 0.0865],
        [0.0731, 0.0490],
        [0.0415, 0.0864],
        [0.0737, 0.0486],
        [0.0727, 0.0493],
        [0.0713, 0.0502],
        [0.0721, 0.0497],
        [0.0941, 0.0381],
        [0.0406, 0.0882],
        [0.0404, 0.0886],
        [0.0706, 0.0507],
        [0.0404, 0.0886]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.431781
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-06, 5.3942e-05],
        [1.4961e-05, 6.9737e-06],
        [3.4869e-05, 1.4782e-05],
        [2.3246e-06, 4.9651e-05],
        [3.3677e-05, 1.9968e-05],
        [1.5259e-05, 9.2983e-06],
        [1.3828e-05, 8.5235e-06],
        [1.7822e-05, 1.3232e-05],
        [2.7597e-05, 1.5616e-05],
        [1.8537e-05, 7.8022e-05],
        [3.6359e-06, 7.1585e-05],
        [1.8418e-05, 1.8120e-05],
        [2.9504e-05, 1.6034e-05],
        [3.7491e-05, 4.3511e-05],
        [5.3644e-07, 1.4603e-05],
        [1.9670e-06, 6.4611e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0412, 0.0881],
        [0.0797, 0.0455],
        [0.0814, 0.0446],
        [0.0422, 0.0861],
        [0.0755, 0.0481],
        [0.0750, 0.0484],
        [0.0748, 0.0485],
        [0.0716, 0.0507],
        [0.0763, 0.0475],
        [0.0488, 0.0743],
        [0.0423, 0.0858],
        [0.0667, 0.0544],
        [0.0771, 0.0471],
        [0.0640, 0.0567],
        [0.0418, 0.0869],
        [0.0415, 0.0874]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.427937
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4305e-06, 1.8120e-05],
        [3.3617e-05, 2.4974e-05],
        [2.7299e-05, 2.2650e-05],
        [1.8358e-05, 1.9729e-05],
        [1.4305e-05, 8.2254e-06],
        [1.5736e-05, 7.3314e-06],
        [2.9206e-06, 5.3942e-05],
        [5.3644e-06, 7.9036e-05],
        [1.4305e-05, 6.4969e-06],
        [1.2279e-05, 1.2577e-05],
        [1.2457e-05, 4.8876e-06],
        [4.1127e-06, 6.3658e-05],
        [7.1526e-07, 4.0352e-05],
        [5.3644e-07, 4.0114e-05],
        [6.6161e-06, 1.1295e-04],
        [1.2696e-05, 8.4043e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0451, 0.0800],
        [0.0745, 0.0485],
        [0.0725, 0.0498],
        [0.0679, 0.0532],
        [0.0792, 0.0456],
        [0.0830, 0.0435],
        [0.0442, 0.0818],
        [0.0447, 0.0808],
        [0.0835, 0.0433],
        [0.0688, 0.0525],
        [0.0860, 0.0420],
        [0.0446, 0.0810],
        [0.0427, 0.0846],
        [0.0425, 0.0849],
        [0.0443, 0.0814],
        [0.0766, 0.0472]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.362504
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0967e-05, 6.8724e-05],
        [6.5565e-07, 2.4974e-05],
        [1.8477e-06, 6.6519e-05],
        [2.5213e-05, 6.8009e-05],
        [2.0862e-06, 6.4135e-05],
        [2.1458e-06, 2.3842e-07],
        [1.4424e-05, 1.0014e-05],
        [8.3447e-07, 4.0531e-05],
        [1.0014e-05, 5.8413e-06],
        [8.9407e-07, 3.7849e-05],
        [1.8477e-06, 4.1783e-05],
        [3.9041e-05, 1.6272e-05],
        [2.0564e-05, 1.4246e-05],
        [3.3021e-05, 2.4736e-05],
        [3.1531e-05, 3.1769e-05],
        [1.2457e-05, 5.1260e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0477, 0.0747],
        [0.0427, 0.0835],
        [0.0427, 0.0834],
        [0.0545, 0.0654],
        [0.0429, 0.0830],
        [0.1023, 0.0348],
        [0.0750, 0.0475],
        [0.0424, 0.0840],
        [0.0782, 0.0456],
        [0.0425, 0.0837],
        [0.0434, 0.0821],
        [0.0842, 0.0423],
        [0.0751, 0.0475],
        [0.0736, 0.0484],
        [0.0684, 0.0521],
        [0.0844, 0.0422]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.406930
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.5557e-05, 8.8811e-06],
        [1.8954e-05, 7.9870e-06],
        [2.0981e-05, 9.1791e-06],
        [1.8358e-05, 1.6451e-05],
        [5.9605e-07, 3.1590e-05],
        [1.5497e-06, 2.9743e-05],
        [2.5630e-06, 3.5763e-07],
        [1.0550e-05, 7.2718e-06],
        [1.5497e-06, 6.5446e-05],
        [2.6345e-05, 2.4378e-05],
        [1.3113e-06, 5.1260e-05],
        [1.5199e-05, 5.2452e-06],
        [3.0637e-05, 4.8995e-05],
        [1.1325e-06, 4.4882e-05],
        [9.5367e-07, 3.7313e-05],
        [1.1325e-06, 3.1829e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0778, 0.0455],
        [0.0832, 0.0425],
        [0.0826, 0.0429],
        [0.0698, 0.0507],
        [0.0420, 0.0844],
        [0.0433, 0.0818],
        [0.0991, 0.0357],
        [0.0744, 0.0475],
        [0.0422, 0.0840],
        [0.0692, 0.0511],
        [0.0422, 0.0838],
        [0.0866, 0.0409],
        [0.0605, 0.0585],
        [0.0422, 0.0839],
        [0.0422, 0.0838],
        [0.0426, 0.0830]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.365180
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-06, 5.1796e-05],
        [1.5736e-05, 8.2850e-06],
        [1.9968e-05, 1.3828e-05],
        [3.3379e-06, 6.0558e-05],
        [2.3901e-05, 1.4603e-05],
        [1.9670e-06, 7.2420e-05],
        [3.5763e-07, 3.5703e-05],
        [1.4842e-05, 1.3828e-05],
        [4.7684e-07, 2.7776e-05],
        [2.4855e-05, 1.1563e-05],
        [1.2398e-05, 7.6890e-06],
        [3.5763e-07, 3.2842e-05],
        [8.3447e-07, 3.6061e-05],
        [1.0133e-06, 4.6492e-05],
        [1.1921e-07, 1.7464e-05],
        [2.7418e-06, 3.5763e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0458, 0.0770],
        [0.0847, 0.0417],
        [0.0794, 0.0445],
        [0.0463, 0.0762],
        [0.0818, 0.0431],
        [0.0452, 0.0782],
        [0.0444, 0.0795],
        [0.0738, 0.0478],
        [0.0447, 0.0789],
        [0.0870, 0.0406],
        [0.0815, 0.0433],
        [0.0445, 0.0794],
        [0.0450, 0.0785],
        [0.0449, 0.0786],
        [0.0443, 0.0797],
        [0.1065, 0.0331]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.319433
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4186e-05, 1.7226e-05],
        [4.4107e-06, 8.3745e-05],
        [2.2054e-06, 3.8743e-05],
        [8.9407e-07, 3.4511e-05],
        [5.4836e-06, 9.6381e-05],
        [1.1921e-06, 6.8247e-05],
        [1.3888e-05, 1.6451e-05],
        [2.0862e-06, 6.3062e-05],
        [4.1723e-07, 3.0577e-05],
        [5.9605e-07, 4.0293e-05],
        [1.9133e-05, 1.0729e-05],
        [2.6643e-05, 1.2696e-05],
        [2.7418e-06, 5.2452e-05],
        [1.0729e-06, 4.4465e-05],
        [2.4438e-06, 3.5763e-07],
        [2.9206e-06, 5.2154e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0755, 0.0477],
        [0.0505, 0.0713],
        [0.0507, 0.0710],
        [0.0493, 0.0731],
        [0.0507, 0.0710],
        [0.0489, 0.0737],
        [0.0760, 0.0474],
        [0.0496, 0.0726],
        [0.0487, 0.0739],
        [0.0488, 0.0739],
        [0.0912, 0.0395],
        [0.0946, 0.0381],
        [0.0505, 0.0713],
        [0.0492, 0.0732],
        [0.1150, 0.0313],
        [0.0507, 0.0711]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.344146
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4571e-05, 2.7776e-05],
        [1.6212e-05, 4.3511e-06],
        [2.0862e-05, 1.7166e-05],
        [4.7684e-07, 3.1233e-05],
        [1.3113e-05, 9.4175e-06],
        [1.3590e-05, 1.4365e-05],
        [1.4782e-05, 5.0664e-06],
        [2.9802e-07, 1.2517e-05],
        [4.4107e-06, 1.9073e-06],
        [1.7524e-05, 1.2100e-05],
        [1.7881e-07, 2.1696e-05],
        [1.7881e-07, 1.5736e-05],
        [1.8418e-05, 1.7166e-05],
        [1.7047e-05, 1.1146e-05],
        [1.4842e-05, 1.1623e-05],
        [9.2387e-06, 3.3379e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0659, 0.0550],
        [0.0833, 0.0435],
        [0.0655, 0.0553],
        [0.0384, 0.0943],
        [0.0678, 0.0535],
        [0.0616, 0.0589],
        [0.0797, 0.0455],
        [0.0388, 0.0936],
        [0.0761, 0.0476],
        [0.0684, 0.0530],
        [0.0382, 0.0950],
        [0.0383, 0.0947],
        [0.0635, 0.0571],
        [0.0693, 0.0523],
        [0.0663, 0.0547],
        [0.0789, 0.0459]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.458616
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.6391e-05, 8.6427e-06],
        [8.3447e-07, 7.4148e-05],
        [1.8477e-06, 6.4671e-05],
        [1.0729e-06, 4.6134e-05],
        [4.1723e-06, 7.7903e-05],
        [8.9407e-07, 3.6478e-05],
        [1.3113e-06, 5.8532e-05],
        [1.7881e-07, 7.8678e-06]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.2113, 0.0708],
        [0.1110, 0.1347],
        [0.1129, 0.1325],
        [0.1123, 0.1331],
        [0.1155, 0.1295],
        [0.1125, 0.1330],
        [0.1122, 0.1333],
        [0.1123, 0.1332]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.123848
acc:  0.97
Time taken to execute the en SA task with prompt type identical_modal, variation 2 and batchsize 16: 0:00:04.970747
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_2']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06],
        [5.8413e-06, 7.9274e-06]], device='cuda:0') torch.Size([104, 2])
answers_probs just softmax dim 0: tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 3 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.8477e-06, 2.3842e-07],
        [1.4007e-05, 6.1393e-06],
        [1.1086e-05, 7.0930e-06],
        [2.4676e-05, 6.9797e-05],
        [3.3140e-05, 4.0293e-05],
        [1.5497e-06, 4.5061e-05],
        [2.3603e-05, 4.1127e-05],
        [4.7684e-07, 2.7716e-05],
        [1.0133e-06, 3.5048e-05],
        [2.3842e-07, 1.8775e-05],
        [1.4901e-06, 5.2214e-05],
        [9.5963e-06, 6.4373e-06],
        [8.7619e-06, 7.2658e-05],
        [7.1526e-07, 3.4153e-05],
        [2.8849e-05, 3.0696e-05],
        [3.9935e-06, 6.2346e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1086, 0.0332],
        [0.0897, 0.0402],
        [0.0824, 0.0437],
        [0.0581, 0.0620],
        [0.0703, 0.0513],
        [0.0463, 0.0779],
        [0.0645, 0.0559],
        [0.0455, 0.0791],
        [0.0460, 0.0783],
        [0.0453, 0.0795],
        [0.0460, 0.0783],
        [0.0815, 0.0442],
        [0.0499, 0.0723],
        [0.0457, 0.0789],
        [0.0727, 0.0496],
        [0.0475, 0.0758]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.347713
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2755e-05, 9.2983e-06],
        [3.1650e-05, 2.5451e-05],
        [1.6093e-06, 5.7459e-05],
        [2.8014e-06, 4.4346e-05],
        [2.8074e-05, 1.9729e-05],
        [1.8418e-05, 9.1195e-06],
        [1.3113e-06, 3.9399e-05],
        [2.9266e-05, 1.6809e-05],
        [3.1590e-06, 8.9407e-07],
        [1.6391e-05, 1.2696e-05],
        [2.3127e-05, 6.3896e-05],
        [1.8895e-05, 1.2517e-05],
        [2.0146e-05, 1.5438e-05],
        [2.9802e-07, 2.2888e-05],
        [1.2100e-05, 1.5020e-05],
        [6.1393e-06, 8.8692e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0720, 0.0506],
        [0.0703, 0.0518],
        [0.0415, 0.0877],
        [0.0429, 0.0850],
        [0.0727, 0.0501],
        [0.0789, 0.0462],
        [0.0417, 0.0873],
        [0.0762, 0.0478],
        [0.0881, 0.0414],
        [0.0710, 0.0513],
        [0.0527, 0.0691],
        [0.0737, 0.0494],
        [0.0712, 0.0512],
        [0.0409, 0.0890],
        [0.0631, 0.0577],
        [0.0431, 0.0845]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.407659
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3603e-05, 2.2352e-05],
        [3.5763e-07, 1.0490e-05],
        [1.0729e-06, 4.1842e-05],
        [3.1829e-05, 1.2159e-05],
        [1.1325e-06, 4.1544e-05],
        [1.8060e-05, 1.6689e-05],
        [7.7486e-07, 3.7551e-05],
        [1.3113e-05, 5.7817e-06],
        [1.8656e-05, 1.8656e-05],
        [1.5557e-05, 7.6294e-06],
        [4.7684e-07, 2.2829e-05],
        [4.6492e-06, 8.4043e-05],
        [1.3173e-05, 1.3709e-05],
        [2.2888e-05, 1.5974e-05],
        [1.8477e-05, 7.8082e-06],
        [1.0133e-06, 3.4273e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0706, 0.0509],
        [0.0436, 0.0823],
        [0.0433, 0.0830],
        [0.0871, 0.0413],
        [0.0434, 0.0828],
        [0.0710, 0.0506],
        [0.0431, 0.0834],
        [0.0845, 0.0425],
        [0.0696, 0.0516],
        [0.0826, 0.0435],
        [0.0431, 0.0833],
        [0.0445, 0.0807],
        [0.0689, 0.0521],
        [0.0761, 0.0472],
        [0.0853, 0.0421],
        [0.0435, 0.0827]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.291600
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1815e-05, 9.4175e-06],
        [1.6093e-05, 5.6624e-06],
        [1.1325e-06, 5.9903e-05],
        [1.3590e-05, 1.5795e-05],
        [1.7881e-06, 3.2008e-05],
        [1.5259e-05, 6.4373e-06],
        [1.4246e-05, 8.4043e-06],
        [1.3053e-05, 7.5102e-06],
        [1.9073e-06, 4.5776e-05],
        [1.6749e-05, 1.0312e-05],
        [1.6630e-05, 8.2254e-06],
        [2.8014e-06, 3.5763e-07],
        [2.1398e-05, 1.5616e-05],
        [6.5565e-07, 2.4676e-05],
        [1.7881e-07, 2.0802e-05],
        [9.9540e-06, 3.8743e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0753, 0.0472],
        [0.0785, 0.0453],
        [0.0382, 0.0932],
        [0.0595, 0.0598],
        [0.0395, 0.0901],
        [0.0757, 0.0470],
        [0.0703, 0.0506],
        [0.0707, 0.0503],
        [0.0390, 0.0912],
        [0.0696, 0.0511],
        [0.0731, 0.0486],
        [0.0909, 0.0391],
        [0.0668, 0.0533],
        [0.0384, 0.0925],
        [0.0378, 0.0942],
        [0.0769, 0.0462]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.415636
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 3.8147e-05],
        [8.3447e-07, 3.4571e-05],
        [2.2650e-06, 2.9802e-07],
        [3.9935e-06, 8.7619e-05],
        [1.1742e-05, 7.2122e-06],
        [1.8477e-06, 6.0737e-05],
        [1.0729e-06, 4.9353e-05],
        [7.7486e-07, 3.0398e-05],
        [2.9325e-05, 2.3365e-05],
        [1.0252e-05, 6.4373e-06],
        [1.6391e-05, 7.2718e-06],
        [3.5763e-06, 6.4015e-05],
        [4.7684e-07, 2.8372e-05],
        [1.7881e-06, 3.5882e-05],
        [1.0133e-06, 4.0114e-05],
        [6.5565e-07, 3.7193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0481, 0.0741],
        [0.0483, 0.0737],
        [0.1142, 0.0312],
        [0.0493, 0.0722],
        [0.0877, 0.0406],
        [0.0486, 0.0733],
        [0.0482, 0.0739],
        [0.0484, 0.0736],
        [0.0823, 0.0433],
        [0.0872, 0.0408],
        [0.0943, 0.0377],
        [0.0497, 0.0716],
        [0.0480, 0.0742],
        [0.0495, 0.0720],
        [0.0484, 0.0736],
        [0.0480, 0.0742]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.369982
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1146e-05, 1.1921e-05],
        [7.1526e-07, 4.0233e-05],
        [1.6689e-06, 6.3479e-05],
        [1.4901e-06, 3.6836e-05],
        [8.8811e-06, 8.5831e-06],
        [4.5300e-06, 7.4685e-05],
        [3.8147e-06, 6.5565e-07],
        [1.1146e-05, 3.8743e-06],
        [3.2067e-05, 1.8239e-05],
        [2.3842e-07, 1.0908e-05],
        [1.6034e-05, 8.1062e-06],
        [2.7001e-05, 1.4246e-05],
        [1.8477e-06, 5.6148e-05],
        [1.4246e-05, 8.1658e-06],
        [7.8678e-06, 6.2287e-05],
        [4.7684e-07, 3.1412e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0684, 0.0518],
        [0.0429, 0.0826],
        [0.0433, 0.0819],
        [0.0439, 0.0808],
        [0.0701, 0.0505],
        [0.0447, 0.0793],
        [0.0990, 0.0358],
        [0.0886, 0.0400],
        [0.0798, 0.0444],
        [0.0431, 0.0822],
        [0.0819, 0.0432],
        [0.0812, 0.0437],
        [0.0435, 0.0814],
        [0.0796, 0.0445],
        [0.0472, 0.0751],
        [0.0428, 0.0828]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.413798
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-06, 2.9802e-07],
        [1.3113e-06, 2.6762e-05],
        [1.9670e-06, 5.6088e-05],
        [6.5565e-07, 3.7491e-05],
        [2.2054e-05, 1.3411e-05],
        [1.4305e-06, 5.9426e-05],
        [5.9605e-07, 2.4915e-05],
        [3.4571e-06, 6.8367e-05],
        [7.1526e-07, 3.1531e-05],
        [1.4603e-05, 4.5300e-06],
        [1.4186e-05, 1.7166e-05],
        [9.5367e-07, 2.8491e-05],
        [1.6510e-05, 6.4969e-06],
        [3.0994e-05, 1.2517e-05],
        [1.0908e-05, 9.5129e-05],
        [5.3644e-07, 3.4392e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1075, 0.0327],
        [0.0467, 0.0753],
        [0.0461, 0.0763],
        [0.0453, 0.0775],
        [0.0829, 0.0424],
        [0.0456, 0.0771],
        [0.0456, 0.0771],
        [0.0467, 0.0752],
        [0.0455, 0.0772],
        [0.0955, 0.0368],
        [0.0700, 0.0502],
        [0.0460, 0.0764],
        [0.0913, 0.0385],
        [0.0908, 0.0387],
        [0.0494, 0.0712],
        [0.0452, 0.0777]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.342421
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.4240e-06, 9.5844e-05],
        [1.8299e-05, 1.6153e-05],
        [8.5235e-06, 5.8115e-05],
        [2.0385e-05, 1.4722e-05],
        [2.9802e-07, 2.3663e-05],
        [3.8147e-06, 4.1723e-07],
        [2.1100e-05, 1.8775e-05],
        [3.0398e-06, 6.1274e-05],
        [9.1195e-06, 3.5167e-06],
        [2.3246e-06, 4.8637e-05],
        [9.4771e-06, 6.7949e-06],
        [2.6107e-05, 1.1504e-05],
        [1.1444e-05, 6.0797e-06],
        [2.6345e-05, 1.5616e-05],
        [3.2783e-06, 5.5075e-05],
        [3.8147e-06, 5.7220e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0427, 0.0835],
        [0.0688, 0.0518],
        [0.0460, 0.0775],
        [0.0723, 0.0493],
        [0.0410, 0.0870],
        [0.0997, 0.0358],
        [0.0687, 0.0519],
        [0.0424, 0.0840],
        [0.0833, 0.0428],
        [0.0423, 0.0842],
        [0.0724, 0.0492],
        [0.0810, 0.0440],
        [0.0777, 0.0459],
        [0.0758, 0.0470],
        [0.0428, 0.0833],
        [0.0431, 0.0828]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.362949
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-06, 5.2333e-05],
        [2.9802e-07, 2.1279e-05],
        [3.5107e-05, 2.4140e-05],
        [3.5763e-07, 3.8743e-05],
        [3.3975e-06, 7.2718e-05],
        [8.8215e-06, 5.4955e-05],
        [3.5763e-07, 3.4213e-05],
        [1.7881e-07, 2.0325e-05],
        [1.4722e-05, 8.7023e-06],
        [1.4782e-05, 1.0312e-05],
        [1.9670e-06, 4.9770e-05],
        [2.9802e-07, 2.3782e-05],
        [1.6749e-05, 4.5300e-06],
        [1.8179e-05, 7.2718e-06],
        [2.5630e-06, 6.4850e-05],
        [4.1723e-07, 6.4969e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0488, 0.0735],
        [0.0479, 0.0747],
        [0.0855, 0.0419],
        [0.0477, 0.0751],
        [0.0495, 0.0725],
        [0.0543, 0.0660],
        [0.0478, 0.0750],
        [0.0477, 0.0751],
        [0.0887, 0.0404],
        [0.0852, 0.0420],
        [0.0491, 0.0730],
        [0.0479, 0.0749],
        [0.1039, 0.0345],
        [0.0966, 0.0371],
        [0.0491, 0.0730],
        [0.0502, 0.0713]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.549540
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-06, 5.5313e-05],
        [2.1517e-05, 1.8299e-05],
        [9.4175e-06, 6.4969e-06],
        [2.5630e-06, 4.7565e-05],
        [1.9133e-05, 1.1921e-05],
        [1.7881e-07, 1.5616e-05],
        [2.9802e-07, 1.6749e-05],
        [3.9935e-06, 6.5565e-07],
        [1.1921e-06, 7.6354e-05],
        [5.9605e-07, 2.7120e-05],
        [2.1100e-05, 2.9504e-05],
        [6.6757e-06, 2.4438e-06],
        [7.1526e-07, 2.4498e-05],
        [1.8775e-05, 1.3709e-05],
        [1.9670e-06, 4.4167e-05],
        [4.3511e-06, 7.0632e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0465, 0.0766],
        [0.0766, 0.0465],
        [0.0806, 0.0442],
        [0.0470, 0.0759],
        [0.0826, 0.0431],
        [0.0451, 0.0790],
        [0.0454, 0.0785],
        [0.1054, 0.0338],
        [0.0453, 0.0787],
        [0.0456, 0.0782],
        [0.0677, 0.0526],
        [0.0928, 0.0384],
        [0.0459, 0.0776],
        [0.0795, 0.0448],
        [0.0466, 0.0765],
        [0.0473, 0.0754]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.440114
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2994e-05, 4.7088e-06],
        [2.2650e-06, 6.2168e-05],
        [1.2934e-05, 7.7486e-06],
        [8.3447e-07, 3.3736e-05],
        [3.6359e-06, 1.3709e-06],
        [2.9087e-05, 3.2187e-05],
        [1.7405e-05, 2.0146e-05],
        [2.8610e-06, 6.6280e-05],
        [1.2457e-05, 1.5020e-05],
        [2.1458e-06, 4.4584e-05],
        [9.8348e-06, 3.2783e-06],
        [2.5332e-05, 1.5974e-05],
        [3.1054e-05, 2.5570e-05],
        [1.4246e-05, 2.1577e-05],
        [2.8789e-05, 1.3888e-05],
        [6.3777e-06, 4.1127e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0804, 0.0455],
        [0.0400, 0.0914],
        [0.0721, 0.0507],
        [0.0395, 0.0924],
        [0.0797, 0.0458],
        [0.0620, 0.0589],
        [0.0613, 0.0596],
        [0.0402, 0.0909],
        [0.0607, 0.0602],
        [0.0404, 0.0905],
        [0.0817, 0.0447],
        [0.0712, 0.0513],
        [0.0668, 0.0547],
        [0.0574, 0.0636],
        [0.0757, 0.0482],
        [0.0709, 0.0516]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.488531
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.0279e-05, 2.3186e-05],
        [1.1981e-05, 9.8348e-06],
        [1.9073e-06, 5.5015e-05],
        [4.7684e-07, 2.5153e-05],
        [2.2233e-05, 5.0843e-05],
        [2.0444e-05, 6.0022e-05],
        [2.7299e-05, 4.7147e-05],
        [3.4571e-06, 5.1022e-05],
        [1.6987e-05, 1.1683e-05],
        [1.1921e-07, 1.5795e-05],
        [9.8348e-06, 5.7220e-06],
        [1.1921e-07, 1.4126e-05],
        [3.3379e-06, 4.1723e-07],
        [1.2159e-05, 1.0550e-05],
        [2.0862e-06, 4.3452e-05],
        [2.5630e-06, 6.9201e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0779, 0.0464],
        [0.0765, 0.0472],
        [0.0457, 0.0791],
        [0.0450, 0.0803],
        [0.0599, 0.0603],
        [0.0570, 0.0635],
        [0.0638, 0.0567],
        [0.0471, 0.0768],
        [0.0799, 0.0452],
        [0.0445, 0.0812],
        [0.0832, 0.0435],
        [0.0446, 0.0811],
        [0.1075, 0.0336],
        [0.0755, 0.0479],
        [0.0463, 0.0781],
        [0.0458, 0.0789]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.361624
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.4722e-05, 2.5988e-05],
        [4.1723e-07, 7.2718e-06],
        [4.1723e-07, 3.4511e-05],
        [1.1504e-05, 4.2915e-06],
        [5.3644e-07, 3.4630e-05],
        [2.5034e-06, 4.7743e-05],
        [1.1325e-06, 4.2260e-05],
        [2.3603e-05, 1.3232e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1359, 0.1063],
        [0.0999, 0.1446],
        [0.0958, 0.1508],
        [0.1961, 0.0737],
        [0.0961, 0.1503],
        [0.0995, 0.1452],
        [0.0971, 0.1487],
        [0.1796, 0.0804]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.213561
acc:  0.945
Time taken to execute the en SA task with prompt type identical_modal, variation 3 and batchsize 16: 0:00:05.025717
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_3']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05],
        [8.4639e-06, 1.0133e-05]], device='cuda:0') torch.Size([104, 2])
answers_probs just softmax dim 0: tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 4 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.5763e-07, 2.5094e-05],
        [2.6822e-06, 3.5763e-07],
        [4.1723e-07, 4.3869e-05],
        [9.8944e-06, 6.7353e-06],
        [1.7345e-05, 1.1086e-05],
        [2.2650e-06, 5.6803e-05],
        [3.4571e-06, 5.7280e-05],
        [8.9407e-07, 4.1544e-05],
        [1.0610e-05, 3.9339e-06],
        [4.5896e-06, 6.7949e-05],
        [6.0201e-06, 9.2566e-05],
        [2.6226e-06, 6.9320e-05],
        [3.6359e-06, 7.1764e-05],
        [4.8876e-06, 8.7678e-05],
        [3.0994e-06, 5.2750e-05],
        [2.9802e-07, 2.0802e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0492, 0.0729],
        [0.1172, 0.0306],
        [0.0489, 0.0732],
        [0.0879, 0.0408],
        [0.0892, 0.0402],
        [0.0504, 0.0711],
        [0.0513, 0.0698],
        [0.0495, 0.0724],
        [0.1006, 0.0356],
        [0.0516, 0.0694],
        [0.0515, 0.0695],
        [0.0503, 0.0713],
        [0.0509, 0.0704],
        [0.0511, 0.0701],
        [0.0512, 0.0699],
        [0.0492, 0.0729]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.326266
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1815e-05, 2.8670e-05],
        [1.2577e-05, 1.1861e-05],
        [1.6570e-05, 1.9252e-05],
        [3.9935e-06, 5.9128e-05],
        [2.9802e-07, 2.4259e-05],
        [4.7684e-07, 3.0458e-05],
        [5.2452e-06, 8.3327e-05],
        [1.7405e-05, 1.0312e-05],
        [3.5763e-07, 2.5630e-05],
        [1.8716e-05, 1.3292e-05],
        [2.4259e-05, 5.2512e-05],
        [1.5497e-05, 8.9407e-06],
        [3.8743e-06, 5.3644e-07],
        [2.3246e-06, 5.6922e-05],
        [8.3447e-07, 4.2677e-05],
        [5.3644e-07, 2.9027e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0688, 0.0523],
        [0.0748, 0.0482],
        [0.0710, 0.0508],
        [0.0476, 0.0757],
        [0.0452, 0.0796],
        [0.0454, 0.0794],
        [0.0474, 0.0760],
        [0.0837, 0.0430],
        [0.0453, 0.0795],
        [0.0802, 0.0449],
        [0.0613, 0.0588],
        [0.0842, 0.0427],
        [0.1076, 0.0335],
        [0.0465, 0.0775],
        [0.0455, 0.0791],
        [0.0455, 0.0791]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.408685
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3351e-05, 9.1195e-06],
        [3.1054e-05, 1.8239e-05],
        [1.1921e-07, 1.6749e-05],
        [1.4901e-06, 4.2677e-05],
        [3.6955e-06, 4.7684e-07],
        [2.3544e-05, 1.5438e-05],
        [7.5102e-06, 4.8280e-06],
        [3.7551e-06, 7.7009e-05],
        [9.5367e-07, 3.8683e-05],
        [1.6689e-06, 4.6253e-05],
        [9.7752e-06, 6.6757e-06],
        [7.1526e-07, 2.6107e-05],
        [2.5630e-06, 6.9737e-05],
        [1.7881e-05, 7.8678e-06],
        [2.0564e-05, 1.1742e-05],
        [1.8418e-05, 5.3048e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0728, 0.0483],
        [0.0755, 0.0466],
        [0.0405, 0.0869],
        [0.0416, 0.0846],
        [0.0975, 0.0361],
        [0.0736, 0.0479],
        [0.0739, 0.0476],
        [0.0421, 0.0836],
        [0.0412, 0.0855],
        [0.0416, 0.0845],
        [0.0728, 0.0483],
        [0.0413, 0.0852],
        [0.0417, 0.0845],
        [0.0805, 0.0437],
        [0.0760, 0.0463],
        [0.0874, 0.0403]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.364044
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 3.4869e-05],
        [7.1526e-07, 3.0279e-05],
        [2.6822e-06, 1.4961e-05],
        [2.9862e-05, 1.6212e-05],
        [6.5565e-07, 3.2306e-05],
        [1.2338e-05, 1.3769e-05],
        [1.6689e-05, 8.3447e-06],
        [1.2875e-05, 7.7486e-06],
        [1.7345e-05, 1.5557e-05],
        [1.4365e-05, 8.9407e-06],
        [1.3232e-05, 5.9605e-06],
        [1.5080e-05, 2.1577e-05],
        [2.9802e-07, 1.2577e-05],
        [3.5763e-07, 3.5346e-05],
        [3.5763e-06, 6.1274e-05],
        [1.6749e-05, 1.7047e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0440, 0.0825],
        [0.0438, 0.0828],
        [0.0499, 0.0728],
        [0.0819, 0.0443],
        [0.0437, 0.0831],
        [0.0687, 0.0528],
        [0.0834, 0.0435],
        [0.0800, 0.0454],
        [0.0726, 0.0500],
        [0.0793, 0.0457],
        [0.0854, 0.0425],
        [0.0646, 0.0561],
        [0.0438, 0.0828],
        [0.0433, 0.0839],
        [0.0453, 0.0802],
        [0.0703, 0.0516]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.345139
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3067e-05, 3.1292e-05],
        [1.0192e-05, 7.5102e-05],
        [1.1861e-05, 6.5506e-05],
        [3.7730e-05, 2.7835e-05],
        [3.2246e-05, 2.7597e-05],
        [1.0729e-06, 4.6909e-05],
        [3.1769e-05, 1.3351e-05],
        [2.3842e-06, 6.0856e-05],
        [1.8299e-05, 8.2254e-06],
        [1.1921e-06, 4.4942e-05],
        [3.1590e-06, 4.7684e-07],
        [2.0564e-05, 1.0312e-05],
        [3.1888e-05, 2.5213e-05],
        [1.2517e-06, 3.8385e-05],
        [1.7762e-05, 1.2696e-05],
        [1.7941e-05, 9.6560e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0606, 0.0594],
        [0.0447, 0.0806],
        [0.0462, 0.0779],
        [0.0705, 0.0511],
        [0.0679, 0.0530],
        [0.0405, 0.0888],
        [0.0801, 0.0449],
        [0.0412, 0.0875],
        [0.0790, 0.0456],
        [0.0407, 0.0885],
        [0.0945, 0.0381],
        [0.0771, 0.0467],
        [0.0693, 0.0520],
        [0.0409, 0.0880],
        [0.0710, 0.0507],
        [0.0759, 0.0474]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.413078
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8133e-05, 4.4584e-05],
        [2.9564e-05, 1.7524e-05],
        [1.5438e-05, 7.0333e-06],
        [2.6107e-05, 1.4961e-05],
        [3.2783e-06, 5.3346e-05],
        [7.1526e-07, 3.9458e-05],
        [1.7881e-07, 2.0385e-05],
        [1.2517e-06, 4.7207e-05],
        [1.8418e-05, 1.7703e-05],
        [4.3511e-06, 8.3447e-07],
        [1.3828e-05, 8.2850e-06],
        [1.6093e-06, 3.8266e-05],
        [1.4305e-06, 5.6803e-05],
        [3.2783e-06, 7.8976e-05],
        [1.1325e-06, 4.0352e-05],
        [1.9670e-06, 6.3598e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0659, 0.0541],
        [0.0838, 0.0425],
        [0.0889, 0.0401],
        [0.0845, 0.0422],
        [0.0474, 0.0752],
        [0.0456, 0.0783],
        [0.0451, 0.0790],
        [0.0459, 0.0777],
        [0.0745, 0.0479],
        [0.1036, 0.0344],
        [0.0836, 0.0426],
        [0.0466, 0.0766],
        [0.0459, 0.0778],
        [0.0466, 0.0766],
        [0.0460, 0.0776],
        [0.0461, 0.0774]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.438970
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.1791e-06, 5.6028e-06],
        [2.5034e-06, 5.5790e-05],
        [1.9252e-05, 8.2850e-06],
        [2.9802e-06, 4.9293e-05],
        [4.0531e-06, 1.8477e-06],
        [1.9133e-05, 9.8348e-06],
        [3.1590e-06, 5.8770e-05],
        [1.1921e-06, 4.3035e-05],
        [3.1292e-05, 1.3649e-05],
        [1.6212e-05, 1.1086e-05],
        [1.5497e-05, 9.0599e-06],
        [7.7486e-07, 3.3975e-05],
        [1.6689e-06, 5.7220e-05],
        [5.3644e-07, 2.3067e-05],
        [1.9073e-06, 7.0035e-05],
        [2.3603e-05, 2.2173e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0793, 0.0449],
        [0.0445, 0.0801],
        [0.0858, 0.0416],
        [0.0451, 0.0790],
        [0.0848, 0.0421],
        [0.0825, 0.0432],
        [0.0449, 0.0794],
        [0.0438, 0.0814],
        [0.0856, 0.0417],
        [0.0772, 0.0462],
        [0.0802, 0.0445],
        [0.0436, 0.0818],
        [0.0439, 0.0813],
        [0.0436, 0.0817],
        [0.0438, 0.0814],
        [0.0714, 0.0499]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.488346
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.2888e-05],
        [2.2948e-05, 1.6928e-05],
        [1.0371e-05, 4.3511e-06],
        [1.2994e-05, 1.0562e-04],
        [3.5763e-07, 3.0994e-05],
        [2.0266e-06, 4.4763e-05],
        [1.8120e-05, 2.9624e-05],
        [2.6405e-05, 2.8789e-05],
        [2.1935e-05, 1.9491e-05],
        [3.1650e-05, 2.2650e-05],
        [0.0000e+00, 2.5630e-06],
        [1.1325e-06, 4.2617e-05],
        [8.3447e-07, 4.1127e-05],
        [2.0862e-05, 1.4007e-05],
        [2.4498e-05, 1.1683e-05],
        [1.1325e-05, 8.1062e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0831],
        [0.0767, 0.0472],
        [0.0873, 0.0415],
        [0.0482, 0.0752],
        [0.0437, 0.0830],
        [0.0451, 0.0804],
        [0.0631, 0.0574],
        [0.0696, 0.0520],
        [0.0733, 0.0494],
        [0.0773, 0.0469],
        [0.0432, 0.0840],
        [0.0443, 0.0818],
        [0.0440, 0.0823],
        [0.0785, 0.0462],
        [0.0849, 0.0427],
        [0.0773, 0.0469]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.341839
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2517e-06, 5.9009e-05],
        [1.7285e-06, 5.5373e-05],
        [9.5367e-07, 3.9518e-05],
        [1.0133e-06, 5.1379e-05],
        [4.7088e-06, 1.0729e-06],
        [1.1086e-05, 1.1086e-05],
        [1.5140e-05, 1.2279e-05],
        [1.1683e-05, 9.0599e-06],
        [4.7684e-07, 3.3021e-05],
        [1.7881e-05, 9.0003e-06],
        [3.5763e-07, 1.9431e-05],
        [1.9670e-05, 1.7345e-05],
        [1.7881e-07, 1.6809e-05],
        [1.5199e-05, 1.3828e-05],
        [1.3709e-06, 2.9743e-05],
        [3.0339e-05, 1.5855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0801],
        [0.0451, 0.0793],
        [0.0448, 0.0799],
        [0.0446, 0.0802],
        [0.0988, 0.0362],
        [0.0722, 0.0496],
        [0.0760, 0.0471],
        [0.0769, 0.0466],
        [0.0444, 0.0806],
        [0.0851, 0.0420],
        [0.0446, 0.0803],
        [0.0745, 0.0481],
        [0.0442, 0.0809],
        [0.0739, 0.0484],
        [0.0457, 0.0782],
        [0.0844, 0.0424]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.414488
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.5300e-06, 1.0335e-04],
        [3.8862e-05, 2.2829e-05],
        [7.6890e-06, 3.3975e-06],
        [8.3447e-07, 4.0114e-05],
        [2.0206e-05, 1.0073e-05],
        [3.6359e-06, 1.2517e-06],
        [3.3200e-05, 2.8193e-05],
        [1.9073e-05, 1.5855e-05],
        [1.3888e-05, 4.8280e-06],
        [2.5272e-05, 1.8656e-05],
        [2.4319e-05, 2.2113e-05],
        [2.8014e-06, 7.3135e-05],
        [2.9802e-07, 2.0802e-05],
        [2.9564e-05, 6.8724e-05],
        [2.1815e-05, 2.3782e-05],
        [1.1683e-05, 1.3888e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0407, 0.0897],
        [0.0733, 0.0498],
        [0.0782, 0.0467],
        [0.0399, 0.0916],
        [0.0761, 0.0480],
        [0.0822, 0.0444],
        [0.0671, 0.0544],
        [0.0674, 0.0542],
        [0.0820, 0.0445],
        [0.0694, 0.0526],
        [0.0659, 0.0554],
        [0.0405, 0.0901],
        [0.0396, 0.0922],
        [0.0528, 0.0692],
        [0.0630, 0.0579],
        [0.0617, 0.0592]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.408443
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6868e-05, 6.3181e-06],
        [1.2577e-05, 4.7684e-06],
        [1.0729e-06, 3.3438e-05],
        [1.1206e-05, 6.3181e-06],
        [2.7299e-05, 6.9141e-05],
        [2.1458e-06, 6.7651e-05],
        [1.0312e-05, 7.8142e-05],
        [3.5107e-05, 4.3690e-05],
        [1.2457e-05, 8.2850e-06],
        [3.5763e-07, 7.0333e-06],
        [4.7684e-07, 3.2485e-05],
        [2.9624e-05, 1.8120e-05],
        [1.2338e-05, 8.3447e-06],
        [4.5300e-06, 7.1526e-05],
        [6.0797e-06, 8.7142e-05],
        [2.6226e-06, 5.9843e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0906, 0.0398],
        [0.0904, 0.0399],
        [0.0452, 0.0799],
        [0.0830, 0.0435],
        [0.0581, 0.0621],
        [0.0452, 0.0799],
        [0.0492, 0.0734],
        [0.0684, 0.0528],
        [0.0798, 0.0452],
        [0.0460, 0.0785],
        [0.0444, 0.0812],
        [0.0814, 0.0443],
        [0.0795, 0.0454],
        [0.0465, 0.0777],
        [0.0467, 0.0772],
        [0.0457, 0.0790]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.551025
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1100e-05, 6.1989e-05],
        [6.5565e-07, 2.6762e-05],
        [4.0531e-06, 6.8426e-05],
        [8.8811e-06, 3.6359e-06],
        [2.3842e-07, 7.8678e-06],
        [1.9670e-06, 5.6803e-05],
        [2.8372e-05, 2.1935e-05],
        [1.7464e-05, 1.2755e-05],
        [8.3447e-07, 6.8963e-05],
        [1.2934e-05, 9.0599e-06],
        [2.2292e-05, 1.5199e-05],
        [1.9073e-06, 3.6359e-05],
        [7.7486e-07, 2.7597e-05],
        [7.6294e-06, 4.5896e-06],
        [1.9073e-06, 5.4181e-05],
        [3.1590e-05, 3.2067e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0579, 0.0626],
        [0.0460, 0.0788],
        [0.0475, 0.0763],
        [0.0913, 0.0397],
        [0.0463, 0.0784],
        [0.0465, 0.0781],
        [0.0790, 0.0459],
        [0.0801, 0.0453],
        [0.0455, 0.0798],
        [0.0809, 0.0448],
        [0.0814, 0.0445],
        [0.0472, 0.0768],
        [0.0462, 0.0785],
        [0.0839, 0.0432],
        [0.0465, 0.0780],
        [0.0738, 0.0491]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.373284
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.9027e-05, 1.4484e-05],
        [5.7817e-06, 7.6532e-05],
        [1.1325e-05, 4.2319e-06],
        [5.9605e-07, 3.5822e-05],
        [1.8537e-05, 1.4067e-05],
        [5.9605e-07, 3.5703e-05],
        [8.3447e-07, 1.3828e-05],
        [4.4107e-06, 7.1168e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1770, 0.0808],
        [0.0974, 0.1468],
        [0.1881, 0.0760],
        [0.0923, 0.1549],
        [0.1604, 0.0892],
        [0.0923, 0.1549],
        [0.0961, 0.1488],
        [0.0963, 0.1486]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.182125
acc:  0.96
Time taken to execute the en SA task with prompt type identical_modal, variation 4 and batchsize 16: 0:00:05.076267
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_4']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06],
        [7.3910e-06, 9.5963e-06]], device='cuda:0') torch.Size([105, 2])
answers_probs just softmax dim 0: tensor([[0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095]], device='cuda:0')
tensor([[0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095],
        [0.0095, 0.0095]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 5 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 1.7047e-05],
        [1.4305e-06, 4.9293e-05],
        [8.9407e-07, 4.7088e-05],
        [2.8372e-05, 1.8299e-05],
        [1.5795e-05, 1.1623e-05],
        [5.9605e-07, 4.0710e-05],
        [1.4842e-05, 1.0550e-05],
        [2.9325e-05, 7.7248e-05],
        [3.2961e-05, 2.1100e-05],
        [2.0862e-05, 1.3769e-05],
        [2.3842e-06, 7.0810e-05],
        [3.5763e-07, 2.3901e-05],
        [3.7551e-06, 5.3644e-07],
        [3.9339e-06, 5.9783e-05],
        [1.1027e-05, 8.8215e-06],
        [5.7220e-06, 7.5221e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0445, 0.0805],
        [0.0451, 0.0793],
        [0.0447, 0.0801],
        [0.0806, 0.0444],
        [0.0780, 0.0459],
        [0.0445, 0.0804],
        [0.0787, 0.0455],
        [0.0578, 0.0620],
        [0.0807, 0.0443],
        [0.0801, 0.0447],
        [0.0453, 0.0790],
        [0.0445, 0.0804],
        [0.1052, 0.0340],
        [0.0467, 0.0767],
        [0.0765, 0.0468],
        [0.0471, 0.0760]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.376163
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3411e-05, 1.0729e-05],
        [1.0133e-06, 4.6253e-05],
        [8.2254e-06, 1.1277e-04],
        [4.4107e-06, 6.5684e-05],
        [1.3113e-06, 4.6909e-05],
        [6.5565e-07, 1.6868e-05],
        [3.6955e-06, 5.7757e-05],
        [2.0564e-05, 1.0073e-05],
        [2.1935e-05, 2.4438e-05],
        [4.1723e-07, 2.8908e-05],
        [1.6153e-05, 5.5432e-06],
        [2.1458e-06, 4.4048e-05],
        [1.6510e-05, 1.0610e-05],
        [8.1062e-06, 5.8413e-06],
        [4.4703e-06, 7.5102e-05],
        [3.1292e-05, 2.1338e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0783, 0.0461],
        [0.0459, 0.0786],
        [0.0481, 0.0750],
        [0.0479, 0.0754],
        [0.0462, 0.0781],
        [0.0467, 0.0773],
        [0.0477, 0.0756],
        [0.0879, 0.0410],
        [0.0721, 0.0500],
        [0.0456, 0.0792],
        [0.0946, 0.0381],
        [0.0471, 0.0767],
        [0.0826, 0.0437],
        [0.0804, 0.0449],
        [0.0475, 0.0759],
        [0.0814, 0.0443]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.430866
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-06, 7.5042e-05],
        [8.3447e-07, 3.0756e-05],
        [8.9407e-07, 4.1783e-05],
        [2.6226e-06, 6.6161e-05],
        [4.7088e-06, 1.1921e-06],
        [1.4663e-05, 9.2387e-06],
        [5.7817e-06, 8.4460e-05],
        [1.3709e-06, 4.8220e-05],
        [1.1921e-06, 4.0352e-05],
        [1.3173e-05, 5.5432e-06],
        [2.0683e-05, 1.3053e-05],
        [3.5763e-06, 5.7459e-05],
        [3.8743e-06, 6.5267e-05],
        [1.0729e-06, 7.9751e-05],
        [1.9729e-05, 1.9133e-05],
        [2.3663e-05, 1.0252e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0473, 0.0754],
        [0.0467, 0.0763],
        [0.0464, 0.0767],
        [0.0473, 0.0754],
        [0.1010, 0.0353],
        [0.0840, 0.0424],
        [0.0485, 0.0735],
        [0.0468, 0.0762],
        [0.0468, 0.0761],
        [0.0919, 0.0388],
        [0.0840, 0.0424],
        [0.0482, 0.0739],
        [0.0481, 0.0741],
        [0.0461, 0.0773],
        [0.0756, 0.0472],
        [0.0914, 0.0390]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.414558
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 3.5882e-05],
        [1.5318e-05, 7.7486e-06],
        [2.0385e-05, 1.4663e-05],
        [2.2292e-05, 7.1347e-05],
        [2.3842e-07, 2.4498e-05],
        [4.1664e-05, 2.6703e-05],
        [9.5367e-07, 4.3988e-05],
        [1.0252e-05, 7.6413e-05],
        [2.3484e-05, 1.3292e-05],
        [1.2815e-05, 5.0664e-06],
        [1.5020e-05, 2.4557e-05],
        [2.9802e-07, 5.8413e-06],
        [1.9073e-06, 4.9055e-05],
        [3.1590e-06, 6.2644e-05],
        [1.3173e-05, 5.1856e-06],
        [3.4750e-05, 2.0921e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0436, 0.0826],
        [0.0828, 0.0435],
        [0.0762, 0.0472],
        [0.0540, 0.0666],
        [0.0430, 0.0837],
        [0.0784, 0.0459],
        [0.0435, 0.0827],
        [0.0479, 0.0751],
        [0.0807, 0.0446],
        [0.0872, 0.0413],
        [0.0623, 0.0578],
        [0.0447, 0.0805],
        [0.0442, 0.0814],
        [0.0447, 0.0805],
        [0.0873, 0.0412],
        [0.0795, 0.0453]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.364460
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6689e-05, 2.0146e-05],
        [3.2187e-06, 1.1921e-06],
        [1.7881e-06, 7.0512e-05],
        [1.6093e-06, 5.4896e-05],
        [1.9193e-05, 1.1206e-05],
        [2.8014e-05, 1.4663e-05],
        [3.9220e-05, 2.2352e-05],
        [3.5763e-07, 1.2696e-05],
        [9.8348e-06, 7.6294e-06],
        [1.1861e-05, 9.8944e-06],
        [3.4153e-05, 4.7028e-05],
        [1.7285e-05, 7.3910e-06],
        [1.9073e-06, 6.0320e-05],
        [2.6524e-05, 3.8266e-05],
        [1.4544e-05, 1.5259e-05],
        [3.1352e-05, 2.4796e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0620, 0.0592],
        [0.0818, 0.0449],
        [0.0404, 0.0908],
        [0.0406, 0.0905],
        [0.0741, 0.0495],
        [0.0760, 0.0483],
        [0.0746, 0.0492],
        [0.0405, 0.0906],
        [0.0692, 0.0530],
        [0.0680, 0.0540],
        [0.0601, 0.0611],
        [0.0794, 0.0462],
        [0.0407, 0.0903],
        [0.0594, 0.0618],
        [0.0642, 0.0572],
        [0.0689, 0.0533]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.409355
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-05, 1.3769e-05],
        [4.1723e-06, 2.0862e-06],
        [2.9445e-05, 1.4722e-05],
        [5.0068e-06, 8.2254e-05],
        [3.5763e-06, 5.5850e-05],
        [1.2696e-05, 5.7220e-06],
        [9.0003e-06, 1.0765e-04],
        [4.1723e-05, 3.2008e-05],
        [3.9399e-05, 3.4213e-05],
        [8.8215e-06, 3.8743e-06],
        [1.9550e-05, 1.1563e-05],
        [1.0729e-06, 4.3631e-05],
        [1.2577e-05, 9.2864e-05],
        [1.0133e-06, 3.0756e-05],
        [2.0266e-06, 7.2360e-05],
        [2.6524e-05, 2.0623e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0776, 0.0464],
        [0.0802, 0.0449],
        [0.0802, 0.0449],
        [0.0436, 0.0826],
        [0.0437, 0.0824],
        [0.0820, 0.0439],
        [0.0445, 0.0810],
        [0.0725, 0.0497],
        [0.0703, 0.0512],
        [0.0825, 0.0437],
        [0.0772, 0.0467],
        [0.0422, 0.0854],
        [0.0464, 0.0776],
        [0.0425, 0.0847],
        [0.0423, 0.0851],
        [0.0723, 0.0498]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.460244
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-07, 1.7405e-05],
        [2.1279e-05, 2.1636e-05],
        [1.5259e-05, 9.7752e-06],
        [2.2054e-05, 1.8120e-05],
        [3.4213e-05, 2.8133e-05],
        [2.8968e-05, 2.0564e-05],
        [1.7226e-05, 1.3113e-05],
        [2.5630e-05, 3.6478e-05],
        [5.9605e-07, 9.1791e-06],
        [1.6272e-05, 1.3709e-05],
        [1.5497e-06, 4.2558e-05],
        [5.9605e-07, 2.8729e-05],
        [1.2577e-05, 1.1265e-05],
        [3.3855e-05, 2.1338e-05],
        [1.6689e-06, 4.8935e-05],
        [1.4484e-05, 1.7941e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0420, 0.0879],
        [0.0684, 0.0539],
        [0.0767, 0.0481],
        [0.0721, 0.0511],
        [0.0721, 0.0512],
        [0.0748, 0.0493],
        [0.0735, 0.0502],
        [0.0630, 0.0586],
        [0.0443, 0.0833],
        [0.0717, 0.0515],
        [0.0432, 0.0855],
        [0.0425, 0.0868],
        [0.0706, 0.0523],
        [0.0769, 0.0480],
        [0.0431, 0.0857],
        [0.0651, 0.0566]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.317207
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.9670e-05, 9.2983e-06],
        [2.7418e-06, 7.2956e-05],
        [5.6624e-06, 7.6234e-05],
        [1.8775e-05, 3.4571e-05],
        [1.9312e-05, 7.4506e-06],
        [1.1921e-06, 4.3392e-05],
        [5.9605e-07, 2.4676e-05],
        [1.0848e-05, 6.6280e-05],
        [1.3351e-05, 6.6817e-05],
        [2.4438e-06, 6.7472e-05],
        [3.5763e-07, 1.9550e-05],
        [5.3644e-06, 1.0729e-06],
        [2.4855e-05, 1.8477e-05],
        [5.9009e-06, 9.1195e-05],
        [1.3709e-06, 5.5611e-05],
        [1.8120e-05, 2.2054e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0907, 0.0397],
        [0.0477, 0.0756],
        [0.0493, 0.0731],
        [0.0654, 0.0551],
        [0.0947, 0.0381],
        [0.0473, 0.0763],
        [0.0471, 0.0765],
        [0.0530, 0.0681],
        [0.0544, 0.0663],
        [0.0477, 0.0757],
        [0.0469, 0.0770],
        [0.1059, 0.0341],
        [0.0817, 0.0442],
        [0.0489, 0.0737],
        [0.0471, 0.0765],
        [0.0722, 0.0499]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.342369
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4140e-05, 2.5690e-05],
        [6.5565e-07, 3.8445e-05],
        [3.3259e-05, 5.4777e-05],
        [6.0201e-06, 1.0878e-04],
        [2.3842e-06, 4.6611e-05],
        [2.5272e-05, 1.8954e-05],
        [4.1723e-07, 2.7299e-05],
        [3.0875e-05, 8.0645e-05],
        [1.6987e-05, 8.1658e-06],
        [2.3901e-05, 2.3127e-05],
        [2.1040e-05, 1.8239e-05],
        [2.9802e-07, 2.2769e-05],
        [2.2054e-06, 2.3842e-07],
        [3.0041e-05, 3.1471e-05],
        [8.3447e-07, 4.4584e-05],
        [3.5465e-05, 1.5616e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0683, 0.0528],
        [0.0428, 0.0842],
        [0.0614, 0.0587],
        [0.0443, 0.0813],
        [0.0442, 0.0816],
        [0.0745, 0.0484],
        [0.0427, 0.0844],
        [0.0555, 0.0649],
        [0.0826, 0.0436],
        [0.0699, 0.0515],
        [0.0719, 0.0501],
        [0.0426, 0.0845],
        [0.1037, 0.0347],
        [0.0686, 0.0525],
        [0.0428, 0.0841],
        [0.0842, 0.0428]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.405488
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.3644e-07, 4.7266e-05],
        [2.9027e-05, 3.3677e-05],
        [1.5140e-05, 1.2386e-04],
        [2.1398e-05, 1.6153e-05],
        [2.3842e-07, 2.4915e-05],
        [2.3842e-06, 7.2479e-05],
        [5.7817e-06, 8.4937e-05],
        [1.5974e-05, 1.0192e-05],
        [1.9670e-06, 3.5584e-05],
        [1.2517e-05, 1.3649e-05],
        [2.9206e-06, 7.5519e-05],
        [1.2994e-05, 9.3579e-06],
        [2.2829e-05, 2.1279e-05],
        [3.3379e-06, 8.3208e-05],
        [1.4603e-05, 1.8477e-05],
        [4.1723e-06, 9.5367e-07]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0450, 0.0807],
        [0.0708, 0.0514],
        [0.0497, 0.0732],
        [0.0787, 0.0461],
        [0.0450, 0.0808],
        [0.0460, 0.0790],
        [0.0475, 0.0765],
        [0.0820, 0.0443],
        [0.0469, 0.0774],
        [0.0719, 0.0506],
        [0.0462, 0.0786],
        [0.0796, 0.0456],
        [0.0747, 0.0486],
        [0.0463, 0.0785],
        [0.0692, 0.0525],
        [0.1005, 0.0362]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.432673
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1265e-05, 5.9605e-06],
        [7.1526e-06, 9.0539e-05],
        [1.0729e-06, 3.0220e-05],
        [1.3709e-06, 3.5584e-05],
        [4.1723e-07, 6.8545e-06],
        [8.3447e-07, 2.9862e-05],
        [3.3438e-05, 3.7014e-05],
        [4.7684e-07, 4.0531e-05],
        [2.3365e-05, 1.9670e-05],
        [8.3447e-07, 3.6716e-05],
        [2.1756e-05, 1.4722e-05],
        [3.2187e-06, 6.7592e-05],
        [3.5763e-06, 8.0943e-05],
        [6.5565e-07, 3.5763e-05],
        [8.3447e-06, 5.6624e-06],
        [2.0564e-05, 5.9009e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0897, 0.0402],
        [0.0502, 0.0719],
        [0.0483, 0.0748],
        [0.0484, 0.0746],
        [0.0494, 0.0731],
        [0.0479, 0.0753],
        [0.0750, 0.0481],
        [0.0472, 0.0765],
        [0.0803, 0.0450],
        [0.0477, 0.0757],
        [0.0847, 0.0426],
        [0.0488, 0.0739],
        [0.0487, 0.0742],
        [0.0475, 0.0760],
        [0.0847, 0.0426],
        [0.1015, 0.0356]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.558943
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7524e-05, 1.1563e-05],
        [2.5868e-05, 2.1636e-05],
        [2.5034e-06, 7.1645e-05],
        [3.3379e-05, 2.9922e-05],
        [2.9802e-07, 2.4378e-05],
        [1.7881e-07, 1.6809e-05],
        [2.5034e-06, 6.1274e-05],
        [3.5167e-06, 4.7684e-07],
        [1.6093e-06, 7.4148e-05],
        [2.8372e-05, 6.2525e-05],
        [4.3511e-06, 8.1420e-05],
        [3.5405e-05, 3.1233e-05],
        [1.5318e-05, 1.5438e-05],
        [4.4107e-06, 8.4817e-05],
        [1.4305e-06, 6.4373e-05],
        [1.6034e-05, 1.0431e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0814, 0.0443],
        [0.0768, 0.0469],
        [0.0461, 0.0782],
        [0.0755, 0.0477],
        [0.0451, 0.0799],
        [0.0450, 0.0800],
        [0.0463, 0.0777],
        [0.1075, 0.0335],
        [0.0455, 0.0791],
        [0.0609, 0.0592],
        [0.0469, 0.0768],
        [0.0758, 0.0475],
        [0.0733, 0.0491],
        [0.0468, 0.0769],
        [0.0455, 0.0791],
        [0.0817, 0.0441]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.363393
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[5.3644e-07, 3.9399e-05],
        [9.5367e-07, 4.5836e-05],
        [2.9802e-06, 3.5763e-07],
        [1.0729e-06, 3.9458e-05],
        [3.2783e-06, 6.0856e-05],
        [1.1265e-05, 8.0466e-06],
        [3.7968e-05, 1.7643e-05],
        [8.3447e-07, 4.1842e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0893, 0.1555],
        [0.0899, 0.1545],
        [0.2152, 0.0645],
        [0.0905, 0.1535],
        [0.0928, 0.1498],
        [0.1579, 0.0880],
        [0.1744, 0.0796],
        [0.0899, 0.1546]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.234690
acc:  0.97
Time taken to execute the en SA task with prompt type identical_modal, variation 5 and batchsize 16: 0:00:05.131146
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_5']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06],
        [7.4506e-06, 8.2254e-06]], device='cuda:0') torch.Size([103, 2])
answers_probs just softmax dim 0: tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 6 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6570e-05, 2.0146e-05],
        [1.9372e-05, 1.2040e-05],
        [1.0133e-06, 3.9816e-05],
        [2.2590e-05, 1.5795e-05],
        [2.4438e-06, 3.5763e-07],
        [2.3365e-05, 1.9848e-05],
        [2.1696e-05, 1.0490e-05],
        [2.6524e-05, 1.1683e-05],
        [1.9848e-05, 1.0312e-05],
        [2.5034e-06, 5.5254e-05],
        [1.7583e-05, 8.7619e-06],
        [3.8862e-05, 2.1160e-05],
        [3.7551e-06, 5.5015e-05],
        [1.8120e-05, 1.7941e-05],
        [5.6624e-06, 7.9751e-05],
        [1.3351e-05, 1.3053e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0590, 0.0618],
        [0.0696, 0.0523],
        [0.0385, 0.0946],
        [0.0677, 0.0538],
        [0.0899, 0.0405],
        [0.0645, 0.0565],
        [0.0738, 0.0494],
        [0.0753, 0.0484],
        [0.0726, 0.0502],
        [0.0393, 0.0929],
        [0.0733, 0.0498],
        [0.0718, 0.0508],
        [0.0401, 0.0910],
        [0.0621, 0.0587],
        [0.0402, 0.0908],
        [0.0623, 0.0585]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.373211
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.3447e-07, 2.5630e-05],
        [1.0848e-05, 7.0333e-06],
        [1.4126e-05, 7.9274e-06],
        [3.9339e-06, 4.7684e-07],
        [1.4305e-05, 1.2755e-05],
        [3.3677e-05, 2.0266e-05],
        [2.8372e-05, 1.3292e-05],
        [1.1325e-06, 5.2810e-05],
        [5.7817e-06, 6.9320e-05],
        [4.2319e-06, 7.7844e-05],
        [2.4438e-06, 6.2108e-05],
        [1.4305e-06, 3.1292e-05],
        [2.2650e-06, 6.2168e-05],
        [1.1146e-05, 9.2983e-06],
        [1.5080e-05, 6.0201e-06],
        [7.1526e-06, 4.1723e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0418, 0.0848],
        [0.0744, 0.0477],
        [0.0769, 0.0461],
        [0.0989, 0.0359],
        [0.0688, 0.0516],
        [0.0757, 0.0469],
        [0.0801, 0.0443],
        [0.0414, 0.0857],
        [0.0438, 0.0811],
        [0.0427, 0.0831],
        [0.0421, 0.0843],
        [0.0424, 0.0838],
        [0.0420, 0.0845],
        [0.0699, 0.0507],
        [0.0829, 0.0428],
        [0.0762, 0.0465]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.368216
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.5698e-06, 1.0377e-04],
        [2.7597e-05, 2.0027e-05],
        [3.4511e-05, 7.7128e-05],
        [1.8656e-05, 7.4506e-06],
        [7.1526e-07, 2.5213e-05],
        [1.4901e-06, 4.6015e-05],
        [3.8743e-06, 7.7486e-07],
        [3.7253e-05, 4.4227e-05],
        [1.1325e-06, 2.9564e-05],
        [3.1590e-06, 6.5804e-05],
        [1.1384e-05, 4.7684e-06],
        [1.6987e-05, 9.4771e-06],
        [2.9802e-07, 1.8597e-05],
        [5.3644e-07, 3.3438e-05],
        [2.3186e-05, 1.6689e-05],
        [1.3471e-05, 6.9618e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0461, 0.0776],
        [0.0769, 0.0465],
        [0.0587, 0.0609],
        [0.0881, 0.0406],
        [0.0443, 0.0808],
        [0.0445, 0.0805],
        [0.0992, 0.0361],
        [0.0681, 0.0526],
        [0.0447, 0.0800],
        [0.0451, 0.0793],
        [0.0872, 0.0410],
        [0.0819, 0.0437],
        [0.0438, 0.0817],
        [0.0438, 0.0817],
        [0.0771, 0.0464],
        [0.0507, 0.0706]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.416766
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 3.8445e-05],
        [7.7486e-07, 3.0339e-05],
        [1.6689e-06, 3.8564e-05],
        [2.3842e-07, 1.9789e-05],
        [2.7418e-06, 6.2227e-05],
        [3.9339e-06, 5.9605e-07],
        [8.7023e-06, 1.0449e-04],
        [1.1683e-05, 4.2915e-06],
        [2.2650e-06, 6.4373e-05],
        [1.4305e-06, 6.2346e-05],
        [1.2517e-06, 4.4942e-05],
        [1.0133e-06, 3.8505e-05],
        [5.3644e-07, 4.3988e-05],
        [7.7486e-07, 3.8087e-05],
        [1.5080e-05, 8.2254e-06],
        [6.1989e-06, 8.2314e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0516, 0.0698],
        [0.0517, 0.0697],
        [0.0526, 0.0685],
        [0.0511, 0.0706],
        [0.0527, 0.0685],
        [0.1203, 0.0300],
        [0.0545, 0.0661],
        [0.1049, 0.0344],
        [0.0522, 0.0690],
        [0.0516, 0.0698],
        [0.0519, 0.0695],
        [0.0518, 0.0696],
        [0.0511, 0.0706],
        [0.0515, 0.0700],
        [0.0964, 0.0374],
        [0.0541, 0.0666]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.292418
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 3.7730e-05],
        [3.7551e-05, 2.8312e-05],
        [2.1875e-05, 9.5367e-06],
        [4.2319e-06, 6.4433e-05],
        [4.1723e-07, 3.4153e-05],
        [1.8358e-05, 2.7537e-05],
        [2.5451e-05, 2.1577e-05],
        [1.7464e-05, 5.6028e-06],
        [1.3471e-05, 8.4043e-06],
        [2.3842e-07, 2.1517e-05],
        [3.8147e-06, 1.4901e-06],
        [1.6689e-06, 3.6657e-05],
        [1.8656e-05, 8.7619e-06],
        [2.4259e-05, 2.0266e-05],
        [2.6822e-06, 5.1737e-05],
        [2.0862e-06, 5.7220e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0834],
        [0.0738, 0.0485],
        [0.0837, 0.0427],
        [0.0444, 0.0806],
        [0.0422, 0.0847],
        [0.0622, 0.0575],
        [0.0717, 0.0499],
        [0.0890, 0.0402],
        [0.0772, 0.0463],
        [0.0422, 0.0848],
        [0.0856, 0.0418],
        [0.0436, 0.0821],
        [0.0824, 0.0434],
        [0.0720, 0.0497],
        [0.0438, 0.0816],
        [0.0432, 0.0828]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.458378
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.1723e-06, 7.2718e-05],
        [3.3081e-05, 3.2783e-05],
        [1.1861e-05, 7.1526e-06],
        [3.5286e-05, 2.3305e-05],
        [2.1577e-05, 5.7220e-06],
        [1.6212e-05, 9.1195e-06],
        [7.1526e-07, 2.5213e-05],
        [4.2915e-06, 5.6386e-05],
        [3.5763e-07, 2.5511e-05],
        [3.1590e-06, 9.5367e-07],
        [1.3232e-05, 1.0651e-04],
        [2.3246e-06, 6.4790e-05],
        [1.9073e-06, 6.8545e-05],
        [7.7486e-07, 3.6538e-05],
        [3.9279e-05, 3.0339e-05],
        [2.3842e-06, 4.7088e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0463, 0.0770],
        [0.0725, 0.0492],
        [0.0819, 0.0435],
        [0.0802, 0.0445],
        [0.0968, 0.0369],
        [0.0833, 0.0428],
        [0.0451, 0.0790],
        [0.0471, 0.0757],
        [0.0445, 0.0801],
        [0.0946, 0.0377],
        [0.0490, 0.0728],
        [0.0454, 0.0785],
        [0.0451, 0.0791],
        [0.0448, 0.0796],
        [0.0772, 0.0462],
        [0.0461, 0.0774]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.409438
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 2.5332e-05],
        [1.4603e-05, 1.2457e-05],
        [4.4107e-06, 7.8261e-05],
        [1.3232e-05, 4.7088e-06],
        [1.5914e-05, 1.1086e-05],
        [5.9605e-06, 8.8513e-05],
        [3.8147e-06, 5.3406e-05],
        [1.9729e-05, 1.2815e-05],
        [1.3113e-05, 5.0664e-06],
        [3.8385e-05, 2.8968e-05],
        [1.2577e-05, 1.3947e-05],
        [1.4961e-05, 1.0073e-05],
        [4.7684e-06, 7.7963e-05],
        [4.2319e-06, 7.7486e-07],
        [2.9325e-05, 4.0352e-05],
        [1.4365e-05, 7.8082e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0399, 0.0906],
        [0.0667, 0.0543],
        [0.0410, 0.0883],
        [0.0813, 0.0446],
        [0.0701, 0.0517],
        [0.0414, 0.0875],
        [0.0415, 0.0872],
        [0.0713, 0.0508],
        [0.0799, 0.0453],
        [0.0687, 0.0527],
        [0.0624, 0.0580],
        [0.0706, 0.0513],
        [0.0412, 0.0879],
        [0.0905, 0.0400],
        [0.0592, 0.0612],
        [0.0743, 0.0487]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.431175
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[5.5432e-06, 9.8348e-05],
        [2.5034e-06, 2.9802e-07],
        [5.9605e-07, 2.6941e-05],
        [3.0935e-05, 2.9266e-05],
        [1.7285e-06, 4.7863e-05],
        [1.8120e-05, 6.1989e-06],
        [2.3663e-05, 2.9624e-05],
        [2.0504e-05, 1.3173e-05],
        [2.0325e-05, 1.9073e-05],
        [2.8968e-05, 1.7583e-05],
        [2.9802e-07, 1.0490e-05],
        [1.2934e-05, 9.0003e-06],
        [3.0994e-06, 7.3910e-05],
        [1.1921e-06, 7.1645e-05],
        [2.9325e-05, 1.5795e-05],
        [2.9802e-07, 1.5855e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0438, 0.0812],
        [0.1014, 0.0351],
        [0.0424, 0.0839],
        [0.0694, 0.0513],
        [0.0430, 0.0828],
        [0.0874, 0.0407],
        [0.0647, 0.0550],
        [0.0763, 0.0466],
        [0.0695, 0.0512],
        [0.0773, 0.0460],
        [0.0427, 0.0834],
        [0.0749, 0.0475],
        [0.0432, 0.0823],
        [0.0422, 0.0843],
        [0.0795, 0.0447],
        [0.0423, 0.0841]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.319037
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.8944e-06, 5.5313e-05],
        [5.1260e-06, 8.3447e-07],
        [1.4305e-06, 4.1962e-05],
        [1.9491e-05, 1.6809e-05],
        [3.6418e-05, 1.4603e-05],
        [1.0431e-05, 7.1526e-06],
        [1.7881e-06, 4.6015e-05],
        [3.8326e-05, 2.4915e-05],
        [2.3961e-05, 6.3181e-05],
        [1.6689e-06, 6.2346e-05],
        [2.3782e-05, 1.7643e-05],
        [3.5286e-05, 1.5199e-05],
        [6.4373e-06, 7.6890e-05],
        [4.6492e-06, 8.1122e-05],
        [1.7881e-07, 1.4901e-05],
        [8.9407e-07, 3.1173e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0500, 0.0715],
        [0.1014, 0.0352],
        [0.0444, 0.0805],
        [0.0734, 0.0487],
        [0.0876, 0.0408],
        [0.0777, 0.0460],
        [0.0446, 0.0802],
        [0.0787, 0.0454],
        [0.0565, 0.0632],
        [0.0441, 0.0811],
        [0.0762, 0.0469],
        [0.0863, 0.0414],
        [0.0464, 0.0771],
        [0.0453, 0.0788],
        [0.0434, 0.0823],
        [0.0441, 0.0810]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.341572
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.3173e-05, 8.7023e-06],
        [3.5763e-07, 2.4855e-05],
        [2.1875e-05, 1.8299e-05],
        [3.0875e-05, 1.7047e-05],
        [2.2650e-06, 5.8174e-05],
        [3.5167e-06, 5.3763e-05],
        [5.9605e-07, 1.4186e-05],
        [5.3644e-07, 2.8908e-05],
        [8.2254e-06, 4.8280e-06],
        [4.4107e-06, 5.3406e-05],
        [1.7643e-05, 1.9670e-05],
        [4.0710e-05, 5.9664e-05],
        [8.9407e-07, 3.3915e-05],
        [9.5367e-07, 4.0770e-05],
        [1.3709e-06, 5.3227e-05],
        [1.8954e-05, 9.0599e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0840, 0.0432],
        [0.0467, 0.0778],
        [0.0793, 0.0458],
        [0.0876, 0.0414],
        [0.0478, 0.0760],
        [0.0489, 0.0742],
        [0.0479, 0.0758],
        [0.0469, 0.0775],
        [0.0864, 0.0420],
        [0.0497, 0.0731],
        [0.0738, 0.0492],
        [0.0690, 0.0526],
        [0.0472, 0.0769],
        [0.0471, 0.0771],
        [0.0472, 0.0770],
        [0.0905, 0.0401]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.429919
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2054e-06, 5.2333e-05],
        [3.3975e-06, 7.4804e-05],
        [1.1921e-05, 8.6725e-05],
        [3.6955e-06, 5.3644e-07],
        [1.9312e-05, 1.2577e-05],
        [1.0788e-05, 6.1989e-06],
        [2.4199e-05, 1.5259e-05],
        [3.5524e-05, 2.4378e-05],
        [1.7881e-07, 1.9252e-05],
        [3.4571e-06, 5.2571e-05],
        [9.9540e-06, 6.6757e-06],
        [1.0014e-05, 6.8843e-05],
        [7.1526e-07, 2.4796e-05],
        [8.9407e-07, 4.0591e-05],
        [1.0133e-06, 4.6492e-05],
        [2.1577e-05, 1.5318e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0455, 0.0785],
        [0.0456, 0.0782],
        [0.0493, 0.0724],
        [0.1047, 0.0341],
        [0.0801, 0.0446],
        [0.0825, 0.0433],
        [0.0807, 0.0442],
        [0.0791, 0.0452],
        [0.0441, 0.0810],
        [0.0465, 0.0768],
        [0.0795, 0.0449],
        [0.0496, 0.0720],
        [0.0450, 0.0794],
        [0.0447, 0.0800],
        [0.0447, 0.0800],
        [0.0784, 0.0455]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.406483
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6570e-05, 6.9141e-06],
        [1.2696e-05, 6.7949e-06],
        [3.5167e-06, 7.7307e-05],
        [7.1526e-07, 3.7849e-05],
        [3.5822e-05, 1.7464e-05],
        [1.2219e-05, 4.1723e-06],
        [2.7657e-05, 4.8161e-05],
        [3.5763e-07, 6.2585e-06],
        [1.7881e-07, 1.6928e-05],
        [5.3644e-07, 3.6716e-05],
        [1.7881e-07, 1.4126e-05],
        [2.7835e-05, 1.4901e-05],
        [2.0862e-06, 3.3677e-05],
        [2.4140e-05, 1.4544e-05],
        [2.9802e-07, 2.0623e-05],
        [1.4544e-05, 6.1989e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0862, 0.0411],
        [0.0817, 0.0433],
        [0.0445, 0.0796],
        [0.0434, 0.0816],
        [0.0834, 0.0425],
        [0.0897, 0.0395],
        [0.0613, 0.0577],
        [0.0450, 0.0788],
        [0.0430, 0.0823],
        [0.0432, 0.0820],
        [0.0431, 0.0821],
        [0.0817, 0.0434],
        [0.0451, 0.0784],
        [0.0795, 0.0446],
        [0.0432, 0.0820],
        [0.0859, 0.0412]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.555278
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[2.8014e-06, 5.1200e-05],
        [2.2352e-05, 9.0599e-06],
        [1.0729e-06, 3.4392e-05],
        [2.0266e-06, 1.7881e-07],
        [2.9385e-05, 6.7234e-05],
        [1.9073e-05, 1.1683e-05],
        [3.4511e-05, 1.9193e-05],
        [1.3709e-06, 4.5478e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0825, 0.1701],
        [0.1595, 0.0879],
        [0.0807, 0.1738],
        [0.1962, 0.0715],
        [0.1061, 0.1322],
        [0.1456, 0.0964],
        [0.1489, 0.0942],
        [0.0806, 0.1740]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.223501
acc:  0.96
Time taken to execute the en SA task with prompt type identical_modal, variation 6 and batchsize 16: 0:00:05.045879
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_6']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06],
        [5.6624e-06, 7.0333e-06]], device='cuda:0') torch.Size([104, 2])
answers_probs just softmax dim 0: tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 7 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.7881e-05, 9.3579e-06],
        [2.8849e-05, 2.0623e-05],
        [3.0696e-05, 2.2829e-05],
        [3.8981e-05, 2.7001e-05],
        [2.6762e-05, 7.8022e-05],
        [1.6987e-05, 1.3173e-04],
        [2.6882e-05, 2.5034e-05],
        [3.4809e-05, 2.3007e-05],
        [2.7597e-05, 1.2338e-05],
        [1.5140e-05, 6.4969e-06],
        [1.9670e-06, 4.5955e-05],
        [3.9339e-06, 4.7684e-07],
        [1.7881e-07, 1.8001e-05],
        [9.5367e-07, 3.3677e-05],
        [1.9133e-05, 1.1444e-05],
        [3.6836e-05, 3.7670e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0734, 0.0495],
        [0.0682, 0.0533],
        [0.0676, 0.0538],
        [0.0688, 0.0529],
        [0.0492, 0.0739],
        [0.0427, 0.0851],
        [0.0639, 0.0569],
        [0.0695, 0.0523],
        [0.0760, 0.0478],
        [0.0767, 0.0474],
        [0.0397, 0.0916],
        [0.0929, 0.0391],
        [0.0385, 0.0945],
        [0.0392, 0.0928],
        [0.0712, 0.0510],
        [0.0625, 0.0582]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.370428
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.5896e-06, 8.8334e-05],
        [1.9431e-05, 1.0788e-05],
        [3.0577e-05, 1.9610e-05],
        [1.4901e-06, 5.2094e-05],
        [2.9802e-07, 2.5630e-05],
        [2.9802e-07, 1.9073e-05],
        [1.4544e-05, 1.6391e-05],
        [1.3113e-06, 4.4405e-05],
        [3.5763e-05, 2.1040e-05],
        [2.0862e-06, 5.2810e-05],
        [1.4365e-05, 9.7752e-06],
        [5.9605e-07, 1.5080e-05],
        [3.9339e-06, 6.2048e-05],
        [6.2585e-06, 1.2219e-04],
        [2.5034e-06, 6.8069e-05],
        [2.4319e-05, 7.2122e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0738],
        [0.0883, 0.0408],
        [0.0853, 0.0422],
        [0.0477, 0.0754],
        [0.0469, 0.0767],
        [0.0471, 0.0764],
        [0.0742, 0.0485],
        [0.0477, 0.0754],
        [0.0871, 0.0413],
        [0.0482, 0.0747],
        [0.0841, 0.0428],
        [0.0482, 0.0747],
        [0.0492, 0.0731],
        [0.0487, 0.0739],
        [0.0481, 0.0748],
        [0.1003, 0.0359]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.430005
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.9339e-06, 1.0729e-05],
        [2.2054e-05, 1.4126e-05],
        [1.1921e-06, 4.9889e-05],
        [1.1683e-05, 8.1658e-06],
        [1.7881e-07, 1.8477e-05],
        [1.2517e-06, 4.7386e-05],
        [2.7955e-05, 2.4498e-05],
        [7.7486e-07, 3.8266e-05],
        [1.4007e-05, 1.2815e-05],
        [7.1526e-07, 2.6822e-05],
        [4.7684e-06, 9.1910e-05],
        [1.5497e-06, 5.5909e-05],
        [1.7166e-05, 1.1146e-05],
        [3.6955e-05, 9.2924e-05],
        [1.7285e-06, 5.2035e-05],
        [4.0531e-05, 2.2054e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0605, 0.0604],
        [0.0851, 0.0430],
        [0.0473, 0.0772],
        [0.0833, 0.0439],
        [0.0467, 0.0783],
        [0.0474, 0.0770],
        [0.0788, 0.0464],
        [0.0472, 0.0775],
        [0.0779, 0.0469],
        [0.0475, 0.0770],
        [0.0486, 0.0752],
        [0.0475, 0.0769],
        [0.0848, 0.0431],
        [0.0615, 0.0595],
        [0.0477, 0.0765],
        [0.0884, 0.0414]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.324144
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.2650e-06, 6.9737e-05],
        [1.1921e-07, 5.6028e-06],
        [3.2425e-05, 2.9743e-05],
        [5.3644e-07, 4.0948e-05],
        [5.4240e-06, 9.1612e-05],
        [4.0412e-05, 2.9385e-05],
        [6.3777e-06, 8.2731e-05],
        [3.0875e-05, 1.8299e-05],
        [5.9605e-07, 5.1498e-05],
        [1.1325e-06, 4.5478e-05],
        [1.7643e-05, 1.6809e-05],
        [1.5259e-05, 7.8201e-05],
        [2.2531e-05, 1.3232e-05],
        [8.9407e-07, 3.5942e-05],
        [4.4405e-05, 1.9073e-05],
        [1.4007e-05, 9.9719e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0481, 0.0757],
        [0.0476, 0.0765],
        [0.0785, 0.0464],
        [0.0472, 0.0771],
        [0.0493, 0.0739],
        [0.0831, 0.0438],
        [0.0500, 0.0727],
        [0.0873, 0.0417],
        [0.0471, 0.0772],
        [0.0477, 0.0762],
        [0.0777, 0.0468],
        [0.0548, 0.0663],
        [0.0875, 0.0416],
        [0.0477, 0.0762],
        [0.0938, 0.0388],
        [0.0527, 0.0691]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.252690
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0729e-06, 3.7849e-05],
        [4.1723e-07, 2.8670e-05],
        [6.6757e-06, 1.0163e-04],
        [3.0398e-06, 7.0512e-05],
        [9.5367e-06, 1.2010e-04],
        [1.4305e-06, 3.7074e-05],
        [2.3842e-07, 1.8001e-05],
        [2.5034e-06, 5.1141e-05],
        [2.2769e-05, 3.7849e-05],
        [2.0862e-06, 5.8889e-05],
        [4.4107e-06, 6.8247e-05],
        [3.3677e-05, 2.6643e-05],
        [1.9073e-06, 7.2956e-05],
        [2.2769e-05, 1.1504e-05],
        [3.6359e-06, 5.3644e-07],
        [4.2439e-05, 3.3557e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0496, 0.0729],
        [0.0489, 0.0739],
        [0.0513, 0.0705],
        [0.0503, 0.0719],
        [0.0519, 0.0697],
        [0.0501, 0.0722],
        [0.0489, 0.0740],
        [0.0505, 0.0716],
        [0.0702, 0.0515],
        [0.0499, 0.0724],
        [0.0513, 0.0706],
        [0.0843, 0.0429],
        [0.0495, 0.0731],
        [0.0937, 0.0386],
        [0.1153, 0.0314],
        [0.0843, 0.0429]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.405666
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.0054e-05, 3.2425e-05],
        [2.2590e-05, 1.1027e-05],
        [1.8477e-06, 3.9041e-05],
        [3.4451e-05, 6.2823e-05],
        [3.9339e-06, 8.3447e-07],
        [8.3447e-07, 3.0160e-05],
        [2.9802e-06, 7.0632e-05],
        [3.0994e-06, 5.9128e-05],
        [3.8743e-06, 6.3598e-05],
        [5.3644e-07, 3.2902e-05],
        [2.3365e-05, 8.5235e-06],
        [1.5080e-05, 1.2934e-05],
        [5.9009e-06, 7.4983e-05],
        [9.7752e-06, 1.2106e-04],
        [1.4067e-05, 5.4836e-06],
        [3.1590e-06, 6.8665e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0766, 0.0466],
        [0.0863, 0.0413],
        [0.0461, 0.0773],
        [0.0628, 0.0568],
        [0.1006, 0.0355],
        [0.0453, 0.0787],
        [0.0459, 0.0777],
        [0.0463, 0.0770],
        [0.0467, 0.0764],
        [0.0448, 0.0796],
        [0.0917, 0.0389],
        [0.0755, 0.0472],
        [0.0474, 0.0752],
        [0.0475, 0.0751],
        [0.0905, 0.0394],
        [0.0461, 0.0774]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.416691
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4305e-06, 6.1810e-05],
        [2.5630e-06, 7.2718e-05],
        [1.9968e-05, 1.4961e-05],
        [1.4663e-05, 9.5963e-06],
        [2.9206e-06, 4.7684e-07],
        [2.6226e-06, 6.0737e-05],
        [3.1650e-05, 4.5359e-05],
        [2.4378e-05, 1.2100e-05],
        [3.4034e-05, 1.5676e-05],
        [2.5570e-05, 1.8299e-05],
        [2.3246e-06, 6.7413e-05],
        [2.6226e-06, 6.1989e-05],
        [8.9407e-07, 4.6670e-05],
        [4.0889e-05, 6.0916e-05],
        [1.7464e-05, 1.9312e-05],
        [1.9014e-05, 2.8074e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0426, 0.0847],
        [0.0431, 0.0837],
        [0.0738, 0.0489],
        [0.0763, 0.0473],
        [0.0985, 0.0367],
        [0.0434, 0.0831],
        [0.0629, 0.0574],
        [0.0813, 0.0444],
        [0.0827, 0.0437],
        [0.0747, 0.0484],
        [0.0431, 0.0838],
        [0.0434, 0.0832],
        [0.0425, 0.0850],
        [0.0623, 0.0580],
        [0.0670, 0.0539],
        [0.0624, 0.0578]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.412031
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.1815e-05, 2.5094e-05],
        [1.8477e-05, 1.6987e-05],
        [4.9770e-05, 2.9027e-05],
        [5.3644e-07, 4.2856e-05],
        [2.4498e-05, 2.5868e-05],
        [4.6372e-05, 2.5034e-05],
        [2.5034e-05, 1.1921e-05],
        [2.3484e-05, 1.5676e-05],
        [5.7220e-06, 8.4341e-05],
        [4.4107e-06, 8.3447e-07],
        [2.2769e-05, 9.5367e-06],
        [3.2783e-06, 7.8559e-05],
        [1.6630e-05, 1.1802e-05],
        [2.9802e-06, 6.1333e-05],
        [5.7220e-06, 8.5890e-05],
        [2.9802e-07, 2.8193e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0640, 0.0561],
        [0.0677, 0.0530],
        [0.0756, 0.0475],
        [0.0407, 0.0882],
        [0.0654, 0.0549],
        [0.0770, 0.0466],
        [0.0792, 0.0453],
        [0.0733, 0.0490],
        [0.0429, 0.0838],
        [0.0932, 0.0385],
        [0.0814, 0.0441],
        [0.0419, 0.0858],
        [0.0722, 0.0497],
        [0.0421, 0.0852],
        [0.0428, 0.0839],
        [0.0406, 0.0883]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.434189
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 4.5121e-05],
        [1.6093e-06, 5.9307e-05],
        [1.1921e-06, 8.5354e-05],
        [3.8445e-05, 4.2856e-05],
        [1.4305e-06, 1.9372e-05],
        [2.5749e-05, 1.8954e-05],
        [1.0729e-06, 4.0114e-05],
        [2.2233e-05, 1.0610e-05],
        [2.0266e-06, 7.6115e-05],
        [7.1526e-07, 4.4167e-05],
        [2.0087e-05, 1.5020e-05],
        [1.8477e-06, 7.5459e-05],
        [1.4842e-05, 5.6028e-06],
        [3.5763e-06, 8.2970e-05],
        [3.0935e-05, 4.1604e-05],
        [2.8372e-05, 2.5034e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0471, 0.0770],
        [0.0473, 0.0765],
        [0.0467, 0.0775],
        [0.0740, 0.0490],
        [0.0494, 0.0734],
        [0.0820, 0.0442],
        [0.0473, 0.0766],
        [0.0907, 0.0399],
        [0.0473, 0.0766],
        [0.0468, 0.0773],
        [0.0817, 0.0443],
        [0.0472, 0.0767],
        [0.0953, 0.0380],
        [0.0480, 0.0754],
        [0.0706, 0.0513],
        [0.0784, 0.0462]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.363864
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[4.9591e-05, 3.9518e-05],
        [7.1526e-07, 3.8922e-05],
        [1.8954e-05, 8.3447e-06],
        [1.0133e-06, 3.3796e-05],
        [8.7023e-06, 1.0431e-04],
        [1.2517e-06, 5.3644e-05],
        [3.5763e-07, 2.4080e-05],
        [2.1696e-05, 7.3314e-06],
        [1.1921e-06, 4.5717e-05],
        [7.1526e-07, 3.1173e-05],
        [2.5988e-05, 1.7881e-05],
        [2.0862e-06, 5.6386e-05],
        [1.9073e-06, 1.7881e-07],
        [2.7299e-05, 2.0921e-05],
        [1.1683e-05, 7.2658e-05],
        [2.3246e-05, 1.2696e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0751, 0.0469],
        [0.0438, 0.0804],
        [0.0862, 0.0409],
        [0.0443, 0.0795],
        [0.0465, 0.0758],
        [0.0440, 0.0800],
        [0.0437, 0.0806],
        [0.0909, 0.0387],
        [0.0442, 0.0798],
        [0.0440, 0.0800],
        [0.0778, 0.0452],
        [0.0446, 0.0790],
        [0.1074, 0.0328],
        [0.0758, 0.0465],
        [0.0494, 0.0712],
        [0.0822, 0.0429]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.406442
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4007e-05, 1.4424e-05],
        [1.2755e-05, 9.2983e-06],
        [1.5855e-05, 1.0192e-05],
        [2.4438e-05, 1.4484e-05],
        [2.0742e-05, 2.0444e-05],
        [1.0788e-05, 8.2374e-05],
        [2.4557e-05, 2.3603e-05],
        [1.4544e-05, 6.1393e-06],
        [4.1723e-07, 6.5565e-06],
        [1.0073e-05, 6.2585e-06],
        [1.0729e-06, 4.8339e-05],
        [2.2054e-06, 3.7670e-05],
        [4.6849e-05, 3.8564e-05],
        [2.0146e-05, 9.2983e-06],
        [5.6624e-06, 8.5950e-05],
        [3.9279e-05, 2.6166e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0650, 0.0565],
        [0.0708, 0.0518],
        [0.0730, 0.0503],
        [0.0744, 0.0493],
        [0.0657, 0.0559],
        [0.0446, 0.0823],
        [0.0661, 0.0555],
        [0.0802, 0.0458],
        [0.0422, 0.0871],
        [0.0736, 0.0499],
        [0.0406, 0.0905],
        [0.0420, 0.0875],
        [0.0687, 0.0534],
        [0.0787, 0.0466],
        [0.0422, 0.0869],
        [0.0724, 0.0507]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.557382
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-06, 3.5763e-07],
        [3.0875e-05, 1.5140e-05],
        [1.0133e-06, 3.6955e-05],
        [3.7551e-05, 2.2948e-05],
        [2.9802e-07, 2.4199e-05],
        [1.9252e-05, 1.0312e-05],
        [4.8757e-05, 3.2961e-05],
        [2.9504e-05, 1.4603e-05],
        [4.7684e-06, 8.6784e-05],
        [3.8743e-06, 6.0499e-05],
        [5.2452e-06, 7.1764e-05],
        [2.5034e-06, 6.9320e-05],
        [3.5763e-07, 1.3292e-05],
        [2.8551e-05, 2.1398e-05],
        [4.2737e-05, 5.5313e-05],
        [2.7418e-06, 5.4955e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.1035, 0.0343],
        [0.0829, 0.0428],
        [0.0435, 0.0816],
        [0.0788, 0.0450],
        [0.0429, 0.0828],
        [0.0813, 0.0437],
        [0.0770, 0.0461],
        [0.0827, 0.0429],
        [0.0446, 0.0795],
        [0.0450, 0.0789],
        [0.0454, 0.0783],
        [0.0439, 0.0809],
        [0.0435, 0.0816],
        [0.0751, 0.0473],
        [0.0655, 0.0542],
        [0.0444, 0.0799]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.452099
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[4.1962e-05, 1.9073e-05],
        [1.6093e-05, 1.8418e-05],
        [1.0133e-06, 2.9922e-05],
        [2.6107e-05, 1.1921e-05],
        [9.1791e-06, 5.6624e-06],
        [1.9073e-06, 5.4121e-05],
        [2.2054e-06, 3.5763e-07],
        [1.7464e-05, 1.0192e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.1448, 0.0993],
        [0.1160, 0.1239],
        [0.0752, 0.1912],
        [0.1446, 0.0994],
        [0.1351, 0.1064],
        [0.0753, 0.1910],
        [0.1721, 0.0836],
        [0.1369, 0.1051]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.214851
acc:  0.965
Time taken to execute the en SA task with prompt type identical_modal, variation 7 and batchsize 16: 0:00:05.062348
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_7']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06],
        [6.7353e-06, 9.5963e-06]], device='cuda:0') torch.Size([103, 2])
answers_probs just softmax dim 0: tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
tensor([[0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097],
        [0.0097, 0.0097]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 8 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[3.4273e-05, 2.9325e-05],
        [2.2650e-05, 1.6689e-05],
        [6.8545e-06, 8.7857e-05],
        [1.7285e-06, 6.1512e-05],
        [3.2485e-05, 2.0802e-05],
        [3.0398e-06, 6.5386e-05],
        [1.8477e-06, 4.9412e-05],
        [3.9876e-05, 3.6061e-05],
        [1.7881e-06, 4.6909e-05],
        [2.5630e-06, 3.7611e-05],
        [1.2457e-05, 5.1856e-06],
        [2.0266e-06, 4.6611e-05],
        [4.4107e-06, 8.1062e-05],
        [2.4438e-06, 3.5763e-07],
        [2.0862e-06, 7.6830e-05],
        [4.3511e-06, 6.4611e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0782, 0.0458],
        [0.0811, 0.0441],
        [0.0491, 0.0730],
        [0.0469, 0.0764],
        [0.0839, 0.0427],
        [0.0477, 0.0751],
        [0.0473, 0.0757],
        [0.0771, 0.0464],
        [0.0473, 0.0757],
        [0.0486, 0.0736],
        [0.0924, 0.0387],
        [0.0476, 0.0753],
        [0.0480, 0.0745],
        [0.1092, 0.0328],
        [0.0468, 0.0764],
        [0.0486, 0.0737]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.235368
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[7.1526e-07, 5.2571e-05],
        [2.4259e-05, 1.9491e-05],
        [1.5914e-05, 1.0848e-05],
        [1.0133e-06, 4.6492e-05],
        [2.2650e-06, 7.0632e-05],
        [1.3649e-05, 6.3181e-05],
        [2.8849e-05, 6.2943e-05],
        [2.6286e-05, 1.8358e-05],
        [1.4305e-06, 4.4584e-05],
        [2.1458e-05, 2.4498e-05],
        [2.5630e-06, 2.9802e-07],
        [4.0829e-05, 2.7418e-05],
        [2.0087e-05, 6.3181e-06],
        [5.9605e-07, 3.6657e-05],
        [3.1710e-05, 4.1664e-05],
        [3.7432e-05, 3.0339e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0417, 0.0864],
        [0.0716, 0.0503],
        [0.0745, 0.0483],
        [0.0420, 0.0858],
        [0.0424, 0.0849],
        [0.0491, 0.0734],
        [0.0563, 0.0640],
        [0.0741, 0.0486],
        [0.0424, 0.0849],
        [0.0656, 0.0549],
        [0.1007, 0.0358],
        [0.0748, 0.0482],
        [0.0880, 0.0409],
        [0.0418, 0.0862],
        [0.0634, 0.0569],
        [0.0715, 0.0504]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.449944
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.1921e-06, 2.9564e-05],
        [2.1160e-05, 1.6451e-05],
        [2.5034e-06, 4.5896e-05],
        [3.2187e-06, 7.5102e-05],
        [2.0862e-05, 1.9252e-05],
        [2.2054e-06, 5.9128e-05],
        [1.9670e-06, 7.6652e-05],
        [8.9407e-07, 2.9445e-05],
        [3.2425e-05, 2.1577e-05],
        [3.8147e-06, 8.3447e-07],
        [9.8348e-06, 3.9935e-06],
        [4.2915e-06, 5.7876e-05],
        [2.6226e-06, 7.4029e-05],
        [2.0087e-05, 1.0312e-05],
        [1.6749e-05, 6.3777e-06],
        [1.6093e-06, 4.8757e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0453, 0.0782],
        [0.0765, 0.0463],
        [0.0459, 0.0772],
        [0.0454, 0.0781],
        [0.0733, 0.0483],
        [0.0452, 0.0785],
        [0.0447, 0.0793],
        [0.0449, 0.0790],
        [0.0795, 0.0446],
        [0.0991, 0.0358],
        [0.0888, 0.0399],
        [0.0467, 0.0759],
        [0.0451, 0.0786],
        [0.0844, 0.0420],
        [0.0900, 0.0394],
        [0.0450, 0.0788]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.418812
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[9.5367e-07, 3.5107e-05],
        [1.6510e-05, 8.8215e-06],
        [1.8179e-05, 3.4988e-05],
        [7.7486e-07, 2.8968e-05],
        [2.4319e-05, 1.8239e-05],
        [3.3319e-05, 5.7518e-05],
        [3.6359e-06, 7.5340e-05],
        [1.1623e-05, 9.8348e-06],
        [2.3842e-07, 1.7822e-05],
        [1.5259e-05, 1.1325e-05],
        [3.9935e-06, 5.8234e-05],
        [3.7551e-06, 7.1526e-07],
        [5.9605e-07, 4.0710e-05],
        [3.5882e-05, 1.6928e-05],
        [4.7684e-07, 2.0146e-05],
        [1.5497e-05, 1.6868e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0443, 0.0813],
        [0.0829, 0.0435],
        [0.0608, 0.0593],
        [0.0443, 0.0813],
        [0.0765, 0.0471],
        [0.0623, 0.0578],
        [0.0452, 0.0797],
        [0.0742, 0.0485],
        [0.0438, 0.0824],
        [0.0767, 0.0470],
        [0.0460, 0.0783],
        [0.1000, 0.0360],
        [0.0438, 0.0823],
        [0.0852, 0.0423],
        [0.0442, 0.0815],
        [0.0697, 0.0517]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.432170
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.5565e-07, 3.1471e-05],
        [9.0599e-06, 1.0222e-04],
        [1.3769e-05, 1.7583e-05],
        [1.2994e-05, 6.7174e-05],
        [9.5367e-07, 4.0174e-05],
        [3.2783e-06, 1.3709e-06],
        [2.4974e-05, 2.3842e-05],
        [1.3947e-05, 7.0930e-06],
        [7.7486e-06, 8.4937e-05],
        [2.8610e-06, 6.8307e-05],
        [1.0729e-06, 4.4405e-05],
        [2.8193e-05, 1.6212e-05],
        [1.3113e-05, 1.4544e-05],
        [3.5763e-05, 1.7047e-05],
        [2.3842e-06, 3.5763e-05],
        [5.3644e-06, 8.6308e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0459, 0.0791],
        [0.0488, 0.0744],
        [0.0698, 0.0521],
        [0.0529, 0.0687],
        [0.0460, 0.0789],
        [0.0911, 0.0399],
        [0.0750, 0.0484],
        [0.0873, 0.0416],
        [0.0489, 0.0743],
        [0.0468, 0.0776],
        [0.0461, 0.0789],
        [0.0849, 0.0428],
        [0.0723, 0.0503],
        [0.0886, 0.0410],
        [0.0479, 0.0759],
        [0.0477, 0.0762]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.457813
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2517e-06, 5.1379e-05],
        [2.9981e-05, 2.3544e-05],
        [4.0531e-06, 5.2929e-05],
        [1.8835e-05, 1.4544e-05],
        [8.9407e-07, 2.7001e-05],
        [2.2411e-05, 1.8716e-05],
        [2.3663e-05, 4.0531e-05],
        [5.1856e-06, 8.0943e-05],
        [4.5300e-06, 7.2837e-05],
        [2.3842e-05, 3.4451e-05],
        [2.7955e-05, 7.7844e-05],
        [1.6987e-05, 2.1100e-05],
        [4.7088e-06, 6.3300e-05],
        [4.1723e-06, 6.2883e-05],
        [5.9605e-08, 5.8413e-06],
        [2.0087e-05, 2.3246e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0487, 0.0767],
        [0.0832, 0.0448],
        [0.0510, 0.0731],
        [0.0836, 0.0447],
        [0.0491, 0.0760],
        [0.0820, 0.0455],
        [0.0687, 0.0543],
        [0.0505, 0.0739],
        [0.0504, 0.0740],
        [0.0716, 0.0522],
        [0.0619, 0.0603],
        [0.0743, 0.0503],
        [0.0509, 0.0733],
        [0.0506, 0.0738],
        [0.0480, 0.0777],
        [0.0756, 0.0494]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.235018
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6703e-05, 1.6987e-05],
        [3.4332e-05, 4.1068e-05],
        [1.3709e-06, 4.1485e-05],
        [1.4067e-05, 1.0210e-04],
        [1.3709e-06, 4.2737e-05],
        [7.1526e-07, 3.6180e-05],
        [1.2517e-06, 7.3850e-05],
        [2.3246e-06, 6.7532e-05],
        [7.7486e-07, 2.9445e-05],
        [2.2471e-05, 1.3828e-05],
        [1.3351e-05, 1.2636e-05],
        [4.7684e-07, 6.3777e-06],
        [1.4186e-05, 9.6560e-06],
        [2.3246e-06, 4.2021e-05],
        [1.4007e-05, 5.9009e-06],
        [1.0252e-05, 7.9870e-06]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0839, 0.0433],
        [0.0718, 0.0506],
        [0.0470, 0.0772],
        [0.0514, 0.0706],
        [0.0470, 0.0773],
        [0.0464, 0.0782],
        [0.0463, 0.0784],
        [0.0471, 0.0771],
        [0.0467, 0.0777],
        [0.0846, 0.0429],
        [0.0761, 0.0477],
        [0.0488, 0.0744],
        [0.0826, 0.0440],
        [0.0480, 0.0757],
        [0.0921, 0.0395],
        [0.0799, 0.0454]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.554254
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6464e-05, 2.5630e-05],
        [1.3709e-06, 3.4928e-05],
        [1.4305e-06, 4.4346e-05],
        [1.9670e-06, 2.9802e-07],
        [4.7684e-07, 2.4199e-05],
        [9.9540e-06, 8.1658e-06],
        [1.1623e-05, 7.4625e-05],
        [1.7881e-07, 1.7703e-05],
        [1.9908e-05, 7.3910e-06],
        [3.5167e-05, 2.4021e-05],
        [5.1856e-06, 7.0333e-05],
        [3.5822e-05, 2.0564e-05],
        [1.5497e-06, 5.1022e-05],
        [1.4663e-05, 1.1325e-05],
        [1.5616e-05, 2.0981e-05],
        [7.0333e-06, 8.4698e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0714, 0.0502],
        [0.0446, 0.0803],
        [0.0443, 0.0808],
        [0.1024, 0.0350],
        [0.0438, 0.0818],
        [0.0745, 0.0481],
        [0.0492, 0.0729],
        [0.0434, 0.0826],
        [0.0891, 0.0402],
        [0.0779, 0.0460],
        [0.0460, 0.0779],
        [0.0811, 0.0442],
        [0.0443, 0.0810],
        [0.0756, 0.0474],
        [0.0659, 0.0544],
        [0.0464, 0.0772]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.337983
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-05, 1.3113e-05],
        [4.1723e-07, 1.3173e-05],
        [2.4557e-05, 2.3961e-05],
        [3.8743e-06, 7.9811e-05],
        [3.5763e-07, 2.5332e-05],
        [3.7134e-05, 3.4034e-05],
        [3.4571e-06, 4.7684e-07],
        [1.1384e-05, 8.6427e-06],
        [1.9073e-05, 1.2636e-05],
        [2.8729e-05, 2.4199e-05],
        [6.1989e-06, 7.9572e-05],
        [2.2650e-05, 1.2815e-05],
        [1.4305e-06, 5.3346e-05],
        [1.2755e-05, 5.3644e-06],
        [1.9014e-05, 1.4842e-05],
        [1.9491e-05, 1.2457e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0680, 0.0532],
        [0.0404, 0.0895],
        [0.0650, 0.0556],
        [0.0411, 0.0881],
        [0.0398, 0.0910],
        [0.0661, 0.0548],
        [0.0944, 0.0383],
        [0.0692, 0.0523],
        [0.0716, 0.0506],
        [0.0675, 0.0536],
        [0.0422, 0.0859],
        [0.0743, 0.0487],
        [0.0403, 0.0899],
        [0.0793, 0.0457],
        [0.0688, 0.0526],
        [0.0722, 0.0501]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.366066
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0087e-05, 9.4771e-06],
        [2.7418e-05, 1.4126e-05],
        [1.2815e-05, 1.6212e-05],
        [9.7156e-06, 1.2481e-04],
        [2.4259e-05, 2.6464e-05],
        [2.8014e-06, 5.7459e-05],
        [5.3644e-07, 3.1233e-05],
        [1.3292e-05, 8.6606e-05],
        [3.3379e-06, 6.0380e-05],
        [2.5630e-06, 5.5492e-05],
        [3.1531e-05, 2.1338e-05],
        [1.5974e-05, 8.2850e-06],
        [4.7684e-07, 2.5332e-05],
        [5.9605e-07, 1.4365e-05],
        [5.9605e-06, 9.4056e-05],
        [2.1458e-06, 6.5029e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0924, 0.0394],
        [0.0906, 0.0402],
        [0.0728, 0.0500],
        [0.0503, 0.0724],
        [0.0755, 0.0482],
        [0.0491, 0.0742],
        [0.0476, 0.0765],
        [0.0535, 0.0681],
        [0.0493, 0.0738],
        [0.0489, 0.0744],
        [0.0850, 0.0428],
        [0.0905, 0.0403],
        [0.0477, 0.0763],
        [0.0487, 0.0747],
        [0.0497, 0.0733],
        [0.0483, 0.0753]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.429869
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.4484e-05, 1.0908e-05],
        [2.9802e-06, 6.0022e-05],
        [5.1856e-06, 9.1553e-05],
        [1.8597e-05, 1.4603e-05],
        [2.3544e-05, 1.8477e-05],
        [3.5346e-05, 3.2663e-05],
        [2.6226e-06, 4.1723e-07],
        [1.4305e-06, 4.2140e-05],
        [1.5438e-05, 2.5868e-05],
        [2.9206e-06, 5.9843e-05],
        [6.6757e-06, 9.5904e-05],
        [2.0266e-05, 1.2696e-05],
        [1.8954e-05, 1.0252e-05],
        [9.2387e-06, 4.2915e-06],
        [1.8239e-05, 2.3246e-05],
        [8.9407e-07, 3.9041e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0727, 0.0497],
        [0.0431, 0.0839],
        [0.0433, 0.0834],
        [0.0719, 0.0503],
        [0.0719, 0.0503],
        [0.0691, 0.0523],
        [0.0973, 0.0371],
        [0.0424, 0.0852],
        [0.0597, 0.0606],
        [0.0430, 0.0840],
        [0.0438, 0.0825],
        [0.0760, 0.0476],
        [0.0786, 0.0460],
        [0.0813, 0.0445],
        [0.0638, 0.0567],
        [0.0420, 0.0861]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.411741
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4080e-05, 6.8605e-05],
        [2.9206e-06, 7.2539e-05],
        [7.1526e-07, 4.1306e-05],
        [1.7285e-05, 1.1325e-05],
        [2.5988e-05, 7.1764e-05],
        [1.5199e-05, 1.6212e-05],
        [1.2279e-05, 9.5367e-06],
        [1.8001e-05, 1.2398e-05],
        [2.3127e-05, 1.0192e-05],
        [8.5831e-06, 6.1989e-06],
        [1.3709e-06, 5.8413e-05],
        [1.3113e-06, 4.8399e-05],
        [2.7835e-05, 3.1054e-05],
        [1.3113e-06, 4.5359e-05],
        [1.7881e-06, 2.9802e-07],
        [1.8239e-05, 1.7822e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0537, 0.0676],
        [0.0430, 0.0844],
        [0.0421, 0.0862],
        [0.0757, 0.0479],
        [0.0540, 0.0672],
        [0.0672, 0.0541],
        [0.0727, 0.0500],
        [0.0748, 0.0485],
        [0.0829, 0.0438],
        [0.0740, 0.0491],
        [0.0424, 0.0857],
        [0.0425, 0.0854],
        [0.0664, 0.0547],
        [0.0426, 0.0853],
        [0.0975, 0.0372],
        [0.0686, 0.0529]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.346291
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[1.0133e-06, 3.0458e-05],
        [3.5763e-07, 2.4080e-05],
        [3.8147e-06, 5.3644e-07],
        [1.3947e-05, 7.0333e-06],
        [1.4842e-05, 1.0192e-05],
        [8.9407e-07, 4.3273e-05],
        [2.3842e-07, 2.1458e-05],
        [1.3709e-06, 4.7207e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0917, 0.1518],
        [0.0901, 0.1545],
        [0.2133, 0.0652],
        [0.1726, 0.0806],
        [0.1606, 0.0867],
        [0.0906, 0.1536],
        [0.0898, 0.1551],
        [0.0913, 0.1524]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.217277
acc:  0.955
Time taken to execute the en SA task with prompt type identical_modal, variation 8 and batchsize 16: 0:00:04.914327
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_8']
probs_ shape 2 torch.Size([1, 1])
probs_ shape 2 torch.Size([1, 1])
answers_probs before norm: tensor([[5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06],
        [5.9009e-06, 8.5831e-06]], device='cuda:0') torch.Size([104, 2])
answers_probs just softmax dim 0: tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
tensor([[0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096],
        [0.0096, 0.0096]], device='cuda:0')
----------- 42 en bigscience/bloomz-7b1-mt SA identical_modal 9 200 16 --------------
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.6822e-05, 1.2457e-05],
        [4.1723e-07, 3.0875e-05],
        [1.8895e-05, 2.7239e-05],
        [0.0000e+00, 2.5630e-06],
        [1.6391e-05, 1.7703e-05],
        [5.3644e-07, 4.2140e-05],
        [2.7597e-05, 1.6093e-05],
        [2.9624e-05, 1.6510e-05],
        [2.3842e-07, 1.9729e-05],
        [1.2279e-05, 1.0312e-05],
        [3.3975e-06, 8.8215e-05],
        [5.3644e-07, 4.5180e-05],
        [2.6226e-06, 7.7367e-05],
        [2.5570e-05, 2.3246e-05],
        [4.7684e-07, 2.2769e-05],
        [1.6093e-06, 4.8220e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0922, 0.0393],
        [0.0472, 0.0768],
        [0.0702, 0.0517],
        [0.0466, 0.0778],
        [0.0753, 0.0481],
        [0.0472, 0.0769],
        [0.0876, 0.0414],
        [0.0885, 0.0410],
        [0.0471, 0.0769],
        [0.0802, 0.0452],
        [0.0483, 0.0750],
        [0.0471, 0.0769],
        [0.0481, 0.0753],
        [0.0786, 0.0461],
        [0.0475, 0.0763],
        [0.0481, 0.0754]], device='cuda:0')
 Batch: 0 of identical_modal classification Duration: 0:00:00.352425
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6868e-05, 1.2636e-05],
        [7.1526e-07, 3.2008e-05],
        [4.1723e-07, 3.8207e-05],
        [2.5749e-05, 6.8367e-05],
        [1.4722e-05, 6.4969e-06],
        [2.8610e-06, 6.3956e-05],
        [3.7551e-06, 1.0067e-04],
        [1.7703e-05, 1.4305e-05],
        [4.4107e-06, 8.9407e-07],
        [1.3113e-06, 7.2718e-05],
        [7.7486e-07, 3.4392e-05],
        [5.3048e-06, 9.5963e-05],
        [1.8895e-05, 1.9014e-05],
        [1.4782e-05, 1.3351e-05],
        [2.3246e-06, 7.4208e-05],
        [2.1279e-05, 8.5592e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0808, 0.0447],
        [0.0466, 0.0775],
        [0.0461, 0.0784],
        [0.0600, 0.0603],
        [0.0913, 0.0396],
        [0.0476, 0.0759],
        [0.0473, 0.0764],
        [0.0793, 0.0456],
        [0.1048, 0.0345],
        [0.0464, 0.0778],
        [0.0466, 0.0775],
        [0.0481, 0.0752],
        [0.0751, 0.0481],
        [0.0772, 0.0468],
        [0.0470, 0.0768],
        [0.0557, 0.0649]], device='cuda:0')
 Batch: 1 of identical_modal classification Duration: 0:00:00.436472
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.2994e-05, 1.0085e-04],
        [2.7180e-05, 1.6570e-05],
        [4.3273e-05, 2.7955e-05],
        [3.7551e-06, 5.3644e-07],
        [1.0967e-05, 8.2850e-06],
        [9.5367e-07, 3.4750e-05],
        [2.9802e-07, 2.8074e-05],
        [1.1504e-05, 9.2626e-05],
        [3.6001e-05, 2.1994e-05],
        [1.0133e-06, 4.6432e-05],
        [3.8147e-05, 1.9670e-05],
        [1.7881e-05, 1.4365e-05],
        [1.4246e-05, 1.6391e-05],
        [3.2663e-05, 6.4909e-05],
        [2.3782e-05, 1.5736e-05],
        [1.3113e-06, 5.5373e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0457, 0.0790],
        [0.0759, 0.0476],
        [0.0748, 0.0482],
        [0.0978, 0.0369],
        [0.0720, 0.0501],
        [0.0419, 0.0862],
        [0.0412, 0.0876],
        [0.0455, 0.0793],
        [0.0758, 0.0476],
        [0.0416, 0.0867],
        [0.0788, 0.0458],
        [0.0710, 0.0509],
        [0.0649, 0.0556],
        [0.0570, 0.0634],
        [0.0744, 0.0485],
        [0.0417, 0.0865]], device='cuda:0')
 Batch: 2 of identical_modal classification Duration: 0:00:00.368515
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.0133e-06, 5.2869e-05],
        [7.6294e-06, 9.5248e-05],
        [4.1723e-07, 2.5988e-05],
        [8.9407e-07, 5.0724e-05],
        [2.0981e-05, 1.4424e-05],
        [2.2233e-05, 1.3590e-05],
        [7.7486e-07, 4.3094e-05],
        [2.1458e-06, 3.5763e-07],
        [3.5763e-07, 1.3411e-05],
        [1.9073e-06, 5.8889e-05],
        [1.1325e-06, 4.6253e-05],
        [2.0087e-05, 3.3319e-05],
        [1.6153e-05, 7.3910e-06],
        [3.4630e-05, 2.2531e-05],
        [5.9605e-07, 2.7597e-05],
        [6.5565e-07, 4.0531e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0472, 0.0755],
        [0.0499, 0.0715],
        [0.0471, 0.0758],
        [0.0472, 0.0756],
        [0.0839, 0.0426],
        [0.0862, 0.0414],
        [0.0472, 0.0756],
        [0.1093, 0.0327],
        [0.0476, 0.0750],
        [0.0478, 0.0746],
        [0.0475, 0.0751],
        [0.0675, 0.0528],
        [0.0921, 0.0388],
        [0.0850, 0.0420],
        [0.0474, 0.0754],
        [0.0471, 0.0757]], device='cuda:0')
 Batch: 3 of identical_modal classification Duration: 0:00:00.342198
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.4617e-05, 2.0921e-05],
        [4.7088e-06, 1.0014e-04],
        [2.3425e-05, 3.1233e-05],
        [3.1590e-06, 7.0274e-05],
        [2.6524e-05, 8.6308e-05],
        [5.1975e-05, 3.6001e-05],
        [5.9605e-07, 5.3406e-05],
        [5.3644e-07, 3.1829e-05],
        [2.2650e-06, 4.0412e-05],
        [2.6822e-06, 7.7903e-05],
        [3.4988e-05, 2.3305e-05],
        [3.7551e-06, 5.3644e-07],
        [3.9339e-05, 2.7716e-05],
        [2.3901e-05, 1.9193e-05],
        [2.4438e-06, 5.3227e-05],
        [3.0756e-05, 2.4915e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0744, 0.0485],
        [0.0453, 0.0796],
        [0.0665, 0.0542],
        [0.0452, 0.0798],
        [0.0548, 0.0658],
        [0.0783, 0.0461],
        [0.0438, 0.0824],
        [0.0441, 0.0819],
        [0.0457, 0.0790],
        [0.0448, 0.0805],
        [0.0790, 0.0457],
        [0.1040, 0.0347],
        [0.0779, 0.0463],
        [0.0755, 0.0478],
        [0.0453, 0.0797],
        [0.0753, 0.0479]], device='cuda:0')
 Batch: 4 of identical_modal classification Duration: 0:00:00.409682
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[8.9407e-07, 1.3471e-05],
        [1.3709e-06, 9.4831e-05],
        [4.5300e-06, 7.5042e-05],
        [2.4557e-05, 1.1981e-05],
        [5.0068e-06, 7.7963e-05],
        [8.3447e-07, 4.7147e-05],
        [2.0862e-06, 7.4506e-05],
        [3.8147e-06, 9.2566e-05],
        [2.0862e-06, 8.5115e-05],
        [7.1526e-07, 3.6001e-05],
        [3.6478e-05, 2.6464e-05],
        [2.5809e-05, 3.0398e-05],
        [2.0802e-05, 4.3750e-05],
        [1.2517e-06, 4.3094e-05],
        [1.7285e-06, 7.5638e-05],
        [4.5300e-06, 7.4267e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0556, 0.0671],
        [0.0530, 0.0704],
        [0.0553, 0.0674],
        [0.1023, 0.0365],
        [0.0555, 0.0672],
        [0.0531, 0.0702],
        [0.0537, 0.0695],
        [0.0543, 0.0686],
        [0.0535, 0.0697],
        [0.0533, 0.0700],
        [0.0932, 0.0400],
        [0.0827, 0.0451],
        [0.0721, 0.0517],
        [0.0537, 0.0694],
        [0.0534, 0.0698],
        [0.0553, 0.0674]], device='cuda:0')
 Batch: 5 of identical_modal classification Duration: 0:00:00.319531
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[1.6093e-06, 5.9366e-05],
        [3.2187e-05, 2.6464e-05],
        [6.6757e-06, 1.1426e-04],
        [5.9605e-07, 1.6630e-05],
        [1.6093e-05, 1.3113e-05],
        [4.4107e-06, 8.8513e-05],
        [5.0664e-05, 4.4703e-05],
        [2.4736e-05, 1.1981e-05],
        [1.5140e-05, 1.1623e-05],
        [1.3649e-05, 5.9009e-06],
        [1.1265e-05, 5.0664e-06],
        [1.9670e-06, 5.2929e-05],
        [1.6093e-06, 5.7817e-05],
        [2.0504e-05, 1.3649e-05],
        [4.1723e-07, 2.5868e-05],
        [1.7285e-06, 6.6161e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0447, 0.0805],
        [0.0753, 0.0477],
        [0.0460, 0.0782],
        [0.0450, 0.0798],
        [0.0755, 0.0476],
        [0.0456, 0.0788],
        [0.0740, 0.0486],
        [0.0853, 0.0421],
        [0.0766, 0.0469],
        [0.0874, 0.0411],
        [0.0867, 0.0414],
        [0.0451, 0.0797],
        [0.0447, 0.0804],
        [0.0793, 0.0453],
        [0.0442, 0.0813],
        [0.0446, 0.0805]], device='cuda:0')
 Batch: 6 of identical_modal classification Duration: 0:00:00.432964
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.9802e-07, 2.7120e-05],
        [1.7881e-05, 8.5831e-06],
        [2.3305e-05, 1.3828e-05],
        [1.6093e-06, 5.3883e-05],
        [1.0490e-05, 4.5896e-06],
        [2.4617e-05, 1.6034e-05],
        [8.3447e-07, 3.2961e-05],
        [1.0729e-05, 7.8082e-06],
        [4.1723e-07, 7.2122e-06],
        [1.2100e-05, 7.0035e-05],
        [1.4961e-05, 1.7643e-05],
        [3.8743e-06, 8.4639e-05],
        [4.0650e-05, 3.7909e-05],
        [1.6510e-05, 1.1206e-05],
        [3.3975e-06, 7.8917e-05],
        [3.4511e-05, 3.3438e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0429, 0.0846],
        [0.0834, 0.0435],
        [0.0795, 0.0457],
        [0.0437, 0.0831],
        [0.0851, 0.0427],
        [0.0778, 0.0467],
        [0.0435, 0.0834],
        [0.0757, 0.0479],
        [0.0448, 0.0810],
        [0.0492, 0.0738],
        [0.0672, 0.0541],
        [0.0443, 0.0819],
        [0.0712, 0.0510],
        [0.0770, 0.0471],
        [0.0442, 0.0821],
        [0.0705, 0.0515]], device='cuda:0')
 Batch: 7 of identical_modal classification Duration: 0:00:00.551759
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.3842e-07, 2.4915e-05],
        [2.0444e-05, 1.0967e-05],
        [1.2517e-06, 3.8564e-05],
        [2.3842e-05, 3.4153e-05],
        [2.1935e-05, 1.9550e-05],
        [2.4796e-05, 1.9014e-05],
        [4.2915e-05, 4.1902e-05],
        [2.7418e-06, 8.4341e-05],
        [1.9312e-05, 1.5020e-05],
        [1.7881e-07, 2.1756e-05],
        [1.3351e-05, 1.0729e-05],
        [3.0816e-05, 9.0480e-05],
        [2.9802e-07, 7.8082e-06],
        [9.5367e-07, 4.9055e-05],
        [3.7909e-05, 2.4080e-05],
        [3.3796e-05, 1.6749e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0434, 0.0841],
        [0.0824, 0.0443],
        [0.0444, 0.0822],
        [0.0649, 0.0563],
        [0.0729, 0.0500],
        [0.0757, 0.0482],
        [0.0713, 0.0512],
        [0.0444, 0.0822],
        [0.0755, 0.0483],
        [0.0433, 0.0842],
        [0.0748, 0.0487],
        [0.0554, 0.0658],
        [0.0446, 0.0818],
        [0.0438, 0.0833],
        [0.0792, 0.0460],
        [0.0839, 0.0435]], device='cuda:0')
 Batch: 8 of identical_modal classification Duration: 0:00:00.373828
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.0325e-05, 2.2829e-05],
        [2.4974e-05, 7.3910e-06],
        [4.1127e-06, 6.8367e-05],
        [2.5630e-06, 8.3387e-05],
        [1.7762e-05, 6.3181e-06],
        [3.6359e-06, 6.9022e-05],
        [2.2888e-05, 2.0087e-05],
        [1.7285e-06, 4.6492e-05],
        [3.1114e-05, 2.6405e-05],
        [2.7359e-05, 3.2187e-05],
        [1.2517e-06, 6.2346e-05],
        [3.5763e-07, 1.0431e-05],
        [1.5020e-05, 1.3590e-05],
        [3.1710e-05, 3.9160e-05],
        [2.0862e-06, 4.8757e-05],
        [6.1989e-06, 9.6679e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0713, 0.0509],
        [0.0964, 0.0377],
        [0.0471, 0.0770],
        [0.0459, 0.0791],
        [0.0931, 0.0390],
        [0.0468, 0.0775],
        [0.0759, 0.0478],
        [0.0462, 0.0786],
        [0.0765, 0.0474],
        [0.0705, 0.0514],
        [0.0454, 0.0799],
        [0.0460, 0.0788],
        [0.0753, 0.0482],
        [0.0697, 0.0521],
        [0.0464, 0.0782],
        [0.0473, 0.0767]], device='cuda:0')
 Batch: 9 of identical_modal classification Duration: 0:00:00.292542
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[6.0797e-06, 1.2100e-04],
        [1.2517e-06, 3.6716e-05],
        [2.8729e-05, 2.6762e-05],
        [3.6359e-06, 5.8174e-05],
        [6.8545e-06, 9.8705e-05],
        [1.4782e-05, 2.0027e-05],
        [4.0531e-06, 6.5982e-05],
        [2.9087e-05, 1.8358e-05],
        [3.0577e-05, 3.6299e-05],
        [1.9073e-06, 3.8087e-05],
        [5.6028e-06, 9.5010e-05],
        [2.6107e-05, 2.4557e-05],
        [3.2783e-06, 5.3644e-07],
        [1.5497e-05, 7.0930e-06],
        [6.5565e-07, 3.8028e-05],
        [4.0054e-05, 6.4015e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0466, 0.0778],
        [0.0459, 0.0789],
        [0.0745, 0.0486],
        [0.0471, 0.0769],
        [0.0474, 0.0765],
        [0.0679, 0.0534],
        [0.0471, 0.0770],
        [0.0820, 0.0442],
        [0.0702, 0.0516],
        [0.0466, 0.0778],
        [0.0470, 0.0772],
        [0.0743, 0.0487],
        [0.1049, 0.0345],
        [0.0882, 0.0411],
        [0.0452, 0.0802],
        [0.0653, 0.0555]], device='cuda:0')
 Batch: 10 of identical_modal classification Duration: 0:00:00.417841
probs_ shape 2 torch.Size([1, 16])
probs_ shape 2 torch.Size([1, 16])
answers_probs before norm: tensor([[2.8849e-05, 3.2663e-05],
        [1.4186e-05, 1.2362e-04],
        [1.5974e-05, 2.2888e-05],
        [1.1325e-06, 4.8697e-05],
        [4.1544e-05, 5.2512e-05],
        [1.4901e-06, 5.3644e-05],
        [2.0385e-05, 2.1398e-05],
        [1.0729e-06, 4.0233e-05],
        [1.9193e-05, 1.7583e-05],
        [2.0564e-05, 1.5557e-05],
        [2.4617e-05, 1.4484e-05],
        [2.9802e-06, 3.5763e-07],
        [3.3975e-06, 7.9691e-05],
        [1.9014e-05, 1.3173e-05],
        [3.4988e-05, 3.4690e-05],
        [3.4094e-05, 3.3319e-05]], device='cuda:0') torch.Size([16, 2])
answers_probs just softmax dim 0: tensor([[0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625],
        [0.0625, 0.0625]], device='cuda:0')
tensor([[0.0655, 0.0559],
        [0.0454, 0.0806],
        [0.0618, 0.0592],
        [0.0419, 0.0873],
        [0.0637, 0.0574],
        [0.0421, 0.0869],
        [0.0667, 0.0548],
        [0.0421, 0.0870],
        [0.0691, 0.0530],
        [0.0724, 0.0505],
        [0.0769, 0.0476],
        [0.1001, 0.0366],
        [0.0427, 0.0857],
        [0.0740, 0.0495],
        [0.0677, 0.0541],
        [0.0679, 0.0539]], device='cuda:0')
 Batch: 11 of identical_modal classification Duration: 0:00:00.451702
probs_ shape 2 torch.Size([1, 8])
probs_ shape 2 torch.Size([1, 8])
answers_probs before norm: tensor([[5.0664e-06, 7.7784e-05],
        [2.3842e-05, 9.0599e-06],
        [2.4438e-06, 1.4961e-05],
        [2.7239e-05, 4.2558e-05],
        [1.7166e-05, 2.4438e-05],
        [2.0862e-06, 7.0870e-05],
        [3.0279e-05, 4.9889e-05],
        [2.6584e-05, 2.2352e-05]], device='cuda:0') torch.Size([8, 2])
answers_probs just softmax dim 0: tensor([[0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250],
        [0.1250, 0.1250]], device='cuda:0')
tensor([[0.0926, 0.1602],
        [0.1799, 0.0825],
        [0.1003, 0.1480],
        [0.1287, 0.1153],
        [0.1317, 0.1127],
        [0.0897, 0.1655],
        [0.1271, 0.1167],
        [0.1500, 0.0989]], device='cuda:0')
 Batch: 12 of identical_modal classification Duration: 0:00:00.194233
acc:  0.96
Time taken to execute the en SA task with prompt type identical_modal, variation 9 and batchsize 16: 0:00:04.964850
path ['42', 'en', 'bloomz-mt', 'SA', 'identical_modal', 'prompt_id_9']
Dictionary saved to './ATCS_group3/saved_outputs/logits_dict_seed_42_lang_en_v74.pickle' as a pickle file.

Loading model bloom-big
big model to load
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:06<00:06,  6.59s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:09<00:00,  4.31s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:09<00:00,  4.65s/it]
Model bigscience/bloom-7b1 loaded
Available device is cuda
Traceback (most recent call last):
  File "/home/lcur1101/ATCS_group3/src/main.py", line 197, in <module>
    pipeline(seed, lang, models, tasks, prompt_types, prompt_templates,
  File "/home/lcur1101/ATCS_group3/src/main.py", line 125, in pipeline
    LM = Model(LM_model, train_dataloader.possible_answers)
  File "/home/lcur1101/ATCS_group3/src/models/model.py", line 50, in __init__
    self.model = self.model.cuda()
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 905, in cuda
    return self._apply(lambda t: t.cuda(device))
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 797, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 820, in _apply
    param_applied = fn(param)
  File "/home/lcur1101/.conda/envs/dl2022/lib/python3.10/site-packages/torch/nn/modules/module.py", line 905, in <lambda>
    return self._apply(lambda t: t.cuda(device))
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 128.00 MiB (GPU 0; 23.65 GiB total capacity; 22.72 GiB already allocated; 39.56 MiB free; 22.87 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
srun: error: r28n5: task 0: Exited with exit code 1
